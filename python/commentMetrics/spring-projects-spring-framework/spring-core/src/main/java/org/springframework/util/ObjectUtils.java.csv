# id;timestamp;commentText;codeText;commentWords;codeWords
ObjectUtils -> public static String nullSafeToString(long[] array);1328020251;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces (<code>"{}"</code>). Adjacent elements are separated_by the characters <code>", "</code> (a comma followed by a space). Returns_<code>"null"</code> if <code>array</code> is <code>null</code>._@param array the array to build a String representation for_@return a String representation of <code>array</code>;public static String nullSafeToString(long[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,code,adjacent,elements,are,separated,by,the,characters,code,code,a,comma,followed,by,a,space,returns,code,null,code,if,code,array,code,is,code,null,code,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array,code;public,static,string,null,safe,to,string,long,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(long[] array);1356735495;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(long[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,long,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(long[] array);1362408075;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(long[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,long,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(long[] array);1385412762;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(long[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,long,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(long[] array);1389796508;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(long[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,long,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(long[] array);1389798571;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(long[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,long,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(long[] array);1405696918;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(long[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,long,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(long[] array);1434129562;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(long[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,long,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(long[] array);1465504808;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(long[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,long,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(long[] array);1467677340;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(long[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,long,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(long[] array);1491319010;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(long[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,long,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static int hashCode(double dbl);1328020251;Return the same value as <code>{@link Double#hashCode()}</code>._@see Double#hashCode();public static int hashCode(double dbl) {_		long bits = Double.doubleToLongBits(dbl)__		return hashCode(bits)__	};return,the,same,value,as,code,link,double,hash,code,code,see,double,hash,code;public,static,int,hash,code,double,dbl,long,bits,double,double,to,long,bits,dbl,return,hash,code,bits
ObjectUtils -> public static int hashCode(double dbl);1356735495;Return the same value as {@code {@link Double#hashCode()}}._@see Double#hashCode();public static int hashCode(double dbl) {_		long bits = Double.doubleToLongBits(dbl)__		return hashCode(bits)__	};return,the,same,value,as,code,link,double,hash,code,see,double,hash,code;public,static,int,hash,code,double,dbl,long,bits,double,double,to,long,bits,dbl,return,hash,code,bits
ObjectUtils -> public static int hashCode(double dbl);1362408075;Return the same value as {@link Double#hashCode()}}._@see Double#hashCode();public static int hashCode(double dbl) {_		long bits = Double.doubleToLongBits(dbl)__		return hashCode(bits)__	};return,the,same,value,as,link,double,hash,code,see,double,hash,code;public,static,int,hash,code,double,dbl,long,bits,double,double,to,long,bits,dbl,return,hash,code,bits
ObjectUtils -> public static int hashCode(double dbl);1385412762;Return the same value as {@link Double#hashCode()}}._@see Double#hashCode();public static int hashCode(double dbl) {_		long bits = Double.doubleToLongBits(dbl)__		return hashCode(bits)__	};return,the,same,value,as,link,double,hash,code,see,double,hash,code;public,static,int,hash,code,double,dbl,long,bits,double,double,to,long,bits,dbl,return,hash,code,bits
ObjectUtils -> public static int hashCode(double dbl);1389796508;Return the same value as {@link Double#hashCode()}}._@see Double#hashCode();public static int hashCode(double dbl) {_		return hashCode(Double.doubleToLongBits(dbl))__	};return,the,same,value,as,link,double,hash,code,see,double,hash,code;public,static,int,hash,code,double,dbl,return,hash,code,double,double,to,long,bits,dbl
ObjectUtils -> public static int hashCode(double dbl);1389798571;Return the same value as {@link Double#hashCode()}}._@see Double#hashCode();public static int hashCode(double dbl) {_		return hashCode(Double.doubleToLongBits(dbl))__	};return,the,same,value,as,link,double,hash,code,see,double,hash,code;public,static,int,hash,code,double,dbl,return,hash,code,double,double,to,long,bits,dbl
ObjectUtils -> public static int hashCode(double dbl);1405696918;Return the same value as {@link Double#hashCode()}}._@see Double#hashCode();public static int hashCode(double dbl) {_		return hashCode(Double.doubleToLongBits(dbl))__	};return,the,same,value,as,link,double,hash,code,see,double,hash,code;public,static,int,hash,code,double,dbl,return,hash,code,double,double,to,long,bits,dbl
ObjectUtils -> public static int hashCode(double dbl);1434129562;Return the same value as {@link Double#hashCode()}}._@see Double#hashCode();public static int hashCode(double dbl) {_		return hashCode(Double.doubleToLongBits(dbl))__	};return,the,same,value,as,link,double,hash,code,see,double,hash,code;public,static,int,hash,code,double,dbl,return,hash,code,double,double,to,long,bits,dbl
ObjectUtils -> public static int hashCode(double dbl);1465504808;Return the same value as {@link Double#hashCode()}}._@see Double#hashCode();public static int hashCode(double dbl) {_		return hashCode(Double.doubleToLongBits(dbl))__	};return,the,same,value,as,link,double,hash,code,see,double,hash,code;public,static,int,hash,code,double,dbl,return,hash,code,double,double,to,long,bits,dbl
ObjectUtils -> public static int hashCode(double dbl);1467677340;Return the same value as {@link Double#hashCode()}}._@see Double#hashCode();public static int hashCode(double dbl) {_		return hashCode(Double.doubleToLongBits(dbl))__	};return,the,same,value,as,link,double,hash,code,see,double,hash,code;public,static,int,hash,code,double,dbl,return,hash,code,double,double,to,long,bits,dbl
ObjectUtils -> public static String identityToString(@Nullable Object obj);1495868221;Return a String representation of an object's overall identity._@param obj the object (may be {@code null})_@return the object's identity as String representation,_or an empty String if the object was {@code null};public static String identityToString(@Nullable Object obj) {_		if (obj == null) {_			return EMPTY_STRING__		}_		return obj.getClass().getName() + "@" + getIdentityHexString(obj)__	};return,a,string,representation,of,an,object,s,overall,identity,param,obj,the,object,may,be,code,null,return,the,object,s,identity,as,string,representation,or,an,empty,string,if,the,object,was,code,null;public,static,string,identity,to,string,nullable,object,obj,if,obj,null,return,return,obj,get,class,get,name,get,identity,hex,string,obj
ObjectUtils -> public static String identityToString(@Nullable Object obj);1496837955;Return a String representation of an object's overall identity._@param obj the object (may be {@code null})_@return the object's identity as String representation,_or an empty String if the object was {@code null};public static String identityToString(@Nullable Object obj) {_		if (obj == null) {_			return EMPTY_STRING__		}_		return obj.getClass().getName() + "@" + getIdentityHexString(obj)__	};return,a,string,representation,of,an,object,s,overall,identity,param,obj,the,object,may,be,code,null,return,the,object,s,identity,as,string,representation,or,an,empty,string,if,the,object,was,code,null;public,static,string,identity,to,string,nullable,object,obj,if,obj,null,return,return,obj,get,class,get,name,get,identity,hex,string,obj
ObjectUtils -> public static String identityToString(@Nullable Object obj);1505924929;Return a String representation of an object's overall identity._@param obj the object (may be {@code null})_@return the object's identity as String representation,_or an empty String if the object was {@code null};public static String identityToString(@Nullable Object obj) {_		if (obj == null) {_			return EMPTY_STRING__		}_		return obj.getClass().getName() + "@" + getIdentityHexString(obj)__	};return,a,string,representation,of,an,object,s,overall,identity,param,obj,the,object,may,be,code,null,return,the,object,s,identity,as,string,representation,or,an,empty,string,if,the,object,was,code,null;public,static,string,identity,to,string,nullable,object,obj,if,obj,null,return,return,obj,get,class,get,name,get,identity,hex,string,obj
ObjectUtils -> public static String identityToString(@Nullable Object obj);1538724083;Return a String representation of an object's overall identity._@param obj the object (may be {@code null})_@return the object's identity as String representation,_or an empty String if the object was {@code null};public static String identityToString(@Nullable Object obj) {_		if (obj == null) {_			return EMPTY_STRING__		}_		return obj.getClass().getName() + "@" + getIdentityHexString(obj)__	};return,a,string,representation,of,an,object,s,overall,identity,param,obj,the,object,may,be,code,null,return,the,object,s,identity,as,string,representation,or,an,empty,string,if,the,object,was,code,null;public,static,string,identity,to,string,nullable,object,obj,if,obj,null,return,return,obj,get,class,get,name,get,identity,hex,string,obj
ObjectUtils -> public static String identityToString(@Nullable Object obj);1542748004;Return a String representation of an object's overall identity._@param obj the object (may be {@code null})_@return the object's identity as String representation,_or an empty String if the object was {@code null};public static String identityToString(@Nullable Object obj) {_		if (obj == null) {_			return EMPTY_STRING__		}_		return obj.getClass().getName() + "@" + getIdentityHexString(obj)__	};return,a,string,representation,of,an,object,s,overall,identity,param,obj,the,object,may,be,code,null,return,the,object,s,identity,as,string,representation,or,an,empty,string,if,the,object,was,code,null;public,static,string,identity,to,string,nullable,object,obj,if,obj,null,return,return,obj,get,class,get,name,get,identity,hex,string,obj
ObjectUtils -> public static String getDisplayString(Object obj);1328020251;Return a content-based String representation if <code>obj</code> is_not <code>null</code>_ otherwise returns an empty String._<p>Differs from {@link #nullSafeToString(Object)} in that it returns_an empty String rather than "null" for a <code>null</code> value._@param obj the object to build a display String for_@return a display String representation of <code>obj</code>_@see #nullSafeToString(Object);public static String getDisplayString(Object obj) {_		if (obj == null) {_			return EMPTY_STRING__		}_		return nullSafeToString(obj)__	};return,a,content,based,string,representation,if,code,obj,code,is,not,code,null,code,otherwise,returns,an,empty,string,p,differs,from,link,null,safe,to,string,object,in,that,it,returns,an,empty,string,rather,than,null,for,a,code,null,code,value,param,obj,the,object,to,build,a,display,string,for,return,a,display,string,representation,of,code,obj,code,see,null,safe,to,string,object;public,static,string,get,display,string,object,obj,if,obj,null,return,return,null,safe,to,string,obj
ObjectUtils -> public static String getDisplayString(Object obj);1356735495;Return a content-based String representation if {@code obj} is_not {@code null}_ otherwise returns an empty String._<p>Differs from {@link #nullSafeToString(Object)} in that it returns_an empty String rather than "null" for a {@code null} value._@param obj the object to build a display String for_@return a display String representation of {@code obj}_@see #nullSafeToString(Object);public static String getDisplayString(Object obj) {_		if (obj == null) {_			return EMPTY_STRING__		}_		return nullSafeToString(obj)__	};return,a,content,based,string,representation,if,code,obj,is,not,code,null,otherwise,returns,an,empty,string,p,differs,from,link,null,safe,to,string,object,in,that,it,returns,an,empty,string,rather,than,null,for,a,code,null,value,param,obj,the,object,to,build,a,display,string,for,return,a,display,string,representation,of,code,obj,see,null,safe,to,string,object;public,static,string,get,display,string,object,obj,if,obj,null,return,return,null,safe,to,string,obj
ObjectUtils -> public static String getDisplayString(Object obj);1362408075;Return a content-based String representation if {@code obj} is_not {@code null}_ otherwise returns an empty String._<p>Differs from {@link #nullSafeToString(Object)} in that it returns_an empty String rather than "null" for a {@code null} value._@param obj the object to build a display String for_@return a display String representation of {@code obj}_@see #nullSafeToString(Object);public static String getDisplayString(Object obj) {_		if (obj == null) {_			return EMPTY_STRING__		}_		return nullSafeToString(obj)__	};return,a,content,based,string,representation,if,code,obj,is,not,code,null,otherwise,returns,an,empty,string,p,differs,from,link,null,safe,to,string,object,in,that,it,returns,an,empty,string,rather,than,null,for,a,code,null,value,param,obj,the,object,to,build,a,display,string,for,return,a,display,string,representation,of,code,obj,see,null,safe,to,string,object;public,static,string,get,display,string,object,obj,if,obj,null,return,return,null,safe,to,string,obj
ObjectUtils -> public static String getDisplayString(Object obj);1385412762;Return a content-based String representation if {@code obj} is_not {@code null}_ otherwise returns an empty String._<p>Differs from {@link #nullSafeToString(Object)} in that it returns_an empty String rather than "null" for a {@code null} value._@param obj the object to build a display String for_@return a display String representation of {@code obj}_@see #nullSafeToString(Object);public static String getDisplayString(Object obj) {_		if (obj == null) {_			return EMPTY_STRING__		}_		return nullSafeToString(obj)__	};return,a,content,based,string,representation,if,code,obj,is,not,code,null,otherwise,returns,an,empty,string,p,differs,from,link,null,safe,to,string,object,in,that,it,returns,an,empty,string,rather,than,null,for,a,code,null,value,param,obj,the,object,to,build,a,display,string,for,return,a,display,string,representation,of,code,obj,see,null,safe,to,string,object;public,static,string,get,display,string,object,obj,if,obj,null,return,return,null,safe,to,string,obj
ObjectUtils -> public static String getDisplayString(Object obj);1389796508;Return a content-based String representation if {@code obj} is_not {@code null}_ otherwise returns an empty String._<p>Differs from {@link #nullSafeToString(Object)} in that it returns_an empty String rather than "null" for a {@code null} value._@param obj the object to build a display String for_@return a display String representation of {@code obj}_@see #nullSafeToString(Object);public static String getDisplayString(Object obj) {_		if (obj == null) {_			return EMPTY_STRING__		}_		return nullSafeToString(obj)__	};return,a,content,based,string,representation,if,code,obj,is,not,code,null,otherwise,returns,an,empty,string,p,differs,from,link,null,safe,to,string,object,in,that,it,returns,an,empty,string,rather,than,null,for,a,code,null,value,param,obj,the,object,to,build,a,display,string,for,return,a,display,string,representation,of,code,obj,see,null,safe,to,string,object;public,static,string,get,display,string,object,obj,if,obj,null,return,return,null,safe,to,string,obj
ObjectUtils -> public static String getDisplayString(Object obj);1389798571;Return a content-based String representation if {@code obj} is_not {@code null}_ otherwise returns an empty String._<p>Differs from {@link #nullSafeToString(Object)} in that it returns_an empty String rather than "null" for a {@code null} value._@param obj the object to build a display String for_@return a display String representation of {@code obj}_@see #nullSafeToString(Object);public static String getDisplayString(Object obj) {_		if (obj == null) {_			return EMPTY_STRING__		}_		return nullSafeToString(obj)__	};return,a,content,based,string,representation,if,code,obj,is,not,code,null,otherwise,returns,an,empty,string,p,differs,from,link,null,safe,to,string,object,in,that,it,returns,an,empty,string,rather,than,null,for,a,code,null,value,param,obj,the,object,to,build,a,display,string,for,return,a,display,string,representation,of,code,obj,see,null,safe,to,string,object;public,static,string,get,display,string,object,obj,if,obj,null,return,return,null,safe,to,string,obj
ObjectUtils -> public static String getDisplayString(Object obj);1405696918;Return a content-based String representation if {@code obj} is_not {@code null}_ otherwise returns an empty String._<p>Differs from {@link #nullSafeToString(Object)} in that it returns_an empty String rather than "null" for a {@code null} value._@param obj the object to build a display String for_@return a display String representation of {@code obj}_@see #nullSafeToString(Object);public static String getDisplayString(Object obj) {_		if (obj == null) {_			return EMPTY_STRING__		}_		return nullSafeToString(obj)__	};return,a,content,based,string,representation,if,code,obj,is,not,code,null,otherwise,returns,an,empty,string,p,differs,from,link,null,safe,to,string,object,in,that,it,returns,an,empty,string,rather,than,null,for,a,code,null,value,param,obj,the,object,to,build,a,display,string,for,return,a,display,string,representation,of,code,obj,see,null,safe,to,string,object;public,static,string,get,display,string,object,obj,if,obj,null,return,return,null,safe,to,string,obj
ObjectUtils -> public static String getDisplayString(Object obj);1434129562;Return a content-based String representation if {@code obj} is_not {@code null}_ otherwise returns an empty String._<p>Differs from {@link #nullSafeToString(Object)} in that it returns_an empty String rather than "null" for a {@code null} value._@param obj the object to build a display String for_@return a display String representation of {@code obj}_@see #nullSafeToString(Object);public static String getDisplayString(Object obj) {_		if (obj == null) {_			return EMPTY_STRING__		}_		return nullSafeToString(obj)__	};return,a,content,based,string,representation,if,code,obj,is,not,code,null,otherwise,returns,an,empty,string,p,differs,from,link,null,safe,to,string,object,in,that,it,returns,an,empty,string,rather,than,null,for,a,code,null,value,param,obj,the,object,to,build,a,display,string,for,return,a,display,string,representation,of,code,obj,see,null,safe,to,string,object;public,static,string,get,display,string,object,obj,if,obj,null,return,return,null,safe,to,string,obj
ObjectUtils -> public static String getDisplayString(Object obj);1465504808;Return a content-based String representation if {@code obj} is_not {@code null}_ otherwise returns an empty String._<p>Differs from {@link #nullSafeToString(Object)} in that it returns_an empty String rather than "null" for a {@code null} value._@param obj the object to build a display String for_@return a display String representation of {@code obj}_@see #nullSafeToString(Object);public static String getDisplayString(Object obj) {_		if (obj == null) {_			return EMPTY_STRING__		}_		return nullSafeToString(obj)__	};return,a,content,based,string,representation,if,code,obj,is,not,code,null,otherwise,returns,an,empty,string,p,differs,from,link,null,safe,to,string,object,in,that,it,returns,an,empty,string,rather,than,null,for,a,code,null,value,param,obj,the,object,to,build,a,display,string,for,return,a,display,string,representation,of,code,obj,see,null,safe,to,string,object;public,static,string,get,display,string,object,obj,if,obj,null,return,return,null,safe,to,string,obj
ObjectUtils -> public static String getDisplayString(Object obj);1467677340;Return a content-based String representation if {@code obj} is_not {@code null}_ otherwise returns an empty String._<p>Differs from {@link #nullSafeToString(Object)} in that it returns_an empty String rather than "null" for a {@code null} value._@param obj the object to build a display String for_@return a display String representation of {@code obj}_@see #nullSafeToString(Object);public static String getDisplayString(Object obj) {_		if (obj == null) {_			return EMPTY_STRING__		}_		return nullSafeToString(obj)__	};return,a,content,based,string,representation,if,code,obj,is,not,code,null,otherwise,returns,an,empty,string,p,differs,from,link,null,safe,to,string,object,in,that,it,returns,an,empty,string,rather,than,null,for,a,code,null,value,param,obj,the,object,to,build,a,display,string,for,return,a,display,string,representation,of,code,obj,see,null,safe,to,string,object;public,static,string,get,display,string,object,obj,if,obj,null,return,return,null,safe,to,string,obj
ObjectUtils -> public static String getDisplayString(Object obj);1491319010;Return a content-based String representation if {@code obj} is_not {@code null}_ otherwise returns an empty String._<p>Differs from {@link #nullSafeToString(Object)} in that it returns_an empty String rather than "null" for a {@code null} value._@param obj the object to build a display String for_@return a display String representation of {@code obj}_@see #nullSafeToString(Object);public static String getDisplayString(Object obj) {_		if (obj == null) {_			return EMPTY_STRING__		}_		return nullSafeToString(obj)__	};return,a,content,based,string,representation,if,code,obj,is,not,code,null,otherwise,returns,an,empty,string,p,differs,from,link,null,safe,to,string,object,in,that,it,returns,an,empty,string,rather,than,null,for,a,code,null,value,param,obj,the,object,to,build,a,display,string,for,return,a,display,string,representation,of,code,obj,see,null,safe,to,string,object;public,static,string,get,display,string,object,obj,if,obj,null,return,return,null,safe,to,string,obj
ObjectUtils -> public static int nullSafeHashCode(@Nullable int[] array);1495868221;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable int[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (int element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,int,array,if,array,null,return,0,int,hash,for,int,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable int[] array);1496837955;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable int[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (int element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,int,array,if,array,null,return,0,int,hash,for,int,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable int[] array);1505924929;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable int[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (int element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,int,array,if,array,null,return,0,int,hash,for,int,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable int[] array);1538724083;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable int[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (int element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,int,array,if,array,null,return,0,int,hash,for,int,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable int[] array);1542748004;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable int[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (int element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,int,array,if,array,null,return,0,int,hash,for,int,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static <A, O extends A> A[] addObjectToArray(@Nullable A[] array, @Nullable O obj);1538724083;Append the given object to the given array, returning a new array_consisting of the input array contents plus the given object._@param array the array to append to (can be {@code null})_@param obj the object to append_@return the new array (of the same component type_ never {@code null});public static <A, O extends A> A[] addObjectToArray(@Nullable A[] array, @Nullable O obj) {_		Class<?> compType = Object.class__		if (array != null) {_			compType = array.getClass().getComponentType()__		}_		else if (obj != null) {_			compType = obj.getClass()__		}_		int newArrLength = (array != null ? array.length + 1 : 1)__		@SuppressWarnings("unchecked")_		A[] newArr = (A[]) Array.newInstance(compType, newArrLength)__		if (array != null) {_			System.arraycopy(array, 0, newArr, 0, array.length)__		}_		newArr[newArr.length - 1] = obj__		return newArr__	};append,the,given,object,to,the,given,array,returning,a,new,array,consisting,of,the,input,array,contents,plus,the,given,object,param,array,the,array,to,append,to,can,be,code,null,param,obj,the,object,to,append,return,the,new,array,of,the,same,component,type,never,code,null;public,static,a,o,extends,a,a,add,object,to,array,nullable,a,array,nullable,o,obj,class,comp,type,object,class,if,array,null,comp,type,array,get,class,get,component,type,else,if,obj,null,comp,type,obj,get,class,int,new,arr,length,array,null,array,length,1,1,suppress,warnings,unchecked,a,new,arr,a,array,new,instance,comp,type,new,arr,length,if,array,null,system,arraycopy,array,0,new,arr,0,array,length,new,arr,new,arr,length,1,obj,return,new,arr
ObjectUtils -> public static <A, O extends A> A[] addObjectToArray(@Nullable A[] array, @Nullable O obj);1542748004;Append the given object to the given array, returning a new array_consisting of the input array contents plus the given object._@param array the array to append to (can be {@code null})_@param obj the object to append_@return the new array (of the same component type_ never {@code null});public static <A, O extends A> A[] addObjectToArray(@Nullable A[] array, @Nullable O obj) {_		Class<?> compType = Object.class__		if (array != null) {_			compType = array.getClass().getComponentType()__		}_		else if (obj != null) {_			compType = obj.getClass()__		}_		int newArrLength = (array != null ? array.length + 1 : 1)__		@SuppressWarnings("unchecked")_		A[] newArr = (A[]) Array.newInstance(compType, newArrLength)__		if (array != null) {_			System.arraycopy(array, 0, newArr, 0, array.length)__		}_		newArr[newArr.length - 1] = obj__		return newArr__	};append,the,given,object,to,the,given,array,returning,a,new,array,consisting,of,the,input,array,contents,plus,the,given,object,param,array,the,array,to,append,to,can,be,code,null,param,obj,the,object,to,append,return,the,new,array,of,the,same,component,type,never,code,null;public,static,a,o,extends,a,a,add,object,to,array,nullable,a,array,nullable,o,obj,class,comp,type,object,class,if,array,null,comp,type,array,get,class,get,component,type,else,if,obj,null,comp,type,obj,get,class,int,new,arr,length,array,null,array,length,1,1,suppress,warnings,unchecked,a,new,arr,a,array,new,instance,comp,type,new,arr,length,if,array,null,system,arraycopy,array,0,new,arr,0,array,length,new,arr,new,arr,length,1,obj,return,new,arr
ObjectUtils -> public static String nullSafeToString(@Nullable boolean[] array);1495868221;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable boolean[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,boolean,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable boolean[] array);1496837955;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable boolean[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,boolean,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable boolean[] array);1505924929;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable boolean[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,boolean,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable boolean[] array);1538724083;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable boolean[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,boolean,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable boolean[] array);1542748004;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable boolean[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,boolean,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> @SuppressWarnings("rawtypes") 	public static boolean isEmpty(Object obj);1434129562;Determine whether the given object is empty._<p>This method supports the following object types._<ul>_<li>{@code Array}: considered empty if its length is zero</li>_<li>{@link CharSequence}: considered empty if its length is zero</li>_<li>{@link Collection}: delegates to {@link Collection#isEmpty()}</li>_<li>{@link Map}: delegates to {@link Map#isEmpty()}</li>_</ul>_<p>If the given object is non-null and not one of the aforementioned_supported types, this method returns {@code false}._@param obj the object to check_@return {@code true} if the object is {@code null} or <em>empty</em>_@since 4.2_@see ObjectUtils#isEmpty(Object[])_@see StringUtils#hasLength(CharSequence)_@see StringUtils#isEmpty(Object)_@see CollectionUtils#isEmpty(java.util.Collection)_@see CollectionUtils#isEmpty(java.util.Map);@SuppressWarnings("rawtypes")_	public static boolean isEmpty(Object obj) {_		if (obj == null) {_			return true__		}__		if (obj.getClass().isArray()) {_			return Array.getLength(obj) == 0__		}_		if (obj instanceof CharSequence) {_			return ((CharSequence) obj).length() == 0__		}_		if (obj instanceof Collection) {_			return ((Collection) obj).isEmpty()__		}_		if (obj instanceof Map) {_			return ((Map) obj).isEmpty()__		}__		_		return false__	};determine,whether,the,given,object,is,empty,p,this,method,supports,the,following,object,types,ul,li,code,array,considered,empty,if,its,length,is,zero,li,li,link,char,sequence,considered,empty,if,its,length,is,zero,li,li,link,collection,delegates,to,link,collection,is,empty,li,li,link,map,delegates,to,link,map,is,empty,li,ul,p,if,the,given,object,is,non,null,and,not,one,of,the,aforementioned,supported,types,this,method,returns,code,false,param,obj,the,object,to,check,return,code,true,if,the,object,is,code,null,or,em,empty,em,since,4,2,see,object,utils,is,empty,object,see,string,utils,has,length,char,sequence,see,string,utils,is,empty,object,see,collection,utils,is,empty,java,util,collection,see,collection,utils,is,empty,java,util,map;suppress,warnings,rawtypes,public,static,boolean,is,empty,object,obj,if,obj,null,return,true,if,obj,get,class,is,array,return,array,get,length,obj,0,if,obj,instanceof,char,sequence,return,char,sequence,obj,length,0,if,obj,instanceof,collection,return,collection,obj,is,empty,if,obj,instanceof,map,return,map,obj,is,empty,return,false
ObjectUtils -> @SuppressWarnings("rawtypes") 	public static boolean isEmpty(Object obj);1465504808;Determine whether the given object is empty._<p>This method supports the following object types._<ul>_<li>{@code Array}: considered empty if its length is zero</li>_<li>{@link CharSequence}: considered empty if its length is zero</li>_<li>{@link Collection}: delegates to {@link Collection#isEmpty()}</li>_<li>{@link Map}: delegates to {@link Map#isEmpty()}</li>_</ul>_<p>If the given object is non-null and not one of the aforementioned_supported types, this method returns {@code false}._@param obj the object to check_@return {@code true} if the object is {@code null} or <em>empty</em>_@since 4.2_@see ObjectUtils#isEmpty(Object[])_@see StringUtils#hasLength(CharSequence)_@see StringUtils#isEmpty(Object)_@see CollectionUtils#isEmpty(java.util.Collection)_@see CollectionUtils#isEmpty(java.util.Map);@SuppressWarnings("rawtypes")_	public static boolean isEmpty(Object obj) {_		if (obj == null) {_			return true__		}__		if (obj.getClass().isArray()) {_			return Array.getLength(obj) == 0__		}_		if (obj instanceof CharSequence) {_			return ((CharSequence) obj).length() == 0__		}_		if (obj instanceof Collection) {_			return ((Collection) obj).isEmpty()__		}_		if (obj instanceof Map) {_			return ((Map) obj).isEmpty()__		}__		_		return false__	};determine,whether,the,given,object,is,empty,p,this,method,supports,the,following,object,types,ul,li,code,array,considered,empty,if,its,length,is,zero,li,li,link,char,sequence,considered,empty,if,its,length,is,zero,li,li,link,collection,delegates,to,link,collection,is,empty,li,li,link,map,delegates,to,link,map,is,empty,li,ul,p,if,the,given,object,is,non,null,and,not,one,of,the,aforementioned,supported,types,this,method,returns,code,false,param,obj,the,object,to,check,return,code,true,if,the,object,is,code,null,or,em,empty,em,since,4,2,see,object,utils,is,empty,object,see,string,utils,has,length,char,sequence,see,string,utils,is,empty,object,see,collection,utils,is,empty,java,util,collection,see,collection,utils,is,empty,java,util,map;suppress,warnings,rawtypes,public,static,boolean,is,empty,object,obj,if,obj,null,return,true,if,obj,get,class,is,array,return,array,get,length,obj,0,if,obj,instanceof,char,sequence,return,char,sequence,obj,length,0,if,obj,instanceof,collection,return,collection,obj,is,empty,if,obj,instanceof,map,return,map,obj,is,empty,return,false
ObjectUtils -> @SuppressWarnings("rawtypes") 	public static boolean isEmpty(Object obj);1467677340;Determine whether the given object is empty._<p>This method supports the following object types._<ul>_<li>{@code Optional}: considered empty if {@link Optional#empty()}</li>_<li>{@code Array}: considered empty if its length is zero</li>_<li>{@link CharSequence}: considered empty if its length is zero</li>_<li>{@link Collection}: delegates to {@link Collection#isEmpty()}</li>_<li>{@link Map}: delegates to {@link Map#isEmpty()}</li>_</ul>_<p>If the given object is non-null and not one of the aforementioned_supported types, this method returns {@code false}._@param obj the object to check_@return {@code true} if the object is {@code null} or <em>empty</em>_@since 4.2_@see Optional#isPresent()_@see ObjectUtils#isEmpty(Object[])_@see StringUtils#hasLength(CharSequence)_@see StringUtils#isEmpty(Object)_@see CollectionUtils#isEmpty(java.util.Collection)_@see CollectionUtils#isEmpty(java.util.Map);@SuppressWarnings("rawtypes")_	public static boolean isEmpty(Object obj) {_		if (obj == null) {_			return true__		}__		if (obj instanceof Optional) {_			return !((Optional) obj).isPresent()__		}_		if (obj.getClass().isArray()) {_			return Array.getLength(obj) == 0__		}_		if (obj instanceof CharSequence) {_			return ((CharSequence) obj).length() == 0__		}_		if (obj instanceof Collection) {_			return ((Collection) obj).isEmpty()__		}_		if (obj instanceof Map) {_			return ((Map) obj).isEmpty()__		}__		_		return false__	};determine,whether,the,given,object,is,empty,p,this,method,supports,the,following,object,types,ul,li,code,optional,considered,empty,if,link,optional,empty,li,li,code,array,considered,empty,if,its,length,is,zero,li,li,link,char,sequence,considered,empty,if,its,length,is,zero,li,li,link,collection,delegates,to,link,collection,is,empty,li,li,link,map,delegates,to,link,map,is,empty,li,ul,p,if,the,given,object,is,non,null,and,not,one,of,the,aforementioned,supported,types,this,method,returns,code,false,param,obj,the,object,to,check,return,code,true,if,the,object,is,code,null,or,em,empty,em,since,4,2,see,optional,is,present,see,object,utils,is,empty,object,see,string,utils,has,length,char,sequence,see,string,utils,is,empty,object,see,collection,utils,is,empty,java,util,collection,see,collection,utils,is,empty,java,util,map;suppress,warnings,rawtypes,public,static,boolean,is,empty,object,obj,if,obj,null,return,true,if,obj,instanceof,optional,return,optional,obj,is,present,if,obj,get,class,is,array,return,array,get,length,obj,0,if,obj,instanceof,char,sequence,return,char,sequence,obj,length,0,if,obj,instanceof,collection,return,collection,obj,is,empty,if,obj,instanceof,map,return,map,obj,is,empty,return,false
ObjectUtils -> @SuppressWarnings("rawtypes") 	public static boolean isEmpty(Object obj);1491319010;Determine whether the given object is empty._<p>This method supports the following object types._<ul>_<li>{@code Optional}: considered empty if {@link Optional#empty()}</li>_<li>{@code Array}: considered empty if its length is zero</li>_<li>{@link CharSequence}: considered empty if its length is zero</li>_<li>{@link Collection}: delegates to {@link Collection#isEmpty()}</li>_<li>{@link Map}: delegates to {@link Map#isEmpty()}</li>_</ul>_<p>If the given object is non-null and not one of the aforementioned_supported types, this method returns {@code false}._@param obj the object to check_@return {@code true} if the object is {@code null} or <em>empty</em>_@since 4.2_@see Optional#isPresent()_@see ObjectUtils#isEmpty(Object[])_@see StringUtils#hasLength(CharSequence)_@see StringUtils#isEmpty(Object)_@see CollectionUtils#isEmpty(java.util.Collection)_@see CollectionUtils#isEmpty(java.util.Map);@SuppressWarnings("rawtypes")_	public static boolean isEmpty(Object obj) {_		if (obj == null) {_			return true__		}__		if (obj instanceof Optional) {_			return !((Optional) obj).isPresent()__		}_		if (obj.getClass().isArray()) {_			return Array.getLength(obj) == 0__		}_		if (obj instanceof CharSequence) {_			return ((CharSequence) obj).length() == 0__		}_		if (obj instanceof Collection) {_			return ((Collection) obj).isEmpty()__		}_		if (obj instanceof Map) {_			return ((Map) obj).isEmpty()__		}__		_		return false__	};determine,whether,the,given,object,is,empty,p,this,method,supports,the,following,object,types,ul,li,code,optional,considered,empty,if,link,optional,empty,li,li,code,array,considered,empty,if,its,length,is,zero,li,li,link,char,sequence,considered,empty,if,its,length,is,zero,li,li,link,collection,delegates,to,link,collection,is,empty,li,li,link,map,delegates,to,link,map,is,empty,li,ul,p,if,the,given,object,is,non,null,and,not,one,of,the,aforementioned,supported,types,this,method,returns,code,false,param,obj,the,object,to,check,return,code,true,if,the,object,is,code,null,or,em,empty,em,since,4,2,see,optional,is,present,see,object,utils,is,empty,object,see,string,utils,has,length,char,sequence,see,string,utils,is,empty,object,see,collection,utils,is,empty,java,util,collection,see,collection,utils,is,empty,java,util,map;suppress,warnings,rawtypes,public,static,boolean,is,empty,object,obj,if,obj,null,return,true,if,obj,instanceof,optional,return,optional,obj,is,present,if,obj,get,class,is,array,return,array,get,length,obj,0,if,obj,instanceof,char,sequence,return,char,sequence,obj,length,0,if,obj,instanceof,collection,return,collection,obj,is,empty,if,obj,instanceof,map,return,map,obj,is,empty,return,false
ObjectUtils -> public static String getIdentityHexString(Object obj);1328020251;Return a hex String form of an object's identity hash code._@param obj the object_@return the object's identity code in hex notation;public static String getIdentityHexString(Object obj) {_		return Integer.toHexString(System.identityHashCode(obj))__	};return,a,hex,string,form,of,an,object,s,identity,hash,code,param,obj,the,object,return,the,object,s,identity,code,in,hex,notation;public,static,string,get,identity,hex,string,object,obj,return,integer,to,hex,string,system,identity,hash,code,obj
ObjectUtils -> public static String getIdentityHexString(Object obj);1356735495;Return a hex String form of an object's identity hash code._@param obj the object_@return the object's identity code in hex notation;public static String getIdentityHexString(Object obj) {_		return Integer.toHexString(System.identityHashCode(obj))__	};return,a,hex,string,form,of,an,object,s,identity,hash,code,param,obj,the,object,return,the,object,s,identity,code,in,hex,notation;public,static,string,get,identity,hex,string,object,obj,return,integer,to,hex,string,system,identity,hash,code,obj
ObjectUtils -> public static String getIdentityHexString(Object obj);1362408075;Return a hex String form of an object's identity hash code._@param obj the object_@return the object's identity code in hex notation;public static String getIdentityHexString(Object obj) {_		return Integer.toHexString(System.identityHashCode(obj))__	};return,a,hex,string,form,of,an,object,s,identity,hash,code,param,obj,the,object,return,the,object,s,identity,code,in,hex,notation;public,static,string,get,identity,hex,string,object,obj,return,integer,to,hex,string,system,identity,hash,code,obj
ObjectUtils -> public static String getIdentityHexString(Object obj);1385412762;Return a hex String form of an object's identity hash code._@param obj the object_@return the object's identity code in hex notation;public static String getIdentityHexString(Object obj) {_		return Integer.toHexString(System.identityHashCode(obj))__	};return,a,hex,string,form,of,an,object,s,identity,hash,code,param,obj,the,object,return,the,object,s,identity,code,in,hex,notation;public,static,string,get,identity,hex,string,object,obj,return,integer,to,hex,string,system,identity,hash,code,obj
ObjectUtils -> public static String getIdentityHexString(Object obj);1389796508;Return a hex String form of an object's identity hash code._@param obj the object_@return the object's identity code in hex notation;public static String getIdentityHexString(Object obj) {_		return Integer.toHexString(System.identityHashCode(obj))__	};return,a,hex,string,form,of,an,object,s,identity,hash,code,param,obj,the,object,return,the,object,s,identity,code,in,hex,notation;public,static,string,get,identity,hex,string,object,obj,return,integer,to,hex,string,system,identity,hash,code,obj
ObjectUtils -> public static String getIdentityHexString(Object obj);1389798571;Return a hex String form of an object's identity hash code._@param obj the object_@return the object's identity code in hex notation;public static String getIdentityHexString(Object obj) {_		return Integer.toHexString(System.identityHashCode(obj))__	};return,a,hex,string,form,of,an,object,s,identity,hash,code,param,obj,the,object,return,the,object,s,identity,code,in,hex,notation;public,static,string,get,identity,hex,string,object,obj,return,integer,to,hex,string,system,identity,hash,code,obj
ObjectUtils -> public static String getIdentityHexString(Object obj);1405696918;Return a hex String form of an object's identity hash code._@param obj the object_@return the object's identity code in hex notation;public static String getIdentityHexString(Object obj) {_		return Integer.toHexString(System.identityHashCode(obj))__	};return,a,hex,string,form,of,an,object,s,identity,hash,code,param,obj,the,object,return,the,object,s,identity,code,in,hex,notation;public,static,string,get,identity,hex,string,object,obj,return,integer,to,hex,string,system,identity,hash,code,obj
ObjectUtils -> public static String getIdentityHexString(Object obj);1434129562;Return a hex String form of an object's identity hash code._@param obj the object_@return the object's identity code in hex notation;public static String getIdentityHexString(Object obj) {_		return Integer.toHexString(System.identityHashCode(obj))__	};return,a,hex,string,form,of,an,object,s,identity,hash,code,param,obj,the,object,return,the,object,s,identity,code,in,hex,notation;public,static,string,get,identity,hex,string,object,obj,return,integer,to,hex,string,system,identity,hash,code,obj
ObjectUtils -> public static String getIdentityHexString(Object obj);1465504808;Return a hex String form of an object's identity hash code._@param obj the object_@return the object's identity code in hex notation;public static String getIdentityHexString(Object obj) {_		return Integer.toHexString(System.identityHashCode(obj))__	};return,a,hex,string,form,of,an,object,s,identity,hash,code,param,obj,the,object,return,the,object,s,identity,code,in,hex,notation;public,static,string,get,identity,hex,string,object,obj,return,integer,to,hex,string,system,identity,hash,code,obj
ObjectUtils -> public static String getIdentityHexString(Object obj);1467677340;Return a hex String form of an object's identity hash code._@param obj the object_@return the object's identity code in hex notation;public static String getIdentityHexString(Object obj) {_		return Integer.toHexString(System.identityHashCode(obj))__	};return,a,hex,string,form,of,an,object,s,identity,hash,code,param,obj,the,object,return,the,object,s,identity,code,in,hex,notation;public,static,string,get,identity,hex,string,object,obj,return,integer,to,hex,string,system,identity,hash,code,obj
ObjectUtils -> public static String getIdentityHexString(Object obj);1491319010;Return a hex String form of an object's identity hash code._@param obj the object_@return the object's identity code in hex notation;public static String getIdentityHexString(Object obj) {_		return Integer.toHexString(System.identityHashCode(obj))__	};return,a,hex,string,form,of,an,object,s,identity,hash,code,param,obj,the,object,return,the,object,s,identity,code,in,hex,notation;public,static,string,get,identity,hex,string,object,obj,return,integer,to,hex,string,system,identity,hash,code,obj
ObjectUtils -> public static String getIdentityHexString(Object obj);1495868221;Return a hex String form of an object's identity hash code._@param obj the object_@return the object's identity code in hex notation;public static String getIdentityHexString(Object obj) {_		return Integer.toHexString(System.identityHashCode(obj))__	};return,a,hex,string,form,of,an,object,s,identity,hash,code,param,obj,the,object,return,the,object,s,identity,code,in,hex,notation;public,static,string,get,identity,hex,string,object,obj,return,integer,to,hex,string,system,identity,hash,code,obj
ObjectUtils -> public static String getIdentityHexString(Object obj);1496837955;Return a hex String form of an object's identity hash code._@param obj the object_@return the object's identity code in hex notation;public static String getIdentityHexString(Object obj) {_		return Integer.toHexString(System.identityHashCode(obj))__	};return,a,hex,string,form,of,an,object,s,identity,hash,code,param,obj,the,object,return,the,object,s,identity,code,in,hex,notation;public,static,string,get,identity,hex,string,object,obj,return,integer,to,hex,string,system,identity,hash,code,obj
ObjectUtils -> public static String getIdentityHexString(Object obj);1505924929;Return a hex String form of an object's identity hash code._@param obj the object_@return the object's identity code in hex notation;public static String getIdentityHexString(Object obj) {_		return Integer.toHexString(System.identityHashCode(obj))__	};return,a,hex,string,form,of,an,object,s,identity,hash,code,param,obj,the,object,return,the,object,s,identity,code,in,hex,notation;public,static,string,get,identity,hex,string,object,obj,return,integer,to,hex,string,system,identity,hash,code,obj
ObjectUtils -> public static String getIdentityHexString(Object obj);1538724083;Return a hex String form of an object's identity hash code._@param obj the object_@return the object's identity code in hex notation;public static String getIdentityHexString(Object obj) {_		return Integer.toHexString(System.identityHashCode(obj))__	};return,a,hex,string,form,of,an,object,s,identity,hash,code,param,obj,the,object,return,the,object,s,identity,code,in,hex,notation;public,static,string,get,identity,hex,string,object,obj,return,integer,to,hex,string,system,identity,hash,code,obj
ObjectUtils -> public static String getIdentityHexString(Object obj);1542748004;Return a hex String form of an object's identity hash code._@param obj the object_@return the object's identity code in hex notation;public static String getIdentityHexString(Object obj) {_		return Integer.toHexString(System.identityHashCode(obj))__	};return,a,hex,string,form,of,an,object,s,identity,hash,code,param,obj,the,object,return,the,object,s,identity,code,in,hex,notation;public,static,string,get,identity,hex,string,object,obj,return,integer,to,hex,string,system,identity,hash,code,obj
ObjectUtils -> public static String nullSafeToString(boolean[] array);1328020251;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces (<code>"{}"</code>). Adjacent elements are separated_by the characters <code>", "</code> (a comma followed by a space). Returns_<code>"null"</code> if <code>array</code> is <code>null</code>._@param array the array to build a String representation for_@return a String representation of <code>array</code>;public static String nullSafeToString(boolean[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,code,adjacent,elements,are,separated,by,the,characters,code,code,a,comma,followed,by,a,space,returns,code,null,code,if,code,array,code,is,code,null,code,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array,code;public,static,string,null,safe,to,string,boolean,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(boolean[] array);1356735495;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(boolean[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,boolean,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(boolean[] array);1362408075;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(boolean[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,boolean,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(boolean[] array);1385412762;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(boolean[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,boolean,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(boolean[] array);1389796508;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(boolean[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,boolean,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(boolean[] array);1389798571;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(boolean[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,boolean,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(boolean[] array);1405696918;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(boolean[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,boolean,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(boolean[] array);1434129562;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(boolean[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,boolean,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(boolean[] array);1465504808;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(boolean[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,boolean,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(boolean[] array);1467677340;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(boolean[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,boolean,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(boolean[] array);1491319010;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(boolean[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,boolean,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static boolean containsConstant(Enum<?>[] enumValues, String constant);1328020251;Check whether the given array of enum constants contains a constant with the given name,_ignoring case when determining a match._@param enumValues the enum values to check, typically the product of a call to MyEnum.values()_@param constant the constant name to find (must not be null or empty string)_@return whether the constant has been found in the given array;public static boolean containsConstant(Enum<?>[] enumValues, String constant) {_		return containsConstant(enumValues, constant, false)__	};check,whether,the,given,array,of,enum,constants,contains,a,constant,with,the,given,name,ignoring,case,when,determining,a,match,param,enum,values,the,enum,values,to,check,typically,the,product,of,a,call,to,my,enum,values,param,constant,the,constant,name,to,find,must,not,be,null,or,empty,string,return,whether,the,constant,has,been,found,in,the,given,array;public,static,boolean,contains,constant,enum,enum,values,string,constant,return,contains,constant,enum,values,constant,false
ObjectUtils -> public static boolean containsConstant(Enum<?>[] enumValues, String constant);1356735495;Check whether the given array of enum constants contains a constant with the given name,_ignoring case when determining a match._@param enumValues the enum values to check, typically the product of a call to MyEnum.values()_@param constant the constant name to find (must not be null or empty string)_@return whether the constant has been found in the given array;public static boolean containsConstant(Enum<?>[] enumValues, String constant) {_		return containsConstant(enumValues, constant, false)__	};check,whether,the,given,array,of,enum,constants,contains,a,constant,with,the,given,name,ignoring,case,when,determining,a,match,param,enum,values,the,enum,values,to,check,typically,the,product,of,a,call,to,my,enum,values,param,constant,the,constant,name,to,find,must,not,be,null,or,empty,string,return,whether,the,constant,has,been,found,in,the,given,array;public,static,boolean,contains,constant,enum,enum,values,string,constant,return,contains,constant,enum,values,constant,false
ObjectUtils -> public static boolean containsConstant(Enum<?>[] enumValues, String constant);1362408075;Check whether the given array of enum constants contains a constant with the given name,_ignoring case when determining a match._@param enumValues the enum values to check, typically the product of a call to MyEnum.values()_@param constant the constant name to find (must not be null or empty string)_@return whether the constant has been found in the given array;public static boolean containsConstant(Enum<?>[] enumValues, String constant) {_		return containsConstant(enumValues, constant, false)__	};check,whether,the,given,array,of,enum,constants,contains,a,constant,with,the,given,name,ignoring,case,when,determining,a,match,param,enum,values,the,enum,values,to,check,typically,the,product,of,a,call,to,my,enum,values,param,constant,the,constant,name,to,find,must,not,be,null,or,empty,string,return,whether,the,constant,has,been,found,in,the,given,array;public,static,boolean,contains,constant,enum,enum,values,string,constant,return,contains,constant,enum,values,constant,false
ObjectUtils -> public static boolean containsConstant(Enum<?>[] enumValues, String constant);1385412762;Check whether the given array of enum constants contains a constant with the given name,_ignoring case when determining a match._@param enumValues the enum values to check, typically the product of a call to MyEnum.values()_@param constant the constant name to find (must not be null or empty string)_@return whether the constant has been found in the given array;public static boolean containsConstant(Enum<?>[] enumValues, String constant) {_		return containsConstant(enumValues, constant, false)__	};check,whether,the,given,array,of,enum,constants,contains,a,constant,with,the,given,name,ignoring,case,when,determining,a,match,param,enum,values,the,enum,values,to,check,typically,the,product,of,a,call,to,my,enum,values,param,constant,the,constant,name,to,find,must,not,be,null,or,empty,string,return,whether,the,constant,has,been,found,in,the,given,array;public,static,boolean,contains,constant,enum,enum,values,string,constant,return,contains,constant,enum,values,constant,false
ObjectUtils -> public static boolean containsConstant(Enum<?>[] enumValues, String constant);1389796508;Check whether the given array of enum constants contains a constant with the given name,_ignoring case when determining a match._@param enumValues the enum values to check, typically the product of a call to MyEnum.values()_@param constant the constant name to find (must not be null or empty string)_@return whether the constant has been found in the given array;public static boolean containsConstant(Enum<?>[] enumValues, String constant) {_		return containsConstant(enumValues, constant, false)__	};check,whether,the,given,array,of,enum,constants,contains,a,constant,with,the,given,name,ignoring,case,when,determining,a,match,param,enum,values,the,enum,values,to,check,typically,the,product,of,a,call,to,my,enum,values,param,constant,the,constant,name,to,find,must,not,be,null,or,empty,string,return,whether,the,constant,has,been,found,in,the,given,array;public,static,boolean,contains,constant,enum,enum,values,string,constant,return,contains,constant,enum,values,constant,false
ObjectUtils -> public static boolean containsConstant(Enum<?>[] enumValues, String constant);1389798571;Check whether the given array of enum constants contains a constant with the given name,_ignoring case when determining a match._@param enumValues the enum values to check, typically the product of a call to MyEnum.values()_@param constant the constant name to find (must not be null or empty string)_@return whether the constant has been found in the given array;public static boolean containsConstant(Enum<?>[] enumValues, String constant) {_		return containsConstant(enumValues, constant, false)__	};check,whether,the,given,array,of,enum,constants,contains,a,constant,with,the,given,name,ignoring,case,when,determining,a,match,param,enum,values,the,enum,values,to,check,typically,the,product,of,a,call,to,my,enum,values,param,constant,the,constant,name,to,find,must,not,be,null,or,empty,string,return,whether,the,constant,has,been,found,in,the,given,array;public,static,boolean,contains,constant,enum,enum,values,string,constant,return,contains,constant,enum,values,constant,false
ObjectUtils -> public static boolean containsConstant(Enum<?>[] enumValues, String constant);1405696918;Check whether the given array of enum constants contains a constant with the given name,_ignoring case when determining a match._@param enumValues the enum values to check, typically the product of a call to MyEnum.values()_@param constant the constant name to find (must not be null or empty string)_@return whether the constant has been found in the given array;public static boolean containsConstant(Enum<?>[] enumValues, String constant) {_		return containsConstant(enumValues, constant, false)__	};check,whether,the,given,array,of,enum,constants,contains,a,constant,with,the,given,name,ignoring,case,when,determining,a,match,param,enum,values,the,enum,values,to,check,typically,the,product,of,a,call,to,my,enum,values,param,constant,the,constant,name,to,find,must,not,be,null,or,empty,string,return,whether,the,constant,has,been,found,in,the,given,array;public,static,boolean,contains,constant,enum,enum,values,string,constant,return,contains,constant,enum,values,constant,false
ObjectUtils -> public static boolean containsConstant(Enum<?>[] enumValues, String constant);1434129562;Check whether the given array of enum constants contains a constant with the given name,_ignoring case when determining a match._@param enumValues the enum values to check, typically the product of a call to MyEnum.values()_@param constant the constant name to find (must not be null or empty string)_@return whether the constant has been found in the given array;public static boolean containsConstant(Enum<?>[] enumValues, String constant) {_		return containsConstant(enumValues, constant, false)__	};check,whether,the,given,array,of,enum,constants,contains,a,constant,with,the,given,name,ignoring,case,when,determining,a,match,param,enum,values,the,enum,values,to,check,typically,the,product,of,a,call,to,my,enum,values,param,constant,the,constant,name,to,find,must,not,be,null,or,empty,string,return,whether,the,constant,has,been,found,in,the,given,array;public,static,boolean,contains,constant,enum,enum,values,string,constant,return,contains,constant,enum,values,constant,false
ObjectUtils -> public static boolean containsConstant(Enum<?>[] enumValues, String constant);1465504808;Check whether the given array of enum constants contains a constant with the given name,_ignoring case when determining a match._@param enumValues the enum values to check, typically the product of a call to MyEnum.values()_@param constant the constant name to find (must not be null or empty string)_@return whether the constant has been found in the given array;public static boolean containsConstant(Enum<?>[] enumValues, String constant) {_		return containsConstant(enumValues, constant, false)__	};check,whether,the,given,array,of,enum,constants,contains,a,constant,with,the,given,name,ignoring,case,when,determining,a,match,param,enum,values,the,enum,values,to,check,typically,the,product,of,a,call,to,my,enum,values,param,constant,the,constant,name,to,find,must,not,be,null,or,empty,string,return,whether,the,constant,has,been,found,in,the,given,array;public,static,boolean,contains,constant,enum,enum,values,string,constant,return,contains,constant,enum,values,constant,false
ObjectUtils -> public static boolean containsConstant(Enum<?>[] enumValues, String constant);1467677340;Check whether the given array of enum constants contains a constant with the given name,_ignoring case when determining a match._@param enumValues the enum values to check, typically the product of a call to MyEnum.values()_@param constant the constant name to find (must not be null or empty string)_@return whether the constant has been found in the given array;public static boolean containsConstant(Enum<?>[] enumValues, String constant) {_		return containsConstant(enumValues, constant, false)__	};check,whether,the,given,array,of,enum,constants,contains,a,constant,with,the,given,name,ignoring,case,when,determining,a,match,param,enum,values,the,enum,values,to,check,typically,the,product,of,a,call,to,my,enum,values,param,constant,the,constant,name,to,find,must,not,be,null,or,empty,string,return,whether,the,constant,has,been,found,in,the,given,array;public,static,boolean,contains,constant,enum,enum,values,string,constant,return,contains,constant,enum,values,constant,false
ObjectUtils -> public static boolean containsConstant(Enum<?>[] enumValues, String constant);1491319010;Check whether the given array of enum constants contains a constant with the given name,_ignoring case when determining a match._@param enumValues the enum values to check, typically the product of a call to MyEnum.values()_@param constant the constant name to find (must not be null or empty string)_@return whether the constant has been found in the given array;public static boolean containsConstant(Enum<?>[] enumValues, String constant) {_		return containsConstant(enumValues, constant, false)__	};check,whether,the,given,array,of,enum,constants,contains,a,constant,with,the,given,name,ignoring,case,when,determining,a,match,param,enum,values,the,enum,values,to,check,typically,the,product,of,a,call,to,my,enum,values,param,constant,the,constant,name,to,find,must,not,be,null,or,empty,string,return,whether,the,constant,has,been,found,in,the,given,array;public,static,boolean,contains,constant,enum,enum,values,string,constant,return,contains,constant,enum,values,constant,false
ObjectUtils -> public static boolean containsConstant(Enum<?>[] enumValues, String constant);1495868221;Check whether the given array of enum constants contains a constant with the given name,_ignoring case when determining a match._@param enumValues the enum values to check, typically the product of a call to MyEnum.values()_@param constant the constant name to find (must not be null or empty string)_@return whether the constant has been found in the given array;public static boolean containsConstant(Enum<?>[] enumValues, String constant) {_		return containsConstant(enumValues, constant, false)__	};check,whether,the,given,array,of,enum,constants,contains,a,constant,with,the,given,name,ignoring,case,when,determining,a,match,param,enum,values,the,enum,values,to,check,typically,the,product,of,a,call,to,my,enum,values,param,constant,the,constant,name,to,find,must,not,be,null,or,empty,string,return,whether,the,constant,has,been,found,in,the,given,array;public,static,boolean,contains,constant,enum,enum,values,string,constant,return,contains,constant,enum,values,constant,false
ObjectUtils -> public static boolean containsConstant(Enum<?>[] enumValues, String constant);1496837955;Check whether the given array of enum constants contains a constant with the given name,_ignoring case when determining a match._@param enumValues the enum values to check, typically the product of a call to MyEnum.values()_@param constant the constant name to find (must not be null or empty string)_@return whether the constant has been found in the given array;public static boolean containsConstant(Enum<?>[] enumValues, String constant) {_		return containsConstant(enumValues, constant, false)__	};check,whether,the,given,array,of,enum,constants,contains,a,constant,with,the,given,name,ignoring,case,when,determining,a,match,param,enum,values,the,enum,values,to,check,typically,the,product,of,a,call,to,my,enum,values,param,constant,the,constant,name,to,find,must,not,be,null,or,empty,string,return,whether,the,constant,has,been,found,in,the,given,array;public,static,boolean,contains,constant,enum,enum,values,string,constant,return,contains,constant,enum,values,constant,false
ObjectUtils -> public static boolean containsConstant(Enum<?>[] enumValues, String constant);1505924929;Check whether the given array of enum constants contains a constant with the given name,_ignoring case when determining a match._@param enumValues the enum values to check, typically the product of a call to MyEnum.values()_@param constant the constant name to find (must not be null or empty string)_@return whether the constant has been found in the given array;public static boolean containsConstant(Enum<?>[] enumValues, String constant) {_		return containsConstant(enumValues, constant, false)__	};check,whether,the,given,array,of,enum,constants,contains,a,constant,with,the,given,name,ignoring,case,when,determining,a,match,param,enum,values,the,enum,values,to,check,typically,the,product,of,a,call,to,my,enum,values,param,constant,the,constant,name,to,find,must,not,be,null,or,empty,string,return,whether,the,constant,has,been,found,in,the,given,array;public,static,boolean,contains,constant,enum,enum,values,string,constant,return,contains,constant,enum,values,constant,false
ObjectUtils -> public static boolean containsConstant(Enum<?>[] enumValues, String constant);1538724083;Check whether the given array of enum constants contains a constant with the given name,_ignoring case when determining a match._@param enumValues the enum values to check, typically the product of a call to MyEnum.values()_@param constant the constant name to find (must not be null or empty string)_@return whether the constant has been found in the given array;public static boolean containsConstant(Enum<?>[] enumValues, String constant) {_		return containsConstant(enumValues, constant, false)__	};check,whether,the,given,array,of,enum,constants,contains,a,constant,with,the,given,name,ignoring,case,when,determining,a,match,param,enum,values,the,enum,values,to,check,typically,the,product,of,a,call,to,my,enum,values,param,constant,the,constant,name,to,find,must,not,be,null,or,empty,string,return,whether,the,constant,has,been,found,in,the,given,array;public,static,boolean,contains,constant,enum,enum,values,string,constant,return,contains,constant,enum,values,constant,false
ObjectUtils -> public static boolean containsConstant(Enum<?>[] enumValues, String constant);1542748004;Check whether the given array of enum constants contains a constant with the given name,_ignoring case when determining a match._@param enumValues the enum values to check, typically obtained via {@code MyEnum.values()}_@param constant the constant name to find (must not be null or empty string)_@return whether the constant has been found in the given array;public static boolean containsConstant(Enum<?>[] enumValues, String constant) {_		return containsConstant(enumValues, constant, false)__	};check,whether,the,given,array,of,enum,constants,contains,a,constant,with,the,given,name,ignoring,case,when,determining,a,match,param,enum,values,the,enum,values,to,check,typically,obtained,via,code,my,enum,values,param,constant,the,constant,name,to,find,must,not,be,null,or,empty,string,return,whether,the,constant,has,been,found,in,the,given,array;public,static,boolean,contains,constant,enum,enum,values,string,constant,return,contains,constant,enum,values,constant,false
ObjectUtils -> public static String nullSafeToString(@Nullable double[] array);1495868221;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable double[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,double,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable double[] array);1496837955;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable double[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,double,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable double[] array);1505924929;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable double[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,double,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable double[] array);1538724083;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable double[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,double,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable double[] array);1542748004;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable double[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,double,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static int nullSafeHashCode(short[] array);1328020251;Return a hash code based on the contents of the specified array._If <code>array</code> is <code>null</code>, this method returns 0.;public static int nullSafeHashCode(short[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + array[i]__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,code,is,code,null,code,this,method,returns,0;public,static,int,null,safe,hash,code,short,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(short[] array);1356735495;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(short[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + array[i]__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,short,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(short[] array);1362408075;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(short[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + array[i]__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,short,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(short[] array);1385412762;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(short[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + array[i]__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,short,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(short[] array);1389796508;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(short[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (short element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,short,array,if,array,null,return,0,int,hash,for,short,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(short[] array);1389798571;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(short[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (short element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,short,array,if,array,null,return,0,int,hash,for,short,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(short[] array);1405696918;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(short[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (short element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,short,array,if,array,null,return,0,int,hash,for,short,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(short[] array);1434129562;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(short[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (short element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,short,array,if,array,null,return,0,int,hash,for,short,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(short[] array);1465504808;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(short[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (short element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,short,array,if,array,null,return,0,int,hash,for,short,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(short[] array);1467677340;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(short[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (short element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,short,array,if,array,null,return,0,int,hash,for,short,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(short[] array);1491319010;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(short[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (short element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,short,array,if,array,null,return,0,int,hash,for,short,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static String nullSafeToString(int[] array);1328020251;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces (<code>"{}"</code>). Adjacent elements are separated_by the characters <code>", "</code> (a comma followed by a space). Returns_<code>"null"</code> if <code>array</code> is <code>null</code>._@param array the array to build a String representation for_@return a String representation of <code>array</code>;public static String nullSafeToString(int[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,code,adjacent,elements,are,separated,by,the,characters,code,code,a,comma,followed,by,a,space,returns,code,null,code,if,code,array,code,is,code,null,code,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array,code;public,static,string,null,safe,to,string,int,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(int[] array);1356735495;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(int[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,int,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(int[] array);1362408075;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(int[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,int,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(int[] array);1385412762;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(int[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,int,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(int[] array);1389796508;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(int[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,int,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(int[] array);1389798571;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(int[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,int,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(int[] array);1405696918;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(int[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,int,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(int[] array);1434129562;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(int[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,int,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(int[] array);1465504808;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(int[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,int,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(int[] array);1467677340;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(int[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,int,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(int[] array);1491319010;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(int[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,int,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> private static boolean arrayEquals(Object o1, Object o2);1465504808;Compare the given arrays with {@code Arrays.equals}, performing an equality_check based on the array elements rather than the array reference._@param o1 first array to compare_@param o2 second array to compare_@return whether the given objects are equal_@see #nullSafeEquals(Object, Object)_@see java.util.Arrays#equals;private static boolean arrayEquals(Object o1, Object o2) {_		if (o1 instanceof Object[] && o2 instanceof Object[]) {_			return Arrays.equals((Object[]) o1, (Object[]) o2)__		}_		if (o1 instanceof boolean[] && o2 instanceof boolean[]) {_			return Arrays.equals((boolean[]) o1, (boolean[]) o2)__		}_		if (o1 instanceof byte[] && o2 instanceof byte[]) {_			return Arrays.equals((byte[]) o1, (byte[]) o2)__		}_		if (o1 instanceof char[] && o2 instanceof char[]) {_			return Arrays.equals((char[]) o1, (char[]) o2)__		}_		if (o1 instanceof double[] && o2 instanceof double[]) {_			return Arrays.equals((double[]) o1, (double[]) o2)__		}_		if (o1 instanceof float[] && o2 instanceof float[]) {_			return Arrays.equals((float[]) o1, (float[]) o2)__		}_		if (o1 instanceof int[] && o2 instanceof int[]) {_			return Arrays.equals((int[]) o1, (int[]) o2)__		}_		if (o1 instanceof long[] && o2 instanceof long[]) {_			return Arrays.equals((long[]) o1, (long[]) o2)__		}_		if (o1 instanceof short[] && o2 instanceof short[]) {_			return Arrays.equals((short[]) o1, (short[]) o2)__		}_		return false__	};compare,the,given,arrays,with,code,arrays,equals,performing,an,equality,check,based,on,the,array,elements,rather,than,the,array,reference,param,o1,first,array,to,compare,param,o2,second,array,to,compare,return,whether,the,given,objects,are,equal,see,null,safe,equals,object,object,see,java,util,arrays,equals;private,static,boolean,array,equals,object,o1,object,o2,if,o1,instanceof,object,o2,instanceof,object,return,arrays,equals,object,o1,object,o2,if,o1,instanceof,boolean,o2,instanceof,boolean,return,arrays,equals,boolean,o1,boolean,o2,if,o1,instanceof,byte,o2,instanceof,byte,return,arrays,equals,byte,o1,byte,o2,if,o1,instanceof,char,o2,instanceof,char,return,arrays,equals,char,o1,char,o2,if,o1,instanceof,double,o2,instanceof,double,return,arrays,equals,double,o1,double,o2,if,o1,instanceof,float,o2,instanceof,float,return,arrays,equals,float,o1,float,o2,if,o1,instanceof,int,o2,instanceof,int,return,arrays,equals,int,o1,int,o2,if,o1,instanceof,long,o2,instanceof,long,return,arrays,equals,long,o1,long,o2,if,o1,instanceof,short,o2,instanceof,short,return,arrays,equals,short,o1,short,o2,return,false
ObjectUtils -> private static boolean arrayEquals(Object o1, Object o2);1467677340;Compare the given arrays with {@code Arrays.equals}, performing an equality_check based on the array elements rather than the array reference._@param o1 first array to compare_@param o2 second array to compare_@return whether the given objects are equal_@see #nullSafeEquals(Object, Object)_@see java.util.Arrays#equals;private static boolean arrayEquals(Object o1, Object o2) {_		if (o1 instanceof Object[] && o2 instanceof Object[]) {_			return Arrays.equals((Object[]) o1, (Object[]) o2)__		}_		if (o1 instanceof boolean[] && o2 instanceof boolean[]) {_			return Arrays.equals((boolean[]) o1, (boolean[]) o2)__		}_		if (o1 instanceof byte[] && o2 instanceof byte[]) {_			return Arrays.equals((byte[]) o1, (byte[]) o2)__		}_		if (o1 instanceof char[] && o2 instanceof char[]) {_			return Arrays.equals((char[]) o1, (char[]) o2)__		}_		if (o1 instanceof double[] && o2 instanceof double[]) {_			return Arrays.equals((double[]) o1, (double[]) o2)__		}_		if (o1 instanceof float[] && o2 instanceof float[]) {_			return Arrays.equals((float[]) o1, (float[]) o2)__		}_		if (o1 instanceof int[] && o2 instanceof int[]) {_			return Arrays.equals((int[]) o1, (int[]) o2)__		}_		if (o1 instanceof long[] && o2 instanceof long[]) {_			return Arrays.equals((long[]) o1, (long[]) o2)__		}_		if (o1 instanceof short[] && o2 instanceof short[]) {_			return Arrays.equals((short[]) o1, (short[]) o2)__		}_		return false__	};compare,the,given,arrays,with,code,arrays,equals,performing,an,equality,check,based,on,the,array,elements,rather,than,the,array,reference,param,o1,first,array,to,compare,param,o2,second,array,to,compare,return,whether,the,given,objects,are,equal,see,null,safe,equals,object,object,see,java,util,arrays,equals;private,static,boolean,array,equals,object,o1,object,o2,if,o1,instanceof,object,o2,instanceof,object,return,arrays,equals,object,o1,object,o2,if,o1,instanceof,boolean,o2,instanceof,boolean,return,arrays,equals,boolean,o1,boolean,o2,if,o1,instanceof,byte,o2,instanceof,byte,return,arrays,equals,byte,o1,byte,o2,if,o1,instanceof,char,o2,instanceof,char,return,arrays,equals,char,o1,char,o2,if,o1,instanceof,double,o2,instanceof,double,return,arrays,equals,double,o1,double,o2,if,o1,instanceof,float,o2,instanceof,float,return,arrays,equals,float,o1,float,o2,if,o1,instanceof,int,o2,instanceof,int,return,arrays,equals,int,o1,int,o2,if,o1,instanceof,long,o2,instanceof,long,return,arrays,equals,long,o1,long,o2,if,o1,instanceof,short,o2,instanceof,short,return,arrays,equals,short,o1,short,o2,return,false
ObjectUtils -> private static boolean arrayEquals(Object o1, Object o2);1491319010;Compare the given arrays with {@code Arrays.equals}, performing an equality_check based on the array elements rather than the array reference._@param o1 first array to compare_@param o2 second array to compare_@return whether the given objects are equal_@see #nullSafeEquals(Object, Object)_@see java.util.Arrays#equals;private static boolean arrayEquals(Object o1, Object o2) {_		if (o1 instanceof Object[] && o2 instanceof Object[]) {_			return Arrays.equals((Object[]) o1, (Object[]) o2)__		}_		if (o1 instanceof boolean[] && o2 instanceof boolean[]) {_			return Arrays.equals((boolean[]) o1, (boolean[]) o2)__		}_		if (o1 instanceof byte[] && o2 instanceof byte[]) {_			return Arrays.equals((byte[]) o1, (byte[]) o2)__		}_		if (o1 instanceof char[] && o2 instanceof char[]) {_			return Arrays.equals((char[]) o1, (char[]) o2)__		}_		if (o1 instanceof double[] && o2 instanceof double[]) {_			return Arrays.equals((double[]) o1, (double[]) o2)__		}_		if (o1 instanceof float[] && o2 instanceof float[]) {_			return Arrays.equals((float[]) o1, (float[]) o2)__		}_		if (o1 instanceof int[] && o2 instanceof int[]) {_			return Arrays.equals((int[]) o1, (int[]) o2)__		}_		if (o1 instanceof long[] && o2 instanceof long[]) {_			return Arrays.equals((long[]) o1, (long[]) o2)__		}_		if (o1 instanceof short[] && o2 instanceof short[]) {_			return Arrays.equals((short[]) o1, (short[]) o2)__		}_		return false__	};compare,the,given,arrays,with,code,arrays,equals,performing,an,equality,check,based,on,the,array,elements,rather,than,the,array,reference,param,o1,first,array,to,compare,param,o2,second,array,to,compare,return,whether,the,given,objects,are,equal,see,null,safe,equals,object,object,see,java,util,arrays,equals;private,static,boolean,array,equals,object,o1,object,o2,if,o1,instanceof,object,o2,instanceof,object,return,arrays,equals,object,o1,object,o2,if,o1,instanceof,boolean,o2,instanceof,boolean,return,arrays,equals,boolean,o1,boolean,o2,if,o1,instanceof,byte,o2,instanceof,byte,return,arrays,equals,byte,o1,byte,o2,if,o1,instanceof,char,o2,instanceof,char,return,arrays,equals,char,o1,char,o2,if,o1,instanceof,double,o2,instanceof,double,return,arrays,equals,double,o1,double,o2,if,o1,instanceof,float,o2,instanceof,float,return,arrays,equals,float,o1,float,o2,if,o1,instanceof,int,o2,instanceof,int,return,arrays,equals,int,o1,int,o2,if,o1,instanceof,long,o2,instanceof,long,return,arrays,equals,long,o1,long,o2,if,o1,instanceof,short,o2,instanceof,short,return,arrays,equals,short,o1,short,o2,return,false
ObjectUtils -> private static boolean arrayEquals(Object o1, Object o2);1495868221;Compare the given arrays with {@code Arrays.equals}, performing an equality_check based on the array elements rather than the array reference._@param o1 first array to compare_@param o2 second array to compare_@return whether the given objects are equal_@see #nullSafeEquals(Object, Object)_@see java.util.Arrays#equals;private static boolean arrayEquals(Object o1, Object o2) {_		if (o1 instanceof Object[] && o2 instanceof Object[]) {_			return Arrays.equals((Object[]) o1, (Object[]) o2)__		}_		if (o1 instanceof boolean[] && o2 instanceof boolean[]) {_			return Arrays.equals((boolean[]) o1, (boolean[]) o2)__		}_		if (o1 instanceof byte[] && o2 instanceof byte[]) {_			return Arrays.equals((byte[]) o1, (byte[]) o2)__		}_		if (o1 instanceof char[] && o2 instanceof char[]) {_			return Arrays.equals((char[]) o1, (char[]) o2)__		}_		if (o1 instanceof double[] && o2 instanceof double[]) {_			return Arrays.equals((double[]) o1, (double[]) o2)__		}_		if (o1 instanceof float[] && o2 instanceof float[]) {_			return Arrays.equals((float[]) o1, (float[]) o2)__		}_		if (o1 instanceof int[] && o2 instanceof int[]) {_			return Arrays.equals((int[]) o1, (int[]) o2)__		}_		if (o1 instanceof long[] && o2 instanceof long[]) {_			return Arrays.equals((long[]) o1, (long[]) o2)__		}_		if (o1 instanceof short[] && o2 instanceof short[]) {_			return Arrays.equals((short[]) o1, (short[]) o2)__		}_		return false__	};compare,the,given,arrays,with,code,arrays,equals,performing,an,equality,check,based,on,the,array,elements,rather,than,the,array,reference,param,o1,first,array,to,compare,param,o2,second,array,to,compare,return,whether,the,given,objects,are,equal,see,null,safe,equals,object,object,see,java,util,arrays,equals;private,static,boolean,array,equals,object,o1,object,o2,if,o1,instanceof,object,o2,instanceof,object,return,arrays,equals,object,o1,object,o2,if,o1,instanceof,boolean,o2,instanceof,boolean,return,arrays,equals,boolean,o1,boolean,o2,if,o1,instanceof,byte,o2,instanceof,byte,return,arrays,equals,byte,o1,byte,o2,if,o1,instanceof,char,o2,instanceof,char,return,arrays,equals,char,o1,char,o2,if,o1,instanceof,double,o2,instanceof,double,return,arrays,equals,double,o1,double,o2,if,o1,instanceof,float,o2,instanceof,float,return,arrays,equals,float,o1,float,o2,if,o1,instanceof,int,o2,instanceof,int,return,arrays,equals,int,o1,int,o2,if,o1,instanceof,long,o2,instanceof,long,return,arrays,equals,long,o1,long,o2,if,o1,instanceof,short,o2,instanceof,short,return,arrays,equals,short,o1,short,o2,return,false
ObjectUtils -> private static boolean arrayEquals(Object o1, Object o2);1496837955;Compare the given arrays with {@code Arrays.equals}, performing an equality_check based on the array elements rather than the array reference._@param o1 first array to compare_@param o2 second array to compare_@return whether the given objects are equal_@see #nullSafeEquals(Object, Object)_@see java.util.Arrays#equals;private static boolean arrayEquals(Object o1, Object o2) {_		if (o1 instanceof Object[] && o2 instanceof Object[]) {_			return Arrays.equals((Object[]) o1, (Object[]) o2)__		}_		if (o1 instanceof boolean[] && o2 instanceof boolean[]) {_			return Arrays.equals((boolean[]) o1, (boolean[]) o2)__		}_		if (o1 instanceof byte[] && o2 instanceof byte[]) {_			return Arrays.equals((byte[]) o1, (byte[]) o2)__		}_		if (o1 instanceof char[] && o2 instanceof char[]) {_			return Arrays.equals((char[]) o1, (char[]) o2)__		}_		if (o1 instanceof double[] && o2 instanceof double[]) {_			return Arrays.equals((double[]) o1, (double[]) o2)__		}_		if (o1 instanceof float[] && o2 instanceof float[]) {_			return Arrays.equals((float[]) o1, (float[]) o2)__		}_		if (o1 instanceof int[] && o2 instanceof int[]) {_			return Arrays.equals((int[]) o1, (int[]) o2)__		}_		if (o1 instanceof long[] && o2 instanceof long[]) {_			return Arrays.equals((long[]) o1, (long[]) o2)__		}_		if (o1 instanceof short[] && o2 instanceof short[]) {_			return Arrays.equals((short[]) o1, (short[]) o2)__		}_		return false__	};compare,the,given,arrays,with,code,arrays,equals,performing,an,equality,check,based,on,the,array,elements,rather,than,the,array,reference,param,o1,first,array,to,compare,param,o2,second,array,to,compare,return,whether,the,given,objects,are,equal,see,null,safe,equals,object,object,see,java,util,arrays,equals;private,static,boolean,array,equals,object,o1,object,o2,if,o1,instanceof,object,o2,instanceof,object,return,arrays,equals,object,o1,object,o2,if,o1,instanceof,boolean,o2,instanceof,boolean,return,arrays,equals,boolean,o1,boolean,o2,if,o1,instanceof,byte,o2,instanceof,byte,return,arrays,equals,byte,o1,byte,o2,if,o1,instanceof,char,o2,instanceof,char,return,arrays,equals,char,o1,char,o2,if,o1,instanceof,double,o2,instanceof,double,return,arrays,equals,double,o1,double,o2,if,o1,instanceof,float,o2,instanceof,float,return,arrays,equals,float,o1,float,o2,if,o1,instanceof,int,o2,instanceof,int,return,arrays,equals,int,o1,int,o2,if,o1,instanceof,long,o2,instanceof,long,return,arrays,equals,long,o1,long,o2,if,o1,instanceof,short,o2,instanceof,short,return,arrays,equals,short,o1,short,o2,return,false
ObjectUtils -> private static boolean arrayEquals(Object o1, Object o2);1505924929;Compare the given arrays with {@code Arrays.equals}, performing an equality_check based on the array elements rather than the array reference._@param o1 first array to compare_@param o2 second array to compare_@return whether the given objects are equal_@see #nullSafeEquals(Object, Object)_@see java.util.Arrays#equals;private static boolean arrayEquals(Object o1, Object o2) {_		if (o1 instanceof Object[] && o2 instanceof Object[]) {_			return Arrays.equals((Object[]) o1, (Object[]) o2)__		}_		if (o1 instanceof boolean[] && o2 instanceof boolean[]) {_			return Arrays.equals((boolean[]) o1, (boolean[]) o2)__		}_		if (o1 instanceof byte[] && o2 instanceof byte[]) {_			return Arrays.equals((byte[]) o1, (byte[]) o2)__		}_		if (o1 instanceof char[] && o2 instanceof char[]) {_			return Arrays.equals((char[]) o1, (char[]) o2)__		}_		if (o1 instanceof double[] && o2 instanceof double[]) {_			return Arrays.equals((double[]) o1, (double[]) o2)__		}_		if (o1 instanceof float[] && o2 instanceof float[]) {_			return Arrays.equals((float[]) o1, (float[]) o2)__		}_		if (o1 instanceof int[] && o2 instanceof int[]) {_			return Arrays.equals((int[]) o1, (int[]) o2)__		}_		if (o1 instanceof long[] && o2 instanceof long[]) {_			return Arrays.equals((long[]) o1, (long[]) o2)__		}_		if (o1 instanceof short[] && o2 instanceof short[]) {_			return Arrays.equals((short[]) o1, (short[]) o2)__		}_		return false__	};compare,the,given,arrays,with,code,arrays,equals,performing,an,equality,check,based,on,the,array,elements,rather,than,the,array,reference,param,o1,first,array,to,compare,param,o2,second,array,to,compare,return,whether,the,given,objects,are,equal,see,null,safe,equals,object,object,see,java,util,arrays,equals;private,static,boolean,array,equals,object,o1,object,o2,if,o1,instanceof,object,o2,instanceof,object,return,arrays,equals,object,o1,object,o2,if,o1,instanceof,boolean,o2,instanceof,boolean,return,arrays,equals,boolean,o1,boolean,o2,if,o1,instanceof,byte,o2,instanceof,byte,return,arrays,equals,byte,o1,byte,o2,if,o1,instanceof,char,o2,instanceof,char,return,arrays,equals,char,o1,char,o2,if,o1,instanceof,double,o2,instanceof,double,return,arrays,equals,double,o1,double,o2,if,o1,instanceof,float,o2,instanceof,float,return,arrays,equals,float,o1,float,o2,if,o1,instanceof,int,o2,instanceof,int,return,arrays,equals,int,o1,int,o2,if,o1,instanceof,long,o2,instanceof,long,return,arrays,equals,long,o1,long,o2,if,o1,instanceof,short,o2,instanceof,short,return,arrays,equals,short,o1,short,o2,return,false
ObjectUtils -> private static boolean arrayEquals(Object o1, Object o2);1538724083;Compare the given arrays with {@code Arrays.equals}, performing an equality_check based on the array elements rather than the array reference._@param o1 first array to compare_@param o2 second array to compare_@return whether the given objects are equal_@see #nullSafeEquals(Object, Object)_@see java.util.Arrays#equals;private static boolean arrayEquals(Object o1, Object o2) {_		if (o1 instanceof Object[] && o2 instanceof Object[]) {_			return Arrays.equals((Object[]) o1, (Object[]) o2)__		}_		if (o1 instanceof boolean[] && o2 instanceof boolean[]) {_			return Arrays.equals((boolean[]) o1, (boolean[]) o2)__		}_		if (o1 instanceof byte[] && o2 instanceof byte[]) {_			return Arrays.equals((byte[]) o1, (byte[]) o2)__		}_		if (o1 instanceof char[] && o2 instanceof char[]) {_			return Arrays.equals((char[]) o1, (char[]) o2)__		}_		if (o1 instanceof double[] && o2 instanceof double[]) {_			return Arrays.equals((double[]) o1, (double[]) o2)__		}_		if (o1 instanceof float[] && o2 instanceof float[]) {_			return Arrays.equals((float[]) o1, (float[]) o2)__		}_		if (o1 instanceof int[] && o2 instanceof int[]) {_			return Arrays.equals((int[]) o1, (int[]) o2)__		}_		if (o1 instanceof long[] && o2 instanceof long[]) {_			return Arrays.equals((long[]) o1, (long[]) o2)__		}_		if (o1 instanceof short[] && o2 instanceof short[]) {_			return Arrays.equals((short[]) o1, (short[]) o2)__		}_		return false__	};compare,the,given,arrays,with,code,arrays,equals,performing,an,equality,check,based,on,the,array,elements,rather,than,the,array,reference,param,o1,first,array,to,compare,param,o2,second,array,to,compare,return,whether,the,given,objects,are,equal,see,null,safe,equals,object,object,see,java,util,arrays,equals;private,static,boolean,array,equals,object,o1,object,o2,if,o1,instanceof,object,o2,instanceof,object,return,arrays,equals,object,o1,object,o2,if,o1,instanceof,boolean,o2,instanceof,boolean,return,arrays,equals,boolean,o1,boolean,o2,if,o1,instanceof,byte,o2,instanceof,byte,return,arrays,equals,byte,o1,byte,o2,if,o1,instanceof,char,o2,instanceof,char,return,arrays,equals,char,o1,char,o2,if,o1,instanceof,double,o2,instanceof,double,return,arrays,equals,double,o1,double,o2,if,o1,instanceof,float,o2,instanceof,float,return,arrays,equals,float,o1,float,o2,if,o1,instanceof,int,o2,instanceof,int,return,arrays,equals,int,o1,int,o2,if,o1,instanceof,long,o2,instanceof,long,return,arrays,equals,long,o1,long,o2,if,o1,instanceof,short,o2,instanceof,short,return,arrays,equals,short,o1,short,o2,return,false
ObjectUtils -> private static boolean arrayEquals(Object o1, Object o2);1542748004;Compare the given arrays with {@code Arrays.equals}, performing an equality_check based on the array elements rather than the array reference._@param o1 first array to compare_@param o2 second array to compare_@return whether the given objects are equal_@see #nullSafeEquals(Object, Object)_@see java.util.Arrays#equals;private static boolean arrayEquals(Object o1, Object o2) {_		if (o1 instanceof Object[] && o2 instanceof Object[]) {_			return Arrays.equals((Object[]) o1, (Object[]) o2)__		}_		if (o1 instanceof boolean[] && o2 instanceof boolean[]) {_			return Arrays.equals((boolean[]) o1, (boolean[]) o2)__		}_		if (o1 instanceof byte[] && o2 instanceof byte[]) {_			return Arrays.equals((byte[]) o1, (byte[]) o2)__		}_		if (o1 instanceof char[] && o2 instanceof char[]) {_			return Arrays.equals((char[]) o1, (char[]) o2)__		}_		if (o1 instanceof double[] && o2 instanceof double[]) {_			return Arrays.equals((double[]) o1, (double[]) o2)__		}_		if (o1 instanceof float[] && o2 instanceof float[]) {_			return Arrays.equals((float[]) o1, (float[]) o2)__		}_		if (o1 instanceof int[] && o2 instanceof int[]) {_			return Arrays.equals((int[]) o1, (int[]) o2)__		}_		if (o1 instanceof long[] && o2 instanceof long[]) {_			return Arrays.equals((long[]) o1, (long[]) o2)__		}_		if (o1 instanceof short[] && o2 instanceof short[]) {_			return Arrays.equals((short[]) o1, (short[]) o2)__		}_		return false__	};compare,the,given,arrays,with,code,arrays,equals,performing,an,equality,check,based,on,the,array,elements,rather,than,the,array,reference,param,o1,first,array,to,compare,param,o2,second,array,to,compare,return,whether,the,given,objects,are,equal,see,null,safe,equals,object,object,see,java,util,arrays,equals;private,static,boolean,array,equals,object,o1,object,o2,if,o1,instanceof,object,o2,instanceof,object,return,arrays,equals,object,o1,object,o2,if,o1,instanceof,boolean,o2,instanceof,boolean,return,arrays,equals,boolean,o1,boolean,o2,if,o1,instanceof,byte,o2,instanceof,byte,return,arrays,equals,byte,o1,byte,o2,if,o1,instanceof,char,o2,instanceof,char,return,arrays,equals,char,o1,char,o2,if,o1,instanceof,double,o2,instanceof,double,return,arrays,equals,double,o1,double,o2,if,o1,instanceof,float,o2,instanceof,float,return,arrays,equals,float,o1,float,o2,if,o1,instanceof,int,o2,instanceof,int,return,arrays,equals,int,o1,int,o2,if,o1,instanceof,long,o2,instanceof,long,return,arrays,equals,long,o1,long,o2,if,o1,instanceof,short,o2,instanceof,short,return,arrays,equals,short,o1,short,o2,return,false
ObjectUtils -> public static boolean nullSafeEquals(Object o1, Object o2);1328020251;Determine if the given objects are equal, returning <code>true</code>_if both are <code>null</code> or <code>false</code> if only one is_<code>null</code>._<p>Compares arrays with <code>Arrays.equals</code>, performing an equality_check based on the array elements rather than the array reference._@param o1 first Object to compare_@param o2 second Object to compare_@return whether the given objects are equal_@see java.util.Arrays#equals;public static boolean nullSafeEquals(Object o1, Object o2) {_		if (o1 == o2) {_			return true__		}_		if (o1 == null || o2 == null) {_			return false__		}_		if (o1.equals(o2)) {_			return true__		}_		if (o1.getClass().isArray() && o2.getClass().isArray()) {_			if (o1 instanceof Object[] && o2 instanceof Object[]) {_				return Arrays.equals((Object[]) o1, (Object[]) o2)__			}_			if (o1 instanceof boolean[] && o2 instanceof boolean[]) {_				return Arrays.equals((boolean[]) o1, (boolean[]) o2)__			}_			if (o1 instanceof byte[] && o2 instanceof byte[]) {_				return Arrays.equals((byte[]) o1, (byte[]) o2)__			}_			if (o1 instanceof char[] && o2 instanceof char[]) {_				return Arrays.equals((char[]) o1, (char[]) o2)__			}_			if (o1 instanceof double[] && o2 instanceof double[]) {_				return Arrays.equals((double[]) o1, (double[]) o2)__			}_			if (o1 instanceof float[] && o2 instanceof float[]) {_				return Arrays.equals((float[]) o1, (float[]) o2)__			}_			if (o1 instanceof int[] && o2 instanceof int[]) {_				return Arrays.equals((int[]) o1, (int[]) o2)__			}_			if (o1 instanceof long[] && o2 instanceof long[]) {_				return Arrays.equals((long[]) o1, (long[]) o2)__			}_			if (o1 instanceof short[] && o2 instanceof short[]) {_				return Arrays.equals((short[]) o1, (short[]) o2)__			}_		}_		return false__	};determine,if,the,given,objects,are,equal,returning,code,true,code,if,both,are,code,null,code,or,code,false,code,if,only,one,is,code,null,code,p,compares,arrays,with,code,arrays,equals,code,performing,an,equality,check,based,on,the,array,elements,rather,than,the,array,reference,param,o1,first,object,to,compare,param,o2,second,object,to,compare,return,whether,the,given,objects,are,equal,see,java,util,arrays,equals;public,static,boolean,null,safe,equals,object,o1,object,o2,if,o1,o2,return,true,if,o1,null,o2,null,return,false,if,o1,equals,o2,return,true,if,o1,get,class,is,array,o2,get,class,is,array,if,o1,instanceof,object,o2,instanceof,object,return,arrays,equals,object,o1,object,o2,if,o1,instanceof,boolean,o2,instanceof,boolean,return,arrays,equals,boolean,o1,boolean,o2,if,o1,instanceof,byte,o2,instanceof,byte,return,arrays,equals,byte,o1,byte,o2,if,o1,instanceof,char,o2,instanceof,char,return,arrays,equals,char,o1,char,o2,if,o1,instanceof,double,o2,instanceof,double,return,arrays,equals,double,o1,double,o2,if,o1,instanceof,float,o2,instanceof,float,return,arrays,equals,float,o1,float,o2,if,o1,instanceof,int,o2,instanceof,int,return,arrays,equals,int,o1,int,o2,if,o1,instanceof,long,o2,instanceof,long,return,arrays,equals,long,o1,long,o2,if,o1,instanceof,short,o2,instanceof,short,return,arrays,equals,short,o1,short,o2,return,false
ObjectUtils -> public static boolean nullSafeEquals(Object o1, Object o2);1356735495;Determine if the given objects are equal, returning {@code true}_if both are {@code null} or {@code false} if only one is_{@code null}._<p>Compares arrays with {@code Arrays.equals}, performing an equality_check based on the array elements rather than the array reference._@param o1 first Object to compare_@param o2 second Object to compare_@return whether the given objects are equal_@see java.util.Arrays#equals;public static boolean nullSafeEquals(Object o1, Object o2) {_		if (o1 == o2) {_			return true__		}_		if (o1 == null || o2 == null) {_			return false__		}_		if (o1.equals(o2)) {_			return true__		}_		if (o1.getClass().isArray() && o2.getClass().isArray()) {_			if (o1 instanceof Object[] && o2 instanceof Object[]) {_				return Arrays.equals((Object[]) o1, (Object[]) o2)__			}_			if (o1 instanceof boolean[] && o2 instanceof boolean[]) {_				return Arrays.equals((boolean[]) o1, (boolean[]) o2)__			}_			if (o1 instanceof byte[] && o2 instanceof byte[]) {_				return Arrays.equals((byte[]) o1, (byte[]) o2)__			}_			if (o1 instanceof char[] && o2 instanceof char[]) {_				return Arrays.equals((char[]) o1, (char[]) o2)__			}_			if (o1 instanceof double[] && o2 instanceof double[]) {_				return Arrays.equals((double[]) o1, (double[]) o2)__			}_			if (o1 instanceof float[] && o2 instanceof float[]) {_				return Arrays.equals((float[]) o1, (float[]) o2)__			}_			if (o1 instanceof int[] && o2 instanceof int[]) {_				return Arrays.equals((int[]) o1, (int[]) o2)__			}_			if (o1 instanceof long[] && o2 instanceof long[]) {_				return Arrays.equals((long[]) o1, (long[]) o2)__			}_			if (o1 instanceof short[] && o2 instanceof short[]) {_				return Arrays.equals((short[]) o1, (short[]) o2)__			}_		}_		return false__	};determine,if,the,given,objects,are,equal,returning,code,true,if,both,are,code,null,or,code,false,if,only,one,is,code,null,p,compares,arrays,with,code,arrays,equals,performing,an,equality,check,based,on,the,array,elements,rather,than,the,array,reference,param,o1,first,object,to,compare,param,o2,second,object,to,compare,return,whether,the,given,objects,are,equal,see,java,util,arrays,equals;public,static,boolean,null,safe,equals,object,o1,object,o2,if,o1,o2,return,true,if,o1,null,o2,null,return,false,if,o1,equals,o2,return,true,if,o1,get,class,is,array,o2,get,class,is,array,if,o1,instanceof,object,o2,instanceof,object,return,arrays,equals,object,o1,object,o2,if,o1,instanceof,boolean,o2,instanceof,boolean,return,arrays,equals,boolean,o1,boolean,o2,if,o1,instanceof,byte,o2,instanceof,byte,return,arrays,equals,byte,o1,byte,o2,if,o1,instanceof,char,o2,instanceof,char,return,arrays,equals,char,o1,char,o2,if,o1,instanceof,double,o2,instanceof,double,return,arrays,equals,double,o1,double,o2,if,o1,instanceof,float,o2,instanceof,float,return,arrays,equals,float,o1,float,o2,if,o1,instanceof,int,o2,instanceof,int,return,arrays,equals,int,o1,int,o2,if,o1,instanceof,long,o2,instanceof,long,return,arrays,equals,long,o1,long,o2,if,o1,instanceof,short,o2,instanceof,short,return,arrays,equals,short,o1,short,o2,return,false
ObjectUtils -> public static boolean nullSafeEquals(Object o1, Object o2);1362408075;Determine if the given objects are equal, returning {@code true}_if both are {@code null} or {@code false} if only one is_{@code null}._<p>Compares arrays with {@code Arrays.equals}, performing an equality_check based on the array elements rather than the array reference._@param o1 first Object to compare_@param o2 second Object to compare_@return whether the given objects are equal_@see java.util.Arrays#equals;public static boolean nullSafeEquals(Object o1, Object o2) {_		if (o1 == o2) {_			return true__		}_		if (o1 == null || o2 == null) {_			return false__		}_		if (o1.equals(o2)) {_			return true__		}_		if (o1.getClass().isArray() && o2.getClass().isArray()) {_			if (o1 instanceof Object[] && o2 instanceof Object[]) {_				return Arrays.equals((Object[]) o1, (Object[]) o2)__			}_			if (o1 instanceof boolean[] && o2 instanceof boolean[]) {_				return Arrays.equals((boolean[]) o1, (boolean[]) o2)__			}_			if (o1 instanceof byte[] && o2 instanceof byte[]) {_				return Arrays.equals((byte[]) o1, (byte[]) o2)__			}_			if (o1 instanceof char[] && o2 instanceof char[]) {_				return Arrays.equals((char[]) o1, (char[]) o2)__			}_			if (o1 instanceof double[] && o2 instanceof double[]) {_				return Arrays.equals((double[]) o1, (double[]) o2)__			}_			if (o1 instanceof float[] && o2 instanceof float[]) {_				return Arrays.equals((float[]) o1, (float[]) o2)__			}_			if (o1 instanceof int[] && o2 instanceof int[]) {_				return Arrays.equals((int[]) o1, (int[]) o2)__			}_			if (o1 instanceof long[] && o2 instanceof long[]) {_				return Arrays.equals((long[]) o1, (long[]) o2)__			}_			if (o1 instanceof short[] && o2 instanceof short[]) {_				return Arrays.equals((short[]) o1, (short[]) o2)__			}_		}_		return false__	};determine,if,the,given,objects,are,equal,returning,code,true,if,both,are,code,null,or,code,false,if,only,one,is,code,null,p,compares,arrays,with,code,arrays,equals,performing,an,equality,check,based,on,the,array,elements,rather,than,the,array,reference,param,o1,first,object,to,compare,param,o2,second,object,to,compare,return,whether,the,given,objects,are,equal,see,java,util,arrays,equals;public,static,boolean,null,safe,equals,object,o1,object,o2,if,o1,o2,return,true,if,o1,null,o2,null,return,false,if,o1,equals,o2,return,true,if,o1,get,class,is,array,o2,get,class,is,array,if,o1,instanceof,object,o2,instanceof,object,return,arrays,equals,object,o1,object,o2,if,o1,instanceof,boolean,o2,instanceof,boolean,return,arrays,equals,boolean,o1,boolean,o2,if,o1,instanceof,byte,o2,instanceof,byte,return,arrays,equals,byte,o1,byte,o2,if,o1,instanceof,char,o2,instanceof,char,return,arrays,equals,char,o1,char,o2,if,o1,instanceof,double,o2,instanceof,double,return,arrays,equals,double,o1,double,o2,if,o1,instanceof,float,o2,instanceof,float,return,arrays,equals,float,o1,float,o2,if,o1,instanceof,int,o2,instanceof,int,return,arrays,equals,int,o1,int,o2,if,o1,instanceof,long,o2,instanceof,long,return,arrays,equals,long,o1,long,o2,if,o1,instanceof,short,o2,instanceof,short,return,arrays,equals,short,o1,short,o2,return,false
ObjectUtils -> public static boolean nullSafeEquals(Object o1, Object o2);1385412762;Determine if the given objects are equal, returning {@code true}_if both are {@code null} or {@code false} if only one is_{@code null}._<p>Compares arrays with {@code Arrays.equals}, performing an equality_check based on the array elements rather than the array reference._@param o1 first Object to compare_@param o2 second Object to compare_@return whether the given objects are equal_@see java.util.Arrays#equals;public static boolean nullSafeEquals(Object o1, Object o2) {_		if (o1 == o2) {_			return true__		}_		if (o1 == null || o2 == null) {_			return false__		}_		if (o1.equals(o2)) {_			return true__		}_		if (o1.getClass().isArray() && o2.getClass().isArray()) {_			if (o1 instanceof Object[] && o2 instanceof Object[]) {_				return Arrays.equals((Object[]) o1, (Object[]) o2)__			}_			if (o1 instanceof boolean[] && o2 instanceof boolean[]) {_				return Arrays.equals((boolean[]) o1, (boolean[]) o2)__			}_			if (o1 instanceof byte[] && o2 instanceof byte[]) {_				return Arrays.equals((byte[]) o1, (byte[]) o2)__			}_			if (o1 instanceof char[] && o2 instanceof char[]) {_				return Arrays.equals((char[]) o1, (char[]) o2)__			}_			if (o1 instanceof double[] && o2 instanceof double[]) {_				return Arrays.equals((double[]) o1, (double[]) o2)__			}_			if (o1 instanceof float[] && o2 instanceof float[]) {_				return Arrays.equals((float[]) o1, (float[]) o2)__			}_			if (o1 instanceof int[] && o2 instanceof int[]) {_				return Arrays.equals((int[]) o1, (int[]) o2)__			}_			if (o1 instanceof long[] && o2 instanceof long[]) {_				return Arrays.equals((long[]) o1, (long[]) o2)__			}_			if (o1 instanceof short[] && o2 instanceof short[]) {_				return Arrays.equals((short[]) o1, (short[]) o2)__			}_		}_		return false__	};determine,if,the,given,objects,are,equal,returning,code,true,if,both,are,code,null,or,code,false,if,only,one,is,code,null,p,compares,arrays,with,code,arrays,equals,performing,an,equality,check,based,on,the,array,elements,rather,than,the,array,reference,param,o1,first,object,to,compare,param,o2,second,object,to,compare,return,whether,the,given,objects,are,equal,see,java,util,arrays,equals;public,static,boolean,null,safe,equals,object,o1,object,o2,if,o1,o2,return,true,if,o1,null,o2,null,return,false,if,o1,equals,o2,return,true,if,o1,get,class,is,array,o2,get,class,is,array,if,o1,instanceof,object,o2,instanceof,object,return,arrays,equals,object,o1,object,o2,if,o1,instanceof,boolean,o2,instanceof,boolean,return,arrays,equals,boolean,o1,boolean,o2,if,o1,instanceof,byte,o2,instanceof,byte,return,arrays,equals,byte,o1,byte,o2,if,o1,instanceof,char,o2,instanceof,char,return,arrays,equals,char,o1,char,o2,if,o1,instanceof,double,o2,instanceof,double,return,arrays,equals,double,o1,double,o2,if,o1,instanceof,float,o2,instanceof,float,return,arrays,equals,float,o1,float,o2,if,o1,instanceof,int,o2,instanceof,int,return,arrays,equals,int,o1,int,o2,if,o1,instanceof,long,o2,instanceof,long,return,arrays,equals,long,o1,long,o2,if,o1,instanceof,short,o2,instanceof,short,return,arrays,equals,short,o1,short,o2,return,false
ObjectUtils -> public static boolean nullSafeEquals(Object o1, Object o2);1389796508;Determine if the given objects are equal, returning {@code true}_if both are {@code null} or {@code false} if only one is_{@code null}._<p>Compares arrays with {@code Arrays.equals}, performing an equality_check based on the array elements rather than the array reference._@param o1 first Object to compare_@param o2 second Object to compare_@return whether the given objects are equal_@see java.util.Arrays#equals;public static boolean nullSafeEquals(Object o1, Object o2) {_		if (o1 == o2) {_			return true__		}_		if (o1 == null || o2 == null) {_			return false__		}_		if (o1.equals(o2)) {_			return true__		}_		if (o1.getClass().isArray() && o2.getClass().isArray()) {_			if (o1 instanceof Object[] && o2 instanceof Object[]) {_				return Arrays.equals((Object[]) o1, (Object[]) o2)__			}_			if (o1 instanceof boolean[] && o2 instanceof boolean[]) {_				return Arrays.equals((boolean[]) o1, (boolean[]) o2)__			}_			if (o1 instanceof byte[] && o2 instanceof byte[]) {_				return Arrays.equals((byte[]) o1, (byte[]) o2)__			}_			if (o1 instanceof char[] && o2 instanceof char[]) {_				return Arrays.equals((char[]) o1, (char[]) o2)__			}_			if (o1 instanceof double[] && o2 instanceof double[]) {_				return Arrays.equals((double[]) o1, (double[]) o2)__			}_			if (o1 instanceof float[] && o2 instanceof float[]) {_				return Arrays.equals((float[]) o1, (float[]) o2)__			}_			if (o1 instanceof int[] && o2 instanceof int[]) {_				return Arrays.equals((int[]) o1, (int[]) o2)__			}_			if (o1 instanceof long[] && o2 instanceof long[]) {_				return Arrays.equals((long[]) o1, (long[]) o2)__			}_			if (o1 instanceof short[] && o2 instanceof short[]) {_				return Arrays.equals((short[]) o1, (short[]) o2)__			}_		}_		return false__	};determine,if,the,given,objects,are,equal,returning,code,true,if,both,are,code,null,or,code,false,if,only,one,is,code,null,p,compares,arrays,with,code,arrays,equals,performing,an,equality,check,based,on,the,array,elements,rather,than,the,array,reference,param,o1,first,object,to,compare,param,o2,second,object,to,compare,return,whether,the,given,objects,are,equal,see,java,util,arrays,equals;public,static,boolean,null,safe,equals,object,o1,object,o2,if,o1,o2,return,true,if,o1,null,o2,null,return,false,if,o1,equals,o2,return,true,if,o1,get,class,is,array,o2,get,class,is,array,if,o1,instanceof,object,o2,instanceof,object,return,arrays,equals,object,o1,object,o2,if,o1,instanceof,boolean,o2,instanceof,boolean,return,arrays,equals,boolean,o1,boolean,o2,if,o1,instanceof,byte,o2,instanceof,byte,return,arrays,equals,byte,o1,byte,o2,if,o1,instanceof,char,o2,instanceof,char,return,arrays,equals,char,o1,char,o2,if,o1,instanceof,double,o2,instanceof,double,return,arrays,equals,double,o1,double,o2,if,o1,instanceof,float,o2,instanceof,float,return,arrays,equals,float,o1,float,o2,if,o1,instanceof,int,o2,instanceof,int,return,arrays,equals,int,o1,int,o2,if,o1,instanceof,long,o2,instanceof,long,return,arrays,equals,long,o1,long,o2,if,o1,instanceof,short,o2,instanceof,short,return,arrays,equals,short,o1,short,o2,return,false
ObjectUtils -> public static boolean nullSafeEquals(Object o1, Object o2);1389798571;Determine if the given objects are equal, returning {@code true}_if both are {@code null} or {@code false} if only one is_{@code null}._<p>Compares arrays with {@code Arrays.equals}, performing an equality_check based on the array elements rather than the array reference._@param o1 first Object to compare_@param o2 second Object to compare_@return whether the given objects are equal_@see java.util.Arrays#equals;public static boolean nullSafeEquals(Object o1, Object o2) {_		if (o1 == o2) {_			return true__		}_		if (o1 == null || o2 == null) {_			return false__		}_		if (o1.equals(o2)) {_			return true__		}_		if (o1.getClass().isArray() && o2.getClass().isArray()) {_			if (o1 instanceof Object[] && o2 instanceof Object[]) {_				return Arrays.equals((Object[]) o1, (Object[]) o2)__			}_			if (o1 instanceof boolean[] && o2 instanceof boolean[]) {_				return Arrays.equals((boolean[]) o1, (boolean[]) o2)__			}_			if (o1 instanceof byte[] && o2 instanceof byte[]) {_				return Arrays.equals((byte[]) o1, (byte[]) o2)__			}_			if (o1 instanceof char[] && o2 instanceof char[]) {_				return Arrays.equals((char[]) o1, (char[]) o2)__			}_			if (o1 instanceof double[] && o2 instanceof double[]) {_				return Arrays.equals((double[]) o1, (double[]) o2)__			}_			if (o1 instanceof float[] && o2 instanceof float[]) {_				return Arrays.equals((float[]) o1, (float[]) o2)__			}_			if (o1 instanceof int[] && o2 instanceof int[]) {_				return Arrays.equals((int[]) o1, (int[]) o2)__			}_			if (o1 instanceof long[] && o2 instanceof long[]) {_				return Arrays.equals((long[]) o1, (long[]) o2)__			}_			if (o1 instanceof short[] && o2 instanceof short[]) {_				return Arrays.equals((short[]) o1, (short[]) o2)__			}_		}_		return false__	};determine,if,the,given,objects,are,equal,returning,code,true,if,both,are,code,null,or,code,false,if,only,one,is,code,null,p,compares,arrays,with,code,arrays,equals,performing,an,equality,check,based,on,the,array,elements,rather,than,the,array,reference,param,o1,first,object,to,compare,param,o2,second,object,to,compare,return,whether,the,given,objects,are,equal,see,java,util,arrays,equals;public,static,boolean,null,safe,equals,object,o1,object,o2,if,o1,o2,return,true,if,o1,null,o2,null,return,false,if,o1,equals,o2,return,true,if,o1,get,class,is,array,o2,get,class,is,array,if,o1,instanceof,object,o2,instanceof,object,return,arrays,equals,object,o1,object,o2,if,o1,instanceof,boolean,o2,instanceof,boolean,return,arrays,equals,boolean,o1,boolean,o2,if,o1,instanceof,byte,o2,instanceof,byte,return,arrays,equals,byte,o1,byte,o2,if,o1,instanceof,char,o2,instanceof,char,return,arrays,equals,char,o1,char,o2,if,o1,instanceof,double,o2,instanceof,double,return,arrays,equals,double,o1,double,o2,if,o1,instanceof,float,o2,instanceof,float,return,arrays,equals,float,o1,float,o2,if,o1,instanceof,int,o2,instanceof,int,return,arrays,equals,int,o1,int,o2,if,o1,instanceof,long,o2,instanceof,long,return,arrays,equals,long,o1,long,o2,if,o1,instanceof,short,o2,instanceof,short,return,arrays,equals,short,o1,short,o2,return,false
ObjectUtils -> public static boolean nullSafeEquals(Object o1, Object o2);1405696918;Determine if the given objects are equal, returning {@code true}_if both are {@code null} or {@code false} if only one is_{@code null}._<p>Compares arrays with {@code Arrays.equals}, performing an equality_check based on the array elements rather than the array reference._@param o1 first Object to compare_@param o2 second Object to compare_@return whether the given objects are equal_@see java.util.Arrays#equals;public static boolean nullSafeEquals(Object o1, Object o2) {_		if (o1 == o2) {_			return true__		}_		if (o1 == null || o2 == null) {_			return false__		}_		if (o1.equals(o2)) {_			return true__		}_		if (o1.getClass().isArray() && o2.getClass().isArray()) {_			if (o1 instanceof Object[] && o2 instanceof Object[]) {_				return Arrays.equals((Object[]) o1, (Object[]) o2)__			}_			if (o1 instanceof boolean[] && o2 instanceof boolean[]) {_				return Arrays.equals((boolean[]) o1, (boolean[]) o2)__			}_			if (o1 instanceof byte[] && o2 instanceof byte[]) {_				return Arrays.equals((byte[]) o1, (byte[]) o2)__			}_			if (o1 instanceof char[] && o2 instanceof char[]) {_				return Arrays.equals((char[]) o1, (char[]) o2)__			}_			if (o1 instanceof double[] && o2 instanceof double[]) {_				return Arrays.equals((double[]) o1, (double[]) o2)__			}_			if (o1 instanceof float[] && o2 instanceof float[]) {_				return Arrays.equals((float[]) o1, (float[]) o2)__			}_			if (o1 instanceof int[] && o2 instanceof int[]) {_				return Arrays.equals((int[]) o1, (int[]) o2)__			}_			if (o1 instanceof long[] && o2 instanceof long[]) {_				return Arrays.equals((long[]) o1, (long[]) o2)__			}_			if (o1 instanceof short[] && o2 instanceof short[]) {_				return Arrays.equals((short[]) o1, (short[]) o2)__			}_		}_		return false__	};determine,if,the,given,objects,are,equal,returning,code,true,if,both,are,code,null,or,code,false,if,only,one,is,code,null,p,compares,arrays,with,code,arrays,equals,performing,an,equality,check,based,on,the,array,elements,rather,than,the,array,reference,param,o1,first,object,to,compare,param,o2,second,object,to,compare,return,whether,the,given,objects,are,equal,see,java,util,arrays,equals;public,static,boolean,null,safe,equals,object,o1,object,o2,if,o1,o2,return,true,if,o1,null,o2,null,return,false,if,o1,equals,o2,return,true,if,o1,get,class,is,array,o2,get,class,is,array,if,o1,instanceof,object,o2,instanceof,object,return,arrays,equals,object,o1,object,o2,if,o1,instanceof,boolean,o2,instanceof,boolean,return,arrays,equals,boolean,o1,boolean,o2,if,o1,instanceof,byte,o2,instanceof,byte,return,arrays,equals,byte,o1,byte,o2,if,o1,instanceof,char,o2,instanceof,char,return,arrays,equals,char,o1,char,o2,if,o1,instanceof,double,o2,instanceof,double,return,arrays,equals,double,o1,double,o2,if,o1,instanceof,float,o2,instanceof,float,return,arrays,equals,float,o1,float,o2,if,o1,instanceof,int,o2,instanceof,int,return,arrays,equals,int,o1,int,o2,if,o1,instanceof,long,o2,instanceof,long,return,arrays,equals,long,o1,long,o2,if,o1,instanceof,short,o2,instanceof,short,return,arrays,equals,short,o1,short,o2,return,false
ObjectUtils -> public static boolean nullSafeEquals(Object o1, Object o2);1434129562;Determine if the given objects are equal, returning {@code true}_if both are {@code null} or {@code false} if only one is_{@code null}._<p>Compares arrays with {@code Arrays.equals}, performing an equality_check based on the array elements rather than the array reference._@param o1 first Object to compare_@param o2 second Object to compare_@return whether the given objects are equal_@see java.util.Arrays#equals;public static boolean nullSafeEquals(Object o1, Object o2) {_		if (o1 == o2) {_			return true__		}_		if (o1 == null || o2 == null) {_			return false__		}_		if (o1.equals(o2)) {_			return true__		}_		if (o1.getClass().isArray() && o2.getClass().isArray()) {_			if (o1 instanceof Object[] && o2 instanceof Object[]) {_				return Arrays.equals((Object[]) o1, (Object[]) o2)__			}_			if (o1 instanceof boolean[] && o2 instanceof boolean[]) {_				return Arrays.equals((boolean[]) o1, (boolean[]) o2)__			}_			if (o1 instanceof byte[] && o2 instanceof byte[]) {_				return Arrays.equals((byte[]) o1, (byte[]) o2)__			}_			if (o1 instanceof char[] && o2 instanceof char[]) {_				return Arrays.equals((char[]) o1, (char[]) o2)__			}_			if (o1 instanceof double[] && o2 instanceof double[]) {_				return Arrays.equals((double[]) o1, (double[]) o2)__			}_			if (o1 instanceof float[] && o2 instanceof float[]) {_				return Arrays.equals((float[]) o1, (float[]) o2)__			}_			if (o1 instanceof int[] && o2 instanceof int[]) {_				return Arrays.equals((int[]) o1, (int[]) o2)__			}_			if (o1 instanceof long[] && o2 instanceof long[]) {_				return Arrays.equals((long[]) o1, (long[]) o2)__			}_			if (o1 instanceof short[] && o2 instanceof short[]) {_				return Arrays.equals((short[]) o1, (short[]) o2)__			}_		}_		return false__	};determine,if,the,given,objects,are,equal,returning,code,true,if,both,are,code,null,or,code,false,if,only,one,is,code,null,p,compares,arrays,with,code,arrays,equals,performing,an,equality,check,based,on,the,array,elements,rather,than,the,array,reference,param,o1,first,object,to,compare,param,o2,second,object,to,compare,return,whether,the,given,objects,are,equal,see,java,util,arrays,equals;public,static,boolean,null,safe,equals,object,o1,object,o2,if,o1,o2,return,true,if,o1,null,o2,null,return,false,if,o1,equals,o2,return,true,if,o1,get,class,is,array,o2,get,class,is,array,if,o1,instanceof,object,o2,instanceof,object,return,arrays,equals,object,o1,object,o2,if,o1,instanceof,boolean,o2,instanceof,boolean,return,arrays,equals,boolean,o1,boolean,o2,if,o1,instanceof,byte,o2,instanceof,byte,return,arrays,equals,byte,o1,byte,o2,if,o1,instanceof,char,o2,instanceof,char,return,arrays,equals,char,o1,char,o2,if,o1,instanceof,double,o2,instanceof,double,return,arrays,equals,double,o1,double,o2,if,o1,instanceof,float,o2,instanceof,float,return,arrays,equals,float,o1,float,o2,if,o1,instanceof,int,o2,instanceof,int,return,arrays,equals,int,o1,int,o2,if,o1,instanceof,long,o2,instanceof,long,return,arrays,equals,long,o1,long,o2,if,o1,instanceof,short,o2,instanceof,short,return,arrays,equals,short,o1,short,o2,return,false
ObjectUtils -> public static boolean nullSafeEquals(Object o1, Object o2);1465504808;Determine if the given objects are equal, returning {@code true} if_both are {@code null} or {@code false} if only one is {@code null}._<p>Compares arrays with {@code Arrays.equals}, performing an equality_check based on the array elements rather than the array reference._@param o1 first Object to compare_@param o2 second Object to compare_@return whether the given objects are equal_@see Object#equals(Object)_@see java.util.Arrays#equals;public static boolean nullSafeEquals(Object o1, Object o2) {_		if (o1 == o2) {_			return true__		}_		if (o1 == null || o2 == null) {_			return false__		}_		if (o1.equals(o2)) {_			return true__		}_		if (o1.getClass().isArray() && o2.getClass().isArray()) {_			return arrayEquals(o1, o2)__		}_		return false__	};determine,if,the,given,objects,are,equal,returning,code,true,if,both,are,code,null,or,code,false,if,only,one,is,code,null,p,compares,arrays,with,code,arrays,equals,performing,an,equality,check,based,on,the,array,elements,rather,than,the,array,reference,param,o1,first,object,to,compare,param,o2,second,object,to,compare,return,whether,the,given,objects,are,equal,see,object,equals,object,see,java,util,arrays,equals;public,static,boolean,null,safe,equals,object,o1,object,o2,if,o1,o2,return,true,if,o1,null,o2,null,return,false,if,o1,equals,o2,return,true,if,o1,get,class,is,array,o2,get,class,is,array,return,array,equals,o1,o2,return,false
ObjectUtils -> public static boolean nullSafeEquals(Object o1, Object o2);1467677340;Determine if the given objects are equal, returning {@code true} if_both are {@code null} or {@code false} if only one is {@code null}._<p>Compares arrays with {@code Arrays.equals}, performing an equality_check based on the array elements rather than the array reference._@param o1 first Object to compare_@param o2 second Object to compare_@return whether the given objects are equal_@see Object#equals(Object)_@see java.util.Arrays#equals;public static boolean nullSafeEquals(Object o1, Object o2) {_		if (o1 == o2) {_			return true__		}_		if (o1 == null || o2 == null) {_			return false__		}_		if (o1.equals(o2)) {_			return true__		}_		if (o1.getClass().isArray() && o2.getClass().isArray()) {_			return arrayEquals(o1, o2)__		}_		return false__	};determine,if,the,given,objects,are,equal,returning,code,true,if,both,are,code,null,or,code,false,if,only,one,is,code,null,p,compares,arrays,with,code,arrays,equals,performing,an,equality,check,based,on,the,array,elements,rather,than,the,array,reference,param,o1,first,object,to,compare,param,o2,second,object,to,compare,return,whether,the,given,objects,are,equal,see,object,equals,object,see,java,util,arrays,equals;public,static,boolean,null,safe,equals,object,o1,object,o2,if,o1,o2,return,true,if,o1,null,o2,null,return,false,if,o1,equals,o2,return,true,if,o1,get,class,is,array,o2,get,class,is,array,return,array,equals,o1,o2,return,false
ObjectUtils -> public static boolean nullSafeEquals(Object o1, Object o2);1491319010;Determine if the given objects are equal, returning {@code true} if_both are {@code null} or {@code false} if only one is {@code null}._<p>Compares arrays with {@code Arrays.equals}, performing an equality_check based on the array elements rather than the array reference._@param o1 first Object to compare_@param o2 second Object to compare_@return whether the given objects are equal_@see Object#equals(Object)_@see java.util.Arrays#equals;public static boolean nullSafeEquals(Object o1, Object o2) {_		if (o1 == o2) {_			return true__		}_		if (o1 == null || o2 == null) {_			return false__		}_		if (o1.equals(o2)) {_			return true__		}_		if (o1.getClass().isArray() && o2.getClass().isArray()) {_			return arrayEquals(o1, o2)__		}_		return false__	};determine,if,the,given,objects,are,equal,returning,code,true,if,both,are,code,null,or,code,false,if,only,one,is,code,null,p,compares,arrays,with,code,arrays,equals,performing,an,equality,check,based,on,the,array,elements,rather,than,the,array,reference,param,o1,first,object,to,compare,param,o2,second,object,to,compare,return,whether,the,given,objects,are,equal,see,object,equals,object,see,java,util,arrays,equals;public,static,boolean,null,safe,equals,object,o1,object,o2,if,o1,o2,return,true,if,o1,null,o2,null,return,false,if,o1,equals,o2,return,true,if,o1,get,class,is,array,o2,get,class,is,array,return,array,equals,o1,o2,return,false
ObjectUtils -> public static int nullSafeHashCode(@Nullable double[] array);1495868221;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable double[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (double element : array) {_			hash = MULTIPLIER * hash + Double.hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,double,array,if,array,null,return,0,int,hash,for,double,element,array,hash,multiplier,hash,double,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable double[] array);1496837955;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable double[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (double element : array) {_			hash = MULTIPLIER * hash + Double.hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,double,array,if,array,null,return,0,int,hash,for,double,element,array,hash,multiplier,hash,double,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable double[] array);1505924929;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable double[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (double element : array) {_			hash = MULTIPLIER * hash + Double.hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,double,array,if,array,null,return,0,int,hash,for,double,element,array,hash,multiplier,hash,double,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable double[] array);1538724083;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable double[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (double element : array) {_			hash = MULTIPLIER * hash + Double.hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,double,array,if,array,null,return,0,int,hash,for,double,element,array,hash,multiplier,hash,double,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable double[] array);1542748004;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable double[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (double element : array) {_			hash = MULTIPLIER * hash + Double.hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,double,array,if,array,null,return,0,int,hash,for,double,element,array,hash,multiplier,hash,double,hash,code,element,return,hash
ObjectUtils -> public static String identityToString(Object obj);1328020251;Return a String representation of an object's overall identity._@param obj the object (may be <code>null</code>)_@return the object's identity as String representation,_or an empty String if the object was <code>null</code>;public static String identityToString(Object obj) {_		if (obj == null) {_			return EMPTY_STRING__		}_		return obj.getClass().getName() + "@" + getIdentityHexString(obj)__	};return,a,string,representation,of,an,object,s,overall,identity,param,obj,the,object,may,be,code,null,code,return,the,object,s,identity,as,string,representation,or,an,empty,string,if,the,object,was,code,null,code;public,static,string,identity,to,string,object,obj,if,obj,null,return,return,obj,get,class,get,name,get,identity,hex,string,obj
ObjectUtils -> public static String identityToString(Object obj);1356735495;Return a String representation of an object's overall identity._@param obj the object (may be {@code null})_@return the object's identity as String representation,_or an empty String if the object was {@code null};public static String identityToString(Object obj) {_		if (obj == null) {_			return EMPTY_STRING__		}_		return obj.getClass().getName() + "@" + getIdentityHexString(obj)__	};return,a,string,representation,of,an,object,s,overall,identity,param,obj,the,object,may,be,code,null,return,the,object,s,identity,as,string,representation,or,an,empty,string,if,the,object,was,code,null;public,static,string,identity,to,string,object,obj,if,obj,null,return,return,obj,get,class,get,name,get,identity,hex,string,obj
ObjectUtils -> public static String identityToString(Object obj);1362408075;Return a String representation of an object's overall identity._@param obj the object (may be {@code null})_@return the object's identity as String representation,_or an empty String if the object was {@code null};public static String identityToString(Object obj) {_		if (obj == null) {_			return EMPTY_STRING__		}_		return obj.getClass().getName() + "@" + getIdentityHexString(obj)__	};return,a,string,representation,of,an,object,s,overall,identity,param,obj,the,object,may,be,code,null,return,the,object,s,identity,as,string,representation,or,an,empty,string,if,the,object,was,code,null;public,static,string,identity,to,string,object,obj,if,obj,null,return,return,obj,get,class,get,name,get,identity,hex,string,obj
ObjectUtils -> public static String identityToString(Object obj);1385412762;Return a String representation of an object's overall identity._@param obj the object (may be {@code null})_@return the object's identity as String representation,_or an empty String if the object was {@code null};public static String identityToString(Object obj) {_		if (obj == null) {_			return EMPTY_STRING__		}_		return obj.getClass().getName() + "@" + getIdentityHexString(obj)__	};return,a,string,representation,of,an,object,s,overall,identity,param,obj,the,object,may,be,code,null,return,the,object,s,identity,as,string,representation,or,an,empty,string,if,the,object,was,code,null;public,static,string,identity,to,string,object,obj,if,obj,null,return,return,obj,get,class,get,name,get,identity,hex,string,obj
ObjectUtils -> public static String identityToString(Object obj);1389796508;Return a String representation of an object's overall identity._@param obj the object (may be {@code null})_@return the object's identity as String representation,_or an empty String if the object was {@code null};public static String identityToString(Object obj) {_		if (obj == null) {_			return EMPTY_STRING__		}_		return obj.getClass().getName() + "@" + getIdentityHexString(obj)__	};return,a,string,representation,of,an,object,s,overall,identity,param,obj,the,object,may,be,code,null,return,the,object,s,identity,as,string,representation,or,an,empty,string,if,the,object,was,code,null;public,static,string,identity,to,string,object,obj,if,obj,null,return,return,obj,get,class,get,name,get,identity,hex,string,obj
ObjectUtils -> public static String identityToString(Object obj);1389798571;Return a String representation of an object's overall identity._@param obj the object (may be {@code null})_@return the object's identity as String representation,_or an empty String if the object was {@code null};public static String identityToString(Object obj) {_		if (obj == null) {_			return EMPTY_STRING__		}_		return obj.getClass().getName() + "@" + getIdentityHexString(obj)__	};return,a,string,representation,of,an,object,s,overall,identity,param,obj,the,object,may,be,code,null,return,the,object,s,identity,as,string,representation,or,an,empty,string,if,the,object,was,code,null;public,static,string,identity,to,string,object,obj,if,obj,null,return,return,obj,get,class,get,name,get,identity,hex,string,obj
ObjectUtils -> public static String identityToString(Object obj);1405696918;Return a String representation of an object's overall identity._@param obj the object (may be {@code null})_@return the object's identity as String representation,_or an empty String if the object was {@code null};public static String identityToString(Object obj) {_		if (obj == null) {_			return EMPTY_STRING__		}_		return obj.getClass().getName() + "@" + getIdentityHexString(obj)__	};return,a,string,representation,of,an,object,s,overall,identity,param,obj,the,object,may,be,code,null,return,the,object,s,identity,as,string,representation,or,an,empty,string,if,the,object,was,code,null;public,static,string,identity,to,string,object,obj,if,obj,null,return,return,obj,get,class,get,name,get,identity,hex,string,obj
ObjectUtils -> public static String identityToString(Object obj);1434129562;Return a String representation of an object's overall identity._@param obj the object (may be {@code null})_@return the object's identity as String representation,_or an empty String if the object was {@code null};public static String identityToString(Object obj) {_		if (obj == null) {_			return EMPTY_STRING__		}_		return obj.getClass().getName() + "@" + getIdentityHexString(obj)__	};return,a,string,representation,of,an,object,s,overall,identity,param,obj,the,object,may,be,code,null,return,the,object,s,identity,as,string,representation,or,an,empty,string,if,the,object,was,code,null;public,static,string,identity,to,string,object,obj,if,obj,null,return,return,obj,get,class,get,name,get,identity,hex,string,obj
ObjectUtils -> public static String identityToString(Object obj);1465504808;Return a String representation of an object's overall identity._@param obj the object (may be {@code null})_@return the object's identity as String representation,_or an empty String if the object was {@code null};public static String identityToString(Object obj) {_		if (obj == null) {_			return EMPTY_STRING__		}_		return obj.getClass().getName() + "@" + getIdentityHexString(obj)__	};return,a,string,representation,of,an,object,s,overall,identity,param,obj,the,object,may,be,code,null,return,the,object,s,identity,as,string,representation,or,an,empty,string,if,the,object,was,code,null;public,static,string,identity,to,string,object,obj,if,obj,null,return,return,obj,get,class,get,name,get,identity,hex,string,obj
ObjectUtils -> public static String identityToString(Object obj);1467677340;Return a String representation of an object's overall identity._@param obj the object (may be {@code null})_@return the object's identity as String representation,_or an empty String if the object was {@code null};public static String identityToString(Object obj) {_		if (obj == null) {_			return EMPTY_STRING__		}_		return obj.getClass().getName() + "@" + getIdentityHexString(obj)__	};return,a,string,representation,of,an,object,s,overall,identity,param,obj,the,object,may,be,code,null,return,the,object,s,identity,as,string,representation,or,an,empty,string,if,the,object,was,code,null;public,static,string,identity,to,string,object,obj,if,obj,null,return,return,obj,get,class,get,name,get,identity,hex,string,obj
ObjectUtils -> public static String identityToString(Object obj);1491319010;Return a String representation of an object's overall identity._@param obj the object (may be {@code null})_@return the object's identity as String representation,_or an empty String if the object was {@code null};public static String identityToString(Object obj) {_		if (obj == null) {_			return EMPTY_STRING__		}_		return obj.getClass().getName() + "@" + getIdentityHexString(obj)__	};return,a,string,representation,of,an,object,s,overall,identity,param,obj,the,object,may,be,code,null,return,the,object,s,identity,as,string,representation,or,an,empty,string,if,the,object,was,code,null;public,static,string,identity,to,string,object,obj,if,obj,null,return,return,obj,get,class,get,name,get,identity,hex,string,obj
ObjectUtils -> public static int nullSafeHashCode(@Nullable long[] array);1495868221;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable long[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (long element : array) {_			hash = MULTIPLIER * hash + Long.hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,long,array,if,array,null,return,0,int,hash,for,long,element,array,hash,multiplier,hash,long,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable long[] array);1496837955;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable long[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (long element : array) {_			hash = MULTIPLIER * hash + Long.hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,long,array,if,array,null,return,0,int,hash,for,long,element,array,hash,multiplier,hash,long,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable long[] array);1505924929;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable long[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (long element : array) {_			hash = MULTIPLIER * hash + Long.hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,long,array,if,array,null,return,0,int,hash,for,long,element,array,hash,multiplier,hash,long,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable long[] array);1538724083;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable long[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (long element : array) {_			hash = MULTIPLIER * hash + Long.hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,long,array,if,array,null,return,0,int,hash,for,long,element,array,hash,multiplier,hash,long,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable long[] array);1542748004;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable long[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (long element : array) {_			hash = MULTIPLIER * hash + Long.hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,long,array,if,array,null,return,0,int,hash,for,long,element,array,hash,multiplier,hash,long,hash,code,element,return,hash
ObjectUtils -> @Deprecated 	public static int hashCode(boolean bool);1491319010;Return the same value as {@link Boolean#hashCode(boolean)}}._@deprecated as of Spring Framework 5.0, in favor of the native JDK 8 variant;@Deprecated_	public static int hashCode(boolean bool) {_		return Boolean.hashCode(bool)__	};return,the,same,value,as,link,boolean,hash,code,boolean,deprecated,as,of,spring,framework,5,0,in,favor,of,the,native,jdk,8,variant;deprecated,public,static,int,hash,code,boolean,bool,return,boolean,hash,code,bool
ObjectUtils -> @Deprecated 	public static int hashCode(boolean bool);1495868221;Return the same value as {@link Boolean#hashCode(boolean)}}._@deprecated as of Spring Framework 5.0, in favor of the native JDK 8 variant;@Deprecated_	public static int hashCode(boolean bool) {_		return Boolean.hashCode(bool)__	};return,the,same,value,as,link,boolean,hash,code,boolean,deprecated,as,of,spring,framework,5,0,in,favor,of,the,native,jdk,8,variant;deprecated,public,static,int,hash,code,boolean,bool,return,boolean,hash,code,bool
ObjectUtils -> @Deprecated 	public static int hashCode(boolean bool);1496837955;Return the same value as {@link Boolean#hashCode(boolean)}}._@deprecated as of Spring Framework 5.0, in favor of the native JDK 8 variant;@Deprecated_	public static int hashCode(boolean bool) {_		return Boolean.hashCode(bool)__	};return,the,same,value,as,link,boolean,hash,code,boolean,deprecated,as,of,spring,framework,5,0,in,favor,of,the,native,jdk,8,variant;deprecated,public,static,int,hash,code,boolean,bool,return,boolean,hash,code,bool
ObjectUtils -> @Deprecated 	public static int hashCode(boolean bool);1505924929;Return the same value as {@link Boolean#hashCode(boolean)}}._@deprecated as of Spring Framework 5.0, in favor of the native JDK 8 variant;@Deprecated_	public static int hashCode(boolean bool) {_		return Boolean.hashCode(bool)__	};return,the,same,value,as,link,boolean,hash,code,boolean,deprecated,as,of,spring,framework,5,0,in,favor,of,the,native,jdk,8,variant;deprecated,public,static,int,hash,code,boolean,bool,return,boolean,hash,code,bool
ObjectUtils -> @Deprecated 	public static int hashCode(boolean bool);1538724083;Return the same value as {@link Boolean#hashCode(boolean)}}._@deprecated as of Spring Framework 5.0, in favor of the native JDK 8 variant;@Deprecated_	public static int hashCode(boolean bool) {_		return Boolean.hashCode(bool)__	};return,the,same,value,as,link,boolean,hash,code,boolean,deprecated,as,of,spring,framework,5,0,in,favor,of,the,native,jdk,8,variant;deprecated,public,static,int,hash,code,boolean,bool,return,boolean,hash,code,bool
ObjectUtils -> @Deprecated 	public static int hashCode(boolean bool);1542748004;Return the same value as {@link Boolean#hashCode(boolean)}}._@deprecated as of Spring Framework 5.0, in favor of the native JDK 8 variant;@Deprecated_	public static int hashCode(boolean bool) {_		return Boolean.hashCode(bool)__	};return,the,same,value,as,link,boolean,hash,code,boolean,deprecated,as,of,spring,framework,5,0,in,favor,of,the,native,jdk,8,variant;deprecated,public,static,int,hash,code,boolean,bool,return,boolean,hash,code,bool
ObjectUtils -> public static int nullSafeHashCode(double[] array);1328020251;Return a hash code based on the contents of the specified array._If <code>array</code> is <code>null</code>, this method returns 0.;public static int nullSafeHashCode(double[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + hashCode(array[i])__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,code,is,code,null,code,this,method,returns,0;public,static,int,null,safe,hash,code,double,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,hash,code,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(double[] array);1356735495;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(double[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + hashCode(array[i])__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,double,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,hash,code,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(double[] array);1362408075;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(double[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + hashCode(array[i])__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,double,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,hash,code,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(double[] array);1385412762;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(double[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + hashCode(array[i])__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,double,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,hash,code,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(double[] array);1389796508;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(double[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (double element : array) {_			hash = MULTIPLIER * hash + hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,double,array,if,array,null,return,0,int,hash,for,double,element,array,hash,multiplier,hash,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(double[] array);1389798571;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(double[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (double element : array) {_			hash = MULTIPLIER * hash + hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,double,array,if,array,null,return,0,int,hash,for,double,element,array,hash,multiplier,hash,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(double[] array);1405696918;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(double[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (double element : array) {_			hash = MULTIPLIER * hash + hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,double,array,if,array,null,return,0,int,hash,for,double,element,array,hash,multiplier,hash,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(double[] array);1434129562;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(double[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (double element : array) {_			hash = MULTIPLIER * hash + hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,double,array,if,array,null,return,0,int,hash,for,double,element,array,hash,multiplier,hash,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(double[] array);1465504808;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(double[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (double element : array) {_			hash = MULTIPLIER * hash + hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,double,array,if,array,null,return,0,int,hash,for,double,element,array,hash,multiplier,hash,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(double[] array);1467677340;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(double[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (double element : array) {_			hash = MULTIPLIER * hash + hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,double,array,if,array,null,return,0,int,hash,for,double,element,array,hash,multiplier,hash,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(double[] array);1491319010;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(double[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (double element : array) {_			hash = MULTIPLIER * hash + Double.hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,double,array,if,array,null,return,0,int,hash,for,double,element,array,hash,multiplier,hash,double,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(float[] array);1328020251;Return a hash code based on the contents of the specified array._If <code>array</code> is <code>null</code>, this method returns 0.;public static int nullSafeHashCode(float[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + hashCode(array[i])__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,code,is,code,null,code,this,method,returns,0;public,static,int,null,safe,hash,code,float,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,hash,code,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(float[] array);1356735495;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(float[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + hashCode(array[i])__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,float,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,hash,code,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(float[] array);1362408075;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(float[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + hashCode(array[i])__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,float,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,hash,code,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(float[] array);1385412762;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(float[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + hashCode(array[i])__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,float,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,hash,code,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(float[] array);1389796508;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(float[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (float element : array) {_			hash = MULTIPLIER * hash + hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,float,array,if,array,null,return,0,int,hash,for,float,element,array,hash,multiplier,hash,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(float[] array);1389798571;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(float[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (float element : array) {_			hash = MULTIPLIER * hash + hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,float,array,if,array,null,return,0,int,hash,for,float,element,array,hash,multiplier,hash,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(float[] array);1405696918;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(float[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (float element : array) {_			hash = MULTIPLIER * hash + hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,float,array,if,array,null,return,0,int,hash,for,float,element,array,hash,multiplier,hash,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(float[] array);1434129562;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(float[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (float element : array) {_			hash = MULTIPLIER * hash + hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,float,array,if,array,null,return,0,int,hash,for,float,element,array,hash,multiplier,hash,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(float[] array);1465504808;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(float[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (float element : array) {_			hash = MULTIPLIER * hash + hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,float,array,if,array,null,return,0,int,hash,for,float,element,array,hash,multiplier,hash,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(float[] array);1467677340;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(float[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (float element : array) {_			hash = MULTIPLIER * hash + hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,float,array,if,array,null,return,0,int,hash,for,float,element,array,hash,multiplier,hash,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(float[] array);1491319010;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(float[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (float element : array) {_			hash = MULTIPLIER * hash + Float.hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,float,array,if,array,null,return,0,int,hash,for,float,element,array,hash,multiplier,hash,float,hash,code,element,return,hash
ObjectUtils -> public static <A, O extends A>  A[] addObjectToArray(@Nullable A[] array, @Nullable O obj);1496837955;Append the given object to the given array, returning a new array_consisting of the input array contents plus the given object._@param array the array to append to (can be {@code null})_@param obj the object to append_@return the new array (of the same component type_ never {@code null});public static <A, O extends A>  A[] addObjectToArray(@Nullable A[] array, @Nullable O obj) {_		Class<?> compType = Object.class__		if (array != null) {_			compType = array.getClass().getComponentType()__		}_		else if (obj != null) {_			compType = obj.getClass()__		}_		int newArrLength = (array != null ? array.length + 1 : 1)__		@SuppressWarnings("unchecked")_		A[] newArr = (A[]) Array.newInstance(compType, newArrLength)__		if (array != null) {_			System.arraycopy(array, 0, newArr, 0, array.length)__		}_		newArr[newArr.length - 1] = obj__		return newArr__	};append,the,given,object,to,the,given,array,returning,a,new,array,consisting,of,the,input,array,contents,plus,the,given,object,param,array,the,array,to,append,to,can,be,code,null,param,obj,the,object,to,append,return,the,new,array,of,the,same,component,type,never,code,null;public,static,a,o,extends,a,a,add,object,to,array,nullable,a,array,nullable,o,obj,class,comp,type,object,class,if,array,null,comp,type,array,get,class,get,component,type,else,if,obj,null,comp,type,obj,get,class,int,new,arr,length,array,null,array,length,1,1,suppress,warnings,unchecked,a,new,arr,a,array,new,instance,comp,type,new,arr,length,if,array,null,system,arraycopy,array,0,new,arr,0,array,length,new,arr,new,arr,length,1,obj,return,new,arr
ObjectUtils -> public static <A, O extends A>  A[] addObjectToArray(@Nullable A[] array, @Nullable O obj);1505924929;Append the given object to the given array, returning a new array_consisting of the input array contents plus the given object._@param array the array to append to (can be {@code null})_@param obj the object to append_@return the new array (of the same component type_ never {@code null});public static <A, O extends A>  A[] addObjectToArray(@Nullable A[] array, @Nullable O obj) {_		Class<?> compType = Object.class__		if (array != null) {_			compType = array.getClass().getComponentType()__		}_		else if (obj != null) {_			compType = obj.getClass()__		}_		int newArrLength = (array != null ? array.length + 1 : 1)__		@SuppressWarnings("unchecked")_		A[] newArr = (A[]) Array.newInstance(compType, newArrLength)__		if (array != null) {_			System.arraycopy(array, 0, newArr, 0, array.length)__		}_		newArr[newArr.length - 1] = obj__		return newArr__	};append,the,given,object,to,the,given,array,returning,a,new,array,consisting,of,the,input,array,contents,plus,the,given,object,param,array,the,array,to,append,to,can,be,code,null,param,obj,the,object,to,append,return,the,new,array,of,the,same,component,type,never,code,null;public,static,a,o,extends,a,a,add,object,to,array,nullable,a,array,nullable,o,obj,class,comp,type,object,class,if,array,null,comp,type,array,get,class,get,component,type,else,if,obj,null,comp,type,obj,get,class,int,new,arr,length,array,null,array,length,1,1,suppress,warnings,unchecked,a,new,arr,a,array,new,instance,comp,type,new,arr,length,if,array,null,system,arraycopy,array,0,new,arr,0,array,length,new,arr,new,arr,length,1,obj,return,new,arr
ObjectUtils -> public static Object[] toObjectArray(Object source);1328020251;Convert the given array (which may be a primitive array) to an_object array (if necessary of primitive wrapper objects)._<p>A <code>null</code> source value will be converted to an_empty Object array._@param source the (potentially primitive) array_@return the corresponding object array (never <code>null</code>)_@throws IllegalArgumentException if the parameter is not an array;public static Object[] toObjectArray(Object source) {_		if (source instanceof Object[]) {_			return (Object[]) source__		}_		if (source == null) {_			return new Object[0]__		}_		if (!source.getClass().isArray()) {_			throw new IllegalArgumentException("Source is not an array: " + source)__		}_		int length = Array.getLength(source)__		if (length == 0) {_			return new Object[0]__		}_		Class wrapperType = Array.get(source, 0).getClass()__		Object[] newArray = (Object[]) Array.newInstance(wrapperType, length)__		for (int i = 0_ i < length_ i++) {_			newArray[i] = Array.get(source, i)__		}_		return newArray__	};convert,the,given,array,which,may,be,a,primitive,array,to,an,object,array,if,necessary,of,primitive,wrapper,objects,p,a,code,null,code,source,value,will,be,converted,to,an,empty,object,array,param,source,the,potentially,primitive,array,return,the,corresponding,object,array,never,code,null,code,throws,illegal,argument,exception,if,the,parameter,is,not,an,array;public,static,object,to,object,array,object,source,if,source,instanceof,object,return,object,source,if,source,null,return,new,object,0,if,source,get,class,is,array,throw,new,illegal,argument,exception,source,is,not,an,array,source,int,length,array,get,length,source,if,length,0,return,new,object,0,class,wrapper,type,array,get,source,0,get,class,object,new,array,object,array,new,instance,wrapper,type,length,for,int,i,0,i,length,i,new,array,i,array,get,source,i,return,new,array
ObjectUtils -> public static Object[] toObjectArray(Object source);1356735495;Convert the given array (which may be a primitive array) to an_object array (if necessary of primitive wrapper objects)._<p>A {@code null} source value will be converted to an_empty Object array._@param source the (potentially primitive) array_@return the corresponding object array (never {@code null})_@throws IllegalArgumentException if the parameter is not an array;public static Object[] toObjectArray(Object source) {_		if (source instanceof Object[]) {_			return (Object[]) source__		}_		if (source == null) {_			return new Object[0]__		}_		if (!source.getClass().isArray()) {_			throw new IllegalArgumentException("Source is not an array: " + source)__		}_		int length = Array.getLength(source)__		if (length == 0) {_			return new Object[0]__		}_		Class wrapperType = Array.get(source, 0).getClass()__		Object[] newArray = (Object[]) Array.newInstance(wrapperType, length)__		for (int i = 0_ i < length_ i++) {_			newArray[i] = Array.get(source, i)__		}_		return newArray__	};convert,the,given,array,which,may,be,a,primitive,array,to,an,object,array,if,necessary,of,primitive,wrapper,objects,p,a,code,null,source,value,will,be,converted,to,an,empty,object,array,param,source,the,potentially,primitive,array,return,the,corresponding,object,array,never,code,null,throws,illegal,argument,exception,if,the,parameter,is,not,an,array;public,static,object,to,object,array,object,source,if,source,instanceof,object,return,object,source,if,source,null,return,new,object,0,if,source,get,class,is,array,throw,new,illegal,argument,exception,source,is,not,an,array,source,int,length,array,get,length,source,if,length,0,return,new,object,0,class,wrapper,type,array,get,source,0,get,class,object,new,array,object,array,new,instance,wrapper,type,length,for,int,i,0,i,length,i,new,array,i,array,get,source,i,return,new,array
ObjectUtils -> public static Object[] toObjectArray(Object source);1362408075;Convert the given array (which may be a primitive array) to an_object array (if necessary of primitive wrapper objects)._<p>A {@code null} source value will be converted to an_empty Object array._@param source the (potentially primitive) array_@return the corresponding object array (never {@code null})_@throws IllegalArgumentException if the parameter is not an array;public static Object[] toObjectArray(Object source) {_		if (source instanceof Object[]) {_			return (Object[]) source__		}_		if (source == null) {_			return new Object[0]__		}_		if (!source.getClass().isArray()) {_			throw new IllegalArgumentException("Source is not an array: " + source)__		}_		int length = Array.getLength(source)__		if (length == 0) {_			return new Object[0]__		}_		Class wrapperType = Array.get(source, 0).getClass()__		Object[] newArray = (Object[]) Array.newInstance(wrapperType, length)__		for (int i = 0_ i < length_ i++) {_			newArray[i] = Array.get(source, i)__		}_		return newArray__	};convert,the,given,array,which,may,be,a,primitive,array,to,an,object,array,if,necessary,of,primitive,wrapper,objects,p,a,code,null,source,value,will,be,converted,to,an,empty,object,array,param,source,the,potentially,primitive,array,return,the,corresponding,object,array,never,code,null,throws,illegal,argument,exception,if,the,parameter,is,not,an,array;public,static,object,to,object,array,object,source,if,source,instanceof,object,return,object,source,if,source,null,return,new,object,0,if,source,get,class,is,array,throw,new,illegal,argument,exception,source,is,not,an,array,source,int,length,array,get,length,source,if,length,0,return,new,object,0,class,wrapper,type,array,get,source,0,get,class,object,new,array,object,array,new,instance,wrapper,type,length,for,int,i,0,i,length,i,new,array,i,array,get,source,i,return,new,array
ObjectUtils -> public static Object[] toObjectArray(Object source);1385412762;Convert the given array (which may be a primitive array) to an_object array (if necessary of primitive wrapper objects)._<p>A {@code null} source value will be converted to an_empty Object array._@param source the (potentially primitive) array_@return the corresponding object array (never {@code null})_@throws IllegalArgumentException if the parameter is not an array;public static Object[] toObjectArray(Object source) {_		if (source instanceof Object[]) {_			return (Object[]) source__		}_		if (source == null) {_			return new Object[0]__		}_		if (!source.getClass().isArray()) {_			throw new IllegalArgumentException("Source is not an array: " + source)__		}_		int length = Array.getLength(source)__		if (length == 0) {_			return new Object[0]__		}_		Class<?> wrapperType = Array.get(source, 0).getClass()__		Object[] newArray = (Object[]) Array.newInstance(wrapperType, length)__		for (int i = 0_ i < length_ i++) {_			newArray[i] = Array.get(source, i)__		}_		return newArray__	};convert,the,given,array,which,may,be,a,primitive,array,to,an,object,array,if,necessary,of,primitive,wrapper,objects,p,a,code,null,source,value,will,be,converted,to,an,empty,object,array,param,source,the,potentially,primitive,array,return,the,corresponding,object,array,never,code,null,throws,illegal,argument,exception,if,the,parameter,is,not,an,array;public,static,object,to,object,array,object,source,if,source,instanceof,object,return,object,source,if,source,null,return,new,object,0,if,source,get,class,is,array,throw,new,illegal,argument,exception,source,is,not,an,array,source,int,length,array,get,length,source,if,length,0,return,new,object,0,class,wrapper,type,array,get,source,0,get,class,object,new,array,object,array,new,instance,wrapper,type,length,for,int,i,0,i,length,i,new,array,i,array,get,source,i,return,new,array
ObjectUtils -> public static Object[] toObjectArray(Object source);1389796508;Convert the given array (which may be a primitive array) to an_object array (if necessary of primitive wrapper objects)._<p>A {@code null} source value will be converted to an_empty Object array._@param source the (potentially primitive) array_@return the corresponding object array (never {@code null})_@throws IllegalArgumentException if the parameter is not an array;public static Object[] toObjectArray(Object source) {_		if (source instanceof Object[]) {_			return (Object[]) source__		}_		if (source == null) {_			return new Object[0]__		}_		if (!source.getClass().isArray()) {_			throw new IllegalArgumentException("Source is not an array: " + source)__		}_		int length = Array.getLength(source)__		if (length == 0) {_			return new Object[0]__		}_		Class<?> wrapperType = Array.get(source, 0).getClass()__		Object[] newArray = (Object[]) Array.newInstance(wrapperType, length)__		for (int i = 0_ i < length_ i++) {_			newArray[i] = Array.get(source, i)__		}_		return newArray__	};convert,the,given,array,which,may,be,a,primitive,array,to,an,object,array,if,necessary,of,primitive,wrapper,objects,p,a,code,null,source,value,will,be,converted,to,an,empty,object,array,param,source,the,potentially,primitive,array,return,the,corresponding,object,array,never,code,null,throws,illegal,argument,exception,if,the,parameter,is,not,an,array;public,static,object,to,object,array,object,source,if,source,instanceof,object,return,object,source,if,source,null,return,new,object,0,if,source,get,class,is,array,throw,new,illegal,argument,exception,source,is,not,an,array,source,int,length,array,get,length,source,if,length,0,return,new,object,0,class,wrapper,type,array,get,source,0,get,class,object,new,array,object,array,new,instance,wrapper,type,length,for,int,i,0,i,length,i,new,array,i,array,get,source,i,return,new,array
ObjectUtils -> public static Object[] toObjectArray(Object source);1389798571;Convert the given array (which may be a primitive array) to an_object array (if necessary of primitive wrapper objects)._<p>A {@code null} source value will be converted to an_empty Object array._@param source the (potentially primitive) array_@return the corresponding object array (never {@code null})_@throws IllegalArgumentException if the parameter is not an array;public static Object[] toObjectArray(Object source) {_		if (source instanceof Object[]) {_			return (Object[]) source__		}_		if (source == null) {_			return new Object[0]__		}_		if (!source.getClass().isArray()) {_			throw new IllegalArgumentException("Source is not an array: " + source)__		}_		int length = Array.getLength(source)__		if (length == 0) {_			return new Object[0]__		}_		Class<?> wrapperType = Array.get(source, 0).getClass()__		Object[] newArray = (Object[]) Array.newInstance(wrapperType, length)__		for (int i = 0_ i < length_ i++) {_			newArray[i] = Array.get(source, i)__		}_		return newArray__	};convert,the,given,array,which,may,be,a,primitive,array,to,an,object,array,if,necessary,of,primitive,wrapper,objects,p,a,code,null,source,value,will,be,converted,to,an,empty,object,array,param,source,the,potentially,primitive,array,return,the,corresponding,object,array,never,code,null,throws,illegal,argument,exception,if,the,parameter,is,not,an,array;public,static,object,to,object,array,object,source,if,source,instanceof,object,return,object,source,if,source,null,return,new,object,0,if,source,get,class,is,array,throw,new,illegal,argument,exception,source,is,not,an,array,source,int,length,array,get,length,source,if,length,0,return,new,object,0,class,wrapper,type,array,get,source,0,get,class,object,new,array,object,array,new,instance,wrapper,type,length,for,int,i,0,i,length,i,new,array,i,array,get,source,i,return,new,array
ObjectUtils -> public static Object[] toObjectArray(Object source);1405696918;Convert the given array (which may be a primitive array) to an_object array (if necessary of primitive wrapper objects)._<p>A {@code null} source value will be converted to an_empty Object array._@param source the (potentially primitive) array_@return the corresponding object array (never {@code null})_@throws IllegalArgumentException if the parameter is not an array;public static Object[] toObjectArray(Object source) {_		if (source instanceof Object[]) {_			return (Object[]) source__		}_		if (source == null) {_			return new Object[0]__		}_		if (!source.getClass().isArray()) {_			throw new IllegalArgumentException("Source is not an array: " + source)__		}_		int length = Array.getLength(source)__		if (length == 0) {_			return new Object[0]__		}_		Class<?> wrapperType = Array.get(source, 0).getClass()__		Object[] newArray = (Object[]) Array.newInstance(wrapperType, length)__		for (int i = 0_ i < length_ i++) {_			newArray[i] = Array.get(source, i)__		}_		return newArray__	};convert,the,given,array,which,may,be,a,primitive,array,to,an,object,array,if,necessary,of,primitive,wrapper,objects,p,a,code,null,source,value,will,be,converted,to,an,empty,object,array,param,source,the,potentially,primitive,array,return,the,corresponding,object,array,never,code,null,throws,illegal,argument,exception,if,the,parameter,is,not,an,array;public,static,object,to,object,array,object,source,if,source,instanceof,object,return,object,source,if,source,null,return,new,object,0,if,source,get,class,is,array,throw,new,illegal,argument,exception,source,is,not,an,array,source,int,length,array,get,length,source,if,length,0,return,new,object,0,class,wrapper,type,array,get,source,0,get,class,object,new,array,object,array,new,instance,wrapper,type,length,for,int,i,0,i,length,i,new,array,i,array,get,source,i,return,new,array
ObjectUtils -> public static Object[] toObjectArray(Object source);1434129562;Convert the given array (which may be a primitive array) to an_object array (if necessary of primitive wrapper objects)._<p>A {@code null} source value will be converted to an_empty Object array._@param source the (potentially primitive) array_@return the corresponding object array (never {@code null})_@throws IllegalArgumentException if the parameter is not an array;public static Object[] toObjectArray(Object source) {_		if (source instanceof Object[]) {_			return (Object[]) source__		}_		if (source == null) {_			return new Object[0]__		}_		if (!source.getClass().isArray()) {_			throw new IllegalArgumentException("Source is not an array: " + source)__		}_		int length = Array.getLength(source)__		if (length == 0) {_			return new Object[0]__		}_		Class<?> wrapperType = Array.get(source, 0).getClass()__		Object[] newArray = (Object[]) Array.newInstance(wrapperType, length)__		for (int i = 0_ i < length_ i++) {_			newArray[i] = Array.get(source, i)__		}_		return newArray__	};convert,the,given,array,which,may,be,a,primitive,array,to,an,object,array,if,necessary,of,primitive,wrapper,objects,p,a,code,null,source,value,will,be,converted,to,an,empty,object,array,param,source,the,potentially,primitive,array,return,the,corresponding,object,array,never,code,null,throws,illegal,argument,exception,if,the,parameter,is,not,an,array;public,static,object,to,object,array,object,source,if,source,instanceof,object,return,object,source,if,source,null,return,new,object,0,if,source,get,class,is,array,throw,new,illegal,argument,exception,source,is,not,an,array,source,int,length,array,get,length,source,if,length,0,return,new,object,0,class,wrapper,type,array,get,source,0,get,class,object,new,array,object,array,new,instance,wrapper,type,length,for,int,i,0,i,length,i,new,array,i,array,get,source,i,return,new,array
ObjectUtils -> public static Object[] toObjectArray(Object source);1465504808;Convert the given array (which may be a primitive array) to an_object array (if necessary of primitive wrapper objects)._<p>A {@code null} source value will be converted to an_empty Object array._@param source the (potentially primitive) array_@return the corresponding object array (never {@code null})_@throws IllegalArgumentException if the parameter is not an array;public static Object[] toObjectArray(Object source) {_		if (source instanceof Object[]) {_			return (Object[]) source__		}_		if (source == null) {_			return new Object[0]__		}_		if (!source.getClass().isArray()) {_			throw new IllegalArgumentException("Source is not an array: " + source)__		}_		int length = Array.getLength(source)__		if (length == 0) {_			return new Object[0]__		}_		Class<?> wrapperType = Array.get(source, 0).getClass()__		Object[] newArray = (Object[]) Array.newInstance(wrapperType, length)__		for (int i = 0_ i < length_ i++) {_			newArray[i] = Array.get(source, i)__		}_		return newArray__	};convert,the,given,array,which,may,be,a,primitive,array,to,an,object,array,if,necessary,of,primitive,wrapper,objects,p,a,code,null,source,value,will,be,converted,to,an,empty,object,array,param,source,the,potentially,primitive,array,return,the,corresponding,object,array,never,code,null,throws,illegal,argument,exception,if,the,parameter,is,not,an,array;public,static,object,to,object,array,object,source,if,source,instanceof,object,return,object,source,if,source,null,return,new,object,0,if,source,get,class,is,array,throw,new,illegal,argument,exception,source,is,not,an,array,source,int,length,array,get,length,source,if,length,0,return,new,object,0,class,wrapper,type,array,get,source,0,get,class,object,new,array,object,array,new,instance,wrapper,type,length,for,int,i,0,i,length,i,new,array,i,array,get,source,i,return,new,array
ObjectUtils -> public static Object[] toObjectArray(Object source);1467677340;Convert the given array (which may be a primitive array) to an_object array (if necessary of primitive wrapper objects)._<p>A {@code null} source value will be converted to an_empty Object array._@param source the (potentially primitive) array_@return the corresponding object array (never {@code null})_@throws IllegalArgumentException if the parameter is not an array;public static Object[] toObjectArray(Object source) {_		if (source instanceof Object[]) {_			return (Object[]) source__		}_		if (source == null) {_			return new Object[0]__		}_		if (!source.getClass().isArray()) {_			throw new IllegalArgumentException("Source is not an array: " + source)__		}_		int length = Array.getLength(source)__		if (length == 0) {_			return new Object[0]__		}_		Class<?> wrapperType = Array.get(source, 0).getClass()__		Object[] newArray = (Object[]) Array.newInstance(wrapperType, length)__		for (int i = 0_ i < length_ i++) {_			newArray[i] = Array.get(source, i)__		}_		return newArray__	};convert,the,given,array,which,may,be,a,primitive,array,to,an,object,array,if,necessary,of,primitive,wrapper,objects,p,a,code,null,source,value,will,be,converted,to,an,empty,object,array,param,source,the,potentially,primitive,array,return,the,corresponding,object,array,never,code,null,throws,illegal,argument,exception,if,the,parameter,is,not,an,array;public,static,object,to,object,array,object,source,if,source,instanceof,object,return,object,source,if,source,null,return,new,object,0,if,source,get,class,is,array,throw,new,illegal,argument,exception,source,is,not,an,array,source,int,length,array,get,length,source,if,length,0,return,new,object,0,class,wrapper,type,array,get,source,0,get,class,object,new,array,object,array,new,instance,wrapper,type,length,for,int,i,0,i,length,i,new,array,i,array,get,source,i,return,new,array
ObjectUtils -> public static Object[] toObjectArray(Object source);1491319010;Convert the given array (which may be a primitive array) to an_object array (if necessary of primitive wrapper objects)._<p>A {@code null} source value will be converted to an_empty Object array._@param source the (potentially primitive) array_@return the corresponding object array (never {@code null})_@throws IllegalArgumentException if the parameter is not an array;public static Object[] toObjectArray(Object source) {_		if (source instanceof Object[]) {_			return (Object[]) source__		}_		if (source == null) {_			return new Object[0]__		}_		if (!source.getClass().isArray()) {_			throw new IllegalArgumentException("Source is not an array: " + source)__		}_		int length = Array.getLength(source)__		if (length == 0) {_			return new Object[0]__		}_		Class<?> wrapperType = Array.get(source, 0).getClass()__		Object[] newArray = (Object[]) Array.newInstance(wrapperType, length)__		for (int i = 0_ i < length_ i++) {_			newArray[i] = Array.get(source, i)__		}_		return newArray__	};convert,the,given,array,which,may,be,a,primitive,array,to,an,object,array,if,necessary,of,primitive,wrapper,objects,p,a,code,null,source,value,will,be,converted,to,an,empty,object,array,param,source,the,potentially,primitive,array,return,the,corresponding,object,array,never,code,null,throws,illegal,argument,exception,if,the,parameter,is,not,an,array;public,static,object,to,object,array,object,source,if,source,instanceof,object,return,object,source,if,source,null,return,new,object,0,if,source,get,class,is,array,throw,new,illegal,argument,exception,source,is,not,an,array,source,int,length,array,get,length,source,if,length,0,return,new,object,0,class,wrapper,type,array,get,source,0,get,class,object,new,array,object,array,new,instance,wrapper,type,length,for,int,i,0,i,length,i,new,array,i,array,get,source,i,return,new,array
ObjectUtils -> public static String nullSafeClassName(Object obj);1328020251;Determine the class name for the given object._<p>Returns <code>"null"</code> if <code>obj</code> is <code>null</code>._@param obj the object to introspect (may be <code>null</code>)_@return the corresponding class name;public static String nullSafeClassName(Object obj) {_		return (obj != null ? obj.getClass().getName() : NULL_STRING)__	};determine,the,class,name,for,the,given,object,p,returns,code,null,code,if,code,obj,code,is,code,null,code,param,obj,the,object,to,introspect,may,be,code,null,code,return,the,corresponding,class,name;public,static,string,null,safe,class,name,object,obj,return,obj,null,obj,get,class,get,name
ObjectUtils -> public static String nullSafeClassName(Object obj);1356735495;Determine the class name for the given object._<p>Returns {@code "null"} if {@code obj} is {@code null}._@param obj the object to introspect (may be {@code null})_@return the corresponding class name;public static String nullSafeClassName(Object obj) {_		return (obj != null ? obj.getClass().getName() : NULL_STRING)__	};determine,the,class,name,for,the,given,object,p,returns,code,null,if,code,obj,is,code,null,param,obj,the,object,to,introspect,may,be,code,null,return,the,corresponding,class,name;public,static,string,null,safe,class,name,object,obj,return,obj,null,obj,get,class,get,name
ObjectUtils -> public static String nullSafeClassName(Object obj);1362408075;Determine the class name for the given object._<p>Returns {@code "null"} if {@code obj} is {@code null}._@param obj the object to introspect (may be {@code null})_@return the corresponding class name;public static String nullSafeClassName(Object obj) {_		return (obj != null ? obj.getClass().getName() : NULL_STRING)__	};determine,the,class,name,for,the,given,object,p,returns,code,null,if,code,obj,is,code,null,param,obj,the,object,to,introspect,may,be,code,null,return,the,corresponding,class,name;public,static,string,null,safe,class,name,object,obj,return,obj,null,obj,get,class,get,name
ObjectUtils -> public static String nullSafeClassName(Object obj);1385412762;Determine the class name for the given object._<p>Returns {@code "null"} if {@code obj} is {@code null}._@param obj the object to introspect (may be {@code null})_@return the corresponding class name;public static String nullSafeClassName(Object obj) {_		return (obj != null ? obj.getClass().getName() : NULL_STRING)__	};determine,the,class,name,for,the,given,object,p,returns,code,null,if,code,obj,is,code,null,param,obj,the,object,to,introspect,may,be,code,null,return,the,corresponding,class,name;public,static,string,null,safe,class,name,object,obj,return,obj,null,obj,get,class,get,name
ObjectUtils -> public static String nullSafeClassName(Object obj);1389796508;Determine the class name for the given object._<p>Returns {@code "null"} if {@code obj} is {@code null}._@param obj the object to introspect (may be {@code null})_@return the corresponding class name;public static String nullSafeClassName(Object obj) {_		return (obj != null ? obj.getClass().getName() : NULL_STRING)__	};determine,the,class,name,for,the,given,object,p,returns,code,null,if,code,obj,is,code,null,param,obj,the,object,to,introspect,may,be,code,null,return,the,corresponding,class,name;public,static,string,null,safe,class,name,object,obj,return,obj,null,obj,get,class,get,name
ObjectUtils -> public static String nullSafeClassName(Object obj);1389798571;Determine the class name for the given object._<p>Returns {@code "null"} if {@code obj} is {@code null}._@param obj the object to introspect (may be {@code null})_@return the corresponding class name;public static String nullSafeClassName(Object obj) {_		return (obj != null ? obj.getClass().getName() : NULL_STRING)__	};determine,the,class,name,for,the,given,object,p,returns,code,null,if,code,obj,is,code,null,param,obj,the,object,to,introspect,may,be,code,null,return,the,corresponding,class,name;public,static,string,null,safe,class,name,object,obj,return,obj,null,obj,get,class,get,name
ObjectUtils -> public static String nullSafeClassName(Object obj);1405696918;Determine the class name for the given object._<p>Returns {@code "null"} if {@code obj} is {@code null}._@param obj the object to introspect (may be {@code null})_@return the corresponding class name;public static String nullSafeClassName(Object obj) {_		return (obj != null ? obj.getClass().getName() : NULL_STRING)__	};determine,the,class,name,for,the,given,object,p,returns,code,null,if,code,obj,is,code,null,param,obj,the,object,to,introspect,may,be,code,null,return,the,corresponding,class,name;public,static,string,null,safe,class,name,object,obj,return,obj,null,obj,get,class,get,name
ObjectUtils -> public static String nullSafeClassName(Object obj);1434129562;Determine the class name for the given object._<p>Returns {@code "null"} if {@code obj} is {@code null}._@param obj the object to introspect (may be {@code null})_@return the corresponding class name;public static String nullSafeClassName(Object obj) {_		return (obj != null ? obj.getClass().getName() : NULL_STRING)__	};determine,the,class,name,for,the,given,object,p,returns,code,null,if,code,obj,is,code,null,param,obj,the,object,to,introspect,may,be,code,null,return,the,corresponding,class,name;public,static,string,null,safe,class,name,object,obj,return,obj,null,obj,get,class,get,name
ObjectUtils -> public static String nullSafeClassName(Object obj);1465504808;Determine the class name for the given object._<p>Returns {@code "null"} if {@code obj} is {@code null}._@param obj the object to introspect (may be {@code null})_@return the corresponding class name;public static String nullSafeClassName(Object obj) {_		return (obj != null ? obj.getClass().getName() : NULL_STRING)__	};determine,the,class,name,for,the,given,object,p,returns,code,null,if,code,obj,is,code,null,param,obj,the,object,to,introspect,may,be,code,null,return,the,corresponding,class,name;public,static,string,null,safe,class,name,object,obj,return,obj,null,obj,get,class,get,name
ObjectUtils -> public static String nullSafeClassName(Object obj);1467677340;Determine the class name for the given object._<p>Returns {@code "null"} if {@code obj} is {@code null}._@param obj the object to introspect (may be {@code null})_@return the corresponding class name;public static String nullSafeClassName(Object obj) {_		return (obj != null ? obj.getClass().getName() : NULL_STRING)__	};determine,the,class,name,for,the,given,object,p,returns,code,null,if,code,obj,is,code,null,param,obj,the,object,to,introspect,may,be,code,null,return,the,corresponding,class,name;public,static,string,null,safe,class,name,object,obj,return,obj,null,obj,get,class,get,name
ObjectUtils -> public static String nullSafeClassName(Object obj);1491319010;Determine the class name for the given object._<p>Returns {@code "null"} if {@code obj} is {@code null}._@param obj the object to introspect (may be {@code null})_@return the corresponding class name;public static String nullSafeClassName(Object obj) {_		return (obj != null ? obj.getClass().getName() : NULL_STRING)__	};determine,the,class,name,for,the,given,object,p,returns,code,null,if,code,obj,is,code,null,param,obj,the,object,to,introspect,may,be,code,null,return,the,corresponding,class,name;public,static,string,null,safe,class,name,object,obj,return,obj,null,obj,get,class,get,name
ObjectUtils -> public static int nullSafeHashCode(Object obj);1328020251;Return as hash code for the given object_ typically the value of_<code>{@link Object#hashCode()}</code>. If the object is an array,_this method will delegate to any of the <code>nullSafeHashCode</code>_methods for arrays in this class. If the object is <code>null</code>,_this method returns 0._@see #nullSafeHashCode(Object[])_@see #nullSafeHashCode(boolean[])_@see #nullSafeHashCode(byte[])_@see #nullSafeHashCode(char[])_@see #nullSafeHashCode(double[])_@see #nullSafeHashCode(float[])_@see #nullSafeHashCode(int[])_@see #nullSafeHashCode(long[])_@see #nullSafeHashCode(short[]);public static int nullSafeHashCode(Object obj) {_		if (obj == null) {_			return 0__		}_		if (obj.getClass().isArray()) {_			if (obj instanceof Object[]) {_				return nullSafeHashCode((Object[]) obj)__			}_			if (obj instanceof boolean[]) {_				return nullSafeHashCode((boolean[]) obj)__			}_			if (obj instanceof byte[]) {_				return nullSafeHashCode((byte[]) obj)__			}_			if (obj instanceof char[]) {_				return nullSafeHashCode((char[]) obj)__			}_			if (obj instanceof double[]) {_				return nullSafeHashCode((double[]) obj)__			}_			if (obj instanceof float[]) {_				return nullSafeHashCode((float[]) obj)__			}_			if (obj instanceof int[]) {_				return nullSafeHashCode((int[]) obj)__			}_			if (obj instanceof long[]) {_				return nullSafeHashCode((long[]) obj)__			}_			if (obj instanceof short[]) {_				return nullSafeHashCode((short[]) obj)__			}_		}_		return obj.hashCode()__	};return,as,hash,code,for,the,given,object,typically,the,value,of,code,link,object,hash,code,code,if,the,object,is,an,array,this,method,will,delegate,to,any,of,the,code,null,safe,hash,code,code,methods,for,arrays,in,this,class,if,the,object,is,code,null,code,this,method,returns,0,see,null,safe,hash,code,object,see,null,safe,hash,code,boolean,see,null,safe,hash,code,byte,see,null,safe,hash,code,char,see,null,safe,hash,code,double,see,null,safe,hash,code,float,see,null,safe,hash,code,int,see,null,safe,hash,code,long,see,null,safe,hash,code,short;public,static,int,null,safe,hash,code,object,obj,if,obj,null,return,0,if,obj,get,class,is,array,if,obj,instanceof,object,return,null,safe,hash,code,object,obj,if,obj,instanceof,boolean,return,null,safe,hash,code,boolean,obj,if,obj,instanceof,byte,return,null,safe,hash,code,byte,obj,if,obj,instanceof,char,return,null,safe,hash,code,char,obj,if,obj,instanceof,double,return,null,safe,hash,code,double,obj,if,obj,instanceof,float,return,null,safe,hash,code,float,obj,if,obj,instanceof,int,return,null,safe,hash,code,int,obj,if,obj,instanceof,long,return,null,safe,hash,code,long,obj,if,obj,instanceof,short,return,null,safe,hash,code,short,obj,return,obj,hash,code
ObjectUtils -> public static int nullSafeHashCode(Object obj);1356735495;Return as hash code for the given object_ typically the value of_{@code {@link Object#hashCode()}}. If the object is an array,_this method will delegate to any of the {@code nullSafeHashCode}_methods for arrays in this class. If the object is {@code null},_this method returns 0._@see #nullSafeHashCode(Object[])_@see #nullSafeHashCode(boolean[])_@see #nullSafeHashCode(byte[])_@see #nullSafeHashCode(char[])_@see #nullSafeHashCode(double[])_@see #nullSafeHashCode(float[])_@see #nullSafeHashCode(int[])_@see #nullSafeHashCode(long[])_@see #nullSafeHashCode(short[]);public static int nullSafeHashCode(Object obj) {_		if (obj == null) {_			return 0__		}_		if (obj.getClass().isArray()) {_			if (obj instanceof Object[]) {_				return nullSafeHashCode((Object[]) obj)__			}_			if (obj instanceof boolean[]) {_				return nullSafeHashCode((boolean[]) obj)__			}_			if (obj instanceof byte[]) {_				return nullSafeHashCode((byte[]) obj)__			}_			if (obj instanceof char[]) {_				return nullSafeHashCode((char[]) obj)__			}_			if (obj instanceof double[]) {_				return nullSafeHashCode((double[]) obj)__			}_			if (obj instanceof float[]) {_				return nullSafeHashCode((float[]) obj)__			}_			if (obj instanceof int[]) {_				return nullSafeHashCode((int[]) obj)__			}_			if (obj instanceof long[]) {_				return nullSafeHashCode((long[]) obj)__			}_			if (obj instanceof short[]) {_				return nullSafeHashCode((short[]) obj)__			}_		}_		return obj.hashCode()__	};return,as,hash,code,for,the,given,object,typically,the,value,of,code,link,object,hash,code,if,the,object,is,an,array,this,method,will,delegate,to,any,of,the,code,null,safe,hash,code,methods,for,arrays,in,this,class,if,the,object,is,code,null,this,method,returns,0,see,null,safe,hash,code,object,see,null,safe,hash,code,boolean,see,null,safe,hash,code,byte,see,null,safe,hash,code,char,see,null,safe,hash,code,double,see,null,safe,hash,code,float,see,null,safe,hash,code,int,see,null,safe,hash,code,long,see,null,safe,hash,code,short;public,static,int,null,safe,hash,code,object,obj,if,obj,null,return,0,if,obj,get,class,is,array,if,obj,instanceof,object,return,null,safe,hash,code,object,obj,if,obj,instanceof,boolean,return,null,safe,hash,code,boolean,obj,if,obj,instanceof,byte,return,null,safe,hash,code,byte,obj,if,obj,instanceof,char,return,null,safe,hash,code,char,obj,if,obj,instanceof,double,return,null,safe,hash,code,double,obj,if,obj,instanceof,float,return,null,safe,hash,code,float,obj,if,obj,instanceof,int,return,null,safe,hash,code,int,obj,if,obj,instanceof,long,return,null,safe,hash,code,long,obj,if,obj,instanceof,short,return,null,safe,hash,code,short,obj,return,obj,hash,code
ObjectUtils -> public static int nullSafeHashCode(Object obj);1362408075;Return as hash code for the given object_ typically the value of_{@code {@link Object#hashCode()}}. If the object is an array,_this method will delegate to any of the {@code nullSafeHashCode}_methods for arrays in this class. If the object is {@code null},_this method returns 0._@see #nullSafeHashCode(Object[])_@see #nullSafeHashCode(boolean[])_@see #nullSafeHashCode(byte[])_@see #nullSafeHashCode(char[])_@see #nullSafeHashCode(double[])_@see #nullSafeHashCode(float[])_@see #nullSafeHashCode(int[])_@see #nullSafeHashCode(long[])_@see #nullSafeHashCode(short[]);public static int nullSafeHashCode(Object obj) {_		if (obj == null) {_			return 0__		}_		if (obj.getClass().isArray()) {_			if (obj instanceof Object[]) {_				return nullSafeHashCode((Object[]) obj)__			}_			if (obj instanceof boolean[]) {_				return nullSafeHashCode((boolean[]) obj)__			}_			if (obj instanceof byte[]) {_				return nullSafeHashCode((byte[]) obj)__			}_			if (obj instanceof char[]) {_				return nullSafeHashCode((char[]) obj)__			}_			if (obj instanceof double[]) {_				return nullSafeHashCode((double[]) obj)__			}_			if (obj instanceof float[]) {_				return nullSafeHashCode((float[]) obj)__			}_			if (obj instanceof int[]) {_				return nullSafeHashCode((int[]) obj)__			}_			if (obj instanceof long[]) {_				return nullSafeHashCode((long[]) obj)__			}_			if (obj instanceof short[]) {_				return nullSafeHashCode((short[]) obj)__			}_		}_		return obj.hashCode()__	};return,as,hash,code,for,the,given,object,typically,the,value,of,code,link,object,hash,code,if,the,object,is,an,array,this,method,will,delegate,to,any,of,the,code,null,safe,hash,code,methods,for,arrays,in,this,class,if,the,object,is,code,null,this,method,returns,0,see,null,safe,hash,code,object,see,null,safe,hash,code,boolean,see,null,safe,hash,code,byte,see,null,safe,hash,code,char,see,null,safe,hash,code,double,see,null,safe,hash,code,float,see,null,safe,hash,code,int,see,null,safe,hash,code,long,see,null,safe,hash,code,short;public,static,int,null,safe,hash,code,object,obj,if,obj,null,return,0,if,obj,get,class,is,array,if,obj,instanceof,object,return,null,safe,hash,code,object,obj,if,obj,instanceof,boolean,return,null,safe,hash,code,boolean,obj,if,obj,instanceof,byte,return,null,safe,hash,code,byte,obj,if,obj,instanceof,char,return,null,safe,hash,code,char,obj,if,obj,instanceof,double,return,null,safe,hash,code,double,obj,if,obj,instanceof,float,return,null,safe,hash,code,float,obj,if,obj,instanceof,int,return,null,safe,hash,code,int,obj,if,obj,instanceof,long,return,null,safe,hash,code,long,obj,if,obj,instanceof,short,return,null,safe,hash,code,short,obj,return,obj,hash,code
ObjectUtils -> public static int nullSafeHashCode(Object obj);1385412762;Return as hash code for the given object_ typically the value of_{@code Object#hashCode()}}. If the object is an array,_this method will delegate to any of the {@code nullSafeHashCode}_methods for arrays in this class. If the object is {@code null},_this method returns 0._@see #nullSafeHashCode(Object[])_@see #nullSafeHashCode(boolean[])_@see #nullSafeHashCode(byte[])_@see #nullSafeHashCode(char[])_@see #nullSafeHashCode(double[])_@see #nullSafeHashCode(float[])_@see #nullSafeHashCode(int[])_@see #nullSafeHashCode(long[])_@see #nullSafeHashCode(short[]);public static int nullSafeHashCode(Object obj) {_		if (obj == null) {_			return 0__		}_		if (obj.getClass().isArray()) {_			if (obj instanceof Object[]) {_				return nullSafeHashCode((Object[]) obj)__			}_			if (obj instanceof boolean[]) {_				return nullSafeHashCode((boolean[]) obj)__			}_			if (obj instanceof byte[]) {_				return nullSafeHashCode((byte[]) obj)__			}_			if (obj instanceof char[]) {_				return nullSafeHashCode((char[]) obj)__			}_			if (obj instanceof double[]) {_				return nullSafeHashCode((double[]) obj)__			}_			if (obj instanceof float[]) {_				return nullSafeHashCode((float[]) obj)__			}_			if (obj instanceof int[]) {_				return nullSafeHashCode((int[]) obj)__			}_			if (obj instanceof long[]) {_				return nullSafeHashCode((long[]) obj)__			}_			if (obj instanceof short[]) {_				return nullSafeHashCode((short[]) obj)__			}_		}_		return obj.hashCode()__	};return,as,hash,code,for,the,given,object,typically,the,value,of,code,object,hash,code,if,the,object,is,an,array,this,method,will,delegate,to,any,of,the,code,null,safe,hash,code,methods,for,arrays,in,this,class,if,the,object,is,code,null,this,method,returns,0,see,null,safe,hash,code,object,see,null,safe,hash,code,boolean,see,null,safe,hash,code,byte,see,null,safe,hash,code,char,see,null,safe,hash,code,double,see,null,safe,hash,code,float,see,null,safe,hash,code,int,see,null,safe,hash,code,long,see,null,safe,hash,code,short;public,static,int,null,safe,hash,code,object,obj,if,obj,null,return,0,if,obj,get,class,is,array,if,obj,instanceof,object,return,null,safe,hash,code,object,obj,if,obj,instanceof,boolean,return,null,safe,hash,code,boolean,obj,if,obj,instanceof,byte,return,null,safe,hash,code,byte,obj,if,obj,instanceof,char,return,null,safe,hash,code,char,obj,if,obj,instanceof,double,return,null,safe,hash,code,double,obj,if,obj,instanceof,float,return,null,safe,hash,code,float,obj,if,obj,instanceof,int,return,null,safe,hash,code,int,obj,if,obj,instanceof,long,return,null,safe,hash,code,long,obj,if,obj,instanceof,short,return,null,safe,hash,code,short,obj,return,obj,hash,code
ObjectUtils -> public static int nullSafeHashCode(Object obj);1389796508;Return as hash code for the given object_ typically the value of_{@code Object#hashCode()}}. If the object is an array,_this method will delegate to any of the {@code nullSafeHashCode}_methods for arrays in this class. If the object is {@code null},_this method returns 0._@see #nullSafeHashCode(Object[])_@see #nullSafeHashCode(boolean[])_@see #nullSafeHashCode(byte[])_@see #nullSafeHashCode(char[])_@see #nullSafeHashCode(double[])_@see #nullSafeHashCode(float[])_@see #nullSafeHashCode(int[])_@see #nullSafeHashCode(long[])_@see #nullSafeHashCode(short[]);public static int nullSafeHashCode(Object obj) {_		if (obj == null) {_			return 0__		}_		if (obj.getClass().isArray()) {_			if (obj instanceof Object[]) {_				return nullSafeHashCode((Object[]) obj)__			}_			if (obj instanceof boolean[]) {_				return nullSafeHashCode((boolean[]) obj)__			}_			if (obj instanceof byte[]) {_				return nullSafeHashCode((byte[]) obj)__			}_			if (obj instanceof char[]) {_				return nullSafeHashCode((char[]) obj)__			}_			if (obj instanceof double[]) {_				return nullSafeHashCode((double[]) obj)__			}_			if (obj instanceof float[]) {_				return nullSafeHashCode((float[]) obj)__			}_			if (obj instanceof int[]) {_				return nullSafeHashCode((int[]) obj)__			}_			if (obj instanceof long[]) {_				return nullSafeHashCode((long[]) obj)__			}_			if (obj instanceof short[]) {_				return nullSafeHashCode((short[]) obj)__			}_		}_		return obj.hashCode()__	};return,as,hash,code,for,the,given,object,typically,the,value,of,code,object,hash,code,if,the,object,is,an,array,this,method,will,delegate,to,any,of,the,code,null,safe,hash,code,methods,for,arrays,in,this,class,if,the,object,is,code,null,this,method,returns,0,see,null,safe,hash,code,object,see,null,safe,hash,code,boolean,see,null,safe,hash,code,byte,see,null,safe,hash,code,char,see,null,safe,hash,code,double,see,null,safe,hash,code,float,see,null,safe,hash,code,int,see,null,safe,hash,code,long,see,null,safe,hash,code,short;public,static,int,null,safe,hash,code,object,obj,if,obj,null,return,0,if,obj,get,class,is,array,if,obj,instanceof,object,return,null,safe,hash,code,object,obj,if,obj,instanceof,boolean,return,null,safe,hash,code,boolean,obj,if,obj,instanceof,byte,return,null,safe,hash,code,byte,obj,if,obj,instanceof,char,return,null,safe,hash,code,char,obj,if,obj,instanceof,double,return,null,safe,hash,code,double,obj,if,obj,instanceof,float,return,null,safe,hash,code,float,obj,if,obj,instanceof,int,return,null,safe,hash,code,int,obj,if,obj,instanceof,long,return,null,safe,hash,code,long,obj,if,obj,instanceof,short,return,null,safe,hash,code,short,obj,return,obj,hash,code
ObjectUtils -> public static int nullSafeHashCode(Object obj);1389798571;Return as hash code for the given object_ typically the value of_{@code Object#hashCode()}}. If the object is an array,_this method will delegate to any of the {@code nullSafeHashCode}_methods for arrays in this class. If the object is {@code null},_this method returns 0._@see #nullSafeHashCode(Object[])_@see #nullSafeHashCode(boolean[])_@see #nullSafeHashCode(byte[])_@see #nullSafeHashCode(char[])_@see #nullSafeHashCode(double[])_@see #nullSafeHashCode(float[])_@see #nullSafeHashCode(int[])_@see #nullSafeHashCode(long[])_@see #nullSafeHashCode(short[]);public static int nullSafeHashCode(Object obj) {_		if (obj == null) {_			return 0__		}_		if (obj.getClass().isArray()) {_			if (obj instanceof Object[]) {_				return nullSafeHashCode((Object[]) obj)__			}_			if (obj instanceof boolean[]) {_				return nullSafeHashCode((boolean[]) obj)__			}_			if (obj instanceof byte[]) {_				return nullSafeHashCode((byte[]) obj)__			}_			if (obj instanceof char[]) {_				return nullSafeHashCode((char[]) obj)__			}_			if (obj instanceof double[]) {_				return nullSafeHashCode((double[]) obj)__			}_			if (obj instanceof float[]) {_				return nullSafeHashCode((float[]) obj)__			}_			if (obj instanceof int[]) {_				return nullSafeHashCode((int[]) obj)__			}_			if (obj instanceof long[]) {_				return nullSafeHashCode((long[]) obj)__			}_			if (obj instanceof short[]) {_				return nullSafeHashCode((short[]) obj)__			}_		}_		return obj.hashCode()__	};return,as,hash,code,for,the,given,object,typically,the,value,of,code,object,hash,code,if,the,object,is,an,array,this,method,will,delegate,to,any,of,the,code,null,safe,hash,code,methods,for,arrays,in,this,class,if,the,object,is,code,null,this,method,returns,0,see,null,safe,hash,code,object,see,null,safe,hash,code,boolean,see,null,safe,hash,code,byte,see,null,safe,hash,code,char,see,null,safe,hash,code,double,see,null,safe,hash,code,float,see,null,safe,hash,code,int,see,null,safe,hash,code,long,see,null,safe,hash,code,short;public,static,int,null,safe,hash,code,object,obj,if,obj,null,return,0,if,obj,get,class,is,array,if,obj,instanceof,object,return,null,safe,hash,code,object,obj,if,obj,instanceof,boolean,return,null,safe,hash,code,boolean,obj,if,obj,instanceof,byte,return,null,safe,hash,code,byte,obj,if,obj,instanceof,char,return,null,safe,hash,code,char,obj,if,obj,instanceof,double,return,null,safe,hash,code,double,obj,if,obj,instanceof,float,return,null,safe,hash,code,float,obj,if,obj,instanceof,int,return,null,safe,hash,code,int,obj,if,obj,instanceof,long,return,null,safe,hash,code,long,obj,if,obj,instanceof,short,return,null,safe,hash,code,short,obj,return,obj,hash,code
ObjectUtils -> public static int nullSafeHashCode(Object obj);1405696918;Return as hash code for the given object_ typically the value of_{@code Object#hashCode()}}. If the object is an array,_this method will delegate to any of the {@code nullSafeHashCode}_methods for arrays in this class. If the object is {@code null},_this method returns 0._@see #nullSafeHashCode(Object[])_@see #nullSafeHashCode(boolean[])_@see #nullSafeHashCode(byte[])_@see #nullSafeHashCode(char[])_@see #nullSafeHashCode(double[])_@see #nullSafeHashCode(float[])_@see #nullSafeHashCode(int[])_@see #nullSafeHashCode(long[])_@see #nullSafeHashCode(short[]);public static int nullSafeHashCode(Object obj) {_		if (obj == null) {_			return 0__		}_		if (obj.getClass().isArray()) {_			if (obj instanceof Object[]) {_				return nullSafeHashCode((Object[]) obj)__			}_			if (obj instanceof boolean[]) {_				return nullSafeHashCode((boolean[]) obj)__			}_			if (obj instanceof byte[]) {_				return nullSafeHashCode((byte[]) obj)__			}_			if (obj instanceof char[]) {_				return nullSafeHashCode((char[]) obj)__			}_			if (obj instanceof double[]) {_				return nullSafeHashCode((double[]) obj)__			}_			if (obj instanceof float[]) {_				return nullSafeHashCode((float[]) obj)__			}_			if (obj instanceof int[]) {_				return nullSafeHashCode((int[]) obj)__			}_			if (obj instanceof long[]) {_				return nullSafeHashCode((long[]) obj)__			}_			if (obj instanceof short[]) {_				return nullSafeHashCode((short[]) obj)__			}_		}_		return obj.hashCode()__	};return,as,hash,code,for,the,given,object,typically,the,value,of,code,object,hash,code,if,the,object,is,an,array,this,method,will,delegate,to,any,of,the,code,null,safe,hash,code,methods,for,arrays,in,this,class,if,the,object,is,code,null,this,method,returns,0,see,null,safe,hash,code,object,see,null,safe,hash,code,boolean,see,null,safe,hash,code,byte,see,null,safe,hash,code,char,see,null,safe,hash,code,double,see,null,safe,hash,code,float,see,null,safe,hash,code,int,see,null,safe,hash,code,long,see,null,safe,hash,code,short;public,static,int,null,safe,hash,code,object,obj,if,obj,null,return,0,if,obj,get,class,is,array,if,obj,instanceof,object,return,null,safe,hash,code,object,obj,if,obj,instanceof,boolean,return,null,safe,hash,code,boolean,obj,if,obj,instanceof,byte,return,null,safe,hash,code,byte,obj,if,obj,instanceof,char,return,null,safe,hash,code,char,obj,if,obj,instanceof,double,return,null,safe,hash,code,double,obj,if,obj,instanceof,float,return,null,safe,hash,code,float,obj,if,obj,instanceof,int,return,null,safe,hash,code,int,obj,if,obj,instanceof,long,return,null,safe,hash,code,long,obj,if,obj,instanceof,short,return,null,safe,hash,code,short,obj,return,obj,hash,code
ObjectUtils -> public static int nullSafeHashCode(Object obj);1434129562;Return as hash code for the given object_ typically the value of_{@code Object#hashCode()}}. If the object is an array,_this method will delegate to any of the {@code nullSafeHashCode}_methods for arrays in this class. If the object is {@code null},_this method returns 0._@see #nullSafeHashCode(Object[])_@see #nullSafeHashCode(boolean[])_@see #nullSafeHashCode(byte[])_@see #nullSafeHashCode(char[])_@see #nullSafeHashCode(double[])_@see #nullSafeHashCode(float[])_@see #nullSafeHashCode(int[])_@see #nullSafeHashCode(long[])_@see #nullSafeHashCode(short[]);public static int nullSafeHashCode(Object obj) {_		if (obj == null) {_			return 0__		}_		if (obj.getClass().isArray()) {_			if (obj instanceof Object[]) {_				return nullSafeHashCode((Object[]) obj)__			}_			if (obj instanceof boolean[]) {_				return nullSafeHashCode((boolean[]) obj)__			}_			if (obj instanceof byte[]) {_				return nullSafeHashCode((byte[]) obj)__			}_			if (obj instanceof char[]) {_				return nullSafeHashCode((char[]) obj)__			}_			if (obj instanceof double[]) {_				return nullSafeHashCode((double[]) obj)__			}_			if (obj instanceof float[]) {_				return nullSafeHashCode((float[]) obj)__			}_			if (obj instanceof int[]) {_				return nullSafeHashCode((int[]) obj)__			}_			if (obj instanceof long[]) {_				return nullSafeHashCode((long[]) obj)__			}_			if (obj instanceof short[]) {_				return nullSafeHashCode((short[]) obj)__			}_		}_		return obj.hashCode()__	};return,as,hash,code,for,the,given,object,typically,the,value,of,code,object,hash,code,if,the,object,is,an,array,this,method,will,delegate,to,any,of,the,code,null,safe,hash,code,methods,for,arrays,in,this,class,if,the,object,is,code,null,this,method,returns,0,see,null,safe,hash,code,object,see,null,safe,hash,code,boolean,see,null,safe,hash,code,byte,see,null,safe,hash,code,char,see,null,safe,hash,code,double,see,null,safe,hash,code,float,see,null,safe,hash,code,int,see,null,safe,hash,code,long,see,null,safe,hash,code,short;public,static,int,null,safe,hash,code,object,obj,if,obj,null,return,0,if,obj,get,class,is,array,if,obj,instanceof,object,return,null,safe,hash,code,object,obj,if,obj,instanceof,boolean,return,null,safe,hash,code,boolean,obj,if,obj,instanceof,byte,return,null,safe,hash,code,byte,obj,if,obj,instanceof,char,return,null,safe,hash,code,char,obj,if,obj,instanceof,double,return,null,safe,hash,code,double,obj,if,obj,instanceof,float,return,null,safe,hash,code,float,obj,if,obj,instanceof,int,return,null,safe,hash,code,int,obj,if,obj,instanceof,long,return,null,safe,hash,code,long,obj,if,obj,instanceof,short,return,null,safe,hash,code,short,obj,return,obj,hash,code
ObjectUtils -> public static int nullSafeHashCode(Object obj);1465504808;Return as hash code for the given object_ typically the value of_{@code Object#hashCode()}}. If the object is an array,_this method will delegate to any of the {@code nullSafeHashCode}_methods for arrays in this class. If the object is {@code null},_this method returns 0._@see Object#hashCode()_@see #nullSafeHashCode(Object[])_@see #nullSafeHashCode(boolean[])_@see #nullSafeHashCode(byte[])_@see #nullSafeHashCode(char[])_@see #nullSafeHashCode(double[])_@see #nullSafeHashCode(float[])_@see #nullSafeHashCode(int[])_@see #nullSafeHashCode(long[])_@see #nullSafeHashCode(short[]);public static int nullSafeHashCode(Object obj) {_		if (obj == null) {_			return 0__		}_		if (obj.getClass().isArray()) {_			if (obj instanceof Object[]) {_				return nullSafeHashCode((Object[]) obj)__			}_			if (obj instanceof boolean[]) {_				return nullSafeHashCode((boolean[]) obj)__			}_			if (obj instanceof byte[]) {_				return nullSafeHashCode((byte[]) obj)__			}_			if (obj instanceof char[]) {_				return nullSafeHashCode((char[]) obj)__			}_			if (obj instanceof double[]) {_				return nullSafeHashCode((double[]) obj)__			}_			if (obj instanceof float[]) {_				return nullSafeHashCode((float[]) obj)__			}_			if (obj instanceof int[]) {_				return nullSafeHashCode((int[]) obj)__			}_			if (obj instanceof long[]) {_				return nullSafeHashCode((long[]) obj)__			}_			if (obj instanceof short[]) {_				return nullSafeHashCode((short[]) obj)__			}_		}_		return obj.hashCode()__	};return,as,hash,code,for,the,given,object,typically,the,value,of,code,object,hash,code,if,the,object,is,an,array,this,method,will,delegate,to,any,of,the,code,null,safe,hash,code,methods,for,arrays,in,this,class,if,the,object,is,code,null,this,method,returns,0,see,object,hash,code,see,null,safe,hash,code,object,see,null,safe,hash,code,boolean,see,null,safe,hash,code,byte,see,null,safe,hash,code,char,see,null,safe,hash,code,double,see,null,safe,hash,code,float,see,null,safe,hash,code,int,see,null,safe,hash,code,long,see,null,safe,hash,code,short;public,static,int,null,safe,hash,code,object,obj,if,obj,null,return,0,if,obj,get,class,is,array,if,obj,instanceof,object,return,null,safe,hash,code,object,obj,if,obj,instanceof,boolean,return,null,safe,hash,code,boolean,obj,if,obj,instanceof,byte,return,null,safe,hash,code,byte,obj,if,obj,instanceof,char,return,null,safe,hash,code,char,obj,if,obj,instanceof,double,return,null,safe,hash,code,double,obj,if,obj,instanceof,float,return,null,safe,hash,code,float,obj,if,obj,instanceof,int,return,null,safe,hash,code,int,obj,if,obj,instanceof,long,return,null,safe,hash,code,long,obj,if,obj,instanceof,short,return,null,safe,hash,code,short,obj,return,obj,hash,code
ObjectUtils -> public static int nullSafeHashCode(Object obj);1467677340;Return as hash code for the given object_ typically the value of_{@code Object#hashCode()}}. If the object is an array,_this method will delegate to any of the {@code nullSafeHashCode}_methods for arrays in this class. If the object is {@code null},_this method returns 0._@see Object#hashCode()_@see #nullSafeHashCode(Object[])_@see #nullSafeHashCode(boolean[])_@see #nullSafeHashCode(byte[])_@see #nullSafeHashCode(char[])_@see #nullSafeHashCode(double[])_@see #nullSafeHashCode(float[])_@see #nullSafeHashCode(int[])_@see #nullSafeHashCode(long[])_@see #nullSafeHashCode(short[]);public static int nullSafeHashCode(Object obj) {_		if (obj == null) {_			return 0__		}_		if (obj.getClass().isArray()) {_			if (obj instanceof Object[]) {_				return nullSafeHashCode((Object[]) obj)__			}_			if (obj instanceof boolean[]) {_				return nullSafeHashCode((boolean[]) obj)__			}_			if (obj instanceof byte[]) {_				return nullSafeHashCode((byte[]) obj)__			}_			if (obj instanceof char[]) {_				return nullSafeHashCode((char[]) obj)__			}_			if (obj instanceof double[]) {_				return nullSafeHashCode((double[]) obj)__			}_			if (obj instanceof float[]) {_				return nullSafeHashCode((float[]) obj)__			}_			if (obj instanceof int[]) {_				return nullSafeHashCode((int[]) obj)__			}_			if (obj instanceof long[]) {_				return nullSafeHashCode((long[]) obj)__			}_			if (obj instanceof short[]) {_				return nullSafeHashCode((short[]) obj)__			}_		}_		return obj.hashCode()__	};return,as,hash,code,for,the,given,object,typically,the,value,of,code,object,hash,code,if,the,object,is,an,array,this,method,will,delegate,to,any,of,the,code,null,safe,hash,code,methods,for,arrays,in,this,class,if,the,object,is,code,null,this,method,returns,0,see,object,hash,code,see,null,safe,hash,code,object,see,null,safe,hash,code,boolean,see,null,safe,hash,code,byte,see,null,safe,hash,code,char,see,null,safe,hash,code,double,see,null,safe,hash,code,float,see,null,safe,hash,code,int,see,null,safe,hash,code,long,see,null,safe,hash,code,short;public,static,int,null,safe,hash,code,object,obj,if,obj,null,return,0,if,obj,get,class,is,array,if,obj,instanceof,object,return,null,safe,hash,code,object,obj,if,obj,instanceof,boolean,return,null,safe,hash,code,boolean,obj,if,obj,instanceof,byte,return,null,safe,hash,code,byte,obj,if,obj,instanceof,char,return,null,safe,hash,code,char,obj,if,obj,instanceof,double,return,null,safe,hash,code,double,obj,if,obj,instanceof,float,return,null,safe,hash,code,float,obj,if,obj,instanceof,int,return,null,safe,hash,code,int,obj,if,obj,instanceof,long,return,null,safe,hash,code,long,obj,if,obj,instanceof,short,return,null,safe,hash,code,short,obj,return,obj,hash,code
ObjectUtils -> public static int nullSafeHashCode(Object obj);1491319010;Return as hash code for the given object_ typically the value of_{@code Object#hashCode()}}. If the object is an array,_this method will delegate to any of the {@code nullSafeHashCode}_methods for arrays in this class. If the object is {@code null},_this method returns 0._@see Object#hashCode()_@see #nullSafeHashCode(Object[])_@see #nullSafeHashCode(boolean[])_@see #nullSafeHashCode(byte[])_@see #nullSafeHashCode(char[])_@see #nullSafeHashCode(double[])_@see #nullSafeHashCode(float[])_@see #nullSafeHashCode(int[])_@see #nullSafeHashCode(long[])_@see #nullSafeHashCode(short[]);public static int nullSafeHashCode(Object obj) {_		if (obj == null) {_			return 0__		}_		if (obj.getClass().isArray()) {_			if (obj instanceof Object[]) {_				return nullSafeHashCode((Object[]) obj)__			}_			if (obj instanceof boolean[]) {_				return nullSafeHashCode((boolean[]) obj)__			}_			if (obj instanceof byte[]) {_				return nullSafeHashCode((byte[]) obj)__			}_			if (obj instanceof char[]) {_				return nullSafeHashCode((char[]) obj)__			}_			if (obj instanceof double[]) {_				return nullSafeHashCode((double[]) obj)__			}_			if (obj instanceof float[]) {_				return nullSafeHashCode((float[]) obj)__			}_			if (obj instanceof int[]) {_				return nullSafeHashCode((int[]) obj)__			}_			if (obj instanceof long[]) {_				return nullSafeHashCode((long[]) obj)__			}_			if (obj instanceof short[]) {_				return nullSafeHashCode((short[]) obj)__			}_		}_		return obj.hashCode()__	};return,as,hash,code,for,the,given,object,typically,the,value,of,code,object,hash,code,if,the,object,is,an,array,this,method,will,delegate,to,any,of,the,code,null,safe,hash,code,methods,for,arrays,in,this,class,if,the,object,is,code,null,this,method,returns,0,see,object,hash,code,see,null,safe,hash,code,object,see,null,safe,hash,code,boolean,see,null,safe,hash,code,byte,see,null,safe,hash,code,char,see,null,safe,hash,code,double,see,null,safe,hash,code,float,see,null,safe,hash,code,int,see,null,safe,hash,code,long,see,null,safe,hash,code,short;public,static,int,null,safe,hash,code,object,obj,if,obj,null,return,0,if,obj,get,class,is,array,if,obj,instanceof,object,return,null,safe,hash,code,object,obj,if,obj,instanceof,boolean,return,null,safe,hash,code,boolean,obj,if,obj,instanceof,byte,return,null,safe,hash,code,byte,obj,if,obj,instanceof,char,return,null,safe,hash,code,char,obj,if,obj,instanceof,double,return,null,safe,hash,code,double,obj,if,obj,instanceof,float,return,null,safe,hash,code,float,obj,if,obj,instanceof,int,return,null,safe,hash,code,int,obj,if,obj,instanceof,long,return,null,safe,hash,code,long,obj,if,obj,instanceof,short,return,null,safe,hash,code,short,obj,return,obj,hash,code
ObjectUtils -> public static String nullSafeToString(byte[] array);1328020251;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces (<code>"{}"</code>). Adjacent elements are separated_by the characters <code>", "</code> (a comma followed by a space). Returns_<code>"null"</code> if <code>array</code> is <code>null</code>._@param array the array to build a String representation for_@return a String representation of <code>array</code>;public static String nullSafeToString(byte[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,code,adjacent,elements,are,separated,by,the,characters,code,code,a,comma,followed,by,a,space,returns,code,null,code,if,code,array,code,is,code,null,code,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array,code;public,static,string,null,safe,to,string,byte,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(byte[] array);1356735495;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(byte[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,byte,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(byte[] array);1362408075;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(byte[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,byte,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(byte[] array);1385412762;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(byte[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,byte,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(byte[] array);1389796508;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(byte[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,byte,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(byte[] array);1389798571;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(byte[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,byte,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(byte[] array);1405696918;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(byte[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,byte,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(byte[] array);1434129562;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(byte[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,byte,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(byte[] array);1465504808;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(byte[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,byte,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(byte[] array);1467677340;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(byte[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,byte,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(byte[] array);1491319010;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(byte[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,byte,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static int nullSafeHashCode(@Nullable short[] array);1495868221;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable short[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (short element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,short,array,if,array,null,return,0,int,hash,for,short,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable short[] array);1496837955;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable short[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (short element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,short,array,if,array,null,return,0,int,hash,for,short,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable short[] array);1505924929;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable short[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (short element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,short,array,if,array,null,return,0,int,hash,for,short,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable short[] array);1538724083;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable short[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (short element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,short,array,if,array,null,return,0,int,hash,for,short,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable short[] array);1542748004;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable short[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (short element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,short,array,if,array,null,return,0,int,hash,for,short,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int hashCode(long lng);1328020251;Return the same value as <code>{@link Long#hashCode()}</code>._@see Long#hashCode();public static int hashCode(long lng) {_		return (int) (lng ^ (lng >>> 32))__	};return,the,same,value,as,code,link,long,hash,code,code,see,long,hash,code;public,static,int,hash,code,long,lng,return,int,lng,lng,32
ObjectUtils -> public static int hashCode(long lng);1356735495;Return the same value as {@code {@link Long#hashCode()}}._@see Long#hashCode();public static int hashCode(long lng) {_		return (int) (lng ^ (lng >>> 32))__	};return,the,same,value,as,code,link,long,hash,code,see,long,hash,code;public,static,int,hash,code,long,lng,return,int,lng,lng,32
ObjectUtils -> public static int hashCode(long lng);1362408075;Return the same value as {@link Long#hashCode()}}._@see Long#hashCode();public static int hashCode(long lng) {_		return (int) (lng ^ (lng >>> 32))__	};return,the,same,value,as,link,long,hash,code,see,long,hash,code;public,static,int,hash,code,long,lng,return,int,lng,lng,32
ObjectUtils -> public static int hashCode(long lng);1385412762;Return the same value as {@link Long#hashCode()}}._@see Long#hashCode();public static int hashCode(long lng) {_		return (int) (lng ^ (lng >>> 32))__	};return,the,same,value,as,link,long,hash,code,see,long,hash,code;public,static,int,hash,code,long,lng,return,int,lng,lng,32
ObjectUtils -> public static int hashCode(long lng);1389796508;Return the same value as {@link Long#hashCode()}}._@see Long#hashCode();public static int hashCode(long lng) {_		return (int) (lng ^ (lng >>> 32))__	};return,the,same,value,as,link,long,hash,code,see,long,hash,code;public,static,int,hash,code,long,lng,return,int,lng,lng,32
ObjectUtils -> public static int hashCode(long lng);1389798571;Return the same value as {@link Long#hashCode()}}._@see Long#hashCode();public static int hashCode(long lng) {_		return (int) (lng ^ (lng >>> 32))__	};return,the,same,value,as,link,long,hash,code,see,long,hash,code;public,static,int,hash,code,long,lng,return,int,lng,lng,32
ObjectUtils -> public static int hashCode(long lng);1405696918;Return the same value as {@link Long#hashCode()}}._@see Long#hashCode();public static int hashCode(long lng) {_		return (int) (lng ^ (lng >>> 32))__	};return,the,same,value,as,link,long,hash,code,see,long,hash,code;public,static,int,hash,code,long,lng,return,int,lng,lng,32
ObjectUtils -> public static int hashCode(long lng);1434129562;Return the same value as {@link Long#hashCode()}}._@see Long#hashCode();public static int hashCode(long lng) {_		return (int) (lng ^ (lng >>> 32))__	};return,the,same,value,as,link,long,hash,code,see,long,hash,code;public,static,int,hash,code,long,lng,return,int,lng,lng,32
ObjectUtils -> public static int hashCode(long lng);1465504808;Return the same value as {@link Long#hashCode()}}._@see Long#hashCode();public static int hashCode(long lng) {_		return (int) (lng ^ (lng >>> 32))__	};return,the,same,value,as,link,long,hash,code,see,long,hash,code;public,static,int,hash,code,long,lng,return,int,lng,lng,32
ObjectUtils -> public static int hashCode(long lng);1467677340;Return the same value as {@link Long#hashCode()}}._@see Long#hashCode();public static int hashCode(long lng) {_		return (int) (lng ^ (lng >>> 32))__	};return,the,same,value,as,link,long,hash,code,see,long,hash,code;public,static,int,hash,code,long,lng,return,int,lng,lng,32
ObjectUtils -> public static <A, O extends A> A[] addObjectToArray(A[] array, O obj);1389796508;Append the given object to the given array, returning a new array_consisting of the input array contents plus the given object._@param array the array to append to (can be {@code null})_@param obj the object to append_@return the new array (of the same component type_ never {@code null});public static <A, O extends A> A[] addObjectToArray(A[] array, O obj) {_		Class<?> compType = Object.class__		if (array != null) {_			compType = array.getClass().getComponentType()__		}_		else if (obj != null) {_			compType = obj.getClass()__		}_		int newArrLength = (array != null ? array.length + 1 : 1)__		@SuppressWarnings("unchecked")_		A[] newArr = (A[]) Array.newInstance(compType, newArrLength)__		if (array != null) {_			System.arraycopy(array, 0, newArr, 0, array.length)__		}_		newArr[newArr.length - 1] = obj__		return newArr__	};append,the,given,object,to,the,given,array,returning,a,new,array,consisting,of,the,input,array,contents,plus,the,given,object,param,array,the,array,to,append,to,can,be,code,null,param,obj,the,object,to,append,return,the,new,array,of,the,same,component,type,never,code,null;public,static,a,o,extends,a,a,add,object,to,array,a,array,o,obj,class,comp,type,object,class,if,array,null,comp,type,array,get,class,get,component,type,else,if,obj,null,comp,type,obj,get,class,int,new,arr,length,array,null,array,length,1,1,suppress,warnings,unchecked,a,new,arr,a,array,new,instance,comp,type,new,arr,length,if,array,null,system,arraycopy,array,0,new,arr,0,array,length,new,arr,new,arr,length,1,obj,return,new,arr
ObjectUtils -> public static <A, O extends A> A[] addObjectToArray(A[] array, O obj);1389798571;Append the given object to the given array, returning a new array_consisting of the input array contents plus the given object._@param array the array to append to (can be {@code null})_@param obj the object to append_@return the new array (of the same component type_ never {@code null});public static <A, O extends A> A[] addObjectToArray(A[] array, O obj) {_		Class<?> compType = Object.class__		if (array != null) {_			compType = array.getClass().getComponentType()__		}_		else if (obj != null) {_			compType = obj.getClass()__		}_		int newArrLength = (array != null ? array.length + 1 : 1)__		@SuppressWarnings("unchecked")_		A[] newArr = (A[]) Array.newInstance(compType, newArrLength)__		if (array != null) {_			System.arraycopy(array, 0, newArr, 0, array.length)__		}_		newArr[newArr.length - 1] = obj__		return newArr__	};append,the,given,object,to,the,given,array,returning,a,new,array,consisting,of,the,input,array,contents,plus,the,given,object,param,array,the,array,to,append,to,can,be,code,null,param,obj,the,object,to,append,return,the,new,array,of,the,same,component,type,never,code,null;public,static,a,o,extends,a,a,add,object,to,array,a,array,o,obj,class,comp,type,object,class,if,array,null,comp,type,array,get,class,get,component,type,else,if,obj,null,comp,type,obj,get,class,int,new,arr,length,array,null,array,length,1,1,suppress,warnings,unchecked,a,new,arr,a,array,new,instance,comp,type,new,arr,length,if,array,null,system,arraycopy,array,0,new,arr,0,array,length,new,arr,new,arr,length,1,obj,return,new,arr
ObjectUtils -> public static <A, O extends A> A[] addObjectToArray(A[] array, O obj);1405696918;Append the given object to the given array, returning a new array_consisting of the input array contents plus the given object._@param array the array to append to (can be {@code null})_@param obj the object to append_@return the new array (of the same component type_ never {@code null});public static <A, O extends A> A[] addObjectToArray(A[] array, O obj) {_		Class<?> compType = Object.class__		if (array != null) {_			compType = array.getClass().getComponentType()__		}_		else if (obj != null) {_			compType = obj.getClass()__		}_		int newArrLength = (array != null ? array.length + 1 : 1)__		@SuppressWarnings("unchecked")_		A[] newArr = (A[]) Array.newInstance(compType, newArrLength)__		if (array != null) {_			System.arraycopy(array, 0, newArr, 0, array.length)__		}_		newArr[newArr.length - 1] = obj__		return newArr__	};append,the,given,object,to,the,given,array,returning,a,new,array,consisting,of,the,input,array,contents,plus,the,given,object,param,array,the,array,to,append,to,can,be,code,null,param,obj,the,object,to,append,return,the,new,array,of,the,same,component,type,never,code,null;public,static,a,o,extends,a,a,add,object,to,array,a,array,o,obj,class,comp,type,object,class,if,array,null,comp,type,array,get,class,get,component,type,else,if,obj,null,comp,type,obj,get,class,int,new,arr,length,array,null,array,length,1,1,suppress,warnings,unchecked,a,new,arr,a,array,new,instance,comp,type,new,arr,length,if,array,null,system,arraycopy,array,0,new,arr,0,array,length,new,arr,new,arr,length,1,obj,return,new,arr
ObjectUtils -> public static <A, O extends A> A[] addObjectToArray(A[] array, O obj);1434129562;Append the given object to the given array, returning a new array_consisting of the input array contents plus the given object._@param array the array to append to (can be {@code null})_@param obj the object to append_@return the new array (of the same component type_ never {@code null});public static <A, O extends A> A[] addObjectToArray(A[] array, O obj) {_		Class<?> compType = Object.class__		if (array != null) {_			compType = array.getClass().getComponentType()__		}_		else if (obj != null) {_			compType = obj.getClass()__		}_		int newArrLength = (array != null ? array.length + 1 : 1)__		@SuppressWarnings("unchecked")_		A[] newArr = (A[]) Array.newInstance(compType, newArrLength)__		if (array != null) {_			System.arraycopy(array, 0, newArr, 0, array.length)__		}_		newArr[newArr.length - 1] = obj__		return newArr__	};append,the,given,object,to,the,given,array,returning,a,new,array,consisting,of,the,input,array,contents,plus,the,given,object,param,array,the,array,to,append,to,can,be,code,null,param,obj,the,object,to,append,return,the,new,array,of,the,same,component,type,never,code,null;public,static,a,o,extends,a,a,add,object,to,array,a,array,o,obj,class,comp,type,object,class,if,array,null,comp,type,array,get,class,get,component,type,else,if,obj,null,comp,type,obj,get,class,int,new,arr,length,array,null,array,length,1,1,suppress,warnings,unchecked,a,new,arr,a,array,new,instance,comp,type,new,arr,length,if,array,null,system,arraycopy,array,0,new,arr,0,array,length,new,arr,new,arr,length,1,obj,return,new,arr
ObjectUtils -> public static <A, O extends A> A[] addObjectToArray(A[] array, O obj);1465504808;Append the given object to the given array, returning a new array_consisting of the input array contents plus the given object._@param array the array to append to (can be {@code null})_@param obj the object to append_@return the new array (of the same component type_ never {@code null});public static <A, O extends A> A[] addObjectToArray(A[] array, O obj) {_		Class<?> compType = Object.class__		if (array != null) {_			compType = array.getClass().getComponentType()__		}_		else if (obj != null) {_			compType = obj.getClass()__		}_		int newArrLength = (array != null ? array.length + 1 : 1)__		@SuppressWarnings("unchecked")_		A[] newArr = (A[]) Array.newInstance(compType, newArrLength)__		if (array != null) {_			System.arraycopy(array, 0, newArr, 0, array.length)__		}_		newArr[newArr.length - 1] = obj__		return newArr__	};append,the,given,object,to,the,given,array,returning,a,new,array,consisting,of,the,input,array,contents,plus,the,given,object,param,array,the,array,to,append,to,can,be,code,null,param,obj,the,object,to,append,return,the,new,array,of,the,same,component,type,never,code,null;public,static,a,o,extends,a,a,add,object,to,array,a,array,o,obj,class,comp,type,object,class,if,array,null,comp,type,array,get,class,get,component,type,else,if,obj,null,comp,type,obj,get,class,int,new,arr,length,array,null,array,length,1,1,suppress,warnings,unchecked,a,new,arr,a,array,new,instance,comp,type,new,arr,length,if,array,null,system,arraycopy,array,0,new,arr,0,array,length,new,arr,new,arr,length,1,obj,return,new,arr
ObjectUtils -> public static <A, O extends A> A[] addObjectToArray(A[] array, O obj);1467677340;Append the given object to the given array, returning a new array_consisting of the input array contents plus the given object._@param array the array to append to (can be {@code null})_@param obj the object to append_@return the new array (of the same component type_ never {@code null});public static <A, O extends A> A[] addObjectToArray(A[] array, O obj) {_		Class<?> compType = Object.class__		if (array != null) {_			compType = array.getClass().getComponentType()__		}_		else if (obj != null) {_			compType = obj.getClass()__		}_		int newArrLength = (array != null ? array.length + 1 : 1)__		@SuppressWarnings("unchecked")_		A[] newArr = (A[]) Array.newInstance(compType, newArrLength)__		if (array != null) {_			System.arraycopy(array, 0, newArr, 0, array.length)__		}_		newArr[newArr.length - 1] = obj__		return newArr__	};append,the,given,object,to,the,given,array,returning,a,new,array,consisting,of,the,input,array,contents,plus,the,given,object,param,array,the,array,to,append,to,can,be,code,null,param,obj,the,object,to,append,return,the,new,array,of,the,same,component,type,never,code,null;public,static,a,o,extends,a,a,add,object,to,array,a,array,o,obj,class,comp,type,object,class,if,array,null,comp,type,array,get,class,get,component,type,else,if,obj,null,comp,type,obj,get,class,int,new,arr,length,array,null,array,length,1,1,suppress,warnings,unchecked,a,new,arr,a,array,new,instance,comp,type,new,arr,length,if,array,null,system,arraycopy,array,0,new,arr,0,array,length,new,arr,new,arr,length,1,obj,return,new,arr
ObjectUtils -> public static <A, O extends A> A[] addObjectToArray(A[] array, O obj);1491319010;Append the given object to the given array, returning a new array_consisting of the input array contents plus the given object._@param array the array to append to (can be {@code null})_@param obj the object to append_@return the new array (of the same component type_ never {@code null});public static <A, O extends A> A[] addObjectToArray(A[] array, O obj) {_		Class<?> compType = Object.class__		if (array != null) {_			compType = array.getClass().getComponentType()__		}_		else if (obj != null) {_			compType = obj.getClass()__		}_		int newArrLength = (array != null ? array.length + 1 : 1)__		@SuppressWarnings("unchecked")_		A[] newArr = (A[]) Array.newInstance(compType, newArrLength)__		if (array != null) {_			System.arraycopy(array, 0, newArr, 0, array.length)__		}_		newArr[newArr.length - 1] = obj__		return newArr__	};append,the,given,object,to,the,given,array,returning,a,new,array,consisting,of,the,input,array,contents,plus,the,given,object,param,array,the,array,to,append,to,can,be,code,null,param,obj,the,object,to,append,return,the,new,array,of,the,same,component,type,never,code,null;public,static,a,o,extends,a,a,add,object,to,array,a,array,o,obj,class,comp,type,object,class,if,array,null,comp,type,array,get,class,get,component,type,else,if,obj,null,comp,type,obj,get,class,int,new,arr,length,array,null,array,length,1,1,suppress,warnings,unchecked,a,new,arr,a,array,new,instance,comp,type,new,arr,length,if,array,null,system,arraycopy,array,0,new,arr,0,array,length,new,arr,new,arr,length,1,obj,return,new,arr
ObjectUtils -> public static String nullSafeToString(@Nullable float[] array);1495868221;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable float[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,float,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable float[] array);1496837955;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable float[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,float,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable float[] array);1505924929;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable float[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,float,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable float[] array);1538724083;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable float[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,float,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable float[] array);1542748004;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable float[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,float,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String getDisplayString(@Nullable Object obj);1495868221;Return a content-based String representation if {@code obj} is_not {@code null}_ otherwise returns an empty String._<p>Differs from {@link #nullSafeToString(Object)} in that it returns_an empty String rather than "null" for a {@code null} value._@param obj the object to build a display String for_@return a display String representation of {@code obj}_@see #nullSafeToString(Object);public static String getDisplayString(@Nullable Object obj) {_		if (obj == null) {_			return EMPTY_STRING__		}_		return nullSafeToString(obj)__	};return,a,content,based,string,representation,if,code,obj,is,not,code,null,otherwise,returns,an,empty,string,p,differs,from,link,null,safe,to,string,object,in,that,it,returns,an,empty,string,rather,than,null,for,a,code,null,value,param,obj,the,object,to,build,a,display,string,for,return,a,display,string,representation,of,code,obj,see,null,safe,to,string,object;public,static,string,get,display,string,nullable,object,obj,if,obj,null,return,return,null,safe,to,string,obj
ObjectUtils -> public static String getDisplayString(@Nullable Object obj);1496837955;Return a content-based String representation if {@code obj} is_not {@code null}_ otherwise returns an empty String._<p>Differs from {@link #nullSafeToString(Object)} in that it returns_an empty String rather than "null" for a {@code null} value._@param obj the object to build a display String for_@return a display String representation of {@code obj}_@see #nullSafeToString(Object);public static String getDisplayString(@Nullable Object obj) {_		if (obj == null) {_			return EMPTY_STRING__		}_		return nullSafeToString(obj)__	};return,a,content,based,string,representation,if,code,obj,is,not,code,null,otherwise,returns,an,empty,string,p,differs,from,link,null,safe,to,string,object,in,that,it,returns,an,empty,string,rather,than,null,for,a,code,null,value,param,obj,the,object,to,build,a,display,string,for,return,a,display,string,representation,of,code,obj,see,null,safe,to,string,object;public,static,string,get,display,string,nullable,object,obj,if,obj,null,return,return,null,safe,to,string,obj
ObjectUtils -> public static String getDisplayString(@Nullable Object obj);1505924929;Return a content-based String representation if {@code obj} is_not {@code null}_ otherwise returns an empty String._<p>Differs from {@link #nullSafeToString(Object)} in that it returns_an empty String rather than "null" for a {@code null} value._@param obj the object to build a display String for_@return a display String representation of {@code obj}_@see #nullSafeToString(Object);public static String getDisplayString(@Nullable Object obj) {_		if (obj == null) {_			return EMPTY_STRING__		}_		return nullSafeToString(obj)__	};return,a,content,based,string,representation,if,code,obj,is,not,code,null,otherwise,returns,an,empty,string,p,differs,from,link,null,safe,to,string,object,in,that,it,returns,an,empty,string,rather,than,null,for,a,code,null,value,param,obj,the,object,to,build,a,display,string,for,return,a,display,string,representation,of,code,obj,see,null,safe,to,string,object;public,static,string,get,display,string,nullable,object,obj,if,obj,null,return,return,null,safe,to,string,obj
ObjectUtils -> public static String getDisplayString(@Nullable Object obj);1538724083;Return a content-based String representation if {@code obj} is_not {@code null}_ otherwise returns an empty String._<p>Differs from {@link #nullSafeToString(Object)} in that it returns_an empty String rather than "null" for a {@code null} value._@param obj the object to build a display String for_@return a display String representation of {@code obj}_@see #nullSafeToString(Object);public static String getDisplayString(@Nullable Object obj) {_		if (obj == null) {_			return EMPTY_STRING__		}_		return nullSafeToString(obj)__	};return,a,content,based,string,representation,if,code,obj,is,not,code,null,otherwise,returns,an,empty,string,p,differs,from,link,null,safe,to,string,object,in,that,it,returns,an,empty,string,rather,than,null,for,a,code,null,value,param,obj,the,object,to,build,a,display,string,for,return,a,display,string,representation,of,code,obj,see,null,safe,to,string,object;public,static,string,get,display,string,nullable,object,obj,if,obj,null,return,return,null,safe,to,string,obj
ObjectUtils -> public static String getDisplayString(@Nullable Object obj);1542748004;Return a content-based String representation if {@code obj} is_not {@code null}_ otherwise returns an empty String._<p>Differs from {@link #nullSafeToString(Object)} in that it returns_an empty String rather than "null" for a {@code null} value._@param obj the object to build a display String for_@return a display String representation of {@code obj}_@see #nullSafeToString(Object);public static String getDisplayString(@Nullable Object obj) {_		if (obj == null) {_			return EMPTY_STRING__		}_		return nullSafeToString(obj)__	};return,a,content,based,string,representation,if,code,obj,is,not,code,null,otherwise,returns,an,empty,string,p,differs,from,link,null,safe,to,string,object,in,that,it,returns,an,empty,string,rather,than,null,for,a,code,null,value,param,obj,the,object,to,build,a,display,string,for,return,a,display,string,representation,of,code,obj,see,null,safe,to,string,object;public,static,string,get,display,string,nullable,object,obj,if,obj,null,return,return,null,safe,to,string,obj
ObjectUtils -> public static Object[] toObjectArray(@Nullable Object source);1495868221;Convert the given array (which may be a primitive array) to an_object array (if necessary of primitive wrapper objects)._<p>A {@code null} source value will be converted to an_empty Object array._@param source the (potentially primitive) array_@return the corresponding object array (never {@code null})_@throws IllegalArgumentException if the parameter is not an array;public static Object[] toObjectArray(@Nullable Object source) {_		if (source instanceof Object[]) {_			return (Object[]) source__		}_		if (source == null) {_			return new Object[0]__		}_		if (!source.getClass().isArray()) {_			throw new IllegalArgumentException("Source is not an array: " + source)__		}_		int length = Array.getLength(source)__		if (length == 0) {_			return new Object[0]__		}_		Class<?> wrapperType = Array.get(source, 0).getClass()__		Object[] newArray = (Object[]) Array.newInstance(wrapperType, length)__		for (int i = 0_ i < length_ i++) {_			newArray[i] = Array.get(source, i)__		}_		return newArray__	};convert,the,given,array,which,may,be,a,primitive,array,to,an,object,array,if,necessary,of,primitive,wrapper,objects,p,a,code,null,source,value,will,be,converted,to,an,empty,object,array,param,source,the,potentially,primitive,array,return,the,corresponding,object,array,never,code,null,throws,illegal,argument,exception,if,the,parameter,is,not,an,array;public,static,object,to,object,array,nullable,object,source,if,source,instanceof,object,return,object,source,if,source,null,return,new,object,0,if,source,get,class,is,array,throw,new,illegal,argument,exception,source,is,not,an,array,source,int,length,array,get,length,source,if,length,0,return,new,object,0,class,wrapper,type,array,get,source,0,get,class,object,new,array,object,array,new,instance,wrapper,type,length,for,int,i,0,i,length,i,new,array,i,array,get,source,i,return,new,array
ObjectUtils -> public static Object[] toObjectArray(@Nullable Object source);1496837955;Convert the given array (which may be a primitive array) to an_object array (if necessary of primitive wrapper objects)._<p>A {@code null} source value will be converted to an_empty Object array._@param source the (potentially primitive) array_@return the corresponding object array (never {@code null})_@throws IllegalArgumentException if the parameter is not an array;public static Object[] toObjectArray(@Nullable Object source) {_		if (source instanceof Object[]) {_			return (Object[]) source__		}_		if (source == null) {_			return new Object[0]__		}_		if (!source.getClass().isArray()) {_			throw new IllegalArgumentException("Source is not an array: " + source)__		}_		int length = Array.getLength(source)__		if (length == 0) {_			return new Object[0]__		}_		Class<?> wrapperType = Array.get(source, 0).getClass()__		Object[] newArray = (Object[]) Array.newInstance(wrapperType, length)__		for (int i = 0_ i < length_ i++) {_			newArray[i] = Array.get(source, i)__		}_		return newArray__	};convert,the,given,array,which,may,be,a,primitive,array,to,an,object,array,if,necessary,of,primitive,wrapper,objects,p,a,code,null,source,value,will,be,converted,to,an,empty,object,array,param,source,the,potentially,primitive,array,return,the,corresponding,object,array,never,code,null,throws,illegal,argument,exception,if,the,parameter,is,not,an,array;public,static,object,to,object,array,nullable,object,source,if,source,instanceof,object,return,object,source,if,source,null,return,new,object,0,if,source,get,class,is,array,throw,new,illegal,argument,exception,source,is,not,an,array,source,int,length,array,get,length,source,if,length,0,return,new,object,0,class,wrapper,type,array,get,source,0,get,class,object,new,array,object,array,new,instance,wrapper,type,length,for,int,i,0,i,length,i,new,array,i,array,get,source,i,return,new,array
ObjectUtils -> public static Object[] toObjectArray(@Nullable Object source);1505924929;Convert the given array (which may be a primitive array) to an_object array (if necessary of primitive wrapper objects)._<p>A {@code null} source value will be converted to an_empty Object array._@param source the (potentially primitive) array_@return the corresponding object array (never {@code null})_@throws IllegalArgumentException if the parameter is not an array;public static Object[] toObjectArray(@Nullable Object source) {_		if (source instanceof Object[]) {_			return (Object[]) source__		}_		if (source == null) {_			return new Object[0]__		}_		if (!source.getClass().isArray()) {_			throw new IllegalArgumentException("Source is not an array: " + source)__		}_		int length = Array.getLength(source)__		if (length == 0) {_			return new Object[0]__		}_		Class<?> wrapperType = Array.get(source, 0).getClass()__		Object[] newArray = (Object[]) Array.newInstance(wrapperType, length)__		for (int i = 0_ i < length_ i++) {_			newArray[i] = Array.get(source, i)__		}_		return newArray__	};convert,the,given,array,which,may,be,a,primitive,array,to,an,object,array,if,necessary,of,primitive,wrapper,objects,p,a,code,null,source,value,will,be,converted,to,an,empty,object,array,param,source,the,potentially,primitive,array,return,the,corresponding,object,array,never,code,null,throws,illegal,argument,exception,if,the,parameter,is,not,an,array;public,static,object,to,object,array,nullable,object,source,if,source,instanceof,object,return,object,source,if,source,null,return,new,object,0,if,source,get,class,is,array,throw,new,illegal,argument,exception,source,is,not,an,array,source,int,length,array,get,length,source,if,length,0,return,new,object,0,class,wrapper,type,array,get,source,0,get,class,object,new,array,object,array,new,instance,wrapper,type,length,for,int,i,0,i,length,i,new,array,i,array,get,source,i,return,new,array
ObjectUtils -> public static Object[] toObjectArray(@Nullable Object source);1538724083;Convert the given array (which may be a primitive array) to an_object array (if necessary of primitive wrapper objects)._<p>A {@code null} source value will be converted to an_empty Object array._@param source the (potentially primitive) array_@return the corresponding object array (never {@code null})_@throws IllegalArgumentException if the parameter is not an array;public static Object[] toObjectArray(@Nullable Object source) {_		if (source instanceof Object[]) {_			return (Object[]) source__		}_		if (source == null) {_			return new Object[0]__		}_		if (!source.getClass().isArray()) {_			throw new IllegalArgumentException("Source is not an array: " + source)__		}_		int length = Array.getLength(source)__		if (length == 0) {_			return new Object[0]__		}_		Class<?> wrapperType = Array.get(source, 0).getClass()__		Object[] newArray = (Object[]) Array.newInstance(wrapperType, length)__		for (int i = 0_ i < length_ i++) {_			newArray[i] = Array.get(source, i)__		}_		return newArray__	};convert,the,given,array,which,may,be,a,primitive,array,to,an,object,array,if,necessary,of,primitive,wrapper,objects,p,a,code,null,source,value,will,be,converted,to,an,empty,object,array,param,source,the,potentially,primitive,array,return,the,corresponding,object,array,never,code,null,throws,illegal,argument,exception,if,the,parameter,is,not,an,array;public,static,object,to,object,array,nullable,object,source,if,source,instanceof,object,return,object,source,if,source,null,return,new,object,0,if,source,get,class,is,array,throw,new,illegal,argument,exception,source,is,not,an,array,source,int,length,array,get,length,source,if,length,0,return,new,object,0,class,wrapper,type,array,get,source,0,get,class,object,new,array,object,array,new,instance,wrapper,type,length,for,int,i,0,i,length,i,new,array,i,array,get,source,i,return,new,array
ObjectUtils -> public static Object[] toObjectArray(@Nullable Object source);1542748004;Convert the given array (which may be a primitive array) to an_object array (if necessary of primitive wrapper objects)._<p>A {@code null} source value will be converted to an_empty Object array._@param source the (potentially primitive) array_@return the corresponding object array (never {@code null})_@throws IllegalArgumentException if the parameter is not an array;public static Object[] toObjectArray(@Nullable Object source) {_		if (source instanceof Object[]) {_			return (Object[]) source__		}_		if (source == null) {_			return new Object[0]__		}_		if (!source.getClass().isArray()) {_			throw new IllegalArgumentException("Source is not an array: " + source)__		}_		int length = Array.getLength(source)__		if (length == 0) {_			return new Object[0]__		}_		Class<?> wrapperType = Array.get(source, 0).getClass()__		Object[] newArray = (Object[]) Array.newInstance(wrapperType, length)__		for (int i = 0_ i < length_ i++) {_			newArray[i] = Array.get(source, i)__		}_		return newArray__	};convert,the,given,array,which,may,be,a,primitive,array,to,an,object,array,if,necessary,of,primitive,wrapper,objects,p,a,code,null,source,value,will,be,converted,to,an,empty,object,array,param,source,the,potentially,primitive,array,return,the,corresponding,object,array,never,code,null,throws,illegal,argument,exception,if,the,parameter,is,not,an,array;public,static,object,to,object,array,nullable,object,source,if,source,instanceof,object,return,object,source,if,source,null,return,new,object,0,if,source,get,class,is,array,throw,new,illegal,argument,exception,source,is,not,an,array,source,int,length,array,get,length,source,if,length,0,return,new,object,0,class,wrapper,type,array,get,source,0,get,class,object,new,array,object,array,new,instance,wrapper,type,length,for,int,i,0,i,length,i,new,array,i,array,get,source,i,return,new,array
ObjectUtils -> public static boolean isEmpty(Object[] array);1328020251;Determine whether the given array is empty:_i.e. <code>null</code> or of zero length._@param array the array to check;public static boolean isEmpty(Object[] array) {_		return (array == null || array.length == 0)__	};determine,whether,the,given,array,is,empty,i,e,code,null,code,or,of,zero,length,param,array,the,array,to,check;public,static,boolean,is,empty,object,array,return,array,null,array,length,0
ObjectUtils -> public static boolean isEmpty(Object[] array);1356735495;Determine whether the given array is empty:_i.e. {@code null} or of zero length._@param array the array to check;public static boolean isEmpty(Object[] array) {_		return (array == null || array.length == 0)__	};determine,whether,the,given,array,is,empty,i,e,code,null,or,of,zero,length,param,array,the,array,to,check;public,static,boolean,is,empty,object,array,return,array,null,array,length,0
ObjectUtils -> public static boolean isEmpty(Object[] array);1362408075;Determine whether the given array is empty:_i.e. {@code null} or of zero length._@param array the array to check;public static boolean isEmpty(Object[] array) {_		return (array == null || array.length == 0)__	};determine,whether,the,given,array,is,empty,i,e,code,null,or,of,zero,length,param,array,the,array,to,check;public,static,boolean,is,empty,object,array,return,array,null,array,length,0
ObjectUtils -> public static boolean isEmpty(Object[] array);1385412762;Determine whether the given array is empty:_i.e. {@code null} or of zero length._@param array the array to check;public static boolean isEmpty(Object[] array) {_		return (array == null || array.length == 0)__	};determine,whether,the,given,array,is,empty,i,e,code,null,or,of,zero,length,param,array,the,array,to,check;public,static,boolean,is,empty,object,array,return,array,null,array,length,0
ObjectUtils -> public static boolean isEmpty(Object[] array);1389796508;Determine whether the given array is empty:_i.e. {@code null} or of zero length._@param array the array to check;public static boolean isEmpty(Object[] array) {_		return (array == null || array.length == 0)__	};determine,whether,the,given,array,is,empty,i,e,code,null,or,of,zero,length,param,array,the,array,to,check;public,static,boolean,is,empty,object,array,return,array,null,array,length,0
ObjectUtils -> public static boolean isEmpty(Object[] array);1389798571;Determine whether the given array is empty:_i.e. {@code null} or of zero length._@param array the array to check;public static boolean isEmpty(Object[] array) {_		return (array == null || array.length == 0)__	};determine,whether,the,given,array,is,empty,i,e,code,null,or,of,zero,length,param,array,the,array,to,check;public,static,boolean,is,empty,object,array,return,array,null,array,length,0
ObjectUtils -> public static boolean isEmpty(Object[] array);1405696918;Determine whether the given array is empty:_i.e. {@code null} or of zero length._@param array the array to check;public static boolean isEmpty(Object[] array) {_		return (array == null || array.length == 0)__	};determine,whether,the,given,array,is,empty,i,e,code,null,or,of,zero,length,param,array,the,array,to,check;public,static,boolean,is,empty,object,array,return,array,null,array,length,0
ObjectUtils -> public static boolean isEmpty(Object[] array);1434129562;Determine whether the given array is empty:_i.e. {@code null} or of zero length._@param array the array to check_@see #isEmpty(Object);public static boolean isEmpty(Object[] array) {_		return (array == null || array.length == 0)__	};determine,whether,the,given,array,is,empty,i,e,code,null,or,of,zero,length,param,array,the,array,to,check,see,is,empty,object;public,static,boolean,is,empty,object,array,return,array,null,array,length,0
ObjectUtils -> public static boolean isEmpty(Object[] array);1465504808;Determine whether the given array is empty:_i.e. {@code null} or of zero length._@param array the array to check_@see #isEmpty(Object);public static boolean isEmpty(Object[] array) {_		return (array == null || array.length == 0)__	};determine,whether,the,given,array,is,empty,i,e,code,null,or,of,zero,length,param,array,the,array,to,check,see,is,empty,object;public,static,boolean,is,empty,object,array,return,array,null,array,length,0
ObjectUtils -> public static boolean isEmpty(Object[] array);1467677340;Determine whether the given array is empty:_i.e. {@code null} or of zero length._@param array the array to check_@see #isEmpty(Object);public static boolean isEmpty(Object[] array) {_		return (array == null || array.length == 0)__	};determine,whether,the,given,array,is,empty,i,e,code,null,or,of,zero,length,param,array,the,array,to,check,see,is,empty,object;public,static,boolean,is,empty,object,array,return,array,null,array,length,0
ObjectUtils -> public static boolean isEmpty(Object[] array);1491319010;Determine whether the given array is empty:_i.e. {@code null} or of zero length._@param array the array to check_@see #isEmpty(Object);public static boolean isEmpty(Object[] array) {_		return (array == null || array.length == 0)__	};determine,whether,the,given,array,is,empty,i,e,code,null,or,of,zero,length,param,array,the,array,to,check,see,is,empty,object;public,static,boolean,is,empty,object,array,return,array,null,array,length,0
ObjectUtils -> public static String nullSafeToString(char[] array);1328020251;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces (<code>"{}"</code>). Adjacent elements are separated_by the characters <code>", "</code> (a comma followed by a space). Returns_<code>"null"</code> if <code>array</code> is <code>null</code>._@param array the array to build a String representation for_@return a String representation of <code>array</code>;public static String nullSafeToString(char[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append("'").append(array[i]).append("'")__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,code,adjacent,elements,are,separated,by,the,characters,code,code,a,comma,followed,by,a,space,returns,code,null,code,if,code,array,code,is,code,null,code,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array,code;public,static,string,null,safe,to,string,char,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,append,array,i,append,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(char[] array);1356735495;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(char[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append("'").append(array[i]).append("'")__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,char,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,append,array,i,append,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(char[] array);1362408075;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(char[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append("'").append(array[i]).append("'")__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,char,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,append,array,i,append,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(char[] array);1385412762;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(char[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append("'").append(array[i]).append("'")__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,char,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,append,array,i,append,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(char[] array);1389796508;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(char[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append("'").append(array[i]).append("'")__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,char,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,append,array,i,append,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(char[] array);1389798571;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(char[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append("'").append(array[i]).append("'")__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,char,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,append,array,i,append,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(char[] array);1405696918;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(char[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append("'").append(array[i]).append("'")__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,char,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,append,array,i,append,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(char[] array);1434129562;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(char[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append("'").append(array[i]).append("'")__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,char,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,append,array,i,append,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(char[] array);1465504808;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(char[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append("'").append(array[i]).append("'")__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,char,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,append,array,i,append,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(char[] array);1467677340;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(char[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append("'").append(array[i]).append("'")__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,char,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,append,array,i,append,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(char[] array);1491319010;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(char[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append("'").append(array[i]).append("'")__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,char,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,append,array,i,append,sb,append,return,sb,to,string
ObjectUtils -> @Deprecated 	public static int hashCode(double dbl);1491319010;Return the same value as {@link Double#hashCode(double)}}._@deprecated as of Spring Framework 5.0, in favor of the native JDK 8 variant;@Deprecated_	public static int hashCode(double dbl) {_		return Double.hashCode(dbl)__	};return,the,same,value,as,link,double,hash,code,double,deprecated,as,of,spring,framework,5,0,in,favor,of,the,native,jdk,8,variant;deprecated,public,static,int,hash,code,double,dbl,return,double,hash,code,dbl
ObjectUtils -> @Deprecated 	public static int hashCode(double dbl);1495868221;Return the same value as {@link Double#hashCode(double)}}._@deprecated as of Spring Framework 5.0, in favor of the native JDK 8 variant;@Deprecated_	public static int hashCode(double dbl) {_		return Double.hashCode(dbl)__	};return,the,same,value,as,link,double,hash,code,double,deprecated,as,of,spring,framework,5,0,in,favor,of,the,native,jdk,8,variant;deprecated,public,static,int,hash,code,double,dbl,return,double,hash,code,dbl
ObjectUtils -> @Deprecated 	public static int hashCode(double dbl);1496837955;Return the same value as {@link Double#hashCode(double)}}._@deprecated as of Spring Framework 5.0, in favor of the native JDK 8 variant;@Deprecated_	public static int hashCode(double dbl) {_		return Double.hashCode(dbl)__	};return,the,same,value,as,link,double,hash,code,double,deprecated,as,of,spring,framework,5,0,in,favor,of,the,native,jdk,8,variant;deprecated,public,static,int,hash,code,double,dbl,return,double,hash,code,dbl
ObjectUtils -> @Deprecated 	public static int hashCode(double dbl);1505924929;Return the same value as {@link Double#hashCode(double)}}._@deprecated as of Spring Framework 5.0, in favor of the native JDK 8 variant;@Deprecated_	public static int hashCode(double dbl) {_		return Double.hashCode(dbl)__	};return,the,same,value,as,link,double,hash,code,double,deprecated,as,of,spring,framework,5,0,in,favor,of,the,native,jdk,8,variant;deprecated,public,static,int,hash,code,double,dbl,return,double,hash,code,dbl
ObjectUtils -> @Deprecated 	public static int hashCode(double dbl);1538724083;Return the same value as {@link Double#hashCode(double)}}._@deprecated as of Spring Framework 5.0, in favor of the native JDK 8 variant;@Deprecated_	public static int hashCode(double dbl) {_		return Double.hashCode(dbl)__	};return,the,same,value,as,link,double,hash,code,double,deprecated,as,of,spring,framework,5,0,in,favor,of,the,native,jdk,8,variant;deprecated,public,static,int,hash,code,double,dbl,return,double,hash,code,dbl
ObjectUtils -> @Deprecated 	public static int hashCode(double dbl);1542748004;Return the same value as {@link Double#hashCode(double)}}._@deprecated as of Spring Framework 5.0, in favor of the native JDK 8 variant;@Deprecated_	public static int hashCode(double dbl) {_		return Double.hashCode(dbl)__	};return,the,same,value,as,link,double,hash,code,double,deprecated,as,of,spring,framework,5,0,in,favor,of,the,native,jdk,8,variant;deprecated,public,static,int,hash,code,double,dbl,return,double,hash,code,dbl
ObjectUtils -> public static String nullSafeToString(Object[] array);1328020251;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces (<code>"{}"</code>). Adjacent elements are separated_by the characters <code>", "</code> (a comma followed by a space). Returns_<code>"null"</code> if <code>array</code> is <code>null</code>._@param array the array to build a String representation for_@return a String representation of <code>array</code>;public static String nullSafeToString(Object[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(String.valueOf(array[i]))__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,code,adjacent,elements,are,separated,by,the,characters,code,code,a,comma,followed,by,a,space,returns,code,null,code,if,code,array,code,is,code,null,code,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array,code;public,static,string,null,safe,to,string,object,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,string,value,of,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(Object[] array);1356735495;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(Object[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(String.valueOf(array[i]))__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,object,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,string,value,of,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(Object[] array);1362408075;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(Object[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(String.valueOf(array[i]))__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,object,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,string,value,of,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(Object[] array);1385412762;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(Object[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(String.valueOf(array[i]))__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,object,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,string,value,of,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(Object[] array);1389796508;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(Object[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(String.valueOf(array[i]))__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,object,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,string,value,of,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(Object[] array);1389798571;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(Object[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(String.valueOf(array[i]))__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,object,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,string,value,of,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(Object[] array);1405696918;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(Object[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(String.valueOf(array[i]))__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,object,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,string,value,of,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(Object[] array);1434129562;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(Object[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(String.valueOf(array[i]))__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,object,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,string,value,of,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(Object[] array);1465504808;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(Object[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(String.valueOf(array[i]))__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,object,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,string,value,of,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(Object[] array);1467677340;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(Object[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(String.valueOf(array[i]))__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,object,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,string,value,of,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(Object[] array);1491319010;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(Object[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(String.valueOf(array[i]))__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,object,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,string,value,of,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable Object[] array);1495868221;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable Object[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(String.valueOf(array[i]))__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,object,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,string,value,of,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable Object[] array);1496837955;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable Object[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(String.valueOf(array[i]))__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,object,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,string,value,of,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable Object[] array);1505924929;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable Object[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(String.valueOf(array[i]))__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,object,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,string,value,of,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable Object[] array);1538724083;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable Object[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(String.valueOf(array[i]))__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,object,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,string,value,of,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable Object[] array);1542748004;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable Object[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(String.valueOf(array[i]))__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,object,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,string,value,of,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static int nullSafeHashCode(@Nullable Object obj);1495868221;Return as hash code for the given object_ typically the value of_{@code Object#hashCode()}}. If the object is an array,_this method will delegate to any of the {@code nullSafeHashCode}_methods for arrays in this class. If the object is {@code null},_this method returns 0._@see Object#hashCode()_@see #nullSafeHashCode(Object[])_@see #nullSafeHashCode(boolean[])_@see #nullSafeHashCode(byte[])_@see #nullSafeHashCode(char[])_@see #nullSafeHashCode(double[])_@see #nullSafeHashCode(float[])_@see #nullSafeHashCode(int[])_@see #nullSafeHashCode(long[])_@see #nullSafeHashCode(short[]);public static int nullSafeHashCode(@Nullable Object obj) {_		if (obj == null) {_			return 0__		}_		if (obj.getClass().isArray()) {_			if (obj instanceof Object[]) {_				return nullSafeHashCode((Object[]) obj)__			}_			if (obj instanceof boolean[]) {_				return nullSafeHashCode((boolean[]) obj)__			}_			if (obj instanceof byte[]) {_				return nullSafeHashCode((byte[]) obj)__			}_			if (obj instanceof char[]) {_				return nullSafeHashCode((char[]) obj)__			}_			if (obj instanceof double[]) {_				return nullSafeHashCode((double[]) obj)__			}_			if (obj instanceof float[]) {_				return nullSafeHashCode((float[]) obj)__			}_			if (obj instanceof int[]) {_				return nullSafeHashCode((int[]) obj)__			}_			if (obj instanceof long[]) {_				return nullSafeHashCode((long[]) obj)__			}_			if (obj instanceof short[]) {_				return nullSafeHashCode((short[]) obj)__			}_		}_		return obj.hashCode()__	};return,as,hash,code,for,the,given,object,typically,the,value,of,code,object,hash,code,if,the,object,is,an,array,this,method,will,delegate,to,any,of,the,code,null,safe,hash,code,methods,for,arrays,in,this,class,if,the,object,is,code,null,this,method,returns,0,see,object,hash,code,see,null,safe,hash,code,object,see,null,safe,hash,code,boolean,see,null,safe,hash,code,byte,see,null,safe,hash,code,char,see,null,safe,hash,code,double,see,null,safe,hash,code,float,see,null,safe,hash,code,int,see,null,safe,hash,code,long,see,null,safe,hash,code,short;public,static,int,null,safe,hash,code,nullable,object,obj,if,obj,null,return,0,if,obj,get,class,is,array,if,obj,instanceof,object,return,null,safe,hash,code,object,obj,if,obj,instanceof,boolean,return,null,safe,hash,code,boolean,obj,if,obj,instanceof,byte,return,null,safe,hash,code,byte,obj,if,obj,instanceof,char,return,null,safe,hash,code,char,obj,if,obj,instanceof,double,return,null,safe,hash,code,double,obj,if,obj,instanceof,float,return,null,safe,hash,code,float,obj,if,obj,instanceof,int,return,null,safe,hash,code,int,obj,if,obj,instanceof,long,return,null,safe,hash,code,long,obj,if,obj,instanceof,short,return,null,safe,hash,code,short,obj,return,obj,hash,code
ObjectUtils -> public static int nullSafeHashCode(@Nullable Object obj);1496837955;Return as hash code for the given object_ typically the value of_{@code Object#hashCode()}}. If the object is an array,_this method will delegate to any of the {@code nullSafeHashCode}_methods for arrays in this class. If the object is {@code null},_this method returns 0._@see Object#hashCode()_@see #nullSafeHashCode(Object[])_@see #nullSafeHashCode(boolean[])_@see #nullSafeHashCode(byte[])_@see #nullSafeHashCode(char[])_@see #nullSafeHashCode(double[])_@see #nullSafeHashCode(float[])_@see #nullSafeHashCode(int[])_@see #nullSafeHashCode(long[])_@see #nullSafeHashCode(short[]);public static int nullSafeHashCode(@Nullable Object obj) {_		if (obj == null) {_			return 0__		}_		if (obj.getClass().isArray()) {_			if (obj instanceof Object[]) {_				return nullSafeHashCode((Object[]) obj)__			}_			if (obj instanceof boolean[]) {_				return nullSafeHashCode((boolean[]) obj)__			}_			if (obj instanceof byte[]) {_				return nullSafeHashCode((byte[]) obj)__			}_			if (obj instanceof char[]) {_				return nullSafeHashCode((char[]) obj)__			}_			if (obj instanceof double[]) {_				return nullSafeHashCode((double[]) obj)__			}_			if (obj instanceof float[]) {_				return nullSafeHashCode((float[]) obj)__			}_			if (obj instanceof int[]) {_				return nullSafeHashCode((int[]) obj)__			}_			if (obj instanceof long[]) {_				return nullSafeHashCode((long[]) obj)__			}_			if (obj instanceof short[]) {_				return nullSafeHashCode((short[]) obj)__			}_		}_		return obj.hashCode()__	};return,as,hash,code,for,the,given,object,typically,the,value,of,code,object,hash,code,if,the,object,is,an,array,this,method,will,delegate,to,any,of,the,code,null,safe,hash,code,methods,for,arrays,in,this,class,if,the,object,is,code,null,this,method,returns,0,see,object,hash,code,see,null,safe,hash,code,object,see,null,safe,hash,code,boolean,see,null,safe,hash,code,byte,see,null,safe,hash,code,char,see,null,safe,hash,code,double,see,null,safe,hash,code,float,see,null,safe,hash,code,int,see,null,safe,hash,code,long,see,null,safe,hash,code,short;public,static,int,null,safe,hash,code,nullable,object,obj,if,obj,null,return,0,if,obj,get,class,is,array,if,obj,instanceof,object,return,null,safe,hash,code,object,obj,if,obj,instanceof,boolean,return,null,safe,hash,code,boolean,obj,if,obj,instanceof,byte,return,null,safe,hash,code,byte,obj,if,obj,instanceof,char,return,null,safe,hash,code,char,obj,if,obj,instanceof,double,return,null,safe,hash,code,double,obj,if,obj,instanceof,float,return,null,safe,hash,code,float,obj,if,obj,instanceof,int,return,null,safe,hash,code,int,obj,if,obj,instanceof,long,return,null,safe,hash,code,long,obj,if,obj,instanceof,short,return,null,safe,hash,code,short,obj,return,obj,hash,code
ObjectUtils -> public static int nullSafeHashCode(@Nullable Object obj);1505924929;Return as hash code for the given object_ typically the value of_{@code Object#hashCode()}}. If the object is an array,_this method will delegate to any of the {@code nullSafeHashCode}_methods for arrays in this class. If the object is {@code null},_this method returns 0._@see Object#hashCode()_@see #nullSafeHashCode(Object[])_@see #nullSafeHashCode(boolean[])_@see #nullSafeHashCode(byte[])_@see #nullSafeHashCode(char[])_@see #nullSafeHashCode(double[])_@see #nullSafeHashCode(float[])_@see #nullSafeHashCode(int[])_@see #nullSafeHashCode(long[])_@see #nullSafeHashCode(short[]);public static int nullSafeHashCode(@Nullable Object obj) {_		if (obj == null) {_			return 0__		}_		if (obj.getClass().isArray()) {_			if (obj instanceof Object[]) {_				return nullSafeHashCode((Object[]) obj)__			}_			if (obj instanceof boolean[]) {_				return nullSafeHashCode((boolean[]) obj)__			}_			if (obj instanceof byte[]) {_				return nullSafeHashCode((byte[]) obj)__			}_			if (obj instanceof char[]) {_				return nullSafeHashCode((char[]) obj)__			}_			if (obj instanceof double[]) {_				return nullSafeHashCode((double[]) obj)__			}_			if (obj instanceof float[]) {_				return nullSafeHashCode((float[]) obj)__			}_			if (obj instanceof int[]) {_				return nullSafeHashCode((int[]) obj)__			}_			if (obj instanceof long[]) {_				return nullSafeHashCode((long[]) obj)__			}_			if (obj instanceof short[]) {_				return nullSafeHashCode((short[]) obj)__			}_		}_		return obj.hashCode()__	};return,as,hash,code,for,the,given,object,typically,the,value,of,code,object,hash,code,if,the,object,is,an,array,this,method,will,delegate,to,any,of,the,code,null,safe,hash,code,methods,for,arrays,in,this,class,if,the,object,is,code,null,this,method,returns,0,see,object,hash,code,see,null,safe,hash,code,object,see,null,safe,hash,code,boolean,see,null,safe,hash,code,byte,see,null,safe,hash,code,char,see,null,safe,hash,code,double,see,null,safe,hash,code,float,see,null,safe,hash,code,int,see,null,safe,hash,code,long,see,null,safe,hash,code,short;public,static,int,null,safe,hash,code,nullable,object,obj,if,obj,null,return,0,if,obj,get,class,is,array,if,obj,instanceof,object,return,null,safe,hash,code,object,obj,if,obj,instanceof,boolean,return,null,safe,hash,code,boolean,obj,if,obj,instanceof,byte,return,null,safe,hash,code,byte,obj,if,obj,instanceof,char,return,null,safe,hash,code,char,obj,if,obj,instanceof,double,return,null,safe,hash,code,double,obj,if,obj,instanceof,float,return,null,safe,hash,code,float,obj,if,obj,instanceof,int,return,null,safe,hash,code,int,obj,if,obj,instanceof,long,return,null,safe,hash,code,long,obj,if,obj,instanceof,short,return,null,safe,hash,code,short,obj,return,obj,hash,code
ObjectUtils -> public static int nullSafeHashCode(@Nullable Object obj);1538724083;Return as hash code for the given object_ typically the value of_{@code Object#hashCode()}}. If the object is an array,_this method will delegate to any of the {@code nullSafeHashCode}_methods for arrays in this class. If the object is {@code null},_this method returns 0._@see Object#hashCode()_@see #nullSafeHashCode(Object[])_@see #nullSafeHashCode(boolean[])_@see #nullSafeHashCode(byte[])_@see #nullSafeHashCode(char[])_@see #nullSafeHashCode(double[])_@see #nullSafeHashCode(float[])_@see #nullSafeHashCode(int[])_@see #nullSafeHashCode(long[])_@see #nullSafeHashCode(short[]);public static int nullSafeHashCode(@Nullable Object obj) {_		if (obj == null) {_			return 0__		}_		if (obj.getClass().isArray()) {_			if (obj instanceof Object[]) {_				return nullSafeHashCode((Object[]) obj)__			}_			if (obj instanceof boolean[]) {_				return nullSafeHashCode((boolean[]) obj)__			}_			if (obj instanceof byte[]) {_				return nullSafeHashCode((byte[]) obj)__			}_			if (obj instanceof char[]) {_				return nullSafeHashCode((char[]) obj)__			}_			if (obj instanceof double[]) {_				return nullSafeHashCode((double[]) obj)__			}_			if (obj instanceof float[]) {_				return nullSafeHashCode((float[]) obj)__			}_			if (obj instanceof int[]) {_				return nullSafeHashCode((int[]) obj)__			}_			if (obj instanceof long[]) {_				return nullSafeHashCode((long[]) obj)__			}_			if (obj instanceof short[]) {_				return nullSafeHashCode((short[]) obj)__			}_		}_		return obj.hashCode()__	};return,as,hash,code,for,the,given,object,typically,the,value,of,code,object,hash,code,if,the,object,is,an,array,this,method,will,delegate,to,any,of,the,code,null,safe,hash,code,methods,for,arrays,in,this,class,if,the,object,is,code,null,this,method,returns,0,see,object,hash,code,see,null,safe,hash,code,object,see,null,safe,hash,code,boolean,see,null,safe,hash,code,byte,see,null,safe,hash,code,char,see,null,safe,hash,code,double,see,null,safe,hash,code,float,see,null,safe,hash,code,int,see,null,safe,hash,code,long,see,null,safe,hash,code,short;public,static,int,null,safe,hash,code,nullable,object,obj,if,obj,null,return,0,if,obj,get,class,is,array,if,obj,instanceof,object,return,null,safe,hash,code,object,obj,if,obj,instanceof,boolean,return,null,safe,hash,code,boolean,obj,if,obj,instanceof,byte,return,null,safe,hash,code,byte,obj,if,obj,instanceof,char,return,null,safe,hash,code,char,obj,if,obj,instanceof,double,return,null,safe,hash,code,double,obj,if,obj,instanceof,float,return,null,safe,hash,code,float,obj,if,obj,instanceof,int,return,null,safe,hash,code,int,obj,if,obj,instanceof,long,return,null,safe,hash,code,long,obj,if,obj,instanceof,short,return,null,safe,hash,code,short,obj,return,obj,hash,code
ObjectUtils -> public static int nullSafeHashCode(@Nullable Object obj);1542748004;Return as hash code for the given object_ typically the value of_{@code Object#hashCode()}}. If the object is an array,_this method will delegate to any of the {@code nullSafeHashCode}_methods for arrays in this class. If the object is {@code null},_this method returns 0._@see Object#hashCode()_@see #nullSafeHashCode(Object[])_@see #nullSafeHashCode(boolean[])_@see #nullSafeHashCode(byte[])_@see #nullSafeHashCode(char[])_@see #nullSafeHashCode(double[])_@see #nullSafeHashCode(float[])_@see #nullSafeHashCode(int[])_@see #nullSafeHashCode(long[])_@see #nullSafeHashCode(short[]);public static int nullSafeHashCode(@Nullable Object obj) {_		if (obj == null) {_			return 0__		}_		if (obj.getClass().isArray()) {_			if (obj instanceof Object[]) {_				return nullSafeHashCode((Object[]) obj)__			}_			if (obj instanceof boolean[]) {_				return nullSafeHashCode((boolean[]) obj)__			}_			if (obj instanceof byte[]) {_				return nullSafeHashCode((byte[]) obj)__			}_			if (obj instanceof char[]) {_				return nullSafeHashCode((char[]) obj)__			}_			if (obj instanceof double[]) {_				return nullSafeHashCode((double[]) obj)__			}_			if (obj instanceof float[]) {_				return nullSafeHashCode((float[]) obj)__			}_			if (obj instanceof int[]) {_				return nullSafeHashCode((int[]) obj)__			}_			if (obj instanceof long[]) {_				return nullSafeHashCode((long[]) obj)__			}_			if (obj instanceof short[]) {_				return nullSafeHashCode((short[]) obj)__			}_		}_		return obj.hashCode()__	};return,as,hash,code,for,the,given,object,typically,the,value,of,code,object,hash,code,if,the,object,is,an,array,this,method,will,delegate,to,any,of,the,code,null,safe,hash,code,methods,for,arrays,in,this,class,if,the,object,is,code,null,this,method,returns,0,see,object,hash,code,see,null,safe,hash,code,object,see,null,safe,hash,code,boolean,see,null,safe,hash,code,byte,see,null,safe,hash,code,char,see,null,safe,hash,code,double,see,null,safe,hash,code,float,see,null,safe,hash,code,int,see,null,safe,hash,code,long,see,null,safe,hash,code,short;public,static,int,null,safe,hash,code,nullable,object,obj,if,obj,null,return,0,if,obj,get,class,is,array,if,obj,instanceof,object,return,null,safe,hash,code,object,obj,if,obj,instanceof,boolean,return,null,safe,hash,code,boolean,obj,if,obj,instanceof,byte,return,null,safe,hash,code,byte,obj,if,obj,instanceof,char,return,null,safe,hash,code,char,obj,if,obj,instanceof,double,return,null,safe,hash,code,double,obj,if,obj,instanceof,float,return,null,safe,hash,code,float,obj,if,obj,instanceof,int,return,null,safe,hash,code,int,obj,if,obj,instanceof,long,return,null,safe,hash,code,long,obj,if,obj,instanceof,short,return,null,safe,hash,code,short,obj,return,obj,hash,code
ObjectUtils -> public static String nullSafeClassName(@Nullable Object obj);1495868221;Determine the class name for the given object._<p>Returns {@code "null"} if {@code obj} is {@code null}._@param obj the object to introspect (may be {@code null})_@return the corresponding class name;public static String nullSafeClassName(@Nullable Object obj) {_		return (obj != null ? obj.getClass().getName() : NULL_STRING)__	};determine,the,class,name,for,the,given,object,p,returns,code,null,if,code,obj,is,code,null,param,obj,the,object,to,introspect,may,be,code,null,return,the,corresponding,class,name;public,static,string,null,safe,class,name,nullable,object,obj,return,obj,null,obj,get,class,get,name
ObjectUtils -> public static String nullSafeClassName(@Nullable Object obj);1496837955;Determine the class name for the given object._<p>Returns {@code "null"} if {@code obj} is {@code null}._@param obj the object to introspect (may be {@code null})_@return the corresponding class name;public static String nullSafeClassName(@Nullable Object obj) {_		return (obj != null ? obj.getClass().getName() : NULL_STRING)__	};determine,the,class,name,for,the,given,object,p,returns,code,null,if,code,obj,is,code,null,param,obj,the,object,to,introspect,may,be,code,null,return,the,corresponding,class,name;public,static,string,null,safe,class,name,nullable,object,obj,return,obj,null,obj,get,class,get,name
ObjectUtils -> public static String nullSafeClassName(@Nullable Object obj);1505924929;Determine the class name for the given object._<p>Returns {@code "null"} if {@code obj} is {@code null}._@param obj the object to introspect (may be {@code null})_@return the corresponding class name;public static String nullSafeClassName(@Nullable Object obj) {_		return (obj != null ? obj.getClass().getName() : NULL_STRING)__	};determine,the,class,name,for,the,given,object,p,returns,code,null,if,code,obj,is,code,null,param,obj,the,object,to,introspect,may,be,code,null,return,the,corresponding,class,name;public,static,string,null,safe,class,name,nullable,object,obj,return,obj,null,obj,get,class,get,name
ObjectUtils -> public static String nullSafeClassName(@Nullable Object obj);1538724083;Determine the class name for the given object._<p>Returns {@code "null"} if {@code obj} is {@code null}._@param obj the object to introspect (may be {@code null})_@return the corresponding class name;public static String nullSafeClassName(@Nullable Object obj) {_		return (obj != null ? obj.getClass().getName() : NULL_STRING)__	};determine,the,class,name,for,the,given,object,p,returns,code,null,if,code,obj,is,code,null,param,obj,the,object,to,introspect,may,be,code,null,return,the,corresponding,class,name;public,static,string,null,safe,class,name,nullable,object,obj,return,obj,null,obj,get,class,get,name
ObjectUtils -> public static String nullSafeClassName(@Nullable Object obj);1542748004;Determine the class name for the given object._<p>Returns {@code "null"} if {@code obj} is {@code null}._@param obj the object to introspect (may be {@code null})_@return the corresponding class name;public static String nullSafeClassName(@Nullable Object obj) {_		return (obj != null ? obj.getClass().getName() : NULL_STRING)__	};determine,the,class,name,for,the,given,object,p,returns,code,null,if,code,obj,is,code,null,param,obj,the,object,to,introspect,may,be,code,null,return,the,corresponding,class,name;public,static,string,null,safe,class,name,nullable,object,obj,return,obj,null,obj,get,class,get,name
ObjectUtils -> public static boolean isArray(Object obj);1328020251;Determine whether the given object is an array:_either an Object array or a primitive array._@param obj the object to check;public static boolean isArray(Object obj) {_		return (obj != null && obj.getClass().isArray())__	};determine,whether,the,given,object,is,an,array,either,an,object,array,or,a,primitive,array,param,obj,the,object,to,check;public,static,boolean,is,array,object,obj,return,obj,null,obj,get,class,is,array
ObjectUtils -> public static boolean isArray(Object obj);1356735495;Determine whether the given object is an array:_either an Object array or a primitive array._@param obj the object to check;public static boolean isArray(Object obj) {_		return (obj != null && obj.getClass().isArray())__	};determine,whether,the,given,object,is,an,array,either,an,object,array,or,a,primitive,array,param,obj,the,object,to,check;public,static,boolean,is,array,object,obj,return,obj,null,obj,get,class,is,array
ObjectUtils -> public static boolean isArray(Object obj);1362408075;Determine whether the given object is an array:_either an Object array or a primitive array._@param obj the object to check;public static boolean isArray(Object obj) {_		return (obj != null && obj.getClass().isArray())__	};determine,whether,the,given,object,is,an,array,either,an,object,array,or,a,primitive,array,param,obj,the,object,to,check;public,static,boolean,is,array,object,obj,return,obj,null,obj,get,class,is,array
ObjectUtils -> public static boolean isArray(Object obj);1385412762;Determine whether the given object is an array:_either an Object array or a primitive array._@param obj the object to check;public static boolean isArray(Object obj) {_		return (obj != null && obj.getClass().isArray())__	};determine,whether,the,given,object,is,an,array,either,an,object,array,or,a,primitive,array,param,obj,the,object,to,check;public,static,boolean,is,array,object,obj,return,obj,null,obj,get,class,is,array
ObjectUtils -> public static boolean isArray(Object obj);1389796508;Determine whether the given object is an array:_either an Object array or a primitive array._@param obj the object to check;public static boolean isArray(Object obj) {_		return (obj != null && obj.getClass().isArray())__	};determine,whether,the,given,object,is,an,array,either,an,object,array,or,a,primitive,array,param,obj,the,object,to,check;public,static,boolean,is,array,object,obj,return,obj,null,obj,get,class,is,array
ObjectUtils -> public static boolean isArray(Object obj);1389798571;Determine whether the given object is an array:_either an Object array or a primitive array._@param obj the object to check;public static boolean isArray(Object obj) {_		return (obj != null && obj.getClass().isArray())__	};determine,whether,the,given,object,is,an,array,either,an,object,array,or,a,primitive,array,param,obj,the,object,to,check;public,static,boolean,is,array,object,obj,return,obj,null,obj,get,class,is,array
ObjectUtils -> public static boolean isArray(Object obj);1405696918;Determine whether the given object is an array:_either an Object array or a primitive array._@param obj the object to check;public static boolean isArray(Object obj) {_		return (obj != null && obj.getClass().isArray())__	};determine,whether,the,given,object,is,an,array,either,an,object,array,or,a,primitive,array,param,obj,the,object,to,check;public,static,boolean,is,array,object,obj,return,obj,null,obj,get,class,is,array
ObjectUtils -> public static boolean isArray(Object obj);1434129562;Determine whether the given object is an array:_either an Object array or a primitive array._@param obj the object to check;public static boolean isArray(Object obj) {_		return (obj != null && obj.getClass().isArray())__	};determine,whether,the,given,object,is,an,array,either,an,object,array,or,a,primitive,array,param,obj,the,object,to,check;public,static,boolean,is,array,object,obj,return,obj,null,obj,get,class,is,array
ObjectUtils -> public static boolean isArray(Object obj);1465504808;Determine whether the given object is an array:_either an Object array or a primitive array._@param obj the object to check;public static boolean isArray(Object obj) {_		return (obj != null && obj.getClass().isArray())__	};determine,whether,the,given,object,is,an,array,either,an,object,array,or,a,primitive,array,param,obj,the,object,to,check;public,static,boolean,is,array,object,obj,return,obj,null,obj,get,class,is,array
ObjectUtils -> public static boolean isArray(Object obj);1467677340;Determine whether the given object is an array:_either an Object array or a primitive array._@param obj the object to check;public static boolean isArray(Object obj) {_		return (obj != null && obj.getClass().isArray())__	};determine,whether,the,given,object,is,an,array,either,an,object,array,or,a,primitive,array,param,obj,the,object,to,check;public,static,boolean,is,array,object,obj,return,obj,null,obj,get,class,is,array
ObjectUtils -> public static boolean isArray(Object obj);1491319010;Determine whether the given object is an array:_either an Object array or a primitive array._@param obj the object to check;public static boolean isArray(Object obj) {_		return (obj != null && obj.getClass().isArray())__	};determine,whether,the,given,object,is,an,array,either,an,object,array,or,a,primitive,array,param,obj,the,object,to,check;public,static,boolean,is,array,object,obj,return,obj,null,obj,get,class,is,array
ObjectUtils -> public static boolean isArray(Object obj);1495868221;Determine whether the given object is an array:_either an Object array or a primitive array._@param obj the object to check;public static boolean isArray(Object obj) {_		return (obj != null && obj.getClass().isArray())__	};determine,whether,the,given,object,is,an,array,either,an,object,array,or,a,primitive,array,param,obj,the,object,to,check;public,static,boolean,is,array,object,obj,return,obj,null,obj,get,class,is,array
ObjectUtils -> public static int nullSafeHashCode(Object[] array);1328020251;Return a hash code based on the contents of the specified array._If <code>array</code> is <code>null</code>, this method returns 0.;public static int nullSafeHashCode(Object[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + nullSafeHashCode(array[i])__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,code,is,code,null,code,this,method,returns,0;public,static,int,null,safe,hash,code,object,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,null,safe,hash,code,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(Object[] array);1356735495;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(Object[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + nullSafeHashCode(array[i])__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,object,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,null,safe,hash,code,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(Object[] array);1362408075;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(Object[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + nullSafeHashCode(array[i])__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,object,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,null,safe,hash,code,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(Object[] array);1385412762;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(Object[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + nullSafeHashCode(array[i])__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,object,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,null,safe,hash,code,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(Object[] array);1389796508;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(Object[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (Object element : array) {_			hash = MULTIPLIER * hash + nullSafeHashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,object,array,if,array,null,return,0,int,hash,for,object,element,array,hash,multiplier,hash,null,safe,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(Object[] array);1389798571;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(Object[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (Object element : array) {_			hash = MULTIPLIER * hash + nullSafeHashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,object,array,if,array,null,return,0,int,hash,for,object,element,array,hash,multiplier,hash,null,safe,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(Object[] array);1405696918;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(Object[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (Object element : array) {_			hash = MULTIPLIER * hash + nullSafeHashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,object,array,if,array,null,return,0,int,hash,for,object,element,array,hash,multiplier,hash,null,safe,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(Object[] array);1434129562;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(Object[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (Object element : array) {_			hash = MULTIPLIER * hash + nullSafeHashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,object,array,if,array,null,return,0,int,hash,for,object,element,array,hash,multiplier,hash,null,safe,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(Object[] array);1465504808;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(Object[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (Object element : array) {_			hash = MULTIPLIER * hash + nullSafeHashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,object,array,if,array,null,return,0,int,hash,for,object,element,array,hash,multiplier,hash,null,safe,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(Object[] array);1467677340;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(Object[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (Object element : array) {_			hash = MULTIPLIER * hash + nullSafeHashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,object,array,if,array,null,return,0,int,hash,for,object,element,array,hash,multiplier,hash,null,safe,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(Object[] array);1491319010;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(Object[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (Object element : array) {_			hash = MULTIPLIER * hash + nullSafeHashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,object,array,if,array,null,return,0,int,hash,for,object,element,array,hash,multiplier,hash,null,safe,hash,code,element,return,hash
ObjectUtils -> public static String nullSafeToString(@Nullable int[] array);1495868221;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable int[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,int,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable int[] array);1496837955;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable int[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,int,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable int[] array);1505924929;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable int[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,int,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable int[] array);1538724083;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable int[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,int,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable int[] array);1542748004;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable int[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,int,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static boolean isCompatibleWithThrowsClause(Throwable ex, Class<?>... declaredExceptions);1389798571;Check whether the given exception is compatible with the specified_exception types, as declared in a throws clause._@param ex the exception to check_@param declaredExceptions the exception types declared in the throws clause_@return whether the given exception is compatible;public static boolean isCompatibleWithThrowsClause(Throwable ex, Class<?>... declaredExceptions) {_		if (!isCheckedException(ex)) {_			return true__		}_		if (declaredExceptions != null) {_			for (Class<?> declaredException : declaredExceptions) {_				if (declaredException.isInstance(ex)) {_					return true__				}_			}_		}_		return false__	};check,whether,the,given,exception,is,compatible,with,the,specified,exception,types,as,declared,in,a,throws,clause,param,ex,the,exception,to,check,param,declared,exceptions,the,exception,types,declared,in,the,throws,clause,return,whether,the,given,exception,is,compatible;public,static,boolean,is,compatible,with,throws,clause,throwable,ex,class,declared,exceptions,if,is,checked,exception,ex,return,true,if,declared,exceptions,null,for,class,declared,exception,declared,exceptions,if,declared,exception,is,instance,ex,return,true,return,false
ObjectUtils -> public static boolean isCompatibleWithThrowsClause(Throwable ex, Class<?>... declaredExceptions);1405696918;Check whether the given exception is compatible with the specified_exception types, as declared in a throws clause._@param ex the exception to check_@param declaredExceptions the exception types declared in the throws clause_@return whether the given exception is compatible;public static boolean isCompatibleWithThrowsClause(Throwable ex, Class<?>... declaredExceptions) {_		if (!isCheckedException(ex)) {_			return true__		}_		if (declaredExceptions != null) {_			for (Class<?> declaredException : declaredExceptions) {_				if (declaredException.isInstance(ex)) {_					return true__				}_			}_		}_		return false__	};check,whether,the,given,exception,is,compatible,with,the,specified,exception,types,as,declared,in,a,throws,clause,param,ex,the,exception,to,check,param,declared,exceptions,the,exception,types,declared,in,the,throws,clause,return,whether,the,given,exception,is,compatible;public,static,boolean,is,compatible,with,throws,clause,throwable,ex,class,declared,exceptions,if,is,checked,exception,ex,return,true,if,declared,exceptions,null,for,class,declared,exception,declared,exceptions,if,declared,exception,is,instance,ex,return,true,return,false
ObjectUtils -> public static boolean isCompatibleWithThrowsClause(Throwable ex, Class<?>... declaredExceptions);1434129562;Check whether the given exception is compatible with the specified_exception types, as declared in a throws clause._@param ex the exception to check_@param declaredExceptions the exception types declared in the throws clause_@return whether the given exception is compatible;public static boolean isCompatibleWithThrowsClause(Throwable ex, Class<?>... declaredExceptions) {_		if (!isCheckedException(ex)) {_			return true__		}_		if (declaredExceptions != null) {_			for (Class<?> declaredException : declaredExceptions) {_				if (declaredException.isInstance(ex)) {_					return true__				}_			}_		}_		return false__	};check,whether,the,given,exception,is,compatible,with,the,specified,exception,types,as,declared,in,a,throws,clause,param,ex,the,exception,to,check,param,declared,exceptions,the,exception,types,declared,in,the,throws,clause,return,whether,the,given,exception,is,compatible;public,static,boolean,is,compatible,with,throws,clause,throwable,ex,class,declared,exceptions,if,is,checked,exception,ex,return,true,if,declared,exceptions,null,for,class,declared,exception,declared,exceptions,if,declared,exception,is,instance,ex,return,true,return,false
ObjectUtils -> public static boolean isCompatibleWithThrowsClause(Throwable ex, Class<?>... declaredExceptions);1465504808;Check whether the given exception is compatible with the specified_exception types, as declared in a throws clause._@param ex the exception to check_@param declaredExceptions the exception types declared in the throws clause_@return whether the given exception is compatible;public static boolean isCompatibleWithThrowsClause(Throwable ex, Class<?>... declaredExceptions) {_		if (!isCheckedException(ex)) {_			return true__		}_		if (declaredExceptions != null) {_			for (Class<?> declaredException : declaredExceptions) {_				if (declaredException.isInstance(ex)) {_					return true__				}_			}_		}_		return false__	};check,whether,the,given,exception,is,compatible,with,the,specified,exception,types,as,declared,in,a,throws,clause,param,ex,the,exception,to,check,param,declared,exceptions,the,exception,types,declared,in,the,throws,clause,return,whether,the,given,exception,is,compatible;public,static,boolean,is,compatible,with,throws,clause,throwable,ex,class,declared,exceptions,if,is,checked,exception,ex,return,true,if,declared,exceptions,null,for,class,declared,exception,declared,exceptions,if,declared,exception,is,instance,ex,return,true,return,false
ObjectUtils -> public static boolean isCompatibleWithThrowsClause(Throwable ex, Class<?>... declaredExceptions);1467677340;Check whether the given exception is compatible with the specified_exception types, as declared in a throws clause._@param ex the exception to check_@param declaredExceptions the exception types declared in the throws clause_@return whether the given exception is compatible;public static boolean isCompatibleWithThrowsClause(Throwable ex, Class<?>... declaredExceptions) {_		if (!isCheckedException(ex)) {_			return true__		}_		if (declaredExceptions != null) {_			for (Class<?> declaredException : declaredExceptions) {_				if (declaredException.isInstance(ex)) {_					return true__				}_			}_		}_		return false__	};check,whether,the,given,exception,is,compatible,with,the,specified,exception,types,as,declared,in,a,throws,clause,param,ex,the,exception,to,check,param,declared,exceptions,the,exception,types,declared,in,the,throws,clause,return,whether,the,given,exception,is,compatible;public,static,boolean,is,compatible,with,throws,clause,throwable,ex,class,declared,exceptions,if,is,checked,exception,ex,return,true,if,declared,exceptions,null,for,class,declared,exception,declared,exceptions,if,declared,exception,is,instance,ex,return,true,return,false
ObjectUtils -> public static boolean isCompatibleWithThrowsClause(Throwable ex, Class<?>... declaredExceptions);1491319010;Check whether the given exception is compatible with the specified_exception types, as declared in a throws clause._@param ex the exception to check_@param declaredExceptions the exception types declared in the throws clause_@return whether the given exception is compatible;public static boolean isCompatibleWithThrowsClause(Throwable ex, Class<?>... declaredExceptions) {_		if (!isCheckedException(ex)) {_			return true__		}_		if (declaredExceptions != null) {_			for (Class<?> declaredException : declaredExceptions) {_				if (declaredException.isInstance(ex)) {_					return true__				}_			}_		}_		return false__	};check,whether,the,given,exception,is,compatible,with,the,specified,exception,types,as,declared,in,a,throws,clause,param,ex,the,exception,to,check,param,declared,exceptions,the,exception,types,declared,in,the,throws,clause,return,whether,the,given,exception,is,compatible;public,static,boolean,is,compatible,with,throws,clause,throwable,ex,class,declared,exceptions,if,is,checked,exception,ex,return,true,if,declared,exceptions,null,for,class,declared,exception,declared,exceptions,if,declared,exception,is,instance,ex,return,true,return,false
ObjectUtils -> public static boolean isCompatibleWithThrowsClause(Throwable ex, Class<?>... declaredExceptions);1495868221;Check whether the given exception is compatible with the specified_exception types, as declared in a throws clause._@param ex the exception to check_@param declaredExceptions the exception types declared in the throws clause_@return whether the given exception is compatible;public static boolean isCompatibleWithThrowsClause(Throwable ex, Class<?>... declaredExceptions) {_		if (!isCheckedException(ex)) {_			return true__		}_		if (declaredExceptions != null) {_			for (Class<?> declaredException : declaredExceptions) {_				if (declaredException.isInstance(ex)) {_					return true__				}_			}_		}_		return false__	};check,whether,the,given,exception,is,compatible,with,the,specified,exception,types,as,declared,in,a,throws,clause,param,ex,the,exception,to,check,param,declared,exceptions,the,exception,types,declared,in,the,throws,clause,return,whether,the,given,exception,is,compatible;public,static,boolean,is,compatible,with,throws,clause,throwable,ex,class,declared,exceptions,if,is,checked,exception,ex,return,true,if,declared,exceptions,null,for,class,declared,exception,declared,exceptions,if,declared,exception,is,instance,ex,return,true,return,false
ObjectUtils -> public static Object unwrapOptional(Object obj);1467677340;Unwrap the given object which is potentially a {@link java.util.Optional}._@param obj the candidate object_@return either the value held within the {@code Optional}, {@code null}_if the {@code Optional} is empty, or simply the given object as-is_@since 5.0;public static Object unwrapOptional(Object obj) {_		if (obj instanceof Optional) {_			Optional<?> optional = (Optional<?>) obj__			if (!optional.isPresent()) {_				return null__			}_			Object result = optional.get()__			Assert.isTrue(!(result instanceof Optional), "Multi-level Optional usage not supported")__			return result__		}_		return obj__	};unwrap,the,given,object,which,is,potentially,a,link,java,util,optional,param,obj,the,candidate,object,return,either,the,value,held,within,the,code,optional,code,null,if,the,code,optional,is,empty,or,simply,the,given,object,as,is,since,5,0;public,static,object,unwrap,optional,object,obj,if,obj,instanceof,optional,optional,optional,optional,obj,if,optional,is,present,return,null,object,result,optional,get,assert,is,true,result,instanceof,optional,multi,level,optional,usage,not,supported,return,result,return,obj
ObjectUtils -> public static Object unwrapOptional(Object obj);1491319010;Unwrap the given object which is potentially a {@link java.util.Optional}._@param obj the candidate object_@return either the value held within the {@code Optional}, {@code null}_if the {@code Optional} is empty, or simply the given object as-is_@since 5.0;public static Object unwrapOptional(Object obj) {_		if (obj instanceof Optional) {_			Optional<?> optional = (Optional<?>) obj__			if (!optional.isPresent()) {_				return null__			}_			Object result = optional.get()__			Assert.isTrue(!(result instanceof Optional), "Multi-level Optional usage not supported")__			return result__		}_		return obj__	};unwrap,the,given,object,which,is,potentially,a,link,java,util,optional,param,obj,the,candidate,object,return,either,the,value,held,within,the,code,optional,code,null,if,the,code,optional,is,empty,or,simply,the,given,object,as,is,since,5,0;public,static,object,unwrap,optional,object,obj,if,obj,instanceof,optional,optional,optional,optional,obj,if,optional,is,present,return,null,object,result,optional,get,assert,is,true,result,instanceof,optional,multi,level,optional,usage,not,supported,return,result,return,obj
ObjectUtils -> public static boolean isArray(@Nullable Object obj);1496837955;Determine whether the given object is an array:_either an Object array or a primitive array._@param obj the object to check;public static boolean isArray(@Nullable Object obj) {_		return (obj != null && obj.getClass().isArray())__	};determine,whether,the,given,object,is,an,array,either,an,object,array,or,a,primitive,array,param,obj,the,object,to,check;public,static,boolean,is,array,nullable,object,obj,return,obj,null,obj,get,class,is,array
ObjectUtils -> public static boolean isArray(@Nullable Object obj);1505924929;Determine whether the given object is an array:_either an Object array or a primitive array._@param obj the object to check;public static boolean isArray(@Nullable Object obj) {_		return (obj != null && obj.getClass().isArray())__	};determine,whether,the,given,object,is,an,array,either,an,object,array,or,a,primitive,array,param,obj,the,object,to,check;public,static,boolean,is,array,nullable,object,obj,return,obj,null,obj,get,class,is,array
ObjectUtils -> public static boolean isArray(@Nullable Object obj);1538724083;Determine whether the given object is an array:_either an Object array or a primitive array._@param obj the object to check;public static boolean isArray(@Nullable Object obj) {_		return (obj != null && obj.getClass().isArray())__	};determine,whether,the,given,object,is,an,array,either,an,object,array,or,a,primitive,array,param,obj,the,object,to,check;public,static,boolean,is,array,nullable,object,obj,return,obj,null,obj,get,class,is,array
ObjectUtils -> public static boolean isArray(@Nullable Object obj);1542748004;Determine whether the given object is an array:_either an Object array or a primitive array._@param obj the object to check;public static boolean isArray(@Nullable Object obj) {_		return (obj != null && obj.getClass().isArray())__	};determine,whether,the,given,object,is,an,array,either,an,object,array,or,a,primitive,array,param,obj,the,object,to,check;public,static,boolean,is,array,nullable,object,obj,return,obj,null,obj,get,class,is,array
ObjectUtils -> public static int nullSafeHashCode(int[] array);1328020251;Return a hash code based on the contents of the specified array._If <code>array</code> is <code>null</code>, this method returns 0.;public static int nullSafeHashCode(int[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + array[i]__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,code,is,code,null,code,this,method,returns,0;public,static,int,null,safe,hash,code,int,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(int[] array);1356735495;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(int[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + array[i]__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,int,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(int[] array);1362408075;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(int[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + array[i]__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,int,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(int[] array);1385412762;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(int[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + array[i]__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,int,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(int[] array);1389796508;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(int[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (int element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,int,array,if,array,null,return,0,int,hash,for,int,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(int[] array);1389798571;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(int[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (int element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,int,array,if,array,null,return,0,int,hash,for,int,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(int[] array);1405696918;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(int[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (int element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,int,array,if,array,null,return,0,int,hash,for,int,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(int[] array);1434129562;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(int[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (int element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,int,array,if,array,null,return,0,int,hash,for,int,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(int[] array);1465504808;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(int[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (int element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,int,array,if,array,null,return,0,int,hash,for,int,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(int[] array);1467677340;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(int[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (int element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,int,array,if,array,null,return,0,int,hash,for,int,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(int[] array);1491319010;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(int[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (int element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,int,array,if,array,null,return,0,int,hash,for,int,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static String nullSafeToString(@Nullable byte[] array);1495868221;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable byte[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,byte,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable byte[] array);1496837955;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable byte[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,byte,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable byte[] array);1505924929;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable byte[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,byte,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable byte[] array);1538724083;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable byte[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,byte,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable byte[] array);1542748004;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable byte[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,byte,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static boolean containsElement(Object[] array, Object element);1328020251;Check whether the given array contains the given element._@param array the array to check (may be <code>null</code>,_in which case the return value will always be <code>false</code>)_@param element the element to check for_@return whether the element has been found in the given array;public static boolean containsElement(Object[] array, Object element) {_		if (array == null) {_			return false__		}_		for (Object arrayEle : array) {_			if (nullSafeEquals(arrayEle, element)) {_				return true__			}_		}_		return false__	};check,whether,the,given,array,contains,the,given,element,param,array,the,array,to,check,may,be,code,null,code,in,which,case,the,return,value,will,always,be,code,false,code,param,element,the,element,to,check,for,return,whether,the,element,has,been,found,in,the,given,array;public,static,boolean,contains,element,object,array,object,element,if,array,null,return,false,for,object,array,ele,array,if,null,safe,equals,array,ele,element,return,true,return,false
ObjectUtils -> public static boolean containsElement(Object[] array, Object element);1356735495;Check whether the given array contains the given element._@param array the array to check (may be {@code null},_in which case the return value will always be {@code false})_@param element the element to check for_@return whether the element has been found in the given array;public static boolean containsElement(Object[] array, Object element) {_		if (array == null) {_			return false__		}_		for (Object arrayEle : array) {_			if (nullSafeEquals(arrayEle, element)) {_				return true__			}_		}_		return false__	};check,whether,the,given,array,contains,the,given,element,param,array,the,array,to,check,may,be,code,null,in,which,case,the,return,value,will,always,be,code,false,param,element,the,element,to,check,for,return,whether,the,element,has,been,found,in,the,given,array;public,static,boolean,contains,element,object,array,object,element,if,array,null,return,false,for,object,array,ele,array,if,null,safe,equals,array,ele,element,return,true,return,false
ObjectUtils -> public static boolean containsElement(Object[] array, Object element);1362408075;Check whether the given array contains the given element._@param array the array to check (may be {@code null},_in which case the return value will always be {@code false})_@param element the element to check for_@return whether the element has been found in the given array;public static boolean containsElement(Object[] array, Object element) {_		if (array == null) {_			return false__		}_		for (Object arrayEle : array) {_			if (nullSafeEquals(arrayEle, element)) {_				return true__			}_		}_		return false__	};check,whether,the,given,array,contains,the,given,element,param,array,the,array,to,check,may,be,code,null,in,which,case,the,return,value,will,always,be,code,false,param,element,the,element,to,check,for,return,whether,the,element,has,been,found,in,the,given,array;public,static,boolean,contains,element,object,array,object,element,if,array,null,return,false,for,object,array,ele,array,if,null,safe,equals,array,ele,element,return,true,return,false
ObjectUtils -> public static boolean containsElement(Object[] array, Object element);1385412762;Check whether the given array contains the given element._@param array the array to check (may be {@code null},_in which case the return value will always be {@code false})_@param element the element to check for_@return whether the element has been found in the given array;public static boolean containsElement(Object[] array, Object element) {_		if (array == null) {_			return false__		}_		for (Object arrayEle : array) {_			if (nullSafeEquals(arrayEle, element)) {_				return true__			}_		}_		return false__	};check,whether,the,given,array,contains,the,given,element,param,array,the,array,to,check,may,be,code,null,in,which,case,the,return,value,will,always,be,code,false,param,element,the,element,to,check,for,return,whether,the,element,has,been,found,in,the,given,array;public,static,boolean,contains,element,object,array,object,element,if,array,null,return,false,for,object,array,ele,array,if,null,safe,equals,array,ele,element,return,true,return,false
ObjectUtils -> public static boolean containsElement(Object[] array, Object element);1389796508;Check whether the given array contains the given element._@param array the array to check (may be {@code null},_in which case the return value will always be {@code false})_@param element the element to check for_@return whether the element has been found in the given array;public static boolean containsElement(Object[] array, Object element) {_		if (array == null) {_			return false__		}_		for (Object arrayEle : array) {_			if (nullSafeEquals(arrayEle, element)) {_				return true__			}_		}_		return false__	};check,whether,the,given,array,contains,the,given,element,param,array,the,array,to,check,may,be,code,null,in,which,case,the,return,value,will,always,be,code,false,param,element,the,element,to,check,for,return,whether,the,element,has,been,found,in,the,given,array;public,static,boolean,contains,element,object,array,object,element,if,array,null,return,false,for,object,array,ele,array,if,null,safe,equals,array,ele,element,return,true,return,false
ObjectUtils -> public static boolean containsElement(Object[] array, Object element);1389798571;Check whether the given array contains the given element._@param array the array to check (may be {@code null},_in which case the return value will always be {@code false})_@param element the element to check for_@return whether the element has been found in the given array;public static boolean containsElement(Object[] array, Object element) {_		if (array == null) {_			return false__		}_		for (Object arrayEle : array) {_			if (nullSafeEquals(arrayEle, element)) {_				return true__			}_		}_		return false__	};check,whether,the,given,array,contains,the,given,element,param,array,the,array,to,check,may,be,code,null,in,which,case,the,return,value,will,always,be,code,false,param,element,the,element,to,check,for,return,whether,the,element,has,been,found,in,the,given,array;public,static,boolean,contains,element,object,array,object,element,if,array,null,return,false,for,object,array,ele,array,if,null,safe,equals,array,ele,element,return,true,return,false
ObjectUtils -> public static boolean containsElement(Object[] array, Object element);1405696918;Check whether the given array contains the given element._@param array the array to check (may be {@code null},_in which case the return value will always be {@code false})_@param element the element to check for_@return whether the element has been found in the given array;public static boolean containsElement(Object[] array, Object element) {_		if (array == null) {_			return false__		}_		for (Object arrayEle : array) {_			if (nullSafeEquals(arrayEle, element)) {_				return true__			}_		}_		return false__	};check,whether,the,given,array,contains,the,given,element,param,array,the,array,to,check,may,be,code,null,in,which,case,the,return,value,will,always,be,code,false,param,element,the,element,to,check,for,return,whether,the,element,has,been,found,in,the,given,array;public,static,boolean,contains,element,object,array,object,element,if,array,null,return,false,for,object,array,ele,array,if,null,safe,equals,array,ele,element,return,true,return,false
ObjectUtils -> public static boolean containsElement(Object[] array, Object element);1434129562;Check whether the given array contains the given element._@param array the array to check (may be {@code null},_in which case the return value will always be {@code false})_@param element the element to check for_@return whether the element has been found in the given array;public static boolean containsElement(Object[] array, Object element) {_		if (array == null) {_			return false__		}_		for (Object arrayEle : array) {_			if (nullSafeEquals(arrayEle, element)) {_				return true__			}_		}_		return false__	};check,whether,the,given,array,contains,the,given,element,param,array,the,array,to,check,may,be,code,null,in,which,case,the,return,value,will,always,be,code,false,param,element,the,element,to,check,for,return,whether,the,element,has,been,found,in,the,given,array;public,static,boolean,contains,element,object,array,object,element,if,array,null,return,false,for,object,array,ele,array,if,null,safe,equals,array,ele,element,return,true,return,false
ObjectUtils -> public static boolean containsElement(Object[] array, Object element);1465504808;Check whether the given array contains the given element._@param array the array to check (may be {@code null},_in which case the return value will always be {@code false})_@param element the element to check for_@return whether the element has been found in the given array;public static boolean containsElement(Object[] array, Object element) {_		if (array == null) {_			return false__		}_		for (Object arrayEle : array) {_			if (nullSafeEquals(arrayEle, element)) {_				return true__			}_		}_		return false__	};check,whether,the,given,array,contains,the,given,element,param,array,the,array,to,check,may,be,code,null,in,which,case,the,return,value,will,always,be,code,false,param,element,the,element,to,check,for,return,whether,the,element,has,been,found,in,the,given,array;public,static,boolean,contains,element,object,array,object,element,if,array,null,return,false,for,object,array,ele,array,if,null,safe,equals,array,ele,element,return,true,return,false
ObjectUtils -> public static boolean containsElement(Object[] array, Object element);1467677340;Check whether the given array contains the given element._@param array the array to check (may be {@code null},_in which case the return value will always be {@code false})_@param element the element to check for_@return whether the element has been found in the given array;public static boolean containsElement(Object[] array, Object element) {_		if (array == null) {_			return false__		}_		for (Object arrayEle : array) {_			if (nullSafeEquals(arrayEle, element)) {_				return true__			}_		}_		return false__	};check,whether,the,given,array,contains,the,given,element,param,array,the,array,to,check,may,be,code,null,in,which,case,the,return,value,will,always,be,code,false,param,element,the,element,to,check,for,return,whether,the,element,has,been,found,in,the,given,array;public,static,boolean,contains,element,object,array,object,element,if,array,null,return,false,for,object,array,ele,array,if,null,safe,equals,array,ele,element,return,true,return,false
ObjectUtils -> public static boolean containsElement(Object[] array, Object element);1491319010;Check whether the given array contains the given element._@param array the array to check (may be {@code null},_in which case the return value will always be {@code false})_@param element the element to check for_@return whether the element has been found in the given array;public static boolean containsElement(Object[] array, Object element) {_		if (array == null) {_			return false__		}_		for (Object arrayEle : array) {_			if (nullSafeEquals(arrayEle, element)) {_				return true__			}_		}_		return false__	};check,whether,the,given,array,contains,the,given,element,param,array,the,array,to,check,may,be,code,null,in,which,case,the,return,value,will,always,be,code,false,param,element,the,element,to,check,for,return,whether,the,element,has,been,found,in,the,given,array;public,static,boolean,contains,element,object,array,object,element,if,array,null,return,false,for,object,array,ele,array,if,null,safe,equals,array,ele,element,return,true,return,false
ObjectUtils -> public static String nullSafeToString(@Nullable char[] array);1495868221;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable char[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append("'").append(array[i]).append("'")__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,char,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,append,array,i,append,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable char[] array);1496837955;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable char[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append("'").append(array[i]).append("'")__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,char,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,append,array,i,append,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable char[] array);1505924929;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable char[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append("'").append(array[i]).append("'")__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,char,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,append,array,i,append,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable char[] array);1538724083;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable char[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append("'").append(array[i]).append("'")__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,char,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,append,array,i,append,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable char[] array);1542748004;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable char[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append("'").append(array[i]).append("'")__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,char,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,append,array,i,append,sb,append,return,sb,to,string
ObjectUtils -> public static int nullSafeHashCode(@Nullable char[] array);1495868221;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable char[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (char element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,char,array,if,array,null,return,0,int,hash,for,char,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable char[] array);1496837955;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable char[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (char element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,char,array,if,array,null,return,0,int,hash,for,char,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable char[] array);1505924929;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable char[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (char element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,char,array,if,array,null,return,0,int,hash,for,char,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable char[] array);1538724083;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable char[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (char element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,char,array,if,array,null,return,0,int,hash,for,char,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable char[] array);1542748004;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable char[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (char element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,char,array,if,array,null,return,0,int,hash,for,char,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static String nullSafeToString(float[] array);1328020251;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces (<code>"{}"</code>). Adjacent elements are separated_by the characters <code>", "</code> (a comma followed by a space). Returns_<code>"null"</code> if <code>array</code> is <code>null</code>._@param array the array to build a String representation for_@return a String representation of <code>array</code>;public static String nullSafeToString(float[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,code,adjacent,elements,are,separated,by,the,characters,code,code,a,comma,followed,by,a,space,returns,code,null,code,if,code,array,code,is,code,null,code,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array,code;public,static,string,null,safe,to,string,float,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(float[] array);1356735495;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(float[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,float,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(float[] array);1362408075;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(float[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,float,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(float[] array);1385412762;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(float[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,float,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(float[] array);1389796508;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(float[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,float,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(float[] array);1389798571;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(float[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,float,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(float[] array);1405696918;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(float[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,float,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(float[] array);1434129562;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(float[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,float,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(float[] array);1465504808;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(float[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,float,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(float[] array);1467677340;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(float[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,float,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(float[] array);1491319010;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(float[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,float,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static <A,O extends A> A[] addObjectToArray(A[] array, O obj);1328020251;Append the given object to the given array, returning a new array_consisting of the input array contents plus the given object._@param array the array to append to (can be <code>null</code>)_@param obj the object to append_@return the new array (of the same component type_ never <code>null</code>);public static <A,O extends A> A[] addObjectToArray(A[] array, O obj) {_		Class<?> compType = Object.class__		if (array != null) {_			compType = array.getClass().getComponentType()__		}_		else if (obj != null) {_			compType = obj.getClass()__		}_		int newArrLength = (array != null ? array.length + 1 : 1)__		@SuppressWarnings("unchecked")_		A[] newArr = (A[]) Array.newInstance(compType, newArrLength)__		if (array != null) {_			System.arraycopy(array, 0, newArr, 0, array.length)__		}_		newArr[newArr.length - 1] = obj__		return newArr__	};append,the,given,object,to,the,given,array,returning,a,new,array,consisting,of,the,input,array,contents,plus,the,given,object,param,array,the,array,to,append,to,can,be,code,null,code,param,obj,the,object,to,append,return,the,new,array,of,the,same,component,type,never,code,null,code;public,static,a,o,extends,a,a,add,object,to,array,a,array,o,obj,class,comp,type,object,class,if,array,null,comp,type,array,get,class,get,component,type,else,if,obj,null,comp,type,obj,get,class,int,new,arr,length,array,null,array,length,1,1,suppress,warnings,unchecked,a,new,arr,a,array,new,instance,comp,type,new,arr,length,if,array,null,system,arraycopy,array,0,new,arr,0,array,length,new,arr,new,arr,length,1,obj,return,new,arr
ObjectUtils -> public static <A,O extends A> A[] addObjectToArray(A[] array, O obj);1356735495;Append the given object to the given array, returning a new array_consisting of the input array contents plus the given object._@param array the array to append to (can be {@code null})_@param obj the object to append_@return the new array (of the same component type_ never {@code null});public static <A,O extends A> A[] addObjectToArray(A[] array, O obj) {_		Class<?> compType = Object.class__		if (array != null) {_			compType = array.getClass().getComponentType()__		}_		else if (obj != null) {_			compType = obj.getClass()__		}_		int newArrLength = (array != null ? array.length + 1 : 1)__		@SuppressWarnings("unchecked")_		A[] newArr = (A[]) Array.newInstance(compType, newArrLength)__		if (array != null) {_			System.arraycopy(array, 0, newArr, 0, array.length)__		}_		newArr[newArr.length - 1] = obj__		return newArr__	};append,the,given,object,to,the,given,array,returning,a,new,array,consisting,of,the,input,array,contents,plus,the,given,object,param,array,the,array,to,append,to,can,be,code,null,param,obj,the,object,to,append,return,the,new,array,of,the,same,component,type,never,code,null;public,static,a,o,extends,a,a,add,object,to,array,a,array,o,obj,class,comp,type,object,class,if,array,null,comp,type,array,get,class,get,component,type,else,if,obj,null,comp,type,obj,get,class,int,new,arr,length,array,null,array,length,1,1,suppress,warnings,unchecked,a,new,arr,a,array,new,instance,comp,type,new,arr,length,if,array,null,system,arraycopy,array,0,new,arr,0,array,length,new,arr,new,arr,length,1,obj,return,new,arr
ObjectUtils -> public static <A,O extends A> A[] addObjectToArray(A[] array, O obj);1362408075;Append the given object to the given array, returning a new array_consisting of the input array contents plus the given object._@param array the array to append to (can be {@code null})_@param obj the object to append_@return the new array (of the same component type_ never {@code null});public static <A,O extends A> A[] addObjectToArray(A[] array, O obj) {_		Class<?> compType = Object.class__		if (array != null) {_			compType = array.getClass().getComponentType()__		}_		else if (obj != null) {_			compType = obj.getClass()__		}_		int newArrLength = (array != null ? array.length + 1 : 1)__		@SuppressWarnings("unchecked")_		A[] newArr = (A[]) Array.newInstance(compType, newArrLength)__		if (array != null) {_			System.arraycopy(array, 0, newArr, 0, array.length)__		}_		newArr[newArr.length - 1] = obj__		return newArr__	};append,the,given,object,to,the,given,array,returning,a,new,array,consisting,of,the,input,array,contents,plus,the,given,object,param,array,the,array,to,append,to,can,be,code,null,param,obj,the,object,to,append,return,the,new,array,of,the,same,component,type,never,code,null;public,static,a,o,extends,a,a,add,object,to,array,a,array,o,obj,class,comp,type,object,class,if,array,null,comp,type,array,get,class,get,component,type,else,if,obj,null,comp,type,obj,get,class,int,new,arr,length,array,null,array,length,1,1,suppress,warnings,unchecked,a,new,arr,a,array,new,instance,comp,type,new,arr,length,if,array,null,system,arraycopy,array,0,new,arr,0,array,length,new,arr,new,arr,length,1,obj,return,new,arr
ObjectUtils -> public static <A,O extends A> A[] addObjectToArray(A[] array, O obj);1385412762;Append the given object to the given array, returning a new array_consisting of the input array contents plus the given object._@param array the array to append to (can be {@code null})_@param obj the object to append_@return the new array (of the same component type_ never {@code null});public static <A,O extends A> A[] addObjectToArray(A[] array, O obj) {_		Class<?> compType = Object.class__		if (array != null) {_			compType = array.getClass().getComponentType()__		}_		else if (obj != null) {_			compType = obj.getClass()__		}_		int newArrLength = (array != null ? array.length + 1 : 1)__		@SuppressWarnings("unchecked")_		A[] newArr = (A[]) Array.newInstance(compType, newArrLength)__		if (array != null) {_			System.arraycopy(array, 0, newArr, 0, array.length)__		}_		newArr[newArr.length - 1] = obj__		return newArr__	};append,the,given,object,to,the,given,array,returning,a,new,array,consisting,of,the,input,array,contents,plus,the,given,object,param,array,the,array,to,append,to,can,be,code,null,param,obj,the,object,to,append,return,the,new,array,of,the,same,component,type,never,code,null;public,static,a,o,extends,a,a,add,object,to,array,a,array,o,obj,class,comp,type,object,class,if,array,null,comp,type,array,get,class,get,component,type,else,if,obj,null,comp,type,obj,get,class,int,new,arr,length,array,null,array,length,1,1,suppress,warnings,unchecked,a,new,arr,a,array,new,instance,comp,type,new,arr,length,if,array,null,system,arraycopy,array,0,new,arr,0,array,length,new,arr,new,arr,length,1,obj,return,new,arr
ObjectUtils -> public static int nullSafeHashCode(boolean[] array);1328020251;Return a hash code based on the contents of the specified array._If <code>array</code> is <code>null</code>, this method returns 0.;public static int nullSafeHashCode(boolean[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + hashCode(array[i])__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,code,is,code,null,code,this,method,returns,0;public,static,int,null,safe,hash,code,boolean,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,hash,code,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(boolean[] array);1356735495;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(boolean[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + hashCode(array[i])__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,boolean,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,hash,code,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(boolean[] array);1362408075;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(boolean[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + hashCode(array[i])__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,boolean,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,hash,code,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(boolean[] array);1385412762;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(boolean[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + hashCode(array[i])__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,boolean,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,hash,code,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(boolean[] array);1389796508;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(boolean[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (boolean element : array) {_			hash = MULTIPLIER * hash + hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,boolean,array,if,array,null,return,0,int,hash,for,boolean,element,array,hash,multiplier,hash,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(boolean[] array);1389798571;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(boolean[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (boolean element : array) {_			hash = MULTIPLIER * hash + hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,boolean,array,if,array,null,return,0,int,hash,for,boolean,element,array,hash,multiplier,hash,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(boolean[] array);1405696918;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(boolean[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (boolean element : array) {_			hash = MULTIPLIER * hash + hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,boolean,array,if,array,null,return,0,int,hash,for,boolean,element,array,hash,multiplier,hash,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(boolean[] array);1434129562;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(boolean[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (boolean element : array) {_			hash = MULTIPLIER * hash + hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,boolean,array,if,array,null,return,0,int,hash,for,boolean,element,array,hash,multiplier,hash,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(boolean[] array);1465504808;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(boolean[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (boolean element : array) {_			hash = MULTIPLIER * hash + hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,boolean,array,if,array,null,return,0,int,hash,for,boolean,element,array,hash,multiplier,hash,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(boolean[] array);1467677340;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(boolean[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (boolean element : array) {_			hash = MULTIPLIER * hash + hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,boolean,array,if,array,null,return,0,int,hash,for,boolean,element,array,hash,multiplier,hash,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(boolean[] array);1491319010;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(boolean[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (boolean element : array) {_			hash = MULTIPLIER * hash + Boolean.hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,boolean,array,if,array,null,return,0,int,hash,for,boolean,element,array,hash,multiplier,hash,boolean,hash,code,element,return,hash
ObjectUtils -> public static int hashCode(boolean bool);1328020251;Return the same value as <code>{@link Boolean#hashCode()}</code>._@see Boolean#hashCode();public static int hashCode(boolean bool) {_		return bool ? 1231 : 1237__	};return,the,same,value,as,code,link,boolean,hash,code,code,see,boolean,hash,code;public,static,int,hash,code,boolean,bool,return,bool,1231,1237
ObjectUtils -> public static int hashCode(boolean bool);1356735495;Return the same value as {@code {@link Boolean#hashCode()}}._@see Boolean#hashCode();public static int hashCode(boolean bool) {_		return bool ? 1231 : 1237__	};return,the,same,value,as,code,link,boolean,hash,code,see,boolean,hash,code;public,static,int,hash,code,boolean,bool,return,bool,1231,1237
ObjectUtils -> public static int hashCode(boolean bool);1362408075;Return the same value as {@link Boolean#hashCode()}}._@see Boolean#hashCode();public static int hashCode(boolean bool) {_		return bool ? 1231 : 1237__	};return,the,same,value,as,link,boolean,hash,code,see,boolean,hash,code;public,static,int,hash,code,boolean,bool,return,bool,1231,1237
ObjectUtils -> public static int hashCode(boolean bool);1385412762;Return the same value as {@link Boolean#hashCode()}}._@see Boolean#hashCode();public static int hashCode(boolean bool) {_		return bool ? 1231 : 1237__	};return,the,same,value,as,link,boolean,hash,code,see,boolean,hash,code;public,static,int,hash,code,boolean,bool,return,bool,1231,1237
ObjectUtils -> public static int hashCode(boolean bool);1389796508;Return the same value as {@link Boolean#hashCode()}}._@see Boolean#hashCode();public static int hashCode(boolean bool) {_		return (bool ? 1231 : 1237)__	};return,the,same,value,as,link,boolean,hash,code,see,boolean,hash,code;public,static,int,hash,code,boolean,bool,return,bool,1231,1237
ObjectUtils -> public static int hashCode(boolean bool);1389798571;Return the same value as {@link Boolean#hashCode()}}._@see Boolean#hashCode();public static int hashCode(boolean bool) {_		return (bool ? 1231 : 1237)__	};return,the,same,value,as,link,boolean,hash,code,see,boolean,hash,code;public,static,int,hash,code,boolean,bool,return,bool,1231,1237
ObjectUtils -> public static int hashCode(boolean bool);1405696918;Return the same value as {@link Boolean#hashCode()}}._@see Boolean#hashCode();public static int hashCode(boolean bool) {_		return (bool ? 1231 : 1237)__	};return,the,same,value,as,link,boolean,hash,code,see,boolean,hash,code;public,static,int,hash,code,boolean,bool,return,bool,1231,1237
ObjectUtils -> public static int hashCode(boolean bool);1434129562;Return the same value as {@link Boolean#hashCode()}}._@see Boolean#hashCode();public static int hashCode(boolean bool) {_		return (bool ? 1231 : 1237)__	};return,the,same,value,as,link,boolean,hash,code,see,boolean,hash,code;public,static,int,hash,code,boolean,bool,return,bool,1231,1237
ObjectUtils -> public static int hashCode(boolean bool);1465504808;Return the same value as {@link Boolean#hashCode()}}._@see Boolean#hashCode();public static int hashCode(boolean bool) {_		return (bool ? 1231 : 1237)__	};return,the,same,value,as,link,boolean,hash,code,see,boolean,hash,code;public,static,int,hash,code,boolean,bool,return,bool,1231,1237
ObjectUtils -> public static int hashCode(boolean bool);1467677340;Return the same value as {@link Boolean#hashCode()}}._@see Boolean#hashCode();public static int hashCode(boolean bool) {_		return (bool ? 1231 : 1237)__	};return,the,same,value,as,link,boolean,hash,code,see,boolean,hash,code;public,static,int,hash,code,boolean,bool,return,bool,1231,1237
ObjectUtils -> public static String nullSafeToString(@Nullable Object obj);1495868221;Return a String representation of the specified Object._<p>Builds a String representation of the contents in case of an array._Returns {@code "null"} if {@code obj} is {@code null}._@param obj the object to build a String representation for_@return a String representation of {@code obj};public static String nullSafeToString(@Nullable Object obj) {_		if (obj == null) {_			return NULL_STRING__		}_		if (obj instanceof String) {_			return (String) obj__		}_		if (obj instanceof Object[]) {_			return nullSafeToString((Object[]) obj)__		}_		if (obj instanceof boolean[]) {_			return nullSafeToString((boolean[]) obj)__		}_		if (obj instanceof byte[]) {_			return nullSafeToString((byte[]) obj)__		}_		if (obj instanceof char[]) {_			return nullSafeToString((char[]) obj)__		}_		if (obj instanceof double[]) {_			return nullSafeToString((double[]) obj)__		}_		if (obj instanceof float[]) {_			return nullSafeToString((float[]) obj)__		}_		if (obj instanceof int[]) {_			return nullSafeToString((int[]) obj)__		}_		if (obj instanceof long[]) {_			return nullSafeToString((long[]) obj)__		}_		if (obj instanceof short[]) {_			return nullSafeToString((short[]) obj)__		}_		String str = obj.toString()__		return (str != null ? str : EMPTY_STRING)__	};return,a,string,representation,of,the,specified,object,p,builds,a,string,representation,of,the,contents,in,case,of,an,array,returns,code,null,if,code,obj,is,code,null,param,obj,the,object,to,build,a,string,representation,for,return,a,string,representation,of,code,obj;public,static,string,null,safe,to,string,nullable,object,obj,if,obj,null,return,if,obj,instanceof,string,return,string,obj,if,obj,instanceof,object,return,null,safe,to,string,object,obj,if,obj,instanceof,boolean,return,null,safe,to,string,boolean,obj,if,obj,instanceof,byte,return,null,safe,to,string,byte,obj,if,obj,instanceof,char,return,null,safe,to,string,char,obj,if,obj,instanceof,double,return,null,safe,to,string,double,obj,if,obj,instanceof,float,return,null,safe,to,string,float,obj,if,obj,instanceof,int,return,null,safe,to,string,int,obj,if,obj,instanceof,long,return,null,safe,to,string,long,obj,if,obj,instanceof,short,return,null,safe,to,string,short,obj,string,str,obj,to,string,return,str,null,str
ObjectUtils -> public static String nullSafeToString(@Nullable Object obj);1496837955;Return a String representation of the specified Object._<p>Builds a String representation of the contents in case of an array._Returns {@code "null"} if {@code obj} is {@code null}._@param obj the object to build a String representation for_@return a String representation of {@code obj};public static String nullSafeToString(@Nullable Object obj) {_		if (obj == null) {_			return NULL_STRING__		}_		if (obj instanceof String) {_			return (String) obj__		}_		if (obj instanceof Object[]) {_			return nullSafeToString((Object[]) obj)__		}_		if (obj instanceof boolean[]) {_			return nullSafeToString((boolean[]) obj)__		}_		if (obj instanceof byte[]) {_			return nullSafeToString((byte[]) obj)__		}_		if (obj instanceof char[]) {_			return nullSafeToString((char[]) obj)__		}_		if (obj instanceof double[]) {_			return nullSafeToString((double[]) obj)__		}_		if (obj instanceof float[]) {_			return nullSafeToString((float[]) obj)__		}_		if (obj instanceof int[]) {_			return nullSafeToString((int[]) obj)__		}_		if (obj instanceof long[]) {_			return nullSafeToString((long[]) obj)__		}_		if (obj instanceof short[]) {_			return nullSafeToString((short[]) obj)__		}_		String str = obj.toString()__		return (str != null ? str : EMPTY_STRING)__	};return,a,string,representation,of,the,specified,object,p,builds,a,string,representation,of,the,contents,in,case,of,an,array,returns,code,null,if,code,obj,is,code,null,param,obj,the,object,to,build,a,string,representation,for,return,a,string,representation,of,code,obj;public,static,string,null,safe,to,string,nullable,object,obj,if,obj,null,return,if,obj,instanceof,string,return,string,obj,if,obj,instanceof,object,return,null,safe,to,string,object,obj,if,obj,instanceof,boolean,return,null,safe,to,string,boolean,obj,if,obj,instanceof,byte,return,null,safe,to,string,byte,obj,if,obj,instanceof,char,return,null,safe,to,string,char,obj,if,obj,instanceof,double,return,null,safe,to,string,double,obj,if,obj,instanceof,float,return,null,safe,to,string,float,obj,if,obj,instanceof,int,return,null,safe,to,string,int,obj,if,obj,instanceof,long,return,null,safe,to,string,long,obj,if,obj,instanceof,short,return,null,safe,to,string,short,obj,string,str,obj,to,string,return,str,null,str
ObjectUtils -> public static String nullSafeToString(@Nullable Object obj);1505924929;Return a String representation of the specified Object._<p>Builds a String representation of the contents in case of an array._Returns {@code "null"} if {@code obj} is {@code null}._@param obj the object to build a String representation for_@return a String representation of {@code obj};public static String nullSafeToString(@Nullable Object obj) {_		if (obj == null) {_			return NULL_STRING__		}_		if (obj instanceof String) {_			return (String) obj__		}_		if (obj instanceof Object[]) {_			return nullSafeToString((Object[]) obj)__		}_		if (obj instanceof boolean[]) {_			return nullSafeToString((boolean[]) obj)__		}_		if (obj instanceof byte[]) {_			return nullSafeToString((byte[]) obj)__		}_		if (obj instanceof char[]) {_			return nullSafeToString((char[]) obj)__		}_		if (obj instanceof double[]) {_			return nullSafeToString((double[]) obj)__		}_		if (obj instanceof float[]) {_			return nullSafeToString((float[]) obj)__		}_		if (obj instanceof int[]) {_			return nullSafeToString((int[]) obj)__		}_		if (obj instanceof long[]) {_			return nullSafeToString((long[]) obj)__		}_		if (obj instanceof short[]) {_			return nullSafeToString((short[]) obj)__		}_		String str = obj.toString()__		return (str != null ? str : EMPTY_STRING)__	};return,a,string,representation,of,the,specified,object,p,builds,a,string,representation,of,the,contents,in,case,of,an,array,returns,code,null,if,code,obj,is,code,null,param,obj,the,object,to,build,a,string,representation,for,return,a,string,representation,of,code,obj;public,static,string,null,safe,to,string,nullable,object,obj,if,obj,null,return,if,obj,instanceof,string,return,string,obj,if,obj,instanceof,object,return,null,safe,to,string,object,obj,if,obj,instanceof,boolean,return,null,safe,to,string,boolean,obj,if,obj,instanceof,byte,return,null,safe,to,string,byte,obj,if,obj,instanceof,char,return,null,safe,to,string,char,obj,if,obj,instanceof,double,return,null,safe,to,string,double,obj,if,obj,instanceof,float,return,null,safe,to,string,float,obj,if,obj,instanceof,int,return,null,safe,to,string,int,obj,if,obj,instanceof,long,return,null,safe,to,string,long,obj,if,obj,instanceof,short,return,null,safe,to,string,short,obj,string,str,obj,to,string,return,str,null,str
ObjectUtils -> public static String nullSafeToString(@Nullable Object obj);1538724083;Return a String representation of the specified Object._<p>Builds a String representation of the contents in case of an array._Returns {@code "null"} if {@code obj} is {@code null}._@param obj the object to build a String representation for_@return a String representation of {@code obj};public static String nullSafeToString(@Nullable Object obj) {_		if (obj == null) {_			return NULL_STRING__		}_		if (obj instanceof String) {_			return (String) obj__		}_		if (obj instanceof Object[]) {_			return nullSafeToString((Object[]) obj)__		}_		if (obj instanceof boolean[]) {_			return nullSafeToString((boolean[]) obj)__		}_		if (obj instanceof byte[]) {_			return nullSafeToString((byte[]) obj)__		}_		if (obj instanceof char[]) {_			return nullSafeToString((char[]) obj)__		}_		if (obj instanceof double[]) {_			return nullSafeToString((double[]) obj)__		}_		if (obj instanceof float[]) {_			return nullSafeToString((float[]) obj)__		}_		if (obj instanceof int[]) {_			return nullSafeToString((int[]) obj)__		}_		if (obj instanceof long[]) {_			return nullSafeToString((long[]) obj)__		}_		if (obj instanceof short[]) {_			return nullSafeToString((short[]) obj)__		}_		String str = obj.toString()__		return (str != null ? str : EMPTY_STRING)__	};return,a,string,representation,of,the,specified,object,p,builds,a,string,representation,of,the,contents,in,case,of,an,array,returns,code,null,if,code,obj,is,code,null,param,obj,the,object,to,build,a,string,representation,for,return,a,string,representation,of,code,obj;public,static,string,null,safe,to,string,nullable,object,obj,if,obj,null,return,if,obj,instanceof,string,return,string,obj,if,obj,instanceof,object,return,null,safe,to,string,object,obj,if,obj,instanceof,boolean,return,null,safe,to,string,boolean,obj,if,obj,instanceof,byte,return,null,safe,to,string,byte,obj,if,obj,instanceof,char,return,null,safe,to,string,char,obj,if,obj,instanceof,double,return,null,safe,to,string,double,obj,if,obj,instanceof,float,return,null,safe,to,string,float,obj,if,obj,instanceof,int,return,null,safe,to,string,int,obj,if,obj,instanceof,long,return,null,safe,to,string,long,obj,if,obj,instanceof,short,return,null,safe,to,string,short,obj,string,str,obj,to,string,return,str,null,str
ObjectUtils -> public static String nullSafeToString(@Nullable Object obj);1542748004;Return a String representation of the specified Object._<p>Builds a String representation of the contents in case of an array._Returns {@code "null"} if {@code obj} is {@code null}._@param obj the object to build a String representation for_@return a String representation of {@code obj};public static String nullSafeToString(@Nullable Object obj) {_		if (obj == null) {_			return NULL_STRING__		}_		if (obj instanceof String) {_			return (String) obj__		}_		if (obj instanceof Object[]) {_			return nullSafeToString((Object[]) obj)__		}_		if (obj instanceof boolean[]) {_			return nullSafeToString((boolean[]) obj)__		}_		if (obj instanceof byte[]) {_			return nullSafeToString((byte[]) obj)__		}_		if (obj instanceof char[]) {_			return nullSafeToString((char[]) obj)__		}_		if (obj instanceof double[]) {_			return nullSafeToString((double[]) obj)__		}_		if (obj instanceof float[]) {_			return nullSafeToString((float[]) obj)__		}_		if (obj instanceof int[]) {_			return nullSafeToString((int[]) obj)__		}_		if (obj instanceof long[]) {_			return nullSafeToString((long[]) obj)__		}_		if (obj instanceof short[]) {_			return nullSafeToString((short[]) obj)__		}_		String str = obj.toString()__		return (str != null ? str : EMPTY_STRING)__	};return,a,string,representation,of,the,specified,object,p,builds,a,string,representation,of,the,contents,in,case,of,an,array,returns,code,null,if,code,obj,is,code,null,param,obj,the,object,to,build,a,string,representation,for,return,a,string,representation,of,code,obj;public,static,string,null,safe,to,string,nullable,object,obj,if,obj,null,return,if,obj,instanceof,string,return,string,obj,if,obj,instanceof,object,return,null,safe,to,string,object,obj,if,obj,instanceof,boolean,return,null,safe,to,string,boolean,obj,if,obj,instanceof,byte,return,null,safe,to,string,byte,obj,if,obj,instanceof,char,return,null,safe,to,string,char,obj,if,obj,instanceof,double,return,null,safe,to,string,double,obj,if,obj,instanceof,float,return,null,safe,to,string,float,obj,if,obj,instanceof,int,return,null,safe,to,string,int,obj,if,obj,instanceof,long,return,null,safe,to,string,long,obj,if,obj,instanceof,short,return,null,safe,to,string,short,obj,string,str,obj,to,string,return,str,null,str
ObjectUtils -> public static String nullSafeToString(short[] array);1328020251;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces (<code>"{}"</code>). Adjacent elements are separated_by the characters <code>", "</code> (a comma followed by a space). Returns_<code>"null"</code> if <code>array</code> is <code>null</code>._@param array the array to build a String representation for_@return a String representation of <code>array</code>;public static String nullSafeToString(short[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,code,adjacent,elements,are,separated,by,the,characters,code,code,a,comma,followed,by,a,space,returns,code,null,code,if,code,array,code,is,code,null,code,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array,code;public,static,string,null,safe,to,string,short,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(short[] array);1356735495;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(short[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,short,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(short[] array);1362408075;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(short[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,short,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(short[] array);1385412762;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(short[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,short,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(short[] array);1389796508;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(short[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,short,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(short[] array);1389798571;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(short[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,short,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(short[] array);1405696918;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(short[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,short,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(short[] array);1434129562;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(short[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,short,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(short[] array);1465504808;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(short[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,short,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(short[] array);1467677340;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(short[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,short,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(short[] array);1491319010;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(short[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,short,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static boolean isCompatibleWithThrowsClause(Throwable ex, @Nullable Class<?>... declaredExceptions);1496837955;Check whether the given exception is compatible with the specified_exception types, as declared in a throws clause._@param ex the exception to check_@param declaredExceptions the exception types declared in the throws clause_@return whether the given exception is compatible;public static boolean isCompatibleWithThrowsClause(Throwable ex, @Nullable Class<?>... declaredExceptions) {_		if (!isCheckedException(ex)) {_			return true__		}_		if (declaredExceptions != null) {_			for (Class<?> declaredException : declaredExceptions) {_				if (declaredException.isInstance(ex)) {_					return true__				}_			}_		}_		return false__	};check,whether,the,given,exception,is,compatible,with,the,specified,exception,types,as,declared,in,a,throws,clause,param,ex,the,exception,to,check,param,declared,exceptions,the,exception,types,declared,in,the,throws,clause,return,whether,the,given,exception,is,compatible;public,static,boolean,is,compatible,with,throws,clause,throwable,ex,nullable,class,declared,exceptions,if,is,checked,exception,ex,return,true,if,declared,exceptions,null,for,class,declared,exception,declared,exceptions,if,declared,exception,is,instance,ex,return,true,return,false
ObjectUtils -> public static boolean isCompatibleWithThrowsClause(Throwable ex, @Nullable Class<?>... declaredExceptions);1505924929;Check whether the given exception is compatible with the specified_exception types, as declared in a throws clause._@param ex the exception to check_@param declaredExceptions the exception types declared in the throws clause_@return whether the given exception is compatible;public static boolean isCompatibleWithThrowsClause(Throwable ex, @Nullable Class<?>... declaredExceptions) {_		if (!isCheckedException(ex)) {_			return true__		}_		if (declaredExceptions != null) {_			for (Class<?> declaredException : declaredExceptions) {_				if (declaredException.isInstance(ex)) {_					return true__				}_			}_		}_		return false__	};check,whether,the,given,exception,is,compatible,with,the,specified,exception,types,as,declared,in,a,throws,clause,param,ex,the,exception,to,check,param,declared,exceptions,the,exception,types,declared,in,the,throws,clause,return,whether,the,given,exception,is,compatible;public,static,boolean,is,compatible,with,throws,clause,throwable,ex,nullable,class,declared,exceptions,if,is,checked,exception,ex,return,true,if,declared,exceptions,null,for,class,declared,exception,declared,exceptions,if,declared,exception,is,instance,ex,return,true,return,false
ObjectUtils -> public static boolean isCompatibleWithThrowsClause(Throwable ex, @Nullable Class<?>... declaredExceptions);1538724083;Check whether the given exception is compatible with the specified_exception types, as declared in a throws clause._@param ex the exception to check_@param declaredExceptions the exception types declared in the throws clause_@return whether the given exception is compatible;public static boolean isCompatibleWithThrowsClause(Throwable ex, @Nullable Class<?>... declaredExceptions) {_		if (!isCheckedException(ex)) {_			return true__		}_		if (declaredExceptions != null) {_			for (Class<?> declaredException : declaredExceptions) {_				if (declaredException.isInstance(ex)) {_					return true__				}_			}_		}_		return false__	};check,whether,the,given,exception,is,compatible,with,the,specified,exception,types,as,declared,in,a,throws,clause,param,ex,the,exception,to,check,param,declared,exceptions,the,exception,types,declared,in,the,throws,clause,return,whether,the,given,exception,is,compatible;public,static,boolean,is,compatible,with,throws,clause,throwable,ex,nullable,class,declared,exceptions,if,is,checked,exception,ex,return,true,if,declared,exceptions,null,for,class,declared,exception,declared,exceptions,if,declared,exception,is,instance,ex,return,true,return,false
ObjectUtils -> public static boolean isCompatibleWithThrowsClause(Throwable ex, @Nullable Class<?>... declaredExceptions);1542748004;Check whether the given exception is compatible with the specified_exception types, as declared in a throws clause._@param ex the exception to check_@param declaredExceptions the exception types declared in the throws clause_@return whether the given exception is compatible;public static boolean isCompatibleWithThrowsClause(Throwable ex, @Nullable Class<?>... declaredExceptions) {_		if (!isCheckedException(ex)) {_			return true__		}_		if (declaredExceptions != null) {_			for (Class<?> declaredException : declaredExceptions) {_				if (declaredException.isInstance(ex)) {_					return true__				}_			}_		}_		return false__	};check,whether,the,given,exception,is,compatible,with,the,specified,exception,types,as,declared,in,a,throws,clause,param,ex,the,exception,to,check,param,declared,exceptions,the,exception,types,declared,in,the,throws,clause,return,whether,the,given,exception,is,compatible;public,static,boolean,is,compatible,with,throws,clause,throwable,ex,nullable,class,declared,exceptions,if,is,checked,exception,ex,return,true,if,declared,exceptions,null,for,class,declared,exception,declared,exceptions,if,declared,exception,is,instance,ex,return,true,return,false
ObjectUtils -> public static <E extends Enum<?>> E caseInsensitiveValueOf(E[] enumValues, String constant);1328020251;Case insensitive alternative to {@link Enum#valueOf(Class, String)}._@param <E> the concrete Enum type_@param enumValues the array of all Enum constants in question, usually per Enum.values()_@param constant the constant to get the enum value of_@throws IllegalArgumentException if the given constant is not found in the given array_of enum values. Use {@link #containsConstant(Enum[], String)} as a guard to avoid this exception.;public static <E extends Enum<?>> E caseInsensitiveValueOf(E[] enumValues, String constant) {_		for (E candidate : enumValues) {_			if(candidate.toString().equalsIgnoreCase(constant)) {_				return candidate__			}_		}_		throw new IllegalArgumentException(_				String.format("constant [%s] does not exist in enum type %s",_						constant, enumValues.getClass().getComponentType().getName()))__	};case,insensitive,alternative,to,link,enum,value,of,class,string,param,e,the,concrete,enum,type,param,enum,values,the,array,of,all,enum,constants,in,question,usually,per,enum,values,param,constant,the,constant,to,get,the,enum,value,of,throws,illegal,argument,exception,if,the,given,constant,is,not,found,in,the,given,array,of,enum,values,use,link,contains,constant,enum,string,as,a,guard,to,avoid,this,exception;public,static,e,extends,enum,e,case,insensitive,value,of,e,enum,values,string,constant,for,e,candidate,enum,values,if,candidate,to,string,equals,ignore,case,constant,return,candidate,throw,new,illegal,argument,exception,string,format,constant,s,does,not,exist,in,enum,type,s,constant,enum,values,get,class,get,component,type,get,name
ObjectUtils -> public static <E extends Enum<?>> E caseInsensitiveValueOf(E[] enumValues, String constant);1356735495;Case insensitive alternative to {@link Enum#valueOf(Class, String)}._@param <E> the concrete Enum type_@param enumValues the array of all Enum constants in question, usually per Enum.values()_@param constant the constant to get the enum value of_@throws IllegalArgumentException if the given constant is not found in the given array_of enum values. Use {@link #containsConstant(Enum[], String)} as a guard to avoid this exception.;public static <E extends Enum<?>> E caseInsensitiveValueOf(E[] enumValues, String constant) {_		for (E candidate : enumValues) {_			if(candidate.toString().equalsIgnoreCase(constant)) {_				return candidate__			}_		}_		throw new IllegalArgumentException(_				String.format("constant [%s] does not exist in enum type %s",_						constant, enumValues.getClass().getComponentType().getName()))__	};case,insensitive,alternative,to,link,enum,value,of,class,string,param,e,the,concrete,enum,type,param,enum,values,the,array,of,all,enum,constants,in,question,usually,per,enum,values,param,constant,the,constant,to,get,the,enum,value,of,throws,illegal,argument,exception,if,the,given,constant,is,not,found,in,the,given,array,of,enum,values,use,link,contains,constant,enum,string,as,a,guard,to,avoid,this,exception;public,static,e,extends,enum,e,case,insensitive,value,of,e,enum,values,string,constant,for,e,candidate,enum,values,if,candidate,to,string,equals,ignore,case,constant,return,candidate,throw,new,illegal,argument,exception,string,format,constant,s,does,not,exist,in,enum,type,s,constant,enum,values,get,class,get,component,type,get,name
ObjectUtils -> public static <E extends Enum<?>> E caseInsensitiveValueOf(E[] enumValues, String constant);1362408075;Case insensitive alternative to {@link Enum#valueOf(Class, String)}._@param <E> the concrete Enum type_@param enumValues the array of all Enum constants in question, usually per Enum.values()_@param constant the constant to get the enum value of_@throws IllegalArgumentException if the given constant is not found in the given array_of enum values. Use {@link #containsConstant(Enum[], String)} as a guard to avoid this exception.;public static <E extends Enum<?>> E caseInsensitiveValueOf(E[] enumValues, String constant) {_		for (E candidate : enumValues) {_			if(candidate.toString().equalsIgnoreCase(constant)) {_				return candidate__			}_		}_		throw new IllegalArgumentException(_				String.format("constant [%s] does not exist in enum type %s",_						constant, enumValues.getClass().getComponentType().getName()))__	};case,insensitive,alternative,to,link,enum,value,of,class,string,param,e,the,concrete,enum,type,param,enum,values,the,array,of,all,enum,constants,in,question,usually,per,enum,values,param,constant,the,constant,to,get,the,enum,value,of,throws,illegal,argument,exception,if,the,given,constant,is,not,found,in,the,given,array,of,enum,values,use,link,contains,constant,enum,string,as,a,guard,to,avoid,this,exception;public,static,e,extends,enum,e,case,insensitive,value,of,e,enum,values,string,constant,for,e,candidate,enum,values,if,candidate,to,string,equals,ignore,case,constant,return,candidate,throw,new,illegal,argument,exception,string,format,constant,s,does,not,exist,in,enum,type,s,constant,enum,values,get,class,get,component,type,get,name
ObjectUtils -> public static <E extends Enum<?>> E caseInsensitiveValueOf(E[] enumValues, String constant);1385412762;Case insensitive alternative to {@link Enum#valueOf(Class, String)}._@param <E> the concrete Enum type_@param enumValues the array of all Enum constants in question, usually per Enum.values()_@param constant the constant to get the enum value of_@throws IllegalArgumentException if the given constant is not found in the given array_of enum values. Use {@link #containsConstant(Enum[], String)} as a guard to avoid this exception.;public static <E extends Enum<?>> E caseInsensitiveValueOf(E[] enumValues, String constant) {_		for (E candidate : enumValues) {_			if(candidate.toString().equalsIgnoreCase(constant)) {_				return candidate__			}_		}_		throw new IllegalArgumentException(_				String.format("constant [%s] does not exist in enum type %s",_						constant, enumValues.getClass().getComponentType().getName()))__	};case,insensitive,alternative,to,link,enum,value,of,class,string,param,e,the,concrete,enum,type,param,enum,values,the,array,of,all,enum,constants,in,question,usually,per,enum,values,param,constant,the,constant,to,get,the,enum,value,of,throws,illegal,argument,exception,if,the,given,constant,is,not,found,in,the,given,array,of,enum,values,use,link,contains,constant,enum,string,as,a,guard,to,avoid,this,exception;public,static,e,extends,enum,e,case,insensitive,value,of,e,enum,values,string,constant,for,e,candidate,enum,values,if,candidate,to,string,equals,ignore,case,constant,return,candidate,throw,new,illegal,argument,exception,string,format,constant,s,does,not,exist,in,enum,type,s,constant,enum,values,get,class,get,component,type,get,name
ObjectUtils -> public static <E extends Enum<?>> E caseInsensitiveValueOf(E[] enumValues, String constant);1389796508;Case insensitive alternative to {@link Enum#valueOf(Class, String)}._@param <E> the concrete Enum type_@param enumValues the array of all Enum constants in question, usually per Enum.values()_@param constant the constant to get the enum value of_@throws IllegalArgumentException if the given constant is not found in the given array_of enum values. Use {@link #containsConstant(Enum[], String)} as a guard to avoid this exception.;public static <E extends Enum<?>> E caseInsensitiveValueOf(E[] enumValues, String constant) {_		for (E candidate : enumValues) {_			if(candidate.toString().equalsIgnoreCase(constant)) {_				return candidate__			}_		}_		throw new IllegalArgumentException(_				String.format("constant [%s] does not exist in enum type %s",_						constant, enumValues.getClass().getComponentType().getName()))__	};case,insensitive,alternative,to,link,enum,value,of,class,string,param,e,the,concrete,enum,type,param,enum,values,the,array,of,all,enum,constants,in,question,usually,per,enum,values,param,constant,the,constant,to,get,the,enum,value,of,throws,illegal,argument,exception,if,the,given,constant,is,not,found,in,the,given,array,of,enum,values,use,link,contains,constant,enum,string,as,a,guard,to,avoid,this,exception;public,static,e,extends,enum,e,case,insensitive,value,of,e,enum,values,string,constant,for,e,candidate,enum,values,if,candidate,to,string,equals,ignore,case,constant,return,candidate,throw,new,illegal,argument,exception,string,format,constant,s,does,not,exist,in,enum,type,s,constant,enum,values,get,class,get,component,type,get,name
ObjectUtils -> public static <E extends Enum<?>> E caseInsensitiveValueOf(E[] enumValues, String constant);1389798571;Case insensitive alternative to {@link Enum#valueOf(Class, String)}._@param <E> the concrete Enum type_@param enumValues the array of all Enum constants in question, usually per Enum.values()_@param constant the constant to get the enum value of_@throws IllegalArgumentException if the given constant is not found in the given array_of enum values. Use {@link #containsConstant(Enum[], String)} as a guard to avoid this exception.;public static <E extends Enum<?>> E caseInsensitiveValueOf(E[] enumValues, String constant) {_		for (E candidate : enumValues) {_			if(candidate.toString().equalsIgnoreCase(constant)) {_				return candidate__			}_		}_		throw new IllegalArgumentException(_				String.format("constant [%s] does not exist in enum type %s",_						constant, enumValues.getClass().getComponentType().getName()))__	};case,insensitive,alternative,to,link,enum,value,of,class,string,param,e,the,concrete,enum,type,param,enum,values,the,array,of,all,enum,constants,in,question,usually,per,enum,values,param,constant,the,constant,to,get,the,enum,value,of,throws,illegal,argument,exception,if,the,given,constant,is,not,found,in,the,given,array,of,enum,values,use,link,contains,constant,enum,string,as,a,guard,to,avoid,this,exception;public,static,e,extends,enum,e,case,insensitive,value,of,e,enum,values,string,constant,for,e,candidate,enum,values,if,candidate,to,string,equals,ignore,case,constant,return,candidate,throw,new,illegal,argument,exception,string,format,constant,s,does,not,exist,in,enum,type,s,constant,enum,values,get,class,get,component,type,get,name
ObjectUtils -> public static <E extends Enum<?>> E caseInsensitiveValueOf(E[] enumValues, String constant);1405696918;Case insensitive alternative to {@link Enum#valueOf(Class, String)}._@param <E> the concrete Enum type_@param enumValues the array of all Enum constants in question, usually per Enum.values()_@param constant the constant to get the enum value of_@throws IllegalArgumentException if the given constant is not found in the given array_of enum values. Use {@link #containsConstant(Enum[], String)} as a guard to avoid this exception.;public static <E extends Enum<?>> E caseInsensitiveValueOf(E[] enumValues, String constant) {_		for (E candidate : enumValues) {_			if (candidate.toString().equalsIgnoreCase(constant)) {_				return candidate__			}_		}_		throw new IllegalArgumentException(_				String.format("constant [%s] does not exist in enum type %s",_						constant, enumValues.getClass().getComponentType().getName()))__	};case,insensitive,alternative,to,link,enum,value,of,class,string,param,e,the,concrete,enum,type,param,enum,values,the,array,of,all,enum,constants,in,question,usually,per,enum,values,param,constant,the,constant,to,get,the,enum,value,of,throws,illegal,argument,exception,if,the,given,constant,is,not,found,in,the,given,array,of,enum,values,use,link,contains,constant,enum,string,as,a,guard,to,avoid,this,exception;public,static,e,extends,enum,e,case,insensitive,value,of,e,enum,values,string,constant,for,e,candidate,enum,values,if,candidate,to,string,equals,ignore,case,constant,return,candidate,throw,new,illegal,argument,exception,string,format,constant,s,does,not,exist,in,enum,type,s,constant,enum,values,get,class,get,component,type,get,name
ObjectUtils -> public static <E extends Enum<?>> E caseInsensitiveValueOf(E[] enumValues, String constant);1434129562;Case insensitive alternative to {@link Enum#valueOf(Class, String)}._@param <E> the concrete Enum type_@param enumValues the array of all Enum constants in question, usually per Enum.values()_@param constant the constant to get the enum value of_@throws IllegalArgumentException if the given constant is not found in the given array_of enum values. Use {@link #containsConstant(Enum[], String)} as a guard to avoid this exception.;public static <E extends Enum<?>> E caseInsensitiveValueOf(E[] enumValues, String constant) {_		for (E candidate : enumValues) {_			if (candidate.toString().equalsIgnoreCase(constant)) {_				return candidate__			}_		}_		throw new IllegalArgumentException(_				String.format("constant [%s] does not exist in enum type %s",_						constant, enumValues.getClass().getComponentType().getName()))__	};case,insensitive,alternative,to,link,enum,value,of,class,string,param,e,the,concrete,enum,type,param,enum,values,the,array,of,all,enum,constants,in,question,usually,per,enum,values,param,constant,the,constant,to,get,the,enum,value,of,throws,illegal,argument,exception,if,the,given,constant,is,not,found,in,the,given,array,of,enum,values,use,link,contains,constant,enum,string,as,a,guard,to,avoid,this,exception;public,static,e,extends,enum,e,case,insensitive,value,of,e,enum,values,string,constant,for,e,candidate,enum,values,if,candidate,to,string,equals,ignore,case,constant,return,candidate,throw,new,illegal,argument,exception,string,format,constant,s,does,not,exist,in,enum,type,s,constant,enum,values,get,class,get,component,type,get,name
ObjectUtils -> public static <E extends Enum<?>> E caseInsensitiveValueOf(E[] enumValues, String constant);1465504808;Case insensitive alternative to {@link Enum#valueOf(Class, String)}._@param <E> the concrete Enum type_@param enumValues the array of all Enum constants in question, usually per Enum.values()_@param constant the constant to get the enum value of_@throws IllegalArgumentException if the given constant is not found in the given array_of enum values. Use {@link #containsConstant(Enum[], String)} as a guard to avoid this exception.;public static <E extends Enum<?>> E caseInsensitiveValueOf(E[] enumValues, String constant) {_		for (E candidate : enumValues) {_			if (candidate.toString().equalsIgnoreCase(constant)) {_				return candidate__			}_		}_		throw new IllegalArgumentException(_				String.format("constant [%s] does not exist in enum type %s",_						constant, enumValues.getClass().getComponentType().getName()))__	};case,insensitive,alternative,to,link,enum,value,of,class,string,param,e,the,concrete,enum,type,param,enum,values,the,array,of,all,enum,constants,in,question,usually,per,enum,values,param,constant,the,constant,to,get,the,enum,value,of,throws,illegal,argument,exception,if,the,given,constant,is,not,found,in,the,given,array,of,enum,values,use,link,contains,constant,enum,string,as,a,guard,to,avoid,this,exception;public,static,e,extends,enum,e,case,insensitive,value,of,e,enum,values,string,constant,for,e,candidate,enum,values,if,candidate,to,string,equals,ignore,case,constant,return,candidate,throw,new,illegal,argument,exception,string,format,constant,s,does,not,exist,in,enum,type,s,constant,enum,values,get,class,get,component,type,get,name
ObjectUtils -> public static <E extends Enum<?>> E caseInsensitiveValueOf(E[] enumValues, String constant);1467677340;Case insensitive alternative to {@link Enum#valueOf(Class, String)}._@param <E> the concrete Enum type_@param enumValues the array of all Enum constants in question, usually per Enum.values()_@param constant the constant to get the enum value of_@throws IllegalArgumentException if the given constant is not found in the given array_of enum values. Use {@link #containsConstant(Enum[], String)} as a guard to avoid this exception.;public static <E extends Enum<?>> E caseInsensitiveValueOf(E[] enumValues, String constant) {_		for (E candidate : enumValues) {_			if (candidate.toString().equalsIgnoreCase(constant)) {_				return candidate__			}_		}_		throw new IllegalArgumentException(_				String.format("constant [%s] does not exist in enum type %s",_						constant, enumValues.getClass().getComponentType().getName()))__	};case,insensitive,alternative,to,link,enum,value,of,class,string,param,e,the,concrete,enum,type,param,enum,values,the,array,of,all,enum,constants,in,question,usually,per,enum,values,param,constant,the,constant,to,get,the,enum,value,of,throws,illegal,argument,exception,if,the,given,constant,is,not,found,in,the,given,array,of,enum,values,use,link,contains,constant,enum,string,as,a,guard,to,avoid,this,exception;public,static,e,extends,enum,e,case,insensitive,value,of,e,enum,values,string,constant,for,e,candidate,enum,values,if,candidate,to,string,equals,ignore,case,constant,return,candidate,throw,new,illegal,argument,exception,string,format,constant,s,does,not,exist,in,enum,type,s,constant,enum,values,get,class,get,component,type,get,name
ObjectUtils -> public static <E extends Enum<?>> E caseInsensitiveValueOf(E[] enumValues, String constant);1491319010;Case insensitive alternative to {@link Enum#valueOf(Class, String)}._@param <E> the concrete Enum type_@param enumValues the array of all Enum constants in question, usually per Enum.values()_@param constant the constant to get the enum value of_@throws IllegalArgumentException if the given constant is not found in the given array_of enum values. Use {@link #containsConstant(Enum[], String)} as a guard to avoid this exception.;public static <E extends Enum<?>> E caseInsensitiveValueOf(E[] enumValues, String constant) {_		for (E candidate : enumValues) {_			if (candidate.toString().equalsIgnoreCase(constant)) {_				return candidate__			}_		}_		throw new IllegalArgumentException(_				String.format("constant [%s] does not exist in enum type %s",_						constant, enumValues.getClass().getComponentType().getName()))__	};case,insensitive,alternative,to,link,enum,value,of,class,string,param,e,the,concrete,enum,type,param,enum,values,the,array,of,all,enum,constants,in,question,usually,per,enum,values,param,constant,the,constant,to,get,the,enum,value,of,throws,illegal,argument,exception,if,the,given,constant,is,not,found,in,the,given,array,of,enum,values,use,link,contains,constant,enum,string,as,a,guard,to,avoid,this,exception;public,static,e,extends,enum,e,case,insensitive,value,of,e,enum,values,string,constant,for,e,candidate,enum,values,if,candidate,to,string,equals,ignore,case,constant,return,candidate,throw,new,illegal,argument,exception,string,format,constant,s,does,not,exist,in,enum,type,s,constant,enum,values,get,class,get,component,type,get,name
ObjectUtils -> public static <E extends Enum<?>> E caseInsensitiveValueOf(E[] enumValues, String constant);1495868221;Case insensitive alternative to {@link Enum#valueOf(Class, String)}._@param <E> the concrete Enum type_@param enumValues the array of all Enum constants in question, usually per Enum.values()_@param constant the constant to get the enum value of_@throws IllegalArgumentException if the given constant is not found in the given array_of enum values. Use {@link #containsConstant(Enum[], String)} as a guard to avoid this exception.;public static <E extends Enum<?>> E caseInsensitiveValueOf(E[] enumValues, String constant) {_		for (E candidate : enumValues) {_			if (candidate.toString().equalsIgnoreCase(constant)) {_				return candidate__			}_		}_		throw new IllegalArgumentException(_				String.format("constant [%s] does not exist in enum type %s",_						constant, enumValues.getClass().getComponentType().getName()))__	};case,insensitive,alternative,to,link,enum,value,of,class,string,param,e,the,concrete,enum,type,param,enum,values,the,array,of,all,enum,constants,in,question,usually,per,enum,values,param,constant,the,constant,to,get,the,enum,value,of,throws,illegal,argument,exception,if,the,given,constant,is,not,found,in,the,given,array,of,enum,values,use,link,contains,constant,enum,string,as,a,guard,to,avoid,this,exception;public,static,e,extends,enum,e,case,insensitive,value,of,e,enum,values,string,constant,for,e,candidate,enum,values,if,candidate,to,string,equals,ignore,case,constant,return,candidate,throw,new,illegal,argument,exception,string,format,constant,s,does,not,exist,in,enum,type,s,constant,enum,values,get,class,get,component,type,get,name
ObjectUtils -> public static <E extends Enum<?>> E caseInsensitiveValueOf(E[] enumValues, String constant);1496837955;Case insensitive alternative to {@link Enum#valueOf(Class, String)}._@param <E> the concrete Enum type_@param enumValues the array of all Enum constants in question, usually per Enum.values()_@param constant the constant to get the enum value of_@throws IllegalArgumentException if the given constant is not found in the given array_of enum values. Use {@link #containsConstant(Enum[], String)} as a guard to avoid this exception.;public static <E extends Enum<?>> E caseInsensitiveValueOf(E[] enumValues, String constant) {_		for (E candidate : enumValues) {_			if (candidate.toString().equalsIgnoreCase(constant)) {_				return candidate__			}_		}_		throw new IllegalArgumentException(_				String.format("constant [%s] does not exist in enum type %s",_						constant, enumValues.getClass().getComponentType().getName()))__	};case,insensitive,alternative,to,link,enum,value,of,class,string,param,e,the,concrete,enum,type,param,enum,values,the,array,of,all,enum,constants,in,question,usually,per,enum,values,param,constant,the,constant,to,get,the,enum,value,of,throws,illegal,argument,exception,if,the,given,constant,is,not,found,in,the,given,array,of,enum,values,use,link,contains,constant,enum,string,as,a,guard,to,avoid,this,exception;public,static,e,extends,enum,e,case,insensitive,value,of,e,enum,values,string,constant,for,e,candidate,enum,values,if,candidate,to,string,equals,ignore,case,constant,return,candidate,throw,new,illegal,argument,exception,string,format,constant,s,does,not,exist,in,enum,type,s,constant,enum,values,get,class,get,component,type,get,name
ObjectUtils -> public static <E extends Enum<?>> E caseInsensitiveValueOf(E[] enumValues, String constant);1505924929;Case insensitive alternative to {@link Enum#valueOf(Class, String)}._@param <E> the concrete Enum type_@param enumValues the array of all Enum constants in question, usually per Enum.values()_@param constant the constant to get the enum value of_@throws IllegalArgumentException if the given constant is not found in the given array_of enum values. Use {@link #containsConstant(Enum[], String)} as a guard to avoid this exception.;public static <E extends Enum<?>> E caseInsensitiveValueOf(E[] enumValues, String constant) {_		for (E candidate : enumValues) {_			if (candidate.toString().equalsIgnoreCase(constant)) {_				return candidate__			}_		}_		throw new IllegalArgumentException(_				String.format("constant [%s] does not exist in enum type %s",_						constant, enumValues.getClass().getComponentType().getName()))__	};case,insensitive,alternative,to,link,enum,value,of,class,string,param,e,the,concrete,enum,type,param,enum,values,the,array,of,all,enum,constants,in,question,usually,per,enum,values,param,constant,the,constant,to,get,the,enum,value,of,throws,illegal,argument,exception,if,the,given,constant,is,not,found,in,the,given,array,of,enum,values,use,link,contains,constant,enum,string,as,a,guard,to,avoid,this,exception;public,static,e,extends,enum,e,case,insensitive,value,of,e,enum,values,string,constant,for,e,candidate,enum,values,if,candidate,to,string,equals,ignore,case,constant,return,candidate,throw,new,illegal,argument,exception,string,format,constant,s,does,not,exist,in,enum,type,s,constant,enum,values,get,class,get,component,type,get,name
ObjectUtils -> public static <E extends Enum<?>> E caseInsensitiveValueOf(E[] enumValues, String constant);1538724083;Case insensitive alternative to {@link Enum#valueOf(Class, String)}._@param <E> the concrete Enum type_@param enumValues the array of all Enum constants in question, usually per Enum.values()_@param constant the constant to get the enum value of_@throws IllegalArgumentException if the given constant is not found in the given array_of enum values. Use {@link #containsConstant(Enum[], String)} as a guard to avoid this exception.;public static <E extends Enum<?>> E caseInsensitiveValueOf(E[] enumValues, String constant) {_		for (E candidate : enumValues) {_			if (candidate.toString().equalsIgnoreCase(constant)) {_				return candidate__			}_		}_		throw new IllegalArgumentException(_				String.format("constant [%s] does not exist in enum type %s",_						constant, enumValues.getClass().getComponentType().getName()))__	};case,insensitive,alternative,to,link,enum,value,of,class,string,param,e,the,concrete,enum,type,param,enum,values,the,array,of,all,enum,constants,in,question,usually,per,enum,values,param,constant,the,constant,to,get,the,enum,value,of,throws,illegal,argument,exception,if,the,given,constant,is,not,found,in,the,given,array,of,enum,values,use,link,contains,constant,enum,string,as,a,guard,to,avoid,this,exception;public,static,e,extends,enum,e,case,insensitive,value,of,e,enum,values,string,constant,for,e,candidate,enum,values,if,candidate,to,string,equals,ignore,case,constant,return,candidate,throw,new,illegal,argument,exception,string,format,constant,s,does,not,exist,in,enum,type,s,constant,enum,values,get,class,get,component,type,get,name
ObjectUtils -> public static <E extends Enum<?>> E caseInsensitiveValueOf(E[] enumValues, String constant);1542748004;Case insensitive alternative to {@link Enum#valueOf(Class, String)}._@param <E> the concrete Enum type_@param enumValues the array of all Enum constants in question, usually per {@code Enum.values()}_@param constant the constant to get the enum value of_@throws IllegalArgumentException if the given constant is not found in the given array_of enum values. Use {@link #containsConstant(Enum[], String)} as a guard to avoid this exception.;public static <E extends Enum<?>> E caseInsensitiveValueOf(E[] enumValues, String constant) {_		for (E candidate : enumValues) {_			if (candidate.toString().equalsIgnoreCase(constant)) {_				return candidate__			}_		}_		throw new IllegalArgumentException("Constant [" + constant + "] does not exist in enum type " +_				enumValues.getClass().getComponentType().getName())__	};case,insensitive,alternative,to,link,enum,value,of,class,string,param,e,the,concrete,enum,type,param,enum,values,the,array,of,all,enum,constants,in,question,usually,per,code,enum,values,param,constant,the,constant,to,get,the,enum,value,of,throws,illegal,argument,exception,if,the,given,constant,is,not,found,in,the,given,array,of,enum,values,use,link,contains,constant,enum,string,as,a,guard,to,avoid,this,exception;public,static,e,extends,enum,e,case,insensitive,value,of,e,enum,values,string,constant,for,e,candidate,enum,values,if,candidate,to,string,equals,ignore,case,constant,return,candidate,throw,new,illegal,argument,exception,constant,constant,does,not,exist,in,enum,type,enum,values,get,class,get,component,type,get,name
ObjectUtils -> @Deprecated 	public static int hashCode(float flt);1491319010;Return the same value as {@link Float#hashCode(float)}}._@deprecated as of Spring Framework 5.0, in favor of the native JDK 8 variant;@Deprecated_	public static int hashCode(float flt) {_		return Float.hashCode(flt)__	};return,the,same,value,as,link,float,hash,code,float,deprecated,as,of,spring,framework,5,0,in,favor,of,the,native,jdk,8,variant;deprecated,public,static,int,hash,code,float,flt,return,float,hash,code,flt
ObjectUtils -> @Deprecated 	public static int hashCode(float flt);1495868221;Return the same value as {@link Float#hashCode(float)}}._@deprecated as of Spring Framework 5.0, in favor of the native JDK 8 variant;@Deprecated_	public static int hashCode(float flt) {_		return Float.hashCode(flt)__	};return,the,same,value,as,link,float,hash,code,float,deprecated,as,of,spring,framework,5,0,in,favor,of,the,native,jdk,8,variant;deprecated,public,static,int,hash,code,float,flt,return,float,hash,code,flt
ObjectUtils -> @Deprecated 	public static int hashCode(float flt);1496837955;Return the same value as {@link Float#hashCode(float)}}._@deprecated as of Spring Framework 5.0, in favor of the native JDK 8 variant;@Deprecated_	public static int hashCode(float flt) {_		return Float.hashCode(flt)__	};return,the,same,value,as,link,float,hash,code,float,deprecated,as,of,spring,framework,5,0,in,favor,of,the,native,jdk,8,variant;deprecated,public,static,int,hash,code,float,flt,return,float,hash,code,flt
ObjectUtils -> @Deprecated 	public static int hashCode(float flt);1505924929;Return the same value as {@link Float#hashCode(float)}}._@deprecated as of Spring Framework 5.0, in favor of the native JDK 8 variant;@Deprecated_	public static int hashCode(float flt) {_		return Float.hashCode(flt)__	};return,the,same,value,as,link,float,hash,code,float,deprecated,as,of,spring,framework,5,0,in,favor,of,the,native,jdk,8,variant;deprecated,public,static,int,hash,code,float,flt,return,float,hash,code,flt
ObjectUtils -> @Deprecated 	public static int hashCode(float flt);1538724083;Return the same value as {@link Float#hashCode(float)}}._@deprecated as of Spring Framework 5.0, in favor of the native JDK 8 variant;@Deprecated_	public static int hashCode(float flt) {_		return Float.hashCode(flt)__	};return,the,same,value,as,link,float,hash,code,float,deprecated,as,of,spring,framework,5,0,in,favor,of,the,native,jdk,8,variant;deprecated,public,static,int,hash,code,float,flt,return,float,hash,code,flt
ObjectUtils -> @Deprecated 	public static int hashCode(float flt);1542748004;Return the same value as {@link Float#hashCode(float)}}._@deprecated as of Spring Framework 5.0, in favor of the native JDK 8 variant;@Deprecated_	public static int hashCode(float flt) {_		return Float.hashCode(flt)__	};return,the,same,value,as,link,float,hash,code,float,deprecated,as,of,spring,framework,5,0,in,favor,of,the,native,jdk,8,variant;deprecated,public,static,int,hash,code,float,flt,return,float,hash,code,flt
ObjectUtils -> public static int nullSafeHashCode(@Nullable byte[] array);1495868221;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable byte[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (byte element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,byte,array,if,array,null,return,0,int,hash,for,byte,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable byte[] array);1496837955;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable byte[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (byte element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,byte,array,if,array,null,return,0,int,hash,for,byte,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable byte[] array);1505924929;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable byte[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (byte element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,byte,array,if,array,null,return,0,int,hash,for,byte,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable byte[] array);1538724083;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable byte[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (byte element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,byte,array,if,array,null,return,0,int,hash,for,byte,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable byte[] array);1542748004;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable byte[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (byte element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,byte,array,if,array,null,return,0,int,hash,for,byte,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static boolean containsConstant(Enum<?>[] enumValues, String constant, boolean caseSensitive);1328020251;Check whether the given array of enum constants contains a constant with the given name._@param enumValues the enum values to check, typically the product of a call to MyEnum.values()_@param constant the constant name to find (must not be null or empty string)_@param caseSensitive whether case is significant in determining a match_@return whether the constant has been found in the given array;public static boolean containsConstant(Enum<?>[] enumValues, String constant, boolean caseSensitive) {_		for (Enum<?> candidate : enumValues) {_			if (caseSensitive ?_					candidate.toString().equals(constant) :_					candidate.toString().equalsIgnoreCase(constant)) {_				return true__			}_		}_		return false__	};check,whether,the,given,array,of,enum,constants,contains,a,constant,with,the,given,name,param,enum,values,the,enum,values,to,check,typically,the,product,of,a,call,to,my,enum,values,param,constant,the,constant,name,to,find,must,not,be,null,or,empty,string,param,case,sensitive,whether,case,is,significant,in,determining,a,match,return,whether,the,constant,has,been,found,in,the,given,array;public,static,boolean,contains,constant,enum,enum,values,string,constant,boolean,case,sensitive,for,enum,candidate,enum,values,if,case,sensitive,candidate,to,string,equals,constant,candidate,to,string,equals,ignore,case,constant,return,true,return,false
ObjectUtils -> public static boolean containsConstant(Enum<?>[] enumValues, String constant, boolean caseSensitive);1356735495;Check whether the given array of enum constants contains a constant with the given name._@param enumValues the enum values to check, typically the product of a call to MyEnum.values()_@param constant the constant name to find (must not be null or empty string)_@param caseSensitive whether case is significant in determining a match_@return whether the constant has been found in the given array;public static boolean containsConstant(Enum<?>[] enumValues, String constant, boolean caseSensitive) {_		for (Enum<?> candidate : enumValues) {_			if (caseSensitive ?_					candidate.toString().equals(constant) :_					candidate.toString().equalsIgnoreCase(constant)) {_				return true__			}_		}_		return false__	};check,whether,the,given,array,of,enum,constants,contains,a,constant,with,the,given,name,param,enum,values,the,enum,values,to,check,typically,the,product,of,a,call,to,my,enum,values,param,constant,the,constant,name,to,find,must,not,be,null,or,empty,string,param,case,sensitive,whether,case,is,significant,in,determining,a,match,return,whether,the,constant,has,been,found,in,the,given,array;public,static,boolean,contains,constant,enum,enum,values,string,constant,boolean,case,sensitive,for,enum,candidate,enum,values,if,case,sensitive,candidate,to,string,equals,constant,candidate,to,string,equals,ignore,case,constant,return,true,return,false
ObjectUtils -> public static boolean containsConstant(Enum<?>[] enumValues, String constant, boolean caseSensitive);1362408075;Check whether the given array of enum constants contains a constant with the given name._@param enumValues the enum values to check, typically the product of a call to MyEnum.values()_@param constant the constant name to find (must not be null or empty string)_@param caseSensitive whether case is significant in determining a match_@return whether the constant has been found in the given array;public static boolean containsConstant(Enum<?>[] enumValues, String constant, boolean caseSensitive) {_		for (Enum<?> candidate : enumValues) {_			if (caseSensitive ?_					candidate.toString().equals(constant) :_					candidate.toString().equalsIgnoreCase(constant)) {_				return true__			}_		}_		return false__	};check,whether,the,given,array,of,enum,constants,contains,a,constant,with,the,given,name,param,enum,values,the,enum,values,to,check,typically,the,product,of,a,call,to,my,enum,values,param,constant,the,constant,name,to,find,must,not,be,null,or,empty,string,param,case,sensitive,whether,case,is,significant,in,determining,a,match,return,whether,the,constant,has,been,found,in,the,given,array;public,static,boolean,contains,constant,enum,enum,values,string,constant,boolean,case,sensitive,for,enum,candidate,enum,values,if,case,sensitive,candidate,to,string,equals,constant,candidate,to,string,equals,ignore,case,constant,return,true,return,false
ObjectUtils -> public static boolean containsConstant(Enum<?>[] enumValues, String constant, boolean caseSensitive);1385412762;Check whether the given array of enum constants contains a constant with the given name._@param enumValues the enum values to check, typically the product of a call to MyEnum.values()_@param constant the constant name to find (must not be null or empty string)_@param caseSensitive whether case is significant in determining a match_@return whether the constant has been found in the given array;public static boolean containsConstant(Enum<?>[] enumValues, String constant, boolean caseSensitive) {_		for (Enum<?> candidate : enumValues) {_			if (caseSensitive ?_					candidate.toString().equals(constant) :_					candidate.toString().equalsIgnoreCase(constant)) {_				return true__			}_		}_		return false__	};check,whether,the,given,array,of,enum,constants,contains,a,constant,with,the,given,name,param,enum,values,the,enum,values,to,check,typically,the,product,of,a,call,to,my,enum,values,param,constant,the,constant,name,to,find,must,not,be,null,or,empty,string,param,case,sensitive,whether,case,is,significant,in,determining,a,match,return,whether,the,constant,has,been,found,in,the,given,array;public,static,boolean,contains,constant,enum,enum,values,string,constant,boolean,case,sensitive,for,enum,candidate,enum,values,if,case,sensitive,candidate,to,string,equals,constant,candidate,to,string,equals,ignore,case,constant,return,true,return,false
ObjectUtils -> public static boolean containsConstant(Enum<?>[] enumValues, String constant, boolean caseSensitive);1389796508;Check whether the given array of enum constants contains a constant with the given name._@param enumValues the enum values to check, typically the product of a call to MyEnum.values()_@param constant the constant name to find (must not be null or empty string)_@param caseSensitive whether case is significant in determining a match_@return whether the constant has been found in the given array;public static boolean containsConstant(Enum<?>[] enumValues, String constant, boolean caseSensitive) {_		for (Enum<?> candidate : enumValues) {_			if (caseSensitive ?_					candidate.toString().equals(constant) :_					candidate.toString().equalsIgnoreCase(constant)) {_				return true__			}_		}_		return false__	};check,whether,the,given,array,of,enum,constants,contains,a,constant,with,the,given,name,param,enum,values,the,enum,values,to,check,typically,the,product,of,a,call,to,my,enum,values,param,constant,the,constant,name,to,find,must,not,be,null,or,empty,string,param,case,sensitive,whether,case,is,significant,in,determining,a,match,return,whether,the,constant,has,been,found,in,the,given,array;public,static,boolean,contains,constant,enum,enum,values,string,constant,boolean,case,sensitive,for,enum,candidate,enum,values,if,case,sensitive,candidate,to,string,equals,constant,candidate,to,string,equals,ignore,case,constant,return,true,return,false
ObjectUtils -> public static boolean containsConstant(Enum<?>[] enumValues, String constant, boolean caseSensitive);1389798571;Check whether the given array of enum constants contains a constant with the given name._@param enumValues the enum values to check, typically the product of a call to MyEnum.values()_@param constant the constant name to find (must not be null or empty string)_@param caseSensitive whether case is significant in determining a match_@return whether the constant has been found in the given array;public static boolean containsConstant(Enum<?>[] enumValues, String constant, boolean caseSensitive) {_		for (Enum<?> candidate : enumValues) {_			if (caseSensitive ?_					candidate.toString().equals(constant) :_					candidate.toString().equalsIgnoreCase(constant)) {_				return true__			}_		}_		return false__	};check,whether,the,given,array,of,enum,constants,contains,a,constant,with,the,given,name,param,enum,values,the,enum,values,to,check,typically,the,product,of,a,call,to,my,enum,values,param,constant,the,constant,name,to,find,must,not,be,null,or,empty,string,param,case,sensitive,whether,case,is,significant,in,determining,a,match,return,whether,the,constant,has,been,found,in,the,given,array;public,static,boolean,contains,constant,enum,enum,values,string,constant,boolean,case,sensitive,for,enum,candidate,enum,values,if,case,sensitive,candidate,to,string,equals,constant,candidate,to,string,equals,ignore,case,constant,return,true,return,false
ObjectUtils -> public static boolean containsConstant(Enum<?>[] enumValues, String constant, boolean caseSensitive);1405696918;Check whether the given array of enum constants contains a constant with the given name._@param enumValues the enum values to check, typically the product of a call to MyEnum.values()_@param constant the constant name to find (must not be null or empty string)_@param caseSensitive whether case is significant in determining a match_@return whether the constant has been found in the given array;public static boolean containsConstant(Enum<?>[] enumValues, String constant, boolean caseSensitive) {_		for (Enum<?> candidate : enumValues) {_			if (caseSensitive ?_					candidate.toString().equals(constant) :_					candidate.toString().equalsIgnoreCase(constant)) {_				return true__			}_		}_		return false__	};check,whether,the,given,array,of,enum,constants,contains,a,constant,with,the,given,name,param,enum,values,the,enum,values,to,check,typically,the,product,of,a,call,to,my,enum,values,param,constant,the,constant,name,to,find,must,not,be,null,or,empty,string,param,case,sensitive,whether,case,is,significant,in,determining,a,match,return,whether,the,constant,has,been,found,in,the,given,array;public,static,boolean,contains,constant,enum,enum,values,string,constant,boolean,case,sensitive,for,enum,candidate,enum,values,if,case,sensitive,candidate,to,string,equals,constant,candidate,to,string,equals,ignore,case,constant,return,true,return,false
ObjectUtils -> public static boolean containsConstant(Enum<?>[] enumValues, String constant, boolean caseSensitive);1434129562;Check whether the given array of enum constants contains a constant with the given name._@param enumValues the enum values to check, typically the product of a call to MyEnum.values()_@param constant the constant name to find (must not be null or empty string)_@param caseSensitive whether case is significant in determining a match_@return whether the constant has been found in the given array;public static boolean containsConstant(Enum<?>[] enumValues, String constant, boolean caseSensitive) {_		for (Enum<?> candidate : enumValues) {_			if (caseSensitive ?_					candidate.toString().equals(constant) :_					candidate.toString().equalsIgnoreCase(constant)) {_				return true__			}_		}_		return false__	};check,whether,the,given,array,of,enum,constants,contains,a,constant,with,the,given,name,param,enum,values,the,enum,values,to,check,typically,the,product,of,a,call,to,my,enum,values,param,constant,the,constant,name,to,find,must,not,be,null,or,empty,string,param,case,sensitive,whether,case,is,significant,in,determining,a,match,return,whether,the,constant,has,been,found,in,the,given,array;public,static,boolean,contains,constant,enum,enum,values,string,constant,boolean,case,sensitive,for,enum,candidate,enum,values,if,case,sensitive,candidate,to,string,equals,constant,candidate,to,string,equals,ignore,case,constant,return,true,return,false
ObjectUtils -> public static boolean containsConstant(Enum<?>[] enumValues, String constant, boolean caseSensitive);1465504808;Check whether the given array of enum constants contains a constant with the given name._@param enumValues the enum values to check, typically the product of a call to MyEnum.values()_@param constant the constant name to find (must not be null or empty string)_@param caseSensitive whether case is significant in determining a match_@return whether the constant has been found in the given array;public static boolean containsConstant(Enum<?>[] enumValues, String constant, boolean caseSensitive) {_		for (Enum<?> candidate : enumValues) {_			if (caseSensitive ?_					candidate.toString().equals(constant) :_					candidate.toString().equalsIgnoreCase(constant)) {_				return true__			}_		}_		return false__	};check,whether,the,given,array,of,enum,constants,contains,a,constant,with,the,given,name,param,enum,values,the,enum,values,to,check,typically,the,product,of,a,call,to,my,enum,values,param,constant,the,constant,name,to,find,must,not,be,null,or,empty,string,param,case,sensitive,whether,case,is,significant,in,determining,a,match,return,whether,the,constant,has,been,found,in,the,given,array;public,static,boolean,contains,constant,enum,enum,values,string,constant,boolean,case,sensitive,for,enum,candidate,enum,values,if,case,sensitive,candidate,to,string,equals,constant,candidate,to,string,equals,ignore,case,constant,return,true,return,false
ObjectUtils -> public static boolean containsConstant(Enum<?>[] enumValues, String constant, boolean caseSensitive);1467677340;Check whether the given array of enum constants contains a constant with the given name._@param enumValues the enum values to check, typically the product of a call to MyEnum.values()_@param constant the constant name to find (must not be null or empty string)_@param caseSensitive whether case is significant in determining a match_@return whether the constant has been found in the given array;public static boolean containsConstant(Enum<?>[] enumValues, String constant, boolean caseSensitive) {_		for (Enum<?> candidate : enumValues) {_			if (caseSensitive ?_					candidate.toString().equals(constant) :_					candidate.toString().equalsIgnoreCase(constant)) {_				return true__			}_		}_		return false__	};check,whether,the,given,array,of,enum,constants,contains,a,constant,with,the,given,name,param,enum,values,the,enum,values,to,check,typically,the,product,of,a,call,to,my,enum,values,param,constant,the,constant,name,to,find,must,not,be,null,or,empty,string,param,case,sensitive,whether,case,is,significant,in,determining,a,match,return,whether,the,constant,has,been,found,in,the,given,array;public,static,boolean,contains,constant,enum,enum,values,string,constant,boolean,case,sensitive,for,enum,candidate,enum,values,if,case,sensitive,candidate,to,string,equals,constant,candidate,to,string,equals,ignore,case,constant,return,true,return,false
ObjectUtils -> public static boolean containsConstant(Enum<?>[] enumValues, String constant, boolean caseSensitive);1491319010;Check whether the given array of enum constants contains a constant with the given name._@param enumValues the enum values to check, typically the product of a call to MyEnum.values()_@param constant the constant name to find (must not be null or empty string)_@param caseSensitive whether case is significant in determining a match_@return whether the constant has been found in the given array;public static boolean containsConstant(Enum<?>[] enumValues, String constant, boolean caseSensitive) {_		for (Enum<?> candidate : enumValues) {_			if (caseSensitive ?_					candidate.toString().equals(constant) :_					candidate.toString().equalsIgnoreCase(constant)) {_				return true__			}_		}_		return false__	};check,whether,the,given,array,of,enum,constants,contains,a,constant,with,the,given,name,param,enum,values,the,enum,values,to,check,typically,the,product,of,a,call,to,my,enum,values,param,constant,the,constant,name,to,find,must,not,be,null,or,empty,string,param,case,sensitive,whether,case,is,significant,in,determining,a,match,return,whether,the,constant,has,been,found,in,the,given,array;public,static,boolean,contains,constant,enum,enum,values,string,constant,boolean,case,sensitive,for,enum,candidate,enum,values,if,case,sensitive,candidate,to,string,equals,constant,candidate,to,string,equals,ignore,case,constant,return,true,return,false
ObjectUtils -> public static boolean containsConstant(Enum<?>[] enumValues, String constant, boolean caseSensitive);1495868221;Check whether the given array of enum constants contains a constant with the given name._@param enumValues the enum values to check, typically the product of a call to MyEnum.values()_@param constant the constant name to find (must not be null or empty string)_@param caseSensitive whether case is significant in determining a match_@return whether the constant has been found in the given array;public static boolean containsConstant(Enum<?>[] enumValues, String constant, boolean caseSensitive) {_		for (Enum<?> candidate : enumValues) {_			if (caseSensitive ?_					candidate.toString().equals(constant) :_					candidate.toString().equalsIgnoreCase(constant)) {_				return true__			}_		}_		return false__	};check,whether,the,given,array,of,enum,constants,contains,a,constant,with,the,given,name,param,enum,values,the,enum,values,to,check,typically,the,product,of,a,call,to,my,enum,values,param,constant,the,constant,name,to,find,must,not,be,null,or,empty,string,param,case,sensitive,whether,case,is,significant,in,determining,a,match,return,whether,the,constant,has,been,found,in,the,given,array;public,static,boolean,contains,constant,enum,enum,values,string,constant,boolean,case,sensitive,for,enum,candidate,enum,values,if,case,sensitive,candidate,to,string,equals,constant,candidate,to,string,equals,ignore,case,constant,return,true,return,false
ObjectUtils -> public static boolean containsConstant(Enum<?>[] enumValues, String constant, boolean caseSensitive);1496837955;Check whether the given array of enum constants contains a constant with the given name._@param enumValues the enum values to check, typically the product of a call to MyEnum.values()_@param constant the constant name to find (must not be null or empty string)_@param caseSensitive whether case is significant in determining a match_@return whether the constant has been found in the given array;public static boolean containsConstant(Enum<?>[] enumValues, String constant, boolean caseSensitive) {_		for (Enum<?> candidate : enumValues) {_			if (caseSensitive ?_					candidate.toString().equals(constant) :_					candidate.toString().equalsIgnoreCase(constant)) {_				return true__			}_		}_		return false__	};check,whether,the,given,array,of,enum,constants,contains,a,constant,with,the,given,name,param,enum,values,the,enum,values,to,check,typically,the,product,of,a,call,to,my,enum,values,param,constant,the,constant,name,to,find,must,not,be,null,or,empty,string,param,case,sensitive,whether,case,is,significant,in,determining,a,match,return,whether,the,constant,has,been,found,in,the,given,array;public,static,boolean,contains,constant,enum,enum,values,string,constant,boolean,case,sensitive,for,enum,candidate,enum,values,if,case,sensitive,candidate,to,string,equals,constant,candidate,to,string,equals,ignore,case,constant,return,true,return,false
ObjectUtils -> public static boolean containsConstant(Enum<?>[] enumValues, String constant, boolean caseSensitive);1505924929;Check whether the given array of enum constants contains a constant with the given name._@param enumValues the enum values to check, typically the product of a call to MyEnum.values()_@param constant the constant name to find (must not be null or empty string)_@param caseSensitive whether case is significant in determining a match_@return whether the constant has been found in the given array;public static boolean containsConstant(Enum<?>[] enumValues, String constant, boolean caseSensitive) {_		for (Enum<?> candidate : enumValues) {_			if (caseSensitive ?_					candidate.toString().equals(constant) :_					candidate.toString().equalsIgnoreCase(constant)) {_				return true__			}_		}_		return false__	};check,whether,the,given,array,of,enum,constants,contains,a,constant,with,the,given,name,param,enum,values,the,enum,values,to,check,typically,the,product,of,a,call,to,my,enum,values,param,constant,the,constant,name,to,find,must,not,be,null,or,empty,string,param,case,sensitive,whether,case,is,significant,in,determining,a,match,return,whether,the,constant,has,been,found,in,the,given,array;public,static,boolean,contains,constant,enum,enum,values,string,constant,boolean,case,sensitive,for,enum,candidate,enum,values,if,case,sensitive,candidate,to,string,equals,constant,candidate,to,string,equals,ignore,case,constant,return,true,return,false
ObjectUtils -> public static boolean containsConstant(Enum<?>[] enumValues, String constant, boolean caseSensitive);1538724083;Check whether the given array of enum constants contains a constant with the given name._@param enumValues the enum values to check, typically the product of a call to MyEnum.values()_@param constant the constant name to find (must not be null or empty string)_@param caseSensitive whether case is significant in determining a match_@return whether the constant has been found in the given array;public static boolean containsConstant(Enum<?>[] enumValues, String constant, boolean caseSensitive) {_		for (Enum<?> candidate : enumValues) {_			if (caseSensitive ?_					candidate.toString().equals(constant) :_					candidate.toString().equalsIgnoreCase(constant)) {_				return true__			}_		}_		return false__	};check,whether,the,given,array,of,enum,constants,contains,a,constant,with,the,given,name,param,enum,values,the,enum,values,to,check,typically,the,product,of,a,call,to,my,enum,values,param,constant,the,constant,name,to,find,must,not,be,null,or,empty,string,param,case,sensitive,whether,case,is,significant,in,determining,a,match,return,whether,the,constant,has,been,found,in,the,given,array;public,static,boolean,contains,constant,enum,enum,values,string,constant,boolean,case,sensitive,for,enum,candidate,enum,values,if,case,sensitive,candidate,to,string,equals,constant,candidate,to,string,equals,ignore,case,constant,return,true,return,false
ObjectUtils -> public static boolean containsConstant(Enum<?>[] enumValues, String constant, boolean caseSensitive);1542748004;Check whether the given array of enum constants contains a constant with the given name._@param enumValues the enum values to check, typically obtained via {@code MyEnum.values()}_@param constant the constant name to find (must not be null or empty string)_@param caseSensitive whether case is significant in determining a match_@return whether the constant has been found in the given array;public static boolean containsConstant(Enum<?>[] enumValues, String constant, boolean caseSensitive) {_		for (Enum<?> candidate : enumValues) {_			if (caseSensitive ? candidate.toString().equals(constant) :_					candidate.toString().equalsIgnoreCase(constant)) {_				return true__			}_		}_		return false__	};check,whether,the,given,array,of,enum,constants,contains,a,constant,with,the,given,name,param,enum,values,the,enum,values,to,check,typically,obtained,via,code,my,enum,values,param,constant,the,constant,name,to,find,must,not,be,null,or,empty,string,param,case,sensitive,whether,case,is,significant,in,determining,a,match,return,whether,the,constant,has,been,found,in,the,given,array;public,static,boolean,contains,constant,enum,enum,values,string,constant,boolean,case,sensitive,for,enum,candidate,enum,values,if,case,sensitive,candidate,to,string,equals,constant,candidate,to,string,equals,ignore,case,constant,return,true,return,false
ObjectUtils -> public static boolean nullSafeEquals(@Nullable Object o1, @Nullable Object o2);1495868221;Determine if the given objects are equal, returning {@code true} if_both are {@code null} or {@code false} if only one is {@code null}._<p>Compares arrays with {@code Arrays.equals}, performing an equality_check based on the array elements rather than the array reference._@param o1 first Object to compare_@param o2 second Object to compare_@return whether the given objects are equal_@see Object#equals(Object)_@see java.util.Arrays#equals;public static boolean nullSafeEquals(@Nullable Object o1, @Nullable Object o2) {_		if (o1 == o2) {_			return true__		}_		if (o1 == null || o2 == null) {_			return false__		}_		if (o1.equals(o2)) {_			return true__		}_		if (o1.getClass().isArray() && o2.getClass().isArray()) {_			return arrayEquals(o1, o2)__		}_		return false__	};determine,if,the,given,objects,are,equal,returning,code,true,if,both,are,code,null,or,code,false,if,only,one,is,code,null,p,compares,arrays,with,code,arrays,equals,performing,an,equality,check,based,on,the,array,elements,rather,than,the,array,reference,param,o1,first,object,to,compare,param,o2,second,object,to,compare,return,whether,the,given,objects,are,equal,see,object,equals,object,see,java,util,arrays,equals;public,static,boolean,null,safe,equals,nullable,object,o1,nullable,object,o2,if,o1,o2,return,true,if,o1,null,o2,null,return,false,if,o1,equals,o2,return,true,if,o1,get,class,is,array,o2,get,class,is,array,return,array,equals,o1,o2,return,false
ObjectUtils -> public static boolean nullSafeEquals(@Nullable Object o1, @Nullable Object o2);1496837955;Determine if the given objects are equal, returning {@code true} if_both are {@code null} or {@code false} if only one is {@code null}._<p>Compares arrays with {@code Arrays.equals}, performing an equality_check based on the array elements rather than the array reference._@param o1 first Object to compare_@param o2 second Object to compare_@return whether the given objects are equal_@see Object#equals(Object)_@see java.util.Arrays#equals;public static boolean nullSafeEquals(@Nullable Object o1, @Nullable Object o2) {_		if (o1 == o2) {_			return true__		}_		if (o1 == null || o2 == null) {_			return false__		}_		if (o1.equals(o2)) {_			return true__		}_		if (o1.getClass().isArray() && o2.getClass().isArray()) {_			return arrayEquals(o1, o2)__		}_		return false__	};determine,if,the,given,objects,are,equal,returning,code,true,if,both,are,code,null,or,code,false,if,only,one,is,code,null,p,compares,arrays,with,code,arrays,equals,performing,an,equality,check,based,on,the,array,elements,rather,than,the,array,reference,param,o1,first,object,to,compare,param,o2,second,object,to,compare,return,whether,the,given,objects,are,equal,see,object,equals,object,see,java,util,arrays,equals;public,static,boolean,null,safe,equals,nullable,object,o1,nullable,object,o2,if,o1,o2,return,true,if,o1,null,o2,null,return,false,if,o1,equals,o2,return,true,if,o1,get,class,is,array,o2,get,class,is,array,return,array,equals,o1,o2,return,false
ObjectUtils -> public static boolean nullSafeEquals(@Nullable Object o1, @Nullable Object o2);1505924929;Determine if the given objects are equal, returning {@code true} if_both are {@code null} or {@code false} if only one is {@code null}._<p>Compares arrays with {@code Arrays.equals}, performing an equality_check based on the array elements rather than the array reference._@param o1 first Object to compare_@param o2 second Object to compare_@return whether the given objects are equal_@see Object#equals(Object)_@see java.util.Arrays#equals;public static boolean nullSafeEquals(@Nullable Object o1, @Nullable Object o2) {_		if (o1 == o2) {_			return true__		}_		if (o1 == null || o2 == null) {_			return false__		}_		if (o1.equals(o2)) {_			return true__		}_		if (o1.getClass().isArray() && o2.getClass().isArray()) {_			return arrayEquals(o1, o2)__		}_		return false__	};determine,if,the,given,objects,are,equal,returning,code,true,if,both,are,code,null,or,code,false,if,only,one,is,code,null,p,compares,arrays,with,code,arrays,equals,performing,an,equality,check,based,on,the,array,elements,rather,than,the,array,reference,param,o1,first,object,to,compare,param,o2,second,object,to,compare,return,whether,the,given,objects,are,equal,see,object,equals,object,see,java,util,arrays,equals;public,static,boolean,null,safe,equals,nullable,object,o1,nullable,object,o2,if,o1,o2,return,true,if,o1,null,o2,null,return,false,if,o1,equals,o2,return,true,if,o1,get,class,is,array,o2,get,class,is,array,return,array,equals,o1,o2,return,false
ObjectUtils -> public static boolean nullSafeEquals(@Nullable Object o1, @Nullable Object o2);1538724083;Determine if the given objects are equal, returning {@code true} if_both are {@code null} or {@code false} if only one is {@code null}._<p>Compares arrays with {@code Arrays.equals}, performing an equality_check based on the array elements rather than the array reference._@param o1 first Object to compare_@param o2 second Object to compare_@return whether the given objects are equal_@see Object#equals(Object)_@see java.util.Arrays#equals;public static boolean nullSafeEquals(@Nullable Object o1, @Nullable Object o2) {_		if (o1 == o2) {_			return true__		}_		if (o1 == null || o2 == null) {_			return false__		}_		if (o1.equals(o2)) {_			return true__		}_		if (o1.getClass().isArray() && o2.getClass().isArray()) {_			return arrayEquals(o1, o2)__		}_		return false__	};determine,if,the,given,objects,are,equal,returning,code,true,if,both,are,code,null,or,code,false,if,only,one,is,code,null,p,compares,arrays,with,code,arrays,equals,performing,an,equality,check,based,on,the,array,elements,rather,than,the,array,reference,param,o1,first,object,to,compare,param,o2,second,object,to,compare,return,whether,the,given,objects,are,equal,see,object,equals,object,see,java,util,arrays,equals;public,static,boolean,null,safe,equals,nullable,object,o1,nullable,object,o2,if,o1,o2,return,true,if,o1,null,o2,null,return,false,if,o1,equals,o2,return,true,if,o1,get,class,is,array,o2,get,class,is,array,return,array,equals,o1,o2,return,false
ObjectUtils -> public static boolean nullSafeEquals(@Nullable Object o1, @Nullable Object o2);1542748004;Determine if the given objects are equal, returning {@code true} if_both are {@code null} or {@code false} if only one is {@code null}._<p>Compares arrays with {@code Arrays.equals}, performing an equality_check based on the array elements rather than the array reference._@param o1 first Object to compare_@param o2 second Object to compare_@return whether the given objects are equal_@see Object#equals(Object)_@see java.util.Arrays#equals;public static boolean nullSafeEquals(@Nullable Object o1, @Nullable Object o2) {_		if (o1 == o2) {_			return true__		}_		if (o1 == null || o2 == null) {_			return false__		}_		if (o1.equals(o2)) {_			return true__		}_		if (o1.getClass().isArray() && o2.getClass().isArray()) {_			return arrayEquals(o1, o2)__		}_		return false__	};determine,if,the,given,objects,are,equal,returning,code,true,if,both,are,code,null,or,code,false,if,only,one,is,code,null,p,compares,arrays,with,code,arrays,equals,performing,an,equality,check,based,on,the,array,elements,rather,than,the,array,reference,param,o1,first,object,to,compare,param,o2,second,object,to,compare,return,whether,the,given,objects,are,equal,see,object,equals,object,see,java,util,arrays,equals;public,static,boolean,null,safe,equals,nullable,object,o1,nullable,object,o2,if,o1,o2,return,true,if,o1,null,o2,null,return,false,if,o1,equals,o2,return,true,if,o1,get,class,is,array,o2,get,class,is,array,return,array,equals,o1,o2,return,false
ObjectUtils -> @Nullable 	public static Object unwrapOptional(@Nullable Object obj);1496837955;Unwrap the given object which is potentially a {@link java.util.Optional}._@param obj the candidate object_@return either the value held within the {@code Optional}, {@code null}_if the {@code Optional} is empty, or simply the given object as-is_@since 5.0;@Nullable_	public static Object unwrapOptional(@Nullable Object obj) {_		if (obj instanceof Optional) {_			Optional<?> optional = (Optional<?>) obj__			if (!optional.isPresent()) {_				return null__			}_			Object result = optional.get()__			Assert.isTrue(!(result instanceof Optional), "Multi-level Optional usage not supported")__			return result__		}_		return obj__	};unwrap,the,given,object,which,is,potentially,a,link,java,util,optional,param,obj,the,candidate,object,return,either,the,value,held,within,the,code,optional,code,null,if,the,code,optional,is,empty,or,simply,the,given,object,as,is,since,5,0;nullable,public,static,object,unwrap,optional,nullable,object,obj,if,obj,instanceof,optional,optional,optional,optional,obj,if,optional,is,present,return,null,object,result,optional,get,assert,is,true,result,instanceof,optional,multi,level,optional,usage,not,supported,return,result,return,obj
ObjectUtils -> @Nullable 	public static Object unwrapOptional(@Nullable Object obj);1505924929;Unwrap the given object which is potentially a {@link java.util.Optional}._@param obj the candidate object_@return either the value held within the {@code Optional}, {@code null}_if the {@code Optional} is empty, or simply the given object as-is_@since 5.0;@Nullable_	public static Object unwrapOptional(@Nullable Object obj) {_		if (obj instanceof Optional) {_			Optional<?> optional = (Optional<?>) obj__			if (!optional.isPresent()) {_				return null__			}_			Object result = optional.get()__			Assert.isTrue(!(result instanceof Optional), "Multi-level Optional usage not supported")__			return result__		}_		return obj__	};unwrap,the,given,object,which,is,potentially,a,link,java,util,optional,param,obj,the,candidate,object,return,either,the,value,held,within,the,code,optional,code,null,if,the,code,optional,is,empty,or,simply,the,given,object,as,is,since,5,0;nullable,public,static,object,unwrap,optional,nullable,object,obj,if,obj,instanceof,optional,optional,optional,optional,obj,if,optional,is,present,return,null,object,result,optional,get,assert,is,true,result,instanceof,optional,multi,level,optional,usage,not,supported,return,result,return,obj
ObjectUtils -> @Nullable 	public static Object unwrapOptional(@Nullable Object obj);1538724083;Unwrap the given object which is potentially a {@link java.util.Optional}._@param obj the candidate object_@return either the value held within the {@code Optional}, {@code null}_if the {@code Optional} is empty, or simply the given object as-is_@since 5.0;@Nullable_	public static Object unwrapOptional(@Nullable Object obj) {_		if (obj instanceof Optional) {_			Optional<?> optional = (Optional<?>) obj__			if (!optional.isPresent()) {_				return null__			}_			Object result = optional.get()__			Assert.isTrue(!(result instanceof Optional), "Multi-level Optional usage not supported")__			return result__		}_		return obj__	};unwrap,the,given,object,which,is,potentially,a,link,java,util,optional,param,obj,the,candidate,object,return,either,the,value,held,within,the,code,optional,code,null,if,the,code,optional,is,empty,or,simply,the,given,object,as,is,since,5,0;nullable,public,static,object,unwrap,optional,nullable,object,obj,if,obj,instanceof,optional,optional,optional,optional,obj,if,optional,is,present,return,null,object,result,optional,get,assert,is,true,result,instanceof,optional,multi,level,optional,usage,not,supported,return,result,return,obj
ObjectUtils -> @Nullable 	public static Object unwrapOptional(@Nullable Object obj);1542748004;Unwrap the given object which is potentially a {@link java.util.Optional}._@param obj the candidate object_@return either the value held within the {@code Optional}, {@code null}_if the {@code Optional} is empty, or simply the given object as-is_@since 5.0;@Nullable_	public static Object unwrapOptional(@Nullable Object obj) {_		if (obj instanceof Optional) {_			Optional<?> optional = (Optional<?>) obj__			if (!optional.isPresent()) {_				return null__			}_			Object result = optional.get()__			Assert.isTrue(!(result instanceof Optional), "Multi-level Optional usage not supported")__			return result__		}_		return obj__	};unwrap,the,given,object,which,is,potentially,a,link,java,util,optional,param,obj,the,candidate,object,return,either,the,value,held,within,the,code,optional,code,null,if,the,code,optional,is,empty,or,simply,the,given,object,as,is,since,5,0;nullable,public,static,object,unwrap,optional,nullable,object,obj,if,obj,instanceof,optional,optional,optional,optional,obj,if,optional,is,present,return,null,object,result,optional,get,assert,is,true,result,instanceof,optional,multi,level,optional,usage,not,supported,return,result,return,obj
ObjectUtils -> public static String nullSafeToString(Object obj);1328020251;Return a String representation of the specified Object._<p>Builds a String representation of the contents in case of an array._Returns <code>"null"</code> if <code>obj</code> is <code>null</code>._@param obj the object to build a String representation for_@return a String representation of <code>obj</code>;public static String nullSafeToString(Object obj) {_		if (obj == null) {_			return NULL_STRING__		}_		if (obj instanceof String) {_			return (String) obj__		}_		if (obj instanceof Object[]) {_			return nullSafeToString((Object[]) obj)__		}_		if (obj instanceof boolean[]) {_			return nullSafeToString((boolean[]) obj)__		}_		if (obj instanceof byte[]) {_			return nullSafeToString((byte[]) obj)__		}_		if (obj instanceof char[]) {_			return nullSafeToString((char[]) obj)__		}_		if (obj instanceof double[]) {_			return nullSafeToString((double[]) obj)__		}_		if (obj instanceof float[]) {_			return nullSafeToString((float[]) obj)__		}_		if (obj instanceof int[]) {_			return nullSafeToString((int[]) obj)__		}_		if (obj instanceof long[]) {_			return nullSafeToString((long[]) obj)__		}_		if (obj instanceof short[]) {_			return nullSafeToString((short[]) obj)__		}_		String str = obj.toString()__		return (str != null ? str : EMPTY_STRING)__	};return,a,string,representation,of,the,specified,object,p,builds,a,string,representation,of,the,contents,in,case,of,an,array,returns,code,null,code,if,code,obj,code,is,code,null,code,param,obj,the,object,to,build,a,string,representation,for,return,a,string,representation,of,code,obj,code;public,static,string,null,safe,to,string,object,obj,if,obj,null,return,if,obj,instanceof,string,return,string,obj,if,obj,instanceof,object,return,null,safe,to,string,object,obj,if,obj,instanceof,boolean,return,null,safe,to,string,boolean,obj,if,obj,instanceof,byte,return,null,safe,to,string,byte,obj,if,obj,instanceof,char,return,null,safe,to,string,char,obj,if,obj,instanceof,double,return,null,safe,to,string,double,obj,if,obj,instanceof,float,return,null,safe,to,string,float,obj,if,obj,instanceof,int,return,null,safe,to,string,int,obj,if,obj,instanceof,long,return,null,safe,to,string,long,obj,if,obj,instanceof,short,return,null,safe,to,string,short,obj,string,str,obj,to,string,return,str,null,str
ObjectUtils -> public static String nullSafeToString(Object obj);1356735495;Return a String representation of the specified Object._<p>Builds a String representation of the contents in case of an array._Returns {@code "null"} if {@code obj} is {@code null}._@param obj the object to build a String representation for_@return a String representation of {@code obj};public static String nullSafeToString(Object obj) {_		if (obj == null) {_			return NULL_STRING__		}_		if (obj instanceof String) {_			return (String) obj__		}_		if (obj instanceof Object[]) {_			return nullSafeToString((Object[]) obj)__		}_		if (obj instanceof boolean[]) {_			return nullSafeToString((boolean[]) obj)__		}_		if (obj instanceof byte[]) {_			return nullSafeToString((byte[]) obj)__		}_		if (obj instanceof char[]) {_			return nullSafeToString((char[]) obj)__		}_		if (obj instanceof double[]) {_			return nullSafeToString((double[]) obj)__		}_		if (obj instanceof float[]) {_			return nullSafeToString((float[]) obj)__		}_		if (obj instanceof int[]) {_			return nullSafeToString((int[]) obj)__		}_		if (obj instanceof long[]) {_			return nullSafeToString((long[]) obj)__		}_		if (obj instanceof short[]) {_			return nullSafeToString((short[]) obj)__		}_		String str = obj.toString()__		return (str != null ? str : EMPTY_STRING)__	};return,a,string,representation,of,the,specified,object,p,builds,a,string,representation,of,the,contents,in,case,of,an,array,returns,code,null,if,code,obj,is,code,null,param,obj,the,object,to,build,a,string,representation,for,return,a,string,representation,of,code,obj;public,static,string,null,safe,to,string,object,obj,if,obj,null,return,if,obj,instanceof,string,return,string,obj,if,obj,instanceof,object,return,null,safe,to,string,object,obj,if,obj,instanceof,boolean,return,null,safe,to,string,boolean,obj,if,obj,instanceof,byte,return,null,safe,to,string,byte,obj,if,obj,instanceof,char,return,null,safe,to,string,char,obj,if,obj,instanceof,double,return,null,safe,to,string,double,obj,if,obj,instanceof,float,return,null,safe,to,string,float,obj,if,obj,instanceof,int,return,null,safe,to,string,int,obj,if,obj,instanceof,long,return,null,safe,to,string,long,obj,if,obj,instanceof,short,return,null,safe,to,string,short,obj,string,str,obj,to,string,return,str,null,str
ObjectUtils -> public static String nullSafeToString(Object obj);1362408075;Return a String representation of the specified Object._<p>Builds a String representation of the contents in case of an array._Returns {@code "null"} if {@code obj} is {@code null}._@param obj the object to build a String representation for_@return a String representation of {@code obj};public static String nullSafeToString(Object obj) {_		if (obj == null) {_			return NULL_STRING__		}_		if (obj instanceof String) {_			return (String) obj__		}_		if (obj instanceof Object[]) {_			return nullSafeToString((Object[]) obj)__		}_		if (obj instanceof boolean[]) {_			return nullSafeToString((boolean[]) obj)__		}_		if (obj instanceof byte[]) {_			return nullSafeToString((byte[]) obj)__		}_		if (obj instanceof char[]) {_			return nullSafeToString((char[]) obj)__		}_		if (obj instanceof double[]) {_			return nullSafeToString((double[]) obj)__		}_		if (obj instanceof float[]) {_			return nullSafeToString((float[]) obj)__		}_		if (obj instanceof int[]) {_			return nullSafeToString((int[]) obj)__		}_		if (obj instanceof long[]) {_			return nullSafeToString((long[]) obj)__		}_		if (obj instanceof short[]) {_			return nullSafeToString((short[]) obj)__		}_		String str = obj.toString()__		return (str != null ? str : EMPTY_STRING)__	};return,a,string,representation,of,the,specified,object,p,builds,a,string,representation,of,the,contents,in,case,of,an,array,returns,code,null,if,code,obj,is,code,null,param,obj,the,object,to,build,a,string,representation,for,return,a,string,representation,of,code,obj;public,static,string,null,safe,to,string,object,obj,if,obj,null,return,if,obj,instanceof,string,return,string,obj,if,obj,instanceof,object,return,null,safe,to,string,object,obj,if,obj,instanceof,boolean,return,null,safe,to,string,boolean,obj,if,obj,instanceof,byte,return,null,safe,to,string,byte,obj,if,obj,instanceof,char,return,null,safe,to,string,char,obj,if,obj,instanceof,double,return,null,safe,to,string,double,obj,if,obj,instanceof,float,return,null,safe,to,string,float,obj,if,obj,instanceof,int,return,null,safe,to,string,int,obj,if,obj,instanceof,long,return,null,safe,to,string,long,obj,if,obj,instanceof,short,return,null,safe,to,string,short,obj,string,str,obj,to,string,return,str,null,str
ObjectUtils -> public static String nullSafeToString(Object obj);1385412762;Return a String representation of the specified Object._<p>Builds a String representation of the contents in case of an array._Returns {@code "null"} if {@code obj} is {@code null}._@param obj the object to build a String representation for_@return a String representation of {@code obj};public static String nullSafeToString(Object obj) {_		if (obj == null) {_			return NULL_STRING__		}_		if (obj instanceof String) {_			return (String) obj__		}_		if (obj instanceof Object[]) {_			return nullSafeToString((Object[]) obj)__		}_		if (obj instanceof boolean[]) {_			return nullSafeToString((boolean[]) obj)__		}_		if (obj instanceof byte[]) {_			return nullSafeToString((byte[]) obj)__		}_		if (obj instanceof char[]) {_			return nullSafeToString((char[]) obj)__		}_		if (obj instanceof double[]) {_			return nullSafeToString((double[]) obj)__		}_		if (obj instanceof float[]) {_			return nullSafeToString((float[]) obj)__		}_		if (obj instanceof int[]) {_			return nullSafeToString((int[]) obj)__		}_		if (obj instanceof long[]) {_			return nullSafeToString((long[]) obj)__		}_		if (obj instanceof short[]) {_			return nullSafeToString((short[]) obj)__		}_		String str = obj.toString()__		return (str != null ? str : EMPTY_STRING)__	};return,a,string,representation,of,the,specified,object,p,builds,a,string,representation,of,the,contents,in,case,of,an,array,returns,code,null,if,code,obj,is,code,null,param,obj,the,object,to,build,a,string,representation,for,return,a,string,representation,of,code,obj;public,static,string,null,safe,to,string,object,obj,if,obj,null,return,if,obj,instanceof,string,return,string,obj,if,obj,instanceof,object,return,null,safe,to,string,object,obj,if,obj,instanceof,boolean,return,null,safe,to,string,boolean,obj,if,obj,instanceof,byte,return,null,safe,to,string,byte,obj,if,obj,instanceof,char,return,null,safe,to,string,char,obj,if,obj,instanceof,double,return,null,safe,to,string,double,obj,if,obj,instanceof,float,return,null,safe,to,string,float,obj,if,obj,instanceof,int,return,null,safe,to,string,int,obj,if,obj,instanceof,long,return,null,safe,to,string,long,obj,if,obj,instanceof,short,return,null,safe,to,string,short,obj,string,str,obj,to,string,return,str,null,str
ObjectUtils -> public static String nullSafeToString(Object obj);1389796508;Return a String representation of the specified Object._<p>Builds a String representation of the contents in case of an array._Returns {@code "null"} if {@code obj} is {@code null}._@param obj the object to build a String representation for_@return a String representation of {@code obj};public static String nullSafeToString(Object obj) {_		if (obj == null) {_			return NULL_STRING__		}_		if (obj instanceof String) {_			return (String) obj__		}_		if (obj instanceof Object[]) {_			return nullSafeToString((Object[]) obj)__		}_		if (obj instanceof boolean[]) {_			return nullSafeToString((boolean[]) obj)__		}_		if (obj instanceof byte[]) {_			return nullSafeToString((byte[]) obj)__		}_		if (obj instanceof char[]) {_			return nullSafeToString((char[]) obj)__		}_		if (obj instanceof double[]) {_			return nullSafeToString((double[]) obj)__		}_		if (obj instanceof float[]) {_			return nullSafeToString((float[]) obj)__		}_		if (obj instanceof int[]) {_			return nullSafeToString((int[]) obj)__		}_		if (obj instanceof long[]) {_			return nullSafeToString((long[]) obj)__		}_		if (obj instanceof short[]) {_			return nullSafeToString((short[]) obj)__		}_		String str = obj.toString()__		return (str != null ? str : EMPTY_STRING)__	};return,a,string,representation,of,the,specified,object,p,builds,a,string,representation,of,the,contents,in,case,of,an,array,returns,code,null,if,code,obj,is,code,null,param,obj,the,object,to,build,a,string,representation,for,return,a,string,representation,of,code,obj;public,static,string,null,safe,to,string,object,obj,if,obj,null,return,if,obj,instanceof,string,return,string,obj,if,obj,instanceof,object,return,null,safe,to,string,object,obj,if,obj,instanceof,boolean,return,null,safe,to,string,boolean,obj,if,obj,instanceof,byte,return,null,safe,to,string,byte,obj,if,obj,instanceof,char,return,null,safe,to,string,char,obj,if,obj,instanceof,double,return,null,safe,to,string,double,obj,if,obj,instanceof,float,return,null,safe,to,string,float,obj,if,obj,instanceof,int,return,null,safe,to,string,int,obj,if,obj,instanceof,long,return,null,safe,to,string,long,obj,if,obj,instanceof,short,return,null,safe,to,string,short,obj,string,str,obj,to,string,return,str,null,str
ObjectUtils -> public static String nullSafeToString(Object obj);1389798571;Return a String representation of the specified Object._<p>Builds a String representation of the contents in case of an array._Returns {@code "null"} if {@code obj} is {@code null}._@param obj the object to build a String representation for_@return a String representation of {@code obj};public static String nullSafeToString(Object obj) {_		if (obj == null) {_			return NULL_STRING__		}_		if (obj instanceof String) {_			return (String) obj__		}_		if (obj instanceof Object[]) {_			return nullSafeToString((Object[]) obj)__		}_		if (obj instanceof boolean[]) {_			return nullSafeToString((boolean[]) obj)__		}_		if (obj instanceof byte[]) {_			return nullSafeToString((byte[]) obj)__		}_		if (obj instanceof char[]) {_			return nullSafeToString((char[]) obj)__		}_		if (obj instanceof double[]) {_			return nullSafeToString((double[]) obj)__		}_		if (obj instanceof float[]) {_			return nullSafeToString((float[]) obj)__		}_		if (obj instanceof int[]) {_			return nullSafeToString((int[]) obj)__		}_		if (obj instanceof long[]) {_			return nullSafeToString((long[]) obj)__		}_		if (obj instanceof short[]) {_			return nullSafeToString((short[]) obj)__		}_		String str = obj.toString()__		return (str != null ? str : EMPTY_STRING)__	};return,a,string,representation,of,the,specified,object,p,builds,a,string,representation,of,the,contents,in,case,of,an,array,returns,code,null,if,code,obj,is,code,null,param,obj,the,object,to,build,a,string,representation,for,return,a,string,representation,of,code,obj;public,static,string,null,safe,to,string,object,obj,if,obj,null,return,if,obj,instanceof,string,return,string,obj,if,obj,instanceof,object,return,null,safe,to,string,object,obj,if,obj,instanceof,boolean,return,null,safe,to,string,boolean,obj,if,obj,instanceof,byte,return,null,safe,to,string,byte,obj,if,obj,instanceof,char,return,null,safe,to,string,char,obj,if,obj,instanceof,double,return,null,safe,to,string,double,obj,if,obj,instanceof,float,return,null,safe,to,string,float,obj,if,obj,instanceof,int,return,null,safe,to,string,int,obj,if,obj,instanceof,long,return,null,safe,to,string,long,obj,if,obj,instanceof,short,return,null,safe,to,string,short,obj,string,str,obj,to,string,return,str,null,str
ObjectUtils -> public static String nullSafeToString(Object obj);1405696918;Return a String representation of the specified Object._<p>Builds a String representation of the contents in case of an array._Returns {@code "null"} if {@code obj} is {@code null}._@param obj the object to build a String representation for_@return a String representation of {@code obj};public static String nullSafeToString(Object obj) {_		if (obj == null) {_			return NULL_STRING__		}_		if (obj instanceof String) {_			return (String) obj__		}_		if (obj instanceof Object[]) {_			return nullSafeToString((Object[]) obj)__		}_		if (obj instanceof boolean[]) {_			return nullSafeToString((boolean[]) obj)__		}_		if (obj instanceof byte[]) {_			return nullSafeToString((byte[]) obj)__		}_		if (obj instanceof char[]) {_			return nullSafeToString((char[]) obj)__		}_		if (obj instanceof double[]) {_			return nullSafeToString((double[]) obj)__		}_		if (obj instanceof float[]) {_			return nullSafeToString((float[]) obj)__		}_		if (obj instanceof int[]) {_			return nullSafeToString((int[]) obj)__		}_		if (obj instanceof long[]) {_			return nullSafeToString((long[]) obj)__		}_		if (obj instanceof short[]) {_			return nullSafeToString((short[]) obj)__		}_		String str = obj.toString()__		return (str != null ? str : EMPTY_STRING)__	};return,a,string,representation,of,the,specified,object,p,builds,a,string,representation,of,the,contents,in,case,of,an,array,returns,code,null,if,code,obj,is,code,null,param,obj,the,object,to,build,a,string,representation,for,return,a,string,representation,of,code,obj;public,static,string,null,safe,to,string,object,obj,if,obj,null,return,if,obj,instanceof,string,return,string,obj,if,obj,instanceof,object,return,null,safe,to,string,object,obj,if,obj,instanceof,boolean,return,null,safe,to,string,boolean,obj,if,obj,instanceof,byte,return,null,safe,to,string,byte,obj,if,obj,instanceof,char,return,null,safe,to,string,char,obj,if,obj,instanceof,double,return,null,safe,to,string,double,obj,if,obj,instanceof,float,return,null,safe,to,string,float,obj,if,obj,instanceof,int,return,null,safe,to,string,int,obj,if,obj,instanceof,long,return,null,safe,to,string,long,obj,if,obj,instanceof,short,return,null,safe,to,string,short,obj,string,str,obj,to,string,return,str,null,str
ObjectUtils -> public static String nullSafeToString(Object obj);1434129562;Return a String representation of the specified Object._<p>Builds a String representation of the contents in case of an array._Returns {@code "null"} if {@code obj} is {@code null}._@param obj the object to build a String representation for_@return a String representation of {@code obj};public static String nullSafeToString(Object obj) {_		if (obj == null) {_			return NULL_STRING__		}_		if (obj instanceof String) {_			return (String) obj__		}_		if (obj instanceof Object[]) {_			return nullSafeToString((Object[]) obj)__		}_		if (obj instanceof boolean[]) {_			return nullSafeToString((boolean[]) obj)__		}_		if (obj instanceof byte[]) {_			return nullSafeToString((byte[]) obj)__		}_		if (obj instanceof char[]) {_			return nullSafeToString((char[]) obj)__		}_		if (obj instanceof double[]) {_			return nullSafeToString((double[]) obj)__		}_		if (obj instanceof float[]) {_			return nullSafeToString((float[]) obj)__		}_		if (obj instanceof int[]) {_			return nullSafeToString((int[]) obj)__		}_		if (obj instanceof long[]) {_			return nullSafeToString((long[]) obj)__		}_		if (obj instanceof short[]) {_			return nullSafeToString((short[]) obj)__		}_		String str = obj.toString()__		return (str != null ? str : EMPTY_STRING)__	};return,a,string,representation,of,the,specified,object,p,builds,a,string,representation,of,the,contents,in,case,of,an,array,returns,code,null,if,code,obj,is,code,null,param,obj,the,object,to,build,a,string,representation,for,return,a,string,representation,of,code,obj;public,static,string,null,safe,to,string,object,obj,if,obj,null,return,if,obj,instanceof,string,return,string,obj,if,obj,instanceof,object,return,null,safe,to,string,object,obj,if,obj,instanceof,boolean,return,null,safe,to,string,boolean,obj,if,obj,instanceof,byte,return,null,safe,to,string,byte,obj,if,obj,instanceof,char,return,null,safe,to,string,char,obj,if,obj,instanceof,double,return,null,safe,to,string,double,obj,if,obj,instanceof,float,return,null,safe,to,string,float,obj,if,obj,instanceof,int,return,null,safe,to,string,int,obj,if,obj,instanceof,long,return,null,safe,to,string,long,obj,if,obj,instanceof,short,return,null,safe,to,string,short,obj,string,str,obj,to,string,return,str,null,str
ObjectUtils -> public static String nullSafeToString(Object obj);1465504808;Return a String representation of the specified Object._<p>Builds a String representation of the contents in case of an array._Returns {@code "null"} if {@code obj} is {@code null}._@param obj the object to build a String representation for_@return a String representation of {@code obj};public static String nullSafeToString(Object obj) {_		if (obj == null) {_			return NULL_STRING__		}_		if (obj instanceof String) {_			return (String) obj__		}_		if (obj instanceof Object[]) {_			return nullSafeToString((Object[]) obj)__		}_		if (obj instanceof boolean[]) {_			return nullSafeToString((boolean[]) obj)__		}_		if (obj instanceof byte[]) {_			return nullSafeToString((byte[]) obj)__		}_		if (obj instanceof char[]) {_			return nullSafeToString((char[]) obj)__		}_		if (obj instanceof double[]) {_			return nullSafeToString((double[]) obj)__		}_		if (obj instanceof float[]) {_			return nullSafeToString((float[]) obj)__		}_		if (obj instanceof int[]) {_			return nullSafeToString((int[]) obj)__		}_		if (obj instanceof long[]) {_			return nullSafeToString((long[]) obj)__		}_		if (obj instanceof short[]) {_			return nullSafeToString((short[]) obj)__		}_		String str = obj.toString()__		return (str != null ? str : EMPTY_STRING)__	};return,a,string,representation,of,the,specified,object,p,builds,a,string,representation,of,the,contents,in,case,of,an,array,returns,code,null,if,code,obj,is,code,null,param,obj,the,object,to,build,a,string,representation,for,return,a,string,representation,of,code,obj;public,static,string,null,safe,to,string,object,obj,if,obj,null,return,if,obj,instanceof,string,return,string,obj,if,obj,instanceof,object,return,null,safe,to,string,object,obj,if,obj,instanceof,boolean,return,null,safe,to,string,boolean,obj,if,obj,instanceof,byte,return,null,safe,to,string,byte,obj,if,obj,instanceof,char,return,null,safe,to,string,char,obj,if,obj,instanceof,double,return,null,safe,to,string,double,obj,if,obj,instanceof,float,return,null,safe,to,string,float,obj,if,obj,instanceof,int,return,null,safe,to,string,int,obj,if,obj,instanceof,long,return,null,safe,to,string,long,obj,if,obj,instanceof,short,return,null,safe,to,string,short,obj,string,str,obj,to,string,return,str,null,str
ObjectUtils -> public static String nullSafeToString(Object obj);1467677340;Return a String representation of the specified Object._<p>Builds a String representation of the contents in case of an array._Returns {@code "null"} if {@code obj} is {@code null}._@param obj the object to build a String representation for_@return a String representation of {@code obj};public static String nullSafeToString(Object obj) {_		if (obj == null) {_			return NULL_STRING__		}_		if (obj instanceof String) {_			return (String) obj__		}_		if (obj instanceof Object[]) {_			return nullSafeToString((Object[]) obj)__		}_		if (obj instanceof boolean[]) {_			return nullSafeToString((boolean[]) obj)__		}_		if (obj instanceof byte[]) {_			return nullSafeToString((byte[]) obj)__		}_		if (obj instanceof char[]) {_			return nullSafeToString((char[]) obj)__		}_		if (obj instanceof double[]) {_			return nullSafeToString((double[]) obj)__		}_		if (obj instanceof float[]) {_			return nullSafeToString((float[]) obj)__		}_		if (obj instanceof int[]) {_			return nullSafeToString((int[]) obj)__		}_		if (obj instanceof long[]) {_			return nullSafeToString((long[]) obj)__		}_		if (obj instanceof short[]) {_			return nullSafeToString((short[]) obj)__		}_		String str = obj.toString()__		return (str != null ? str : EMPTY_STRING)__	};return,a,string,representation,of,the,specified,object,p,builds,a,string,representation,of,the,contents,in,case,of,an,array,returns,code,null,if,code,obj,is,code,null,param,obj,the,object,to,build,a,string,representation,for,return,a,string,representation,of,code,obj;public,static,string,null,safe,to,string,object,obj,if,obj,null,return,if,obj,instanceof,string,return,string,obj,if,obj,instanceof,object,return,null,safe,to,string,object,obj,if,obj,instanceof,boolean,return,null,safe,to,string,boolean,obj,if,obj,instanceof,byte,return,null,safe,to,string,byte,obj,if,obj,instanceof,char,return,null,safe,to,string,char,obj,if,obj,instanceof,double,return,null,safe,to,string,double,obj,if,obj,instanceof,float,return,null,safe,to,string,float,obj,if,obj,instanceof,int,return,null,safe,to,string,int,obj,if,obj,instanceof,long,return,null,safe,to,string,long,obj,if,obj,instanceof,short,return,null,safe,to,string,short,obj,string,str,obj,to,string,return,str,null,str
ObjectUtils -> public static String nullSafeToString(Object obj);1491319010;Return a String representation of the specified Object._<p>Builds a String representation of the contents in case of an array._Returns {@code "null"} if {@code obj} is {@code null}._@param obj the object to build a String representation for_@return a String representation of {@code obj};public static String nullSafeToString(Object obj) {_		if (obj == null) {_			return NULL_STRING__		}_		if (obj instanceof String) {_			return (String) obj__		}_		if (obj instanceof Object[]) {_			return nullSafeToString((Object[]) obj)__		}_		if (obj instanceof boolean[]) {_			return nullSafeToString((boolean[]) obj)__		}_		if (obj instanceof byte[]) {_			return nullSafeToString((byte[]) obj)__		}_		if (obj instanceof char[]) {_			return nullSafeToString((char[]) obj)__		}_		if (obj instanceof double[]) {_			return nullSafeToString((double[]) obj)__		}_		if (obj instanceof float[]) {_			return nullSafeToString((float[]) obj)__		}_		if (obj instanceof int[]) {_			return nullSafeToString((int[]) obj)__		}_		if (obj instanceof long[]) {_			return nullSafeToString((long[]) obj)__		}_		if (obj instanceof short[]) {_			return nullSafeToString((short[]) obj)__		}_		String str = obj.toString()__		return (str != null ? str : EMPTY_STRING)__	};return,a,string,representation,of,the,specified,object,p,builds,a,string,representation,of,the,contents,in,case,of,an,array,returns,code,null,if,code,obj,is,code,null,param,obj,the,object,to,build,a,string,representation,for,return,a,string,representation,of,code,obj;public,static,string,null,safe,to,string,object,obj,if,obj,null,return,if,obj,instanceof,string,return,string,obj,if,obj,instanceof,object,return,null,safe,to,string,object,obj,if,obj,instanceof,boolean,return,null,safe,to,string,boolean,obj,if,obj,instanceof,byte,return,null,safe,to,string,byte,obj,if,obj,instanceof,char,return,null,safe,to,string,char,obj,if,obj,instanceof,double,return,null,safe,to,string,double,obj,if,obj,instanceof,float,return,null,safe,to,string,float,obj,if,obj,instanceof,int,return,null,safe,to,string,int,obj,if,obj,instanceof,long,return,null,safe,to,string,long,obj,if,obj,instanceof,short,return,null,safe,to,string,short,obj,string,str,obj,to,string,return,str,null,str
ObjectUtils -> public static String nullSafeToString(double[] array);1328020251;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces (<code>"{}"</code>). Adjacent elements are separated_by the characters <code>", "</code> (a comma followed by a space). Returns_<code>"null"</code> if <code>array</code> is <code>null</code>._@param array the array to build a String representation for_@return a String representation of <code>array</code>;public static String nullSafeToString(double[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,code,adjacent,elements,are,separated,by,the,characters,code,code,a,comma,followed,by,a,space,returns,code,null,code,if,code,array,code,is,code,null,code,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array,code;public,static,string,null,safe,to,string,double,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(double[] array);1356735495;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(double[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,double,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(double[] array);1362408075;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(double[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,double,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(double[] array);1385412762;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(double[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,double,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(double[] array);1389796508;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(double[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,double,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(double[] array);1389798571;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(double[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,double,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(double[] array);1405696918;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(double[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,double,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(double[] array);1434129562;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(double[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,double,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(double[] array);1465504808;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(double[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,double,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(double[] array);1467677340;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(double[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,double,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(double[] array);1491319010;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(double[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}__			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,double,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static int nullSafeHashCode(@Nullable boolean[] array);1495868221;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable boolean[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (boolean element : array) {_			hash = MULTIPLIER * hash + Boolean.hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,boolean,array,if,array,null,return,0,int,hash,for,boolean,element,array,hash,multiplier,hash,boolean,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable boolean[] array);1496837955;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable boolean[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (boolean element : array) {_			hash = MULTIPLIER * hash + Boolean.hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,boolean,array,if,array,null,return,0,int,hash,for,boolean,element,array,hash,multiplier,hash,boolean,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable boolean[] array);1505924929;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable boolean[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (boolean element : array) {_			hash = MULTIPLIER * hash + Boolean.hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,boolean,array,if,array,null,return,0,int,hash,for,boolean,element,array,hash,multiplier,hash,boolean,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable boolean[] array);1538724083;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable boolean[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (boolean element : array) {_			hash = MULTIPLIER * hash + Boolean.hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,boolean,array,if,array,null,return,0,int,hash,for,boolean,element,array,hash,multiplier,hash,boolean,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable boolean[] array);1542748004;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable boolean[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (boolean element : array) {_			hash = MULTIPLIER * hash + Boolean.hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,boolean,array,if,array,null,return,0,int,hash,for,boolean,element,array,hash,multiplier,hash,boolean,hash,code,element,return,hash
ObjectUtils -> public static boolean isCompatibleWithThrowsClause(Throwable ex, Class[] declaredExceptions);1328020251;Check whether the given exception is compatible with the exceptions_declared in a throws clause._@param ex the exception to checked_@param declaredExceptions the exceptions declared in the throws clause_@return whether the given exception is compatible;public static boolean isCompatibleWithThrowsClause(Throwable ex, Class[] declaredExceptions) {_		if (!isCheckedException(ex)) {_			return true__		}_		if (declaredExceptions != null) {_			int i = 0__			while (i < declaredExceptions.length) {_				if (declaredExceptions[i].isAssignableFrom(ex.getClass())) {_					return true__				}_				i++__			}_		}_		return false__	};check,whether,the,given,exception,is,compatible,with,the,exceptions,declared,in,a,throws,clause,param,ex,the,exception,to,checked,param,declared,exceptions,the,exceptions,declared,in,the,throws,clause,return,whether,the,given,exception,is,compatible;public,static,boolean,is,compatible,with,throws,clause,throwable,ex,class,declared,exceptions,if,is,checked,exception,ex,return,true,if,declared,exceptions,null,int,i,0,while,i,declared,exceptions,length,if,declared,exceptions,i,is,assignable,from,ex,get,class,return,true,i,return,false
ObjectUtils -> public static boolean isCompatibleWithThrowsClause(Throwable ex, Class[] declaredExceptions);1356735495;Check whether the given exception is compatible with the exceptions_declared in a throws clause._@param ex the exception to checked_@param declaredExceptions the exceptions declared in the throws clause_@return whether the given exception is compatible;public static boolean isCompatibleWithThrowsClause(Throwable ex, Class[] declaredExceptions) {_		if (!isCheckedException(ex)) {_			return true__		}_		if (declaredExceptions != null) {_			int i = 0__			while (i < declaredExceptions.length) {_				if (declaredExceptions[i].isAssignableFrom(ex.getClass())) {_					return true__				}_				i++__			}_		}_		return false__	};check,whether,the,given,exception,is,compatible,with,the,exceptions,declared,in,a,throws,clause,param,ex,the,exception,to,checked,param,declared,exceptions,the,exceptions,declared,in,the,throws,clause,return,whether,the,given,exception,is,compatible;public,static,boolean,is,compatible,with,throws,clause,throwable,ex,class,declared,exceptions,if,is,checked,exception,ex,return,true,if,declared,exceptions,null,int,i,0,while,i,declared,exceptions,length,if,declared,exceptions,i,is,assignable,from,ex,get,class,return,true,i,return,false
ObjectUtils -> public static boolean isCompatibleWithThrowsClause(Throwable ex, Class[] declaredExceptions);1362408075;Check whether the given exception is compatible with the exceptions_declared in a throws clause._@param ex the exception to checked_@param declaredExceptions the exceptions declared in the throws clause_@return whether the given exception is compatible;public static boolean isCompatibleWithThrowsClause(Throwable ex, Class[] declaredExceptions) {_		if (!isCheckedException(ex)) {_			return true__		}_		if (declaredExceptions != null) {_			int i = 0__			while (i < declaredExceptions.length) {_				if (declaredExceptions[i].isAssignableFrom(ex.getClass())) {_					return true__				}_				i++__			}_		}_		return false__	};check,whether,the,given,exception,is,compatible,with,the,exceptions,declared,in,a,throws,clause,param,ex,the,exception,to,checked,param,declared,exceptions,the,exceptions,declared,in,the,throws,clause,return,whether,the,given,exception,is,compatible;public,static,boolean,is,compatible,with,throws,clause,throwable,ex,class,declared,exceptions,if,is,checked,exception,ex,return,true,if,declared,exceptions,null,int,i,0,while,i,declared,exceptions,length,if,declared,exceptions,i,is,assignable,from,ex,get,class,return,true,i,return,false
ObjectUtils -> public static int nullSafeHashCode(char[] array);1328020251;Return a hash code based on the contents of the specified array._If <code>array</code> is <code>null</code>, this method returns 0.;public static int nullSafeHashCode(char[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + array[i]__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,code,is,code,null,code,this,method,returns,0;public,static,int,null,safe,hash,code,char,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(char[] array);1356735495;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(char[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + array[i]__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,char,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(char[] array);1362408075;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(char[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + array[i]__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,char,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(char[] array);1385412762;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(char[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + array[i]__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,char,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(char[] array);1389796508;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(char[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (char element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,char,array,if,array,null,return,0,int,hash,for,char,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(char[] array);1389798571;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(char[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (char element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,char,array,if,array,null,return,0,int,hash,for,char,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(char[] array);1405696918;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(char[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (char element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,char,array,if,array,null,return,0,int,hash,for,char,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(char[] array);1434129562;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(char[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (char element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,char,array,if,array,null,return,0,int,hash,for,char,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(char[] array);1465504808;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(char[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (char element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,char,array,if,array,null,return,0,int,hash,for,char,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(char[] array);1467677340;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(char[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (char element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,char,array,if,array,null,return,0,int,hash,for,char,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(char[] array);1491319010;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(char[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (char element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,char,array,if,array,null,return,0,int,hash,for,char,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static boolean isCompatibleWithThrowsClause(Throwable ex, Class<?>[] declaredExceptions);1385412762;Check whether the given exception is compatible with the exceptions_declared in a throws clause._@param ex the exception to checked_@param declaredExceptions the exceptions declared in the throws clause_@return whether the given exception is compatible;public static boolean isCompatibleWithThrowsClause(Throwable ex, Class<?>[] declaredExceptions) {_		if (!isCheckedException(ex)) {_			return true__		}_		if (declaredExceptions != null) {_			int i = 0__			while (i < declaredExceptions.length) {_				if (declaredExceptions[i].isAssignableFrom(ex.getClass())) {_					return true__				}_				i++__			}_		}_		return false__	};check,whether,the,given,exception,is,compatible,with,the,exceptions,declared,in,a,throws,clause,param,ex,the,exception,to,checked,param,declared,exceptions,the,exceptions,declared,in,the,throws,clause,return,whether,the,given,exception,is,compatible;public,static,boolean,is,compatible,with,throws,clause,throwable,ex,class,declared,exceptions,if,is,checked,exception,ex,return,true,if,declared,exceptions,null,int,i,0,while,i,declared,exceptions,length,if,declared,exceptions,i,is,assignable,from,ex,get,class,return,true,i,return,false
ObjectUtils -> public static boolean isCompatibleWithThrowsClause(Throwable ex, Class<?>[] declaredExceptions);1389796508;Check whether the given exception is compatible with the exceptions_declared in a throws clause._@param ex the exception to checked_@param declaredExceptions the exceptions declared in the throws clause_@return whether the given exception is compatible;public static boolean isCompatibleWithThrowsClause(Throwable ex, Class<?>[] declaredExceptions) {_		if (!isCheckedException(ex)) {_			return true__		}_		if (declaredExceptions != null) {_			int i = 0__			while (i < declaredExceptions.length) {_				if (declaredExceptions[i].isAssignableFrom(ex.getClass())) {_					return true__				}_				i++__			}_		}_		return false__	};check,whether,the,given,exception,is,compatible,with,the,exceptions,declared,in,a,throws,clause,param,ex,the,exception,to,checked,param,declared,exceptions,the,exceptions,declared,in,the,throws,clause,return,whether,the,given,exception,is,compatible;public,static,boolean,is,compatible,with,throws,clause,throwable,ex,class,declared,exceptions,if,is,checked,exception,ex,return,true,if,declared,exceptions,null,int,i,0,while,i,declared,exceptions,length,if,declared,exceptions,i,is,assignable,from,ex,get,class,return,true,i,return,false
ObjectUtils -> public static String nullSafeToString(@Nullable long[] array);1495868221;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable long[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,long,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable long[] array);1496837955;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable long[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,long,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable long[] array);1505924929;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable long[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,long,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable long[] array);1538724083;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable long[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,long,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable long[] array);1542748004;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable long[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,long,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static boolean isEmpty(@Nullable Object[] array);1495868221;Determine whether the given array is empty:_i.e. {@code null} or of zero length._@param array the array to check_@see #isEmpty(Object);public static boolean isEmpty(@Nullable Object[] array) {_		return (array == null || array.length == 0)__	};determine,whether,the,given,array,is,empty,i,e,code,null,or,of,zero,length,param,array,the,array,to,check,see,is,empty,object;public,static,boolean,is,empty,nullable,object,array,return,array,null,array,length,0
ObjectUtils -> public static boolean isEmpty(@Nullable Object[] array);1496837955;Determine whether the given array is empty:_i.e. {@code null} or of zero length._@param array the array to check_@see #isEmpty(Object);public static boolean isEmpty(@Nullable Object[] array) {_		return (array == null || array.length == 0)__	};determine,whether,the,given,array,is,empty,i,e,code,null,or,of,zero,length,param,array,the,array,to,check,see,is,empty,object;public,static,boolean,is,empty,nullable,object,array,return,array,null,array,length,0
ObjectUtils -> public static boolean isEmpty(@Nullable Object[] array);1505924929;Determine whether the given array is empty:_i.e. {@code null} or of zero length._@param array the array to check_@see #isEmpty(Object);public static boolean isEmpty(@Nullable Object[] array) {_		return (array == null || array.length == 0)__	};determine,whether,the,given,array,is,empty,i,e,code,null,or,of,zero,length,param,array,the,array,to,check,see,is,empty,object;public,static,boolean,is,empty,nullable,object,array,return,array,null,array,length,0
ObjectUtils -> public static boolean isEmpty(@Nullable Object[] array);1538724083;Determine whether the given array is empty:_i.e. {@code null} or of zero length._@param array the array to check_@see #isEmpty(Object);public static boolean isEmpty(@Nullable Object[] array) {_		return (array == null || array.length == 0)__	};determine,whether,the,given,array,is,empty,i,e,code,null,or,of,zero,length,param,array,the,array,to,check,see,is,empty,object;public,static,boolean,is,empty,nullable,object,array,return,array,null,array,length,0
ObjectUtils -> public static boolean isEmpty(@Nullable Object[] array);1542748004;Determine whether the given array is empty:_i.e. {@code null} or of zero length._@param array the array to check_@see #isEmpty(Object);public static boolean isEmpty(@Nullable Object[] array) {_		return (array == null || array.length == 0)__	};determine,whether,the,given,array,is,empty,i,e,code,null,or,of,zero,length,param,array,the,array,to,check,see,is,empty,object;public,static,boolean,is,empty,nullable,object,array,return,array,null,array,length,0
ObjectUtils -> public static boolean isCheckedException(Throwable ex);1328020251;Return whether the given throwable is a checked exception:_that is, neither a RuntimeException nor an Error._@param ex the throwable to check_@return whether the throwable is a checked exception_@see java.lang.Exception_@see java.lang.RuntimeException_@see java.lang.Error;public static boolean isCheckedException(Throwable ex) {_		return !(ex instanceof RuntimeException || ex instanceof Error)__	};return,whether,the,given,throwable,is,a,checked,exception,that,is,neither,a,runtime,exception,nor,an,error,param,ex,the,throwable,to,check,return,whether,the,throwable,is,a,checked,exception,see,java,lang,exception,see,java,lang,runtime,exception,see,java,lang,error;public,static,boolean,is,checked,exception,throwable,ex,return,ex,instanceof,runtime,exception,ex,instanceof,error
ObjectUtils -> public static boolean isCheckedException(Throwable ex);1356735495;Return whether the given throwable is a checked exception:_that is, neither a RuntimeException nor an Error._@param ex the throwable to check_@return whether the throwable is a checked exception_@see java.lang.Exception_@see java.lang.RuntimeException_@see java.lang.Error;public static boolean isCheckedException(Throwable ex) {_		return !(ex instanceof RuntimeException || ex instanceof Error)__	};return,whether,the,given,throwable,is,a,checked,exception,that,is,neither,a,runtime,exception,nor,an,error,param,ex,the,throwable,to,check,return,whether,the,throwable,is,a,checked,exception,see,java,lang,exception,see,java,lang,runtime,exception,see,java,lang,error;public,static,boolean,is,checked,exception,throwable,ex,return,ex,instanceof,runtime,exception,ex,instanceof,error
ObjectUtils -> public static boolean isCheckedException(Throwable ex);1362408075;Return whether the given throwable is a checked exception:_that is, neither a RuntimeException nor an Error._@param ex the throwable to check_@return whether the throwable is a checked exception_@see java.lang.Exception_@see java.lang.RuntimeException_@see java.lang.Error;public static boolean isCheckedException(Throwable ex) {_		return !(ex instanceof RuntimeException || ex instanceof Error)__	};return,whether,the,given,throwable,is,a,checked,exception,that,is,neither,a,runtime,exception,nor,an,error,param,ex,the,throwable,to,check,return,whether,the,throwable,is,a,checked,exception,see,java,lang,exception,see,java,lang,runtime,exception,see,java,lang,error;public,static,boolean,is,checked,exception,throwable,ex,return,ex,instanceof,runtime,exception,ex,instanceof,error
ObjectUtils -> public static boolean isCheckedException(Throwable ex);1385412762;Return whether the given throwable is a checked exception:_that is, neither a RuntimeException nor an Error._@param ex the throwable to check_@return whether the throwable is a checked exception_@see java.lang.Exception_@see java.lang.RuntimeException_@see java.lang.Error;public static boolean isCheckedException(Throwable ex) {_		return !(ex instanceof RuntimeException || ex instanceof Error)__	};return,whether,the,given,throwable,is,a,checked,exception,that,is,neither,a,runtime,exception,nor,an,error,param,ex,the,throwable,to,check,return,whether,the,throwable,is,a,checked,exception,see,java,lang,exception,see,java,lang,runtime,exception,see,java,lang,error;public,static,boolean,is,checked,exception,throwable,ex,return,ex,instanceof,runtime,exception,ex,instanceof,error
ObjectUtils -> public static boolean isCheckedException(Throwable ex);1389796508;Return whether the given throwable is a checked exception:_that is, neither a RuntimeException nor an Error._@param ex the throwable to check_@return whether the throwable is a checked exception_@see java.lang.Exception_@see java.lang.RuntimeException_@see java.lang.Error;public static boolean isCheckedException(Throwable ex) {_		return !(ex instanceof RuntimeException || ex instanceof Error)__	};return,whether,the,given,throwable,is,a,checked,exception,that,is,neither,a,runtime,exception,nor,an,error,param,ex,the,throwable,to,check,return,whether,the,throwable,is,a,checked,exception,see,java,lang,exception,see,java,lang,runtime,exception,see,java,lang,error;public,static,boolean,is,checked,exception,throwable,ex,return,ex,instanceof,runtime,exception,ex,instanceof,error
ObjectUtils -> public static boolean isCheckedException(Throwable ex);1389798571;Return whether the given throwable is a checked exception:_that is, neither a RuntimeException nor an Error._@param ex the throwable to check_@return whether the throwable is a checked exception_@see java.lang.Exception_@see java.lang.RuntimeException_@see java.lang.Error;public static boolean isCheckedException(Throwable ex) {_		return !(ex instanceof RuntimeException || ex instanceof Error)__	};return,whether,the,given,throwable,is,a,checked,exception,that,is,neither,a,runtime,exception,nor,an,error,param,ex,the,throwable,to,check,return,whether,the,throwable,is,a,checked,exception,see,java,lang,exception,see,java,lang,runtime,exception,see,java,lang,error;public,static,boolean,is,checked,exception,throwable,ex,return,ex,instanceof,runtime,exception,ex,instanceof,error
ObjectUtils -> public static boolean isCheckedException(Throwable ex);1405696918;Return whether the given throwable is a checked exception:_that is, neither a RuntimeException nor an Error._@param ex the throwable to check_@return whether the throwable is a checked exception_@see java.lang.Exception_@see java.lang.RuntimeException_@see java.lang.Error;public static boolean isCheckedException(Throwable ex) {_		return !(ex instanceof RuntimeException || ex instanceof Error)__	};return,whether,the,given,throwable,is,a,checked,exception,that,is,neither,a,runtime,exception,nor,an,error,param,ex,the,throwable,to,check,return,whether,the,throwable,is,a,checked,exception,see,java,lang,exception,see,java,lang,runtime,exception,see,java,lang,error;public,static,boolean,is,checked,exception,throwable,ex,return,ex,instanceof,runtime,exception,ex,instanceof,error
ObjectUtils -> public static boolean isCheckedException(Throwable ex);1434129562;Return whether the given throwable is a checked exception:_that is, neither a RuntimeException nor an Error._@param ex the throwable to check_@return whether the throwable is a checked exception_@see java.lang.Exception_@see java.lang.RuntimeException_@see java.lang.Error;public static boolean isCheckedException(Throwable ex) {_		return !(ex instanceof RuntimeException || ex instanceof Error)__	};return,whether,the,given,throwable,is,a,checked,exception,that,is,neither,a,runtime,exception,nor,an,error,param,ex,the,throwable,to,check,return,whether,the,throwable,is,a,checked,exception,see,java,lang,exception,see,java,lang,runtime,exception,see,java,lang,error;public,static,boolean,is,checked,exception,throwable,ex,return,ex,instanceof,runtime,exception,ex,instanceof,error
ObjectUtils -> public static boolean isCheckedException(Throwable ex);1465504808;Return whether the given throwable is a checked exception:_that is, neither a RuntimeException nor an Error._@param ex the throwable to check_@return whether the throwable is a checked exception_@see java.lang.Exception_@see java.lang.RuntimeException_@see java.lang.Error;public static boolean isCheckedException(Throwable ex) {_		return !(ex instanceof RuntimeException || ex instanceof Error)__	};return,whether,the,given,throwable,is,a,checked,exception,that,is,neither,a,runtime,exception,nor,an,error,param,ex,the,throwable,to,check,return,whether,the,throwable,is,a,checked,exception,see,java,lang,exception,see,java,lang,runtime,exception,see,java,lang,error;public,static,boolean,is,checked,exception,throwable,ex,return,ex,instanceof,runtime,exception,ex,instanceof,error
ObjectUtils -> public static boolean isCheckedException(Throwable ex);1467677340;Return whether the given throwable is a checked exception:_that is, neither a RuntimeException nor an Error._@param ex the throwable to check_@return whether the throwable is a checked exception_@see java.lang.Exception_@see java.lang.RuntimeException_@see java.lang.Error;public static boolean isCheckedException(Throwable ex) {_		return !(ex instanceof RuntimeException || ex instanceof Error)__	};return,whether,the,given,throwable,is,a,checked,exception,that,is,neither,a,runtime,exception,nor,an,error,param,ex,the,throwable,to,check,return,whether,the,throwable,is,a,checked,exception,see,java,lang,exception,see,java,lang,runtime,exception,see,java,lang,error;public,static,boolean,is,checked,exception,throwable,ex,return,ex,instanceof,runtime,exception,ex,instanceof,error
ObjectUtils -> public static boolean isCheckedException(Throwable ex);1491319010;Return whether the given throwable is a checked exception:_that is, neither a RuntimeException nor an Error._@param ex the throwable to check_@return whether the throwable is a checked exception_@see java.lang.Exception_@see java.lang.RuntimeException_@see java.lang.Error;public static boolean isCheckedException(Throwable ex) {_		return !(ex instanceof RuntimeException || ex instanceof Error)__	};return,whether,the,given,throwable,is,a,checked,exception,that,is,neither,a,runtime,exception,nor,an,error,param,ex,the,throwable,to,check,return,whether,the,throwable,is,a,checked,exception,see,java,lang,exception,see,java,lang,runtime,exception,see,java,lang,error;public,static,boolean,is,checked,exception,throwable,ex,return,ex,instanceof,runtime,exception,ex,instanceof,error
ObjectUtils -> public static boolean isCheckedException(Throwable ex);1495868221;Return whether the given throwable is a checked exception:_that is, neither a RuntimeException nor an Error._@param ex the throwable to check_@return whether the throwable is a checked exception_@see java.lang.Exception_@see java.lang.RuntimeException_@see java.lang.Error;public static boolean isCheckedException(Throwable ex) {_		return !(ex instanceof RuntimeException || ex instanceof Error)__	};return,whether,the,given,throwable,is,a,checked,exception,that,is,neither,a,runtime,exception,nor,an,error,param,ex,the,throwable,to,check,return,whether,the,throwable,is,a,checked,exception,see,java,lang,exception,see,java,lang,runtime,exception,see,java,lang,error;public,static,boolean,is,checked,exception,throwable,ex,return,ex,instanceof,runtime,exception,ex,instanceof,error
ObjectUtils -> public static boolean isCheckedException(Throwable ex);1496837955;Return whether the given throwable is a checked exception:_that is, neither a RuntimeException nor an Error._@param ex the throwable to check_@return whether the throwable is a checked exception_@see java.lang.Exception_@see java.lang.RuntimeException_@see java.lang.Error;public static boolean isCheckedException(Throwable ex) {_		return !(ex instanceof RuntimeException || ex instanceof Error)__	};return,whether,the,given,throwable,is,a,checked,exception,that,is,neither,a,runtime,exception,nor,an,error,param,ex,the,throwable,to,check,return,whether,the,throwable,is,a,checked,exception,see,java,lang,exception,see,java,lang,runtime,exception,see,java,lang,error;public,static,boolean,is,checked,exception,throwable,ex,return,ex,instanceof,runtime,exception,ex,instanceof,error
ObjectUtils -> public static boolean isCheckedException(Throwable ex);1505924929;Return whether the given throwable is a checked exception:_that is, neither a RuntimeException nor an Error._@param ex the throwable to check_@return whether the throwable is a checked exception_@see java.lang.Exception_@see java.lang.RuntimeException_@see java.lang.Error;public static boolean isCheckedException(Throwable ex) {_		return !(ex instanceof RuntimeException || ex instanceof Error)__	};return,whether,the,given,throwable,is,a,checked,exception,that,is,neither,a,runtime,exception,nor,an,error,param,ex,the,throwable,to,check,return,whether,the,throwable,is,a,checked,exception,see,java,lang,exception,see,java,lang,runtime,exception,see,java,lang,error;public,static,boolean,is,checked,exception,throwable,ex,return,ex,instanceof,runtime,exception,ex,instanceof,error
ObjectUtils -> public static boolean isCheckedException(Throwable ex);1538724083;Return whether the given throwable is a checked exception:_that is, neither a RuntimeException nor an Error._@param ex the throwable to check_@return whether the throwable is a checked exception_@see java.lang.Exception_@see java.lang.RuntimeException_@see java.lang.Error;public static boolean isCheckedException(Throwable ex) {_		return !(ex instanceof RuntimeException || ex instanceof Error)__	};return,whether,the,given,throwable,is,a,checked,exception,that,is,neither,a,runtime,exception,nor,an,error,param,ex,the,throwable,to,check,return,whether,the,throwable,is,a,checked,exception,see,java,lang,exception,see,java,lang,runtime,exception,see,java,lang,error;public,static,boolean,is,checked,exception,throwable,ex,return,ex,instanceof,runtime,exception,ex,instanceof,error
ObjectUtils -> public static boolean isCheckedException(Throwable ex);1542748004;Return whether the given throwable is a checked exception:_that is, neither a RuntimeException nor an Error._@param ex the throwable to check_@return whether the throwable is a checked exception_@see java.lang.Exception_@see java.lang.RuntimeException_@see java.lang.Error;public static boolean isCheckedException(Throwable ex) {_		return !(ex instanceof RuntimeException || ex instanceof Error)__	};return,whether,the,given,throwable,is,a,checked,exception,that,is,neither,a,runtime,exception,nor,an,error,param,ex,the,throwable,to,check,return,whether,the,throwable,is,a,checked,exception,see,java,lang,exception,see,java,lang,runtime,exception,see,java,lang,error;public,static,boolean,is,checked,exception,throwable,ex,return,ex,instanceof,runtime,exception,ex,instanceof,error
ObjectUtils -> public static int nullSafeHashCode(byte[] array);1328020251;Return a hash code based on the contents of the specified array._If <code>array</code> is <code>null</code>, this method returns 0.;public static int nullSafeHashCode(byte[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + array[i]__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,code,is,code,null,code,this,method,returns,0;public,static,int,null,safe,hash,code,byte,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(byte[] array);1356735495;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(byte[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + array[i]__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,byte,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(byte[] array);1362408075;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(byte[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + array[i]__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,byte,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(byte[] array);1385412762;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(byte[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + array[i]__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,byte,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(byte[] array);1389796508;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(byte[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (byte element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,byte,array,if,array,null,return,0,int,hash,for,byte,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(byte[] array);1389798571;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(byte[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (byte element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,byte,array,if,array,null,return,0,int,hash,for,byte,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(byte[] array);1405696918;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(byte[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (byte element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,byte,array,if,array,null,return,0,int,hash,for,byte,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(byte[] array);1434129562;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(byte[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (byte element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,byte,array,if,array,null,return,0,int,hash,for,byte,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(byte[] array);1465504808;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(byte[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (byte element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,byte,array,if,array,null,return,0,int,hash,for,byte,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(byte[] array);1467677340;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(byte[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (byte element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,byte,array,if,array,null,return,0,int,hash,for,byte,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(byte[] array);1491319010;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(byte[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (byte element : array) {_			hash = MULTIPLIER * hash + element__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,byte,array,if,array,null,return,0,int,hash,for,byte,element,array,hash,multiplier,hash,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable float[] array);1495868221;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable float[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (float element : array) {_			hash = MULTIPLIER * hash + Float.hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,float,array,if,array,null,return,0,int,hash,for,float,element,array,hash,multiplier,hash,float,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable float[] array);1496837955;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable float[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (float element : array) {_			hash = MULTIPLIER * hash + Float.hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,float,array,if,array,null,return,0,int,hash,for,float,element,array,hash,multiplier,hash,float,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable float[] array);1505924929;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable float[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (float element : array) {_			hash = MULTIPLIER * hash + Float.hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,float,array,if,array,null,return,0,int,hash,for,float,element,array,hash,multiplier,hash,float,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable float[] array);1538724083;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable float[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (float element : array) {_			hash = MULTIPLIER * hash + Float.hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,float,array,if,array,null,return,0,int,hash,for,float,element,array,hash,multiplier,hash,float,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable float[] array);1542748004;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable float[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (float element : array) {_			hash = MULTIPLIER * hash + Float.hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,float,array,if,array,null,return,0,int,hash,for,float,element,array,hash,multiplier,hash,float,hash,code,element,return,hash
ObjectUtils -> public static int hashCode(float flt);1328020251;Return the same value as <code>{@link Float#hashCode()}</code>._@see Float#hashCode();public static int hashCode(float flt) {_		return Float.floatToIntBits(flt)__	};return,the,same,value,as,code,link,float,hash,code,code,see,float,hash,code;public,static,int,hash,code,float,flt,return,float,float,to,int,bits,flt
ObjectUtils -> public static int hashCode(float flt);1356735495;Return the same value as {@code {@link Float#hashCode()}}._@see Float#hashCode();public static int hashCode(float flt) {_		return Float.floatToIntBits(flt)__	};return,the,same,value,as,code,link,float,hash,code,see,float,hash,code;public,static,int,hash,code,float,flt,return,float,float,to,int,bits,flt
ObjectUtils -> public static int hashCode(float flt);1362408075;Return the same value as {@link Float#hashCode()}}._@see Float#hashCode();public static int hashCode(float flt) {_		return Float.floatToIntBits(flt)__	};return,the,same,value,as,link,float,hash,code,see,float,hash,code;public,static,int,hash,code,float,flt,return,float,float,to,int,bits,flt
ObjectUtils -> public static int hashCode(float flt);1385412762;Return the same value as {@link Float#hashCode()}}._@see Float#hashCode();public static int hashCode(float flt) {_		return Float.floatToIntBits(flt)__	};return,the,same,value,as,link,float,hash,code,see,float,hash,code;public,static,int,hash,code,float,flt,return,float,float,to,int,bits,flt
ObjectUtils -> public static int hashCode(float flt);1389796508;Return the same value as {@link Float#hashCode()}}._@see Float#hashCode();public static int hashCode(float flt) {_		return Float.floatToIntBits(flt)__	};return,the,same,value,as,link,float,hash,code,see,float,hash,code;public,static,int,hash,code,float,flt,return,float,float,to,int,bits,flt
ObjectUtils -> public static int hashCode(float flt);1389798571;Return the same value as {@link Float#hashCode()}}._@see Float#hashCode();public static int hashCode(float flt) {_		return Float.floatToIntBits(flt)__	};return,the,same,value,as,link,float,hash,code,see,float,hash,code;public,static,int,hash,code,float,flt,return,float,float,to,int,bits,flt
ObjectUtils -> public static int hashCode(float flt);1405696918;Return the same value as {@link Float#hashCode()}}._@see Float#hashCode();public static int hashCode(float flt) {_		return Float.floatToIntBits(flt)__	};return,the,same,value,as,link,float,hash,code,see,float,hash,code;public,static,int,hash,code,float,flt,return,float,float,to,int,bits,flt
ObjectUtils -> public static int hashCode(float flt);1434129562;Return the same value as {@link Float#hashCode()}}._@see Float#hashCode();public static int hashCode(float flt) {_		return Float.floatToIntBits(flt)__	};return,the,same,value,as,link,float,hash,code,see,float,hash,code;public,static,int,hash,code,float,flt,return,float,float,to,int,bits,flt
ObjectUtils -> public static int hashCode(float flt);1465504808;Return the same value as {@link Float#hashCode()}}._@see Float#hashCode();public static int hashCode(float flt) {_		return Float.floatToIntBits(flt)__	};return,the,same,value,as,link,float,hash,code,see,float,hash,code;public,static,int,hash,code,float,flt,return,float,float,to,int,bits,flt
ObjectUtils -> public static int hashCode(float flt);1467677340;Return the same value as {@link Float#hashCode()}}._@see Float#hashCode();public static int hashCode(float flt) {_		return Float.floatToIntBits(flt)__	};return,the,same,value,as,link,float,hash,code,see,float,hash,code;public,static,int,hash,code,float,flt,return,float,float,to,int,bits,flt
ObjectUtils -> public static String nullSafeToString(@Nullable short[] array);1495868221;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable short[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,short,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable short[] array);1496837955;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable short[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,short,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable short[] array);1505924929;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable short[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,short,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable short[] array);1538724083;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable short[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,short,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> public static String nullSafeToString(@Nullable short[] array);1542748004;Return a String representation of the contents of the specified array._<p>The String representation consists of a list of the array's elements,_enclosed in curly braces ({@code "{}"}). Adjacent elements are separated_by the characters {@code ", "} (a comma followed by a space). Returns_{@code "null"} if {@code array} is {@code null}._@param array the array to build a String representation for_@return a String representation of {@code array};public static String nullSafeToString(@Nullable short[] array) {_		if (array == null) {_			return NULL_STRING__		}_		int length = array.length__		if (length == 0) {_			return EMPTY_ARRAY__		}_		StringBuilder sb = new StringBuilder()__		for (int i = 0_ i < length_ i++) {_			if (i == 0) {_				sb.append(ARRAY_START)__			}_			else {_				sb.append(ARRAY_ELEMENT_SEPARATOR)__			}_			sb.append(array[i])__		}_		sb.append(ARRAY_END)__		return sb.toString()__	};return,a,string,representation,of,the,contents,of,the,specified,array,p,the,string,representation,consists,of,a,list,of,the,array,s,elements,enclosed,in,curly,braces,code,adjacent,elements,are,separated,by,the,characters,code,a,comma,followed,by,a,space,returns,code,null,if,code,array,is,code,null,param,array,the,array,to,build,a,string,representation,for,return,a,string,representation,of,code,array;public,static,string,null,safe,to,string,nullable,short,array,if,array,null,return,int,length,array,length,if,length,0,return,string,builder,sb,new,string,builder,for,int,i,0,i,length,i,if,i,0,sb,append,else,sb,append,sb,append,array,i,sb,append,return,sb,to,string
ObjectUtils -> @Deprecated 	public static int hashCode(long lng);1491319010;Return the same value as {@link Long#hashCode(long)}}._@deprecated as of Spring Framework 5.0, in favor of the native JDK 8 variant;@Deprecated_	public static int hashCode(long lng) {_		return Long.hashCode(lng)__	};return,the,same,value,as,link,long,hash,code,long,deprecated,as,of,spring,framework,5,0,in,favor,of,the,native,jdk,8,variant;deprecated,public,static,int,hash,code,long,lng,return,long,hash,code,lng
ObjectUtils -> @Deprecated 	public static int hashCode(long lng);1495868221;Return the same value as {@link Long#hashCode(long)}}._@deprecated as of Spring Framework 5.0, in favor of the native JDK 8 variant;@Deprecated_	public static int hashCode(long lng) {_		return Long.hashCode(lng)__	};return,the,same,value,as,link,long,hash,code,long,deprecated,as,of,spring,framework,5,0,in,favor,of,the,native,jdk,8,variant;deprecated,public,static,int,hash,code,long,lng,return,long,hash,code,lng
ObjectUtils -> @Deprecated 	public static int hashCode(long lng);1496837955;Return the same value as {@link Long#hashCode(long)}}._@deprecated as of Spring Framework 5.0, in favor of the native JDK 8 variant;@Deprecated_	public static int hashCode(long lng) {_		return Long.hashCode(lng)__	};return,the,same,value,as,link,long,hash,code,long,deprecated,as,of,spring,framework,5,0,in,favor,of,the,native,jdk,8,variant;deprecated,public,static,int,hash,code,long,lng,return,long,hash,code,lng
ObjectUtils -> @Deprecated 	public static int hashCode(long lng);1505924929;Return the same value as {@link Long#hashCode(long)}}._@deprecated as of Spring Framework 5.0, in favor of the native JDK 8 variant;@Deprecated_	public static int hashCode(long lng) {_		return Long.hashCode(lng)__	};return,the,same,value,as,link,long,hash,code,long,deprecated,as,of,spring,framework,5,0,in,favor,of,the,native,jdk,8,variant;deprecated,public,static,int,hash,code,long,lng,return,long,hash,code,lng
ObjectUtils -> @Deprecated 	public static int hashCode(long lng);1538724083;Return the same value as {@link Long#hashCode(long)}}._@deprecated as of Spring Framework 5.0, in favor of the native JDK 8 variant;@Deprecated_	public static int hashCode(long lng) {_		return Long.hashCode(lng)__	};return,the,same,value,as,link,long,hash,code,long,deprecated,as,of,spring,framework,5,0,in,favor,of,the,native,jdk,8,variant;deprecated,public,static,int,hash,code,long,lng,return,long,hash,code,lng
ObjectUtils -> @Deprecated 	public static int hashCode(long lng);1542748004;Return the same value as {@link Long#hashCode(long)}}._@deprecated as of Spring Framework 5.0, in favor of the native JDK 8 variant;@Deprecated_	public static int hashCode(long lng) {_		return Long.hashCode(lng)__	};return,the,same,value,as,link,long,hash,code,long,deprecated,as,of,spring,framework,5,0,in,favor,of,the,native,jdk,8,variant;deprecated,public,static,int,hash,code,long,lng,return,long,hash,code,lng
ObjectUtils -> @SuppressWarnings("rawtypes") 	public static boolean isEmpty(@Nullable Object obj);1495868221;Determine whether the given object is empty._<p>This method supports the following object types._<ul>_<li>{@code Optional}: considered empty if {@link Optional#empty()}</li>_<li>{@code Array}: considered empty if its length is zero</li>_<li>{@link CharSequence}: considered empty if its length is zero</li>_<li>{@link Collection}: delegates to {@link Collection#isEmpty()}</li>_<li>{@link Map}: delegates to {@link Map#isEmpty()}</li>_</ul>_<p>If the given object is non-null and not one of the aforementioned_supported types, this method returns {@code false}._@param obj the object to check_@return {@code true} if the object is {@code null} or <em>empty</em>_@since 4.2_@see Optional#isPresent()_@see ObjectUtils#isEmpty(Object[])_@see StringUtils#hasLength(CharSequence)_@see StringUtils#isEmpty(Object)_@see CollectionUtils#isEmpty(java.util.Collection)_@see CollectionUtils#isEmpty(java.util.Map);@SuppressWarnings("rawtypes")_	public static boolean isEmpty(@Nullable Object obj) {_		if (obj == null) {_			return true__		}__		if (obj instanceof Optional) {_			return !((Optional) obj).isPresent()__		}_		if (obj.getClass().isArray()) {_			return Array.getLength(obj) == 0__		}_		if (obj instanceof CharSequence) {_			return ((CharSequence) obj).length() == 0__		}_		if (obj instanceof Collection) {_			return ((Collection) obj).isEmpty()__		}_		if (obj instanceof Map) {_			return ((Map) obj).isEmpty()__		}__		_		return false__	};determine,whether,the,given,object,is,empty,p,this,method,supports,the,following,object,types,ul,li,code,optional,considered,empty,if,link,optional,empty,li,li,code,array,considered,empty,if,its,length,is,zero,li,li,link,char,sequence,considered,empty,if,its,length,is,zero,li,li,link,collection,delegates,to,link,collection,is,empty,li,li,link,map,delegates,to,link,map,is,empty,li,ul,p,if,the,given,object,is,non,null,and,not,one,of,the,aforementioned,supported,types,this,method,returns,code,false,param,obj,the,object,to,check,return,code,true,if,the,object,is,code,null,or,em,empty,em,since,4,2,see,optional,is,present,see,object,utils,is,empty,object,see,string,utils,has,length,char,sequence,see,string,utils,is,empty,object,see,collection,utils,is,empty,java,util,collection,see,collection,utils,is,empty,java,util,map;suppress,warnings,rawtypes,public,static,boolean,is,empty,nullable,object,obj,if,obj,null,return,true,if,obj,instanceof,optional,return,optional,obj,is,present,if,obj,get,class,is,array,return,array,get,length,obj,0,if,obj,instanceof,char,sequence,return,char,sequence,obj,length,0,if,obj,instanceof,collection,return,collection,obj,is,empty,if,obj,instanceof,map,return,map,obj,is,empty,return,false
ObjectUtils -> @SuppressWarnings("rawtypes") 	public static boolean isEmpty(@Nullable Object obj);1496837955;Determine whether the given object is empty._<p>This method supports the following object types._<ul>_<li>{@code Optional}: considered empty if {@link Optional#empty()}</li>_<li>{@code Array}: considered empty if its length is zero</li>_<li>{@link CharSequence}: considered empty if its length is zero</li>_<li>{@link Collection}: delegates to {@link Collection#isEmpty()}</li>_<li>{@link Map}: delegates to {@link Map#isEmpty()}</li>_</ul>_<p>If the given object is non-null and not one of the aforementioned_supported types, this method returns {@code false}._@param obj the object to check_@return {@code true} if the object is {@code null} or <em>empty</em>_@since 4.2_@see Optional#isPresent()_@see ObjectUtils#isEmpty(Object[])_@see StringUtils#hasLength(CharSequence)_@see StringUtils#isEmpty(Object)_@see CollectionUtils#isEmpty(java.util.Collection)_@see CollectionUtils#isEmpty(java.util.Map);@SuppressWarnings("rawtypes")_	public static boolean isEmpty(@Nullable Object obj) {_		if (obj == null) {_			return true__		}__		if (obj instanceof Optional) {_			return !((Optional) obj).isPresent()__		}_		if (obj.getClass().isArray()) {_			return Array.getLength(obj) == 0__		}_		if (obj instanceof CharSequence) {_			return ((CharSequence) obj).length() == 0__		}_		if (obj instanceof Collection) {_			return ((Collection) obj).isEmpty()__		}_		if (obj instanceof Map) {_			return ((Map) obj).isEmpty()__		}__		_		return false__	};determine,whether,the,given,object,is,empty,p,this,method,supports,the,following,object,types,ul,li,code,optional,considered,empty,if,link,optional,empty,li,li,code,array,considered,empty,if,its,length,is,zero,li,li,link,char,sequence,considered,empty,if,its,length,is,zero,li,li,link,collection,delegates,to,link,collection,is,empty,li,li,link,map,delegates,to,link,map,is,empty,li,ul,p,if,the,given,object,is,non,null,and,not,one,of,the,aforementioned,supported,types,this,method,returns,code,false,param,obj,the,object,to,check,return,code,true,if,the,object,is,code,null,or,em,empty,em,since,4,2,see,optional,is,present,see,object,utils,is,empty,object,see,string,utils,has,length,char,sequence,see,string,utils,is,empty,object,see,collection,utils,is,empty,java,util,collection,see,collection,utils,is,empty,java,util,map;suppress,warnings,rawtypes,public,static,boolean,is,empty,nullable,object,obj,if,obj,null,return,true,if,obj,instanceof,optional,return,optional,obj,is,present,if,obj,get,class,is,array,return,array,get,length,obj,0,if,obj,instanceof,char,sequence,return,char,sequence,obj,length,0,if,obj,instanceof,collection,return,collection,obj,is,empty,if,obj,instanceof,map,return,map,obj,is,empty,return,false
ObjectUtils -> @SuppressWarnings("rawtypes") 	public static boolean isEmpty(@Nullable Object obj);1505924929;Determine whether the given object is empty._<p>This method supports the following object types._<ul>_<li>{@code Optional}: considered empty if {@link Optional#empty()}</li>_<li>{@code Array}: considered empty if its length is zero</li>_<li>{@link CharSequence}: considered empty if its length is zero</li>_<li>{@link Collection}: delegates to {@link Collection#isEmpty()}</li>_<li>{@link Map}: delegates to {@link Map#isEmpty()}</li>_</ul>_<p>If the given object is non-null and not one of the aforementioned_supported types, this method returns {@code false}._@param obj the object to check_@return {@code true} if the object is {@code null} or <em>empty</em>_@since 4.2_@see Optional#isPresent()_@see ObjectUtils#isEmpty(Object[])_@see StringUtils#hasLength(CharSequence)_@see StringUtils#isEmpty(Object)_@see CollectionUtils#isEmpty(java.util.Collection)_@see CollectionUtils#isEmpty(java.util.Map);@SuppressWarnings("rawtypes")_	public static boolean isEmpty(@Nullable Object obj) {_		if (obj == null) {_			return true__		}__		if (obj instanceof Optional) {_			return !((Optional) obj).isPresent()__		}_		if (obj instanceof CharSequence) {_			return ((CharSequence) obj).length() == 0__		}_		if (obj.getClass().isArray()) {_			return Array.getLength(obj) == 0__		}_		if (obj instanceof Collection) {_			return ((Collection) obj).isEmpty()__		}_		if (obj instanceof Map) {_			return ((Map) obj).isEmpty()__		}__		_		return false__	};determine,whether,the,given,object,is,empty,p,this,method,supports,the,following,object,types,ul,li,code,optional,considered,empty,if,link,optional,empty,li,li,code,array,considered,empty,if,its,length,is,zero,li,li,link,char,sequence,considered,empty,if,its,length,is,zero,li,li,link,collection,delegates,to,link,collection,is,empty,li,li,link,map,delegates,to,link,map,is,empty,li,ul,p,if,the,given,object,is,non,null,and,not,one,of,the,aforementioned,supported,types,this,method,returns,code,false,param,obj,the,object,to,check,return,code,true,if,the,object,is,code,null,or,em,empty,em,since,4,2,see,optional,is,present,see,object,utils,is,empty,object,see,string,utils,has,length,char,sequence,see,string,utils,is,empty,object,see,collection,utils,is,empty,java,util,collection,see,collection,utils,is,empty,java,util,map;suppress,warnings,rawtypes,public,static,boolean,is,empty,nullable,object,obj,if,obj,null,return,true,if,obj,instanceof,optional,return,optional,obj,is,present,if,obj,instanceof,char,sequence,return,char,sequence,obj,length,0,if,obj,get,class,is,array,return,array,get,length,obj,0,if,obj,instanceof,collection,return,collection,obj,is,empty,if,obj,instanceof,map,return,map,obj,is,empty,return,false
ObjectUtils -> @SuppressWarnings("rawtypes") 	public static boolean isEmpty(@Nullable Object obj);1538724083;Determine whether the given object is empty._<p>This method supports the following object types._<ul>_<li>{@code Optional}: considered empty if {@link Optional#empty()}</li>_<li>{@code Array}: considered empty if its length is zero</li>_<li>{@link CharSequence}: considered empty if its length is zero</li>_<li>{@link Collection}: delegates to {@link Collection#isEmpty()}</li>_<li>{@link Map}: delegates to {@link Map#isEmpty()}</li>_</ul>_<p>If the given object is non-null and not one of the aforementioned_supported types, this method returns {@code false}._@param obj the object to check_@return {@code true} if the object is {@code null} or <em>empty</em>_@since 4.2_@see Optional#isPresent()_@see ObjectUtils#isEmpty(Object[])_@see StringUtils#hasLength(CharSequence)_@see StringUtils#isEmpty(Object)_@see CollectionUtils#isEmpty(java.util.Collection)_@see CollectionUtils#isEmpty(java.util.Map);@SuppressWarnings("rawtypes")_	public static boolean isEmpty(@Nullable Object obj) {_		if (obj == null) {_			return true__		}__		if (obj instanceof Optional) {_			return !((Optional) obj).isPresent()__		}_		if (obj instanceof CharSequence) {_			return ((CharSequence) obj).length() == 0__		}_		if (obj.getClass().isArray()) {_			return Array.getLength(obj) == 0__		}_		if (obj instanceof Collection) {_			return ((Collection) obj).isEmpty()__		}_		if (obj instanceof Map) {_			return ((Map) obj).isEmpty()__		}__		_		return false__	};determine,whether,the,given,object,is,empty,p,this,method,supports,the,following,object,types,ul,li,code,optional,considered,empty,if,link,optional,empty,li,li,code,array,considered,empty,if,its,length,is,zero,li,li,link,char,sequence,considered,empty,if,its,length,is,zero,li,li,link,collection,delegates,to,link,collection,is,empty,li,li,link,map,delegates,to,link,map,is,empty,li,ul,p,if,the,given,object,is,non,null,and,not,one,of,the,aforementioned,supported,types,this,method,returns,code,false,param,obj,the,object,to,check,return,code,true,if,the,object,is,code,null,or,em,empty,em,since,4,2,see,optional,is,present,see,object,utils,is,empty,object,see,string,utils,has,length,char,sequence,see,string,utils,is,empty,object,see,collection,utils,is,empty,java,util,collection,see,collection,utils,is,empty,java,util,map;suppress,warnings,rawtypes,public,static,boolean,is,empty,nullable,object,obj,if,obj,null,return,true,if,obj,instanceof,optional,return,optional,obj,is,present,if,obj,instanceof,char,sequence,return,char,sequence,obj,length,0,if,obj,get,class,is,array,return,array,get,length,obj,0,if,obj,instanceof,collection,return,collection,obj,is,empty,if,obj,instanceof,map,return,map,obj,is,empty,return,false
ObjectUtils -> @SuppressWarnings("rawtypes") 	public static boolean isEmpty(@Nullable Object obj);1542748004;Determine whether the given object is empty._<p>This method supports the following object types._<ul>_<li>{@code Optional}: considered empty if {@link Optional#empty()}</li>_<li>{@code Array}: considered empty if its length is zero</li>_<li>{@link CharSequence}: considered empty if its length is zero</li>_<li>{@link Collection}: delegates to {@link Collection#isEmpty()}</li>_<li>{@link Map}: delegates to {@link Map#isEmpty()}</li>_</ul>_<p>If the given object is non-null and not one of the aforementioned_supported types, this method returns {@code false}._@param obj the object to check_@return {@code true} if the object is {@code null} or <em>empty</em>_@since 4.2_@see Optional#isPresent()_@see ObjectUtils#isEmpty(Object[])_@see StringUtils#hasLength(CharSequence)_@see StringUtils#isEmpty(Object)_@see CollectionUtils#isEmpty(java.util.Collection)_@see CollectionUtils#isEmpty(java.util.Map);@SuppressWarnings("rawtypes")_	public static boolean isEmpty(@Nullable Object obj) {_		if (obj == null) {_			return true__		}__		if (obj instanceof Optional) {_			return !((Optional) obj).isPresent()__		}_		if (obj instanceof CharSequence) {_			return ((CharSequence) obj).length() == 0__		}_		if (obj.getClass().isArray()) {_			return Array.getLength(obj) == 0__		}_		if (obj instanceof Collection) {_			return ((Collection) obj).isEmpty()__		}_		if (obj instanceof Map) {_			return ((Map) obj).isEmpty()__		}__		_		return false__	};determine,whether,the,given,object,is,empty,p,this,method,supports,the,following,object,types,ul,li,code,optional,considered,empty,if,link,optional,empty,li,li,code,array,considered,empty,if,its,length,is,zero,li,li,link,char,sequence,considered,empty,if,its,length,is,zero,li,li,link,collection,delegates,to,link,collection,is,empty,li,li,link,map,delegates,to,link,map,is,empty,li,ul,p,if,the,given,object,is,non,null,and,not,one,of,the,aforementioned,supported,types,this,method,returns,code,false,param,obj,the,object,to,check,return,code,true,if,the,object,is,code,null,or,em,empty,em,since,4,2,see,optional,is,present,see,object,utils,is,empty,object,see,string,utils,has,length,char,sequence,see,string,utils,is,empty,object,see,collection,utils,is,empty,java,util,collection,see,collection,utils,is,empty,java,util,map;suppress,warnings,rawtypes,public,static,boolean,is,empty,nullable,object,obj,if,obj,null,return,true,if,obj,instanceof,optional,return,optional,obj,is,present,if,obj,instanceof,char,sequence,return,char,sequence,obj,length,0,if,obj,get,class,is,array,return,array,get,length,obj,0,if,obj,instanceof,collection,return,collection,obj,is,empty,if,obj,instanceof,map,return,map,obj,is,empty,return,false
ObjectUtils -> public static boolean containsElement(@Nullable Object[] array, Object element);1495868221;Check whether the given array contains the given element._@param array the array to check (may be {@code null},_in which case the return value will always be {@code false})_@param element the element to check for_@return whether the element has been found in the given array;public static boolean containsElement(@Nullable Object[] array, Object element) {_		if (array == null) {_			return false__		}_		for (Object arrayEle : array) {_			if (nullSafeEquals(arrayEle, element)) {_				return true__			}_		}_		return false__	};check,whether,the,given,array,contains,the,given,element,param,array,the,array,to,check,may,be,code,null,in,which,case,the,return,value,will,always,be,code,false,param,element,the,element,to,check,for,return,whether,the,element,has,been,found,in,the,given,array;public,static,boolean,contains,element,nullable,object,array,object,element,if,array,null,return,false,for,object,array,ele,array,if,null,safe,equals,array,ele,element,return,true,return,false
ObjectUtils -> public static boolean containsElement(@Nullable Object[] array, Object element);1496837955;Check whether the given array contains the given element._@param array the array to check (may be {@code null},_in which case the return value will always be {@code false})_@param element the element to check for_@return whether the element has been found in the given array;public static boolean containsElement(@Nullable Object[] array, Object element) {_		if (array == null) {_			return false__		}_		for (Object arrayEle : array) {_			if (nullSafeEquals(arrayEle, element)) {_				return true__			}_		}_		return false__	};check,whether,the,given,array,contains,the,given,element,param,array,the,array,to,check,may,be,code,null,in,which,case,the,return,value,will,always,be,code,false,param,element,the,element,to,check,for,return,whether,the,element,has,been,found,in,the,given,array;public,static,boolean,contains,element,nullable,object,array,object,element,if,array,null,return,false,for,object,array,ele,array,if,null,safe,equals,array,ele,element,return,true,return,false
ObjectUtils -> public static boolean containsElement(@Nullable Object[] array, Object element);1505924929;Check whether the given array contains the given element._@param array the array to check (may be {@code null},_in which case the return value will always be {@code false})_@param element the element to check for_@return whether the element has been found in the given array;public static boolean containsElement(@Nullable Object[] array, Object element) {_		if (array == null) {_			return false__		}_		for (Object arrayEle : array) {_			if (nullSafeEquals(arrayEle, element)) {_				return true__			}_		}_		return false__	};check,whether,the,given,array,contains,the,given,element,param,array,the,array,to,check,may,be,code,null,in,which,case,the,return,value,will,always,be,code,false,param,element,the,element,to,check,for,return,whether,the,element,has,been,found,in,the,given,array;public,static,boolean,contains,element,nullable,object,array,object,element,if,array,null,return,false,for,object,array,ele,array,if,null,safe,equals,array,ele,element,return,true,return,false
ObjectUtils -> public static boolean containsElement(@Nullable Object[] array, Object element);1538724083;Check whether the given array contains the given element._@param array the array to check (may be {@code null},_in which case the return value will always be {@code false})_@param element the element to check for_@return whether the element has been found in the given array;public static boolean containsElement(@Nullable Object[] array, Object element) {_		if (array == null) {_			return false__		}_		for (Object arrayEle : array) {_			if (nullSafeEquals(arrayEle, element)) {_				return true__			}_		}_		return false__	};check,whether,the,given,array,contains,the,given,element,param,array,the,array,to,check,may,be,code,null,in,which,case,the,return,value,will,always,be,code,false,param,element,the,element,to,check,for,return,whether,the,element,has,been,found,in,the,given,array;public,static,boolean,contains,element,nullable,object,array,object,element,if,array,null,return,false,for,object,array,ele,array,if,null,safe,equals,array,ele,element,return,true,return,false
ObjectUtils -> public static boolean containsElement(@Nullable Object[] array, Object element);1542748004;Check whether the given array contains the given element._@param array the array to check (may be {@code null},_in which case the return value will always be {@code false})_@param element the element to check for_@return whether the element has been found in the given array;public static boolean containsElement(@Nullable Object[] array, Object element) {_		if (array == null) {_			return false__		}_		for (Object arrayEle : array) {_			if (nullSafeEquals(arrayEle, element)) {_				return true__			}_		}_		return false__	};check,whether,the,given,array,contains,the,given,element,param,array,the,array,to,check,may,be,code,null,in,which,case,the,return,value,will,always,be,code,false,param,element,the,element,to,check,for,return,whether,the,element,has,been,found,in,the,given,array;public,static,boolean,contains,element,nullable,object,array,object,element,if,array,null,return,false,for,object,array,ele,array,if,null,safe,equals,array,ele,element,return,true,return,false
ObjectUtils -> public static int nullSafeHashCode(long[] array);1328020251;Return a hash code based on the contents of the specified array._If <code>array</code> is <code>null</code>, this method returns 0.;public static int nullSafeHashCode(long[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + hashCode(array[i])__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,code,is,code,null,code,this,method,returns,0;public,static,int,null,safe,hash,code,long,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,hash,code,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(long[] array);1356735495;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(long[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + hashCode(array[i])__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,long,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,hash,code,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(long[] array);1362408075;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(long[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + hashCode(array[i])__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,long,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,hash,code,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(long[] array);1385412762;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(long[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		int arraySize = array.length__		for (int i = 0_ i < arraySize_ i++) {_			hash = MULTIPLIER * hash + hashCode(array[i])__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,long,array,if,array,null,return,0,int,hash,int,array,size,array,length,for,int,i,0,i,array,size,i,hash,multiplier,hash,hash,code,array,i,return,hash
ObjectUtils -> public static int nullSafeHashCode(long[] array);1389796508;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(long[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (long element : array) {_			hash = MULTIPLIER * hash + hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,long,array,if,array,null,return,0,int,hash,for,long,element,array,hash,multiplier,hash,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(long[] array);1389798571;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(long[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (long element : array) {_			hash = MULTIPLIER * hash + hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,long,array,if,array,null,return,0,int,hash,for,long,element,array,hash,multiplier,hash,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(long[] array);1405696918;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(long[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (long element : array) {_			hash = MULTIPLIER * hash + hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,long,array,if,array,null,return,0,int,hash,for,long,element,array,hash,multiplier,hash,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(long[] array);1434129562;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(long[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (long element : array) {_			hash = MULTIPLIER * hash + hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,long,array,if,array,null,return,0,int,hash,for,long,element,array,hash,multiplier,hash,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(long[] array);1465504808;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(long[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (long element : array) {_			hash = MULTIPLIER * hash + hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,long,array,if,array,null,return,0,int,hash,for,long,element,array,hash,multiplier,hash,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(long[] array);1467677340;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(long[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (long element : array) {_			hash = MULTIPLIER * hash + hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,long,array,if,array,null,return,0,int,hash,for,long,element,array,hash,multiplier,hash,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(long[] array);1491319010;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(long[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (long element : array) {_			hash = MULTIPLIER * hash + Long.hashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,long,array,if,array,null,return,0,int,hash,for,long,element,array,hash,multiplier,hash,long,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable Object[] array);1495868221;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable Object[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (Object element : array) {_			hash = MULTIPLIER * hash + nullSafeHashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,object,array,if,array,null,return,0,int,hash,for,object,element,array,hash,multiplier,hash,null,safe,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable Object[] array);1496837955;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable Object[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (Object element : array) {_			hash = MULTIPLIER * hash + nullSafeHashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,object,array,if,array,null,return,0,int,hash,for,object,element,array,hash,multiplier,hash,null,safe,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable Object[] array);1505924929;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable Object[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (Object element : array) {_			hash = MULTIPLIER * hash + nullSafeHashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,object,array,if,array,null,return,0,int,hash,for,object,element,array,hash,multiplier,hash,null,safe,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable Object[] array);1538724083;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable Object[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (Object element : array) {_			hash = MULTIPLIER * hash + nullSafeHashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,object,array,if,array,null,return,0,int,hash,for,object,element,array,hash,multiplier,hash,null,safe,hash,code,element,return,hash
ObjectUtils -> public static int nullSafeHashCode(@Nullable Object[] array);1542748004;Return a hash code based on the contents of the specified array._If {@code array} is {@code null}, this method returns 0.;public static int nullSafeHashCode(@Nullable Object[] array) {_		if (array == null) {_			return 0__		}_		int hash = INITIAL_HASH__		for (Object element : array) {_			hash = MULTIPLIER * hash + nullSafeHashCode(element)__		}_		return hash__	};return,a,hash,code,based,on,the,contents,of,the,specified,array,if,code,array,is,code,null,this,method,returns,0;public,static,int,null,safe,hash,code,nullable,object,array,if,array,null,return,0,int,hash,for,object,element,array,hash,multiplier,hash,null,safe,hash,code,element,return,hash
