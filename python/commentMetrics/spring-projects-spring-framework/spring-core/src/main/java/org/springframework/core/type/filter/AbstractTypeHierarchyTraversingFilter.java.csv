commented;modifiers;parameterAmount;loc;comment;code
false;public;2;65;;@Override public boolean match(MetadataReader metadataReader, MetadataReaderFactory metadataReaderFactory) throws IOException {     // as well as visiting over those readers.     if (matchSelf(metadataReader)) {         return true.     }     ClassMetadata metadata = metadataReader.getClassMetadata().     if (matchClassName(metadata.getClassName())) {         return true.     }     if (this.considerInherited) {         String superClassName = metadata.getSuperClassName().         if (superClassName != null) {             // Optimization to avoid creating ClassReader for super class.             Boolean superClassMatch = matchSuperClass(superClassName).             if (superClassMatch != null) {                 if (superClassMatch.booleanValue()) {                     return true.                 }             } else {                 // Need to read super class to determine a match...                 try {                     if (match(metadata.getSuperClassName(), metadataReaderFactory)) {                         return true.                     }                 } catch (IOException ex) {                     logger.debug("Could not read super class [" + metadata.getSuperClassName() + "] of type-filtered class [" + metadata.getClassName() + "]").                 }             }         }     }     if (this.considerInterfaces) {         for (String ifc : metadata.getInterfaceNames()) {             // Optimization to avoid creating ClassReader for super class             Boolean interfaceMatch = matchInterface(ifc).             if (interfaceMatch != null) {                 if (interfaceMatch.booleanValue()) {                     return true.                 }             } else {                 // Need to read interface to determine a match...                 try {                     if (match(ifc, metadataReaderFactory)) {                         return true.                     }                 } catch (IOException ex) {                     logger.debug("Could not read interface [" + ifc + "] for type-filtered class [" + metadata.getClassName() + "]").                 }             }         }     }     return false. }
false;private;2;3;;private boolean match(String className, MetadataReaderFactory metadataReaderFactory) throws IOException {     return match(metadataReaderFactory.getMetadataReader(className), metadataReaderFactory). }
true;protected;1;3;/**  * Override this to match self characteristics alone. Typically,  * the implementation will use a visitor to extract information  * to perform matching.  */ ;/**  * Override this to match self characteristics alone. Typically,  * the implementation will use a visitor to extract information  * to perform matching.  */ protected boolean matchSelf(MetadataReader metadataReader) {     return false. }
true;protected;1;3;/**  * Override this to match on type name.  */ ;/**  * Override this to match on type name.  */ protected boolean matchClassName(String className) {     return false. }
true;protected;1;4;/**  * Override this to match on super type name.  */ ;/**  * Override this to match on super type name.  */ @Nullable protected Boolean matchSuperClass(String superClassName) {     return null. }
true;protected;1;4;/**  * Override this to match on interface type name.  */ ;/**  * Override this to match on interface type name.  */ @Nullable protected Boolean matchInterface(String interfaceName) {     return null. }
