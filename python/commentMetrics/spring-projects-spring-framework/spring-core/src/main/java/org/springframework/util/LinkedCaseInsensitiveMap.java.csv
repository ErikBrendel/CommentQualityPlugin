# id;timestamp;commentText;codeText;commentWords;codeWords
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap();1328020251;Create a new LinkedCaseInsensitiveMap for the default Locale._@see java.lang.String#toLowerCase();public LinkedCaseInsensitiveMap() {_		this(null)__	};create,a,new,linked,case,insensitive,map,for,the,default,locale,see,java,lang,string,to,lower,case;public,linked,case,insensitive,map,this,null
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap();1347282849;Create a new LinkedCaseInsensitiveMap for the default Locale._@see java.lang.String#toLowerCase();public LinkedCaseInsensitiveMap() {_		this(null)__	};create,a,new,linked,case,insensitive,map,for,the,default,locale,see,java,lang,string,to,lower,case;public,linked,case,insensitive,map,this,null
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap();1356735495;Create a new LinkedCaseInsensitiveMap for the default Locale._@see java.lang.String#toLowerCase();public LinkedCaseInsensitiveMap() {_		this(null)__	};create,a,new,linked,case,insensitive,map,for,the,default,locale,see,java,lang,string,to,lower,case;public,linked,case,insensitive,map,this,null
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap();1456432931;Create a new LinkedCaseInsensitiveMap for the default Locale._@see java.lang.String#toLowerCase();public LinkedCaseInsensitiveMap() {_		this(null)__	};create,a,new,linked,case,insensitive,map,for,the,default,locale,see,java,lang,string,to,lower,case;public,linked,case,insensitive,map,this,null
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap();1467730834;Create a new LinkedCaseInsensitiveMap for the default Locale._@see java.lang.String#toLowerCase();public LinkedCaseInsensitiveMap() {_		this(null)__	};create,a,new,linked,case,insensitive,map,for,the,default,locale,see,java,lang,string,to,lower,case;public,linked,case,insensitive,map,this,null
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap();1469441335;Create a new LinkedCaseInsensitiveMap for the default Locale._@see java.lang.String#toLowerCase();public LinkedCaseInsensitiveMap() {_		this(null)__	};create,a,new,linked,case,insensitive,map,for,the,default,locale,see,java,lang,string,to,lower,case;public,linked,case,insensitive,map,this,null
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap();1482515870;Create a new LinkedCaseInsensitiveMap for the default Locale._@see java.lang.String#toLowerCase();public LinkedCaseInsensitiveMap() {_		this((Locale) null)__	};create,a,new,linked,case,insensitive,map,for,the,default,locale,see,java,lang,string,to,lower,case;public,linked,case,insensitive,map,this,locale,null
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap();1484252047;Create a new LinkedCaseInsensitiveMap for the default Locale._@see java.lang.String#toLowerCase();public LinkedCaseInsensitiveMap() {_		this((Locale) null)__	};create,a,new,linked,case,insensitive,map,for,the,default,locale,see,java,lang,string,to,lower,case;public,linked,case,insensitive,map,this,locale,null
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap();1493370460;Create a new LinkedCaseInsensitiveMap for the default Locale._@see java.lang.String#toLowerCase();public LinkedCaseInsensitiveMap() {_		this((Locale) null)__	};create,a,new,linked,case,insensitive,map,for,the,default,locale,see,java,lang,string,to,lower,case;public,linked,case,insensitive,map,this,locale,null
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap();1495868221;Create a new LinkedCaseInsensitiveMap for the default Locale._@see java.lang.String#toLowerCase();public LinkedCaseInsensitiveMap() {_		this((Locale) null)__	};create,a,new,linked,case,insensitive,map,for,the,default,locale,see,java,lang,string,to,lower,case;public,linked,case,insensitive,map,this,locale,null
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap();1496837955;Create a new LinkedCaseInsensitiveMap for the default Locale._@see java.lang.String#toLowerCase();public LinkedCaseInsensitiveMap() {_		this((Locale) null)__	};create,a,new,linked,case,insensitive,map,for,the,default,locale,see,java,lang,string,to,lower,case;public,linked,case,insensitive,map,this,locale,null
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap();1499689468;Create a new LinkedCaseInsensitiveMap that stores case-insensitive keys_according to the default Locale (by default in lower case)._@see #convertKey(String);public LinkedCaseInsensitiveMap() {_		this((Locale) null)__	};create,a,new,linked,case,insensitive,map,that,stores,case,insensitive,keys,according,to,the,default,locale,by,default,in,lower,case,see,convert,key,string;public,linked,case,insensitive,map,this,locale,null
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap();1528719012;Create a new LinkedCaseInsensitiveMap that stores case-insensitive keys_according to the default Locale (by default in lower case)._@see #convertKey(String);public LinkedCaseInsensitiveMap() {_		this((Locale) null)__	};create,a,new,linked,case,insensitive,map,that,stores,case,insensitive,keys,according,to,the,default,locale,by,default,in,lower,case,see,convert,key,string;public,linked,case,insensitive,map,this,locale,null
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap();1530174524;Create a new LinkedCaseInsensitiveMap that stores case-insensitive keys_according to the default Locale (by default in lower case)._@see #convertKey(String);public LinkedCaseInsensitiveMap() {_		this((Locale) null)__	};create,a,new,linked,case,insensitive,map,that,stores,case,insensitive,keys,according,to,the,default,locale,by,default,in,lower,case,see,convert,key,string;public,linked,case,insensitive,map,this,locale,null
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(int initialCapacity);1328020251;Create a new LinkedCaseInsensitiveMap that wraps a {@link LinkedHashMap}_with the given initial capacity and stores lower-case keys according_to the default Locale._@param initialCapacity the initial capacity_@see java.lang.String#toLowerCase();public LinkedCaseInsensitiveMap(int initialCapacity) {_		this(initialCapacity, null)__	};create,a,new,linked,case,insensitive,map,that,wraps,a,link,linked,hash,map,with,the,given,initial,capacity,and,stores,lower,case,keys,according,to,the,default,locale,param,initial,capacity,the,initial,capacity,see,java,lang,string,to,lower,case;public,linked,case,insensitive,map,int,initial,capacity,this,initial,capacity,null
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(int initialCapacity);1347282849;Create a new LinkedCaseInsensitiveMap that wraps a {@link LinkedHashMap}_with the given initial capacity and stores lower-case keys according_to the default Locale._@param initialCapacity the initial capacity_@see java.lang.String#toLowerCase();public LinkedCaseInsensitiveMap(int initialCapacity) {_		this(initialCapacity, null)__	};create,a,new,linked,case,insensitive,map,that,wraps,a,link,linked,hash,map,with,the,given,initial,capacity,and,stores,lower,case,keys,according,to,the,default,locale,param,initial,capacity,the,initial,capacity,see,java,lang,string,to,lower,case;public,linked,case,insensitive,map,int,initial,capacity,this,initial,capacity,null
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(int initialCapacity);1356735495;Create a new LinkedCaseInsensitiveMap that wraps a {@link LinkedHashMap}_with the given initial capacity and stores lower-case keys according_to the default Locale._@param initialCapacity the initial capacity_@see java.lang.String#toLowerCase();public LinkedCaseInsensitiveMap(int initialCapacity) {_		this(initialCapacity, null)__	};create,a,new,linked,case,insensitive,map,that,wraps,a,link,linked,hash,map,with,the,given,initial,capacity,and,stores,lower,case,keys,according,to,the,default,locale,param,initial,capacity,the,initial,capacity,see,java,lang,string,to,lower,case;public,linked,case,insensitive,map,int,initial,capacity,this,initial,capacity,null
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(int initialCapacity);1456432931;Create a new LinkedCaseInsensitiveMap that wraps a {@link LinkedHashMap}_with the given initial capacity and stores lower-case keys according_to the default Locale._@param initialCapacity the initial capacity_@see java.lang.String#toLowerCase();public LinkedCaseInsensitiveMap(int initialCapacity) {_		this(initialCapacity, null)__	};create,a,new,linked,case,insensitive,map,that,wraps,a,link,linked,hash,map,with,the,given,initial,capacity,and,stores,lower,case,keys,according,to,the,default,locale,param,initial,capacity,the,initial,capacity,see,java,lang,string,to,lower,case;public,linked,case,insensitive,map,int,initial,capacity,this,initial,capacity,null
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(int initialCapacity);1467730834;Create a new LinkedCaseInsensitiveMap that wraps a {@link LinkedHashMap}_with the given initial capacity and stores lower-case keys according_to the default Locale._@param initialCapacity the initial capacity_@see java.lang.String#toLowerCase();public LinkedCaseInsensitiveMap(int initialCapacity) {_		this(initialCapacity, null)__	};create,a,new,linked,case,insensitive,map,that,wraps,a,link,linked,hash,map,with,the,given,initial,capacity,and,stores,lower,case,keys,according,to,the,default,locale,param,initial,capacity,the,initial,capacity,see,java,lang,string,to,lower,case;public,linked,case,insensitive,map,int,initial,capacity,this,initial,capacity,null
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(int initialCapacity);1469441335;Create a new LinkedCaseInsensitiveMap that wraps a {@link LinkedHashMap}_with the given initial capacity and stores lower-case keys according_to the default Locale._@param initialCapacity the initial capacity_@see java.lang.String#toLowerCase();public LinkedCaseInsensitiveMap(int initialCapacity) {_		this(initialCapacity, null)__	};create,a,new,linked,case,insensitive,map,that,wraps,a,link,linked,hash,map,with,the,given,initial,capacity,and,stores,lower,case,keys,according,to,the,default,locale,param,initial,capacity,the,initial,capacity,see,java,lang,string,to,lower,case;public,linked,case,insensitive,map,int,initial,capacity,this,initial,capacity,null
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(int initialCapacity);1482515870;Create a new LinkedCaseInsensitiveMap that wraps a {@link LinkedHashMap}_with the given initial capacity and stores lower-case keys according_to the default Locale._@param initialCapacity the initial capacity_@see java.lang.String#toLowerCase();public LinkedCaseInsensitiveMap(int initialCapacity) {_		this(initialCapacity, null)__	};create,a,new,linked,case,insensitive,map,that,wraps,a,link,linked,hash,map,with,the,given,initial,capacity,and,stores,lower,case,keys,according,to,the,default,locale,param,initial,capacity,the,initial,capacity,see,java,lang,string,to,lower,case;public,linked,case,insensitive,map,int,initial,capacity,this,initial,capacity,null
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(int initialCapacity);1484252047;Create a new LinkedCaseInsensitiveMap that wraps a {@link LinkedHashMap}_with the given initial capacity and stores lower-case keys according_to the default Locale._@param initialCapacity the initial capacity_@see java.lang.String#toLowerCase();public LinkedCaseInsensitiveMap(int initialCapacity) {_		this(initialCapacity, null)__	};create,a,new,linked,case,insensitive,map,that,wraps,a,link,linked,hash,map,with,the,given,initial,capacity,and,stores,lower,case,keys,according,to,the,default,locale,param,initial,capacity,the,initial,capacity,see,java,lang,string,to,lower,case;public,linked,case,insensitive,map,int,initial,capacity,this,initial,capacity,null
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(int initialCapacity);1493370460;Create a new LinkedCaseInsensitiveMap that wraps a {@link LinkedHashMap}_with the given initial capacity and stores lower-case keys according_to the default Locale._@param initialCapacity the initial capacity_@see java.lang.String#toLowerCase();public LinkedCaseInsensitiveMap(int initialCapacity) {_		this(initialCapacity, null)__	};create,a,new,linked,case,insensitive,map,that,wraps,a,link,linked,hash,map,with,the,given,initial,capacity,and,stores,lower,case,keys,according,to,the,default,locale,param,initial,capacity,the,initial,capacity,see,java,lang,string,to,lower,case;public,linked,case,insensitive,map,int,initial,capacity,this,initial,capacity,null
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(int initialCapacity);1495868221;Create a new LinkedCaseInsensitiveMap that wraps a {@link LinkedHashMap}_with the given initial capacity and stores lower-case keys according_to the default Locale._@param initialCapacity the initial capacity_@see java.lang.String#toLowerCase();public LinkedCaseInsensitiveMap(int initialCapacity) {_		this(initialCapacity, null)__	};create,a,new,linked,case,insensitive,map,that,wraps,a,link,linked,hash,map,with,the,given,initial,capacity,and,stores,lower,case,keys,according,to,the,default,locale,param,initial,capacity,the,initial,capacity,see,java,lang,string,to,lower,case;public,linked,case,insensitive,map,int,initial,capacity,this,initial,capacity,null
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(int initialCapacity);1496837955;Create a new LinkedCaseInsensitiveMap that wraps a {@link LinkedHashMap}_with the given initial capacity and stores lower-case keys according_to the default Locale._@param initialCapacity the initial capacity_@see java.lang.String#toLowerCase();public LinkedCaseInsensitiveMap(int initialCapacity) {_		this(initialCapacity, null)__	};create,a,new,linked,case,insensitive,map,that,wraps,a,link,linked,hash,map,with,the,given,initial,capacity,and,stores,lower,case,keys,according,to,the,default,locale,param,initial,capacity,the,initial,capacity,see,java,lang,string,to,lower,case;public,linked,case,insensitive,map,int,initial,capacity,this,initial,capacity,null
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(int initialCapacity);1499689468;Create a new LinkedCaseInsensitiveMap that wraps a {@link LinkedHashMap}_with the given initial capacity and stores case-insensitive keys_according to the default Locale (by default in lower case)._@param initialCapacity the initial capacity_@see #convertKey(String);public LinkedCaseInsensitiveMap(int initialCapacity) {_		this(initialCapacity, null)__	};create,a,new,linked,case,insensitive,map,that,wraps,a,link,linked,hash,map,with,the,given,initial,capacity,and,stores,case,insensitive,keys,according,to,the,default,locale,by,default,in,lower,case,param,initial,capacity,the,initial,capacity,see,convert,key,string;public,linked,case,insensitive,map,int,initial,capacity,this,initial,capacity,null
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(int initialCapacity);1528719012;Create a new LinkedCaseInsensitiveMap that wraps a {@link LinkedHashMap}_with the given initial capacity and stores case-insensitive keys_according to the default Locale (by default in lower case)._@param initialCapacity the initial capacity_@see #convertKey(String);public LinkedCaseInsensitiveMap(int initialCapacity) {_		this(initialCapacity, null)__	};create,a,new,linked,case,insensitive,map,that,wraps,a,link,linked,hash,map,with,the,given,initial,capacity,and,stores,case,insensitive,keys,according,to,the,default,locale,by,default,in,lower,case,param,initial,capacity,the,initial,capacity,see,convert,key,string;public,linked,case,insensitive,map,int,initial,capacity,this,initial,capacity,null
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(int initialCapacity);1530174524;Create a new LinkedCaseInsensitiveMap that wraps a {@link LinkedHashMap}_with the given initial capacity and stores case-insensitive keys_according to the default Locale (by default in lower case)._@param initialCapacity the initial capacity_@see #convertKey(String);public LinkedCaseInsensitiveMap(int initialCapacity) {_		this(initialCapacity, null)__	};create,a,new,linked,case,insensitive,map,that,wraps,a,link,linked,hash,map,with,the,given,initial,capacity,and,stores,case,insensitive,keys,according,to,the,default,locale,by,default,in,lower,case,param,initial,capacity,the,initial,capacity,see,convert,key,string;public,linked,case,insensitive,map,int,initial,capacity,this,initial,capacity,null
LinkedCaseInsensitiveMap -> protected boolean removeEldestEntry(Map.Entry<String, V> eldest);1482515870;Determine whether this map should remove the given eldest entry._@param eldest the candidate entry_@return {@code true} for removing it, {@code false} for keeping it_@see LinkedHashMap#removeEldestEntry;protected boolean removeEldestEntry(Map.Entry<String, V> eldest) {_		return false__	};determine,whether,this,map,should,remove,the,given,eldest,entry,param,eldest,the,candidate,entry,return,code,true,for,removing,it,code,false,for,keeping,it,see,linked,hash,map,remove,eldest,entry;protected,boolean,remove,eldest,entry,map,entry,string,v,eldest,return,false
LinkedCaseInsensitiveMap -> protected boolean removeEldestEntry(Map.Entry<String, V> eldest);1484252047;Determine whether this map should remove the given eldest entry._@param eldest the candidate entry_@return {@code true} for removing it, {@code false} for keeping it_@see LinkedHashMap#removeEldestEntry;protected boolean removeEldestEntry(Map.Entry<String, V> eldest) {_		return false__	};determine,whether,this,map,should,remove,the,given,eldest,entry,param,eldest,the,candidate,entry,return,code,true,for,removing,it,code,false,for,keeping,it,see,linked,hash,map,remove,eldest,entry;protected,boolean,remove,eldest,entry,map,entry,string,v,eldest,return,false
LinkedCaseInsensitiveMap -> protected boolean removeEldestEntry(Map.Entry<String, V> eldest);1493370460;Determine whether this map should remove the given eldest entry._@param eldest the candidate entry_@return {@code true} for removing it, {@code false} for keeping it_@see LinkedHashMap#removeEldestEntry;protected boolean removeEldestEntry(Map.Entry<String, V> eldest) {_		return false__	};determine,whether,this,map,should,remove,the,given,eldest,entry,param,eldest,the,candidate,entry,return,code,true,for,removing,it,code,false,for,keeping,it,see,linked,hash,map,remove,eldest,entry;protected,boolean,remove,eldest,entry,map,entry,string,v,eldest,return,false
LinkedCaseInsensitiveMap -> protected boolean removeEldestEntry(Map.Entry<String, V> eldest);1495868221;Determine whether this map should remove the given eldest entry._@param eldest the candidate entry_@return {@code true} for removing it, {@code false} for keeping it_@see LinkedHashMap#removeEldestEntry;protected boolean removeEldestEntry(Map.Entry<String, V> eldest) {_		return false__	};determine,whether,this,map,should,remove,the,given,eldest,entry,param,eldest,the,candidate,entry,return,code,true,for,removing,it,code,false,for,keeping,it,see,linked,hash,map,remove,eldest,entry;protected,boolean,remove,eldest,entry,map,entry,string,v,eldest,return,false
LinkedCaseInsensitiveMap -> protected boolean removeEldestEntry(Map.Entry<String, V> eldest);1496837955;Determine whether this map should remove the given eldest entry._@param eldest the candidate entry_@return {@code true} for removing it, {@code false} for keeping it_@see LinkedHashMap#removeEldestEntry;protected boolean removeEldestEntry(Map.Entry<String, V> eldest) {_		return false__	};determine,whether,this,map,should,remove,the,given,eldest,entry,param,eldest,the,candidate,entry,return,code,true,for,removing,it,code,false,for,keeping,it,see,linked,hash,map,remove,eldest,entry;protected,boolean,remove,eldest,entry,map,entry,string,v,eldest,return,false
LinkedCaseInsensitiveMap -> protected boolean removeEldestEntry(Map.Entry<String, V> eldest);1499689468;Determine whether this map should remove the given eldest entry._@param eldest the candidate entry_@return {@code true} for removing it, {@code false} for keeping it_@see LinkedHashMap#removeEldestEntry;protected boolean removeEldestEntry(Map.Entry<String, V> eldest) {_		return false__	};determine,whether,this,map,should,remove,the,given,eldest,entry,param,eldest,the,candidate,entry,return,code,true,for,removing,it,code,false,for,keeping,it,see,linked,hash,map,remove,eldest,entry;protected,boolean,remove,eldest,entry,map,entry,string,v,eldest,return,false
LinkedCaseInsensitiveMap -> protected boolean removeEldestEntry(Map.Entry<String, V> eldest);1528719012;Determine whether this map should remove the given eldest entry._@param eldest the candidate entry_@return {@code true} for removing it, {@code false} for keeping it_@see LinkedHashMap#removeEldestEntry;protected boolean removeEldestEntry(Map.Entry<String, V> eldest) {_		return false__	};determine,whether,this,map,should,remove,the,given,eldest,entry,param,eldest,the,candidate,entry,return,code,true,for,removing,it,code,false,for,keeping,it,see,linked,hash,map,remove,eldest,entry;protected,boolean,remove,eldest,entry,map,entry,string,v,eldest,return,false
LinkedCaseInsensitiveMap -> protected boolean removeEldestEntry(Map.Entry<String, V> eldest);1530174524;Determine whether this map should remove the given eldest entry._@param eldest the candidate entry_@return {@code true} for removing it, {@code false} for keeping it_@see LinkedHashMap#removeEldestEntry;protected boolean removeEldestEntry(Map.Entry<String, V> eldest) {_		return false__	};determine,whether,this,map,should,remove,the,given,eldest,entry,param,eldest,the,candidate,entry,return,code,true,for,removing,it,code,false,for,keeping,it,see,linked,hash,map,remove,eldest,entry;protected,boolean,remove,eldest,entry,map,entry,string,v,eldest,return,false
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(Locale locale);1328020251;Create a new LinkedCaseInsensitiveMap that stores lower-case keys_according to the given Locale._@param locale the Locale to use for lower-case conversion_@see java.lang.String#toLowerCase(java.util.Locale);public LinkedCaseInsensitiveMap(Locale locale) {_		super()__		this.caseInsensitiveKeys = new HashMap<String, String>()__		this.locale = (locale != null ? locale : Locale.getDefault())__	};create,a,new,linked,case,insensitive,map,that,stores,lower,case,keys,according,to,the,given,locale,param,locale,the,locale,to,use,for,lower,case,conversion,see,java,lang,string,to,lower,case,java,util,locale;public,linked,case,insensitive,map,locale,locale,super,this,case,insensitive,keys,new,hash,map,string,string,this,locale,locale,null,locale,locale,get,default
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(Locale locale);1347282849;Create a new LinkedCaseInsensitiveMap that stores lower-case keys_according to the given Locale._@param locale the Locale to use for lower-case conversion_@see java.lang.String#toLowerCase(java.util.Locale);public LinkedCaseInsensitiveMap(Locale locale) {_		super()__		this.caseInsensitiveKeys = new HashMap<String, String>()__		this.locale = (locale != null ? locale : Locale.getDefault())__	};create,a,new,linked,case,insensitive,map,that,stores,lower,case,keys,according,to,the,given,locale,param,locale,the,locale,to,use,for,lower,case,conversion,see,java,lang,string,to,lower,case,java,util,locale;public,linked,case,insensitive,map,locale,locale,super,this,case,insensitive,keys,new,hash,map,string,string,this,locale,locale,null,locale,locale,get,default
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(Locale locale);1356735495;Create a new LinkedCaseInsensitiveMap that stores lower-case keys_according to the given Locale._@param locale the Locale to use for lower-case conversion_@see java.lang.String#toLowerCase(java.util.Locale);public LinkedCaseInsensitiveMap(Locale locale) {_		super()__		this.caseInsensitiveKeys = new HashMap<String, String>()__		this.locale = (locale != null ? locale : Locale.getDefault())__	};create,a,new,linked,case,insensitive,map,that,stores,lower,case,keys,according,to,the,given,locale,param,locale,the,locale,to,use,for,lower,case,conversion,see,java,lang,string,to,lower,case,java,util,locale;public,linked,case,insensitive,map,locale,locale,super,this,case,insensitive,keys,new,hash,map,string,string,this,locale,locale,null,locale,locale,get,default
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(Locale locale);1456432931;Create a new LinkedCaseInsensitiveMap that stores lower-case keys_according to the given Locale._@param locale the Locale to use for lower-case conversion_@see java.lang.String#toLowerCase(java.util.Locale);public LinkedCaseInsensitiveMap(Locale locale) {_		super()__		this.caseInsensitiveKeys = new HashMap<String, String>()__		this.locale = (locale != null ? locale : Locale.getDefault())__	};create,a,new,linked,case,insensitive,map,that,stores,lower,case,keys,according,to,the,given,locale,param,locale,the,locale,to,use,for,lower,case,conversion,see,java,lang,string,to,lower,case,java,util,locale;public,linked,case,insensitive,map,locale,locale,super,this,case,insensitive,keys,new,hash,map,string,string,this,locale,locale,null,locale,locale,get,default
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(Locale locale);1467730834;Create a new LinkedCaseInsensitiveMap that stores lower-case keys_according to the given Locale._@param locale the Locale to use for lower-case conversion_@see java.lang.String#toLowerCase(java.util.Locale);public LinkedCaseInsensitiveMap(Locale locale) {_		super()__		this.caseInsensitiveKeys = new HashMap<>()__		this.locale = (locale != null ? locale : Locale.getDefault())__	};create,a,new,linked,case,insensitive,map,that,stores,lower,case,keys,according,to,the,given,locale,param,locale,the,locale,to,use,for,lower,case,conversion,see,java,lang,string,to,lower,case,java,util,locale;public,linked,case,insensitive,map,locale,locale,super,this,case,insensitive,keys,new,hash,map,this,locale,locale,null,locale,locale,get,default
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(Locale locale);1469441335;Create a new LinkedCaseInsensitiveMap that stores lower-case keys_according to the given Locale._@param locale the Locale to use for lower-case conversion_@see java.lang.String#toLowerCase(java.util.Locale);public LinkedCaseInsensitiveMap(Locale locale) {_		super()__		this.caseInsensitiveKeys = new HashMap<>()__		this.locale = (locale != null ? locale : Locale.getDefault())__	};create,a,new,linked,case,insensitive,map,that,stores,lower,case,keys,according,to,the,given,locale,param,locale,the,locale,to,use,for,lower,case,conversion,see,java,lang,string,to,lower,case,java,util,locale;public,linked,case,insensitive,map,locale,locale,super,this,case,insensitive,keys,new,hash,map,this,locale,locale,null,locale,locale,get,default
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(Locale locale);1482515870;Create a new LinkedCaseInsensitiveMap that stores lower-case keys_according to the given Locale._@param locale the Locale to use for lower-case conversion_@see java.lang.String#toLowerCase(java.util.Locale);public LinkedCaseInsensitiveMap(Locale locale) {_		this(16, locale)__	};create,a,new,linked,case,insensitive,map,that,stores,lower,case,keys,according,to,the,given,locale,param,locale,the,locale,to,use,for,lower,case,conversion,see,java,lang,string,to,lower,case,java,util,locale;public,linked,case,insensitive,map,locale,locale,this,16,locale
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(Locale locale);1484252047;Create a new LinkedCaseInsensitiveMap that stores lower-case keys_according to the given Locale._@param locale the Locale to use for lower-case conversion_@see java.lang.String#toLowerCase(java.util.Locale);public LinkedCaseInsensitiveMap(Locale locale) {_		this(16, locale)__	};create,a,new,linked,case,insensitive,map,that,stores,lower,case,keys,according,to,the,given,locale,param,locale,the,locale,to,use,for,lower,case,conversion,see,java,lang,string,to,lower,case,java,util,locale;public,linked,case,insensitive,map,locale,locale,this,16,locale
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(Locale locale);1493370460;Create a new LinkedCaseInsensitiveMap that stores lower-case keys_according to the given Locale._@param locale the Locale to use for lower-case conversion_@see java.lang.String#toLowerCase(java.util.Locale);public LinkedCaseInsensitiveMap(Locale locale) {_		this(16, locale)__	};create,a,new,linked,case,insensitive,map,that,stores,lower,case,keys,according,to,the,given,locale,param,locale,the,locale,to,use,for,lower,case,conversion,see,java,lang,string,to,lower,case,java,util,locale;public,linked,case,insensitive,map,locale,locale,this,16,locale
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(Locale locale);1495868221;Create a new LinkedCaseInsensitiveMap that stores lower-case keys_according to the given Locale._@param locale the Locale to use for lower-case conversion_@see java.lang.String#toLowerCase(java.util.Locale);public LinkedCaseInsensitiveMap(Locale locale) {_		this(16, locale)__	};create,a,new,linked,case,insensitive,map,that,stores,lower,case,keys,according,to,the,given,locale,param,locale,the,locale,to,use,for,lower,case,conversion,see,java,lang,string,to,lower,case,java,util,locale;public,linked,case,insensitive,map,locale,locale,this,16,locale
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(@Nullable Locale locale);1496837955;Create a new LinkedCaseInsensitiveMap that stores lower-case keys_according to the given Locale._@param locale the Locale to use for lower-case conversion_@see java.lang.String#toLowerCase(java.util.Locale);public LinkedCaseInsensitiveMap(@Nullable Locale locale) {_		this(16, locale)__	};create,a,new,linked,case,insensitive,map,that,stores,lower,case,keys,according,to,the,given,locale,param,locale,the,locale,to,use,for,lower,case,conversion,see,java,lang,string,to,lower,case,java,util,locale;public,linked,case,insensitive,map,nullable,locale,locale,this,16,locale
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(@Nullable Locale locale);1499689468;Create a new LinkedCaseInsensitiveMap that stores case-insensitive keys_according to the given Locale (by default in lower case)._@param locale the Locale to use for case-insensitive key conversion_@see #convertKey(String);public LinkedCaseInsensitiveMap(@Nullable Locale locale) {_		this(16, locale)__	};create,a,new,linked,case,insensitive,map,that,stores,case,insensitive,keys,according,to,the,given,locale,by,default,in,lower,case,param,locale,the,locale,to,use,for,case,insensitive,key,conversion,see,convert,key,string;public,linked,case,insensitive,map,nullable,locale,locale,this,16,locale
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(@Nullable Locale locale);1528719012;Create a new LinkedCaseInsensitiveMap that stores case-insensitive keys_according to the given Locale (by default in lower case)._@param locale the Locale to use for case-insensitive key conversion_@see #convertKey(String);public LinkedCaseInsensitiveMap(@Nullable Locale locale) {_		this(16, locale)__	};create,a,new,linked,case,insensitive,map,that,stores,case,insensitive,keys,according,to,the,given,locale,by,default,in,lower,case,param,locale,the,locale,to,use,for,case,insensitive,key,conversion,see,convert,key,string;public,linked,case,insensitive,map,nullable,locale,locale,this,16,locale
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(@Nullable Locale locale);1530174524;Create a new LinkedCaseInsensitiveMap that stores case-insensitive keys_according to the given Locale (by default in lower case)._@param locale the Locale to use for case-insensitive key conversion_@see #convertKey(String);public LinkedCaseInsensitiveMap(@Nullable Locale locale) {_		this(16, locale)__	};create,a,new,linked,case,insensitive,map,that,stores,case,insensitive,keys,according,to,the,given,locale,by,default,in,lower,case,param,locale,the,locale,to,use,for,case,insensitive,key,conversion,see,convert,key,string;public,linked,case,insensitive,map,nullable,locale,locale,this,16,locale
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(int initialCapacity, @Nullable Locale locale);1496837955;Create a new LinkedCaseInsensitiveMap that wraps a {@link LinkedHashMap}_with the given initial capacity and stores lower-case keys according_to the given Locale._@param initialCapacity the initial capacity_@param locale the Locale to use for lower-case conversion_@see java.lang.String#toLowerCase(java.util.Locale);public LinkedCaseInsensitiveMap(int initialCapacity, @Nullable Locale locale) {_		this.targetMap = new LinkedHashMap<String, V>(initialCapacity) {_			@Override_			public boolean containsKey(Object key) {_				return LinkedCaseInsensitiveMap.this.containsKey(key)__			}_			@Override_			protected boolean removeEldestEntry(Map.Entry<String, V> eldest) {_				boolean doRemove = LinkedCaseInsensitiveMap.this.removeEldestEntry(eldest)__				if (doRemove) {_					caseInsensitiveKeys.remove(convertKey(eldest.getKey()))__				}_				return doRemove__			}_		}__		this.caseInsensitiveKeys = new HashMap<>(initialCapacity)__		this.locale = (locale != null ? locale : Locale.getDefault())__	};create,a,new,linked,case,insensitive,map,that,wraps,a,link,linked,hash,map,with,the,given,initial,capacity,and,stores,lower,case,keys,according,to,the,given,locale,param,initial,capacity,the,initial,capacity,param,locale,the,locale,to,use,for,lower,case,conversion,see,java,lang,string,to,lower,case,java,util,locale;public,linked,case,insensitive,map,int,initial,capacity,nullable,locale,locale,this,target,map,new,linked,hash,map,string,v,initial,capacity,override,public,boolean,contains,key,object,key,return,linked,case,insensitive,map,this,contains,key,key,override,protected,boolean,remove,eldest,entry,map,entry,string,v,eldest,boolean,do,remove,linked,case,insensitive,map,this,remove,eldest,entry,eldest,if,do,remove,case,insensitive,keys,remove,convert,key,eldest,get,key,return,do,remove,this,case,insensitive,keys,new,hash,map,initial,capacity,this,locale,locale,null,locale,locale,get,default
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(int initialCapacity, @Nullable Locale locale);1499689468;Create a new LinkedCaseInsensitiveMap that wraps a {@link LinkedHashMap}_with the given initial capacity and stores case-insensitive keys_according to the given Locale (by default in lower case)._@param initialCapacity the initial capacity_@param locale the Locale to use for case-insensitive key conversion_@see #convertKey(String);public LinkedCaseInsensitiveMap(int initialCapacity, @Nullable Locale locale) {_		this.targetMap = new LinkedHashMap<String, V>(initialCapacity) {_			@Override_			public boolean containsKey(Object key) {_				return LinkedCaseInsensitiveMap.this.containsKey(key)__			}_			@Override_			protected boolean removeEldestEntry(Map.Entry<String, V> eldest) {_				boolean doRemove = LinkedCaseInsensitiveMap.this.removeEldestEntry(eldest)__				if (doRemove) {_					caseInsensitiveKeys.remove(convertKey(eldest.getKey()))__				}_				return doRemove__			}_		}__		this.caseInsensitiveKeys = new HashMap<>(initialCapacity)__		this.locale = (locale != null ? locale : Locale.getDefault())__	};create,a,new,linked,case,insensitive,map,that,wraps,a,link,linked,hash,map,with,the,given,initial,capacity,and,stores,case,insensitive,keys,according,to,the,given,locale,by,default,in,lower,case,param,initial,capacity,the,initial,capacity,param,locale,the,locale,to,use,for,case,insensitive,key,conversion,see,convert,key,string;public,linked,case,insensitive,map,int,initial,capacity,nullable,locale,locale,this,target,map,new,linked,hash,map,string,v,initial,capacity,override,public,boolean,contains,key,object,key,return,linked,case,insensitive,map,this,contains,key,key,override,protected,boolean,remove,eldest,entry,map,entry,string,v,eldest,boolean,do,remove,linked,case,insensitive,map,this,remove,eldest,entry,eldest,if,do,remove,case,insensitive,keys,remove,convert,key,eldest,get,key,return,do,remove,this,case,insensitive,keys,new,hash,map,initial,capacity,this,locale,locale,null,locale,locale,get,default
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(int initialCapacity, @Nullable Locale locale);1528719012;Create a new LinkedCaseInsensitiveMap that wraps a {@link LinkedHashMap}_with the given initial capacity and stores case-insensitive keys_according to the given Locale (by default in lower case)._@param initialCapacity the initial capacity_@param locale the Locale to use for case-insensitive key conversion_@see #convertKey(String);public LinkedCaseInsensitiveMap(int initialCapacity, @Nullable Locale locale) {_		this.targetMap = new LinkedHashMap<String, V>(initialCapacity) {_			@Override_			public boolean containsKey(Object key) {_				return LinkedCaseInsensitiveMap.this.containsKey(key)__			}_			@Override_			protected boolean removeEldestEntry(Map.Entry<String, V> eldest) {_				boolean doRemove = LinkedCaseInsensitiveMap.this.removeEldestEntry(eldest)__				if (doRemove) {_					caseInsensitiveKeys.remove(convertKey(eldest.getKey()))__				}_				return doRemove__			}_		}__		this.caseInsensitiveKeys = new HashMap<>(initialCapacity)__		this.locale = (locale != null ? locale : Locale.getDefault())__	};create,a,new,linked,case,insensitive,map,that,wraps,a,link,linked,hash,map,with,the,given,initial,capacity,and,stores,case,insensitive,keys,according,to,the,given,locale,by,default,in,lower,case,param,initial,capacity,the,initial,capacity,param,locale,the,locale,to,use,for,case,insensitive,key,conversion,see,convert,key,string;public,linked,case,insensitive,map,int,initial,capacity,nullable,locale,locale,this,target,map,new,linked,hash,map,string,v,initial,capacity,override,public,boolean,contains,key,object,key,return,linked,case,insensitive,map,this,contains,key,key,override,protected,boolean,remove,eldest,entry,map,entry,string,v,eldest,boolean,do,remove,linked,case,insensitive,map,this,remove,eldest,entry,eldest,if,do,remove,case,insensitive,keys,remove,convert,key,eldest,get,key,return,do,remove,this,case,insensitive,keys,new,hash,map,initial,capacity,this,locale,locale,null,locale,locale,get,default
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(int initialCapacity, @Nullable Locale locale);1530174524;Create a new LinkedCaseInsensitiveMap that wraps a {@link LinkedHashMap}_with the given initial capacity and stores case-insensitive keys_according to the given Locale (by default in lower case)._@param initialCapacity the initial capacity_@param locale the Locale to use for case-insensitive key conversion_@see #convertKey(String);public LinkedCaseInsensitiveMap(int initialCapacity, @Nullable Locale locale) {_		this.targetMap = new LinkedHashMap<String, V>(initialCapacity) {_			@Override_			public boolean containsKey(Object key) {_				return LinkedCaseInsensitiveMap.this.containsKey(key)__			}_			@Override_			protected boolean removeEldestEntry(Map.Entry<String, V> eldest) {_				boolean doRemove = LinkedCaseInsensitiveMap.this.removeEldestEntry(eldest)__				if (doRemove) {_					caseInsensitiveKeys.remove(convertKey(eldest.getKey()))__				}_				return doRemove__			}_		}__		this.caseInsensitiveKeys = new HashMap<>(initialCapacity)__		this.locale = (locale != null ? locale : Locale.getDefault())__	};create,a,new,linked,case,insensitive,map,that,wraps,a,link,linked,hash,map,with,the,given,initial,capacity,and,stores,case,insensitive,keys,according,to,the,given,locale,by,default,in,lower,case,param,initial,capacity,the,initial,capacity,param,locale,the,locale,to,use,for,case,insensitive,key,conversion,see,convert,key,string;public,linked,case,insensitive,map,int,initial,capacity,nullable,locale,locale,this,target,map,new,linked,hash,map,string,v,initial,capacity,override,public,boolean,contains,key,object,key,return,linked,case,insensitive,map,this,contains,key,key,override,protected,boolean,remove,eldest,entry,map,entry,string,v,eldest,boolean,do,remove,linked,case,insensitive,map,this,remove,eldest,entry,eldest,if,do,remove,case,insensitive,keys,remove,convert,key,eldest,get,key,return,do,remove,this,case,insensitive,keys,new,hash,map,initial,capacity,this,locale,locale,null,locale,locale,get,default
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(int initialCapacity, Locale locale);1328020251;Create a new LinkedCaseInsensitiveMap that wraps a {@link LinkedHashMap}_with the given initial capacity and stores lower-case keys according_to the given Locale._@param initialCapacity the initial capacity_@param locale the Locale to use for lower-case conversion_@see java.lang.String#toLowerCase(java.util.Locale);public LinkedCaseInsensitiveMap(int initialCapacity, Locale locale) {_		super(initialCapacity)__		this.caseInsensitiveKeys = new HashMap<String, String>(initialCapacity)__		this.locale = (locale != null ? locale : Locale.getDefault())__	};create,a,new,linked,case,insensitive,map,that,wraps,a,link,linked,hash,map,with,the,given,initial,capacity,and,stores,lower,case,keys,according,to,the,given,locale,param,initial,capacity,the,initial,capacity,param,locale,the,locale,to,use,for,lower,case,conversion,see,java,lang,string,to,lower,case,java,util,locale;public,linked,case,insensitive,map,int,initial,capacity,locale,locale,super,initial,capacity,this,case,insensitive,keys,new,hash,map,string,string,initial,capacity,this,locale,locale,null,locale,locale,get,default
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(int initialCapacity, Locale locale);1347282849;Create a new LinkedCaseInsensitiveMap that wraps a {@link LinkedHashMap}_with the given initial capacity and stores lower-case keys according_to the given Locale._@param initialCapacity the initial capacity_@param locale the Locale to use for lower-case conversion_@see java.lang.String#toLowerCase(java.util.Locale);public LinkedCaseInsensitiveMap(int initialCapacity, Locale locale) {_		super(initialCapacity)__		this.caseInsensitiveKeys = new HashMap<String, String>(initialCapacity)__		this.locale = (locale != null ? locale : Locale.getDefault())__	};create,a,new,linked,case,insensitive,map,that,wraps,a,link,linked,hash,map,with,the,given,initial,capacity,and,stores,lower,case,keys,according,to,the,given,locale,param,initial,capacity,the,initial,capacity,param,locale,the,locale,to,use,for,lower,case,conversion,see,java,lang,string,to,lower,case,java,util,locale;public,linked,case,insensitive,map,int,initial,capacity,locale,locale,super,initial,capacity,this,case,insensitive,keys,new,hash,map,string,string,initial,capacity,this,locale,locale,null,locale,locale,get,default
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(int initialCapacity, Locale locale);1356735495;Create a new LinkedCaseInsensitiveMap that wraps a {@link LinkedHashMap}_with the given initial capacity and stores lower-case keys according_to the given Locale._@param initialCapacity the initial capacity_@param locale the Locale to use for lower-case conversion_@see java.lang.String#toLowerCase(java.util.Locale);public LinkedCaseInsensitiveMap(int initialCapacity, Locale locale) {_		super(initialCapacity)__		this.caseInsensitiveKeys = new HashMap<String, String>(initialCapacity)__		this.locale = (locale != null ? locale : Locale.getDefault())__	};create,a,new,linked,case,insensitive,map,that,wraps,a,link,linked,hash,map,with,the,given,initial,capacity,and,stores,lower,case,keys,according,to,the,given,locale,param,initial,capacity,the,initial,capacity,param,locale,the,locale,to,use,for,lower,case,conversion,see,java,lang,string,to,lower,case,java,util,locale;public,linked,case,insensitive,map,int,initial,capacity,locale,locale,super,initial,capacity,this,case,insensitive,keys,new,hash,map,string,string,initial,capacity,this,locale,locale,null,locale,locale,get,default
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(int initialCapacity, Locale locale);1456432931;Create a new LinkedCaseInsensitiveMap that wraps a {@link LinkedHashMap}_with the given initial capacity and stores lower-case keys according_to the given Locale._@param initialCapacity the initial capacity_@param locale the Locale to use for lower-case conversion_@see java.lang.String#toLowerCase(java.util.Locale);public LinkedCaseInsensitiveMap(int initialCapacity, Locale locale) {_		super(initialCapacity)__		this.caseInsensitiveKeys = new HashMap<String, String>(initialCapacity)__		this.locale = (locale != null ? locale : Locale.getDefault())__	};create,a,new,linked,case,insensitive,map,that,wraps,a,link,linked,hash,map,with,the,given,initial,capacity,and,stores,lower,case,keys,according,to,the,given,locale,param,initial,capacity,the,initial,capacity,param,locale,the,locale,to,use,for,lower,case,conversion,see,java,lang,string,to,lower,case,java,util,locale;public,linked,case,insensitive,map,int,initial,capacity,locale,locale,super,initial,capacity,this,case,insensitive,keys,new,hash,map,string,string,initial,capacity,this,locale,locale,null,locale,locale,get,default
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(int initialCapacity, Locale locale);1467730834;Create a new LinkedCaseInsensitiveMap that wraps a {@link LinkedHashMap}_with the given initial capacity and stores lower-case keys according_to the given Locale._@param initialCapacity the initial capacity_@param locale the Locale to use for lower-case conversion_@see java.lang.String#toLowerCase(java.util.Locale);public LinkedCaseInsensitiveMap(int initialCapacity, Locale locale) {_		super(initialCapacity)__		this.caseInsensitiveKeys = new HashMap<>(initialCapacity)__		this.locale = (locale != null ? locale : Locale.getDefault())__	};create,a,new,linked,case,insensitive,map,that,wraps,a,link,linked,hash,map,with,the,given,initial,capacity,and,stores,lower,case,keys,according,to,the,given,locale,param,initial,capacity,the,initial,capacity,param,locale,the,locale,to,use,for,lower,case,conversion,see,java,lang,string,to,lower,case,java,util,locale;public,linked,case,insensitive,map,int,initial,capacity,locale,locale,super,initial,capacity,this,case,insensitive,keys,new,hash,map,initial,capacity,this,locale,locale,null,locale,locale,get,default
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(int initialCapacity, Locale locale);1469441335;Create a new LinkedCaseInsensitiveMap that wraps a {@link LinkedHashMap}_with the given initial capacity and stores lower-case keys according_to the given Locale._@param initialCapacity the initial capacity_@param locale the Locale to use for lower-case conversion_@see java.lang.String#toLowerCase(java.util.Locale);public LinkedCaseInsensitiveMap(int initialCapacity, Locale locale) {_		super(initialCapacity)__		this.caseInsensitiveKeys = new HashMap<>(initialCapacity)__		this.locale = (locale != null ? locale : Locale.getDefault())__	};create,a,new,linked,case,insensitive,map,that,wraps,a,link,linked,hash,map,with,the,given,initial,capacity,and,stores,lower,case,keys,according,to,the,given,locale,param,initial,capacity,the,initial,capacity,param,locale,the,locale,to,use,for,lower,case,conversion,see,java,lang,string,to,lower,case,java,util,locale;public,linked,case,insensitive,map,int,initial,capacity,locale,locale,super,initial,capacity,this,case,insensitive,keys,new,hash,map,initial,capacity,this,locale,locale,null,locale,locale,get,default
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(int initialCapacity, Locale locale);1482515870;Create a new LinkedCaseInsensitiveMap that wraps a {@link LinkedHashMap}_with the given initial capacity and stores lower-case keys according_to the given Locale._@param initialCapacity the initial capacity_@param locale the Locale to use for lower-case conversion_@see java.lang.String#toLowerCase(java.util.Locale);public LinkedCaseInsensitiveMap(int initialCapacity, Locale locale) {_		this.targetMap = new LinkedHashMap<String, V>(initialCapacity) {_			@Override_			protected boolean removeEldestEntry(Map.Entry<String, V> eldest) {_				boolean doRemove = LinkedCaseInsensitiveMap.this.removeEldestEntry(eldest)__				if (doRemove) {_					caseInsensitiveKeys.remove(convertKey(eldest.getKey()))__				}_				return doRemove__			}_		}__		this.caseInsensitiveKeys = new HashMap<>(initialCapacity)__		this.locale = (locale != null ? locale : Locale.getDefault())__	};create,a,new,linked,case,insensitive,map,that,wraps,a,link,linked,hash,map,with,the,given,initial,capacity,and,stores,lower,case,keys,according,to,the,given,locale,param,initial,capacity,the,initial,capacity,param,locale,the,locale,to,use,for,lower,case,conversion,see,java,lang,string,to,lower,case,java,util,locale;public,linked,case,insensitive,map,int,initial,capacity,locale,locale,this,target,map,new,linked,hash,map,string,v,initial,capacity,override,protected,boolean,remove,eldest,entry,map,entry,string,v,eldest,boolean,do,remove,linked,case,insensitive,map,this,remove,eldest,entry,eldest,if,do,remove,case,insensitive,keys,remove,convert,key,eldest,get,key,return,do,remove,this,case,insensitive,keys,new,hash,map,initial,capacity,this,locale,locale,null,locale,locale,get,default
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(int initialCapacity, Locale locale);1484252047;Create a new LinkedCaseInsensitiveMap that wraps a {@link LinkedHashMap}_with the given initial capacity and stores lower-case keys according_to the given Locale._@param initialCapacity the initial capacity_@param locale the Locale to use for lower-case conversion_@see java.lang.String#toLowerCase(java.util.Locale);public LinkedCaseInsensitiveMap(int initialCapacity, Locale locale) {_		this.targetMap = new LinkedHashMap<String, V>(initialCapacity) {_			@Override_			public boolean containsKey(Object key) {_				return LinkedCaseInsensitiveMap.this.containsKey(key)__			}_			@Override_			protected boolean removeEldestEntry(Map.Entry<String, V> eldest) {_				boolean doRemove = LinkedCaseInsensitiveMap.this.removeEldestEntry(eldest)__				if (doRemove) {_					caseInsensitiveKeys.remove(convertKey(eldest.getKey()))__				}_				return doRemove__			}_		}__		this.caseInsensitiveKeys = new HashMap<>(initialCapacity)__		this.locale = (locale != null ? locale : Locale.getDefault())__	};create,a,new,linked,case,insensitive,map,that,wraps,a,link,linked,hash,map,with,the,given,initial,capacity,and,stores,lower,case,keys,according,to,the,given,locale,param,initial,capacity,the,initial,capacity,param,locale,the,locale,to,use,for,lower,case,conversion,see,java,lang,string,to,lower,case,java,util,locale;public,linked,case,insensitive,map,int,initial,capacity,locale,locale,this,target,map,new,linked,hash,map,string,v,initial,capacity,override,public,boolean,contains,key,object,key,return,linked,case,insensitive,map,this,contains,key,key,override,protected,boolean,remove,eldest,entry,map,entry,string,v,eldest,boolean,do,remove,linked,case,insensitive,map,this,remove,eldest,entry,eldest,if,do,remove,case,insensitive,keys,remove,convert,key,eldest,get,key,return,do,remove,this,case,insensitive,keys,new,hash,map,initial,capacity,this,locale,locale,null,locale,locale,get,default
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(int initialCapacity, Locale locale);1493370460;Create a new LinkedCaseInsensitiveMap that wraps a {@link LinkedHashMap}_with the given initial capacity and stores lower-case keys according_to the given Locale._@param initialCapacity the initial capacity_@param locale the Locale to use for lower-case conversion_@see java.lang.String#toLowerCase(java.util.Locale);public LinkedCaseInsensitiveMap(int initialCapacity, Locale locale) {_		this.targetMap = new LinkedHashMap<String, V>(initialCapacity) {_			@Override_			public boolean containsKey(Object key) {_				return LinkedCaseInsensitiveMap.this.containsKey(key)__			}_			@Override_			protected boolean removeEldestEntry(Map.Entry<String, V> eldest) {_				boolean doRemove = LinkedCaseInsensitiveMap.this.removeEldestEntry(eldest)__				if (doRemove) {_					caseInsensitiveKeys.remove(convertKey(eldest.getKey()))__				}_				return doRemove__			}_		}__		this.caseInsensitiveKeys = new HashMap<>(initialCapacity)__		this.locale = (locale != null ? locale : Locale.getDefault())__	};create,a,new,linked,case,insensitive,map,that,wraps,a,link,linked,hash,map,with,the,given,initial,capacity,and,stores,lower,case,keys,according,to,the,given,locale,param,initial,capacity,the,initial,capacity,param,locale,the,locale,to,use,for,lower,case,conversion,see,java,lang,string,to,lower,case,java,util,locale;public,linked,case,insensitive,map,int,initial,capacity,locale,locale,this,target,map,new,linked,hash,map,string,v,initial,capacity,override,public,boolean,contains,key,object,key,return,linked,case,insensitive,map,this,contains,key,key,override,protected,boolean,remove,eldest,entry,map,entry,string,v,eldest,boolean,do,remove,linked,case,insensitive,map,this,remove,eldest,entry,eldest,if,do,remove,case,insensitive,keys,remove,convert,key,eldest,get,key,return,do,remove,this,case,insensitive,keys,new,hash,map,initial,capacity,this,locale,locale,null,locale,locale,get,default
LinkedCaseInsensitiveMap -> public LinkedCaseInsensitiveMap(int initialCapacity, Locale locale);1495868221;Create a new LinkedCaseInsensitiveMap that wraps a {@link LinkedHashMap}_with the given initial capacity and stores lower-case keys according_to the given Locale._@param initialCapacity the initial capacity_@param locale the Locale to use for lower-case conversion_@see java.lang.String#toLowerCase(java.util.Locale);public LinkedCaseInsensitiveMap(int initialCapacity, Locale locale) {_		this.targetMap = new LinkedHashMap<String, V>(initialCapacity) {_			@Override_			public boolean containsKey(Object key) {_				return LinkedCaseInsensitiveMap.this.containsKey(key)__			}_			@Override_			protected boolean removeEldestEntry(Map.Entry<String, V> eldest) {_				boolean doRemove = LinkedCaseInsensitiveMap.this.removeEldestEntry(eldest)__				if (doRemove) {_					caseInsensitiveKeys.remove(convertKey(eldest.getKey()))__				}_				return doRemove__			}_		}__		this.caseInsensitiveKeys = new HashMap<>(initialCapacity)__		this.locale = (locale != null ? locale : Locale.getDefault())__	};create,a,new,linked,case,insensitive,map,that,wraps,a,link,linked,hash,map,with,the,given,initial,capacity,and,stores,lower,case,keys,according,to,the,given,locale,param,initial,capacity,the,initial,capacity,param,locale,the,locale,to,use,for,lower,case,conversion,see,java,lang,string,to,lower,case,java,util,locale;public,linked,case,insensitive,map,int,initial,capacity,locale,locale,this,target,map,new,linked,hash,map,string,v,initial,capacity,override,public,boolean,contains,key,object,key,return,linked,case,insensitive,map,this,contains,key,key,override,protected,boolean,remove,eldest,entry,map,entry,string,v,eldest,boolean,do,remove,linked,case,insensitive,map,this,remove,eldest,entry,eldest,if,do,remove,case,insensitive,keys,remove,convert,key,eldest,get,key,return,do,remove,this,case,insensitive,keys,new,hash,map,initial,capacity,this,locale,locale,null,locale,locale,get,default
LinkedCaseInsensitiveMap -> protected String convertKey(String key);1328020251;Convert the given key to a case-insensitive key._<p>The default implementation converts the key_to lower-case according to this Map's Locale._@param key the user-specified key_@return the key to use for storing_@see java.lang.String#toLowerCase(java.util.Locale);protected String convertKey(String key) {_		return key.toLowerCase(this.locale)__	};convert,the,given,key,to,a,case,insensitive,key,p,the,default,implementation,converts,the,key,to,lower,case,according,to,this,map,s,locale,param,key,the,user,specified,key,return,the,key,to,use,for,storing,see,java,lang,string,to,lower,case,java,util,locale;protected,string,convert,key,string,key,return,key,to,lower,case,this,locale
LinkedCaseInsensitiveMap -> protected String convertKey(String key);1347282849;Convert the given key to a case-insensitive key._<p>The default implementation converts the key_to lower-case according to this Map's Locale._@param key the user-specified key_@return the key to use for storing_@see java.lang.String#toLowerCase(java.util.Locale);protected String convertKey(String key) {_		return key.toLowerCase(this.locale)__	};convert,the,given,key,to,a,case,insensitive,key,p,the,default,implementation,converts,the,key,to,lower,case,according,to,this,map,s,locale,param,key,the,user,specified,key,return,the,key,to,use,for,storing,see,java,lang,string,to,lower,case,java,util,locale;protected,string,convert,key,string,key,return,key,to,lower,case,this,locale
LinkedCaseInsensitiveMap -> protected String convertKey(String key);1356735495;Convert the given key to a case-insensitive key._<p>The default implementation converts the key_to lower-case according to this Map's Locale._@param key the user-specified key_@return the key to use for storing_@see java.lang.String#toLowerCase(java.util.Locale);protected String convertKey(String key) {_		return key.toLowerCase(this.locale)__	};convert,the,given,key,to,a,case,insensitive,key,p,the,default,implementation,converts,the,key,to,lower,case,according,to,this,map,s,locale,param,key,the,user,specified,key,return,the,key,to,use,for,storing,see,java,lang,string,to,lower,case,java,util,locale;protected,string,convert,key,string,key,return,key,to,lower,case,this,locale
LinkedCaseInsensitiveMap -> protected String convertKey(String key);1456432931;Convert the given key to a case-insensitive key._<p>The default implementation converts the key_to lower-case according to this Map's Locale._@param key the user-specified key_@return the key to use for storing_@see java.lang.String#toLowerCase(java.util.Locale);protected String convertKey(String key) {_		return key.toLowerCase(this.locale)__	};convert,the,given,key,to,a,case,insensitive,key,p,the,default,implementation,converts,the,key,to,lower,case,according,to,this,map,s,locale,param,key,the,user,specified,key,return,the,key,to,use,for,storing,see,java,lang,string,to,lower,case,java,util,locale;protected,string,convert,key,string,key,return,key,to,lower,case,this,locale
LinkedCaseInsensitiveMap -> protected String convertKey(String key);1467730834;Convert the given key to a case-insensitive key._<p>The default implementation converts the key_to lower-case according to this Map's Locale._@param key the user-specified key_@return the key to use for storing_@see java.lang.String#toLowerCase(java.util.Locale);protected String convertKey(String key) {_		return key.toLowerCase(this.locale)__	};convert,the,given,key,to,a,case,insensitive,key,p,the,default,implementation,converts,the,key,to,lower,case,according,to,this,map,s,locale,param,key,the,user,specified,key,return,the,key,to,use,for,storing,see,java,lang,string,to,lower,case,java,util,locale;protected,string,convert,key,string,key,return,key,to,lower,case,this,locale
LinkedCaseInsensitiveMap -> protected String convertKey(String key);1469441335;Convert the given key to a case-insensitive key._<p>The default implementation converts the key_to lower-case according to this Map's Locale._@param key the user-specified key_@return the key to use for storing_@see java.lang.String#toLowerCase(java.util.Locale);protected String convertKey(String key) {_		return key.toLowerCase(this.locale)__	};convert,the,given,key,to,a,case,insensitive,key,p,the,default,implementation,converts,the,key,to,lower,case,according,to,this,map,s,locale,param,key,the,user,specified,key,return,the,key,to,use,for,storing,see,java,lang,string,to,lower,case,java,util,locale;protected,string,convert,key,string,key,return,key,to,lower,case,this,locale
LinkedCaseInsensitiveMap -> protected String convertKey(String key);1482515870;Convert the given key to a case-insensitive key._<p>The default implementation converts the key_to lower-case according to this Map's Locale._@param key the user-specified key_@return the key to use for storing_@see java.lang.String#toLowerCase(java.util.Locale);protected String convertKey(String key) {_		return key.toLowerCase(this.locale)__	};convert,the,given,key,to,a,case,insensitive,key,p,the,default,implementation,converts,the,key,to,lower,case,according,to,this,map,s,locale,param,key,the,user,specified,key,return,the,key,to,use,for,storing,see,java,lang,string,to,lower,case,java,util,locale;protected,string,convert,key,string,key,return,key,to,lower,case,this,locale
LinkedCaseInsensitiveMap -> protected String convertKey(String key);1484252047;Convert the given key to a case-insensitive key._<p>The default implementation converts the key_to lower-case according to this Map's Locale._@param key the user-specified key_@return the key to use for storing_@see java.lang.String#toLowerCase(java.util.Locale);protected String convertKey(String key) {_		return key.toLowerCase(this.locale)__	};convert,the,given,key,to,a,case,insensitive,key,p,the,default,implementation,converts,the,key,to,lower,case,according,to,this,map,s,locale,param,key,the,user,specified,key,return,the,key,to,use,for,storing,see,java,lang,string,to,lower,case,java,util,locale;protected,string,convert,key,string,key,return,key,to,lower,case,this,locale
LinkedCaseInsensitiveMap -> protected String convertKey(String key);1493370460;Convert the given key to a case-insensitive key._<p>The default implementation converts the key_to lower-case according to this Map's Locale._@param key the user-specified key_@return the key to use for storing_@see java.lang.String#toLowerCase(java.util.Locale);protected String convertKey(String key) {_		return key.toLowerCase(this.locale)__	};convert,the,given,key,to,a,case,insensitive,key,p,the,default,implementation,converts,the,key,to,lower,case,according,to,this,map,s,locale,param,key,the,user,specified,key,return,the,key,to,use,for,storing,see,java,lang,string,to,lower,case,java,util,locale;protected,string,convert,key,string,key,return,key,to,lower,case,this,locale
LinkedCaseInsensitiveMap -> protected String convertKey(String key);1495868221;Convert the given key to a case-insensitive key._<p>The default implementation converts the key_to lower-case according to this Map's Locale._@param key the user-specified key_@return the key to use for storing_@see java.lang.String#toLowerCase(java.util.Locale);protected String convertKey(String key) {_		return key.toLowerCase(this.locale)__	};convert,the,given,key,to,a,case,insensitive,key,p,the,default,implementation,converts,the,key,to,lower,case,according,to,this,map,s,locale,param,key,the,user,specified,key,return,the,key,to,use,for,storing,see,java,lang,string,to,lower,case,java,util,locale;protected,string,convert,key,string,key,return,key,to,lower,case,this,locale
LinkedCaseInsensitiveMap -> protected String convertKey(String key);1496837955;Convert the given key to a case-insensitive key._<p>The default implementation converts the key_to lower-case according to this Map's Locale._@param key the user-specified key_@return the key to use for storing_@see java.lang.String#toLowerCase(java.util.Locale);protected String convertKey(String key) {_		return key.toLowerCase(this.locale)__	};convert,the,given,key,to,a,case,insensitive,key,p,the,default,implementation,converts,the,key,to,lower,case,according,to,this,map,s,locale,param,key,the,user,specified,key,return,the,key,to,use,for,storing,see,java,lang,string,to,lower,case,java,util,locale;protected,string,convert,key,string,key,return,key,to,lower,case,this,locale
LinkedCaseInsensitiveMap -> protected String convertKey(String key);1499689468;Convert the given key to a case-insensitive key._<p>The default implementation converts the key_to lower-case according to this Map's Locale._@param key the user-specified key_@return the key to use for storing_@see String#toLowerCase(Locale);protected String convertKey(String key) {_		return key.toLowerCase(getLocale())__	};convert,the,given,key,to,a,case,insensitive,key,p,the,default,implementation,converts,the,key,to,lower,case,according,to,this,map,s,locale,param,key,the,user,specified,key,return,the,key,to,use,for,storing,see,string,to,lower,case,locale;protected,string,convert,key,string,key,return,key,to,lower,case,get,locale
LinkedCaseInsensitiveMap -> protected String convertKey(String key);1528719012;Convert the given key to a case-insensitive key._<p>The default implementation converts the key_to lower-case according to this Map's Locale._@param key the user-specified key_@return the key to use for storing_@see String#toLowerCase(Locale);protected String convertKey(String key) {_		return key.toLowerCase(getLocale())__	};convert,the,given,key,to,a,case,insensitive,key,p,the,default,implementation,converts,the,key,to,lower,case,according,to,this,map,s,locale,param,key,the,user,specified,key,return,the,key,to,use,for,storing,see,string,to,lower,case,locale;protected,string,convert,key,string,key,return,key,to,lower,case,get,locale
LinkedCaseInsensitiveMap -> protected String convertKey(String key);1530174524;Convert the given key to a case-insensitive key._<p>The default implementation converts the key_to lower-case according to this Map's Locale._@param key the user-specified key_@return the key to use for storing_@see String#toLowerCase(Locale);protected String convertKey(String key) {_		return key.toLowerCase(getLocale())__	};convert,the,given,key,to,a,case,insensitive,key,p,the,default,implementation,converts,the,key,to,lower,case,according,to,this,map,s,locale,param,key,the,user,specified,key,return,the,key,to,use,for,storing,see,string,to,lower,case,locale;protected,string,convert,key,string,key,return,key,to,lower,case,get,locale
LinkedCaseInsensitiveMap -> @SuppressWarnings("unchecked") 	private LinkedCaseInsensitiveMap(LinkedCaseInsensitiveMap<V> other);1482515870;Copy constructor.;@SuppressWarnings("unchecked")_	private LinkedCaseInsensitiveMap(LinkedCaseInsensitiveMap<V> other) {_		this.targetMap = (LinkedHashMap<String, V>) other.targetMap.clone()__		this.caseInsensitiveKeys = (HashMap<String, String>) other.caseInsensitiveKeys.clone()__		this.locale = other.locale__	};copy,constructor;suppress,warnings,unchecked,private,linked,case,insensitive,map,linked,case,insensitive,map,v,other,this,target,map,linked,hash,map,string,v,other,target,map,clone,this,case,insensitive,keys,hash,map,string,string,other,case,insensitive,keys,clone,this,locale,other,locale
LinkedCaseInsensitiveMap -> @SuppressWarnings("unchecked") 	private LinkedCaseInsensitiveMap(LinkedCaseInsensitiveMap<V> other);1484252047;Copy constructor.;@SuppressWarnings("unchecked")_	private LinkedCaseInsensitiveMap(LinkedCaseInsensitiveMap<V> other) {_		this.targetMap = (LinkedHashMap<String, V>) other.targetMap.clone()__		this.caseInsensitiveKeys = (HashMap<String, String>) other.caseInsensitiveKeys.clone()__		this.locale = other.locale__	};copy,constructor;suppress,warnings,unchecked,private,linked,case,insensitive,map,linked,case,insensitive,map,v,other,this,target,map,linked,hash,map,string,v,other,target,map,clone,this,case,insensitive,keys,hash,map,string,string,other,case,insensitive,keys,clone,this,locale,other,locale
LinkedCaseInsensitiveMap -> @SuppressWarnings("unchecked") 	private LinkedCaseInsensitiveMap(LinkedCaseInsensitiveMap<V> other);1493370460;Copy constructor.;@SuppressWarnings("unchecked")_	private LinkedCaseInsensitiveMap(LinkedCaseInsensitiveMap<V> other) {_		this.targetMap = (LinkedHashMap<String, V>) other.targetMap.clone()__		this.caseInsensitiveKeys = (HashMap<String, String>) other.caseInsensitiveKeys.clone()__		this.locale = other.locale__	};copy,constructor;suppress,warnings,unchecked,private,linked,case,insensitive,map,linked,case,insensitive,map,v,other,this,target,map,linked,hash,map,string,v,other,target,map,clone,this,case,insensitive,keys,hash,map,string,string,other,case,insensitive,keys,clone,this,locale,other,locale
LinkedCaseInsensitiveMap -> @SuppressWarnings("unchecked") 	private LinkedCaseInsensitiveMap(LinkedCaseInsensitiveMap<V> other);1495868221;Copy constructor.;@SuppressWarnings("unchecked")_	private LinkedCaseInsensitiveMap(LinkedCaseInsensitiveMap<V> other) {_		this.targetMap = (LinkedHashMap<String, V>) other.targetMap.clone()__		this.caseInsensitiveKeys = (HashMap<String, String>) other.caseInsensitiveKeys.clone()__		this.locale = other.locale__	};copy,constructor;suppress,warnings,unchecked,private,linked,case,insensitive,map,linked,case,insensitive,map,v,other,this,target,map,linked,hash,map,string,v,other,target,map,clone,this,case,insensitive,keys,hash,map,string,string,other,case,insensitive,keys,clone,this,locale,other,locale
LinkedCaseInsensitiveMap -> @SuppressWarnings("unchecked") 	private LinkedCaseInsensitiveMap(LinkedCaseInsensitiveMap<V> other);1496837955;Copy constructor.;@SuppressWarnings("unchecked")_	private LinkedCaseInsensitiveMap(LinkedCaseInsensitiveMap<V> other) {_		this.targetMap = (LinkedHashMap<String, V>) other.targetMap.clone()__		this.caseInsensitiveKeys = (HashMap<String, String>) other.caseInsensitiveKeys.clone()__		this.locale = other.locale__	};copy,constructor;suppress,warnings,unchecked,private,linked,case,insensitive,map,linked,case,insensitive,map,v,other,this,target,map,linked,hash,map,string,v,other,target,map,clone,this,case,insensitive,keys,hash,map,string,string,other,case,insensitive,keys,clone,this,locale,other,locale
LinkedCaseInsensitiveMap -> @SuppressWarnings("unchecked") 	private LinkedCaseInsensitiveMap(LinkedCaseInsensitiveMap<V> other);1499689468;Copy constructor.;@SuppressWarnings("unchecked")_	private LinkedCaseInsensitiveMap(LinkedCaseInsensitiveMap<V> other) {_		this.targetMap = (LinkedHashMap<String, V>) other.targetMap.clone()__		this.caseInsensitiveKeys = (HashMap<String, String>) other.caseInsensitiveKeys.clone()__		this.locale = other.locale__	};copy,constructor;suppress,warnings,unchecked,private,linked,case,insensitive,map,linked,case,insensitive,map,v,other,this,target,map,linked,hash,map,string,v,other,target,map,clone,this,case,insensitive,keys,hash,map,string,string,other,case,insensitive,keys,clone,this,locale,other,locale
LinkedCaseInsensitiveMap -> @SuppressWarnings("unchecked") 	private LinkedCaseInsensitiveMap(LinkedCaseInsensitiveMap<V> other);1528719012;Copy constructor.;@SuppressWarnings("unchecked")_	private LinkedCaseInsensitiveMap(LinkedCaseInsensitiveMap<V> other) {_		this.targetMap = (LinkedHashMap<String, V>) other.targetMap.clone()__		this.caseInsensitiveKeys = (HashMap<String, String>) other.caseInsensitiveKeys.clone()__		this.locale = other.locale__	};copy,constructor;suppress,warnings,unchecked,private,linked,case,insensitive,map,linked,case,insensitive,map,v,other,this,target,map,linked,hash,map,string,v,other,target,map,clone,this,case,insensitive,keys,hash,map,string,string,other,case,insensitive,keys,clone,this,locale,other,locale
LinkedCaseInsensitiveMap -> @SuppressWarnings("unchecked") 	private LinkedCaseInsensitiveMap(LinkedCaseInsensitiveMap<V> other);1530174524;Copy constructor.;@SuppressWarnings("unchecked")_	private LinkedCaseInsensitiveMap(LinkedCaseInsensitiveMap<V> other) {_		this.targetMap = (LinkedHashMap<String, V>) other.targetMap.clone()__		this.caseInsensitiveKeys = (HashMap<String, String>) other.caseInsensitiveKeys.clone()__		this.locale = other.locale__	};copy,constructor;suppress,warnings,unchecked,private,linked,case,insensitive,map,linked,case,insensitive,map,v,other,this,target,map,linked,hash,map,string,v,other,target,map,clone,this,case,insensitive,keys,hash,map,string,string,other,case,insensitive,keys,clone,this,locale,other,locale
LinkedCaseInsensitiveMap -> public Locale getLocale();1499689468;Return the locale used by this {@code LinkedCaseInsensitiveMap}._Used for case-insensitive key conversion._@since 4.3.10_@see #LinkedCaseInsensitiveMap(Locale)_@see #convertKey(String);public Locale getLocale() {_		return this.locale__	};return,the,locale,used,by,this,code,linked,case,insensitive,map,used,for,case,insensitive,key,conversion,since,4,3,10,see,linked,case,insensitive,map,locale,see,convert,key,string;public,locale,get,locale,return,this,locale
LinkedCaseInsensitiveMap -> public Locale getLocale();1528719012;Return the locale used by this {@code LinkedCaseInsensitiveMap}._Used for case-insensitive key conversion._@since 4.3.10_@see #LinkedCaseInsensitiveMap(Locale)_@see #convertKey(String);public Locale getLocale() {_		return this.locale__	};return,the,locale,used,by,this,code,linked,case,insensitive,map,used,for,case,insensitive,key,conversion,since,4,3,10,see,linked,case,insensitive,map,locale,see,convert,key,string;public,locale,get,locale,return,this,locale
LinkedCaseInsensitiveMap -> public Locale getLocale();1530174524;Return the locale used by this {@code LinkedCaseInsensitiveMap}._Used for case-insensitive key conversion._@since 4.3.10_@see #LinkedCaseInsensitiveMap(Locale)_@see #convertKey(String);public Locale getLocale() {_		return this.locale__	};return,the,locale,used,by,this,code,linked,case,insensitive,map,used,for,case,insensitive,key,conversion,since,4,3,10,see,linked,case,insensitive,map,locale,see,convert,key,string;public,locale,get,locale,return,this,locale
