commented;modifiers;parameterAmount;loc;comment;code
true;public,final;0;3;/**  * Return the underlying byte array.  */ ;/**  * Return the underlying byte array.  */ public final byte[] getByteArray() {     return this.byteArray. }
true;public;0;4;/**  * This implementation always returns {@code true}.  */ ;/**  * This implementation always returns {@code true}.  */ @Override public boolean exists() {     return true. }
true;public;0;4;/**  * This implementation returns the length of the underlying byte array.  */ ;/**  * This implementation returns the length of the underlying byte array.  */ @Override public long contentLength() {     return this.byteArray.length. }
true;public;0;4;/**  * This implementation returns a ByteArrayInputStream for the  * underlying byte array.  * @see java.io.ByteArrayInputStream  */ ;/**  * This implementation returns a ByteArrayInputStream for the  * underlying byte array.  * @see java.io.ByteArrayInputStream  */ @Override public InputStream getInputStream() throws IOException {     return new ByteArrayInputStream(this.byteArray). }
true;public;0;4;/**  * This implementation returns a description that includes the passed-in  * {@code description}, if any.  */ ;/**  * This implementation returns a description that includes the passed-in  * {@code description}, if any.  */ @Override public String getDescription() {     return "Byte array resource [" + this.description + "]". }
true;public;1;5;/**  * This implementation compares the underlying byte array.  * @see java.util.Arrays#equals(byte[], byte[])  */ ;/**  * This implementation compares the underlying byte array.  * @see java.util.Arrays#equals(byte[], byte[])  */ @Override public boolean equals(Object other) {     return (this == other || (other instanceof ByteArrayResource && Arrays.equals(((ByteArrayResource) other).byteArray, this.byteArray))). }
true;public;0;4;/**  * This implementation returns the hash code based on the  * underlying byte array.  */ ;/**  * This implementation returns the hash code based on the  * underlying byte array.  */ @Override public int hashCode() {     return (byte[].class.hashCode() * 29 * this.byteArray.length). }
