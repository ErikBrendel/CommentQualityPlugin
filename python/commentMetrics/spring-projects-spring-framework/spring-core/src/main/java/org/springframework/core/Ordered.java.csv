commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * Get the order value of this object.  * <p>Higher values are interpreted as lower priority. As a consequence,  * the object with the lowest value has the highest priority (somewhat  * analogous to Servlet {@code load-on-startup} values).  * <p>Same order values will result in arbitrary sort positions for the  * affected objects.  * @return the order value  * @see #HIGHEST_PRECEDENCE  * @see #LOWEST_PRECEDENCE  */ ;/**  * Get the order value of this object.  * <p>Higher values are interpreted as lower priority. As a consequence,  * the object with the lowest value has the highest priority (somewhat  * analogous to Servlet {@code load-on-startup} values).  * <p>Same order values will result in arbitrary sort positions for the  * affected objects.  * @return the order value  * @see #HIGHEST_PRECEDENCE  * @see #LOWEST_PRECEDENCE  */ int getOrder().
