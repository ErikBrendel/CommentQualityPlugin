commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public void setContentHandler(@Nullable ContentHandler contentHandler) {     this.contentHandler = contentHandler. }
false;public;0;5;;@Override @Nullable public ContentHandler getContentHandler() {     return this.contentHandler. }
false;public;1;4;;@Override public void setDTDHandler(@Nullable DTDHandler dtdHandler) {     this.dtdHandler = dtdHandler. }
false;public;0;5;;@Override @Nullable public DTDHandler getDTDHandler() {     return this.dtdHandler. }
false;public;1;4;;@Override public void setEntityResolver(@Nullable EntityResolver entityResolver) {     this.entityResolver = entityResolver. }
false;public;0;5;;@Override @Nullable public EntityResolver getEntityResolver() {     return this.entityResolver. }
false;public;1;4;;@Override public void setErrorHandler(@Nullable ErrorHandler errorHandler) {     this.errorHandler = errorHandler. }
false;public;0;5;;@Override @Nullable public ErrorHandler getErrorHandler() {     return this.errorHandler. }
false;protected;0;4;;@Nullable protected LexicalHandler getLexicalHandler() {     return this.lexicalHandler. }
true;public;1;9;/**  * This implementation throws a {@code SAXNotRecognizedException} exception  * for any feature outside of the "http://xml.org/sax/features/" namespace  * and returns {@code false} for any feature within.  */ ;/**  * This implementation throws a {@code SAXNotRecognizedException} exception  * for any feature outside of the "http://xml.org/sax/features/" namespace  * and returns {@code false} for any feature within.  */ @Override public boolean getFeature(String name) throws SAXNotRecognizedException, SAXNotSupportedException {     if (name.startsWith("http://xml.org/sax/features/")) {         return false.     } else {         throw new SAXNotRecognizedException(name).     } }
true;public;2;11;/**  * This implementation throws a {@code SAXNotRecognizedException} exception  * for any feature outside of the "http://xml.org/sax/features/" namespace  * and accepts a {@code false} value for any feature within.  */ ;/**  * This implementation throws a {@code SAXNotRecognizedException} exception  * for any feature outside of the "http://xml.org/sax/features/" namespace  * and accepts a {@code false} value for any feature within.  */ @Override public void setFeature(String name, boolean value) throws SAXNotRecognizedException, SAXNotSupportedException {     if (name.startsWith("http://xml.org/sax/features/")) {         if (value) {             throw new SAXNotSupportedException(name).         }     } else {         throw new SAXNotRecognizedException(name).     } }
true;public;1;10;/**  * Throws a {@code SAXNotRecognizedException} exception when the given property does not signify a lexical  * handler. The property name for a lexical handler is {@code http://xml.org/sax/properties/lexical-handler}.  */ ;/**  * Throws a {@code SAXNotRecognizedException} exception when the given property does not signify a lexical  * handler. The property name for a lexical handler is {@code http://xml.org/sax/properties/lexical-handler}.  */ @Override @Nullable public Object getProperty(String name) throws SAXNotRecognizedException, SAXNotSupportedException {     if ("http://xml.org/sax/properties/lexical-handler".equals(name)) {         return this.lexicalHandler.     } else {         throw new SAXNotRecognizedException(name).     } }
true;public;2;9;/**  * Throws a {@code SAXNotRecognizedException} exception when the given property does not signify a lexical  * handler. The property name for a lexical handler is {@code http://xml.org/sax/properties/lexical-handler}.  */ ;/**  * Throws a {@code SAXNotRecognizedException} exception when the given property does not signify a lexical  * handler. The property name for a lexical handler is {@code http://xml.org/sax/properties/lexical-handler}.  */ @Override public void setProperty(String name, Object value) throws SAXNotRecognizedException, SAXNotSupportedException {     if ("http://xml.org/sax/properties/lexical-handler".equals(name)) {         this.lexicalHandler = (LexicalHandler) value.     } else {         throw new SAXNotRecognizedException(name).     } }
