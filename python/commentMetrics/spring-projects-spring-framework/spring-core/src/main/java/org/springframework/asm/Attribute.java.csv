# id;timestamp;commentText;codeText;commentWords;codeWords
Attribute -> final int computeAttributesSize(final SymbolTable symbolTable);1531241461;Returns the total size in bytes of all the attributes in the attribute list that begins with_this attribute. This size includes the 6 header bytes (attribute_name_index and_attribute_length) per attribute. Also adds the attribute type names to the constant pool.__@param symbolTable where the constants used in the attributes must be stored._@return the size of all the attributes in this attribute list. This size includes the size of_the attribute headers.;final int computeAttributesSize(final SymbolTable symbolTable) {_    final byte[] code = null__    final int codeLength = 0__    final int maxStack = -1__    final int maxLocals = -1__    return computeAttributesSize(symbolTable, code, codeLength, maxStack, maxLocals)__  };returns,the,total,size,in,bytes,of,all,the,attributes,in,the,attribute,list,that,begins,with,this,attribute,this,size,includes,the,6,header,bytes,and,per,attribute,also,adds,the,attribute,type,names,to,the,constant,pool,param,symbol,table,where,the,constants,used,in,the,attributes,must,be,stored,return,the,size,of,all,the,attributes,in,this,attribute,list,this,size,includes,the,size,of,the,attribute,headers;final,int,compute,attributes,size,final,symbol,table,symbol,table,final,byte,code,null,final,int,code,length,0,final,int,max,stack,1,final,int,max,locals,1,return,compute,attributes,size,symbol,table,code,code,length,max,stack,max,locals
Attribute -> final int computeAttributesSize(final SymbolTable symbolTable);1536664245;Returns the total size in bytes of all the attributes in the attribute list that begins with_this attribute. This size includes the 6 header bytes (attribute_name_index and_attribute_length) per attribute. Also adds the attribute type names to the constant pool.__@param symbolTable where the constants used in the attributes must be stored._@return the size of all the attributes in this attribute list. This size includes the size of_the attribute headers.;final int computeAttributesSize(final SymbolTable symbolTable) {_    final byte[] code = null__    final int codeLength = 0__    final int maxStack = -1__    final int maxLocals = -1__    return computeAttributesSize(symbolTable, code, codeLength, maxStack, maxLocals)__  };returns,the,total,size,in,bytes,of,all,the,attributes,in,the,attribute,list,that,begins,with,this,attribute,this,size,includes,the,6,header,bytes,and,per,attribute,also,adds,the,attribute,type,names,to,the,constant,pool,param,symbol,table,where,the,constants,used,in,the,attributes,must,be,stored,return,the,size,of,all,the,attributes,in,this,attribute,list,this,size,includes,the,size,of,the,attribute,headers;final,int,compute,attributes,size,final,symbol,table,symbol,table,final,byte,code,null,final,int,code,length,0,final,int,max,stack,1,final,int,max,locals,1,return,compute,attributes,size,symbol,table,code,code,length,max,stack,max,locals
Attribute -> final void putAttributes(       final SymbolTable symbolTable,       final byte[] code,       final int codeLength,       final int maxStack,       final int maxLocals,       final ByteVector output);1531241461;Puts all the attributes of the attribute list that begins with this attribute, in the given_byte vector. This includes the 6 header bytes (attribute_name_index and attribute_length) per_attribute.__@param symbolTable where the constants used in the attributes must be stored._@param code the bytecode of the method corresponding to these code attributes, or <tt>null</tt>_if they are not code attributes. Corresponds to the 'code' field of the Code attribute._@param codeLength the length of the bytecode of the method corresponding to these code_attributes, or 0 if they are not code attributes. Corresponds to the 'code_length' field of_the Code attribute._@param maxStack the maximum stack size of the method corresponding to these code attributes, or_-1 if they are not code attributes._@param maxLocals the maximum number of local variables of the method corresponding to these_code attributes, or -1 if they are not code attribute._@param output where the attributes must be written.;final void putAttributes(_      final SymbolTable symbolTable,_      final byte[] code,_      final int codeLength,_      final int maxStack,_      final int maxLocals,_      final ByteVector output) {_    final ClassWriter classWriter = symbolTable.classWriter__    Attribute attribute = this__    while (attribute != null) {_      ByteVector attributeContent =_          attribute.write(classWriter, code, codeLength, maxStack, maxLocals)__      _      output.putShort(symbolTable.addConstantUtf8(attribute.type)).putInt(attributeContent.length)__      output.putByteArray(attributeContent.data, 0, attributeContent.length)__      attribute = attribute.nextAttribute__    }_  };puts,all,the,attributes,of,the,attribute,list,that,begins,with,this,attribute,in,the,given,byte,vector,this,includes,the,6,header,bytes,and,per,attribute,param,symbol,table,where,the,constants,used,in,the,attributes,must,be,stored,param,code,the,bytecode,of,the,method,corresponding,to,these,code,attributes,or,tt,null,tt,if,they,are,not,code,attributes,corresponds,to,the,code,field,of,the,code,attribute,param,code,length,the,length,of,the,bytecode,of,the,method,corresponding,to,these,code,attributes,or,0,if,they,are,not,code,attributes,corresponds,to,the,field,of,the,code,attribute,param,max,stack,the,maximum,stack,size,of,the,method,corresponding,to,these,code,attributes,or,1,if,they,are,not,code,attributes,param,max,locals,the,maximum,number,of,local,variables,of,the,method,corresponding,to,these,code,attributes,or,1,if,they,are,not,code,attribute,param,output,where,the,attributes,must,be,written;final,void,put,attributes,final,symbol,table,symbol,table,final,byte,code,final,int,code,length,final,int,max,stack,final,int,max,locals,final,byte,vector,output,final,class,writer,class,writer,symbol,table,class,writer,attribute,attribute,this,while,attribute,null,byte,vector,attribute,content,attribute,write,class,writer,code,code,length,max,stack,max,locals,output,put,short,symbol,table,add,constant,utf8,attribute,type,put,int,attribute,content,length,output,put,byte,array,attribute,content,data,0,attribute,content,length,attribute,attribute,next,attribute
Attribute -> final void putAttributes(       final SymbolTable symbolTable,       final byte[] code,       final int codeLength,       final int maxStack,       final int maxLocals,       final ByteVector output);1536664245;Puts all the attributes of the attribute list that begins with this attribute, in the given_byte vector. This includes the 6 header bytes (attribute_name_index and attribute_length) per_attribute.__@param symbolTable where the constants used in the attributes must be stored._@param code the bytecode of the method corresponding to these code attributes, or {@literal_null} if they are not code attributes. Corresponds to the 'code' field of the Code_attribute._@param codeLength the length of the bytecode of the method corresponding to these code_attributes, or 0 if they are not code attributes. Corresponds to the 'code_length' field of_the Code attribute._@param maxStack the maximum stack size of the method corresponding to these code attributes, or_-1 if they are not code attributes._@param maxLocals the maximum number of local variables of the method corresponding to these_code attributes, or -1 if they are not code attribute._@param output where the attributes must be written.;final void putAttributes(_      final SymbolTable symbolTable,_      final byte[] code,_      final int codeLength,_      final int maxStack,_      final int maxLocals,_      final ByteVector output) {_    final ClassWriter classWriter = symbolTable.classWriter__    Attribute attribute = this__    while (attribute != null) {_      ByteVector attributeContent =_          attribute.write(classWriter, code, codeLength, maxStack, maxLocals)__      _      output.putShort(symbolTable.addConstantUtf8(attribute.type)).putInt(attributeContent.length)__      output.putByteArray(attributeContent.data, 0, attributeContent.length)__      attribute = attribute.nextAttribute__    }_  };puts,all,the,attributes,of,the,attribute,list,that,begins,with,this,attribute,in,the,given,byte,vector,this,includes,the,6,header,bytes,and,per,attribute,param,symbol,table,where,the,constants,used,in,the,attributes,must,be,stored,param,code,the,bytecode,of,the,method,corresponding,to,these,code,attributes,or,literal,null,if,they,are,not,code,attributes,corresponds,to,the,code,field,of,the,code,attribute,param,code,length,the,length,of,the,bytecode,of,the,method,corresponding,to,these,code,attributes,or,0,if,they,are,not,code,attributes,corresponds,to,the,field,of,the,code,attribute,param,max,stack,the,maximum,stack,size,of,the,method,corresponding,to,these,code,attributes,or,1,if,they,are,not,code,attributes,param,max,locals,the,maximum,number,of,local,variables,of,the,method,corresponding,to,these,code,attributes,or,1,if,they,are,not,code,attribute,param,output,where,the,attributes,must,be,written;final,void,put,attributes,final,symbol,table,symbol,table,final,byte,code,final,int,code,length,final,int,max,stack,final,int,max,locals,final,byte,vector,output,final,class,writer,class,writer,symbol,table,class,writer,attribute,attribute,this,while,attribute,null,byte,vector,attribute,content,attribute,write,class,writer,code,code,length,max,stack,max,locals,output,put,short,symbol,table,add,constant,utf8,attribute,type,put,int,attribute,content,length,output,put,byte,array,attribute,content,data,0,attribute,content,length,attribute,attribute,next,attribute
Attribute -> public boolean isUnknown();1366718246;Returns <tt>true</tt> if this type of attribute is unknown. The default_implementation of this method always returns <tt>true</tt>.__@return <tt>true</tt> if this type of attribute is unknown.;public boolean isUnknown() {_        return true__    };returns,tt,true,tt,if,this,type,of,attribute,is,unknown,the,default,implementation,of,this,method,always,returns,tt,true,tt,return,tt,true,tt,if,this,type,of,attribute,is,unknown;public,boolean,is,unknown,return,true
Attribute -> public boolean isUnknown();1531241461;Returns <tt>true</tt> if this type of attribute is unknown. This means that the attribute_content can't be parsed to extract constant pool references, labels, etc. Instead, the_attribute content is read as an opaque byte array, and written back as is. This can lead to_invalid attributes, if the content actually contains constant pool references, labels, or other_symbolic references that need to be updated when there are changes to the constant pool, the_method bytecode, etc. The default implementation of this method always returns <tt>true</tt>.__@return <tt>true</tt> if this type of attribute is unknown.;public boolean isUnknown() {_    return true__  };returns,tt,true,tt,if,this,type,of,attribute,is,unknown,this,means,that,the,attribute,content,can,t,be,parsed,to,extract,constant,pool,references,labels,etc,instead,the,attribute,content,is,read,as,an,opaque,byte,array,and,written,back,as,is,this,can,lead,to,invalid,attributes,if,the,content,actually,contains,constant,pool,references,labels,or,other,symbolic,references,that,need,to,be,updated,when,there,are,changes,to,the,constant,pool,the,method,bytecode,etc,the,default,implementation,of,this,method,always,returns,tt,true,tt,return,tt,true,tt,if,this,type,of,attribute,is,unknown;public,boolean,is,unknown,return,true
Attribute -> public boolean isUnknown();1536664245;Returns {@literal true} if this type of attribute is unknown. This means that the attribute_content can't be parsed to extract constant pool references, labels, etc. Instead, the_attribute content is read as an opaque byte array, and written back as is. This can lead to_invalid attributes, if the content actually contains constant pool references, labels, or other_symbolic references that need to be updated when there are changes to the constant pool, the_method bytecode, etc. The default implementation of this method always returns {@literal true}.__@return {@literal true} if this type of attribute is unknown.;public boolean isUnknown() {_    return true__  };returns,literal,true,if,this,type,of,attribute,is,unknown,this,means,that,the,attribute,content,can,t,be,parsed,to,extract,constant,pool,references,labels,etc,instead,the,attribute,content,is,read,as,an,opaque,byte,array,and,written,back,as,is,this,can,lead,to,invalid,attributes,if,the,content,actually,contains,constant,pool,references,labels,or,other,symbolic,references,that,need,to,be,updated,when,there,are,changes,to,the,constant,pool,the,method,bytecode,etc,the,default,implementation,of,this,method,always,returns,literal,true,return,literal,true,if,this,type,of,attribute,is,unknown;public,boolean,is,unknown,return,true
Attribute -> final int getAttributeCount();1531241461;Returns the number of attributes of the attribute list that begins with this attribute.__@return the number of attributes of the attribute list that begins with this attribute.;final int getAttributeCount() {_    int count = 0__    Attribute attribute = this__    while (attribute != null) {_      count += 1__      attribute = attribute.nextAttribute__    }_    return count__  };returns,the,number,of,attributes,of,the,attribute,list,that,begins,with,this,attribute,return,the,number,of,attributes,of,the,attribute,list,that,begins,with,this,attribute;final,int,get,attribute,count,int,count,0,attribute,attribute,this,while,attribute,null,count,1,attribute,attribute,next,attribute,return,count
Attribute -> final int getAttributeCount();1536664245;Returns the number of attributes of the attribute list that begins with this attribute.__@return the number of attributes of the attribute list that begins with this attribute.;final int getAttributeCount() {_    int count = 0__    Attribute attribute = this__    while (attribute != null) {_      count += 1__      attribute = attribute.nextAttribute__    }_    return count__  };returns,the,number,of,attributes,of,the,attribute,list,that,begins,with,this,attribute,return,the,number,of,attributes,of,the,attribute,list,that,begins,with,this,attribute;final,int,get,attribute,count,int,count,0,attribute,attribute,this,while,attribute,null,count,1,attribute,attribute,next,attribute,return,count
Attribute -> final int computeAttributesSize(       final SymbolTable symbolTable,       final byte[] code,       final int codeLength,       final int maxStack,       final int maxLocals);1531241461;Returns the total size in bytes of all the attributes in the attribute list that begins with_this attribute. This size includes the 6 header bytes (attribute_name_index and_attribute_length) per attribute. Also adds the attribute type names to the constant pool.__@param symbolTable where the constants used in the attributes must be stored._@param code the bytecode of the method corresponding to these code attributes, or <tt>null</tt>_if they are not code attributes. Corresponds to the 'code' field of the Code attribute._@param codeLength the length of the bytecode of the method corresponding to these code_attributes, or 0 if they are not code attributes. Corresponds to the 'code_length' field of_the Code attribute._@param maxStack the maximum stack size of the method corresponding to these code attributes, or_-1 if they are not code attributes._@param maxLocals the maximum number of local variables of the method corresponding to these_code attributes, or -1 if they are not code attribute._@return the size of all the attributes in this attribute list. This size includes the size of_the attribute headers.;final int computeAttributesSize(_      final SymbolTable symbolTable,_      final byte[] code,_      final int codeLength,_      final int maxStack,_      final int maxLocals) {_    final ClassWriter classWriter = symbolTable.classWriter__    int size = 0__    Attribute attribute = this__    while (attribute != null) {_      symbolTable.addConstantUtf8(attribute.type)__      size += 6 + attribute.write(classWriter, code, codeLength, maxStack, maxLocals).length__      attribute = attribute.nextAttribute__    }_    return size__  };returns,the,total,size,in,bytes,of,all,the,attributes,in,the,attribute,list,that,begins,with,this,attribute,this,size,includes,the,6,header,bytes,and,per,attribute,also,adds,the,attribute,type,names,to,the,constant,pool,param,symbol,table,where,the,constants,used,in,the,attributes,must,be,stored,param,code,the,bytecode,of,the,method,corresponding,to,these,code,attributes,or,tt,null,tt,if,they,are,not,code,attributes,corresponds,to,the,code,field,of,the,code,attribute,param,code,length,the,length,of,the,bytecode,of,the,method,corresponding,to,these,code,attributes,or,0,if,they,are,not,code,attributes,corresponds,to,the,field,of,the,code,attribute,param,max,stack,the,maximum,stack,size,of,the,method,corresponding,to,these,code,attributes,or,1,if,they,are,not,code,attributes,param,max,locals,the,maximum,number,of,local,variables,of,the,method,corresponding,to,these,code,attributes,or,1,if,they,are,not,code,attribute,return,the,size,of,all,the,attributes,in,this,attribute,list,this,size,includes,the,size,of,the,attribute,headers;final,int,compute,attributes,size,final,symbol,table,symbol,table,final,byte,code,final,int,code,length,final,int,max,stack,final,int,max,locals,final,class,writer,class,writer,symbol,table,class,writer,int,size,0,attribute,attribute,this,while,attribute,null,symbol,table,add,constant,utf8,attribute,type,size,6,attribute,write,class,writer,code,code,length,max,stack,max,locals,length,attribute,attribute,next,attribute,return,size
Attribute -> final int computeAttributesSize(       final SymbolTable symbolTable,       final byte[] code,       final int codeLength,       final int maxStack,       final int maxLocals);1536664245;Returns the total size in bytes of all the attributes in the attribute list that begins with_this attribute. This size includes the 6 header bytes (attribute_name_index and_attribute_length) per attribute. Also adds the attribute type names to the constant pool.__@param symbolTable where the constants used in the attributes must be stored._@param code the bytecode of the method corresponding to these code attributes, or {@literal_null} if they are not code attributes. Corresponds to the 'code' field of the Code_attribute._@param codeLength the length of the bytecode of the method corresponding to these code_attributes, or 0 if they are not code attributes. Corresponds to the 'code_length' field of_the Code attribute._@param maxStack the maximum stack size of the method corresponding to these code attributes, or_-1 if they are not code attributes._@param maxLocals the maximum number of local variables of the method corresponding to these_code attributes, or -1 if they are not code attribute._@return the size of all the attributes in this attribute list. This size includes the size of_the attribute headers.;final int computeAttributesSize(_      final SymbolTable symbolTable,_      final byte[] code,_      final int codeLength,_      final int maxStack,_      final int maxLocals) {_    final ClassWriter classWriter = symbolTable.classWriter__    int size = 0__    Attribute attribute = this__    while (attribute != null) {_      symbolTable.addConstantUtf8(attribute.type)__      size += 6 + attribute.write(classWriter, code, codeLength, maxStack, maxLocals).length__      attribute = attribute.nextAttribute__    }_    return size__  };returns,the,total,size,in,bytes,of,all,the,attributes,in,the,attribute,list,that,begins,with,this,attribute,this,size,includes,the,6,header,bytes,and,per,attribute,also,adds,the,attribute,type,names,to,the,constant,pool,param,symbol,table,where,the,constants,used,in,the,attributes,must,be,stored,param,code,the,bytecode,of,the,method,corresponding,to,these,code,attributes,or,literal,null,if,they,are,not,code,attributes,corresponds,to,the,code,field,of,the,code,attribute,param,code,length,the,length,of,the,bytecode,of,the,method,corresponding,to,these,code,attributes,or,0,if,they,are,not,code,attributes,corresponds,to,the,field,of,the,code,attribute,param,max,stack,the,maximum,stack,size,of,the,method,corresponding,to,these,code,attributes,or,1,if,they,are,not,code,attributes,param,max,locals,the,maximum,number,of,local,variables,of,the,method,corresponding,to,these,code,attributes,or,1,if,they,are,not,code,attribute,return,the,size,of,all,the,attributes,in,this,attribute,list,this,size,includes,the,size,of,the,attribute,headers;final,int,compute,attributes,size,final,symbol,table,symbol,table,final,byte,code,final,int,code,length,final,int,max,stack,final,int,max,locals,final,class,writer,class,writer,symbol,table,class,writer,int,size,0,attribute,attribute,this,while,attribute,null,symbol,table,add,constant,utf8,attribute,type,size,6,attribute,write,class,writer,code,code,length,max,stack,max,locals,length,attribute,attribute,next,attribute,return,size
Attribute -> final void putAttributes(final SymbolTable symbolTable, final ByteVector output);1531241461;Puts all the attributes of the attribute list that begins with this attribute, in the given_byte vector. This includes the 6 header bytes (attribute_name_index and attribute_length) per_attribute.__@param symbolTable where the constants used in the attributes must be stored._@param output where the attributes must be written.;final void putAttributes(final SymbolTable symbolTable, final ByteVector output) {_    final byte[] code = null__    final int codeLength = 0__    final int maxStack = -1__    final int maxLocals = -1__    putAttributes(symbolTable, code, codeLength, maxStack, maxLocals, output)__  };puts,all,the,attributes,of,the,attribute,list,that,begins,with,this,attribute,in,the,given,byte,vector,this,includes,the,6,header,bytes,and,per,attribute,param,symbol,table,where,the,constants,used,in,the,attributes,must,be,stored,param,output,where,the,attributes,must,be,written;final,void,put,attributes,final,symbol,table,symbol,table,final,byte,vector,output,final,byte,code,null,final,int,code,length,0,final,int,max,stack,1,final,int,max,locals,1,put,attributes,symbol,table,code,code,length,max,stack,max,locals,output
Attribute -> final void putAttributes(final SymbolTable symbolTable, final ByteVector output);1536664245;Puts all the attributes of the attribute list that begins with this attribute, in the given_byte vector. This includes the 6 header bytes (attribute_name_index and attribute_length) per_attribute.__@param symbolTable where the constants used in the attributes must be stored._@param output where the attributes must be written.;final void putAttributes(final SymbolTable symbolTable, final ByteVector output) {_    final byte[] code = null__    final int codeLength = 0__    final int maxStack = -1__    final int maxLocals = -1__    putAttributes(symbolTable, code, codeLength, maxStack, maxLocals, output)__  };puts,all,the,attributes,of,the,attribute,list,that,begins,with,this,attribute,in,the,given,byte,vector,this,includes,the,6,header,bytes,and,per,attribute,param,symbol,table,where,the,constants,used,in,the,attributes,must,be,stored,param,output,where,the,attributes,must,be,written;final,void,put,attributes,final,symbol,table,symbol,table,final,byte,vector,output,final,byte,code,null,final,int,code,length,0,final,int,max,stack,1,final,int,max,locals,1,put,attributes,symbol,table,code,code,length,max,stack,max,locals,output
Attribute -> public boolean isCodeAttribute();1366718246;Returns <tt>true</tt> if this type of attribute is a code attribute.__@return <tt>true</tt> if this type of attribute is a code attribute.;public boolean isCodeAttribute() {_        return false__    };returns,tt,true,tt,if,this,type,of,attribute,is,a,code,attribute,return,tt,true,tt,if,this,type,of,attribute,is,a,code,attribute;public,boolean,is,code,attribute,return,false
Attribute -> public boolean isCodeAttribute();1531241461;Returns <tt>true</tt> if this type of attribute is a code attribute.__@return <tt>true</tt> if this type of attribute is a code attribute.;public boolean isCodeAttribute() {_    return false__  };returns,tt,true,tt,if,this,type,of,attribute,is,a,code,attribute,return,tt,true,tt,if,this,type,of,attribute,is,a,code,attribute;public,boolean,is,code,attribute,return,false
Attribute -> public boolean isCodeAttribute();1536664245;Returns {@literal true} if this type of attribute is a code attribute.__@return {@literal true} if this type of attribute is a code attribute.;public boolean isCodeAttribute() {_    return false__  };returns,literal,true,if,this,type,of,attribute,is,a,code,attribute,return,literal,true,if,this,type,of,attribute,is,a,code,attribute;public,boolean,is,code,attribute,return,false
Attribute -> protected ByteVector write(       final ClassWriter classWriter,       final byte[] code,       final int codeLength,       final int maxStack,       final int maxLocals);1531241461;Returns the byte array form of the content of this attribute. The 6 header bytes_(attribute_name_index and attribute_length) must <i>not</i> be added in the returned_ByteVector.__@param classWriter the class to which this attribute must be added. This parameter can be used_to add the items that corresponds to this attribute to the constant pool of this class._@param code the bytecode of the method corresponding to this code attribute, or <tt>null</tt>_if this attribute is not a code attribute. Corresponds to the 'code' field of the Code_attribute._@param codeLength the length of the bytecode of the method corresponding to this code_attribute, or 0 if this attribute is not a code attribute. Corresponds to the 'code_length'_field of the Code attribute._@param maxStack the maximum stack size of the method corresponding to this code attribute, or_-1 if this attribute is not a code attribute._@param maxLocals the maximum number of local variables of the method corresponding to this code_attribute, or -1 if this attribute is not a code attribute._@return the byte array form of this attribute.;protected ByteVector write(_      final ClassWriter classWriter,_      final byte[] code,_      final int codeLength,_      final int maxStack,_      final int maxLocals) {_    return new ByteVector(content)__  };returns,the,byte,array,form,of,the,content,of,this,attribute,the,6,header,bytes,and,must,i,not,i,be,added,in,the,returned,byte,vector,param,class,writer,the,class,to,which,this,attribute,must,be,added,this,parameter,can,be,used,to,add,the,items,that,corresponds,to,this,attribute,to,the,constant,pool,of,this,class,param,code,the,bytecode,of,the,method,corresponding,to,this,code,attribute,or,tt,null,tt,if,this,attribute,is,not,a,code,attribute,corresponds,to,the,code,field,of,the,code,attribute,param,code,length,the,length,of,the,bytecode,of,the,method,corresponding,to,this,code,attribute,or,0,if,this,attribute,is,not,a,code,attribute,corresponds,to,the,field,of,the,code,attribute,param,max,stack,the,maximum,stack,size,of,the,method,corresponding,to,this,code,attribute,or,1,if,this,attribute,is,not,a,code,attribute,param,max,locals,the,maximum,number,of,local,variables,of,the,method,corresponding,to,this,code,attribute,or,1,if,this,attribute,is,not,a,code,attribute,return,the,byte,array,form,of,this,attribute;protected,byte,vector,write,final,class,writer,class,writer,final,byte,code,final,int,code,length,final,int,max,stack,final,int,max,locals,return,new,byte,vector,content
Attribute -> protected ByteVector write(       final ClassWriter classWriter,       final byte[] code,       final int codeLength,       final int maxStack,       final int maxLocals);1536664245;Returns the byte array form of the content of this attribute. The 6 header bytes_(attribute_name_index and attribute_length) must <i>not</i> be added in the returned_ByteVector.__@param classWriter the class to which this attribute must be added. This parameter can be used_to add the items that corresponds to this attribute to the constant pool of this class._@param code the bytecode of the method corresponding to this code attribute, or {@literal null}_if this attribute is not a code attribute. Corresponds to the 'code' field of the Code_attribute._@param codeLength the length of the bytecode of the method corresponding to this code_attribute, or 0 if this attribute is not a code attribute. Corresponds to the 'code_length'_field of the Code attribute._@param maxStack the maximum stack size of the method corresponding to this code attribute, or_-1 if this attribute is not a code attribute._@param maxLocals the maximum number of local variables of the method corresponding to this code_attribute, or -1 if this attribute is not a code attribute._@return the byte array form of this attribute.;protected ByteVector write(_      final ClassWriter classWriter,_      final byte[] code,_      final int codeLength,_      final int maxStack,_      final int maxLocals) {_    return new ByteVector(content)__  };returns,the,byte,array,form,of,the,content,of,this,attribute,the,6,header,bytes,and,must,i,not,i,be,added,in,the,returned,byte,vector,param,class,writer,the,class,to,which,this,attribute,must,be,added,this,parameter,can,be,used,to,add,the,items,that,corresponds,to,this,attribute,to,the,constant,pool,of,this,class,param,code,the,bytecode,of,the,method,corresponding,to,this,code,attribute,or,literal,null,if,this,attribute,is,not,a,code,attribute,corresponds,to,the,code,field,of,the,code,attribute,param,code,length,the,length,of,the,bytecode,of,the,method,corresponding,to,this,code,attribute,or,0,if,this,attribute,is,not,a,code,attribute,corresponds,to,the,field,of,the,code,attribute,param,max,stack,the,maximum,stack,size,of,the,method,corresponding,to,this,code,attribute,or,1,if,this,attribute,is,not,a,code,attribute,param,max,locals,the,maximum,number,of,local,variables,of,the,method,corresponding,to,this,code,attribute,or,1,if,this,attribute,is,not,a,code,attribute,return,the,byte,array,form,of,this,attribute;protected,byte,vector,write,final,class,writer,class,writer,final,byte,code,final,int,code,length,final,int,max,stack,final,int,max,locals,return,new,byte,vector,content
Attribute -> protected Attribute read(       final ClassReader classReader,       final int offset,       final int length,       final char[] charBuffer,       final int codeAttributeOffset,       final Label[] labels);1531241461;Reads a {@link #type} attribute. This method must return a <i>new</i> {@link Attribute} object,_of type {@link #type}, corresponding to the 'length' bytes starting at 'offset', in the given_ClassReader.__@param classReader the class that contains the attribute to be read._@param offset index of the first byte of the attribute's content in {@link ClassReader#b}. The_6 attribute header bytes (attribute_name_index and attribute_length) are not taken into_account here._@param length the length of the attribute's content (excluding the 6 attribute header bytes)._@param charBuffer the buffer to be used to call the ClassReader methods requiring a_'charBuffer' parameter._@param codeAttributeOffset index of the first byte of content of the enclosing Code attribute_in {@link ClassReader#b}, or -1 if the attribute to be read is not a code attribute. The 6_attribute header bytes (attribute_name_index and attribute_length) are not taken into_account here._@param labels the labels of the method's code, or <tt>null</tt> if the attribute to be read is_not a code attribute._@return a <i>new</i> {@link Attribute} object corresponding to the specified bytes.;protected Attribute read(_      final ClassReader classReader,_      final int offset,_      final int length,_      final char[] charBuffer,_      final int codeAttributeOffset,_      final Label[] labels) {_    Attribute attribute = new Attribute(type)__    attribute.content = new byte[length]__    System.arraycopy(classReader.b, offset, attribute.content, 0, length)__    return attribute__  };reads,a,link,type,attribute,this,method,must,return,a,i,new,i,link,attribute,object,of,type,link,type,corresponding,to,the,length,bytes,starting,at,offset,in,the,given,class,reader,param,class,reader,the,class,that,contains,the,attribute,to,be,read,param,offset,index,of,the,first,byte,of,the,attribute,s,content,in,link,class,reader,b,the,6,attribute,header,bytes,and,are,not,taken,into,account,here,param,length,the,length,of,the,attribute,s,content,excluding,the,6,attribute,header,bytes,param,char,buffer,the,buffer,to,be,used,to,call,the,class,reader,methods,requiring,a,char,buffer,parameter,param,code,attribute,offset,index,of,the,first,byte,of,content,of,the,enclosing,code,attribute,in,link,class,reader,b,or,1,if,the,attribute,to,be,read,is,not,a,code,attribute,the,6,attribute,header,bytes,and,are,not,taken,into,account,here,param,labels,the,labels,of,the,method,s,code,or,tt,null,tt,if,the,attribute,to,be,read,is,not,a,code,attribute,return,a,i,new,i,link,attribute,object,corresponding,to,the,specified,bytes;protected,attribute,read,final,class,reader,class,reader,final,int,offset,final,int,length,final,char,char,buffer,final,int,code,attribute,offset,final,label,labels,attribute,attribute,new,attribute,type,attribute,content,new,byte,length,system,arraycopy,class,reader,b,offset,attribute,content,0,length,return,attribute
Attribute -> protected Attribute read(       final ClassReader classReader,       final int offset,       final int length,       final char[] charBuffer,       final int codeAttributeOffset,       final Label[] labels);1536664245;Reads a {@link #type} attribute. This method must return a <i>new</i> {@link Attribute} object,_of type {@link #type}, corresponding to the 'length' bytes starting at 'offset', in the given_ClassReader.__@param classReader the class that contains the attribute to be read._@param offset index of the first byte of the attribute's content in {@link ClassReader#b}. The_6 attribute header bytes (attribute_name_index and attribute_length) are not taken into_account here._@param length the length of the attribute's content (excluding the 6 attribute header bytes)._@param charBuffer the buffer to be used to call the ClassReader methods requiring a_'charBuffer' parameter._@param codeAttributeOffset index of the first byte of content of the enclosing Code attribute_in {@link ClassReader#b}, or -1 if the attribute to be read is not a code attribute. The 6_attribute header bytes (attribute_name_index and attribute_length) are not taken into_account here._@param labels the labels of the method's code, or {@literal null} if the attribute to be read_is not a code attribute._@return a <i>new</i> {@link Attribute} object corresponding to the specified bytes.;protected Attribute read(_      final ClassReader classReader,_      final int offset,_      final int length,_      final char[] charBuffer,_      final int codeAttributeOffset,_      final Label[] labels) {_    Attribute attribute = new Attribute(type)__    attribute.content = new byte[length]__    System.arraycopy(classReader.b, offset, attribute.content, 0, length)__    return attribute__  };reads,a,link,type,attribute,this,method,must,return,a,i,new,i,link,attribute,object,of,type,link,type,corresponding,to,the,length,bytes,starting,at,offset,in,the,given,class,reader,param,class,reader,the,class,that,contains,the,attribute,to,be,read,param,offset,index,of,the,first,byte,of,the,attribute,s,content,in,link,class,reader,b,the,6,attribute,header,bytes,and,are,not,taken,into,account,here,param,length,the,length,of,the,attribute,s,content,excluding,the,6,attribute,header,bytes,param,char,buffer,the,buffer,to,be,used,to,call,the,class,reader,methods,requiring,a,char,buffer,parameter,param,code,attribute,offset,index,of,the,first,byte,of,content,of,the,enclosing,code,attribute,in,link,class,reader,b,or,1,if,the,attribute,to,be,read,is,not,a,code,attribute,the,6,attribute,header,bytes,and,are,not,taken,into,account,here,param,labels,the,labels,of,the,method,s,code,or,literal,null,if,the,attribute,to,be,read,is,not,a,code,attribute,return,a,i,new,i,link,attribute,object,corresponding,to,the,specified,bytes;protected,attribute,read,final,class,reader,class,reader,final,int,offset,final,int,length,final,char,char,buffer,final,int,code,attribute,offset,final,label,labels,attribute,attribute,new,attribute,type,attribute,content,new,byte,length,system,arraycopy,class,reader,b,offset,attribute,content,0,length,return,attribute
Attribute -> protected Attribute(final String type);1366718246;Constructs a new empty attribute.__@param type_the type of the attribute.;protected Attribute(final String type) {_        this.type = type__    };constructs,a,new,empty,attribute,param,type,the,type,of,the,attribute;protected,attribute,final,string,type,this,type,type
Attribute -> protected Attribute(final String type);1531241461;Constructs a new empty attribute.__@param type the type of the attribute.;protected Attribute(final String type) {_    this.type = type__  };constructs,a,new,empty,attribute,param,type,the,type,of,the,attribute;protected,attribute,final,string,type,this,type,type
Attribute -> protected Attribute(final String type);1536664245;Constructs a new empty attribute.__@param type the type of the attribute.;protected Attribute(final String type) {_    this.type = type__  };constructs,a,new,empty,attribute,param,type,the,type,of,the,attribute;protected,attribute,final,string,type,this,type,type
Attribute -> protected Label[] getLabels();1366718246;Returns the labels corresponding to this attribute.__@return the labels corresponding to this attribute, or <tt>null</tt> if_this attribute is not a code attribute that contains labels.;protected Label[] getLabels() {_        return null__    };returns,the,labels,corresponding,to,this,attribute,return,the,labels,corresponding,to,this,attribute,or,tt,null,tt,if,this,attribute,is,not,a,code,attribute,that,contains,labels;protected,label,get,labels,return,null
Attribute -> protected Label[] getLabels();1531241461;Returns the labels corresponding to this attribute.__@return the labels corresponding to this attribute, or <tt>null</tt> if this attribute is not a_code attribute that contains labels.;protected Label[] getLabels() {_    return new Label[0]__  };returns,the,labels,corresponding,to,this,attribute,return,the,labels,corresponding,to,this,attribute,or,tt,null,tt,if,this,attribute,is,not,a,code,attribute,that,contains,labels;protected,label,get,labels,return,new,label,0
Attribute -> protected Label[] getLabels();1536664245;Returns the labels corresponding to this attribute.__@return the labels corresponding to this attribute, or {@literal null} if this attribute is not_a code attribute that contains labels.;protected Label[] getLabels() {_    return new Label[0]__  };returns,the,labels,corresponding,to,this,attribute,return,the,labels,corresponding,to,this,attribute,or,literal,null,if,this,attribute,is,not,a,code,attribute,that,contains,labels;protected,label,get,labels,return,new,label,0
