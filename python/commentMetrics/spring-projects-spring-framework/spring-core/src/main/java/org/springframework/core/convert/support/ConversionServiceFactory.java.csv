commented;modifiers;parameterAmount;loc;comment;code
true;public,static;2;19;/**  * Register the given Converter objects with the given target ConverterRegistry.  * @param converters the converter objects: implementing {@link Converter},  * {@link ConverterFactory}, or {@link GenericConverter}  * @param registry the target registry  */ ;/**  * Register the given Converter objects with the given target ConverterRegistry.  * @param converters the converter objects: implementing {@link Converter},  * {@link ConverterFactory}, or {@link GenericConverter}  * @param registry the target registry  */ public static void registerConverters(@Nullable Set<?> converters, ConverterRegistry registry) {     if (converters != null) {         for (Object converter : converters) {             if (converter instanceof GenericConverter) {                 registry.addConverter((GenericConverter) converter).             } else if (converter instanceof Converter<?, ?>) {                 registry.addConverter((Converter<?, ?>) converter).             } else if (converter instanceof ConverterFactory<?, ?>) {                 registry.addConverterFactory((ConverterFactory<?, ?>) converter).             } else {                 throw new IllegalArgumentException("Each converter object must implement one of the " + "Converter, ConverterFactory, or GenericConverter interfaces").             }         }     } }
