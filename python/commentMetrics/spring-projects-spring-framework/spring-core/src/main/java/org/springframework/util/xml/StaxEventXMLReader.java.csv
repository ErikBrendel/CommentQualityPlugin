# id;timestamp;commentText;codeText;commentWords;codeWords
StaxEventXMLReader -> StaxEventXMLReader(XMLEventReader reader);1328020251;Constructs a new instance of the <code>StaxEventXmlReader</code> that reads from the given_<code>XMLEventReader</code>. The supplied event reader must be in <code>XMLStreamConstants.START_DOCUMENT</code> or_<code>XMLStreamConstants.START_ELEMENT</code> state.__@param reader the <code>XMLEventReader</code> to read from_@throws IllegalStateException if the reader is not at the start of a document or element;StaxEventXMLReader(XMLEventReader reader) {_		Assert.notNull(reader, "'reader' must not be null")__		try {_			XMLEvent event = reader.peek()__			if (event != null && !(event.isStartDocument() || event.isStartElement())) {_				throw new IllegalStateException("XMLEventReader not at start of document or element")__			}_		}_		catch (XMLStreamException ex) {_			throw new IllegalStateException("Could not read first element: " + ex.getMessage())__		}__		this.reader = reader__	};constructs,a,new,instance,of,the,code,stax,event,xml,reader,code,that,reads,from,the,given,code,xmlevent,reader,code,the,supplied,event,reader,must,be,in,code,xmlstream,constants,code,or,code,xmlstream,constants,code,state,param,reader,the,code,xmlevent,reader,code,to,read,from,throws,illegal,state,exception,if,the,reader,is,not,at,the,start,of,a,document,or,element;stax,event,xmlreader,xmlevent,reader,reader,assert,not,null,reader,reader,must,not,be,null,try,xmlevent,event,reader,peek,if,event,null,event,is,start,document,event,is,start,element,throw,new,illegal,state,exception,xmlevent,reader,not,at,start,of,document,or,element,catch,xmlstream,exception,ex,throw,new,illegal,state,exception,could,not,read,first,element,ex,get,message,this,reader,reader
StaxEventXMLReader -> StaxEventXMLReader(XMLEventReader reader);1356735495;Constructs a new instance of the {@code StaxEventXmlReader} that reads from the given_{@code XMLEventReader}. The supplied event reader must be in {@code XMLStreamConstants.START_DOCUMENT} or_{@code XMLStreamConstants.START_ELEMENT} state.__@param reader the {@code XMLEventReader} to read from_@throws IllegalStateException if the reader is not at the start of a document or element;StaxEventXMLReader(XMLEventReader reader) {_		Assert.notNull(reader, "'reader' must not be null")__		try {_			XMLEvent event = reader.peek()__			if (event != null && !(event.isStartDocument() || event.isStartElement())) {_				throw new IllegalStateException("XMLEventReader not at start of document or element")__			}_		}_		catch (XMLStreamException ex) {_			throw new IllegalStateException("Could not read first element: " + ex.getMessage())__		}__		this.reader = reader__	};constructs,a,new,instance,of,the,code,stax,event,xml,reader,that,reads,from,the,given,code,xmlevent,reader,the,supplied,event,reader,must,be,in,code,xmlstream,constants,or,code,xmlstream,constants,state,param,reader,the,code,xmlevent,reader,to,read,from,throws,illegal,state,exception,if,the,reader,is,not,at,the,start,of,a,document,or,element;stax,event,xmlreader,xmlevent,reader,reader,assert,not,null,reader,reader,must,not,be,null,try,xmlevent,event,reader,peek,if,event,null,event,is,start,document,event,is,start,element,throw,new,illegal,state,exception,xmlevent,reader,not,at,start,of,document,or,element,catch,xmlstream,exception,ex,throw,new,illegal,state,exception,could,not,read,first,element,ex,get,message,this,reader,reader
StaxEventXMLReader -> StaxEventXMLReader(XMLEventReader reader);1357119239;Constructs a new instance of the {@code StaxEventXmlReader} that reads from the given_{@code XMLEventReader}. The supplied event reader must be in {@code XMLStreamConstants.START_DOCUMENT} or_{@code XMLStreamConstants.START_ELEMENT} state.__@param reader the {@code XMLEventReader} to read from_@throws IllegalStateException if the reader is not at the start of a document or element;StaxEventXMLReader(XMLEventReader reader) {_		Assert.notNull(reader, "'reader' must not be null")__		try {_			XMLEvent event = reader.peek()__			if (event != null && !(event.isStartDocument() || event.isStartElement())) {_				throw new IllegalStateException("XMLEventReader not at start of document or element")__			}_		}_		catch (XMLStreamException ex) {_			throw new IllegalStateException("Could not read first element: " + ex.getMessage())__		}__		this.reader = reader__	};constructs,a,new,instance,of,the,code,stax,event,xml,reader,that,reads,from,the,given,code,xmlevent,reader,the,supplied,event,reader,must,be,in,code,xmlstream,constants,or,code,xmlstream,constants,state,param,reader,the,code,xmlevent,reader,to,read,from,throws,illegal,state,exception,if,the,reader,is,not,at,the,start,of,a,document,or,element;stax,event,xmlreader,xmlevent,reader,reader,assert,not,null,reader,reader,must,not,be,null,try,xmlevent,event,reader,peek,if,event,null,event,is,start,document,event,is,start,element,throw,new,illegal,state,exception,xmlevent,reader,not,at,start,of,document,or,element,catch,xmlstream,exception,ex,throw,new,illegal,state,exception,could,not,read,first,element,ex,get,message,this,reader,reader
StaxEventXMLReader -> StaxEventXMLReader(XMLEventReader reader);1368482696;Constructs a new instance of the {@code StaxEventXmlReader} that reads from the given_{@code XMLEventReader}. The supplied event reader must be in {@code XMLStreamConstants.START_DOCUMENT} or_{@code XMLStreamConstants.START_ELEMENT} state.__@param reader the {@code XMLEventReader} to read from_@throws IllegalStateException if the reader is not at the start of a document or element;StaxEventXMLReader(XMLEventReader reader) {_		Assert.notNull(reader, "'reader' must not be null")__		try {_			XMLEvent event = reader.peek()__			if (event != null && !(event.isStartDocument() || event.isStartElement())) {_				throw new IllegalStateException("XMLEventReader not at start of document or element")__			}_		}_		catch (XMLStreamException ex) {_			throw new IllegalStateException("Could not read first element: " + ex.getMessage())__		}__		this.reader = reader__	};constructs,a,new,instance,of,the,code,stax,event,xml,reader,that,reads,from,the,given,code,xmlevent,reader,the,supplied,event,reader,must,be,in,code,xmlstream,constants,or,code,xmlstream,constants,state,param,reader,the,code,xmlevent,reader,to,read,from,throws,illegal,state,exception,if,the,reader,is,not,at,the,start,of,a,document,or,element;stax,event,xmlreader,xmlevent,reader,reader,assert,not,null,reader,reader,must,not,be,null,try,xmlevent,event,reader,peek,if,event,null,event,is,start,document,event,is,start,element,throw,new,illegal,state,exception,xmlevent,reader,not,at,start,of,document,or,element,catch,xmlstream,exception,ex,throw,new,illegal,state,exception,could,not,read,first,element,ex,get,message,this,reader,reader
StaxEventXMLReader -> StaxEventXMLReader(XMLEventReader reader);1383167211;Constructs a new instance of the {@code StaxEventXmlReader} that reads from the given_{@code XMLEventReader}. The supplied event reader must be in {@code XMLStreamConstants.START_DOCUMENT} or_{@code XMLStreamConstants.START_ELEMENT} state._@param reader the {@code XMLEventReader} to read from_@throws IllegalStateException if the reader is not at the start of a document or element;StaxEventXMLReader(XMLEventReader reader) {_		Assert.notNull(reader, "'reader' must not be null")__		try {_			XMLEvent event = reader.peek()__			if (event != null && !(event.isStartDocument() || event.isStartElement())) {_				throw new IllegalStateException("XMLEventReader not at start of document or element")__			}_		}_		catch (XMLStreamException ex) {_			throw new IllegalStateException("Could not read first element: " + ex.getMessage())__		}_		this.reader = reader__	};constructs,a,new,instance,of,the,code,stax,event,xml,reader,that,reads,from,the,given,code,xmlevent,reader,the,supplied,event,reader,must,be,in,code,xmlstream,constants,or,code,xmlstream,constants,state,param,reader,the,code,xmlevent,reader,to,read,from,throws,illegal,state,exception,if,the,reader,is,not,at,the,start,of,a,document,or,element;stax,event,xmlreader,xmlevent,reader,reader,assert,not,null,reader,reader,must,not,be,null,try,xmlevent,event,reader,peek,if,event,null,event,is,start,document,event,is,start,element,throw,new,illegal,state,exception,xmlevent,reader,not,at,start,of,document,or,element,catch,xmlstream,exception,ex,throw,new,illegal,state,exception,could,not,read,first,element,ex,get,message,this,reader,reader
StaxEventXMLReader -> StaxEventXMLReader(XMLEventReader reader);1385412762;Constructs a new instance of the {@code StaxEventXmlReader} that reads from the given_{@code XMLEventReader}. The supplied event reader must be in {@code XMLStreamConstants.START_DOCUMENT} or_{@code XMLStreamConstants.START_ELEMENT} state._@param reader the {@code XMLEventReader} to read from_@throws IllegalStateException if the reader is not at the start of a document or element;StaxEventXMLReader(XMLEventReader reader) {_		Assert.notNull(reader, "'reader' must not be null")__		try {_			XMLEvent event = reader.peek()__			if (event != null && !(event.isStartDocument() || event.isStartElement())) {_				throw new IllegalStateException("XMLEventReader not at start of document or element")__			}_		}_		catch (XMLStreamException ex) {_			throw new IllegalStateException("Could not read first element: " + ex.getMessage())__		}_		this.reader = reader__	};constructs,a,new,instance,of,the,code,stax,event,xml,reader,that,reads,from,the,given,code,xmlevent,reader,the,supplied,event,reader,must,be,in,code,xmlstream,constants,or,code,xmlstream,constants,state,param,reader,the,code,xmlevent,reader,to,read,from,throws,illegal,state,exception,if,the,reader,is,not,at,the,start,of,a,document,or,element;stax,event,xmlreader,xmlevent,reader,reader,assert,not,null,reader,reader,must,not,be,null,try,xmlevent,event,reader,peek,if,event,null,event,is,start,document,event,is,start,element,throw,new,illegal,state,exception,xmlevent,reader,not,at,start,of,document,or,element,catch,xmlstream,exception,ex,throw,new,illegal,state,exception,could,not,read,first,element,ex,get,message,this,reader,reader
StaxEventXMLReader -> StaxEventXMLReader(XMLEventReader reader);1413848647;Constructs a new instance of the {@code StaxEventXmlReader} that reads from the given_{@code XMLEventReader}. The supplied event reader must be in {@code XMLStreamConstants.START_DOCUMENT} or_{@code XMLStreamConstants.START_ELEMENT} state._@param reader the {@code XMLEventReader} to read from_@throws IllegalStateException if the reader is not at the start of a document or element;StaxEventXMLReader(XMLEventReader reader) {_		Assert.notNull(reader, "'reader' must not be null")__		try {_			XMLEvent event = reader.peek()__			if (event != null && !(event.isStartDocument() || event.isStartElement())) {_				throw new IllegalStateException("XMLEventReader not at start of document or element")__			}_		}_		catch (XMLStreamException ex) {_			throw new IllegalStateException("Could not read first element: " + ex.getMessage())__		}_		this.reader = reader__	};constructs,a,new,instance,of,the,code,stax,event,xml,reader,that,reads,from,the,given,code,xmlevent,reader,the,supplied,event,reader,must,be,in,code,xmlstream,constants,or,code,xmlstream,constants,state,param,reader,the,code,xmlevent,reader,to,read,from,throws,illegal,state,exception,if,the,reader,is,not,at,the,start,of,a,document,or,element;stax,event,xmlreader,xmlevent,reader,reader,assert,not,null,reader,reader,must,not,be,null,try,xmlevent,event,reader,peek,if,event,null,event,is,start,document,event,is,start,element,throw,new,illegal,state,exception,xmlevent,reader,not,at,start,of,document,or,element,catch,xmlstream,exception,ex,throw,new,illegal,state,exception,could,not,read,first,element,ex,get,message,this,reader,reader
StaxEventXMLReader -> StaxEventXMLReader(XMLEventReader reader);1496837955;Constructs a new instance of the {@code StaxEventXmlReader} that reads from the given_{@code XMLEventReader}. The supplied event reader must be in {@code XMLStreamConstants.START_DOCUMENT} or_{@code XMLStreamConstants.START_ELEMENT} state._@param reader the {@code XMLEventReader} to read from_@throws IllegalStateException if the reader is not at the start of a document or element;StaxEventXMLReader(XMLEventReader reader) {_		Assert.notNull(reader, "'reader' must not be null")__		try {_			XMLEvent event = reader.peek()__			if (event != null && !(event.isStartDocument() || event.isStartElement())) {_				throw new IllegalStateException("XMLEventReader not at start of document or element")__			}_		}_		catch (XMLStreamException ex) {_			throw new IllegalStateException("Could not read first element: " + ex.getMessage())__		}_		this.reader = reader__	};constructs,a,new,instance,of,the,code,stax,event,xml,reader,that,reads,from,the,given,code,xmlevent,reader,the,supplied,event,reader,must,be,in,code,xmlstream,constants,or,code,xmlstream,constants,state,param,reader,the,code,xmlevent,reader,to,read,from,throws,illegal,state,exception,if,the,reader,is,not,at,the,start,of,a,document,or,element;stax,event,xmlreader,xmlevent,reader,reader,assert,not,null,reader,reader,must,not,be,null,try,xmlevent,event,reader,peek,if,event,null,event,is,start,document,event,is,start,element,throw,new,illegal,state,exception,xmlevent,reader,not,at,start,of,document,or,element,catch,xmlstream,exception,ex,throw,new,illegal,state,exception,could,not,read,first,element,ex,get,message,this,reader,reader
StaxEventXMLReader -> StaxEventXMLReader(XMLEventReader reader);1500495740;Constructs a new instance of the {@code StaxEventXmlReader} that reads from the given_{@code XMLEventReader}. The supplied event reader must be in {@code XMLStreamConstants.START_DOCUMENT} or_{@code XMLStreamConstants.START_ELEMENT} state._@param reader the {@code XMLEventReader} to read from_@throws IllegalStateException if the reader is not at the start of a document or element;StaxEventXMLReader(XMLEventReader reader) {_		Assert.notNull(reader, "XMLEventReader must not be null")__		try {_			XMLEvent event = reader.peek()__			if (event != null && !(event.isStartDocument() || event.isStartElement())) {_				throw new IllegalStateException("XMLEventReader not at start of document or element")__			}_		}_		catch (XMLStreamException ex) {_			throw new IllegalStateException("Could not read first element: " + ex.getMessage())__		}_		this.reader = reader__	};constructs,a,new,instance,of,the,code,stax,event,xml,reader,that,reads,from,the,given,code,xmlevent,reader,the,supplied,event,reader,must,be,in,code,xmlstream,constants,or,code,xmlstream,constants,state,param,reader,the,code,xmlevent,reader,to,read,from,throws,illegal,state,exception,if,the,reader,is,not,at,the,start,of,a,document,or,element;stax,event,xmlreader,xmlevent,reader,reader,assert,not,null,reader,xmlevent,reader,must,not,be,null,try,xmlevent,event,reader,peek,if,event,null,event,is,start,document,event,is,start,element,throw,new,illegal,state,exception,xmlevent,reader,not,at,start,of,document,or,element,catch,xmlstream,exception,ex,throw,new,illegal,state,exception,could,not,read,first,element,ex,get,message,this,reader,reader
StaxEventXMLReader -> StaxEventXMLReader(XMLEventReader reader);1534163797;Constructs a new instance of the {@code StaxEventXmlReader} that reads from_the given {@code XMLEventReader}. The supplied event reader must be in_{@code XMLStreamConstants.START_DOCUMENT} or {@code XMLStreamConstants.START_ELEMENT} state._@param reader the {@code XMLEventReader} to read from_@throws IllegalStateException if the reader is not at the start of a document or element;StaxEventXMLReader(XMLEventReader reader) {_		try {_			XMLEvent event = reader.peek()__			if (event != null && !(event.isStartDocument() || event.isStartElement())) {_				throw new IllegalStateException("XMLEventReader not at start of document or element")__			}_		}_		catch (XMLStreamException ex) {_			throw new IllegalStateException("Could not read first element: " + ex.getMessage())__		}_		this.reader = reader__	};constructs,a,new,instance,of,the,code,stax,event,xml,reader,that,reads,from,the,given,code,xmlevent,reader,the,supplied,event,reader,must,be,in,code,xmlstream,constants,or,code,xmlstream,constants,state,param,reader,the,code,xmlevent,reader,to,read,from,throws,illegal,state,exception,if,the,reader,is,not,at,the,start,of,a,document,or,element;stax,event,xmlreader,xmlevent,reader,reader,try,xmlevent,event,reader,peek,if,event,null,event,is,start,document,event,is,start,element,throw,new,illegal,state,exception,xmlevent,reader,not,at,start,of,document,or,element,catch,xmlstream,exception,ex,throw,new,illegal,state,exception,could,not,read,first,element,ex,get,message,this,reader,reader
