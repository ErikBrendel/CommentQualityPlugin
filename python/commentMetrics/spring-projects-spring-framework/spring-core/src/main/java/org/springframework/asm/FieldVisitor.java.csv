# id;timestamp;commentText;codeText;commentWords;codeWords
FieldVisitor -> public AnnotationVisitor visitTypeAnnotation(       final int typeRef, final TypePath typePath, final String descriptor, final boolean visible);1531241461;Visits an annotation on the type of the field.__@param typeRef a reference to the annotated type. The sort of this type reference must be_{@link TypeReference#FIELD}. See {@link TypeReference}._@param typePath the path to the annotated type argument, wildcard bound, array element type, or_static inner type within 'typeRef'. May be <tt>null</tt> if the annotation targets_'typeRef' as a whole._@param descriptor the class descriptor of the annotation class._@param visible <tt>true</tt> if the annotation is visible at runtime._@return a visitor to visit the annotation values, or <tt>null</tt> if this visitor is not_interested in visiting this annotation.;public AnnotationVisitor visitTypeAnnotation(_      final int typeRef, final TypePath typePath, final String descriptor, final boolean visible) {_    if (api < Opcodes.ASM5) {_      throw new UnsupportedOperationException()__    }_    if (fv != null) {_      return fv.visitTypeAnnotation(typeRef, typePath, descriptor, visible)__    }_    return null__  };visits,an,annotation,on,the,type,of,the,field,param,type,ref,a,reference,to,the,annotated,type,the,sort,of,this,type,reference,must,be,link,type,reference,field,see,link,type,reference,param,type,path,the,path,to,the,annotated,type,argument,wildcard,bound,array,element,type,or,static,inner,type,within,type,ref,may,be,tt,null,tt,if,the,annotation,targets,type,ref,as,a,whole,param,descriptor,the,class,descriptor,of,the,annotation,class,param,visible,tt,true,tt,if,the,annotation,is,visible,at,runtime,return,a,visitor,to,visit,the,annotation,values,or,tt,null,tt,if,this,visitor,is,not,interested,in,visiting,this,annotation;public,annotation,visitor,visit,type,annotation,final,int,type,ref,final,type,path,type,path,final,string,descriptor,final,boolean,visible,if,api,opcodes,asm5,throw,new,unsupported,operation,exception,if,fv,null,return,fv,visit,type,annotation,type,ref,type,path,descriptor,visible,return,null
FieldVisitor -> public AnnotationVisitor visitTypeAnnotation(       final int typeRef, final TypePath typePath, final String descriptor, final boolean visible);1536664245;Visits an annotation on the type of the field.__@param typeRef a reference to the annotated type. The sort of this type reference must be_{@link TypeReference#FIELD}. See {@link TypeReference}._@param typePath the path to the annotated type argument, wildcard bound, array element type, or_static inner type within 'typeRef'. May be {@literal null} if the annotation targets_'typeRef' as a whole._@param descriptor the class descriptor of the annotation class._@param visible {@literal true} if the annotation is visible at runtime._@return a visitor to visit the annotation values, or {@literal null} if this visitor is not_interested in visiting this annotation.;public AnnotationVisitor visitTypeAnnotation(_      final int typeRef, final TypePath typePath, final String descriptor, final boolean visible) {_    if (api < Opcodes.ASM5) {_      throw new UnsupportedOperationException("This feature requires ASM5")__    }_    if (fv != null) {_      return fv.visitTypeAnnotation(typeRef, typePath, descriptor, visible)__    }_    return null__  };visits,an,annotation,on,the,type,of,the,field,param,type,ref,a,reference,to,the,annotated,type,the,sort,of,this,type,reference,must,be,link,type,reference,field,see,link,type,reference,param,type,path,the,path,to,the,annotated,type,argument,wildcard,bound,array,element,type,or,static,inner,type,within,type,ref,may,be,literal,null,if,the,annotation,targets,type,ref,as,a,whole,param,descriptor,the,class,descriptor,of,the,annotation,class,param,visible,literal,true,if,the,annotation,is,visible,at,runtime,return,a,visitor,to,visit,the,annotation,values,or,literal,null,if,this,visitor,is,not,interested,in,visiting,this,annotation;public,annotation,visitor,visit,type,annotation,final,int,type,ref,final,type,path,type,path,final,string,descriptor,final,boolean,visible,if,api,opcodes,asm5,throw,new,unsupported,operation,exception,this,feature,requires,asm5,if,fv,null,return,fv,visit,type,annotation,type,ref,type,path,descriptor,visible,return,null
FieldVisitor -> public AnnotationVisitor visitAnnotation(String desc, boolean visible);1366718246;Visits an annotation of the field.__@param desc_the class descriptor of the annotation class._@param visible_<tt>true</tt> if the annotation is visible at runtime._@return a visitor to visit the annotation values, or <tt>null</tt> if_this visitor is not interested in visiting this annotation.;public AnnotationVisitor visitAnnotation(String desc, boolean visible) {_        if (fv != null) {_            return fv.visitAnnotation(desc, visible)__        }_        return null__    };visits,an,annotation,of,the,field,param,desc,the,class,descriptor,of,the,annotation,class,param,visible,tt,true,tt,if,the,annotation,is,visible,at,runtime,return,a,visitor,to,visit,the,annotation,values,or,tt,null,tt,if,this,visitor,is,not,interested,in,visiting,this,annotation;public,annotation,visitor,visit,annotation,string,desc,boolean,visible,if,fv,null,return,fv,visit,annotation,desc,visible,return,null
FieldVisitor -> public AnnotationVisitor visitAnnotation(String desc, boolean visible);1395273982;Visits an annotation of the field.__@param desc_the class descriptor of the annotation class._@param visible_<tt>true</tt> if the annotation is visible at runtime._@return a visitor to visit the annotation values, or <tt>null</tt> if_this visitor is not interested in visiting this annotation.;public AnnotationVisitor visitAnnotation(String desc, boolean visible) {_        if (fv != null) {_            return fv.visitAnnotation(desc, visible)__        }_        return null__    };visits,an,annotation,of,the,field,param,desc,the,class,descriptor,of,the,annotation,class,param,visible,tt,true,tt,if,the,annotation,is,visible,at,runtime,return,a,visitor,to,visit,the,annotation,values,or,tt,null,tt,if,this,visitor,is,not,interested,in,visiting,this,annotation;public,annotation,visitor,visit,annotation,string,desc,boolean,visible,if,fv,null,return,fv,visit,annotation,desc,visible,return,null
FieldVisitor -> public AnnotationVisitor visitAnnotation(String desc, boolean visible);1397644526;Visits an annotation of the field.__@param desc_the class descriptor of the annotation class._@param visible_<tt>true</tt> if the annotation is visible at runtime._@return a visitor to visit the annotation values, or <tt>null</tt> if_this visitor is not interested in visiting this annotation.;public AnnotationVisitor visitAnnotation(String desc, boolean visible) {_        if (fv != null) {_            return fv.visitAnnotation(desc, visible)__        }_        return null__    };visits,an,annotation,of,the,field,param,desc,the,class,descriptor,of,the,annotation,class,param,visible,tt,true,tt,if,the,annotation,is,visible,at,runtime,return,a,visitor,to,visit,the,annotation,values,or,tt,null,tt,if,this,visitor,is,not,interested,in,visiting,this,annotation;public,annotation,visitor,visit,annotation,string,desc,boolean,visible,if,fv,null,return,fv,visit,annotation,desc,visible,return,null
FieldVisitor -> public AnnotationVisitor visitAnnotation(String desc, boolean visible);1505821772;Visits an annotation of the field.__@param desc_the class descriptor of the annotation class._@param visible_<tt>true</tt> if the annotation is visible at runtime._@return a visitor to visit the annotation values, or <tt>null</tt> if_this visitor is not interested in visiting this annotation.;public AnnotationVisitor visitAnnotation(String desc, boolean visible) {_        if (fv != null) {_            return fv.visitAnnotation(desc, visible)__        }_        return null__    };visits,an,annotation,of,the,field,param,desc,the,class,descriptor,of,the,annotation,class,param,visible,tt,true,tt,if,the,annotation,is,visible,at,runtime,return,a,visitor,to,visit,the,annotation,values,or,tt,null,tt,if,this,visitor,is,not,interested,in,visiting,this,annotation;public,annotation,visitor,visit,annotation,string,desc,boolean,visible,if,fv,null,return,fv,visit,annotation,desc,visible,return,null
FieldVisitor -> public FieldVisitor(final int api, final FieldVisitor fieldVisitor);1531241461;Constructs a new {@link FieldVisitor}.__@param api the ASM API version implemented by this visitor. Must be one of {@link_Opcodes#ASM4}, {@link Opcodes#ASM5}, {@link Opcodes#ASM6} or {@link_Opcodes#ASM7_EXPERIMENTAL}._@param fieldVisitor the field visitor to which this visitor must delegate method calls. May be_null.;public FieldVisitor(final int api, final FieldVisitor fieldVisitor) {_    if (api != Opcodes.ASM6_        && api != Opcodes.ASM5_        && api != Opcodes.ASM4_        && api != Opcodes.ASM7_EXPERIMENTAL) {_      throw new IllegalArgumentException()__    }_    this.api = api__    this.fv = fieldVisitor__  };constructs,a,new,link,field,visitor,param,api,the,asm,api,version,implemented,by,this,visitor,must,be,one,of,link,opcodes,asm4,link,opcodes,asm5,link,opcodes,asm6,or,link,opcodes,param,field,visitor,the,field,visitor,to,which,this,visitor,must,delegate,method,calls,may,be,null;public,field,visitor,final,int,api,final,field,visitor,field,visitor,if,api,opcodes,asm6,api,opcodes,asm5,api,opcodes,asm4,api,opcodes,throw,new,illegal,argument,exception,this,api,api,this,fv,field,visitor
FieldVisitor -> public FieldVisitor(final int api, final FieldVisitor fieldVisitor);1536664245;Constructs a new {@link FieldVisitor}.__@param api the ASM API version implemented by this visitor. Must be one of {@link_Opcodes#ASM4}, {@link Opcodes#ASM5}, {@link Opcodes#ASM6} or {@link Opcodes#ASM7}._@param fieldVisitor the field visitor to which this visitor must delegate method calls. May be_null.;public FieldVisitor(final int api, final FieldVisitor fieldVisitor) {_    if (api != Opcodes.ASM6 && api != Opcodes.ASM5 && api != Opcodes.ASM4 && api != Opcodes.ASM7) {_      throw new IllegalArgumentException()__    }_    this.api = api__    this.fv = fieldVisitor__  };constructs,a,new,link,field,visitor,param,api,the,asm,api,version,implemented,by,this,visitor,must,be,one,of,link,opcodes,asm4,link,opcodes,asm5,link,opcodes,asm6,or,link,opcodes,asm7,param,field,visitor,the,field,visitor,to,which,this,visitor,must,delegate,method,calls,may,be,null;public,field,visitor,final,int,api,final,field,visitor,field,visitor,if,api,opcodes,asm6,api,opcodes,asm5,api,opcodes,asm4,api,opcodes,asm7,throw,new,illegal,argument,exception,this,api,api,this,fv,field,visitor
FieldVisitor -> public FieldVisitor(final int api);1366718246;Constructs a new {@link FieldVisitor}.__@param api_the ASM API version implemented by this visitor. Must be one_of {@link Opcodes#ASM4}.;public FieldVisitor(final int api) {_        this(api, null)__    };constructs,a,new,link,field,visitor,param,api,the,asm,api,version,implemented,by,this,visitor,must,be,one,of,link,opcodes,asm4;public,field,visitor,final,int,api,this,api,null
FieldVisitor -> public FieldVisitor(final int api);1395273982;Constructs a new {@link FieldVisitor}.__@param api_the ASM API version implemented by this visitor. Must be one_of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.;public FieldVisitor(final int api) {_        this(api, null)__    };constructs,a,new,link,field,visitor,param,api,the,asm,api,version,implemented,by,this,visitor,must,be,one,of,link,opcodes,asm4,or,link,opcodes,asm5;public,field,visitor,final,int,api,this,api,null
FieldVisitor -> public FieldVisitor(final int api);1397644526;Constructs a new {@link FieldVisitor}.__@param api_the ASM API version implemented by this visitor. Must be one_of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.;public FieldVisitor(final int api) {_        this(api, null)__    };constructs,a,new,link,field,visitor,param,api,the,asm,api,version,implemented,by,this,visitor,must,be,one,of,link,opcodes,asm4,or,link,opcodes,asm5;public,field,visitor,final,int,api,this,api,null
FieldVisitor -> public FieldVisitor(final int api);1505821772;Constructs a new {@link FieldVisitor}.__@param api_the ASM API version implemented by this visitor. Must be one_of {@link Opcodes#ASM4}, {@link Opcodes#ASM5} or {@link Opcodes#ASM6}.;public FieldVisitor(final int api) {_        this(api, null)__    };constructs,a,new,link,field,visitor,param,api,the,asm,api,version,implemented,by,this,visitor,must,be,one,of,link,opcodes,asm4,link,opcodes,asm5,or,link,opcodes,asm6;public,field,visitor,final,int,api,this,api,null
FieldVisitor -> public FieldVisitor(final int api);1531241461;Constructs a new {@link FieldVisitor}.__@param api the ASM API version implemented by this visitor. Must be one of {@link_Opcodes#ASM4}, {@link Opcodes#ASM5}, {@link Opcodes#ASM6} or {@link_Opcodes#ASM7_EXPERIMENTAL}.;public FieldVisitor(final int api) {_    this(api, null)__  };constructs,a,new,link,field,visitor,param,api,the,asm,api,version,implemented,by,this,visitor,must,be,one,of,link,opcodes,asm4,link,opcodes,asm5,link,opcodes,asm6,or,link,opcodes;public,field,visitor,final,int,api,this,api,null
FieldVisitor -> public FieldVisitor(final int api);1536664245;Constructs a new {@link FieldVisitor}.__@param api the ASM API version implemented by this visitor. Must be one of {@link_Opcodes#ASM4}, {@link Opcodes#ASM5}, {@link Opcodes#ASM6} or {@link Opcodes#ASM7}.;public FieldVisitor(final int api) {_    this(api, null)__  };constructs,a,new,link,field,visitor,param,api,the,asm,api,version,implemented,by,this,visitor,must,be,one,of,link,opcodes,asm4,link,opcodes,asm5,link,opcodes,asm6,or,link,opcodes,asm7;public,field,visitor,final,int,api,this,api,null
FieldVisitor -> public void visitAttribute(Attribute attr);1366718246;Visits a non standard attribute of the field.__@param attr_an attribute.;public void visitAttribute(Attribute attr) {_        if (fv != null) {_            fv.visitAttribute(attr)__        }_    };visits,a,non,standard,attribute,of,the,field,param,attr,an,attribute;public,void,visit,attribute,attribute,attr,if,fv,null,fv,visit,attribute,attr
FieldVisitor -> public void visitAttribute(Attribute attr);1395273982;Visits a non standard attribute of the field.__@param attr_an attribute.;public void visitAttribute(Attribute attr) {_        if (fv != null) {_            fv.visitAttribute(attr)__        }_    };visits,a,non,standard,attribute,of,the,field,param,attr,an,attribute;public,void,visit,attribute,attribute,attr,if,fv,null,fv,visit,attribute,attr
FieldVisitor -> public void visitAttribute(Attribute attr);1397644526;Visits a non standard attribute of the field.__@param attr_an attribute.;public void visitAttribute(Attribute attr) {_        if (fv != null) {_            fv.visitAttribute(attr)__        }_    };visits,a,non,standard,attribute,of,the,field,param,attr,an,attribute;public,void,visit,attribute,attribute,attr,if,fv,null,fv,visit,attribute,attr
FieldVisitor -> public void visitAttribute(Attribute attr);1505821772;Visits a non standard attribute of the field.__@param attr_an attribute.;public void visitAttribute(Attribute attr) {_        if (fv != null) {_            fv.visitAttribute(attr)__        }_    };visits,a,non,standard,attribute,of,the,field,param,attr,an,attribute;public,void,visit,attribute,attribute,attr,if,fv,null,fv,visit,attribute,attr
FieldVisitor -> public FieldVisitor(final int api, final FieldVisitor fv);1366718246;Constructs a new {@link FieldVisitor}.__@param api_the ASM API version implemented by this visitor. Must be one_of {@link Opcodes#ASM4}._@param fv_the field visitor to which this visitor must delegate method_calls. May be null.;public FieldVisitor(final int api, final FieldVisitor fv) {_        if (api != Opcodes.ASM4) {_            throw new IllegalArgumentException()__        }_        this.api = api__        this.fv = fv__    };constructs,a,new,link,field,visitor,param,api,the,asm,api,version,implemented,by,this,visitor,must,be,one,of,link,opcodes,asm4,param,fv,the,field,visitor,to,which,this,visitor,must,delegate,method,calls,may,be,null;public,field,visitor,final,int,api,final,field,visitor,fv,if,api,opcodes,asm4,throw,new,illegal,argument,exception,this,api,api,this,fv,fv
FieldVisitor -> public FieldVisitor(final int api, final FieldVisitor fv);1395273982;Constructs a new {@link FieldVisitor}.__@param api_the ASM API version implemented by this visitor. Must be one_of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}._@param fv_the field visitor to which this visitor must delegate method_calls. May be null.;public FieldVisitor(final int api, final FieldVisitor fv) {_        if (api != Opcodes.ASM4 && api != Opcodes.ASM5) {_            throw new IllegalArgumentException()__        }_        this.api = api__        this.fv = fv__    };constructs,a,new,link,field,visitor,param,api,the,asm,api,version,implemented,by,this,visitor,must,be,one,of,link,opcodes,asm4,or,link,opcodes,asm5,param,fv,the,field,visitor,to,which,this,visitor,must,delegate,method,calls,may,be,null;public,field,visitor,final,int,api,final,field,visitor,fv,if,api,opcodes,asm4,api,opcodes,asm5,throw,new,illegal,argument,exception,this,api,api,this,fv,fv
FieldVisitor -> public FieldVisitor(final int api, final FieldVisitor fv);1397644526;Constructs a new {@link FieldVisitor}.__@param api_the ASM API version implemented by this visitor. Must be one_of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}._@param fv_the field visitor to which this visitor must delegate method_calls. May be null.;public FieldVisitor(final int api, final FieldVisitor fv) {_        if (api != Opcodes.ASM4 && api != Opcodes.ASM5) {_            throw new IllegalArgumentException()__        }_        this.api = api__        this.fv = fv__    };constructs,a,new,link,field,visitor,param,api,the,asm,api,version,implemented,by,this,visitor,must,be,one,of,link,opcodes,asm4,or,link,opcodes,asm5,param,fv,the,field,visitor,to,which,this,visitor,must,delegate,method,calls,may,be,null;public,field,visitor,final,int,api,final,field,visitor,fv,if,api,opcodes,asm4,api,opcodes,asm5,throw,new,illegal,argument,exception,this,api,api,this,fv,fv
FieldVisitor -> public FieldVisitor(final int api, final FieldVisitor fv);1505821772;Constructs a new {@link FieldVisitor}.__@param api_the ASM API version implemented by this visitor. Must be one_of {@link Opcodes#ASM4}, {@link Opcodes#ASM5} or {@link Opcodes#ASM6}._@param fv_the field visitor to which this visitor must delegate method_calls. May be null.;public FieldVisitor(final int api, final FieldVisitor fv) {_        if (api < Opcodes.ASM4 || api > Opcodes.ASM6) {_            throw new IllegalArgumentException()__        }_        this.api = api__        this.fv = fv__    };constructs,a,new,link,field,visitor,param,api,the,asm,api,version,implemented,by,this,visitor,must,be,one,of,link,opcodes,asm4,link,opcodes,asm5,or,link,opcodes,asm6,param,fv,the,field,visitor,to,which,this,visitor,must,delegate,method,calls,may,be,null;public,field,visitor,final,int,api,final,field,visitor,fv,if,api,opcodes,asm4,api,opcodes,asm6,throw,new,illegal,argument,exception,this,api,api,this,fv,fv
FieldVisitor -> public AnnotationVisitor visitAnnotation(final String descriptor, final boolean visible);1531241461;Visits an annotation of the field.__@param descriptor the class descriptor of the annotation class._@param visible <tt>true</tt> if the annotation is visible at runtime._@return a visitor to visit the annotation values, or <tt>null</tt> if this visitor is not_interested in visiting this annotation.;public AnnotationVisitor visitAnnotation(final String descriptor, final boolean visible) {_    if (fv != null) {_      return fv.visitAnnotation(descriptor, visible)__    }_    return null__  };visits,an,annotation,of,the,field,param,descriptor,the,class,descriptor,of,the,annotation,class,param,visible,tt,true,tt,if,the,annotation,is,visible,at,runtime,return,a,visitor,to,visit,the,annotation,values,or,tt,null,tt,if,this,visitor,is,not,interested,in,visiting,this,annotation;public,annotation,visitor,visit,annotation,final,string,descriptor,final,boolean,visible,if,fv,null,return,fv,visit,annotation,descriptor,visible,return,null
FieldVisitor -> public AnnotationVisitor visitAnnotation(final String descriptor, final boolean visible);1536664245;Visits an annotation of the field.__@param descriptor the class descriptor of the annotation class._@param visible {@literal true} if the annotation is visible at runtime._@return a visitor to visit the annotation values, or {@literal null} if this visitor is not_interested in visiting this annotation.;public AnnotationVisitor visitAnnotation(final String descriptor, final boolean visible) {_    if (fv != null) {_      return fv.visitAnnotation(descriptor, visible)__    }_    return null__  };visits,an,annotation,of,the,field,param,descriptor,the,class,descriptor,of,the,annotation,class,param,visible,literal,true,if,the,annotation,is,visible,at,runtime,return,a,visitor,to,visit,the,annotation,values,or,literal,null,if,this,visitor,is,not,interested,in,visiting,this,annotation;public,annotation,visitor,visit,annotation,final,string,descriptor,final,boolean,visible,if,fv,null,return,fv,visit,annotation,descriptor,visible,return,null
FieldVisitor -> public void visitEnd();1366718246;Visits the end of the field. This method, which is the last one to be_called, is used to inform the visitor that all the annotations and_attributes of the field have been visited.;public void visitEnd() {_        if (fv != null) {_            fv.visitEnd()__        }_    };visits,the,end,of,the,field,this,method,which,is,the,last,one,to,be,called,is,used,to,inform,the,visitor,that,all,the,annotations,and,attributes,of,the,field,have,been,visited;public,void,visit,end,if,fv,null,fv,visit,end
FieldVisitor -> public void visitEnd();1395273982;Visits the end of the field. This method, which is the last one to be_called, is used to inform the visitor that all the annotations and_attributes of the field have been visited.;public void visitEnd() {_        if (fv != null) {_            fv.visitEnd()__        }_    };visits,the,end,of,the,field,this,method,which,is,the,last,one,to,be,called,is,used,to,inform,the,visitor,that,all,the,annotations,and,attributes,of,the,field,have,been,visited;public,void,visit,end,if,fv,null,fv,visit,end
FieldVisitor -> public void visitEnd();1397644526;Visits the end of the field. This method, which is the last one to be_called, is used to inform the visitor that all the annotations and_attributes of the field have been visited.;public void visitEnd() {_        if (fv != null) {_            fv.visitEnd()__        }_    };visits,the,end,of,the,field,this,method,which,is,the,last,one,to,be,called,is,used,to,inform,the,visitor,that,all,the,annotations,and,attributes,of,the,field,have,been,visited;public,void,visit,end,if,fv,null,fv,visit,end
FieldVisitor -> public void visitEnd();1505821772;Visits the end of the field. This method, which is the last one to be_called, is used to inform the visitor that all the annotations and_attributes of the field have been visited.;public void visitEnd() {_        if (fv != null) {_            fv.visitEnd()__        }_    };visits,the,end,of,the,field,this,method,which,is,the,last,one,to,be,called,is,used,to,inform,the,visitor,that,all,the,annotations,and,attributes,of,the,field,have,been,visited;public,void,visit,end,if,fv,null,fv,visit,end
FieldVisitor -> public void visitEnd();1531241461;Visits the end of the field. This method, which is the last one to be called, is used to inform_the visitor that all the annotations and attributes of the field have been visited.;public void visitEnd() {_    if (fv != null) {_      fv.visitEnd()__    }_  };visits,the,end,of,the,field,this,method,which,is,the,last,one,to,be,called,is,used,to,inform,the,visitor,that,all,the,annotations,and,attributes,of,the,field,have,been,visited;public,void,visit,end,if,fv,null,fv,visit,end
FieldVisitor -> public void visitEnd();1536664245;Visits the end of the field. This method, which is the last one to be called, is used to inform_the visitor that all the annotations and attributes of the field have been visited.;public void visitEnd() {_    if (fv != null) {_      fv.visitEnd()__    }_  };visits,the,end,of,the,field,this,method,which,is,the,last,one,to,be,called,is,used,to,inform,the,visitor,that,all,the,annotations,and,attributes,of,the,field,have,been,visited;public,void,visit,end,if,fv,null,fv,visit,end
FieldVisitor -> public AnnotationVisitor visitTypeAnnotation(int typeRef,             TypePath typePath, String desc, boolean visible);1395273982;Visits an annotation on the type of the field.__@param typeRef_a reference to the annotated type. The sort of this type_reference must be {@link TypeReference#FIELD FIELD}. See_{@link TypeReference}._@param typePath_the path to the annotated type argument, wildcard bound, array_element type, or static inner type within 'typeRef'. May be_<tt>null</tt> if the annotation targets 'typeRef' as a whole._@param desc_the class descriptor of the annotation class._@param visible_<tt>true</tt> if the annotation is visible at runtime._@return a visitor to visit the annotation values, or <tt>null</tt> if_this visitor is not interested in visiting this annotation.;public AnnotationVisitor visitTypeAnnotation(int typeRef,_            TypePath typePath, String desc, boolean visible) {_        if (api < Opcodes.ASM5) {_            throw new RuntimeException()__        }_        if (fv != null) {_            return fv.visitTypeAnnotation(typeRef, typePath, desc, visible)__        }_        return null__    };visits,an,annotation,on,the,type,of,the,field,param,type,ref,a,reference,to,the,annotated,type,the,sort,of,this,type,reference,must,be,link,type,reference,field,field,see,link,type,reference,param,type,path,the,path,to,the,annotated,type,argument,wildcard,bound,array,element,type,or,static,inner,type,within,type,ref,may,be,tt,null,tt,if,the,annotation,targets,type,ref,as,a,whole,param,desc,the,class,descriptor,of,the,annotation,class,param,visible,tt,true,tt,if,the,annotation,is,visible,at,runtime,return,a,visitor,to,visit,the,annotation,values,or,tt,null,tt,if,this,visitor,is,not,interested,in,visiting,this,annotation;public,annotation,visitor,visit,type,annotation,int,type,ref,type,path,type,path,string,desc,boolean,visible,if,api,opcodes,asm5,throw,new,runtime,exception,if,fv,null,return,fv,visit,type,annotation,type,ref,type,path,desc,visible,return,null
FieldVisitor -> public AnnotationVisitor visitTypeAnnotation(int typeRef,             TypePath typePath, String desc, boolean visible);1397644526;Visits an annotation on the type of the field.__@param typeRef_a reference to the annotated type. The sort of this type_reference must be {@link TypeReference#FIELD FIELD}. See_{@link TypeReference}._@param typePath_the path to the annotated type argument, wildcard bound, array_element type, or static inner type within 'typeRef'. May be_<tt>null</tt> if the annotation targets 'typeRef' as a whole._@param desc_the class descriptor of the annotation class._@param visible_<tt>true</tt> if the annotation is visible at runtime._@return a visitor to visit the annotation values, or <tt>null</tt> if_this visitor is not interested in visiting this annotation.;public AnnotationVisitor visitTypeAnnotation(int typeRef,_            TypePath typePath, String desc, boolean visible) {_		_        if (fv != null) {_            return fv.visitTypeAnnotation(typeRef, typePath, desc, visible)__        }_        return null__    };visits,an,annotation,on,the,type,of,the,field,param,type,ref,a,reference,to,the,annotated,type,the,sort,of,this,type,reference,must,be,link,type,reference,field,field,see,link,type,reference,param,type,path,the,path,to,the,annotated,type,argument,wildcard,bound,array,element,type,or,static,inner,type,within,type,ref,may,be,tt,null,tt,if,the,annotation,targets,type,ref,as,a,whole,param,desc,the,class,descriptor,of,the,annotation,class,param,visible,tt,true,tt,if,the,annotation,is,visible,at,runtime,return,a,visitor,to,visit,the,annotation,values,or,tt,null,tt,if,this,visitor,is,not,interested,in,visiting,this,annotation;public,annotation,visitor,visit,type,annotation,int,type,ref,type,path,type,path,string,desc,boolean,visible,if,fv,null,return,fv,visit,type,annotation,type,ref,type,path,desc,visible,return,null
FieldVisitor -> public AnnotationVisitor visitTypeAnnotation(int typeRef,             TypePath typePath, String desc, boolean visible);1505821772;Visits an annotation on the type of the field.__@param typeRef_a reference to the annotated type. The sort of this type_reference must be {@link TypeReference#FIELD FIELD}. See_{@link TypeReference}._@param typePath_the path to the annotated type argument, wildcard bound, array_element type, or static inner type within 'typeRef'. May be_<tt>null</tt> if the annotation targets 'typeRef' as a whole._@param desc_the class descriptor of the annotation class._@param visible_<tt>true</tt> if the annotation is visible at runtime._@return a visitor to visit the annotation values, or <tt>null</tt> if_this visitor is not interested in visiting this annotation.;public AnnotationVisitor visitTypeAnnotation(int typeRef,_            TypePath typePath, String desc, boolean visible) {_		_        if (fv != null) {_            return fv.visitTypeAnnotation(typeRef, typePath, desc, visible)__        }_        return null__    };visits,an,annotation,on,the,type,of,the,field,param,type,ref,a,reference,to,the,annotated,type,the,sort,of,this,type,reference,must,be,link,type,reference,field,field,see,link,type,reference,param,type,path,the,path,to,the,annotated,type,argument,wildcard,bound,array,element,type,or,static,inner,type,within,type,ref,may,be,tt,null,tt,if,the,annotation,targets,type,ref,as,a,whole,param,desc,the,class,descriptor,of,the,annotation,class,param,visible,tt,true,tt,if,the,annotation,is,visible,at,runtime,return,a,visitor,to,visit,the,annotation,values,or,tt,null,tt,if,this,visitor,is,not,interested,in,visiting,this,annotation;public,annotation,visitor,visit,type,annotation,int,type,ref,type,path,type,path,string,desc,boolean,visible,if,fv,null,return,fv,visit,type,annotation,type,ref,type,path,desc,visible,return,null
FieldVisitor -> public void visitAttribute(final Attribute attribute);1531241461;Visits a non standard attribute of the field.__@param attribute an attribute.;public void visitAttribute(final Attribute attribute) {_    if (fv != null) {_      fv.visitAttribute(attribute)__    }_  };visits,a,non,standard,attribute,of,the,field,param,attribute,an,attribute;public,void,visit,attribute,final,attribute,attribute,if,fv,null,fv,visit,attribute,attribute
FieldVisitor -> public void visitAttribute(final Attribute attribute);1536664245;Visits a non standard attribute of the field.__@param attribute an attribute.;public void visitAttribute(final Attribute attribute) {_    if (fv != null) {_      fv.visitAttribute(attribute)__    }_  };visits,a,non,standard,attribute,of,the,field,param,attribute,an,attribute;public,void,visit,attribute,final,attribute,attribute,if,fv,null,fv,visit,attribute,attribute
