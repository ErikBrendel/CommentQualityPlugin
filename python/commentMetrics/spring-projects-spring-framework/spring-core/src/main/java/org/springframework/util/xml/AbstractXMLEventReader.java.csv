# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractXMLEventReader -> protected boolean isClosed();1468513830;Returns {@code true} if closed_ {@code false} otherwise._@see #close();protected boolean isClosed() {_		return closed__	};returns,code,true,if,closed,code,false,otherwise,see,close;protected,boolean,is,closed,return,closed
AbstractXMLEventReader -> protected boolean isClosed();1468532417;Returns {@code true} if closed_ {@code false} otherwise._@see #close();protected boolean isClosed() {_		return closed__	};returns,code,true,if,closed,code,false,otherwise,see,close;protected,boolean,is,closed,return,closed
AbstractXMLEventReader -> protected boolean isClosed();1469482026;Returns {@code true} if closed_ {@code false} otherwise._@see #close();protected boolean isClosed() {_		return this.closed__	};returns,code,true,if,closed,code,false,otherwise,see,close;protected,boolean,is,closed,return,this,closed
AbstractXMLEventReader -> protected boolean isClosed();1495868221;Returns {@code true} if closed_ {@code false} otherwise._@see #close();protected boolean isClosed() {_		return this.closed__	};returns,code,true,if,closed,code,false,otherwise,see,close;protected,boolean,is,closed,return,this,closed
AbstractXMLEventReader -> @Override 	public Object getProperty(String name) throws IllegalArgumentException;1468513830;Throws an {@code IllegalArgumentException} when called._@throws IllegalArgumentException when called.;@Override_	public Object getProperty(String name) throws IllegalArgumentException {_		throw new IllegalArgumentException("Property not supported: [" + name + "]")__	};throws,an,code,illegal,argument,exception,when,called,throws,illegal,argument,exception,when,called;override,public,object,get,property,string,name,throws,illegal,argument,exception,throw,new,illegal,argument,exception,property,not,supported,name
AbstractXMLEventReader -> @Override 	public Object getProperty(String name) throws IllegalArgumentException;1468532417;Throws an {@code IllegalArgumentException} when called._@throws IllegalArgumentException when called.;@Override_	public Object getProperty(String name) throws IllegalArgumentException {_		throw new IllegalArgumentException("Property not supported: [" + name + "]")__	};throws,an,code,illegal,argument,exception,when,called,throws,illegal,argument,exception,when,called;override,public,object,get,property,string,name,throws,illegal,argument,exception,throw,new,illegal,argument,exception,property,not,supported,name
AbstractXMLEventReader -> @Override 	public Object getProperty(String name) throws IllegalArgumentException;1469482026;Throws an {@code IllegalArgumentException} when called._@throws IllegalArgumentException when called.;@Override_	public Object getProperty(String name) throws IllegalArgumentException {_		throw new IllegalArgumentException("Property not supported: [" + name + "]")__	};throws,an,code,illegal,argument,exception,when,called,throws,illegal,argument,exception,when,called;override,public,object,get,property,string,name,throws,illegal,argument,exception,throw,new,illegal,argument,exception,property,not,supported,name
AbstractXMLEventReader -> @Override 	public Object getProperty(String name) throws IllegalArgumentException;1495868221;Throws an {@code IllegalArgumentException} when called._@throws IllegalArgumentException when called.;@Override_	public Object getProperty(String name) throws IllegalArgumentException {_		throw new IllegalArgumentException("Property not supported: [" + name + "]")__	};throws,an,code,illegal,argument,exception,when,called,throws,illegal,argument,exception,when,called;override,public,object,get,property,string,name,throws,illegal,argument,exception,throw,new,illegal,argument,exception,property,not,supported,name
AbstractXMLEventReader -> @Override 	public Object getProperty(String name) throws IllegalArgumentException;1536317775;This implementation throws an {@code IllegalArgumentException} for any property._@throws IllegalArgumentException when called;@Override_	public Object getProperty(String name) throws IllegalArgumentException {_		throw new IllegalArgumentException("Property not supported: [" + name + "]")__	};this,implementation,throws,an,code,illegal,argument,exception,for,any,property,throws,illegal,argument,exception,when,called;override,public,object,get,property,string,name,throws,illegal,argument,exception,throw,new,illegal,argument,exception,property,not,supported,name
AbstractXMLEventReader -> protected void checkIfClosed() throws XMLStreamException;1468513830;Checks if the reader is closed, and throws a {@code XMLStreamException} if so._@throws XMLStreamException if the reader is closed_@see #close()_@see #isClosed();protected void checkIfClosed() throws XMLStreamException {_		if (isClosed()) {_			throw new XMLStreamException("XMLEventReader has been closed")__		}_	};checks,if,the,reader,is,closed,and,throws,a,code,xmlstream,exception,if,so,throws,xmlstream,exception,if,the,reader,is,closed,see,close,see,is,closed;protected,void,check,if,closed,throws,xmlstream,exception,if,is,closed,throw,new,xmlstream,exception,xmlevent,reader,has,been,closed
AbstractXMLEventReader -> protected void checkIfClosed() throws XMLStreamException;1468532417;Checks if the reader is closed, and throws a {@code XMLStreamException} if so._@throws XMLStreamException if the reader is closed_@see #close()_@see #isClosed();protected void checkIfClosed() throws XMLStreamException {_		if (isClosed()) {_			throw new XMLStreamException("XMLEventReader has been closed")__		}_	};checks,if,the,reader,is,closed,and,throws,a,code,xmlstream,exception,if,so,throws,xmlstream,exception,if,the,reader,is,closed,see,close,see,is,closed;protected,void,check,if,closed,throws,xmlstream,exception,if,is,closed,throw,new,xmlstream,exception,xmlevent,reader,has,been,closed
AbstractXMLEventReader -> protected void checkIfClosed() throws XMLStreamException;1469482026;Checks if the reader is closed, and throws a {@code XMLStreamException} if so._@throws XMLStreamException if the reader is closed_@see #close()_@see #isClosed();protected void checkIfClosed() throws XMLStreamException {_		if (isClosed()) {_			throw new XMLStreamException("XMLEventReader has been closed")__		}_	};checks,if,the,reader,is,closed,and,throws,a,code,xmlstream,exception,if,so,throws,xmlstream,exception,if,the,reader,is,closed,see,close,see,is,closed;protected,void,check,if,closed,throws,xmlstream,exception,if,is,closed,throw,new,xmlstream,exception,xmlevent,reader,has,been,closed
AbstractXMLEventReader -> protected void checkIfClosed() throws XMLStreamException;1495868221;Checks if the reader is closed, and throws a {@code XMLStreamException} if so._@throws XMLStreamException if the reader is closed_@see #close()_@see #isClosed();protected void checkIfClosed() throws XMLStreamException {_		if (isClosed()) {_			throw new XMLStreamException("XMLEventReader has been closed")__		}_	};checks,if,the,reader,is,closed,and,throws,a,code,xmlstream,exception,if,so,throws,xmlstream,exception,if,the,reader,is,closed,see,close,see,is,closed;protected,void,check,if,closed,throws,xmlstream,exception,if,is,closed,throw,new,xmlstream,exception,xmlevent,reader,has,been,closed
AbstractXMLEventReader -> protected void checkIfClosed() throws XMLStreamException;1536317775;Check if the reader is closed, and throws a {@code XMLStreamException} if so._@throws XMLStreamException if the reader is closed_@see #close();protected void checkIfClosed() throws XMLStreamException {_		if (this.closed) {_			throw new XMLStreamException("XMLEventReader has been closed")__		}_	};check,if,the,reader,is,closed,and,throws,a,code,xmlstream,exception,if,so,throws,xmlstream,exception,if,the,reader,is,closed,see,close;protected,void,check,if,closed,throws,xmlstream,exception,if,this,closed,throw,new,xmlstream,exception,xmlevent,reader,has,been,closed
