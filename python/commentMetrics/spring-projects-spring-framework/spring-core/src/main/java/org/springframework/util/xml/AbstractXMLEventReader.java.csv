commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Override public Object next() {     try {         return nextEvent().     } catch (XMLStreamException ex) {         throw new NoSuchElementException(ex.getMessage()).     } }
false;public;0;5;;@Override public void remove() {     throw new UnsupportedOperationException("remove not supported on " + ClassUtils.getShortName(getClass())). }
true;public;1;4;/**  * This implementation throws an {@code IllegalArgumentException} for any property.  * @throws IllegalArgumentException when called  */ ;/**  * This implementation throws an {@code IllegalArgumentException} for any property.  * @throws IllegalArgumentException when called  */ @Override public Object getProperty(String name) throws IllegalArgumentException {     throw new IllegalArgumentException("Property not supported: [" + name + "]"). }
false;public;0;4;;@Override public void close() {     this.closed = true. }
true;protected;0;5;/**  * Check if the reader is closed, and throws a {@code XMLStreamException} if so.  * @throws XMLStreamException if the reader is closed  * @see #close()  */ ;/**  * Check if the reader is closed, and throws a {@code XMLStreamException} if so.  * @throws XMLStreamException if the reader is closed  * @see #close()  */ protected void checkIfClosed() throws XMLStreamException {     if (this.closed) {         throw new XMLStreamException("XMLEventReader has been closed").     } }
