# id;timestamp;commentText;codeText;commentWords;codeWords
ResourceRegionEncoder -> private OptionalLong contentLength(Resource resource);1474404071;Determine, if possible, the contentLength of the given resource without reading it._@param resource the resource instance_@return the contentLength of the resource;private OptionalLong contentLength(Resource resource) {_		_		_		if (InputStreamResource.class != resource.getClass()) {_			try {_				return OptionalLong.of(resource.contentLength())__			}_			catch (IOException ignored) {_			}_		}_		return OptionalLong.empty()__	};determine,if,possible,the,content,length,of,the,given,resource,without,reading,it,param,resource,the,resource,instance,return,the,content,length,of,the,resource;private,optional,long,content,length,resource,resource,if,input,stream,resource,class,resource,get,class,try,return,optional,long,of,resource,content,length,catch,ioexception,ignored,return,optional,long,empty
ResourceRegionEncoder -> private OptionalLong contentLength(Resource resource);1477045587;Determine, if possible, the contentLength of the given resource without reading it._@param resource the resource instance_@return the contentLength of the resource;private OptionalLong contentLength(Resource resource) {_		_		_		if (InputStreamResource.class != resource.getClass()) {_			try {_				return OptionalLong.of(resource.contentLength())__			}_			catch (IOException ignored) {_			}_		}_		return OptionalLong.empty()__	};determine,if,possible,the,content,length,of,the,given,resource,without,reading,it,param,resource,the,resource,instance,return,the,content,length,of,the,resource;private,optional,long,content,length,resource,resource,if,input,stream,resource,class,resource,get,class,try,return,optional,long,of,resource,content,length,catch,ioexception,ignored,return,optional,long,empty
ResourceRegionEncoder -> private OptionalLong contentLength(Resource resource);1489064920;Determine, if possible, the contentLength of the given resource without reading it._@param resource the resource instance_@return the contentLength of the resource;private OptionalLong contentLength(Resource resource) {_		_		_		if (InputStreamResource.class != resource.getClass()) {_			try {_				return OptionalLong.of(resource.contentLength())__			}_			catch (IOException ignored) {_			}_		}_		return OptionalLong.empty()__	};determine,if,possible,the,content,length,of,the,given,resource,without,reading,it,param,resource,the,resource,instance,return,the,content,length,of,the,resource;private,optional,long,content,length,resource,resource,if,input,stream,resource,class,resource,get,class,try,return,optional,long,of,resource,content,length,catch,ioexception,ignored,return,optional,long,empty
ResourceRegionEncoder -> private OptionalLong contentLength(Resource resource);1491927184;Determine, if possible, the contentLength of the given resource without reading it._@param resource the resource instance_@return the contentLength of the resource;private OptionalLong contentLength(Resource resource) {_		_		_		if (InputStreamResource.class != resource.getClass()) {_			try {_				return OptionalLong.of(resource.contentLength())__			}_			catch (IOException ignored) {_			}_		}_		return OptionalLong.empty()__	};determine,if,possible,the,content,length,of,the,given,resource,without,reading,it,param,resource,the,resource,instance,return,the,content,length,of,the,resource;private,optional,long,content,length,resource,resource,if,input,stream,resource,class,resource,get,class,try,return,optional,long,of,resource,content,length,catch,ioexception,ignored,return,optional,long,empty
ResourceRegionEncoder -> private OptionalLong contentLength(Resource resource);1492694378;Determine, if possible, the contentLength of the given resource without reading it._@param resource the resource instance_@return the contentLength of the resource;private OptionalLong contentLength(Resource resource) {_		_		_		if (InputStreamResource.class != resource.getClass()) {_			try {_				return OptionalLong.of(resource.contentLength())__			}_			catch (IOException ignored) {_			}_		}_		return OptionalLong.empty()__	};determine,if,possible,the,content,length,of,the,given,resource,without,reading,it,param,resource,the,resource,instance,return,the,content,length,of,the,resource;private,optional,long,content,length,resource,resource,if,input,stream,resource,class,resource,get,class,try,return,optional,long,of,resource,content,length,catch,ioexception,ignored,return,optional,long,empty
ResourceRegionEncoder -> private OptionalLong contentLength(Resource resource);1496242568;Determine, if possible, the contentLength of the given resource without reading it._@param resource the resource instance_@return the contentLength of the resource;private OptionalLong contentLength(Resource resource) {_		_		_		if (InputStreamResource.class != resource.getClass()) {_			try {_				return OptionalLong.of(resource.contentLength())__			}_			catch (IOException ignored) {_			}_		}_		return OptionalLong.empty()__	};determine,if,possible,the,content,length,of,the,given,resource,without,reading,it,param,resource,the,resource,instance,return,the,content,length,of,the,resource;private,optional,long,content,length,resource,resource,if,input,stream,resource,class,resource,get,class,try,return,optional,long,of,resource,content,length,catch,ioexception,ignored,return,optional,long,empty
ResourceRegionEncoder -> private OptionalLong contentLength(Resource resource);1496837955;Determine, if possible, the contentLength of the given resource without reading it._@param resource the resource instance_@return the contentLength of the resource;private OptionalLong contentLength(Resource resource) {_		_		_		if (InputStreamResource.class != resource.getClass()) {_			try {_				return OptionalLong.of(resource.contentLength())__			}_			catch (IOException ignored) {_			}_		}_		return OptionalLong.empty()__	};determine,if,possible,the,content,length,of,the,given,resource,without,reading,it,param,resource,the,resource,instance,return,the,content,length,of,the,resource;private,optional,long,content,length,resource,resource,if,input,stream,resource,class,resource,get,class,try,return,optional,long,of,resource,content,length,catch,ioexception,ignored,return,optional,long,empty
ResourceRegionEncoder -> private OptionalLong contentLength(Resource resource);1500287125;Determine, if possible, the contentLength of the given resource without reading it._@param resource the resource instance_@return the contentLength of the resource;private OptionalLong contentLength(Resource resource) {_		_		_		if (InputStreamResource.class != resource.getClass()) {_			try {_				return OptionalLong.of(resource.contentLength())__			}_			catch (IOException ignored) {_			}_		}_		return OptionalLong.empty()__	};determine,if,possible,the,content,length,of,the,given,resource,without,reading,it,param,resource,the,resource,instance,return,the,content,length,of,the,resource;private,optional,long,content,length,resource,resource,if,input,stream,resource,class,resource,get,class,try,return,optional,long,of,resource,content,length,catch,ioexception,ignored,return,optional,long,empty
ResourceRegionEncoder -> private OptionalLong contentLength(Resource resource);1520774010;Determine, if possible, the contentLength of the given resource without reading it._@param resource the resource instance_@return the contentLength of the resource;private OptionalLong contentLength(Resource resource) {_		_		_		if (InputStreamResource.class != resource.getClass()) {_			try {_				return OptionalLong.of(resource.contentLength())__			}_			catch (IOException ignored) {_			}_		}_		return OptionalLong.empty()__	};determine,if,possible,the,content,length,of,the,given,resource,without,reading,it,param,resource,the,resource,instance,return,the,content,length,of,the,resource;private,optional,long,content,length,resource,resource,if,input,stream,resource,class,resource,get,class,try,return,optional,long,of,resource,content,length,catch,ioexception,ignored,return,optional,long,empty
ResourceRegionEncoder -> private OptionalLong contentLength(Resource resource);1529721864;Determine, if possible, the contentLength of the given resource without reading it._@param resource the resource instance_@return the contentLength of the resource;private OptionalLong contentLength(Resource resource) {_		_		_		if (InputStreamResource.class != resource.getClass()) {_			try {_				return OptionalLong.of(resource.contentLength())__			}_			catch (IOException ignored) {_			}_		}_		return OptionalLong.empty()__	};determine,if,possible,the,content,length,of,the,given,resource,without,reading,it,param,resource,the,resource,instance,return,the,content,length,of,the,resource;private,optional,long,content,length,resource,resource,if,input,stream,resource,class,resource,get,class,try,return,optional,long,of,resource,content,length,catch,ioexception,ignored,return,optional,long,empty
ResourceRegionEncoder -> private OptionalLong contentLength(Resource resource);1530174524;Determine, if possible, the contentLength of the given resource without reading it._@param resource the resource instance_@return the contentLength of the resource;private OptionalLong contentLength(Resource resource) {_		_		_		if (InputStreamResource.class != resource.getClass()) {_			try {_				return OptionalLong.of(resource.contentLength())__			}_			catch (IOException ignored) {_			}_		}_		return OptionalLong.empty()__	};determine,if,possible,the,content,length,of,the,given,resource,without,reading,it,param,resource,the,resource,instance,return,the,content,length,of,the,resource;private,optional,long,content,length,resource,resource,if,input,stream,resource,class,resource,get,class,try,return,optional,long,of,resource,content,length,catch,ioexception,ignored,return,optional,long,empty
ResourceRegionEncoder -> private OptionalLong contentLength(Resource resource);1530793695;Determine, if possible, the contentLength of the given resource without reading it._@param resource the resource instance_@return the contentLength of the resource;private OptionalLong contentLength(Resource resource) {_		_		_		if (InputStreamResource.class != resource.getClass()) {_			try {_				return OptionalLong.of(resource.contentLength())__			}_			catch (IOException ignored) {_			}_		}_		return OptionalLong.empty()__	};determine,if,possible,the,content,length,of,the,given,resource,without,reading,it,param,resource,the,resource,instance,return,the,content,length,of,the,resource;private,optional,long,content,length,resource,resource,if,input,stream,resource,class,resource,get,class,try,return,optional,long,of,resource,content,length,catch,ioexception,ignored,return,optional,long,empty
ResourceRegionEncoder -> private OptionalLong contentLength(Resource resource);1530923528;Determine, if possible, the contentLength of the given resource without reading it._@param resource the resource instance_@return the contentLength of the resource;private OptionalLong contentLength(Resource resource) {_		_		_		if (InputStreamResource.class != resource.getClass()) {_			try {_				return OptionalLong.of(resource.contentLength())__			}_			catch (IOException ignored) {_			}_		}_		return OptionalLong.empty()__	};determine,if,possible,the,content,length,of,the,given,resource,without,reading,it,param,resource,the,resource,instance,return,the,content,length,of,the,resource;private,optional,long,content,length,resource,resource,if,input,stream,resource,class,resource,get,class,try,return,optional,long,of,resource,content,length,catch,ioexception,ignored,return,optional,long,empty
ResourceRegionEncoder -> private OptionalLong contentLength(Resource resource);1531321803;Determine, if possible, the contentLength of the given resource without reading it._@param resource the resource instance_@return the contentLength of the resource;private OptionalLong contentLength(Resource resource) {_		_		_		if (InputStreamResource.class != resource.getClass()) {_			try {_				return OptionalLong.of(resource.contentLength())__			}_			catch (IOException ignored) {_			}_		}_		return OptionalLong.empty()__	};determine,if,possible,the,content,length,of,the,given,resource,without,reading,it,param,resource,the,resource,instance,return,the,content,length,of,the,resource;private,optional,long,content,length,resource,resource,if,input,stream,resource,class,resource,get,class,try,return,optional,long,of,resource,content,length,catch,ioexception,ignored,return,optional,long,empty
ResourceRegionEncoder -> private OptionalLong contentLength(Resource resource);1532520919;Determine, if possible, the contentLength of the given resource without reading it._@param resource the resource instance_@return the contentLength of the resource;private OptionalLong contentLength(Resource resource) {_		_		_		if (InputStreamResource.class != resource.getClass()) {_			try {_				return OptionalLong.of(resource.contentLength())__			}_			catch (IOException ignored) {_			}_		}_		return OptionalLong.empty()__	};determine,if,possible,the,content,length,of,the,given,resource,without,reading,it,param,resource,the,resource,instance,return,the,content,length,of,the,resource;private,optional,long,content,length,resource,resource,if,input,stream,resource,class,resource,get,class,try,return,optional,long,of,resource,content,length,catch,ioexception,ignored,return,optional,long,empty
ResourceRegionEncoder -> private OptionalLong contentLength(Resource resource);1540305708;Determine, if possible, the contentLength of the given resource without reading it._@param resource the resource instance_@return the contentLength of the resource;private OptionalLong contentLength(Resource resource) {_		_		_		if (InputStreamResource.class != resource.getClass()) {_			try {_				return OptionalLong.of(resource.contentLength())__			}_			catch (IOException ignored) {_			}_		}_		return OptionalLong.empty()__	};determine,if,possible,the,content,length,of,the,given,resource,without,reading,it,param,resource,the,resource,instance,return,the,content,length,of,the,resource;private,optional,long,content,length,resource,resource,if,input,stream,resource,class,resource,get,class,try,return,optional,long,of,resource,content,length,catch,ioexception,ignored,return,optional,long,empty
