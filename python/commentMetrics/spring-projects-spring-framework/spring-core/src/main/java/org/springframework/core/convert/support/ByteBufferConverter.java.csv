commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public Set<ConvertiblePair> getConvertibleTypes() {     return CONVERTIBLE_PAIRS. }
false;public;2;8;;@Override public boolean matches(TypeDescriptor sourceType, TypeDescriptor targetType) {     boolean byteBufferTarget = targetType.isAssignableTo(BYTE_BUFFER_TYPE).     if (sourceType.isAssignableTo(BYTE_BUFFER_TYPE)) {         return (byteBufferTarget || matchesFromByteBuffer(targetType)).     }     return (byteBufferTarget && matchesToByteBuffer(sourceType)). }
false;private;1;4;;private boolean matchesFromByteBuffer(TypeDescriptor targetType) {     return (targetType.isAssignableTo(BYTE_ARRAY_TYPE) || this.conversionService.canConvert(BYTE_ARRAY_TYPE, targetType)). }
false;private;1;4;;private boolean matchesToByteBuffer(TypeDescriptor sourceType) {     return (sourceType.isAssignableTo(BYTE_ARRAY_TYPE) || this.conversionService.canConvert(sourceType, BYTE_ARRAY_TYPE)). }
false;public;3;14;;@Override @Nullable public Object convert(@Nullable Object source, TypeDescriptor sourceType, TypeDescriptor targetType) {     boolean byteBufferTarget = targetType.isAssignableTo(BYTE_BUFFER_TYPE).     if (source instanceof ByteBuffer) {         ByteBuffer buffer = (ByteBuffer) source.         return (byteBufferTarget ? buffer.duplicate() : convertFromByteBuffer(buffer, targetType)).     }     if (byteBufferTarget) {         return convertToByteBuffer(source, sourceType).     }     // Should not happen     throw new IllegalStateException("Unexpected source/target types"). }
false;private;2;10;;@Nullable private Object convertFromByteBuffer(ByteBuffer source, TypeDescriptor targetType) {     byte[] bytes = new byte[source.remaining()].     source.get(bytes).     if (targetType.isAssignableTo(BYTE_ARRAY_TYPE)) {         return bytes.     }     return this.conversionService.convert(bytes, BYTE_ARRAY_TYPE, targetType). }
false;private;2;16;;private Object convertToByteBuffer(@Nullable Object source, TypeDescriptor sourceType) {     byte[] bytes = (byte[]) (source instanceof byte[] ? source : this.conversionService.convert(source, sourceType, BYTE_ARRAY_TYPE)).     if (bytes == null) {         return ByteBuffer.wrap(new byte[0]).     }     ByteBuffer byteBuffer = ByteBuffer.allocate(bytes.length).     byteBuffer.put(bytes).     // which isn't available on JDK 8.     return ((Buffer) byteBuffer).rewind(). }
