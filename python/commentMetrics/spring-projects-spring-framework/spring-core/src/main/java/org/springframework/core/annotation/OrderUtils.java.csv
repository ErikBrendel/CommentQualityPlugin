# id;timestamp;commentText;codeText;commentWords;codeWords
OrderUtils -> public static Integer getPriorityValue(Class<?> type);1396355447;Return the value of the {@code javax.annotation.Priority} annotation set on the_specified type or {@code null} if none is set._@param type the type to handle_@return the priority value if the annotation is set, {@code null} otherwise;public static Integer getPriorityValue(Class<?> type) {_		if (priorityPresent) {_			for (Annotation annotation : type.getAnnotations()) {_				if (PRIORITY_ANNOTATION_CLASS_NAME.equals(annotation.annotationType().getName())) {_					return (Integer) AnnotationUtils.getValue(annotation)__				}_			}_		}_		return null__	};return,the,value,of,the,code,javax,annotation,priority,annotation,set,on,the,specified,type,or,code,null,if,none,is,set,param,type,the,type,to,handle,return,the,priority,value,if,the,annotation,is,set,code,null,otherwise;public,static,integer,get,priority,value,class,type,if,priority,present,for,annotation,annotation,type,get,annotations,if,equals,annotation,annotation,type,get,name,return,integer,annotation,utils,get,value,annotation,return,null
OrderUtils -> public static Integer getPriorityValue(Class<?> type);1404773971;Return the value of the {@code javax.annotation.Priority} annotation set_on the specified type or {@code null} if none is set._@param type the type to handle_@return the priority value if the annotation is set, {@code null} otherwise;public static Integer getPriorityValue(Class<?> type) {_		if (priorityPresent) {_			for (Annotation annotation : type.getAnnotations()) {_				if (PRIORITY_ANNOTATION_CLASS_NAME.equals(annotation.annotationType().getName())) {_					return (Integer) AnnotationUtils.getValue(annotation)__				}_			}_		}_		return null__	};return,the,value,of,the,code,javax,annotation,priority,annotation,set,on,the,specified,type,or,code,null,if,none,is,set,param,type,the,type,to,handle,return,the,priority,value,if,the,annotation,is,set,code,null,otherwise;public,static,integer,get,priority,value,class,type,if,priority,present,for,annotation,annotation,type,get,annotations,if,equals,annotation,annotation,type,get,name,return,integer,annotation,utils,get,value,annotation,return,null
OrderUtils -> public static Integer getOrder(Class<?> type);1409784073;Return the order on the specified {@code type}._<p>Take care of {@link Order @Order} and {@code @javax.annotation.Priority}._@param type the type to handle_@return the order value, or {@code null} if none can be found;public static Integer getOrder(Class<?> type) {_		return getOrder(type, null)__	};return,the,order,on,the,specified,code,type,p,take,care,of,link,order,order,and,code,javax,annotation,priority,param,type,the,type,to,handle,return,the,order,value,or,code,null,if,none,can,be,found;public,static,integer,get,order,class,type,return,get,order,type,null
OrderUtils -> public static Integer getOrder(Class<?> type);1413887234;Return the order on the specified {@code type}._<p>Take care of {@link Order @Order} and {@code @javax.annotation.Priority}._@param type the type to handle_@return the order value, or {@code null} if none can be found;public static Integer getOrder(Class<?> type) {_		return getOrder(type, null)__	};return,the,order,on,the,specified,code,type,p,take,care,of,link,order,order,and,code,javax,annotation,priority,param,type,the,type,to,handle,return,the,order,value,or,code,null,if,none,can,be,found;public,static,integer,get,order,class,type,return,get,order,type,null
OrderUtils -> public static Integer getOrder(Class<?> type);1417453691;Return the order on the specified {@code type}._<p>Take care of {@link Order @Order} and {@code @javax.annotation.Priority}._@param type the type to handle_@return the order value, or {@code null} if none can be found;public static Integer getOrder(Class<?> type) {_		return getOrder(type, null)__	};return,the,order,on,the,specified,code,type,p,take,care,of,link,order,order,and,code,javax,annotation,priority,param,type,the,type,to,handle,return,the,order,value,or,code,null,if,none,can,be,found;public,static,integer,get,order,class,type,return,get,order,type,null
OrderUtils -> public static Integer getOrder(Class<?> type);1472072207;Return the order on the specified {@code type}._<p>Takes care of {@link Order @Order} and {@code @javax.annotation.Priority}._@param type the type to handle_@return the order value, or {@code null} if none can be found_@see #getPriority(Class);public static Integer getOrder(Class<?> type) {_		return getOrder(type, null)__	};return,the,order,on,the,specified,code,type,p,takes,care,of,link,order,order,and,code,javax,annotation,priority,param,type,the,type,to,handle,return,the,order,value,or,code,null,if,none,can,be,found,see,get,priority,class;public,static,integer,get,order,class,type,return,get,order,type,null
OrderUtils -> @Nullable 	public static Integer getPriority(Class<?> type);1495868221;Return the value of the {@code javax.annotation.Priority} annotation_declared on the specified type, or {@code null} if none._@param type the type to handle_@return the priority value if the annotation is declared, or {@code null} if none;@Nullable_	public static Integer getPriority(Class<?> type) {_		if (priorityAnnotationType != null) {_			Annotation priority = AnnotationUtils.findAnnotation(type, priorityAnnotationType)__			if (priority != null) {_				return (Integer) AnnotationUtils.getValue(priority)__			}_		}_		return null__	};return,the,value,of,the,code,javax,annotation,priority,annotation,declared,on,the,specified,type,or,code,null,if,none,param,type,the,type,to,handle,return,the,priority,value,if,the,annotation,is,declared,or,code,null,if,none;nullable,public,static,integer,get,priority,class,type,if,priority,annotation,type,null,annotation,priority,annotation,utils,find,annotation,type,priority,annotation,type,if,priority,null,return,integer,annotation,utils,get,value,priority,return,null
OrderUtils -> @Nullable 	public static Integer getPriority(Class<?> type);1496837955;Return the value of the {@code javax.annotation.Priority} annotation_declared on the specified type, or {@code null} if none._@param type the type to handle_@return the priority value if the annotation is declared, or {@code null} if none;@Nullable_	public static Integer getPriority(Class<?> type) {_		if (priorityAnnotationType != null) {_			Annotation priority = AnnotationUtils.findAnnotation(type, priorityAnnotationType)__			if (priority != null) {_				return (Integer) AnnotationUtils.getValue(priority)__			}_		}_		return null__	};return,the,value,of,the,code,javax,annotation,priority,annotation,declared,on,the,specified,type,or,code,null,if,none,param,type,the,type,to,handle,return,the,priority,value,if,the,annotation,is,declared,or,code,null,if,none;nullable,public,static,integer,get,priority,class,type,if,priority,annotation,type,null,annotation,priority,annotation,utils,find,annotation,type,priority,annotation,type,if,priority,null,return,integer,annotation,utils,get,value,priority,return,null
OrderUtils -> @Nullable 	public static Integer getPriority(Class<?> type);1498780456;Return the value of the {@code javax.annotation.Priority} annotation_declared on the specified type, or {@code null} if none._@param type the type to handle_@return the priority value if the annotation is declared, or {@code null} if none;@Nullable_	public static Integer getPriority(Class<?> type) {_		if (priorityAnnotationType != null) {_			Annotation priority = AnnotationUtils.findAnnotation(type, priorityAnnotationType)__			if (priority != null) {_				return (Integer) AnnotationUtils.getValue(priority)__			}_		}_		return null__	};return,the,value,of,the,code,javax,annotation,priority,annotation,declared,on,the,specified,type,or,code,null,if,none,param,type,the,type,to,handle,return,the,priority,value,if,the,annotation,is,declared,or,code,null,if,none;nullable,public,static,integer,get,priority,class,type,if,priority,annotation,type,null,annotation,priority,annotation,utils,find,annotation,type,priority,annotation,type,if,priority,null,return,integer,annotation,utils,get,value,priority,return,null
OrderUtils -> @Nullable 	public static Integer getPriority(Class<?> type);1531994322;Return the value of the {@code javax.annotation.Priority} annotation_declared on the specified type, or {@code null} if none._@param type the type to handle_@return the priority value if the annotation is declared, or {@code null} if none;@Nullable_	public static Integer getPriority(Class<?> type) {_		if (priorityAnnotationType == null) {_			return null__		}_		Object cached = priorityCache.get(type)__		if (cached != null) {_			return (cached instanceof Integer ? (Integer) cached : null)__		}_		Annotation priority = AnnotationUtils.findAnnotation(type, priorityAnnotationType)__		Integer result = null__		if (priority != null) {_			result = (Integer) AnnotationUtils.getValue(priority)__		}_		priorityCache.put(type, (result != null ? result : NOT_ANNOTATED))__		return result__	};return,the,value,of,the,code,javax,annotation,priority,annotation,declared,on,the,specified,type,or,code,null,if,none,param,type,the,type,to,handle,return,the,priority,value,if,the,annotation,is,declared,or,code,null,if,none;nullable,public,static,integer,get,priority,class,type,if,priority,annotation,type,null,return,null,object,cached,priority,cache,get,type,if,cached,null,return,cached,instanceof,integer,integer,cached,null,annotation,priority,annotation,utils,find,annotation,type,priority,annotation,type,integer,result,null,if,priority,null,result,integer,annotation,utils,get,value,priority,priority,cache,put,type,result,null,result,return,result
OrderUtils -> @Nullable 	public static Integer getPriority(Class<?> type);1533667007;Return the value of the {@code javax.annotation.Priority} annotation_declared on the specified type, or {@code null} if none._@param type the type to handle_@return the priority value if the annotation is declared, or {@code null} if none;@Nullable_	public static Integer getPriority(Class<?> type) {_		if (priorityAnnotationType == null) {_			return null__		}_		Object cached = priorityCache.get(type)__		if (cached != null) {_			return (cached instanceof Integer ? (Integer) cached : null)__		}_		Annotation priority = AnnotationUtils.findAnnotation(type, priorityAnnotationType)__		Integer result = null__		if (priority != null) {_			result = (Integer) AnnotationUtils.getValue(priority)__		}_		priorityCache.put(type, (result != null ? result : NOT_ANNOTATED))__		return result__	};return,the,value,of,the,code,javax,annotation,priority,annotation,declared,on,the,specified,type,or,code,null,if,none,param,type,the,type,to,handle,return,the,priority,value,if,the,annotation,is,declared,or,code,null,if,none;nullable,public,static,integer,get,priority,class,type,if,priority,annotation,type,null,return,null,object,cached,priority,cache,get,type,if,cached,null,return,cached,instanceof,integer,integer,cached,null,annotation,priority,annotation,utils,find,annotation,type,priority,annotation,type,integer,result,null,if,priority,null,result,integer,annotation,utils,get,value,priority,priority,cache,put,type,result,null,result,return,result
OrderUtils -> public static int getOrder(Class<?> type, int defaultOrder);1496837955;Return the order on the specified {@code type}, or the specified_default value if none can be found._<p>Takes care of {@link Order @Order} and {@code @javax.annotation.Priority}._@param type the type to handle_@return the priority value, or the specified default order if none can be found_@since 5.0_@see #getPriority(Class);public static int getOrder(Class<?> type, int defaultOrder) {_		Integer order = getOrder(type)__		return (order != null ? order : defaultOrder)__	};return,the,order,on,the,specified,code,type,or,the,specified,default,value,if,none,can,be,found,p,takes,care,of,link,order,order,and,code,javax,annotation,priority,param,type,the,type,to,handle,return,the,priority,value,or,the,specified,default,order,if,none,can,be,found,since,5,0,see,get,priority,class;public,static,int,get,order,class,type,int,default,order,integer,order,get,order,type,return,order,null,order,default,order
OrderUtils -> public static int getOrder(Class<?> type, int defaultOrder);1498780456;Return the order on the specified {@code type}, or the specified_default value if none can be found._<p>Takes care of {@link Order @Order} and {@code @javax.annotation.Priority}._@param type the type to handle_@return the priority value, or the specified default order if none can be found_@since 5.0_@see #getPriority(Class);public static int getOrder(Class<?> type, int defaultOrder) {_		Integer order = getOrder(type)__		return (order != null ? order : defaultOrder)__	};return,the,order,on,the,specified,code,type,or,the,specified,default,value,if,none,can,be,found,p,takes,care,of,link,order,order,and,code,javax,annotation,priority,param,type,the,type,to,handle,return,the,priority,value,or,the,specified,default,order,if,none,can,be,found,since,5,0,see,get,priority,class;public,static,int,get,order,class,type,int,default,order,integer,order,get,order,type,return,order,null,order,default,order
OrderUtils -> public static int getOrder(Class<?> type, int defaultOrder);1531994322;Return the order on the specified {@code type}, or the specified_default value if none can be found._<p>Takes care of {@link Order @Order} and {@code @javax.annotation.Priority}._@param type the type to handle_@return the priority value, or the specified default order if none can be found_@since 5.0_@see #getPriority(Class);public static int getOrder(Class<?> type, int defaultOrder) {_		Integer order = getOrder(type)__		return (order != null ? order : defaultOrder)__	};return,the,order,on,the,specified,code,type,or,the,specified,default,value,if,none,can,be,found,p,takes,care,of,link,order,order,and,code,javax,annotation,priority,param,type,the,type,to,handle,return,the,priority,value,or,the,specified,default,order,if,none,can,be,found,since,5,0,see,get,priority,class;public,static,int,get,order,class,type,int,default,order,integer,order,get,order,type,return,order,null,order,default,order
OrderUtils -> public static int getOrder(Class<?> type, int defaultOrder);1533667007;Return the order on the specified {@code type}, or the specified_default value if none can be found._<p>Takes care of {@link Order @Order} and {@code @javax.annotation.Priority}._@param type the type to handle_@return the priority value, or the specified default order if none can be found_@since 5.0_@see #getPriority(Class);public static int getOrder(Class<?> type, int defaultOrder) {_		Integer order = getOrder(type)__		return (order != null ? order : defaultOrder)__	};return,the,order,on,the,specified,code,type,or,the,specified,default,value,if,none,can,be,found,p,takes,care,of,link,order,order,and,code,javax,annotation,priority,param,type,the,type,to,handle,return,the,priority,value,or,the,specified,default,order,if,none,can,be,found,since,5,0,see,get,priority,class;public,static,int,get,order,class,type,int,default,order,integer,order,get,order,type,return,order,null,order,default,order
OrderUtils -> public static Integer getPriority(Class<?> type);1409784073;Return the value of the {@code javax.annotation.Priority} annotation set_on the specified type or {@code null} if none is set._@param type the type to handle_@return the priority value if the annotation is set, {@code null} otherwise;public static Integer getPriority(Class<?> type) {_		if (priorityPresent) {_			for (Annotation annotation : type.getAnnotations()) {_				if (PRIORITY_ANNOTATION_CLASS_NAME.equals(annotation.annotationType().getName())) {_					return (Integer) AnnotationUtils.getValue(annotation)__				}_			}_		}_		return null__	};return,the,value,of,the,code,javax,annotation,priority,annotation,set,on,the,specified,type,or,code,null,if,none,is,set,param,type,the,type,to,handle,return,the,priority,value,if,the,annotation,is,set,code,null,otherwise;public,static,integer,get,priority,class,type,if,priority,present,for,annotation,annotation,type,get,annotations,if,equals,annotation,annotation,type,get,name,return,integer,annotation,utils,get,value,annotation,return,null
OrderUtils -> public static Integer getPriority(Class<?> type);1413887234;Return the value of the {@code javax.annotation.Priority} annotation_declared on the specified type, or {@code null} if none._@param type the type to handle_@return the priority value if the annotation is declared, or {@code null} if none;public static Integer getPriority(Class<?> type) {_		if (priorityAnnotationType != null) {_			Annotation priority = AnnotationUtils.findAnnotation(type, priorityAnnotationType)__			if (priority != null) {_				return (Integer) AnnotationUtils.getValue(priority)__			}_		}_		return null__	};return,the,value,of,the,code,javax,annotation,priority,annotation,declared,on,the,specified,type,or,code,null,if,none,param,type,the,type,to,handle,return,the,priority,value,if,the,annotation,is,declared,or,code,null,if,none;public,static,integer,get,priority,class,type,if,priority,annotation,type,null,annotation,priority,annotation,utils,find,annotation,type,priority,annotation,type,if,priority,null,return,integer,annotation,utils,get,value,priority,return,null
OrderUtils -> public static Integer getPriority(Class<?> type);1417453691;Return the value of the {@code javax.annotation.Priority} annotation_declared on the specified type, or {@code null} if none._@param type the type to handle_@return the priority value if the annotation is declared, or {@code null} if none;public static Integer getPriority(Class<?> type) {_		if (priorityAnnotationType != null) {_			Annotation priority = AnnotationUtils.findAnnotation(type, priorityAnnotationType)__			if (priority != null) {_				return (Integer) AnnotationUtils.getValue(priority)__			}_		}_		return null__	};return,the,value,of,the,code,javax,annotation,priority,annotation,declared,on,the,specified,type,or,code,null,if,none,param,type,the,type,to,handle,return,the,priority,value,if,the,annotation,is,declared,or,code,null,if,none;public,static,integer,get,priority,class,type,if,priority,annotation,type,null,annotation,priority,annotation,utils,find,annotation,type,priority,annotation,type,if,priority,null,return,integer,annotation,utils,get,value,priority,return,null
OrderUtils -> public static Integer getPriority(Class<?> type);1472072207;Return the value of the {@code javax.annotation.Priority} annotation_declared on the specified type, or {@code null} if none._@param type the type to handle_@return the priority value if the annotation is declared, or {@code null} if none;public static Integer getPriority(Class<?> type) {_		if (priorityAnnotationType != null) {_			Annotation priority = AnnotationUtils.findAnnotation(type, priorityAnnotationType)__			if (priority != null) {_				return (Integer) AnnotationUtils.getValue(priority)__			}_		}_		return null__	};return,the,value,of,the,code,javax,annotation,priority,annotation,declared,on,the,specified,type,or,code,null,if,none,param,type,the,type,to,handle,return,the,priority,value,if,the,annotation,is,declared,or,code,null,if,none;public,static,integer,get,priority,class,type,if,priority,annotation,type,null,annotation,priority,annotation,utils,find,annotation,type,priority,annotation,type,if,priority,null,return,integer,annotation,utils,get,value,priority,return,null
OrderUtils -> @Nullable 	public static Integer getOrder(Class<?> type, @Nullable Integer defaultOrder);1496837955;Return the order on the specified {@code type}, or the specified_default value if none can be found._<p>Takes care of {@link Order @Order} and {@code @javax.annotation.Priority}._@param type the type to handle_@return the priority value, or the specified default order if none can be found_@see #getPriority(Class);@Nullable_	public static Integer getOrder(Class<?> type, @Nullable Integer defaultOrder) {_		Integer order = getOrder(type)__		return (order != null ? order : defaultOrder)__	};return,the,order,on,the,specified,code,type,or,the,specified,default,value,if,none,can,be,found,p,takes,care,of,link,order,order,and,code,javax,annotation,priority,param,type,the,type,to,handle,return,the,priority,value,or,the,specified,default,order,if,none,can,be,found,see,get,priority,class;nullable,public,static,integer,get,order,class,type,nullable,integer,default,order,integer,order,get,order,type,return,order,null,order,default,order
OrderUtils -> @Nullable 	public static Integer getOrder(Class<?> type, @Nullable Integer defaultOrder);1498780456;Return the order on the specified {@code type}, or the specified_default value if none can be found._<p>Takes care of {@link Order @Order} and {@code @javax.annotation.Priority}._@param type the type to handle_@return the priority value, or the specified default order if none can be found_@see #getPriority(Class);@Nullable_	public static Integer getOrder(Class<?> type, @Nullable Integer defaultOrder) {_		Integer order = getOrder(type)__		return (order != null ? order : defaultOrder)__	};return,the,order,on,the,specified,code,type,or,the,specified,default,value,if,none,can,be,found,p,takes,care,of,link,order,order,and,code,javax,annotation,priority,param,type,the,type,to,handle,return,the,priority,value,or,the,specified,default,order,if,none,can,be,found,see,get,priority,class;nullable,public,static,integer,get,order,class,type,nullable,integer,default,order,integer,order,get,order,type,return,order,null,order,default,order
OrderUtils -> @Nullable 	public static Integer getOrder(Class<?> type, @Nullable Integer defaultOrder);1531994322;Return the order on the specified {@code type}, or the specified_default value if none can be found._<p>Takes care of {@link Order @Order} and {@code @javax.annotation.Priority}._@param type the type to handle_@return the priority value, or the specified default order if none can be found_@see #getPriority(Class);@Nullable_	public static Integer getOrder(Class<?> type, @Nullable Integer defaultOrder) {_		Integer order = getOrder(type)__		return (order != null ? order : defaultOrder)__	};return,the,order,on,the,specified,code,type,or,the,specified,default,value,if,none,can,be,found,p,takes,care,of,link,order,order,and,code,javax,annotation,priority,param,type,the,type,to,handle,return,the,priority,value,or,the,specified,default,order,if,none,can,be,found,see,get,priority,class;nullable,public,static,integer,get,order,class,type,nullable,integer,default,order,integer,order,get,order,type,return,order,null,order,default,order
OrderUtils -> @Nullable 	public static Integer getOrder(Class<?> type, @Nullable Integer defaultOrder);1533667007;Return the order on the specified {@code type}, or the specified_default value if none can be found._<p>Takes care of {@link Order @Order} and {@code @javax.annotation.Priority}._@param type the type to handle_@return the priority value, or the specified default order if none can be found_@see #getPriority(Class);@Nullable_	public static Integer getOrder(Class<?> type, @Nullable Integer defaultOrder) {_		Integer order = getOrder(type)__		return (order != null ? order : defaultOrder)__	};return,the,order,on,the,specified,code,type,or,the,specified,default,value,if,none,can,be,found,p,takes,care,of,link,order,order,and,code,javax,annotation,priority,param,type,the,type,to,handle,return,the,priority,value,or,the,specified,default,order,if,none,can,be,found,see,get,priority,class;nullable,public,static,integer,get,order,class,type,nullable,integer,default,order,integer,order,get,order,type,return,order,null,order,default,order
OrderUtils -> public static Integer getOrder(Class<?> type, Integer defaultOrder);1396355447;Return the order on the specified {@code type} or the specified_default value if none can be found._<p>Take care of {@link Order @Order} and {@code @javax.annotation.Priority}._@param type the type to handle_@return the priority value of the default if none can be found;public static Integer getOrder(Class<?> type, Integer defaultOrder) {_		Order order = AnnotationUtils.findAnnotation(type, Order.class)__		if (order != null) {_			return order.value()__		}_		Integer priorityOrder = getPriorityValue(type)__		if (priorityOrder != null) {_			return priorityOrder__		}_		return defaultOrder__	};return,the,order,on,the,specified,code,type,or,the,specified,default,value,if,none,can,be,found,p,take,care,of,link,order,order,and,code,javax,annotation,priority,param,type,the,type,to,handle,return,the,priority,value,of,the,default,if,none,can,be,found;public,static,integer,get,order,class,type,integer,default,order,order,order,annotation,utils,find,annotation,type,order,class,if,order,null,return,order,value,integer,priority,order,get,priority,value,type,if,priority,order,null,return,priority,order,return,default,order
OrderUtils -> public static Integer getOrder(Class<?> type, Integer defaultOrder);1404773971;Return the order on the specified {@code type} or the specified_default value if none can be found._<p>Take care of {@link Order @Order} and {@code @javax.annotation.Priority}._@param type the type to handle_@return the priority value of the default if none can be found;public static Integer getOrder(Class<?> type, Integer defaultOrder) {_		Order order = AnnotationUtils.findAnnotation(type, Order.class)__		if (order != null) {_			return order.value()__		}_		Integer priorityOrder = getPriorityValue(type)__		if (priorityOrder != null) {_			return priorityOrder__		}_		return defaultOrder__	};return,the,order,on,the,specified,code,type,or,the,specified,default,value,if,none,can,be,found,p,take,care,of,link,order,order,and,code,javax,annotation,priority,param,type,the,type,to,handle,return,the,priority,value,of,the,default,if,none,can,be,found;public,static,integer,get,order,class,type,integer,default,order,order,order,annotation,utils,find,annotation,type,order,class,if,order,null,return,order,value,integer,priority,order,get,priority,value,type,if,priority,order,null,return,priority,order,return,default,order
OrderUtils -> public static Integer getOrder(Class<?> type, Integer defaultOrder);1409784073;Return the order on the specified {@code type}, or the specified_default value if none can be found._<p>Take care of {@link Order @Order} and {@code @javax.annotation.Priority}._@param type the type to handle_@return the priority value of the default if none can be found;public static Integer getOrder(Class<?> type, Integer defaultOrder) {_		Order order = AnnotationUtils.findAnnotation(type, Order.class)__		if (order != null) {_			return order.value()__		}_		Integer priorityOrder = getPriority(type)__		if (priorityOrder != null) {_			return priorityOrder__		}_		return defaultOrder__	};return,the,order,on,the,specified,code,type,or,the,specified,default,value,if,none,can,be,found,p,take,care,of,link,order,order,and,code,javax,annotation,priority,param,type,the,type,to,handle,return,the,priority,value,of,the,default,if,none,can,be,found;public,static,integer,get,order,class,type,integer,default,order,order,order,annotation,utils,find,annotation,type,order,class,if,order,null,return,order,value,integer,priority,order,get,priority,type,if,priority,order,null,return,priority,order,return,default,order
OrderUtils -> public static Integer getOrder(Class<?> type, Integer defaultOrder);1413887234;Return the order on the specified {@code type}, or the specified_default value if none can be found._<p>Take care of {@link Order @Order} and {@code @javax.annotation.Priority}._@param type the type to handle_@return the priority value, or the specified default order if none can be found;public static Integer getOrder(Class<?> type, Integer defaultOrder) {_		Order order = AnnotationUtils.findAnnotation(type, Order.class)__		if (order != null) {_			return order.value()__		}_		Integer priorityOrder = getPriority(type)__		if (priorityOrder != null) {_			return priorityOrder__		}_		return defaultOrder__	};return,the,order,on,the,specified,code,type,or,the,specified,default,value,if,none,can,be,found,p,take,care,of,link,order,order,and,code,javax,annotation,priority,param,type,the,type,to,handle,return,the,priority,value,or,the,specified,default,order,if,none,can,be,found;public,static,integer,get,order,class,type,integer,default,order,order,order,annotation,utils,find,annotation,type,order,class,if,order,null,return,order,value,integer,priority,order,get,priority,type,if,priority,order,null,return,priority,order,return,default,order
OrderUtils -> public static Integer getOrder(Class<?> type, Integer defaultOrder);1417453691;Return the order on the specified {@code type}, or the specified_default value if none can be found._<p>Take care of {@link Order @Order} and {@code @javax.annotation.Priority}._@param type the type to handle_@return the priority value, or the specified default order if none can be found;public static Integer getOrder(Class<?> type, Integer defaultOrder) {_		Order order = AnnotationUtils.findAnnotation(type, Order.class)__		if (order != null) {_			return order.value()__		}_		Integer priorityOrder = getPriority(type)__		if (priorityOrder != null) {_			return priorityOrder__		}_		return defaultOrder__	};return,the,order,on,the,specified,code,type,or,the,specified,default,value,if,none,can,be,found,p,take,care,of,link,order,order,and,code,javax,annotation,priority,param,type,the,type,to,handle,return,the,priority,value,or,the,specified,default,order,if,none,can,be,found;public,static,integer,get,order,class,type,integer,default,order,order,order,annotation,utils,find,annotation,type,order,class,if,order,null,return,order,value,integer,priority,order,get,priority,type,if,priority,order,null,return,priority,order,return,default,order
OrderUtils -> public static Integer getOrder(Class<?> type, Integer defaultOrder);1472072207;Return the order on the specified {@code type}, or the specified_default value if none can be found._<p>Takes care of {@link Order @Order} and {@code @javax.annotation.Priority}._@param type the type to handle_@return the priority value, or the specified default order if none can be found_@see #getPriority(Class);public static Integer getOrder(Class<?> type, Integer defaultOrder) {_		Order order = AnnotationUtils.findAnnotation(type, Order.class)__		if (order != null) {_			return order.value()__		}_		Integer priorityOrder = getPriority(type)__		if (priorityOrder != null) {_			return priorityOrder__		}_		return defaultOrder__	};return,the,order,on,the,specified,code,type,or,the,specified,default,value,if,none,can,be,found,p,takes,care,of,link,order,order,and,code,javax,annotation,priority,param,type,the,type,to,handle,return,the,priority,value,or,the,specified,default,order,if,none,can,be,found,see,get,priority,class;public,static,integer,get,order,class,type,integer,default,order,order,order,annotation,utils,find,annotation,type,order,class,if,order,null,return,order,value,integer,priority,order,get,priority,type,if,priority,order,null,return,priority,order,return,default,order
OrderUtils -> public static Integer getOrder(Class<?> type, Integer defaultOrder);1495868221;Return the order on the specified {@code type}, or the specified_default value if none can be found._<p>Takes care of {@link Order @Order} and {@code @javax.annotation.Priority}._@param type the type to handle_@return the priority value, or the specified default order if none can be found_@see #getPriority(Class);public static Integer getOrder(Class<?> type, Integer defaultOrder) {_		Order order = AnnotationUtils.findAnnotation(type, Order.class)__		if (order != null) {_			return order.value()__		}_		Integer priorityOrder = getPriority(type)__		if (priorityOrder != null) {_			return priorityOrder__		}_		return defaultOrder__	};return,the,order,on,the,specified,code,type,or,the,specified,default,value,if,none,can,be,found,p,takes,care,of,link,order,order,and,code,javax,annotation,priority,param,type,the,type,to,handle,return,the,priority,value,or,the,specified,default,order,if,none,can,be,found,see,get,priority,class;public,static,integer,get,order,class,type,integer,default,order,order,order,annotation,utils,find,annotation,type,order,class,if,order,null,return,order,value,integer,priority,order,get,priority,type,if,priority,order,null,return,priority,order,return,default,order
OrderUtils -> @Nullable 	public static Integer getOrder(Class<?> type);1495868221;Return the order on the specified {@code type}._<p>Takes care of {@link Order @Order} and {@code @javax.annotation.Priority}._@param type the type to handle_@return the order value, or {@code null} if none can be found_@see #getPriority(Class);@Nullable_	public static Integer getOrder(Class<?> type) {_		return getOrder(type, null)__	};return,the,order,on,the,specified,code,type,p,takes,care,of,link,order,order,and,code,javax,annotation,priority,param,type,the,type,to,handle,return,the,order,value,or,code,null,if,none,can,be,found,see,get,priority,class;nullable,public,static,integer,get,order,class,type,return,get,order,type,null
OrderUtils -> @Nullable 	public static Integer getOrder(Class<?> type);1496837955;Return the order on the specified {@code type}._<p>Takes care of {@link Order @Order} and {@code @javax.annotation.Priority}._@param type the type to handle_@return the order value, or {@code null} if none can be found_@see #getPriority(Class);@Nullable_	public static Integer getOrder(Class<?> type) {_		Order order = AnnotationUtils.findAnnotation(type, Order.class)__		if (order != null) {_			return order.value()__		}_		Integer priorityOrder = getPriority(type)__		if (priorityOrder != null) {_			return priorityOrder__		}_		return null__	};return,the,order,on,the,specified,code,type,p,takes,care,of,link,order,order,and,code,javax,annotation,priority,param,type,the,type,to,handle,return,the,order,value,or,code,null,if,none,can,be,found,see,get,priority,class;nullable,public,static,integer,get,order,class,type,order,order,annotation,utils,find,annotation,type,order,class,if,order,null,return,order,value,integer,priority,order,get,priority,type,if,priority,order,null,return,priority,order,return,null
OrderUtils -> @Nullable 	public static Integer getOrder(Class<?> type);1498780456;Return the order on the specified {@code type}._<p>Takes care of {@link Order @Order} and {@code @javax.annotation.Priority}._@param type the type to handle_@return the order value, or {@code null} if none can be found_@see #getPriority(Class);@Nullable_	public static Integer getOrder(Class<?> type) {_		Order order = AnnotationUtils.findAnnotation(type, Order.class)__		if (order != null) {_			return order.value()__		}_		Integer priorityOrder = getPriority(type)__		if (priorityOrder != null) {_			return priorityOrder__		}_		return null__	};return,the,order,on,the,specified,code,type,p,takes,care,of,link,order,order,and,code,javax,annotation,priority,param,type,the,type,to,handle,return,the,order,value,or,code,null,if,none,can,be,found,see,get,priority,class;nullable,public,static,integer,get,order,class,type,order,order,annotation,utils,find,annotation,type,order,class,if,order,null,return,order,value,integer,priority,order,get,priority,type,if,priority,order,null,return,priority,order,return,null
OrderUtils -> @Nullable 	public static Integer getOrder(Class<?> type);1531994322;Return the order on the specified {@code type}._<p>Takes care of {@link Order @Order} and {@code @javax.annotation.Priority}._@param type the type to handle_@return the order value, or {@code null} if none can be found_@see #getPriority(Class);@Nullable_	public static Integer getOrder(Class<?> type) {_		Object cached = orderCache.get(type)__		if (cached != null) {_			return (cached instanceof Integer ? (Integer) cached : null)__		}_		Order order = AnnotationUtils.findAnnotation(type, Order.class)__		Integer result__		if (order != null) {_			result = order.value()__		}_		else {_			result = getPriority(type)__		}_		orderCache.put(type, (result != null ? result : NOT_ANNOTATED))__		return result__	};return,the,order,on,the,specified,code,type,p,takes,care,of,link,order,order,and,code,javax,annotation,priority,param,type,the,type,to,handle,return,the,order,value,or,code,null,if,none,can,be,found,see,get,priority,class;nullable,public,static,integer,get,order,class,type,object,cached,order,cache,get,type,if,cached,null,return,cached,instanceof,integer,integer,cached,null,order,order,annotation,utils,find,annotation,type,order,class,integer,result,if,order,null,result,order,value,else,result,get,priority,type,order,cache,put,type,result,null,result,return,result
OrderUtils -> @Nullable 	public static Integer getOrder(Class<?> type);1533667007;Return the order on the specified {@code type}._<p>Takes care of {@link Order @Order} and {@code @javax.annotation.Priority}._@param type the type to handle_@return the order value, or {@code null} if none can be found_@see #getPriority(Class);@Nullable_	public static Integer getOrder(Class<?> type) {_		Object cached = orderCache.get(type)__		if (cached != null) {_			return (cached instanceof Integer ? (Integer) cached : null)__		}_		Order order = AnnotationUtils.findAnnotation(type, Order.class)__		Integer result__		if (order != null) {_			result = order.value()__		}_		else {_			result = getPriority(type)__		}_		orderCache.put(type, (result != null ? result : NOT_ANNOTATED))__		return result__	};return,the,order,on,the,specified,code,type,p,takes,care,of,link,order,order,and,code,javax,annotation,priority,param,type,the,type,to,handle,return,the,order,value,or,code,null,if,none,can,be,found,see,get,priority,class;nullable,public,static,integer,get,order,class,type,object,cached,order,cache,get,type,if,cached,null,return,cached,instanceof,integer,integer,cached,null,order,order,annotation,utils,find,annotation,type,order,class,integer,result,if,order,null,result,order,value,else,result,get,priority,type,order,cache,put,type,result,null,result,return,result
