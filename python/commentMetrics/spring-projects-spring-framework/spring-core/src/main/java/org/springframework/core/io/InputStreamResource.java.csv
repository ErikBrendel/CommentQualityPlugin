# id;timestamp;commentText;codeText;commentWords;codeWords
InputStreamResource -> @Override 	public boolean exists();1328020251;This implementation always returns <code>true</code>.;@Override_	public boolean exists() {_		return true__	};this,implementation,always,returns,code,true,code;override,public,boolean,exists,return,true
InputStreamResource -> @Override 	public boolean exists();1356735495;This implementation always returns {@code true}.;@Override_	public boolean exists() {_		return true__	};this,implementation,always,returns,code,true;override,public,boolean,exists,return,true
InputStreamResource -> @Override 	public boolean exists();1357119239;This implementation always returns {@code true}.;@Override_	public boolean exists() {_		return true__	};this,implementation,always,returns,code,true;override,public,boolean,exists,return,true
InputStreamResource -> @Override 	public boolean exists();1368482696;This implementation always returns {@code true}.;@Override_	public boolean exists() {_		return true__	};this,implementation,always,returns,code,true;override,public,boolean,exists,return,true
InputStreamResource -> @Override 	public boolean exists();1425069697;This implementation always returns {@code true}.;@Override_	public boolean exists() {_		return true__	};this,implementation,always,returns,code,true;override,public,boolean,exists,return,true
InputStreamResource -> @Override 	public boolean exists();1468334463;This implementation always returns {@code true}.;@Override_	public boolean exists() {_		return true__	};this,implementation,always,returns,code,true;override,public,boolean,exists,return,true
InputStreamResource -> @Override 	public boolean exists();1496837955;This implementation always returns {@code true}.;@Override_	public boolean exists() {_		return true__	};this,implementation,always,returns,code,true;override,public,boolean,exists,return,true
InputStreamResource -> @Override 	public boolean exists();1530190293;This implementation always returns {@code true}.;@Override_	public boolean exists() {_		return true__	};this,implementation,always,returns,code,true;override,public,boolean,exists,return,true
InputStreamResource -> @Override 	public boolean isOpen();1328020251;This implementation always returns <code>true</code>.;@Override_	public boolean isOpen() {_		return true__	};this,implementation,always,returns,code,true,code;override,public,boolean,is,open,return,true
InputStreamResource -> @Override 	public boolean isOpen();1356735495;This implementation always returns {@code true}.;@Override_	public boolean isOpen() {_		return true__	};this,implementation,always,returns,code,true;override,public,boolean,is,open,return,true
InputStreamResource -> @Override 	public boolean isOpen();1357119239;This implementation always returns {@code true}.;@Override_	public boolean isOpen() {_		return true__	};this,implementation,always,returns,code,true;override,public,boolean,is,open,return,true
InputStreamResource -> @Override 	public boolean isOpen();1368482696;This implementation always returns {@code true}.;@Override_	public boolean isOpen() {_		return true__	};this,implementation,always,returns,code,true;override,public,boolean,is,open,return,true
InputStreamResource -> @Override 	public boolean isOpen();1425069697;This implementation always returns {@code true}.;@Override_	public boolean isOpen() {_		return true__	};this,implementation,always,returns,code,true;override,public,boolean,is,open,return,true
InputStreamResource -> @Override 	public boolean isOpen();1468334463;This implementation always returns {@code true}.;@Override_	public boolean isOpen() {_		return true__	};this,implementation,always,returns,code,true;override,public,boolean,is,open,return,true
InputStreamResource -> @Override 	public boolean isOpen();1496837955;This implementation always returns {@code true}.;@Override_	public boolean isOpen() {_		return true__	};this,implementation,always,returns,code,true;override,public,boolean,is,open,return,true
InputStreamResource -> @Override 	public boolean isOpen();1530190293;This implementation always returns {@code true}.;@Override_	public boolean isOpen() {_		return true__	};this,implementation,always,returns,code,true;override,public,boolean,is,open,return,true
InputStreamResource -> public InputStream getInputStream() throws IOException, IllegalStateException;1328020251;This implementation throws IllegalStateException if attempting to_read the underlying stream multiple times.;public InputStream getInputStream() throws IOException, IllegalStateException {_		if (this.read) {_			throw new IllegalStateException("InputStream has already been read - " +_					"do not use InputStreamResource if a stream needs to be read multiple times")__		}_		this.read = true__		return this.inputStream__	};this,implementation,throws,illegal,state,exception,if,attempting,to,read,the,underlying,stream,multiple,times;public,input,stream,get,input,stream,throws,ioexception,illegal,state,exception,if,this,read,throw,new,illegal,state,exception,input,stream,has,already,been,read,do,not,use,input,stream,resource,if,a,stream,needs,to,be,read,multiple,times,this,read,true,return,this,input,stream
InputStreamResource -> public InputStream getInputStream() throws IOException, IllegalStateException;1357119239;This implementation throws IllegalStateException if attempting to_read the underlying stream multiple times.;public InputStream getInputStream() throws IOException, IllegalStateException {_		if (this.read) {_			throw new IllegalStateException("InputStream has already been read - " +_					"do not use InputStreamResource if a stream needs to be read multiple times")__		}_		this.read = true__		return this.inputStream__	};this,implementation,throws,illegal,state,exception,if,attempting,to,read,the,underlying,stream,multiple,times;public,input,stream,get,input,stream,throws,ioexception,illegal,state,exception,if,this,read,throw,new,illegal,state,exception,input,stream,has,already,been,read,do,not,use,input,stream,resource,if,a,stream,needs,to,be,read,multiple,times,this,read,true,return,this,input,stream
InputStreamResource -> @Override 	public String getDescription();1356735495;This implementation returns the passed-in description, if any.;@Override_	public String getDescription() {_		return this.description__	};this,implementation,returns,the,passed,in,description,if,any;override,public,string,get,description,return,this,description
InputStreamResource -> @Override 	public String getDescription();1368482696;This implementation returns the passed-in description, if any.;@Override_	public String getDescription() {_		return this.description__	};this,implementation,returns,the,passed,in,description,if,any;override,public,string,get,description,return,this,description
InputStreamResource -> @Override 	public String getDescription();1425069697;This implementation returns a description that includes the passed-in_description, if any.;@Override_	public String getDescription() {_		return "InputStream resource [" + this.description + "]"__	};this,implementation,returns,a,description,that,includes,the,passed,in,description,if,any;override,public,string,get,description,return,input,stream,resource,this,description
InputStreamResource -> @Override 	public String getDescription();1468334463;This implementation returns a description that includes the passed-in_description, if any.;@Override_	public String getDescription() {_		return "InputStream resource [" + this.description + "]"__	};this,implementation,returns,a,description,that,includes,the,passed,in,description,if,any;override,public,string,get,description,return,input,stream,resource,this,description
InputStreamResource -> @Override 	public String getDescription();1496837955;This implementation returns a description that includes the passed-in_description, if any.;@Override_	public String getDescription() {_		return "InputStream resource [" + this.description + "]"__	};this,implementation,returns,a,description,that,includes,the,passed,in,description,if,any;override,public,string,get,description,return,input,stream,resource,this,description
InputStreamResource -> @Override 	public String getDescription();1530190293;This implementation returns a description that includes the passed-in_description, if any.;@Override_	public String getDescription() {_		return "InputStream resource [" + this.description + "]"__	};this,implementation,returns,a,description,that,includes,the,passed,in,description,if,any;override,public,string,get,description,return,input,stream,resource,this,description
InputStreamResource -> public InputStreamResource(InputStream inputStream);1328020251;Create a new InputStreamResource._@param inputStream the InputStream to use;public InputStreamResource(InputStream inputStream) {_		this(inputStream, "resource loaded through InputStream")__	};create,a,new,input,stream,resource,param,input,stream,the,input,stream,to,use;public,input,stream,resource,input,stream,input,stream,this,input,stream,resource,loaded,through,input,stream
InputStreamResource -> public InputStreamResource(InputStream inputStream);1356735495;Create a new InputStreamResource._@param inputStream the InputStream to use;public InputStreamResource(InputStream inputStream) {_		this(inputStream, "resource loaded through InputStream")__	};create,a,new,input,stream,resource,param,input,stream,the,input,stream,to,use;public,input,stream,resource,input,stream,input,stream,this,input,stream,resource,loaded,through,input,stream
InputStreamResource -> public InputStreamResource(InputStream inputStream);1357119239;Create a new InputStreamResource._@param inputStream the InputStream to use;public InputStreamResource(InputStream inputStream) {_		this(inputStream, "resource loaded through InputStream")__	};create,a,new,input,stream,resource,param,input,stream,the,input,stream,to,use;public,input,stream,resource,input,stream,input,stream,this,input,stream,resource,loaded,through,input,stream
InputStreamResource -> public InputStreamResource(InputStream inputStream);1368482696;Create a new InputStreamResource._@param inputStream the InputStream to use;public InputStreamResource(InputStream inputStream) {_		this(inputStream, "resource loaded through InputStream")__	};create,a,new,input,stream,resource,param,input,stream,the,input,stream,to,use;public,input,stream,resource,input,stream,input,stream,this,input,stream,resource,loaded,through,input,stream
InputStreamResource -> public InputStreamResource(InputStream inputStream);1425069697;Create a new InputStreamResource._@param inputStream the InputStream to use;public InputStreamResource(InputStream inputStream) {_		this(inputStream, "resource loaded through InputStream")__	};create,a,new,input,stream,resource,param,input,stream,the,input,stream,to,use;public,input,stream,resource,input,stream,input,stream,this,input,stream,resource,loaded,through,input,stream
InputStreamResource -> public InputStreamResource(InputStream inputStream);1468334463;Create a new InputStreamResource._@param inputStream the InputStream to use;public InputStreamResource(InputStream inputStream) {_		this(inputStream, "resource loaded through InputStream")__	};create,a,new,input,stream,resource,param,input,stream,the,input,stream,to,use;public,input,stream,resource,input,stream,input,stream,this,input,stream,resource,loaded,through,input,stream
InputStreamResource -> public InputStreamResource(InputStream inputStream);1496837955;Create a new InputStreamResource._@param inputStream the InputStream to use;public InputStreamResource(InputStream inputStream) {_		this(inputStream, "resource loaded through InputStream")__	};create,a,new,input,stream,resource,param,input,stream,the,input,stream,to,use;public,input,stream,resource,input,stream,input,stream,this,input,stream,resource,loaded,through,input,stream
InputStreamResource -> public InputStreamResource(InputStream inputStream);1530190293;Create a new InputStreamResource._@param inputStream the InputStream to use;public InputStreamResource(InputStream inputStream) {_		this(inputStream, "resource loaded through InputStream")__	};create,a,new,input,stream,resource,param,input,stream,the,input,stream,to,use;public,input,stream,resource,input,stream,input,stream,this,input,stream,resource,loaded,through,input,stream
InputStreamResource -> public String getDescription();1328020251;This implementation returns the passed-in description, if any.;public String getDescription() {_		return this.description__	};this,implementation,returns,the,passed,in,description,if,any;public,string,get,description,return,this,description
InputStreamResource -> public String getDescription();1357119239;This implementation returns the passed-in description, if any.;public String getDescription() {_		return this.description__	};this,implementation,returns,the,passed,in,description,if,any;public,string,get,description,return,this,description
InputStreamResource -> public InputStreamResource(InputStream inputStream, String description);1328020251;Create a new InputStreamResource._@param inputStream the InputStream to use_@param description where the InputStream comes from;public InputStreamResource(InputStream inputStream, String description) {_		if (inputStream == null) {_			throw new IllegalArgumentException("InputStream must not be null")__		}_		this.inputStream = inputStream__		this.description = (description != null ? description : "")__	};create,a,new,input,stream,resource,param,input,stream,the,input,stream,to,use,param,description,where,the,input,stream,comes,from;public,input,stream,resource,input,stream,input,stream,string,description,if,input,stream,null,throw,new,illegal,argument,exception,input,stream,must,not,be,null,this,input,stream,input,stream,this,description,description,null,description
InputStreamResource -> public InputStreamResource(InputStream inputStream, String description);1356735495;Create a new InputStreamResource._@param inputStream the InputStream to use_@param description where the InputStream comes from;public InputStreamResource(InputStream inputStream, String description) {_		if (inputStream == null) {_			throw new IllegalArgumentException("InputStream must not be null")__		}_		this.inputStream = inputStream__		this.description = (description != null ? description : "")__	};create,a,new,input,stream,resource,param,input,stream,the,input,stream,to,use,param,description,where,the,input,stream,comes,from;public,input,stream,resource,input,stream,input,stream,string,description,if,input,stream,null,throw,new,illegal,argument,exception,input,stream,must,not,be,null,this,input,stream,input,stream,this,description,description,null,description
InputStreamResource -> public InputStreamResource(InputStream inputStream, String description);1357119239;Create a new InputStreamResource._@param inputStream the InputStream to use_@param description where the InputStream comes from;public InputStreamResource(InputStream inputStream, String description) {_		if (inputStream == null) {_			throw new IllegalArgumentException("InputStream must not be null")__		}_		this.inputStream = inputStream__		this.description = (description != null ? description : "")__	};create,a,new,input,stream,resource,param,input,stream,the,input,stream,to,use,param,description,where,the,input,stream,comes,from;public,input,stream,resource,input,stream,input,stream,string,description,if,input,stream,null,throw,new,illegal,argument,exception,input,stream,must,not,be,null,this,input,stream,input,stream,this,description,description,null,description
InputStreamResource -> public InputStreamResource(InputStream inputStream, String description);1368482696;Create a new InputStreamResource._@param inputStream the InputStream to use_@param description where the InputStream comes from;public InputStreamResource(InputStream inputStream, String description) {_		if (inputStream == null) {_			throw new IllegalArgumentException("InputStream must not be null")__		}_		this.inputStream = inputStream__		this.description = (description != null ? description : "")__	};create,a,new,input,stream,resource,param,input,stream,the,input,stream,to,use,param,description,where,the,input,stream,comes,from;public,input,stream,resource,input,stream,input,stream,string,description,if,input,stream,null,throw,new,illegal,argument,exception,input,stream,must,not,be,null,this,input,stream,input,stream,this,description,description,null,description
InputStreamResource -> public InputStreamResource(InputStream inputStream, String description);1425069697;Create a new InputStreamResource._@param inputStream the InputStream to use_@param description where the InputStream comes from;public InputStreamResource(InputStream inputStream, String description) {_		if (inputStream == null) {_			throw new IllegalArgumentException("InputStream must not be null")__		}_		this.inputStream = inputStream__		this.description = (description != null ? description : "")__	};create,a,new,input,stream,resource,param,input,stream,the,input,stream,to,use,param,description,where,the,input,stream,comes,from;public,input,stream,resource,input,stream,input,stream,string,description,if,input,stream,null,throw,new,illegal,argument,exception,input,stream,must,not,be,null,this,input,stream,input,stream,this,description,description,null,description
InputStreamResource -> public InputStreamResource(InputStream inputStream, String description);1468334463;Create a new InputStreamResource._@param inputStream the InputStream to use_@param description where the InputStream comes from;public InputStreamResource(InputStream inputStream, String description) {_		Assert.notNull(inputStream, "InputStream must not be null")__		this.inputStream = inputStream__		this.description = (description != null ? description : "")__	};create,a,new,input,stream,resource,param,input,stream,the,input,stream,to,use,param,description,where,the,input,stream,comes,from;public,input,stream,resource,input,stream,input,stream,string,description,assert,not,null,input,stream,input,stream,must,not,be,null,this,input,stream,input,stream,this,description,description,null,description
InputStreamResource -> public InputStreamResource(InputStream inputStream, @Nullable String description);1496837955;Create a new InputStreamResource._@param inputStream the InputStream to use_@param description where the InputStream comes from;public InputStreamResource(InputStream inputStream, @Nullable String description) {_		Assert.notNull(inputStream, "InputStream must not be null")__		this.inputStream = inputStream__		this.description = (description != null ? description : "")__	};create,a,new,input,stream,resource,param,input,stream,the,input,stream,to,use,param,description,where,the,input,stream,comes,from;public,input,stream,resource,input,stream,input,stream,nullable,string,description,assert,not,null,input,stream,input,stream,must,not,be,null,this,input,stream,input,stream,this,description,description,null,description
InputStreamResource -> public InputStreamResource(InputStream inputStream, @Nullable String description);1530190293;Create a new InputStreamResource._@param inputStream the InputStream to use_@param description where the InputStream comes from;public InputStreamResource(InputStream inputStream, @Nullable String description) {_		Assert.notNull(inputStream, "InputStream must not be null")__		this.inputStream = inputStream__		this.description = (description != null ? description : "")__	};create,a,new,input,stream,resource,param,input,stream,the,input,stream,to,use,param,description,where,the,input,stream,comes,from;public,input,stream,resource,input,stream,input,stream,nullable,string,description,assert,not,null,input,stream,input,stream,must,not,be,null,this,input,stream,input,stream,this,description,description,null,description
InputStreamResource -> @Override 	public boolean equals(Object obj);1328020251;This implementation compares the underlying InputStream.;@Override_	public boolean equals(Object obj) {_		return (obj == this ||_		    (obj instanceof InputStreamResource && ((InputStreamResource) obj).inputStream.equals(this.inputStream)))__	};this,implementation,compares,the,underlying,input,stream;override,public,boolean,equals,object,obj,return,obj,this,obj,instanceof,input,stream,resource,input,stream,resource,obj,input,stream,equals,this,input,stream
InputStreamResource -> @Override 	public boolean equals(Object obj);1356735495;This implementation compares the underlying InputStream.;@Override_	public boolean equals(Object obj) {_		return (obj == this ||_			(obj instanceof InputStreamResource && ((InputStreamResource) obj).inputStream.equals(this.inputStream)))__	};this,implementation,compares,the,underlying,input,stream;override,public,boolean,equals,object,obj,return,obj,this,obj,instanceof,input,stream,resource,input,stream,resource,obj,input,stream,equals,this,input,stream
InputStreamResource -> @Override 	public boolean equals(Object obj);1357119239;This implementation compares the underlying InputStream.;@Override_	public boolean equals(Object obj) {_		return (obj == this ||_			(obj instanceof InputStreamResource && ((InputStreamResource) obj).inputStream.equals(this.inputStream)))__	};this,implementation,compares,the,underlying,input,stream;override,public,boolean,equals,object,obj,return,obj,this,obj,instanceof,input,stream,resource,input,stream,resource,obj,input,stream,equals,this,input,stream
InputStreamResource -> @Override 	public boolean equals(Object obj);1368482696;This implementation compares the underlying InputStream.;@Override_	public boolean equals(Object obj) {_		return (obj == this ||_			(obj instanceof InputStreamResource && ((InputStreamResource) obj).inputStream.equals(this.inputStream)))__	};this,implementation,compares,the,underlying,input,stream;override,public,boolean,equals,object,obj,return,obj,this,obj,instanceof,input,stream,resource,input,stream,resource,obj,input,stream,equals,this,input,stream
InputStreamResource -> @Override 	public boolean equals(Object obj);1425069697;This implementation compares the underlying InputStream.;@Override_	public boolean equals(Object obj) {_		return (obj == this ||_			(obj instanceof InputStreamResource && ((InputStreamResource) obj).inputStream.equals(this.inputStream)))__	};this,implementation,compares,the,underlying,input,stream;override,public,boolean,equals,object,obj,return,obj,this,obj,instanceof,input,stream,resource,input,stream,resource,obj,input,stream,equals,this,input,stream
InputStreamResource -> @Override 	public boolean equals(Object obj);1468334463;This implementation compares the underlying InputStream.;@Override_	public boolean equals(Object obj) {_		return (obj == this ||_			(obj instanceof InputStreamResource && ((InputStreamResource) obj).inputStream.equals(this.inputStream)))__	};this,implementation,compares,the,underlying,input,stream;override,public,boolean,equals,object,obj,return,obj,this,obj,instanceof,input,stream,resource,input,stream,resource,obj,input,stream,equals,this,input,stream
InputStreamResource -> @Override 	public boolean equals(Object obj);1496837955;This implementation compares the underlying InputStream.;@Override_	public boolean equals(Object obj) {_		return (obj == this ||_			(obj instanceof InputStreamResource && ((InputStreamResource) obj).inputStream.equals(this.inputStream)))__	};this,implementation,compares,the,underlying,input,stream;override,public,boolean,equals,object,obj,return,obj,this,obj,instanceof,input,stream,resource,input,stream,resource,obj,input,stream,equals,this,input,stream
InputStreamResource -> @Override 	public int hashCode();1328020251;This implementation returns the hash code of the underlying InputStream.;@Override_	public int hashCode() {_		return this.inputStream.hashCode()__	};this,implementation,returns,the,hash,code,of,the,underlying,input,stream;override,public,int,hash,code,return,this,input,stream,hash,code
InputStreamResource -> @Override 	public int hashCode();1356735495;This implementation returns the hash code of the underlying InputStream.;@Override_	public int hashCode() {_		return this.inputStream.hashCode()__	};this,implementation,returns,the,hash,code,of,the,underlying,input,stream;override,public,int,hash,code,return,this,input,stream,hash,code
InputStreamResource -> @Override 	public int hashCode();1357119239;This implementation returns the hash code of the underlying InputStream.;@Override_	public int hashCode() {_		return this.inputStream.hashCode()__	};this,implementation,returns,the,hash,code,of,the,underlying,input,stream;override,public,int,hash,code,return,this,input,stream,hash,code
InputStreamResource -> @Override 	public int hashCode();1368482696;This implementation returns the hash code of the underlying InputStream.;@Override_	public int hashCode() {_		return this.inputStream.hashCode()__	};this,implementation,returns,the,hash,code,of,the,underlying,input,stream;override,public,int,hash,code,return,this,input,stream,hash,code
InputStreamResource -> @Override 	public int hashCode();1425069697;This implementation returns the hash code of the underlying InputStream.;@Override_	public int hashCode() {_		return this.inputStream.hashCode()__	};this,implementation,returns,the,hash,code,of,the,underlying,input,stream;override,public,int,hash,code,return,this,input,stream,hash,code
InputStreamResource -> @Override 	public int hashCode();1468334463;This implementation returns the hash code of the underlying InputStream.;@Override_	public int hashCode() {_		return this.inputStream.hashCode()__	};this,implementation,returns,the,hash,code,of,the,underlying,input,stream;override,public,int,hash,code,return,this,input,stream,hash,code
InputStreamResource -> @Override 	public int hashCode();1496837955;This implementation returns the hash code of the underlying InputStream.;@Override_	public int hashCode() {_		return this.inputStream.hashCode()__	};this,implementation,returns,the,hash,code,of,the,underlying,input,stream;override,public,int,hash,code,return,this,input,stream,hash,code
InputStreamResource -> @Override 	public int hashCode();1530190293;This implementation returns the hash code of the underlying InputStream.;@Override_	public int hashCode() {_		return this.inputStream.hashCode()__	};this,implementation,returns,the,hash,code,of,the,underlying,input,stream;override,public,int,hash,code,return,this,input,stream,hash,code
InputStreamResource -> @Override 	public InputStream getInputStream() throws IOException, IllegalStateException;1356735495;This implementation throws IllegalStateException if attempting to_read the underlying stream multiple times.;@Override_	public InputStream getInputStream() throws IOException, IllegalStateException {_		if (this.read) {_			throw new IllegalStateException("InputStream has already been read - " +_					"do not use InputStreamResource if a stream needs to be read multiple times")__		}_		this.read = true__		return this.inputStream__	};this,implementation,throws,illegal,state,exception,if,attempting,to,read,the,underlying,stream,multiple,times;override,public,input,stream,get,input,stream,throws,ioexception,illegal,state,exception,if,this,read,throw,new,illegal,state,exception,input,stream,has,already,been,read,do,not,use,input,stream,resource,if,a,stream,needs,to,be,read,multiple,times,this,read,true,return,this,input,stream
InputStreamResource -> @Override 	public InputStream getInputStream() throws IOException, IllegalStateException;1368482696;This implementation throws IllegalStateException if attempting to_read the underlying stream multiple times.;@Override_	public InputStream getInputStream() throws IOException, IllegalStateException {_		if (this.read) {_			throw new IllegalStateException("InputStream has already been read - " +_					"do not use InputStreamResource if a stream needs to be read multiple times")__		}_		this.read = true__		return this.inputStream__	};this,implementation,throws,illegal,state,exception,if,attempting,to,read,the,underlying,stream,multiple,times;override,public,input,stream,get,input,stream,throws,ioexception,illegal,state,exception,if,this,read,throw,new,illegal,state,exception,input,stream,has,already,been,read,do,not,use,input,stream,resource,if,a,stream,needs,to,be,read,multiple,times,this,read,true,return,this,input,stream
InputStreamResource -> @Override 	public InputStream getInputStream() throws IOException, IllegalStateException;1425069697;This implementation throws IllegalStateException if attempting to_read the underlying stream multiple times.;@Override_	public InputStream getInputStream() throws IOException, IllegalStateException {_		if (this.read) {_			throw new IllegalStateException("InputStream has already been read - " +_					"do not use InputStreamResource if a stream needs to be read multiple times")__		}_		this.read = true__		return this.inputStream__	};this,implementation,throws,illegal,state,exception,if,attempting,to,read,the,underlying,stream,multiple,times;override,public,input,stream,get,input,stream,throws,ioexception,illegal,state,exception,if,this,read,throw,new,illegal,state,exception,input,stream,has,already,been,read,do,not,use,input,stream,resource,if,a,stream,needs,to,be,read,multiple,times,this,read,true,return,this,input,stream
InputStreamResource -> @Override 	public InputStream getInputStream() throws IOException, IllegalStateException;1468334463;This implementation throws IllegalStateException if attempting to_read the underlying stream multiple times.;@Override_	public InputStream getInputStream() throws IOException, IllegalStateException {_		if (this.read) {_			throw new IllegalStateException("InputStream has already been read - " +_					"do not use InputStreamResource if a stream needs to be read multiple times")__		}_		this.read = true__		return this.inputStream__	};this,implementation,throws,illegal,state,exception,if,attempting,to,read,the,underlying,stream,multiple,times;override,public,input,stream,get,input,stream,throws,ioexception,illegal,state,exception,if,this,read,throw,new,illegal,state,exception,input,stream,has,already,been,read,do,not,use,input,stream,resource,if,a,stream,needs,to,be,read,multiple,times,this,read,true,return,this,input,stream
InputStreamResource -> @Override 	public InputStream getInputStream() throws IOException, IllegalStateException;1496837955;This implementation throws IllegalStateException if attempting to_read the underlying stream multiple times.;@Override_	public InputStream getInputStream() throws IOException, IllegalStateException {_		if (this.read) {_			throw new IllegalStateException("InputStream has already been read - " +_					"do not use InputStreamResource if a stream needs to be read multiple times")__		}_		this.read = true__		return this.inputStream__	};this,implementation,throws,illegal,state,exception,if,attempting,to,read,the,underlying,stream,multiple,times;override,public,input,stream,get,input,stream,throws,ioexception,illegal,state,exception,if,this,read,throw,new,illegal,state,exception,input,stream,has,already,been,read,do,not,use,input,stream,resource,if,a,stream,needs,to,be,read,multiple,times,this,read,true,return,this,input,stream
InputStreamResource -> @Override 	public InputStream getInputStream() throws IOException, IllegalStateException;1530190293;This implementation throws IllegalStateException if attempting to_read the underlying stream multiple times.;@Override_	public InputStream getInputStream() throws IOException, IllegalStateException {_		if (this.read) {_			throw new IllegalStateException("InputStream has already been read - " +_					"do not use InputStreamResource if a stream needs to be read multiple times")__		}_		this.read = true__		return this.inputStream__	};this,implementation,throws,illegal,state,exception,if,attempting,to,read,the,underlying,stream,multiple,times;override,public,input,stream,get,input,stream,throws,ioexception,illegal,state,exception,if,this,read,throw,new,illegal,state,exception,input,stream,has,already,been,read,do,not,use,input,stream,resource,if,a,stream,needs,to,be,read,multiple,times,this,read,true,return,this,input,stream
