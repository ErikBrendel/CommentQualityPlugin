# id;timestamp;commentText;codeText;commentWords;codeWords
ConverterRegistry -> void addConverter(GenericConverter converter)_;1328020251;Add a generic converter to this registry.;void addConverter(GenericConverter converter)_;add,a,generic,converter,to,this,registry;void,add,converter,generic,converter,converter
ConverterRegistry -> void addConverter(GenericConverter converter)_;1351285766;Add a generic converter to this registry.;void addConverter(GenericConverter converter)_;add,a,generic,converter,to,this,registry;void,add,converter,generic,converter,converter
ConverterRegistry -> void addConverter(GenericConverter converter)_;1453750406;Add a generic converter to this registry.;void addConverter(GenericConverter converter)_;add,a,generic,converter,to,this,registry;void,add,converter,generic,converter,converter
ConverterRegistry -> void addConverter(GenericConverter converter)_;1477045452;Add a generic converter to this registry.;void addConverter(GenericConverter converter)_;add,a,generic,converter,to,this,registry;void,add,converter,generic,converter,converter
ConverterRegistry -> <S, T> void addConverter(Class<S> sourceType, Class<T> targetType, Converter<? super S, ? extends T> converter)_;1453750406;Add a plain converter to this registry._The convertible source/target type pair is specified explicitly._<p>Allows for a Converter to be reused for multiple distinct pairs without_having to create a Converter class for each pair._@since 3.1;<S, T> void addConverter(Class<S> sourceType, Class<T> targetType, Converter<? super S, ? extends T> converter)_;add,a,plain,converter,to,this,registry,the,convertible,source,target,type,pair,is,specified,explicitly,p,allows,for,a,converter,to,be,reused,for,multiple,distinct,pairs,without,having,to,create,a,converter,class,for,each,pair,since,3,1;s,t,void,add,converter,class,s,source,type,class,t,target,type,converter,super,s,extends,t,converter
ConverterRegistry -> <S, T> void addConverter(Class<S> sourceType, Class<T> targetType, Converter<? super S, ? extends T> converter)_;1477045452;Add a plain converter to this registry._The convertible source/target type pair is specified explicitly._<p>Allows for a Converter to be reused for multiple distinct pairs without_having to create a Converter class for each pair._@since 3.1;<S, T> void addConverter(Class<S> sourceType, Class<T> targetType, Converter<? super S, ? extends T> converter)_;add,a,plain,converter,to,this,registry,the,convertible,source,target,type,pair,is,specified,explicitly,p,allows,for,a,converter,to,be,reused,for,multiple,distinct,pairs,without,having,to,create,a,converter,class,for,each,pair,since,3,1;s,t,void,add,converter,class,s,source,type,class,t,target,type,converter,super,s,extends,t,converter
ConverterRegistry -> void addConverter(Class<?> sourceType, Class<?> targetType, Converter<?, ?> converter)_;1328020251;Add a plain converter to this registry._The convertible sourceType/targetType pair is specified explicitly._Allows for a Converter to be reused for multiple distinct pairs without having to create a Converter class for each pair._@since 3.1;void addConverter(Class<?> sourceType, Class<?> targetType, Converter<?, ?> converter)_;add,a,plain,converter,to,this,registry,the,convertible,source,type,target,type,pair,is,specified,explicitly,allows,for,a,converter,to,be,reused,for,multiple,distinct,pairs,without,having,to,create,a,converter,class,for,each,pair,since,3,1;void,add,converter,class,source,type,class,target,type,converter,converter
ConverterRegistry -> void addConverter(Class<?> sourceType, Class<?> targetType, Converter<?, ?> converter)_;1351285766;Add a plain converter to this registry._The convertible sourceType/targetType pair is specified explicitly._Allows for a Converter to be reused for multiple distinct pairs without having to create a Converter class for each pair._@since 3.1;void addConverter(Class<?> sourceType, Class<?> targetType, Converter<?, ?> converter)_;add,a,plain,converter,to,this,registry,the,convertible,source,type,target,type,pair,is,specified,explicitly,allows,for,a,converter,to,be,reused,for,multiple,distinct,pairs,without,having,to,create,a,converter,class,for,each,pair,since,3,1;void,add,converter,class,source,type,class,target,type,converter,converter
ConverterRegistry -> void addConverterFactory(ConverterFactory<?, ?> converterFactory)_;1328020251;Add a ranged converter factory to this registry._The convertible sourceType/rangeType pair is derived from the ConverterFactory's parameterized types._@throws IllegalArgumentException if the parameterized types could not be resolved.;void addConverterFactory(ConverterFactory<?, ?> converterFactory)_;add,a,ranged,converter,factory,to,this,registry,the,convertible,source,type,range,type,pair,is,derived,from,the,converter,factory,s,parameterized,types,throws,illegal,argument,exception,if,the,parameterized,types,could,not,be,resolved;void,add,converter,factory,converter,factory,converter,factory
ConverterRegistry -> void addConverterFactory(ConverterFactory<?, ?> converterFactory)_;1351285766;Add a ranged converter factory to this registry._The convertible sourceType/rangeType pair is derived from the ConverterFactory's parameterized types._@throws IllegalArgumentException if the parameterized types could not be resolved.;void addConverterFactory(ConverterFactory<?, ?> converterFactory)_;add,a,ranged,converter,factory,to,this,registry,the,convertible,source,type,range,type,pair,is,derived,from,the,converter,factory,s,parameterized,types,throws,illegal,argument,exception,if,the,parameterized,types,could,not,be,resolved;void,add,converter,factory,converter,factory,converter,factory
ConverterRegistry -> void addConverterFactory(ConverterFactory<?, ?> converterFactory)_;1453750406;Add a ranged converter factory to this registry._The convertible source/target type pair is derived from the ConverterFactory's parameterized types._@throws IllegalArgumentException if the parameterized types could not be resolved.;void addConverterFactory(ConverterFactory<?, ?> converterFactory)_;add,a,ranged,converter,factory,to,this,registry,the,convertible,source,target,type,pair,is,derived,from,the,converter,factory,s,parameterized,types,throws,illegal,argument,exception,if,the,parameterized,types,could,not,be,resolved;void,add,converter,factory,converter,factory,converter,factory
ConverterRegistry -> void addConverter(Converter<?, ?> converter)_;1328020251;Add a plain converter to this registry._The convertible sourceType/targetType pair is derived from the Converter's parameterized types._@throws IllegalArgumentException if the parameterized types could not be resolved;void addConverter(Converter<?, ?> converter)_;add,a,plain,converter,to,this,registry,the,convertible,source,type,target,type,pair,is,derived,from,the,converter,s,parameterized,types,throws,illegal,argument,exception,if,the,parameterized,types,could,not,be,resolved;void,add,converter,converter,converter
ConverterRegistry -> void addConverter(Converter<?, ?> converter)_;1351285766;Add a plain converter to this registry._The convertible sourceType/targetType pair is derived from the Converter's parameterized types._@throws IllegalArgumentException if the parameterized types could not be resolved;void addConverter(Converter<?, ?> converter)_;add,a,plain,converter,to,this,registry,the,convertible,source,type,target,type,pair,is,derived,from,the,converter,s,parameterized,types,throws,illegal,argument,exception,if,the,parameterized,types,could,not,be,resolved;void,add,converter,converter,converter
ConverterRegistry -> void addConverter(Converter<?, ?> converter)_;1453750406;Add a plain converter to this registry._The convertible source/target type pair is derived from the Converter's parameterized types._@throws IllegalArgumentException if the parameterized types could not be resolved;void addConverter(Converter<?, ?> converter)_;add,a,plain,converter,to,this,registry,the,convertible,source,target,type,pair,is,derived,from,the,converter,s,parameterized,types,throws,illegal,argument,exception,if,the,parameterized,types,could,not,be,resolved;void,add,converter,converter,converter
ConverterRegistry -> void addConverter(Converter<?, ?> converter)_;1477045452;Add a plain converter to this registry._The convertible source/target type pair is derived from the Converter's parameterized types._@throws IllegalArgumentException if the parameterized types could not be resolved;void addConverter(Converter<?, ?> converter)_;add,a,plain,converter,to,this,registry,the,convertible,source,target,type,pair,is,derived,from,the,converter,s,parameterized,types,throws,illegal,argument,exception,if,the,parameterized,types,could,not,be,resolved;void,add,converter,converter,converter
ConverterRegistry -> void removeConvertible(Class<?> sourceType, Class<?> targetType)_;1328020251;Remove any converters from sourceType to targetType._@param sourceType the source type_@param targetType the target type;void removeConvertible(Class<?> sourceType, Class<?> targetType)_;remove,any,converters,from,source,type,to,target,type,param,source,type,the,source,type,param,target,type,the,target,type;void,remove,convertible,class,source,type,class,target,type
ConverterRegistry -> void removeConvertible(Class<?> sourceType, Class<?> targetType)_;1351285766;Remove any converters from sourceType to targetType._@param sourceType the source type_@param targetType the target type;void removeConvertible(Class<?> sourceType, Class<?> targetType)_;remove,any,converters,from,source,type,to,target,type,param,source,type,the,source,type,param,target,type,the,target,type;void,remove,convertible,class,source,type,class,target,type
ConverterRegistry -> void removeConvertible(Class<?> sourceType, Class<?> targetType)_;1453750406;Remove any converters from sourceType to targetType._@param sourceType the source type_@param targetType the target type;void removeConvertible(Class<?> sourceType, Class<?> targetType)_;remove,any,converters,from,source,type,to,target,type,param,source,type,the,source,type,param,target,type,the,target,type;void,remove,convertible,class,source,type,class,target,type
ConverterRegistry -> void removeConvertible(Class<?> sourceType, Class<?> targetType)_;1477045452;Remove any converters from {@code sourceType} to {@code targetType}._@param sourceType the source type_@param targetType the target type;void removeConvertible(Class<?> sourceType, Class<?> targetType)_;remove,any,converters,from,code,source,type,to,code,target,type,param,source,type,the,source,type,param,target,type,the,target,type;void,remove,convertible,class,source,type,class,target,type
