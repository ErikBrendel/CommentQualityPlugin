commented;modifiers;parameterAmount;loc;comment;code
false;public;2;5;;@Override public boolean canDecode(ResolvableType elementType, @Nullable MimeType mimeType) {     return (ByteBuffer.class.isAssignableFrom(elementType.toClass()) && super.canDecode(elementType, mimeType)). }
false;protected;4;14;;@Override protected ByteBuffer decodeDataBuffer(DataBuffer dataBuffer, ResolvableType elementType, @Nullable MimeType mimeType, @Nullable Map<String, Object> hints) {     int byteCount = dataBuffer.readableByteCount().     ByteBuffer copy = ByteBuffer.allocate(byteCount).     copy.put(dataBuffer.asByteBuffer()).     copy.flip().     DataBufferUtils.release(dataBuffer).     if (logger.isDebugEnabled()) {         logger.debug(Hints.getLogPrefix(hints) + "Read " + byteCount + " bytes").     }     return copy. }
