# id;timestamp;commentText;codeText;commentWords;codeWords
TypeUtils -> public static boolean isAssignable(Type lhsType, Type rhsType);1328020251;Check if the right-hand side type may be assigned to the left-hand side_type following the Java generics rules._@param lhsType the target type_@param rhsType the value type that should be assigned to the target type_@return true if rhs is assignable to lhs;public static boolean isAssignable(Type lhsType, Type rhsType) {_		Assert.notNull(lhsType, "Left-hand side type must not be null")__		Assert.notNull(rhsType, "Right-hand side type must not be null")___		_		if (lhsType.equals(rhsType) || lhsType.equals(Object.class)) {_			return true__		}__		if (lhsType instanceof Class<?>) {_			Class<?> lhsClass = (Class<?>) lhsType___			_			if (rhsType instanceof Class<?>) {_				return ClassUtils.isAssignable(lhsClass, (Class<?>) rhsType)__			}__			if (rhsType instanceof ParameterizedType) {_				Type rhsRaw = ((ParameterizedType) rhsType).getRawType()___				_				if (rhsRaw instanceof Class<?>) {_					return ClassUtils.isAssignable(lhsClass, (Class<?>) rhsRaw)__				}_			}_			else if (lhsClass.isArray() && rhsType instanceof GenericArrayType) {_				Type rhsComponent = ((GenericArrayType) rhsType).getGenericComponentType()___				return isAssignable(lhsClass.getComponentType(), rhsComponent)__			}_		}__		_		if (lhsType instanceof ParameterizedType) {_			if (rhsType instanceof Class<?>) {_				Type lhsRaw = ((ParameterizedType) lhsType).getRawType()___				if (lhsRaw instanceof Class<?>) {_					return ClassUtils.isAssignable((Class<?>) lhsRaw, (Class<?>) rhsType)__				}_			}_			else if (rhsType instanceof ParameterizedType) {_				return isAssignable((ParameterizedType) lhsType, (ParameterizedType) rhsType)__			}_		}__		if (lhsType instanceof GenericArrayType) {_			Type lhsComponent = ((GenericArrayType) lhsType).getGenericComponentType()___			if (rhsType instanceof Class<?>) {_				Class<?> rhsClass = (Class<?>) rhsType___				if (rhsClass.isArray()) {_					return isAssignable(lhsComponent, rhsClass.getComponentType())__				}_			}_			else if (rhsType instanceof GenericArrayType) {_				Type rhsComponent = ((GenericArrayType) rhsType).getGenericComponentType()___				return isAssignable(lhsComponent, rhsComponent)__			}_		}__		if (lhsType instanceof WildcardType) {_			return isAssignable((WildcardType) lhsType, rhsType)__		}__		return false__	};check,if,the,right,hand,side,type,may,be,assigned,to,the,left,hand,side,type,following,the,java,generics,rules,param,lhs,type,the,target,type,param,rhs,type,the,value,type,that,should,be,assigned,to,the,target,type,return,true,if,rhs,is,assignable,to,lhs;public,static,boolean,is,assignable,type,lhs,type,type,rhs,type,assert,not,null,lhs,type,left,hand,side,type,must,not,be,null,assert,not,null,rhs,type,right,hand,side,type,must,not,be,null,if,lhs,type,equals,rhs,type,lhs,type,equals,object,class,return,true,if,lhs,type,instanceof,class,class,lhs,class,class,lhs,type,if,rhs,type,instanceof,class,return,class,utils,is,assignable,lhs,class,class,rhs,type,if,rhs,type,instanceof,parameterized,type,type,rhs,raw,parameterized,type,rhs,type,get,raw,type,if,rhs,raw,instanceof,class,return,class,utils,is,assignable,lhs,class,class,rhs,raw,else,if,lhs,class,is,array,rhs,type,instanceof,generic,array,type,type,rhs,component,generic,array,type,rhs,type,get,generic,component,type,return,is,assignable,lhs,class,get,component,type,rhs,component,if,lhs,type,instanceof,parameterized,type,if,rhs,type,instanceof,class,type,lhs,raw,parameterized,type,lhs,type,get,raw,type,if,lhs,raw,instanceof,class,return,class,utils,is,assignable,class,lhs,raw,class,rhs,type,else,if,rhs,type,instanceof,parameterized,type,return,is,assignable,parameterized,type,lhs,type,parameterized,type,rhs,type,if,lhs,type,instanceof,generic,array,type,type,lhs,component,generic,array,type,lhs,type,get,generic,component,type,if,rhs,type,instanceof,class,class,rhs,class,class,rhs,type,if,rhs,class,is,array,return,is,assignable,lhs,component,rhs,class,get,component,type,else,if,rhs,type,instanceof,generic,array,type,type,rhs,component,generic,array,type,rhs,type,get,generic,component,type,return,is,assignable,lhs,component,rhs,component,if,lhs,type,instanceof,wildcard,type,return,is,assignable,wildcard,type,lhs,type,rhs,type,return,false
TypeUtils -> public static boolean isAssignable(Type lhsType, Type rhsType);1356735495;Check if the right-hand side type may be assigned to the left-hand side_type following the Java generics rules._@param lhsType the target type_@param rhsType the value type that should be assigned to the target type_@return true if rhs is assignable to lhs;public static boolean isAssignable(Type lhsType, Type rhsType) {_		Assert.notNull(lhsType, "Left-hand side type must not be null")__		Assert.notNull(rhsType, "Right-hand side type must not be null")___		_		if (lhsType.equals(rhsType) || lhsType.equals(Object.class)) {_			return true__		}__		if (lhsType instanceof Class<?>) {_			Class<?> lhsClass = (Class<?>) lhsType___			_			if (rhsType instanceof Class<?>) {_				return ClassUtils.isAssignable(lhsClass, (Class<?>) rhsType)__			}__			if (rhsType instanceof ParameterizedType) {_				Type rhsRaw = ((ParameterizedType) rhsType).getRawType()___				_				if (rhsRaw instanceof Class<?>) {_					return ClassUtils.isAssignable(lhsClass, (Class<?>) rhsRaw)__				}_			}_			else if (lhsClass.isArray() && rhsType instanceof GenericArrayType) {_				Type rhsComponent = ((GenericArrayType) rhsType).getGenericComponentType()___				return isAssignable(lhsClass.getComponentType(), rhsComponent)__			}_		}__		_		if (lhsType instanceof ParameterizedType) {_			if (rhsType instanceof Class<?>) {_				Type lhsRaw = ((ParameterizedType) lhsType).getRawType()___				if (lhsRaw instanceof Class<?>) {_					return ClassUtils.isAssignable((Class<?>) lhsRaw, (Class<?>) rhsType)__				}_			}_			else if (rhsType instanceof ParameterizedType) {_				return isAssignable((ParameterizedType) lhsType, (ParameterizedType) rhsType)__			}_		}__		if (lhsType instanceof GenericArrayType) {_			Type lhsComponent = ((GenericArrayType) lhsType).getGenericComponentType()___			if (rhsType instanceof Class<?>) {_				Class<?> rhsClass = (Class<?>) rhsType___				if (rhsClass.isArray()) {_					return isAssignable(lhsComponent, rhsClass.getComponentType())__				}_			}_			else if (rhsType instanceof GenericArrayType) {_				Type rhsComponent = ((GenericArrayType) rhsType).getGenericComponentType()___				return isAssignable(lhsComponent, rhsComponent)__			}_		}__		if (lhsType instanceof WildcardType) {_			return isAssignable((WildcardType) lhsType, rhsType)__		}__		return false__	};check,if,the,right,hand,side,type,may,be,assigned,to,the,left,hand,side,type,following,the,java,generics,rules,param,lhs,type,the,target,type,param,rhs,type,the,value,type,that,should,be,assigned,to,the,target,type,return,true,if,rhs,is,assignable,to,lhs;public,static,boolean,is,assignable,type,lhs,type,type,rhs,type,assert,not,null,lhs,type,left,hand,side,type,must,not,be,null,assert,not,null,rhs,type,right,hand,side,type,must,not,be,null,if,lhs,type,equals,rhs,type,lhs,type,equals,object,class,return,true,if,lhs,type,instanceof,class,class,lhs,class,class,lhs,type,if,rhs,type,instanceof,class,return,class,utils,is,assignable,lhs,class,class,rhs,type,if,rhs,type,instanceof,parameterized,type,type,rhs,raw,parameterized,type,rhs,type,get,raw,type,if,rhs,raw,instanceof,class,return,class,utils,is,assignable,lhs,class,class,rhs,raw,else,if,lhs,class,is,array,rhs,type,instanceof,generic,array,type,type,rhs,component,generic,array,type,rhs,type,get,generic,component,type,return,is,assignable,lhs,class,get,component,type,rhs,component,if,lhs,type,instanceof,parameterized,type,if,rhs,type,instanceof,class,type,lhs,raw,parameterized,type,lhs,type,get,raw,type,if,lhs,raw,instanceof,class,return,class,utils,is,assignable,class,lhs,raw,class,rhs,type,else,if,rhs,type,instanceof,parameterized,type,return,is,assignable,parameterized,type,lhs,type,parameterized,type,rhs,type,if,lhs,type,instanceof,generic,array,type,type,lhs,component,generic,array,type,lhs,type,get,generic,component,type,if,rhs,type,instanceof,class,class,rhs,class,class,rhs,type,if,rhs,class,is,array,return,is,assignable,lhs,component,rhs,class,get,component,type,else,if,rhs,type,instanceof,generic,array,type,type,rhs,component,generic,array,type,rhs,type,get,generic,component,type,return,is,assignable,lhs,component,rhs,component,if,lhs,type,instanceof,wildcard,type,return,is,assignable,wildcard,type,lhs,type,rhs,type,return,false
TypeUtils -> public static boolean isAssignable(Type lhsType, Type rhsType);1413848647;Check if the right-hand side type may be assigned to the left-hand side_type following the Java generics rules._@param lhsType the target type_@param rhsType the value type that should be assigned to the target type_@return true if rhs is assignable to lhs;public static boolean isAssignable(Type lhsType, Type rhsType) {_		Assert.notNull(lhsType, "Left-hand side type must not be null")__		Assert.notNull(rhsType, "Right-hand side type must not be null")___		_		if (lhsType.equals(rhsType) || lhsType.equals(Object.class)) {_			return true__		}__		if (lhsType instanceof Class<?>) {_			Class<?> lhsClass = (Class<?>) lhsType___			_			if (rhsType instanceof Class<?>) {_				return ClassUtils.isAssignable(lhsClass, (Class<?>) rhsType)__			}__			if (rhsType instanceof ParameterizedType) {_				Type rhsRaw = ((ParameterizedType) rhsType).getRawType()___				_				if (rhsRaw instanceof Class<?>) {_					return ClassUtils.isAssignable(lhsClass, (Class<?>) rhsRaw)__				}_			}_			else if (lhsClass.isArray() && rhsType instanceof GenericArrayType) {_				Type rhsComponent = ((GenericArrayType) rhsType).getGenericComponentType()___				return isAssignable(lhsClass.getComponentType(), rhsComponent)__			}_		}__		_		if (lhsType instanceof ParameterizedType) {_			if (rhsType instanceof Class<?>) {_				Type lhsRaw = ((ParameterizedType) lhsType).getRawType()___				if (lhsRaw instanceof Class<?>) {_					return ClassUtils.isAssignable((Class<?>) lhsRaw, (Class<?>) rhsType)__				}_			}_			else if (rhsType instanceof ParameterizedType) {_				return isAssignable((ParameterizedType) lhsType, (ParameterizedType) rhsType)__			}_		}__		if (lhsType instanceof GenericArrayType) {_			Type lhsComponent = ((GenericArrayType) lhsType).getGenericComponentType()___			if (rhsType instanceof Class<?>) {_				Class<?> rhsClass = (Class<?>) rhsType___				if (rhsClass.isArray()) {_					return isAssignable(lhsComponent, rhsClass.getComponentType())__				}_			}_			else if (rhsType instanceof GenericArrayType) {_				Type rhsComponent = ((GenericArrayType) rhsType).getGenericComponentType()___				return isAssignable(lhsComponent, rhsComponent)__			}_		}__		if (lhsType instanceof WildcardType) {_			return isAssignable((WildcardType) lhsType, rhsType)__		}__		return false__	};check,if,the,right,hand,side,type,may,be,assigned,to,the,left,hand,side,type,following,the,java,generics,rules,param,lhs,type,the,target,type,param,rhs,type,the,value,type,that,should,be,assigned,to,the,target,type,return,true,if,rhs,is,assignable,to,lhs;public,static,boolean,is,assignable,type,lhs,type,type,rhs,type,assert,not,null,lhs,type,left,hand,side,type,must,not,be,null,assert,not,null,rhs,type,right,hand,side,type,must,not,be,null,if,lhs,type,equals,rhs,type,lhs,type,equals,object,class,return,true,if,lhs,type,instanceof,class,class,lhs,class,class,lhs,type,if,rhs,type,instanceof,class,return,class,utils,is,assignable,lhs,class,class,rhs,type,if,rhs,type,instanceof,parameterized,type,type,rhs,raw,parameterized,type,rhs,type,get,raw,type,if,rhs,raw,instanceof,class,return,class,utils,is,assignable,lhs,class,class,rhs,raw,else,if,lhs,class,is,array,rhs,type,instanceof,generic,array,type,type,rhs,component,generic,array,type,rhs,type,get,generic,component,type,return,is,assignable,lhs,class,get,component,type,rhs,component,if,lhs,type,instanceof,parameterized,type,if,rhs,type,instanceof,class,type,lhs,raw,parameterized,type,lhs,type,get,raw,type,if,lhs,raw,instanceof,class,return,class,utils,is,assignable,class,lhs,raw,class,rhs,type,else,if,rhs,type,instanceof,parameterized,type,return,is,assignable,parameterized,type,lhs,type,parameterized,type,rhs,type,if,lhs,type,instanceof,generic,array,type,type,lhs,component,generic,array,type,lhs,type,get,generic,component,type,if,rhs,type,instanceof,class,class,rhs,class,class,rhs,type,if,rhs,class,is,array,return,is,assignable,lhs,component,rhs,class,get,component,type,else,if,rhs,type,instanceof,generic,array,type,type,rhs,component,generic,array,type,rhs,type,get,generic,component,type,return,is,assignable,lhs,component,rhs,component,if,lhs,type,instanceof,wildcard,type,return,is,assignable,wildcard,type,lhs,type,rhs,type,return,false
TypeUtils -> public static boolean isAssignable(Type lhsType, Type rhsType);1432125256;Check if the right-hand side type may be assigned to the left-hand side_type following the Java generics rules._@param lhsType the target type_@param rhsType the value type that should be assigned to the target type_@return true if rhs is assignable to lhs;public static boolean isAssignable(Type lhsType, Type rhsType) {_		Assert.notNull(lhsType, "Left-hand side type must not be null")__		Assert.notNull(rhsType, "Right-hand side type must not be null")___		_		if (lhsType.equals(rhsType) || Object.class == lhsType) {_			return true__		}__		if (lhsType instanceof Class<?>) {_			Class<?> lhsClass = (Class<?>) lhsType___			_			if (rhsType instanceof Class<?>) {_				return ClassUtils.isAssignable(lhsClass, (Class<?>) rhsType)__			}__			if (rhsType instanceof ParameterizedType) {_				Type rhsRaw = ((ParameterizedType) rhsType).getRawType()___				_				if (rhsRaw instanceof Class<?>) {_					return ClassUtils.isAssignable(lhsClass, (Class<?>) rhsRaw)__				}_			}_			else if (lhsClass.isArray() && rhsType instanceof GenericArrayType) {_				Type rhsComponent = ((GenericArrayType) rhsType).getGenericComponentType()___				return isAssignable(lhsClass.getComponentType(), rhsComponent)__			}_		}__		_		if (lhsType instanceof ParameterizedType) {_			if (rhsType instanceof Class<?>) {_				Type lhsRaw = ((ParameterizedType) lhsType).getRawType()___				if (lhsRaw instanceof Class<?>) {_					return ClassUtils.isAssignable((Class<?>) lhsRaw, (Class<?>) rhsType)__				}_			}_			else if (rhsType instanceof ParameterizedType) {_				return isAssignable((ParameterizedType) lhsType, (ParameterizedType) rhsType)__			}_		}__		if (lhsType instanceof GenericArrayType) {_			Type lhsComponent = ((GenericArrayType) lhsType).getGenericComponentType()___			if (rhsType instanceof Class<?>) {_				Class<?> rhsClass = (Class<?>) rhsType___				if (rhsClass.isArray()) {_					return isAssignable(lhsComponent, rhsClass.getComponentType())__				}_			}_			else if (rhsType instanceof GenericArrayType) {_				Type rhsComponent = ((GenericArrayType) rhsType).getGenericComponentType()___				return isAssignable(lhsComponent, rhsComponent)__			}_		}__		if (lhsType instanceof WildcardType) {_			return isAssignable((WildcardType) lhsType, rhsType)__		}__		return false__	};check,if,the,right,hand,side,type,may,be,assigned,to,the,left,hand,side,type,following,the,java,generics,rules,param,lhs,type,the,target,type,param,rhs,type,the,value,type,that,should,be,assigned,to,the,target,type,return,true,if,rhs,is,assignable,to,lhs;public,static,boolean,is,assignable,type,lhs,type,type,rhs,type,assert,not,null,lhs,type,left,hand,side,type,must,not,be,null,assert,not,null,rhs,type,right,hand,side,type,must,not,be,null,if,lhs,type,equals,rhs,type,object,class,lhs,type,return,true,if,lhs,type,instanceof,class,class,lhs,class,class,lhs,type,if,rhs,type,instanceof,class,return,class,utils,is,assignable,lhs,class,class,rhs,type,if,rhs,type,instanceof,parameterized,type,type,rhs,raw,parameterized,type,rhs,type,get,raw,type,if,rhs,raw,instanceof,class,return,class,utils,is,assignable,lhs,class,class,rhs,raw,else,if,lhs,class,is,array,rhs,type,instanceof,generic,array,type,type,rhs,component,generic,array,type,rhs,type,get,generic,component,type,return,is,assignable,lhs,class,get,component,type,rhs,component,if,lhs,type,instanceof,parameterized,type,if,rhs,type,instanceof,class,type,lhs,raw,parameterized,type,lhs,type,get,raw,type,if,lhs,raw,instanceof,class,return,class,utils,is,assignable,class,lhs,raw,class,rhs,type,else,if,rhs,type,instanceof,parameterized,type,return,is,assignable,parameterized,type,lhs,type,parameterized,type,rhs,type,if,lhs,type,instanceof,generic,array,type,type,lhs,component,generic,array,type,lhs,type,get,generic,component,type,if,rhs,type,instanceof,class,class,rhs,class,class,rhs,type,if,rhs,class,is,array,return,is,assignable,lhs,component,rhs,class,get,component,type,else,if,rhs,type,instanceof,generic,array,type,type,rhs,component,generic,array,type,rhs,type,get,generic,component,type,return,is,assignable,lhs,component,rhs,component,if,lhs,type,instanceof,wildcard,type,return,is,assignable,wildcard,type,lhs,type,rhs,type,return,false
TypeUtils -> public static boolean isAssignable(Type lhsType, Type rhsType);1477860027;Check if the right-hand side type may be assigned to the left-hand side_type following the Java generics rules._@param lhsType the target type_@param rhsType the value type that should be assigned to the target type_@return true if rhs is assignable to lhs;public static boolean isAssignable(Type lhsType, Type rhsType) {_		Assert.notNull(lhsType, "Left-hand side type must not be null")__		Assert.notNull(rhsType, "Right-hand side type must not be null")___		_		if (lhsType.equals(rhsType) || Object.class == lhsType) {_			return true__		}__		if (lhsType instanceof Class) {_			Class<?> lhsClass = (Class<?>) lhsType___			_			if (rhsType instanceof Class) {_				return ClassUtils.isAssignable(lhsClass, (Class<?>) rhsType)__			}__			if (rhsType instanceof ParameterizedType) {_				Type rhsRaw = ((ParameterizedType) rhsType).getRawType()___				_				if (rhsRaw instanceof Class) {_					return ClassUtils.isAssignable(lhsClass, (Class<?>) rhsRaw)__				}_			}_			else if (lhsClass.isArray() && rhsType instanceof GenericArrayType) {_				Type rhsComponent = ((GenericArrayType) rhsType).getGenericComponentType()___				return isAssignable(lhsClass.getComponentType(), rhsComponent)__			}_		}__		_		if (lhsType instanceof ParameterizedType) {_			if (rhsType instanceof Class) {_				Type lhsRaw = ((ParameterizedType) lhsType).getRawType()___				if (lhsRaw instanceof Class) {_					return ClassUtils.isAssignable((Class<?>) lhsRaw, (Class<?>) rhsType)__				}_			}_			else if (rhsType instanceof ParameterizedType) {_				return isAssignable((ParameterizedType) lhsType, (ParameterizedType) rhsType)__			}_		}__		if (lhsType instanceof GenericArrayType) {_			Type lhsComponent = ((GenericArrayType) lhsType).getGenericComponentType()___			if (rhsType instanceof Class) {_				Class<?> rhsClass = (Class<?>) rhsType___				if (rhsClass.isArray()) {_					return isAssignable(lhsComponent, rhsClass.getComponentType())__				}_			}_			else if (rhsType instanceof GenericArrayType) {_				Type rhsComponent = ((GenericArrayType) rhsType).getGenericComponentType()___				return isAssignable(lhsComponent, rhsComponent)__			}_		}__		if (lhsType instanceof WildcardType) {_			return isAssignable((WildcardType) lhsType, rhsType)__		}__		return false__	};check,if,the,right,hand,side,type,may,be,assigned,to,the,left,hand,side,type,following,the,java,generics,rules,param,lhs,type,the,target,type,param,rhs,type,the,value,type,that,should,be,assigned,to,the,target,type,return,true,if,rhs,is,assignable,to,lhs;public,static,boolean,is,assignable,type,lhs,type,type,rhs,type,assert,not,null,lhs,type,left,hand,side,type,must,not,be,null,assert,not,null,rhs,type,right,hand,side,type,must,not,be,null,if,lhs,type,equals,rhs,type,object,class,lhs,type,return,true,if,lhs,type,instanceof,class,class,lhs,class,class,lhs,type,if,rhs,type,instanceof,class,return,class,utils,is,assignable,lhs,class,class,rhs,type,if,rhs,type,instanceof,parameterized,type,type,rhs,raw,parameterized,type,rhs,type,get,raw,type,if,rhs,raw,instanceof,class,return,class,utils,is,assignable,lhs,class,class,rhs,raw,else,if,lhs,class,is,array,rhs,type,instanceof,generic,array,type,type,rhs,component,generic,array,type,rhs,type,get,generic,component,type,return,is,assignable,lhs,class,get,component,type,rhs,component,if,lhs,type,instanceof,parameterized,type,if,rhs,type,instanceof,class,type,lhs,raw,parameterized,type,lhs,type,get,raw,type,if,lhs,raw,instanceof,class,return,class,utils,is,assignable,class,lhs,raw,class,rhs,type,else,if,rhs,type,instanceof,parameterized,type,return,is,assignable,parameterized,type,lhs,type,parameterized,type,rhs,type,if,lhs,type,instanceof,generic,array,type,type,lhs,component,generic,array,type,lhs,type,get,generic,component,type,if,rhs,type,instanceof,class,class,rhs,class,class,rhs,type,if,rhs,class,is,array,return,is,assignable,lhs,component,rhs,class,get,component,type,else,if,rhs,type,instanceof,generic,array,type,type,rhs,component,generic,array,type,rhs,type,get,generic,component,type,return,is,assignable,lhs,component,rhs,component,if,lhs,type,instanceof,wildcard,type,return,is,assignable,wildcard,type,lhs,type,rhs,type,return,false
TypeUtils -> public static boolean isAssignable(Type lhsType, Type rhsType);1496837955;Check if the right-hand side type may be assigned to the left-hand side_type following the Java generics rules._@param lhsType the target type_@param rhsType the value type that should be assigned to the target type_@return true if rhs is assignable to lhs;public static boolean isAssignable(Type lhsType, Type rhsType) {_		Assert.notNull(lhsType, "Left-hand side type must not be null")__		Assert.notNull(rhsType, "Right-hand side type must not be null")___		_		if (lhsType.equals(rhsType) || Object.class == lhsType) {_			return true__		}__		if (lhsType instanceof Class) {_			Class<?> lhsClass = (Class<?>) lhsType___			_			if (rhsType instanceof Class) {_				return ClassUtils.isAssignable(lhsClass, (Class<?>) rhsType)__			}__			if (rhsType instanceof ParameterizedType) {_				Type rhsRaw = ((ParameterizedType) rhsType).getRawType()___				_				if (rhsRaw instanceof Class) {_					return ClassUtils.isAssignable(lhsClass, (Class<?>) rhsRaw)__				}_			}_			else if (lhsClass.isArray() && rhsType instanceof GenericArrayType) {_				Type rhsComponent = ((GenericArrayType) rhsType).getGenericComponentType()___				return isAssignable(lhsClass.getComponentType(), rhsComponent)__			}_		}__		_		if (lhsType instanceof ParameterizedType) {_			if (rhsType instanceof Class) {_				Type lhsRaw = ((ParameterizedType) lhsType).getRawType()___				if (lhsRaw instanceof Class) {_					return ClassUtils.isAssignable((Class<?>) lhsRaw, (Class<?>) rhsType)__				}_			}_			else if (rhsType instanceof ParameterizedType) {_				return isAssignable((ParameterizedType) lhsType, (ParameterizedType) rhsType)__			}_		}__		if (lhsType instanceof GenericArrayType) {_			Type lhsComponent = ((GenericArrayType) lhsType).getGenericComponentType()___			if (rhsType instanceof Class) {_				Class<?> rhsClass = (Class<?>) rhsType___				if (rhsClass.isArray()) {_					return isAssignable(lhsComponent, rhsClass.getComponentType())__				}_			}_			else if (rhsType instanceof GenericArrayType) {_				Type rhsComponent = ((GenericArrayType) rhsType).getGenericComponentType()___				return isAssignable(lhsComponent, rhsComponent)__			}_		}__		if (lhsType instanceof WildcardType) {_			return isAssignable((WildcardType) lhsType, rhsType)__		}__		return false__	};check,if,the,right,hand,side,type,may,be,assigned,to,the,left,hand,side,type,following,the,java,generics,rules,param,lhs,type,the,target,type,param,rhs,type,the,value,type,that,should,be,assigned,to,the,target,type,return,true,if,rhs,is,assignable,to,lhs;public,static,boolean,is,assignable,type,lhs,type,type,rhs,type,assert,not,null,lhs,type,left,hand,side,type,must,not,be,null,assert,not,null,rhs,type,right,hand,side,type,must,not,be,null,if,lhs,type,equals,rhs,type,object,class,lhs,type,return,true,if,lhs,type,instanceof,class,class,lhs,class,class,lhs,type,if,rhs,type,instanceof,class,return,class,utils,is,assignable,lhs,class,class,rhs,type,if,rhs,type,instanceof,parameterized,type,type,rhs,raw,parameterized,type,rhs,type,get,raw,type,if,rhs,raw,instanceof,class,return,class,utils,is,assignable,lhs,class,class,rhs,raw,else,if,lhs,class,is,array,rhs,type,instanceof,generic,array,type,type,rhs,component,generic,array,type,rhs,type,get,generic,component,type,return,is,assignable,lhs,class,get,component,type,rhs,component,if,lhs,type,instanceof,parameterized,type,if,rhs,type,instanceof,class,type,lhs,raw,parameterized,type,lhs,type,get,raw,type,if,lhs,raw,instanceof,class,return,class,utils,is,assignable,class,lhs,raw,class,rhs,type,else,if,rhs,type,instanceof,parameterized,type,return,is,assignable,parameterized,type,lhs,type,parameterized,type,rhs,type,if,lhs,type,instanceof,generic,array,type,type,lhs,component,generic,array,type,lhs,type,get,generic,component,type,if,rhs,type,instanceof,class,class,rhs,class,class,rhs,type,if,rhs,class,is,array,return,is,assignable,lhs,component,rhs,class,get,component,type,else,if,rhs,type,instanceof,generic,array,type,type,rhs,component,generic,array,type,rhs,type,get,generic,component,type,return,is,assignable,lhs,component,rhs,component,if,lhs,type,instanceof,wildcard,type,return,is,assignable,wildcard,type,lhs,type,rhs,type,return,false
