commented;modifiers;parameterAmount;loc;comment;code
false;public;0;38;;@Override public void visitEnd() {     super.visitEnd().     Class<? extends Annotation> annotationClass = this.attributes.annotationType().     if (annotationClass != null) {         List<AnnotationAttributes> attributeList = this.attributesMap.get(this.annotationType).         if (attributeList == null) {             this.attributesMap.add(this.annotationType, this.attributes).         } else {             attributeList.add(0, this.attributes).         }         if (!AnnotationUtils.isInJavaLangAnnotationPackage(annotationClass.getName())) {             try {                 Annotation[] metaAnnotations = annotationClass.getAnnotations().                 if (!ObjectUtils.isEmpty(metaAnnotations)) {                     Set<Annotation> visited = new LinkedHashSet<>().                     for (Annotation metaAnnotation : metaAnnotations) {                         recursivelyCollectMetaAnnotations(visited, metaAnnotation).                     }                     if (!visited.isEmpty()) {                         Set<String> metaAnnotationTypeNames = new LinkedHashSet<>(visited.size()).                         for (Annotation ann : visited) {                             metaAnnotationTypeNames.add(ann.annotationType().getName()).                         }                         this.metaAnnotationMap.put(annotationClass.getName(), metaAnnotationTypeNames).                     }                 }             } catch (Throwable ex) {                 if (logger.isDebugEnabled()) {                     logger.debug("Failed to introspect meta-annotations on " + annotationClass + ": " + ex).                 }             }         }     } }
false;private;2;23;;private void recursivelyCollectMetaAnnotations(Set<Annotation> visited, Annotation annotation) {     Class<? extends Annotation> annotationType = annotation.annotationType().     String annotationName = annotationType.getName().     if (!AnnotationUtils.isInJavaLangAnnotationPackage(annotationName) && visited.add(annotation)) {         try {             // accessibility in a SecurityManager environment.             if (Modifier.isPublic(annotationType.getModifiers())) {                 this.attributesMap.add(annotationName, AnnotationUtils.getAnnotationAttributes(annotation, false, true)).             }             for (Annotation metaMetaAnnotation : annotationType.getAnnotations()) {                 recursivelyCollectMetaAnnotations(visited, metaMetaAnnotation).             }         } catch (Throwable ex) {             if (logger.isDebugEnabled()) {                 logger.debug("Failed to introspect meta-annotations on " + annotation + ": " + ex).             }         }     } }
