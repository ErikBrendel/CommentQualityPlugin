# id;timestamp;commentText;codeText;commentWords;codeWords
ResizableByteArrayOutputStream -> public synchronized void grow(int additionalCapacity);1395698258;Grow the internal buffer size._@param additionalCapacity the number of bytes to add to the current buffer size_@see ResizableByteArrayOutputStream#size();public synchronized void grow(int additionalCapacity) {_		Assert.isTrue(additionalCapacity >= 0, "Additional capacity must be 0 or higher")__		if (this.count + additionalCapacity > this.buf.length) {_			int newCapacity = Math.max(this.buf.length * 2, this.count + additionalCapacity)__			resize(newCapacity)__		}_	};grow,the,internal,buffer,size,param,additional,capacity,the,number,of,bytes,to,add,to,the,current,buffer,size,see,resizable,byte,array,output,stream,size;public,synchronized,void,grow,int,additional,capacity,assert,is,true,additional,capacity,0,additional,capacity,must,be,0,or,higher,if,this,count,additional,capacity,this,buf,length,int,new,capacity,math,max,this,buf,length,2,this,count,additional,capacity,resize,new,capacity
ResizableByteArrayOutputStream -> public synchronized void grow(int additionalCapacity);1396465029;Grow the internal buffer size._@param additionalCapacity the number of bytes to add to the current buffer size_@see ResizableByteArrayOutputStream#size();public synchronized void grow(int additionalCapacity) {_		Assert.isTrue(additionalCapacity >= 0, "Additional capacity must be 0 or higher")__		if (this.count + additionalCapacity > this.buf.length) {_			int newCapacity = Math.max(this.buf.length * 2, this.count + additionalCapacity)__			resize(newCapacity)__		}_	};grow,the,internal,buffer,size,param,additional,capacity,the,number,of,bytes,to,add,to,the,current,buffer,size,see,resizable,byte,array,output,stream,size;public,synchronized,void,grow,int,additional,capacity,assert,is,true,additional,capacity,0,additional,capacity,must,be,0,or,higher,if,this,count,additional,capacity,this,buf,length,int,new,capacity,math,max,this,buf,length,2,this,count,additional,capacity,resize,new,capacity
ResizableByteArrayOutputStream -> public synchronized void grow(int additionalCapacity);1425077395;Grow the internal buffer size._@param additionalCapacity the number of bytes to add to the current buffer size_@see ResizableByteArrayOutputStream#size();public synchronized void grow(int additionalCapacity) {_		Assert.isTrue(additionalCapacity >= 0, "Additional capacity must be 0 or higher")__		if (this.count + additionalCapacity > this.buf.length) {_			int newCapacity = Math.max(this.buf.length * 2, this.count + additionalCapacity)__			resize(newCapacity)__		}_	};grow,the,internal,buffer,size,param,additional,capacity,the,number,of,bytes,to,add,to,the,current,buffer,size,see,resizable,byte,array,output,stream,size;public,synchronized,void,grow,int,additional,capacity,assert,is,true,additional,capacity,0,additional,capacity,must,be,0,or,higher,if,this,count,additional,capacity,this,buf,length,int,new,capacity,math,max,this,buf,length,2,this,count,additional,capacity,resize,new,capacity
ResizableByteArrayOutputStream -> public synchronized void grow(int additionalCapacity);1435680162;Grow the internal buffer size._@param additionalCapacity the number of bytes to add to the current buffer size_@see ResizableByteArrayOutputStream#size();public synchronized void grow(int additionalCapacity) {_		Assert.isTrue(additionalCapacity >= 0, "Additional capacity must be 0 or higher")__		if (this.count + additionalCapacity > this.buf.length) {_			int newCapacity = Math.max(this.buf.length * 2, this.count + additionalCapacity)__			resize(newCapacity)__		}_	};grow,the,internal,buffer,size,param,additional,capacity,the,number,of,bytes,to,add,to,the,current,buffer,size,see,resizable,byte,array,output,stream,size;public,synchronized,void,grow,int,additional,capacity,assert,is,true,additional,capacity,0,additional,capacity,must,be,0,or,higher,if,this,count,additional,capacity,this,buf,length,int,new,capacity,math,max,this,buf,length,2,this,count,additional,capacity,resize,new,capacity
ResizableByteArrayOutputStream -> public synchronized void grow(int additionalCapacity);1461047077;Grow the internal buffer size._@param additionalCapacity the number of bytes to add to the current buffer size_@see ResizableByteArrayOutputStream#size();public synchronized void grow(int additionalCapacity) {_		Assert.isTrue(additionalCapacity >= 0, "Additional capacity must be 0 or higher")__		if (this.count + additionalCapacity > this.buf.length) {_			int newCapacity = Math.max(this.buf.length * 2, this.count + additionalCapacity)__			resize(newCapacity)__		}_	};grow,the,internal,buffer,size,param,additional,capacity,the,number,of,bytes,to,add,to,the,current,buffer,size,see,resizable,byte,array,output,stream,size;public,synchronized,void,grow,int,additional,capacity,assert,is,true,additional,capacity,0,additional,capacity,must,be,0,or,higher,if,this,count,additional,capacity,this,buf,length,int,new,capacity,math,max,this,buf,length,2,this,count,additional,capacity,resize,new,capacity
ResizableByteArrayOutputStream -> public synchronized int capacity();1395698258;Return the current size of this stream's internal buffer.;public synchronized int capacity() {_		return this.buf.length__	};return,the,current,size,of,this,stream,s,internal,buffer;public,synchronized,int,capacity,return,this,buf,length
ResizableByteArrayOutputStream -> public synchronized int capacity();1396465029;Return the current size of this stream's internal buffer.;public synchronized int capacity() {_		return this.buf.length__	};return,the,current,size,of,this,stream,s,internal,buffer;public,synchronized,int,capacity,return,this,buf,length
ResizableByteArrayOutputStream -> public synchronized int capacity();1425077395;Return the current size of this stream's internal buffer.;public synchronized int capacity() {_		return this.buf.length__	};return,the,current,size,of,this,stream,s,internal,buffer;public,synchronized,int,capacity,return,this,buf,length
ResizableByteArrayOutputStream -> public synchronized int capacity();1435680162;Return the current size of this stream's internal buffer.;public synchronized int capacity() {_		return this.buf.length__	};return,the,current,size,of,this,stream,s,internal,buffer;public,synchronized,int,capacity,return,this,buf,length
ResizableByteArrayOutputStream -> public synchronized int capacity();1461047077;Return the current size of this stream's internal buffer.;public synchronized int capacity() {_		return this.buf.length__	};return,the,current,size,of,this,stream,s,internal,buffer;public,synchronized,int,capacity,return,this,buf,length
ResizableByteArrayOutputStream -> public ResizableByteArrayOutputStream();1395659519;Create a new <code>ByteArrayOutputStream</code> with the default buffer size of 32 bytes.;public ResizableByteArrayOutputStream() {_		this(INITIAL_BUFFER_SIZE)__	};create,a,new,code,byte,array,output,stream,code,with,the,default,buffer,size,of,32,bytes;public,resizable,byte,array,output,stream,this
ResizableByteArrayOutputStream -> public ResizableByteArrayOutputStream();1395698258;Create a new <code>ResizableByteArrayOutputStream</code>_with the default initial capacity of 128 bytes.;public ResizableByteArrayOutputStream() {_		super(DEFAULT_INITIAL_CAPACITY)__	};create,a,new,code,resizable,byte,array,output,stream,code,with,the,default,initial,capacity,of,128,bytes;public,resizable,byte,array,output,stream,super
ResizableByteArrayOutputStream -> public ResizableByteArrayOutputStream();1396465029;Create a new <code>ResizableByteArrayOutputStream</code>_with the default initial capacity of 128 bytes.;public ResizableByteArrayOutputStream() {_		super(DEFAULT_INITIAL_CAPACITY)__	};create,a,new,code,resizable,byte,array,output,stream,code,with,the,default,initial,capacity,of,128,bytes;public,resizable,byte,array,output,stream,super
ResizableByteArrayOutputStream -> public ResizableByteArrayOutputStream();1425077395;Create a new <code>ResizableByteArrayOutputStream</code>_with the default initial capacity of 256 bytes.;public ResizableByteArrayOutputStream() {_		super(DEFAULT_INITIAL_CAPACITY)__	};create,a,new,code,resizable,byte,array,output,stream,code,with,the,default,initial,capacity,of,256,bytes;public,resizable,byte,array,output,stream,super
ResizableByteArrayOutputStream -> public ResizableByteArrayOutputStream();1435680162;Create a new <code>ResizableByteArrayOutputStream</code>_with the default initial capacity of 256 bytes.;public ResizableByteArrayOutputStream() {_		super(DEFAULT_INITIAL_CAPACITY)__	};create,a,new,code,resizable,byte,array,output,stream,code,with,the,default,initial,capacity,of,256,bytes;public,resizable,byte,array,output,stream,super
ResizableByteArrayOutputStream -> public ResizableByteArrayOutputStream();1461047077;Create a new <code>ResizableByteArrayOutputStream</code>_with the default initial capacity of 256 bytes.;public ResizableByteArrayOutputStream() {_		super(DEFAULT_INITIAL_CAPACITY)__	};create,a,new,code,resizable,byte,array,output,stream,code,with,the,default,initial,capacity,of,256,bytes;public,resizable,byte,array,output,stream,super
ResizableByteArrayOutputStream -> public ResizableByteArrayOutputStream(int initialCapacity);1395698258;Create a new <code>ResizableByteArrayOutputStream</code>_with the specified initial capacity._@param initialCapacity the initial buffer size in bytes;public ResizableByteArrayOutputStream(int initialCapacity) {_		super(initialCapacity)__	};create,a,new,code,resizable,byte,array,output,stream,code,with,the,specified,initial,capacity,param,initial,capacity,the,initial,buffer,size,in,bytes;public,resizable,byte,array,output,stream,int,initial,capacity,super,initial,capacity
ResizableByteArrayOutputStream -> public ResizableByteArrayOutputStream(int initialCapacity);1396465029;Create a new <code>ResizableByteArrayOutputStream</code>_with the specified initial capacity._@param initialCapacity the initial buffer size in bytes;public ResizableByteArrayOutputStream(int initialCapacity) {_		super(initialCapacity)__	};create,a,new,code,resizable,byte,array,output,stream,code,with,the,specified,initial,capacity,param,initial,capacity,the,initial,buffer,size,in,bytes;public,resizable,byte,array,output,stream,int,initial,capacity,super,initial,capacity
ResizableByteArrayOutputStream -> public ResizableByteArrayOutputStream(int initialCapacity);1425077395;Create a new <code>ResizableByteArrayOutputStream</code>_with the specified initial capacity._@param initialCapacity the initial buffer size in bytes;public ResizableByteArrayOutputStream(int initialCapacity) {_		super(initialCapacity)__	};create,a,new,code,resizable,byte,array,output,stream,code,with,the,specified,initial,capacity,param,initial,capacity,the,initial,buffer,size,in,bytes;public,resizable,byte,array,output,stream,int,initial,capacity,super,initial,capacity
ResizableByteArrayOutputStream -> public ResizableByteArrayOutputStream(int initialCapacity);1435680162;Create a new <code>ResizableByteArrayOutputStream</code>_with the specified initial capacity._@param initialCapacity the initial buffer size in bytes;public ResizableByteArrayOutputStream(int initialCapacity) {_		super(initialCapacity)__	};create,a,new,code,resizable,byte,array,output,stream,code,with,the,specified,initial,capacity,param,initial,capacity,the,initial,buffer,size,in,bytes;public,resizable,byte,array,output,stream,int,initial,capacity,super,initial,capacity
ResizableByteArrayOutputStream -> public ResizableByteArrayOutputStream(int initialCapacity);1461047077;Create a new <code>ResizableByteArrayOutputStream</code>_with the specified initial capacity._@param initialCapacity the initial buffer size in bytes;public ResizableByteArrayOutputStream(int initialCapacity) {_		super(initialCapacity)__	};create,a,new,code,resizable,byte,array,output,stream,code,with,the,specified,initial,capacity,param,initial,capacity,the,initial,buffer,size,in,bytes;public,resizable,byte,array,output,stream,int,initial,capacity,super,initial,capacity
ResizableByteArrayOutputStream -> public synchronized void resize(int targetCapacity);1395698258;Resize the internal buffer size to a specified capacity._@param targetCapacity the desired size of the buffer_@throws IllegalArgumentException if the given capacity is smaller than_the actual size of the content stored in the buffer already_@see ResizableByteArrayOutputStream#size();public synchronized void resize(int targetCapacity) {_		Assert.isTrue(targetCapacity >= this.count, "New capacity must not be smaller than current size")__		byte[] resizedBuffer = new byte[targetCapacity]__		System.arraycopy(this.buf, 0, resizedBuffer, 0, this.count)__		this.buf = resizedBuffer__	};resize,the,internal,buffer,size,to,a,specified,capacity,param,target,capacity,the,desired,size,of,the,buffer,throws,illegal,argument,exception,if,the,given,capacity,is,smaller,than,the,actual,size,of,the,content,stored,in,the,buffer,already,see,resizable,byte,array,output,stream,size;public,synchronized,void,resize,int,target,capacity,assert,is,true,target,capacity,this,count,new,capacity,must,not,be,smaller,than,current,size,byte,resized,buffer,new,byte,target,capacity,system,arraycopy,this,buf,0,resized,buffer,0,this,count,this,buf,resized,buffer
ResizableByteArrayOutputStream -> public synchronized void resize(int targetCapacity);1396465029;Resize the internal buffer size to a specified capacity._@param targetCapacity the desired size of the buffer_@throws IllegalArgumentException if the given capacity is smaller than_the actual size of the content stored in the buffer already_@see ResizableByteArrayOutputStream#size();public synchronized void resize(int targetCapacity) {_		Assert.isTrue(targetCapacity >= this.count, "New capacity must not be smaller than current size")__		byte[] resizedBuffer = new byte[targetCapacity]__		System.arraycopy(this.buf, 0, resizedBuffer, 0, this.count)__		this.buf = resizedBuffer__	};resize,the,internal,buffer,size,to,a,specified,capacity,param,target,capacity,the,desired,size,of,the,buffer,throws,illegal,argument,exception,if,the,given,capacity,is,smaller,than,the,actual,size,of,the,content,stored,in,the,buffer,already,see,resizable,byte,array,output,stream,size;public,synchronized,void,resize,int,target,capacity,assert,is,true,target,capacity,this,count,new,capacity,must,not,be,smaller,than,current,size,byte,resized,buffer,new,byte,target,capacity,system,arraycopy,this,buf,0,resized,buffer,0,this,count,this,buf,resized,buffer
ResizableByteArrayOutputStream -> public synchronized void resize(int targetCapacity);1425077395;Resize the internal buffer size to a specified capacity._@param targetCapacity the desired size of the buffer_@throws IllegalArgumentException if the given capacity is smaller than_the actual size of the content stored in the buffer already_@see ResizableByteArrayOutputStream#size();public synchronized void resize(int targetCapacity) {_		Assert.isTrue(targetCapacity >= this.count, "New capacity must not be smaller than current size")__		byte[] resizedBuffer = new byte[targetCapacity]__		System.arraycopy(this.buf, 0, resizedBuffer, 0, this.count)__		this.buf = resizedBuffer__	};resize,the,internal,buffer,size,to,a,specified,capacity,param,target,capacity,the,desired,size,of,the,buffer,throws,illegal,argument,exception,if,the,given,capacity,is,smaller,than,the,actual,size,of,the,content,stored,in,the,buffer,already,see,resizable,byte,array,output,stream,size;public,synchronized,void,resize,int,target,capacity,assert,is,true,target,capacity,this,count,new,capacity,must,not,be,smaller,than,current,size,byte,resized,buffer,new,byte,target,capacity,system,arraycopy,this,buf,0,resized,buffer,0,this,count,this,buf,resized,buffer
ResizableByteArrayOutputStream -> public synchronized void resize(int targetCapacity);1435680162;Resize the internal buffer size to a specified capacity._@param targetCapacity the desired size of the buffer_@throws IllegalArgumentException if the given capacity is smaller than_the actual size of the content stored in the buffer already_@see ResizableByteArrayOutputStream#size();public synchronized void resize(int targetCapacity) {_		Assert.isTrue(targetCapacity >= this.count, "New capacity must not be smaller than current size")__		byte[] resizedBuffer = new byte[targetCapacity]__		System.arraycopy(this.buf, 0, resizedBuffer, 0, this.count)__		this.buf = resizedBuffer__	};resize,the,internal,buffer,size,to,a,specified,capacity,param,target,capacity,the,desired,size,of,the,buffer,throws,illegal,argument,exception,if,the,given,capacity,is,smaller,than,the,actual,size,of,the,content,stored,in,the,buffer,already,see,resizable,byte,array,output,stream,size;public,synchronized,void,resize,int,target,capacity,assert,is,true,target,capacity,this,count,new,capacity,must,not,be,smaller,than,current,size,byte,resized,buffer,new,byte,target,capacity,system,arraycopy,this,buf,0,resized,buffer,0,this,count,this,buf,resized,buffer
ResizableByteArrayOutputStream -> public synchronized void resize(int targetCapacity);1461047077;Resize the internal buffer size to a specified capacity._@param targetCapacity the desired size of the buffer_@throws IllegalArgumentException if the given capacity is smaller than_the actual size of the content stored in the buffer already_@see ResizableByteArrayOutputStream#size();public synchronized void resize(int targetCapacity) {_		Assert.isTrue(targetCapacity >= this.count, "New capacity must not be smaller than current size")__		byte[] resizedBuffer = new byte[targetCapacity]__		System.arraycopy(this.buf, 0, resizedBuffer, 0, this.count)__		this.buf = resizedBuffer__	};resize,the,internal,buffer,size,to,a,specified,capacity,param,target,capacity,the,desired,size,of,the,buffer,throws,illegal,argument,exception,if,the,given,capacity,is,smaller,than,the,actual,size,of,the,content,stored,in,the,buffer,already,see,resizable,byte,array,output,stream,size;public,synchronized,void,resize,int,target,capacity,assert,is,true,target,capacity,this,count,new,capacity,must,not,be,smaller,than,current,size,byte,resized,buffer,new,byte,target,capacity,system,arraycopy,this,buf,0,resized,buffer,0,this,count,this,buf,resized,buffer
