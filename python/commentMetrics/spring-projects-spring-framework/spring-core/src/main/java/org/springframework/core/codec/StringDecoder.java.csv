# id;timestamp;commentText;codeText;commentWords;codeWords
StringDecoder -> private List<DataBuffer> splitOnDelimiter(DataBuffer dataBuffer, List<byte[]> delimiterBytes);1540574693;Splits the given data buffer on delimiter boundaries. The returned Flux contains a_{@link #END_FRAME} buffer after each delimiter.;private List<DataBuffer> splitOnDelimiter(DataBuffer dataBuffer, List<byte[]> delimiterBytes) {_		List<DataBuffer> frames = new ArrayList<>()__		do {_			int length = Integer.MAX_VALUE__			byte[] matchingDelimiter = null__			for (byte[] delimiter : delimiterBytes) {_				int index = indexOf(dataBuffer, delimiter)__				if (index >= 0 && index < length) {_					length = index__					matchingDelimiter = delimiter__				}_			}_			DataBuffer frame__			int readPosition = dataBuffer.readPosition()__			if (matchingDelimiter != null) {_				if (this.stripDelimiter) {_					frame = dataBuffer.slice(readPosition, length)__				}_				else {_					frame = dataBuffer.slice(readPosition, length + matchingDelimiter.length)__				}_				dataBuffer.readPosition(readPosition + length + matchingDelimiter.length)___				frames.add(DataBufferUtils.retain(frame))__				frames.add(END_FRAME)__			}_			else {_				frame = dataBuffer.slice(readPosition, dataBuffer.readableByteCount())__				dataBuffer.readPosition(readPosition + dataBuffer.readableByteCount())__				frames.add(DataBufferUtils.retain(frame))__			}_		}_		while (dataBuffer.readableByteCount() > 0)___		DataBufferUtils.release(dataBuffer)__		return frames__	};splits,the,given,data,buffer,on,delimiter,boundaries,the,returned,flux,contains,a,link,buffer,after,each,delimiter;private,list,data,buffer,split,on,delimiter,data,buffer,data,buffer,list,byte,delimiter,bytes,list,data,buffer,frames,new,array,list,do,int,length,integer,byte,matching,delimiter,null,for,byte,delimiter,delimiter,bytes,int,index,index,of,data,buffer,delimiter,if,index,0,index,length,length,index,matching,delimiter,delimiter,data,buffer,frame,int,read,position,data,buffer,read,position,if,matching,delimiter,null,if,this,strip,delimiter,frame,data,buffer,slice,read,position,length,else,frame,data,buffer,slice,read,position,length,matching,delimiter,length,data,buffer,read,position,read,position,length,matching,delimiter,length,frames,add,data,buffer,utils,retain,frame,frames,add,else,frame,data,buffer,slice,read,position,data,buffer,readable,byte,count,data,buffer,read,position,read,position,data,buffer,readable,byte,count,frames,add,data,buffer,utils,retain,frame,while,data,buffer,readable,byte,count,0,data,buffer,utils,release,data,buffer,return,frames
StringDecoder -> private List<DataBuffer> splitOnDelimiter(DataBuffer dataBuffer, List<byte[]> delimiterBytes);1542050977;Splits the given data buffer on delimiter boundaries. The returned Flux contains a_{@link #END_FRAME} buffer after each delimiter.;private List<DataBuffer> splitOnDelimiter(DataBuffer dataBuffer, List<byte[]> delimiterBytes) {_		List<DataBuffer> frames = new ArrayList<>()__		do {_			int length = Integer.MAX_VALUE__			byte[] matchingDelimiter = null__			for (byte[] delimiter : delimiterBytes) {_				int index = indexOf(dataBuffer, delimiter)__				if (index >= 0 && index < length) {_					length = index__					matchingDelimiter = delimiter__				}_			}_			DataBuffer frame__			int readPosition = dataBuffer.readPosition()__			if (matchingDelimiter != null) {_				if (this.stripDelimiter) {_					frame = dataBuffer.slice(readPosition, length)__				}_				else {_					frame = dataBuffer.slice(readPosition, length + matchingDelimiter.length)__				}_				dataBuffer.readPosition(readPosition + length + matchingDelimiter.length)___				frames.add(DataBufferUtils.retain(frame))__				frames.add(END_FRAME)__			}_			else {_				frame = dataBuffer.slice(readPosition, dataBuffer.readableByteCount())__				dataBuffer.readPosition(readPosition + dataBuffer.readableByteCount())__				frames.add(DataBufferUtils.retain(frame))__			}_		}_		while (dataBuffer.readableByteCount() > 0)___		DataBufferUtils.release(dataBuffer)__		return frames__	};splits,the,given,data,buffer,on,delimiter,boundaries,the,returned,flux,contains,a,link,buffer,after,each,delimiter;private,list,data,buffer,split,on,delimiter,data,buffer,data,buffer,list,byte,delimiter,bytes,list,data,buffer,frames,new,array,list,do,int,length,integer,byte,matching,delimiter,null,for,byte,delimiter,delimiter,bytes,int,index,index,of,data,buffer,delimiter,if,index,0,index,length,length,index,matching,delimiter,delimiter,data,buffer,frame,int,read,position,data,buffer,read,position,if,matching,delimiter,null,if,this,strip,delimiter,frame,data,buffer,slice,read,position,length,else,frame,data,buffer,slice,read,position,length,matching,delimiter,length,data,buffer,read,position,read,position,length,matching,delimiter,length,frames,add,data,buffer,utils,retain,frame,frames,add,else,frame,data,buffer,slice,read,position,data,buffer,readable,byte,count,data,buffer,read,position,read,position,data,buffer,readable,byte,count,frames,add,data,buffer,utils,retain,frame,while,data,buffer,readable,byte,count,0,data,buffer,utils,release,data,buffer,return,frames
StringDecoder -> private List<DataBuffer> splitOnDelimiter(DataBuffer dataBuffer, List<byte[]> delimiterBytes);1542112693;Splits the given data buffer on delimiter boundaries. The returned Flux contains a_{@link #END_FRAME} buffer after each delimiter.;private List<DataBuffer> splitOnDelimiter(DataBuffer dataBuffer, List<byte[]> delimiterBytes) {_		List<DataBuffer> frames = new ArrayList<>()__		do {_			int length = Integer.MAX_VALUE__			byte[] matchingDelimiter = null__			for (byte[] delimiter : delimiterBytes) {_				int index = indexOf(dataBuffer, delimiter)__				if (index >= 0 && index < length) {_					length = index__					matchingDelimiter = delimiter__				}_			}_			DataBuffer frame__			int readPosition = dataBuffer.readPosition()__			if (matchingDelimiter != null) {_				if (this.stripDelimiter) {_					frame = dataBuffer.slice(readPosition, length)__				}_				else {_					frame = dataBuffer.slice(readPosition, length + matchingDelimiter.length)__				}_				dataBuffer.readPosition(readPosition + length + matchingDelimiter.length)___				frames.add(DataBufferUtils.retain(frame))__				frames.add(END_FRAME)__			}_			else {_				frame = dataBuffer.slice(readPosition, dataBuffer.readableByteCount())__				dataBuffer.readPosition(readPosition + dataBuffer.readableByteCount())__				frames.add(DataBufferUtils.retain(frame))__			}_		}_		while (dataBuffer.readableByteCount() > 0)___		DataBufferUtils.release(dataBuffer)__		return frames__	};splits,the,given,data,buffer,on,delimiter,boundaries,the,returned,flux,contains,a,link,buffer,after,each,delimiter;private,list,data,buffer,split,on,delimiter,data,buffer,data,buffer,list,byte,delimiter,bytes,list,data,buffer,frames,new,array,list,do,int,length,integer,byte,matching,delimiter,null,for,byte,delimiter,delimiter,bytes,int,index,index,of,data,buffer,delimiter,if,index,0,index,length,length,index,matching,delimiter,delimiter,data,buffer,frame,int,read,position,data,buffer,read,position,if,matching,delimiter,null,if,this,strip,delimiter,frame,data,buffer,slice,read,position,length,else,frame,data,buffer,slice,read,position,length,matching,delimiter,length,data,buffer,read,position,read,position,length,matching,delimiter,length,frames,add,data,buffer,utils,retain,frame,frames,add,else,frame,data,buffer,slice,read,position,data,buffer,readable,byte,count,data,buffer,read,position,read,position,data,buffer,readable,byte,count,frames,add,data,buffer,utils,retain,frame,while,data,buffer,readable,byte,count,0,data,buffer,utils,release,data,buffer,return,frames
StringDecoder -> private List<DataBuffer> splitOnDelimiter(DataBuffer dataBuffer, List<byte[]> delimiterBytes);1543877580;Split the given data buffer on delimiter boundaries._The returned Flux contains an {@link #END_FRAME} buffer after each delimiter.;private List<DataBuffer> splitOnDelimiter(DataBuffer dataBuffer, List<byte[]> delimiterBytes) {_		List<DataBuffer> frames = new ArrayList<>()__		do {_			int length = Integer.MAX_VALUE__			byte[] matchingDelimiter = null__			for (byte[] delimiter : delimiterBytes) {_				int index = indexOf(dataBuffer, delimiter)__				if (index >= 0 && index < length) {_					length = index__					matchingDelimiter = delimiter__				}_			}_			DataBuffer frame__			int readPosition = dataBuffer.readPosition()__			if (matchingDelimiter != null) {_				if (this.stripDelimiter) {_					frame = dataBuffer.slice(readPosition, length)__				}_				else {_					frame = dataBuffer.slice(readPosition, length + matchingDelimiter.length)__				}_				dataBuffer.readPosition(readPosition + length + matchingDelimiter.length)___				frames.add(DataBufferUtils.retain(frame))__				frames.add(END_FRAME)__			}_			else {_				frame = dataBuffer.slice(readPosition, dataBuffer.readableByteCount())__				dataBuffer.readPosition(readPosition + dataBuffer.readableByteCount())__				frames.add(DataBufferUtils.retain(frame))__			}_		}_		while (dataBuffer.readableByteCount() > 0)___		DataBufferUtils.release(dataBuffer)__		return frames__	};split,the,given,data,buffer,on,delimiter,boundaries,the,returned,flux,contains,an,link,buffer,after,each,delimiter;private,list,data,buffer,split,on,delimiter,data,buffer,data,buffer,list,byte,delimiter,bytes,list,data,buffer,frames,new,array,list,do,int,length,integer,byte,matching,delimiter,null,for,byte,delimiter,delimiter,bytes,int,index,index,of,data,buffer,delimiter,if,index,0,index,length,length,index,matching,delimiter,delimiter,data,buffer,frame,int,read,position,data,buffer,read,position,if,matching,delimiter,null,if,this,strip,delimiter,frame,data,buffer,slice,read,position,length,else,frame,data,buffer,slice,read,position,length,matching,delimiter,length,data,buffer,read,position,read,position,length,matching,delimiter,length,frames,add,data,buffer,utils,retain,frame,frames,add,else,frame,data,buffer,slice,read,position,data,buffer,readable,byte,count,data,buffer,read,position,read,position,data,buffer,readable,byte,count,frames,add,data,buffer,utils,retain,frame,while,data,buffer,readable,byte,count,0,data,buffer,utils,release,data,buffer,return,frames
StringDecoder -> private Flux<DataBuffer> splitOnDelimiter(DataBuffer dataBuffer, List<byte[]> delimiterBytes);1517583561;Splits the given data buffer on delimiter boundaries. The returned Flux contains a_{@link #END_FRAME} buffer after each delimiter.;private Flux<DataBuffer> splitOnDelimiter(DataBuffer dataBuffer, List<byte[]> delimiterBytes) {_		List<DataBuffer> frames = new ArrayList<>()__		do {_			int length = Integer.MAX_VALUE__			byte[] matchingDelimiter = null__			for (byte[] delimiter : delimiterBytes) {_				int idx = indexOf(dataBuffer, delimiter)__				if (idx >= 0 && idx < length) {_					length = idx__					matchingDelimiter = delimiter__				}_			}_			DataBuffer frame__			int readPosition = dataBuffer.readPosition()__			if (matchingDelimiter != null) {_				if (this.stripDelimiter) {_					frame = dataBuffer.slice(readPosition, length)__				}_				else {_					frame = dataBuffer.slice(readPosition, length + matchingDelimiter.length)__				}_				dataBuffer.readPosition(readPosition + length + matchingDelimiter.length)___				frames.add(DataBufferUtils.retain(frame))__				frames.add(END_FRAME)__			}_			else {_				frame = dataBuffer.slice(readPosition, dataBuffer.readableByteCount())__				dataBuffer.readPosition(readPosition + dataBuffer.readableByteCount())__				frames.add(DataBufferUtils.retain(frame))__			}_		}_		while (dataBuffer.readableByteCount() > 0)___		DataBufferUtils.release(dataBuffer)__		return Flux.fromIterable(frames)__	};splits,the,given,data,buffer,on,delimiter,boundaries,the,returned,flux,contains,a,link,buffer,after,each,delimiter;private,flux,data,buffer,split,on,delimiter,data,buffer,data,buffer,list,byte,delimiter,bytes,list,data,buffer,frames,new,array,list,do,int,length,integer,byte,matching,delimiter,null,for,byte,delimiter,delimiter,bytes,int,idx,index,of,data,buffer,delimiter,if,idx,0,idx,length,length,idx,matching,delimiter,delimiter,data,buffer,frame,int,read,position,data,buffer,read,position,if,matching,delimiter,null,if,this,strip,delimiter,frame,data,buffer,slice,read,position,length,else,frame,data,buffer,slice,read,position,length,matching,delimiter,length,data,buffer,read,position,read,position,length,matching,delimiter,length,frames,add,data,buffer,utils,retain,frame,frames,add,else,frame,data,buffer,slice,read,position,data,buffer,readable,byte,count,data,buffer,read,position,read,position,data,buffer,readable,byte,count,frames,add,data,buffer,utils,retain,frame,while,data,buffer,readable,byte,count,0,data,buffer,utils,release,data,buffer,return,flux,from,iterable,frames
StringDecoder -> private Flux<DataBuffer> splitOnDelimiter(DataBuffer dataBuffer, List<byte[]> delimiterBytes);1518167526;Splits the given data buffer on delimiter boundaries. The returned Flux contains a_{@link #END_FRAME} buffer after each delimiter.;private Flux<DataBuffer> splitOnDelimiter(DataBuffer dataBuffer, List<byte[]> delimiterBytes) {_		List<DataBuffer> frames = new ArrayList<>()__		do {_			int length = Integer.MAX_VALUE__			byte[] matchingDelimiter = null__			for (byte[] delimiter : delimiterBytes) {_				int idx = indexOf(dataBuffer, delimiter)__				if (idx >= 0 && idx < length) {_					length = idx__					matchingDelimiter = delimiter__				}_			}_			DataBuffer frame__			int readPosition = dataBuffer.readPosition()__			if (matchingDelimiter != null) {_				if (this.stripDelimiter) {_					frame = dataBuffer.slice(readPosition, length)__				}_				else {_					frame = dataBuffer.slice(readPosition, length + matchingDelimiter.length)__				}_				dataBuffer.readPosition(readPosition + length + matchingDelimiter.length)___				frames.add(DataBufferUtils.retain(frame))__				frames.add(END_FRAME)__			}_			else {_				frame = dataBuffer.slice(readPosition, dataBuffer.readableByteCount())__				dataBuffer.readPosition(readPosition + dataBuffer.readableByteCount())__				frames.add(DataBufferUtils.retain(frame))__			}_		}_		while (dataBuffer.readableByteCount() > 0)___		DataBufferUtils.release(dataBuffer)__		return Flux.fromIterable(frames)__	};splits,the,given,data,buffer,on,delimiter,boundaries,the,returned,flux,contains,a,link,buffer,after,each,delimiter;private,flux,data,buffer,split,on,delimiter,data,buffer,data,buffer,list,byte,delimiter,bytes,list,data,buffer,frames,new,array,list,do,int,length,integer,byte,matching,delimiter,null,for,byte,delimiter,delimiter,bytes,int,idx,index,of,data,buffer,delimiter,if,idx,0,idx,length,length,idx,matching,delimiter,delimiter,data,buffer,frame,int,read,position,data,buffer,read,position,if,matching,delimiter,null,if,this,strip,delimiter,frame,data,buffer,slice,read,position,length,else,frame,data,buffer,slice,read,position,length,matching,delimiter,length,data,buffer,read,position,read,position,length,matching,delimiter,length,frames,add,data,buffer,utils,retain,frame,frames,add,else,frame,data,buffer,slice,read,position,data,buffer,readable,byte,count,data,buffer,read,position,read,position,data,buffer,readable,byte,count,frames,add,data,buffer,utils,retain,frame,while,data,buffer,readable,byte,count,0,data,buffer,utils,release,data,buffer,return,flux,from,iterable,frames
StringDecoder -> private Flux<DataBuffer> splitOnDelimiter(DataBuffer dataBuffer, List<byte[]> delimiterBytes);1529721864;Splits the given data buffer on delimiter boundaries. The returned Flux contains a_{@link #END_FRAME} buffer after each delimiter.;private Flux<DataBuffer> splitOnDelimiter(DataBuffer dataBuffer, List<byte[]> delimiterBytes) {_		List<DataBuffer> frames = new ArrayList<>()__		do {_			int length = Integer.MAX_VALUE__			byte[] matchingDelimiter = null__			for (byte[] delimiter : delimiterBytes) {_				int idx = indexOf(dataBuffer, delimiter)__				if (idx >= 0 && idx < length) {_					length = idx__					matchingDelimiter = delimiter__				}_			}_			DataBuffer frame__			int readPosition = dataBuffer.readPosition()__			if (matchingDelimiter != null) {_				if (this.stripDelimiter) {_					frame = dataBuffer.slice(readPosition, length)__				}_				else {_					frame = dataBuffer.slice(readPosition, length + matchingDelimiter.length)__				}_				dataBuffer.readPosition(readPosition + length + matchingDelimiter.length)___				frames.add(DataBufferUtils.retain(frame))__				frames.add(END_FRAME)__			}_			else {_				frame = dataBuffer.slice(readPosition, dataBuffer.readableByteCount())__				dataBuffer.readPosition(readPosition + dataBuffer.readableByteCount())__				frames.add(DataBufferUtils.retain(frame))__			}_		}_		while (dataBuffer.readableByteCount() > 0)___		DataBufferUtils.release(dataBuffer)__		return Flux.fromIterable(frames)__	};splits,the,given,data,buffer,on,delimiter,boundaries,the,returned,flux,contains,a,link,buffer,after,each,delimiter;private,flux,data,buffer,split,on,delimiter,data,buffer,data,buffer,list,byte,delimiter,bytes,list,data,buffer,frames,new,array,list,do,int,length,integer,byte,matching,delimiter,null,for,byte,delimiter,delimiter,bytes,int,idx,index,of,data,buffer,delimiter,if,idx,0,idx,length,length,idx,matching,delimiter,delimiter,data,buffer,frame,int,read,position,data,buffer,read,position,if,matching,delimiter,null,if,this,strip,delimiter,frame,data,buffer,slice,read,position,length,else,frame,data,buffer,slice,read,position,length,matching,delimiter,length,data,buffer,read,position,read,position,length,matching,delimiter,length,frames,add,data,buffer,utils,retain,frame,frames,add,else,frame,data,buffer,slice,read,position,data,buffer,readable,byte,count,data,buffer,read,position,read,position,data,buffer,readable,byte,count,frames,add,data,buffer,utils,retain,frame,while,data,buffer,readable,byte,count,0,data,buffer,utils,release,data,buffer,return,flux,from,iterable,frames
StringDecoder -> private Flux<DataBuffer> splitOnDelimiter(DataBuffer dataBuffer, List<byte[]> delimiterBytes);1530174524;Splits the given data buffer on delimiter boundaries. The returned Flux contains a_{@link #END_FRAME} buffer after each delimiter.;private Flux<DataBuffer> splitOnDelimiter(DataBuffer dataBuffer, List<byte[]> delimiterBytes) {_		List<DataBuffer> frames = new ArrayList<>()__		do {_			int length = Integer.MAX_VALUE__			byte[] matchingDelimiter = null__			for (byte[] delimiter : delimiterBytes) {_				int idx = indexOf(dataBuffer, delimiter)__				if (idx >= 0 && idx < length) {_					length = idx__					matchingDelimiter = delimiter__				}_			}_			DataBuffer frame__			int readPosition = dataBuffer.readPosition()__			if (matchingDelimiter != null) {_				if (this.stripDelimiter) {_					frame = dataBuffer.slice(readPosition, length)__				}_				else {_					frame = dataBuffer.slice(readPosition, length + matchingDelimiter.length)__				}_				dataBuffer.readPosition(readPosition + length + matchingDelimiter.length)___				frames.add(DataBufferUtils.retain(frame))__				frames.add(END_FRAME)__			}_			else {_				frame = dataBuffer.slice(readPosition, dataBuffer.readableByteCount())__				dataBuffer.readPosition(readPosition + dataBuffer.readableByteCount())__				frames.add(DataBufferUtils.retain(frame))__			}_		}_		while (dataBuffer.readableByteCount() > 0)___		DataBufferUtils.release(dataBuffer)__		return Flux.fromIterable(frames)__	};splits,the,given,data,buffer,on,delimiter,boundaries,the,returned,flux,contains,a,link,buffer,after,each,delimiter;private,flux,data,buffer,split,on,delimiter,data,buffer,data,buffer,list,byte,delimiter,bytes,list,data,buffer,frames,new,array,list,do,int,length,integer,byte,matching,delimiter,null,for,byte,delimiter,delimiter,bytes,int,idx,index,of,data,buffer,delimiter,if,idx,0,idx,length,length,idx,matching,delimiter,delimiter,data,buffer,frame,int,read,position,data,buffer,read,position,if,matching,delimiter,null,if,this,strip,delimiter,frame,data,buffer,slice,read,position,length,else,frame,data,buffer,slice,read,position,length,matching,delimiter,length,data,buffer,read,position,read,position,length,matching,delimiter,length,frames,add,data,buffer,utils,retain,frame,frames,add,else,frame,data,buffer,slice,read,position,data,buffer,readable,byte,count,data,buffer,read,position,read,position,data,buffer,readable,byte,count,frames,add,data,buffer,utils,retain,frame,while,data,buffer,readable,byte,count,0,data,buffer,utils,release,data,buffer,return,flux,from,iterable,frames
StringDecoder -> private Flux<DataBuffer> splitOnDelimiter(DataBuffer dataBuffer, List<byte[]> delimiterBytes);1530306952;Splits the given data buffer on delimiter boundaries. The returned Flux contains a_{@link #END_FRAME} buffer after each delimiter.;private Flux<DataBuffer> splitOnDelimiter(DataBuffer dataBuffer, List<byte[]> delimiterBytes) {_		List<DataBuffer> frames = new ArrayList<>()__		do {_			int length = Integer.MAX_VALUE__			byte[] matchingDelimiter = null__			for (byte[] delimiter : delimiterBytes) {_				int idx = indexOf(dataBuffer, delimiter)__				if (idx >= 0 && idx < length) {_					length = idx__					matchingDelimiter = delimiter__				}_			}_			DataBuffer frame__			int readPosition = dataBuffer.readPosition()__			if (matchingDelimiter != null) {_				if (this.stripDelimiter) {_					frame = dataBuffer.slice(readPosition, length)__				}_				else {_					frame = dataBuffer.slice(readPosition, length + matchingDelimiter.length)__				}_				dataBuffer.readPosition(readPosition + length + matchingDelimiter.length)___				frames.add(DataBufferUtils.retain(frame))__				frames.add(END_FRAME)__			}_			else {_				frame = dataBuffer.slice(readPosition, dataBuffer.readableByteCount())__				dataBuffer.readPosition(readPosition + dataBuffer.readableByteCount())__				frames.add(DataBufferUtils.retain(frame))__			}_		}_		while (dataBuffer.readableByteCount() > 0)___		DataBufferUtils.release(dataBuffer)__		return Flux.fromIterable(frames)__	};splits,the,given,data,buffer,on,delimiter,boundaries,the,returned,flux,contains,a,link,buffer,after,each,delimiter;private,flux,data,buffer,split,on,delimiter,data,buffer,data,buffer,list,byte,delimiter,bytes,list,data,buffer,frames,new,array,list,do,int,length,integer,byte,matching,delimiter,null,for,byte,delimiter,delimiter,bytes,int,idx,index,of,data,buffer,delimiter,if,idx,0,idx,length,length,idx,matching,delimiter,delimiter,data,buffer,frame,int,read,position,data,buffer,read,position,if,matching,delimiter,null,if,this,strip,delimiter,frame,data,buffer,slice,read,position,length,else,frame,data,buffer,slice,read,position,length,matching,delimiter,length,data,buffer,read,position,read,position,length,matching,delimiter,length,frames,add,data,buffer,utils,retain,frame,frames,add,else,frame,data,buffer,slice,read,position,data,buffer,readable,byte,count,data,buffer,read,position,read,position,data,buffer,readable,byte,count,frames,add,data,buffer,utils,retain,frame,while,data,buffer,readable,byte,count,0,data,buffer,utils,release,data,buffer,return,flux,from,iterable,frames
StringDecoder -> private Flux<DataBuffer> splitOnDelimiter(DataBuffer dataBuffer, List<byte[]> delimiterBytes);1530793695;Splits the given data buffer on delimiter boundaries. The returned Flux contains a_{@link #END_FRAME} buffer after each delimiter.;private Flux<DataBuffer> splitOnDelimiter(DataBuffer dataBuffer, List<byte[]> delimiterBytes) {_		List<DataBuffer> frames = new ArrayList<>()__		do {_			int length = Integer.MAX_VALUE__			byte[] matchingDelimiter = null__			for (byte[] delimiter : delimiterBytes) {_				int idx = indexOf(dataBuffer, delimiter)__				if (idx >= 0 && idx < length) {_					length = idx__					matchingDelimiter = delimiter__				}_			}_			DataBuffer frame__			int readPosition = dataBuffer.readPosition()__			if (matchingDelimiter != null) {_				if (this.stripDelimiter) {_					frame = dataBuffer.slice(readPosition, length)__				}_				else {_					frame = dataBuffer.slice(readPosition, length + matchingDelimiter.length)__				}_				dataBuffer.readPosition(readPosition + length + matchingDelimiter.length)___				frames.add(DataBufferUtils.retain(frame))__				frames.add(END_FRAME)__			}_			else {_				frame = dataBuffer.slice(readPosition, dataBuffer.readableByteCount())__				dataBuffer.readPosition(readPosition + dataBuffer.readableByteCount())__				frames.add(DataBufferUtils.retain(frame))__			}_		}_		while (dataBuffer.readableByteCount() > 0)___		DataBufferUtils.release(dataBuffer)__		return Flux.fromIterable(frames)__	};splits,the,given,data,buffer,on,delimiter,boundaries,the,returned,flux,contains,a,link,buffer,after,each,delimiter;private,flux,data,buffer,split,on,delimiter,data,buffer,data,buffer,list,byte,delimiter,bytes,list,data,buffer,frames,new,array,list,do,int,length,integer,byte,matching,delimiter,null,for,byte,delimiter,delimiter,bytes,int,idx,index,of,data,buffer,delimiter,if,idx,0,idx,length,length,idx,matching,delimiter,delimiter,data,buffer,frame,int,read,position,data,buffer,read,position,if,matching,delimiter,null,if,this,strip,delimiter,frame,data,buffer,slice,read,position,length,else,frame,data,buffer,slice,read,position,length,matching,delimiter,length,data,buffer,read,position,read,position,length,matching,delimiter,length,frames,add,data,buffer,utils,retain,frame,frames,add,else,frame,data,buffer,slice,read,position,data,buffer,readable,byte,count,data,buffer,read,position,read,position,data,buffer,readable,byte,count,frames,add,data,buffer,utils,retain,frame,while,data,buffer,readable,byte,count,0,data,buffer,utils,release,data,buffer,return,flux,from,iterable,frames
StringDecoder -> private Flux<DataBuffer> splitOnDelimiter(DataBuffer dataBuffer, List<byte[]> delimiterBytes);1536942003;Splits the given data buffer on delimiter boundaries. The returned Flux contains a_{@link #END_FRAME} buffer after each delimiter.;private Flux<DataBuffer> splitOnDelimiter(DataBuffer dataBuffer, List<byte[]> delimiterBytes) {_		List<DataBuffer> frames = new ArrayList<>()__		do {_			int length = Integer.MAX_VALUE__			byte[] matchingDelimiter = null__			for (byte[] delimiter : delimiterBytes) {_				int idx = indexOf(dataBuffer, delimiter)__				if (idx >= 0 && idx < length) {_					length = idx__					matchingDelimiter = delimiter__				}_			}_			DataBuffer frame__			int readPosition = dataBuffer.readPosition()__			if (matchingDelimiter != null) {_				if (this.stripDelimiter) {_					frame = dataBuffer.slice(readPosition, length)__				}_				else {_					frame = dataBuffer.slice(readPosition, length + matchingDelimiter.length)__				}_				dataBuffer.readPosition(readPosition + length + matchingDelimiter.length)___				frames.add(DataBufferUtils.retain(frame))__				frames.add(END_FRAME)__			}_			else {_				frame = dataBuffer.slice(readPosition, dataBuffer.readableByteCount())__				dataBuffer.readPosition(readPosition + dataBuffer.readableByteCount())__				frames.add(DataBufferUtils.retain(frame))__			}_		}_		while (dataBuffer.readableByteCount() > 0)___		DataBufferUtils.release(dataBuffer)__		return Flux.fromIterable(frames)__	};splits,the,given,data,buffer,on,delimiter,boundaries,the,returned,flux,contains,a,link,buffer,after,each,delimiter;private,flux,data,buffer,split,on,delimiter,data,buffer,data,buffer,list,byte,delimiter,bytes,list,data,buffer,frames,new,array,list,do,int,length,integer,byte,matching,delimiter,null,for,byte,delimiter,delimiter,bytes,int,idx,index,of,data,buffer,delimiter,if,idx,0,idx,length,length,idx,matching,delimiter,delimiter,data,buffer,frame,int,read,position,data,buffer,read,position,if,matching,delimiter,null,if,this,strip,delimiter,frame,data,buffer,slice,read,position,length,else,frame,data,buffer,slice,read,position,length,matching,delimiter,length,data,buffer,read,position,read,position,length,matching,delimiter,length,frames,add,data,buffer,utils,retain,frame,frames,add,else,frame,data,buffer,slice,read,position,data,buffer,readable,byte,count,data,buffer,read,position,read,position,data,buffer,readable,byte,count,frames,add,data,buffer,utils,retain,frame,while,data,buffer,readable,byte,count,0,data,buffer,utils,release,data,buffer,return,flux,from,iterable,frames
StringDecoder -> private Flux<DataBuffer> splitOnDelimiter(DataBuffer dataBuffer, List<byte[]> delimiterBytes);1536962806;Splits the given data buffer on delimiter boundaries. The returned Flux contains a_{@link #END_FRAME} buffer after each delimiter.;private Flux<DataBuffer> splitOnDelimiter(DataBuffer dataBuffer, List<byte[]> delimiterBytes) {_		List<DataBuffer> frames = new ArrayList<>()__		do {_			int length = Integer.MAX_VALUE__			byte[] matchingDelimiter = null__			for (byte[] delimiter : delimiterBytes) {_				int idx = indexOf(dataBuffer, delimiter)__				if (idx >= 0 && idx < length) {_					length = idx__					matchingDelimiter = delimiter__				}_			}_			DataBuffer frame__			int readPosition = dataBuffer.readPosition()__			if (matchingDelimiter != null) {_				if (this.stripDelimiter) {_					frame = dataBuffer.slice(readPosition, length)__				}_				else {_					frame = dataBuffer.slice(readPosition, length + matchingDelimiter.length)__				}_				dataBuffer.readPosition(readPosition + length + matchingDelimiter.length)___				frames.add(DataBufferUtils.retain(frame))__				frames.add(END_FRAME)__			}_			else {_				frame = dataBuffer.slice(readPosition, dataBuffer.readableByteCount())__				dataBuffer.readPosition(readPosition + dataBuffer.readableByteCount())__				frames.add(DataBufferUtils.retain(frame))__			}_		}_		while (dataBuffer.readableByteCount() > 0)___		DataBufferUtils.release(dataBuffer)__		return Flux.fromIterable(frames)__	};splits,the,given,data,buffer,on,delimiter,boundaries,the,returned,flux,contains,a,link,buffer,after,each,delimiter;private,flux,data,buffer,split,on,delimiter,data,buffer,data,buffer,list,byte,delimiter,bytes,list,data,buffer,frames,new,array,list,do,int,length,integer,byte,matching,delimiter,null,for,byte,delimiter,delimiter,bytes,int,idx,index,of,data,buffer,delimiter,if,idx,0,idx,length,length,idx,matching,delimiter,delimiter,data,buffer,frame,int,read,position,data,buffer,read,position,if,matching,delimiter,null,if,this,strip,delimiter,frame,data,buffer,slice,read,position,length,else,frame,data,buffer,slice,read,position,length,matching,delimiter,length,data,buffer,read,position,read,position,length,matching,delimiter,length,frames,add,data,buffer,utils,retain,frame,frames,add,else,frame,data,buffer,slice,read,position,data,buffer,readable,byte,count,data,buffer,read,position,read,position,data,buffer,readable,byte,count,frames,add,data,buffer,utils,retain,frame,while,data,buffer,readable,byte,count,0,data,buffer,utils,release,data,buffer,return,flux,from,iterable,frames
StringDecoder -> private Flux<DataBuffer> splitOnDelimiter(DataBuffer dataBuffer, List<byte[]> delimiterBytes);1540216832;Splits the given data buffer on delimiter boundaries. The returned Flux contains a_{@link #END_FRAME} buffer after each delimiter.;private Flux<DataBuffer> splitOnDelimiter(DataBuffer dataBuffer, List<byte[]> delimiterBytes) {_		List<DataBuffer> frames = new ArrayList<>()__		do {_			int length = Integer.MAX_VALUE__			byte[] matchingDelimiter = null__			for (byte[] delimiter : delimiterBytes) {_				int idx = indexOf(dataBuffer, delimiter)__				if (idx >= 0 && idx < length) {_					length = idx__					matchingDelimiter = delimiter__				}_			}_			DataBuffer frame__			int readPosition = dataBuffer.readPosition()__			if (matchingDelimiter != null) {_				if (this.stripDelimiter) {_					frame = dataBuffer.slice(readPosition, length)__				}_				else {_					frame = dataBuffer.slice(readPosition, length + matchingDelimiter.length)__				}_				dataBuffer.readPosition(readPosition + length + matchingDelimiter.length)___				frames.add(DataBufferUtils.retain(frame))__				frames.add(END_FRAME)__			}_			else {_				frame = dataBuffer.slice(readPosition, dataBuffer.readableByteCount())__				dataBuffer.readPosition(readPosition + dataBuffer.readableByteCount())__				frames.add(DataBufferUtils.retain(frame))__			}_		}_		while (dataBuffer.readableByteCount() > 0)___		DataBufferUtils.release(dataBuffer)__		return Flux.fromIterable(frames)__	};splits,the,given,data,buffer,on,delimiter,boundaries,the,returned,flux,contains,a,link,buffer,after,each,delimiter;private,flux,data,buffer,split,on,delimiter,data,buffer,data,buffer,list,byte,delimiter,bytes,list,data,buffer,frames,new,array,list,do,int,length,integer,byte,matching,delimiter,null,for,byte,delimiter,delimiter,bytes,int,idx,index,of,data,buffer,delimiter,if,idx,0,idx,length,length,idx,matching,delimiter,delimiter,data,buffer,frame,int,read,position,data,buffer,read,position,if,matching,delimiter,null,if,this,strip,delimiter,frame,data,buffer,slice,read,position,length,else,frame,data,buffer,slice,read,position,length,matching,delimiter,length,data,buffer,read,position,read,position,length,matching,delimiter,length,frames,add,data,buffer,utils,retain,frame,frames,add,else,frame,data,buffer,slice,read,position,data,buffer,readable,byte,count,data,buffer,read,position,read,position,data,buffer,readable,byte,count,frames,add,data,buffer,utils,retain,frame,while,data,buffer,readable,byte,count,0,data,buffer,utils,release,data,buffer,return,flux,from,iterable,frames
StringDecoder -> public static StringDecoder textPlainOnly(boolean splitOnNewline);1490302386;Create a {@code StringDecoder} for {@code "text/plain"}._@param splitOnNewline whether to split the byte stream into lines;public static StringDecoder textPlainOnly(boolean splitOnNewline) {_		return new StringDecoder(splitOnNewline, new MimeType("text", "plain", DEFAULT_CHARSET))__	};create,a,code,string,decoder,for,code,text,plain,param,split,on,newline,whether,to,split,the,byte,stream,into,lines;public,static,string,decoder,text,plain,only,boolean,split,on,newline,return,new,string,decoder,split,on,newline,new,mime,type,text,plain
StringDecoder -> public static StringDecoder textPlainOnly(boolean splitOnNewline);1496242568;Create a {@code StringDecoder} for {@code "text/plain"}._@param splitOnNewline whether to split the byte stream into lines;public static StringDecoder textPlainOnly(boolean splitOnNewline) {_		return new StringDecoder(splitOnNewline, new MimeType("text", "plain", DEFAULT_CHARSET))__	};create,a,code,string,decoder,for,code,text,plain,param,split,on,newline,whether,to,split,the,byte,stream,into,lines;public,static,string,decoder,text,plain,only,boolean,split,on,newline,return,new,string,decoder,split,on,newline,new,mime,type,text,plain
StringDecoder -> public static StringDecoder textPlainOnly(boolean splitOnNewline);1496259743;Create a {@code StringDecoder} for {@code "text/plain"}._@param splitOnNewline whether to split the byte stream into lines;public static StringDecoder textPlainOnly(boolean splitOnNewline) {_		return new StringDecoder(splitOnNewline, new MimeType("text", "plain", DEFAULT_CHARSET))__	};create,a,code,string,decoder,for,code,text,plain,param,split,on,newline,whether,to,split,the,byte,stream,into,lines;public,static,string,decoder,text,plain,only,boolean,split,on,newline,return,new,string,decoder,split,on,newline,new,mime,type,text,plain
StringDecoder -> public static StringDecoder textPlainOnly(boolean splitOnNewline);1496837955;Create a {@code StringDecoder} for {@code "text/plain"}._@param splitOnNewline whether to split the byte stream into lines;public static StringDecoder textPlainOnly(boolean splitOnNewline) {_		return new StringDecoder(splitOnNewline, new MimeType("text", "plain", DEFAULT_CHARSET))__	};create,a,code,string,decoder,for,code,text,plain,param,split,on,newline,whether,to,split,the,byte,stream,into,lines;public,static,string,decoder,text,plain,only,boolean,split,on,newline,return,new,string,decoder,split,on,newline,new,mime,type,text,plain
StringDecoder -> public static StringDecoder textPlainOnly(boolean splitOnNewline);1513288774;Create a {@code StringDecoder} for {@code "text/plain"}._@param splitOnNewline whether to split the byte stream into lines;public static StringDecoder textPlainOnly(boolean splitOnNewline) {_		return new StringDecoder(splitOnNewline, new MimeType("text", "plain", DEFAULT_CHARSET))__	};create,a,code,string,decoder,for,code,text,plain,param,split,on,newline,whether,to,split,the,byte,stream,into,lines;public,static,string,decoder,text,plain,only,boolean,split,on,newline,return,new,string,decoder,split,on,newline,new,mime,type,text,plain
StringDecoder -> public static StringDecoder textPlainOnly();1517583561;Create a {@code StringDecoder} for {@code "text/plain"}.;public static StringDecoder textPlainOnly() {_		return textPlainOnly(DEFAULT_DELIMITERS, true)__	};create,a,code,string,decoder,for,code,text,plain;public,static,string,decoder,text,plain,only,return,text,plain,only,true
StringDecoder -> public static StringDecoder textPlainOnly();1518167526;Create a {@code StringDecoder} for {@code "text/plain"}.;public static StringDecoder textPlainOnly() {_		return textPlainOnly(DEFAULT_DELIMITERS, true)__	};create,a,code,string,decoder,for,code,text,plain;public,static,string,decoder,text,plain,only,return,text,plain,only,true
StringDecoder -> public static StringDecoder textPlainOnly();1529721864;Create a {@code StringDecoder} for {@code "text/plain"}.;public static StringDecoder textPlainOnly() {_		return textPlainOnly(DEFAULT_DELIMITERS, true)__	};create,a,code,string,decoder,for,code,text,plain;public,static,string,decoder,text,plain,only,return,text,plain,only,true
StringDecoder -> public static StringDecoder textPlainOnly();1530174524;Create a {@code StringDecoder} for {@code "text/plain"}.;public static StringDecoder textPlainOnly() {_		return textPlainOnly(DEFAULT_DELIMITERS, true)__	};create,a,code,string,decoder,for,code,text,plain;public,static,string,decoder,text,plain,only,return,text,plain,only,true
StringDecoder -> public static StringDecoder textPlainOnly();1530306952;Create a {@code StringDecoder} for {@code "text/plain"}.;public static StringDecoder textPlainOnly() {_		return textPlainOnly(DEFAULT_DELIMITERS, true)__	};create,a,code,string,decoder,for,code,text,plain;public,static,string,decoder,text,plain,only,return,text,plain,only,true
StringDecoder -> public static StringDecoder textPlainOnly();1530793695;Create a {@code StringDecoder} for {@code "text/plain"}.;public static StringDecoder textPlainOnly() {_		return textPlainOnly(DEFAULT_DELIMITERS, true)__	};create,a,code,string,decoder,for,code,text,plain;public,static,string,decoder,text,plain,only,return,text,plain,only,true
StringDecoder -> public static StringDecoder textPlainOnly();1536942003;Create a {@code StringDecoder} for {@code "text/plain"}.;public static StringDecoder textPlainOnly() {_		return textPlainOnly(DEFAULT_DELIMITERS, true)__	};create,a,code,string,decoder,for,code,text,plain;public,static,string,decoder,text,plain,only,return,text,plain,only,true
StringDecoder -> public static StringDecoder textPlainOnly();1536962806;Create a {@code StringDecoder} for {@code "text/plain"}.;public static StringDecoder textPlainOnly() {_		return textPlainOnly(DEFAULT_DELIMITERS, true)__	};create,a,code,string,decoder,for,code,text,plain;public,static,string,decoder,text,plain,only,return,text,plain,only,true
StringDecoder -> public static StringDecoder textPlainOnly();1540216832;Create a {@code StringDecoder} for {@code "text/plain"}.;public static StringDecoder textPlainOnly() {_		return textPlainOnly(DEFAULT_DELIMITERS, true)__	};create,a,code,string,decoder,for,code,text,plain;public,static,string,decoder,text,plain,only,return,text,plain,only,true
StringDecoder -> public static StringDecoder textPlainOnly();1540574693;Create a {@code StringDecoder} for {@code "text/plain"}.;public static StringDecoder textPlainOnly() {_		return textPlainOnly(null, true)__	};create,a,code,string,decoder,for,code,text,plain;public,static,string,decoder,text,plain,only,return,text,plain,only,null,true
StringDecoder -> public static StringDecoder textPlainOnly();1542050977;Create a {@code StringDecoder} for {@code "text/plain"}.;public static StringDecoder textPlainOnly() {_		return textPlainOnly(null, true)__	};create,a,code,string,decoder,for,code,text,plain;public,static,string,decoder,text,plain,only,return,text,plain,only,null,true
StringDecoder -> public static StringDecoder textPlainOnly();1542112693;Create a {@code StringDecoder} for {@code "text/plain"}.;public static StringDecoder textPlainOnly() {_		return textPlainOnly(DEFAULT_DELIMITERS, true)__	};create,a,code,string,decoder,for,code,text,plain;public,static,string,decoder,text,plain,only,return,text,plain,only,true
StringDecoder -> public static StringDecoder textPlainOnly();1543877580;Create a {@code StringDecoder} for {@code "text/plain"}.;public static StringDecoder textPlainOnly() {_		return textPlainOnly(DEFAULT_DELIMITERS, true)__	};create,a,code,string,decoder,for,code,text,plain;public,static,string,decoder,text,plain,only,return,text,plain,only,true
StringDecoder -> public static StringDecoder allMimeTypes(List<String> delimiters, boolean stripDelimiter);1517583561;Create a {@code StringDecoder} that supports all MIME types.;public static StringDecoder allMimeTypes(List<String> delimiters, boolean stripDelimiter) {_		return new StringDecoder(delimiters, stripDelimiter,_				new MimeType("text", "plain", DEFAULT_CHARSET), MimeTypeUtils.ALL)__	};create,a,code,string,decoder,that,supports,all,mime,types;public,static,string,decoder,all,mime,types,list,string,delimiters,boolean,strip,delimiter,return,new,string,decoder,delimiters,strip,delimiter,new,mime,type,text,plain,mime,type,utils,all
StringDecoder -> public static StringDecoder allMimeTypes(List<String> delimiters, boolean stripDelimiter);1518167526;Create a {@code StringDecoder} that supports all MIME types.;public static StringDecoder allMimeTypes(List<String> delimiters, boolean stripDelimiter) {_		return new StringDecoder(delimiters, stripDelimiter,_				new MimeType("text", "plain", DEFAULT_CHARSET), MimeTypeUtils.ALL)__	};create,a,code,string,decoder,that,supports,all,mime,types;public,static,string,decoder,all,mime,types,list,string,delimiters,boolean,strip,delimiter,return,new,string,decoder,delimiters,strip,delimiter,new,mime,type,text,plain,mime,type,utils,all
StringDecoder -> public static StringDecoder allMimeTypes(List<String> delimiters, boolean stripDelimiter);1529721864;Create a {@code StringDecoder} that supports all MIME types.;public static StringDecoder allMimeTypes(List<String> delimiters, boolean stripDelimiter) {_		return new StringDecoder(delimiters, stripDelimiter,_				new MimeType("text", "plain", DEFAULT_CHARSET), MimeTypeUtils.ALL)__	};create,a,code,string,decoder,that,supports,all,mime,types;public,static,string,decoder,all,mime,types,list,string,delimiters,boolean,strip,delimiter,return,new,string,decoder,delimiters,strip,delimiter,new,mime,type,text,plain,mime,type,utils,all
StringDecoder -> public static StringDecoder allMimeTypes(List<String> delimiters, boolean stripDelimiter);1530174524;Create a {@code StringDecoder} that supports all MIME types.;public static StringDecoder allMimeTypes(List<String> delimiters, boolean stripDelimiter) {_		return new StringDecoder(delimiters, stripDelimiter,_				new MimeType("text", "plain", DEFAULT_CHARSET), MimeTypeUtils.ALL)__	};create,a,code,string,decoder,that,supports,all,mime,types;public,static,string,decoder,all,mime,types,list,string,delimiters,boolean,strip,delimiter,return,new,string,decoder,delimiters,strip,delimiter,new,mime,type,text,plain,mime,type,utils,all
StringDecoder -> public static StringDecoder allMimeTypes(List<String> delimiters, boolean stripDelimiter);1530306952;Create a {@code StringDecoder} that supports all MIME types.;public static StringDecoder allMimeTypes(List<String> delimiters, boolean stripDelimiter) {_		return new StringDecoder(delimiters, stripDelimiter,_				new MimeType("text", "plain", DEFAULT_CHARSET), MimeTypeUtils.ALL)__	};create,a,code,string,decoder,that,supports,all,mime,types;public,static,string,decoder,all,mime,types,list,string,delimiters,boolean,strip,delimiter,return,new,string,decoder,delimiters,strip,delimiter,new,mime,type,text,plain,mime,type,utils,all
StringDecoder -> public static StringDecoder allMimeTypes(List<String> delimiters, boolean stripDelimiter);1530793695;Create a {@code StringDecoder} that supports all MIME types.;public static StringDecoder allMimeTypes(List<String> delimiters, boolean stripDelimiter) {_		return new StringDecoder(delimiters, stripDelimiter,_				new MimeType("text", "plain", DEFAULT_CHARSET), MimeTypeUtils.ALL)__	};create,a,code,string,decoder,that,supports,all,mime,types;public,static,string,decoder,all,mime,types,list,string,delimiters,boolean,strip,delimiter,return,new,string,decoder,delimiters,strip,delimiter,new,mime,type,text,plain,mime,type,utils,all
StringDecoder -> public static StringDecoder allMimeTypes(List<String> delimiters, boolean stripDelimiter);1536942003;Create a {@code StringDecoder} that supports all MIME types.;public static StringDecoder allMimeTypes(List<String> delimiters, boolean stripDelimiter) {_		return new StringDecoder(delimiters, stripDelimiter,_				new MimeType("text", "plain", DEFAULT_CHARSET), MimeTypeUtils.ALL)__	};create,a,code,string,decoder,that,supports,all,mime,types;public,static,string,decoder,all,mime,types,list,string,delimiters,boolean,strip,delimiter,return,new,string,decoder,delimiters,strip,delimiter,new,mime,type,text,plain,mime,type,utils,all
StringDecoder -> public static StringDecoder allMimeTypes(List<String> delimiters, boolean stripDelimiter);1536962806;Create a {@code StringDecoder} that supports all MIME types.;public static StringDecoder allMimeTypes(List<String> delimiters, boolean stripDelimiter) {_		return new StringDecoder(delimiters, stripDelimiter,_				new MimeType("text", "plain", DEFAULT_CHARSET), MimeTypeUtils.ALL)__	};create,a,code,string,decoder,that,supports,all,mime,types;public,static,string,decoder,all,mime,types,list,string,delimiters,boolean,strip,delimiter,return,new,string,decoder,delimiters,strip,delimiter,new,mime,type,text,plain,mime,type,utils,all
StringDecoder -> public static StringDecoder allMimeTypes(List<String> delimiters, boolean stripDelimiter);1540216832;Create a {@code StringDecoder} that supports all MIME types.;public static StringDecoder allMimeTypes(List<String> delimiters, boolean stripDelimiter) {_		return new StringDecoder(delimiters, stripDelimiter,_				new MimeType("text", "plain", DEFAULT_CHARSET), MimeTypeUtils.ALL)__	};create,a,code,string,decoder,that,supports,all,mime,types;public,static,string,decoder,all,mime,types,list,string,delimiters,boolean,strip,delimiter,return,new,string,decoder,delimiters,strip,delimiter,new,mime,type,text,plain,mime,type,utils,all
StringDecoder -> public static StringDecoder allMimeTypes(List<String> delimiters, boolean stripDelimiter);1542112693;Create a {@code StringDecoder} that supports all MIME types._@param delimiters delimiter strings to use to split the input stream_@param stripDelimiter whether to remove delimiters from the resulting_input strings.;public static StringDecoder allMimeTypes(List<String> delimiters, boolean stripDelimiter) {_		return new StringDecoder(delimiters, stripDelimiter,_				new MimeType("text", "plain", DEFAULT_CHARSET), MimeTypeUtils.ALL)__	};create,a,code,string,decoder,that,supports,all,mime,types,param,delimiters,delimiter,strings,to,use,to,split,the,input,stream,param,strip,delimiter,whether,to,remove,delimiters,from,the,resulting,input,strings;public,static,string,decoder,all,mime,types,list,string,delimiters,boolean,strip,delimiter,return,new,string,decoder,delimiters,strip,delimiter,new,mime,type,text,plain,mime,type,utils,all
StringDecoder -> public static StringDecoder allMimeTypes(List<String> delimiters, boolean stripDelimiter);1543877580;Create a {@code StringDecoder} that supports all MIME types._@param delimiters delimiter strings to use to split the input stream_@param stripDelimiter whether to remove delimiters from the resulting_input strings;public static StringDecoder allMimeTypes(List<String> delimiters, boolean stripDelimiter) {_		return new StringDecoder(delimiters, stripDelimiter,_				new MimeType("text", "plain", DEFAULT_CHARSET), MimeTypeUtils.ALL)__	};create,a,code,string,decoder,that,supports,all,mime,types,param,delimiters,delimiter,strings,to,use,to,split,the,input,stream,param,strip,delimiter,whether,to,remove,delimiters,from,the,resulting,input,strings;public,static,string,decoder,all,mime,types,list,string,delimiters,boolean,strip,delimiter,return,new,string,decoder,delimiters,strip,delimiter,new,mime,type,text,plain,mime,type,utils,all
StringDecoder -> private static Mono<DataBuffer> joinUntilEndFrame(List<DataBuffer> dataBuffers);1517583561;Joins the given list of buffers into a single buffer.;private static Mono<DataBuffer> joinUntilEndFrame(List<DataBuffer> dataBuffers) {_		if (dataBuffers.size() > 0) {_			int lastIdx = dataBuffers.size() - 1__			if (isEndFrame(dataBuffers.get(lastIdx))) {_				dataBuffers.remove(lastIdx)__			}_		}_		Flux<DataBuffer> flux = Flux.fromIterable(dataBuffers)__		return DataBufferUtils.join(flux)__	};joins,the,given,list,of,buffers,into,a,single,buffer;private,static,mono,data,buffer,join,until,end,frame,list,data,buffer,data,buffers,if,data,buffers,size,0,int,last,idx,data,buffers,size,1,if,is,end,frame,data,buffers,get,last,idx,data,buffers,remove,last,idx,flux,data,buffer,flux,flux,from,iterable,data,buffers,return,data,buffer,utils,join,flux
StringDecoder -> private static Mono<DataBuffer> joinUntilEndFrame(List<DataBuffer> dataBuffers);1518167526;Joins the given list of buffers into a single buffer.;private static Mono<DataBuffer> joinUntilEndFrame(List<DataBuffer> dataBuffers) {_		if (!dataBuffers.isEmpty()) {_			int lastIdx = dataBuffers.size() - 1__			if (isEndFrame(dataBuffers.get(lastIdx))) {_				dataBuffers.remove(lastIdx)__			}_		}_		Flux<DataBuffer> flux = Flux.fromIterable(dataBuffers)__		return DataBufferUtils.join(flux)__	};joins,the,given,list,of,buffers,into,a,single,buffer;private,static,mono,data,buffer,join,until,end,frame,list,data,buffer,data,buffers,if,data,buffers,is,empty,int,last,idx,data,buffers,size,1,if,is,end,frame,data,buffers,get,last,idx,data,buffers,remove,last,idx,flux,data,buffer,flux,flux,from,iterable,data,buffers,return,data,buffer,utils,join,flux
StringDecoder -> private static Mono<DataBuffer> joinUntilEndFrame(List<DataBuffer> dataBuffers);1529721864;Joins the given list of buffers into a single buffer.;private static Mono<DataBuffer> joinUntilEndFrame(List<DataBuffer> dataBuffers) {_		if (!dataBuffers.isEmpty()) {_			int lastIdx = dataBuffers.size() - 1__			if (isEndFrame(dataBuffers.get(lastIdx))) {_				dataBuffers.remove(lastIdx)__			}_		}_		Flux<DataBuffer> flux = Flux.fromIterable(dataBuffers)__		return DataBufferUtils.join(flux)__	};joins,the,given,list,of,buffers,into,a,single,buffer;private,static,mono,data,buffer,join,until,end,frame,list,data,buffer,data,buffers,if,data,buffers,is,empty,int,last,idx,data,buffers,size,1,if,is,end,frame,data,buffers,get,last,idx,data,buffers,remove,last,idx,flux,data,buffer,flux,flux,from,iterable,data,buffers,return,data,buffer,utils,join,flux
StringDecoder -> private static Mono<DataBuffer> joinUntilEndFrame(List<DataBuffer> dataBuffers);1530174524;Joins the given list of buffers into a single buffer.;private static Mono<DataBuffer> joinUntilEndFrame(List<DataBuffer> dataBuffers) {_		if (!dataBuffers.isEmpty()) {_			int lastIdx = dataBuffers.size() - 1__			if (isEndFrame(dataBuffers.get(lastIdx))) {_				dataBuffers.remove(lastIdx)__			}_		}_		Flux<DataBuffer> flux = Flux.fromIterable(dataBuffers)__		return DataBufferUtils.join(flux)__	};joins,the,given,list,of,buffers,into,a,single,buffer;private,static,mono,data,buffer,join,until,end,frame,list,data,buffer,data,buffers,if,data,buffers,is,empty,int,last,idx,data,buffers,size,1,if,is,end,frame,data,buffers,get,last,idx,data,buffers,remove,last,idx,flux,data,buffer,flux,flux,from,iterable,data,buffers,return,data,buffer,utils,join,flux
StringDecoder -> private static Mono<DataBuffer> joinUntilEndFrame(List<DataBuffer> dataBuffers);1530306952;Joins the given list of buffers into a single buffer.;private static Mono<DataBuffer> joinUntilEndFrame(List<DataBuffer> dataBuffers) {_		if (!dataBuffers.isEmpty()) {_			int lastIdx = dataBuffers.size() - 1__			if (isEndFrame(dataBuffers.get(lastIdx))) {_				dataBuffers.remove(lastIdx)__			}_		}_		Flux<DataBuffer> flux = Flux.fromIterable(dataBuffers)__		return DataBufferUtils.join(flux)__	};joins,the,given,list,of,buffers,into,a,single,buffer;private,static,mono,data,buffer,join,until,end,frame,list,data,buffer,data,buffers,if,data,buffers,is,empty,int,last,idx,data,buffers,size,1,if,is,end,frame,data,buffers,get,last,idx,data,buffers,remove,last,idx,flux,data,buffer,flux,flux,from,iterable,data,buffers,return,data,buffer,utils,join,flux
StringDecoder -> private static Mono<DataBuffer> joinUntilEndFrame(List<DataBuffer> dataBuffers);1530793695;Joins the given list of buffers into a single buffer.;private static Mono<DataBuffer> joinUntilEndFrame(List<DataBuffer> dataBuffers) {_		if (!dataBuffers.isEmpty()) {_			int lastIdx = dataBuffers.size() - 1__			if (isEndFrame(dataBuffers.get(lastIdx))) {_				dataBuffers.remove(lastIdx)__			}_		}_		Flux<DataBuffer> flux = Flux.fromIterable(dataBuffers)__		return DataBufferUtils.join(flux)__	};joins,the,given,list,of,buffers,into,a,single,buffer;private,static,mono,data,buffer,join,until,end,frame,list,data,buffer,data,buffers,if,data,buffers,is,empty,int,last,idx,data,buffers,size,1,if,is,end,frame,data,buffers,get,last,idx,data,buffers,remove,last,idx,flux,data,buffer,flux,flux,from,iterable,data,buffers,return,data,buffer,utils,join,flux
StringDecoder -> private static Mono<DataBuffer> joinUntilEndFrame(List<DataBuffer> dataBuffers);1536942003;Joins the given list of buffers into a single buffer.;private static Mono<DataBuffer> joinUntilEndFrame(List<DataBuffer> dataBuffers) {_		if (!dataBuffers.isEmpty()) {_			int lastIdx = dataBuffers.size() - 1__			if (isEndFrame(dataBuffers.get(lastIdx))) {_				dataBuffers.remove(lastIdx)__			}_		}_		Flux<DataBuffer> flux = Flux.fromIterable(dataBuffers)__		return DataBufferUtils.join(flux)__	};joins,the,given,list,of,buffers,into,a,single,buffer;private,static,mono,data,buffer,join,until,end,frame,list,data,buffer,data,buffers,if,data,buffers,is,empty,int,last,idx,data,buffers,size,1,if,is,end,frame,data,buffers,get,last,idx,data,buffers,remove,last,idx,flux,data,buffer,flux,flux,from,iterable,data,buffers,return,data,buffer,utils,join,flux
StringDecoder -> private static Mono<DataBuffer> joinUntilEndFrame(List<DataBuffer> dataBuffers);1536962806;Joins the given list of buffers into a single buffer.;private static Mono<DataBuffer> joinUntilEndFrame(List<DataBuffer> dataBuffers) {_		if (!dataBuffers.isEmpty()) {_			int lastIdx = dataBuffers.size() - 1__			if (isEndFrame(dataBuffers.get(lastIdx))) {_				dataBuffers.remove(lastIdx)__			}_		}_		Flux<DataBuffer> flux = Flux.fromIterable(dataBuffers)__		return DataBufferUtils.join(flux)__	};joins,the,given,list,of,buffers,into,a,single,buffer;private,static,mono,data,buffer,join,until,end,frame,list,data,buffer,data,buffers,if,data,buffers,is,empty,int,last,idx,data,buffers,size,1,if,is,end,frame,data,buffers,get,last,idx,data,buffers,remove,last,idx,flux,data,buffer,flux,flux,from,iterable,data,buffers,return,data,buffer,utils,join,flux
StringDecoder -> private static Mono<DataBuffer> joinUntilEndFrame(List<DataBuffer> dataBuffers);1540216832;Joins the given list of buffers into a single buffer.;private static Mono<DataBuffer> joinUntilEndFrame(List<DataBuffer> dataBuffers) {_		if (!dataBuffers.isEmpty()) {_			int lastIdx = dataBuffers.size() - 1__			if (isEndFrame(dataBuffers.get(lastIdx))) {_				dataBuffers.remove(lastIdx)__			}_		}_		Flux<DataBuffer> flux = Flux.fromIterable(dataBuffers)__		return DataBufferUtils.join(flux)__	};joins,the,given,list,of,buffers,into,a,single,buffer;private,static,mono,data,buffer,join,until,end,frame,list,data,buffer,data,buffers,if,data,buffers,is,empty,int,last,idx,data,buffers,size,1,if,is,end,frame,data,buffers,get,last,idx,data,buffers,remove,last,idx,flux,data,buffer,flux,flux,from,iterable,data,buffers,return,data,buffer,utils,join,flux
StringDecoder -> public static StringDecoder textPlainOnly(@Nullable List<String> delimiters, boolean stripDelimiter);1540574693;Create a {@code StringDecoder} for {@code "text/plain"}._@param delimiters delimiter strings to use to split the input stream, if_{@code null} by default {@link #DEFAULT_DELIMITERS} is used._@param stripDelimiter whether to remove delimiters from the resulting_input strings.;public static StringDecoder textPlainOnly(@Nullable List<String> delimiters, boolean stripDelimiter) {_		return new StringDecoder(delimiters, stripDelimiter, new MimeType("text", "plain", DEFAULT_CHARSET))__	};create,a,code,string,decoder,for,code,text,plain,param,delimiters,delimiter,strings,to,use,to,split,the,input,stream,if,code,null,by,default,link,is,used,param,strip,delimiter,whether,to,remove,delimiters,from,the,resulting,input,strings;public,static,string,decoder,text,plain,only,nullable,list,string,delimiters,boolean,strip,delimiter,return,new,string,decoder,delimiters,strip,delimiter,new,mime,type,text,plain
StringDecoder -> public static StringDecoder textPlainOnly(@Nullable List<String> delimiters, boolean stripDelimiter);1542050977;Create a {@code StringDecoder} for {@code "text/plain"}._@param delimiters delimiter strings to use to split the input stream, if_{@code null} by default {@link #DEFAULT_DELIMITERS} is used._@param stripDelimiter whether to remove delimiters from the resulting_input strings.;public static StringDecoder textPlainOnly(@Nullable List<String> delimiters, boolean stripDelimiter) {_		return new StringDecoder(delimiters, stripDelimiter, new MimeType("text", "plain", DEFAULT_CHARSET))__	};create,a,code,string,decoder,for,code,text,plain,param,delimiters,delimiter,strings,to,use,to,split,the,input,stream,if,code,null,by,default,link,is,used,param,strip,delimiter,whether,to,remove,delimiters,from,the,resulting,input,strings;public,static,string,decoder,text,plain,only,nullable,list,string,delimiters,boolean,strip,delimiter,return,new,string,decoder,delimiters,strip,delimiter,new,mime,type,text,plain
StringDecoder -> public StringDecoder(boolean splitOnNewline);1468513830;Create a {@code StringDecoder} that decodes a bytes stream to a String stream__@param splitOnNewline whether this decoder should split the received data buffers_along newline characters;public StringDecoder(boolean splitOnNewline) {_		super(new MimeType("text", "*", DEFAULT_CHARSET), MimeTypeUtils.ALL)__		this.splitOnNewline = splitOnNewline__	};create,a,code,string,decoder,that,decodes,a,bytes,stream,to,a,string,stream,param,split,on,newline,whether,this,decoder,should,split,the,received,data,buffers,along,newline,characters;public,string,decoder,boolean,split,on,newline,super,new,mime,type,text,mime,type,utils,all,this,split,on,newline,split,on,newline
StringDecoder -> public StringDecoder(boolean splitOnNewline);1468532417;Create a {@code StringDecoder} that decodes a bytes stream to a String stream__@param splitOnNewline whether this decoder should split the received data buffers_along newline characters;public StringDecoder(boolean splitOnNewline) {_		super(new MimeType("text", "*", DEFAULT_CHARSET), MimeTypeUtils.ALL)__		this.splitOnNewline = splitOnNewline__	};create,a,code,string,decoder,that,decodes,a,bytes,stream,to,a,string,stream,param,split,on,newline,whether,this,decoder,should,split,the,received,data,buffers,along,newline,characters;public,string,decoder,boolean,split,on,newline,super,new,mime,type,text,mime,type,utils,all,this,split,on,newline,split,on,newline
StringDecoder -> public StringDecoder(boolean splitOnNewline);1469206066;Create a {@code StringDecoder} that decodes a bytes stream to a String stream__@param splitOnNewline whether this decoder should split the received data buffers_along newline characters;public StringDecoder(boolean splitOnNewline) {_		super(new MimeType("text", "*", DEFAULT_CHARSET), MimeTypeUtils.ALL)__		this.splitOnNewline = splitOnNewline__	};create,a,code,string,decoder,that,decodes,a,bytes,stream,to,a,string,stream,param,split,on,newline,whether,this,decoder,should,split,the,received,data,buffers,along,newline,characters;public,string,decoder,boolean,split,on,newline,super,new,mime,type,text,mime,type,utils,all,this,split,on,newline,split,on,newline
StringDecoder -> public StringDecoder(boolean splitOnNewline);1469540372;Create a {@code StringDecoder} that decodes a bytes stream to a String stream_@param splitOnNewline whether this decoder should split the received data buffers_along newline characters;public StringDecoder(boolean splitOnNewline) {_		super(new MimeType("text", "*", DEFAULT_CHARSET), MimeTypeUtils.ALL)__		this.splitOnNewline = splitOnNewline__	};create,a,code,string,decoder,that,decodes,a,bytes,stream,to,a,string,stream,param,split,on,newline,whether,this,decoder,should,split,the,received,data,buffers,along,newline,characters;public,string,decoder,boolean,split,on,newline,super,new,mime,type,text,mime,type,utils,all,this,split,on,newline,split,on,newline
StringDecoder -> public StringDecoder(boolean splitOnNewline);1473671281;Create a {@code StringDecoder} that decodes a bytes stream to a String stream_@param splitOnNewline whether this decoder should split the received data buffers_along newline characters;public StringDecoder(boolean splitOnNewline) {_		super(new MimeType("text", "*", DEFAULT_CHARSET), MimeTypeUtils.ALL)__		this.splitOnNewline = splitOnNewline__	};create,a,code,string,decoder,that,decodes,a,bytes,stream,to,a,string,stream,param,split,on,newline,whether,this,decoder,should,split,the,received,data,buffers,along,newline,characters;public,string,decoder,boolean,split,on,newline,super,new,mime,type,text,mime,type,utils,all,this,split,on,newline,split,on,newline
StringDecoder -> public StringDecoder(boolean splitOnNewline);1474365351;Create a {@code StringDecoder} that decodes a bytes stream to a String stream_@param splitOnNewline whether this decoder should split the received data buffers_along newline characters;public StringDecoder(boolean splitOnNewline) {_		super(new MimeType("text", "*", DEFAULT_CHARSET), MimeTypeUtils.ALL)__		this.splitOnNewline = splitOnNewline__	};create,a,code,string,decoder,that,decodes,a,bytes,stream,to,a,string,stream,param,split,on,newline,whether,this,decoder,should,split,the,received,data,buffers,along,newline,characters;public,string,decoder,boolean,split,on,newline,super,new,mime,type,text,mime,type,utils,all,this,split,on,newline,split,on,newline
StringDecoder -> public static StringDecoder allMimeTypes(boolean splitOnNewline);1490302386;Create a {@code StringDecoder} that supports all MIME types._@param splitOnNewline whether to split the byte stream into lines;public static StringDecoder allMimeTypes(boolean splitOnNewline) {_		return new StringDecoder(splitOnNewline,_				new MimeType("text", "plain", DEFAULT_CHARSET), MimeTypeUtils.ALL)__	};create,a,code,string,decoder,that,supports,all,mime,types,param,split,on,newline,whether,to,split,the,byte,stream,into,lines;public,static,string,decoder,all,mime,types,boolean,split,on,newline,return,new,string,decoder,split,on,newline,new,mime,type,text,plain,mime,type,utils,all
StringDecoder -> public static StringDecoder allMimeTypes(boolean splitOnNewline);1496242568;Create a {@code StringDecoder} that supports all MIME types._@param splitOnNewline whether to split the byte stream into lines;public static StringDecoder allMimeTypes(boolean splitOnNewline) {_		return new StringDecoder(splitOnNewline,_				new MimeType("text", "plain", DEFAULT_CHARSET), MimeTypeUtils.ALL)__	};create,a,code,string,decoder,that,supports,all,mime,types,param,split,on,newline,whether,to,split,the,byte,stream,into,lines;public,static,string,decoder,all,mime,types,boolean,split,on,newline,return,new,string,decoder,split,on,newline,new,mime,type,text,plain,mime,type,utils,all
StringDecoder -> public static StringDecoder allMimeTypes(boolean splitOnNewline);1496259743;Create a {@code StringDecoder} that supports all MIME types._@param splitOnNewline whether to split the byte stream into lines;public static StringDecoder allMimeTypes(boolean splitOnNewline) {_		return new StringDecoder(splitOnNewline,_				new MimeType("text", "plain", DEFAULT_CHARSET), MimeTypeUtils.ALL)__	};create,a,code,string,decoder,that,supports,all,mime,types,param,split,on,newline,whether,to,split,the,byte,stream,into,lines;public,static,string,decoder,all,mime,types,boolean,split,on,newline,return,new,string,decoder,split,on,newline,new,mime,type,text,plain,mime,type,utils,all
StringDecoder -> public static StringDecoder allMimeTypes(boolean splitOnNewline);1496837955;Create a {@code StringDecoder} that supports all MIME types._@param splitOnNewline whether to split the byte stream into lines;public static StringDecoder allMimeTypes(boolean splitOnNewline) {_		return new StringDecoder(splitOnNewline,_				new MimeType("text", "plain", DEFAULT_CHARSET), MimeTypeUtils.ALL)__	};create,a,code,string,decoder,that,supports,all,mime,types,param,split,on,newline,whether,to,split,the,byte,stream,into,lines;public,static,string,decoder,all,mime,types,boolean,split,on,newline,return,new,string,decoder,split,on,newline,new,mime,type,text,plain,mime,type,utils,all
StringDecoder -> public static StringDecoder allMimeTypes(boolean splitOnNewline);1513288774;Create a {@code StringDecoder} that supports all MIME types._@param splitOnNewline whether to split the byte stream into lines;public static StringDecoder allMimeTypes(boolean splitOnNewline) {_		return new StringDecoder(splitOnNewline,_				new MimeType("text", "plain", DEFAULT_CHARSET), MimeTypeUtils.ALL)__	};create,a,code,string,decoder,that,supports,all,mime,types,param,split,on,newline,whether,to,split,the,byte,stream,into,lines;public,static,string,decoder,all,mime,types,boolean,split,on,newline,return,new,string,decoder,split,on,newline,new,mime,type,text,plain,mime,type,utils,all
StringDecoder -> @Deprecated 	public static StringDecoder textPlainOnly(boolean ignored);1517583561;Create a {@code StringDecoder} for {@code "text/plain"}._@param ignored ignored_@deprecated as of Spring 5.0.4, in favor of {@link #textPlainOnly()} or_{@link #textPlainOnly(List, boolean)}.;@Deprecated_	public static StringDecoder textPlainOnly(boolean ignored) {_		return textPlainOnly()__	};create,a,code,string,decoder,for,code,text,plain,param,ignored,ignored,deprecated,as,of,spring,5,0,4,in,favor,of,link,text,plain,only,or,link,text,plain,only,list,boolean;deprecated,public,static,string,decoder,text,plain,only,boolean,ignored,return,text,plain,only
StringDecoder -> @Deprecated 	public static StringDecoder textPlainOnly(boolean ignored);1518167526;Create a {@code StringDecoder} for {@code "text/plain"}._@param ignored ignored_@deprecated as of Spring 5.0.4, in favor of {@link #textPlainOnly()} or_{@link #textPlainOnly(List, boolean)}.;@Deprecated_	public static StringDecoder textPlainOnly(boolean ignored) {_		return textPlainOnly()__	};create,a,code,string,decoder,for,code,text,plain,param,ignored,ignored,deprecated,as,of,spring,5,0,4,in,favor,of,link,text,plain,only,or,link,text,plain,only,list,boolean;deprecated,public,static,string,decoder,text,plain,only,boolean,ignored,return,text,plain,only
StringDecoder -> @Deprecated 	public static StringDecoder textPlainOnly(boolean ignored);1529721864;Create a {@code StringDecoder} for {@code "text/plain"}._@param ignored ignored_@deprecated as of Spring 5.0.4, in favor of {@link #textPlainOnly()} or_{@link #textPlainOnly(List, boolean)}.;@Deprecated_	public static StringDecoder textPlainOnly(boolean ignored) {_		return textPlainOnly()__	};create,a,code,string,decoder,for,code,text,plain,param,ignored,ignored,deprecated,as,of,spring,5,0,4,in,favor,of,link,text,plain,only,or,link,text,plain,only,list,boolean;deprecated,public,static,string,decoder,text,plain,only,boolean,ignored,return,text,plain,only
StringDecoder -> @Deprecated 	public static StringDecoder textPlainOnly(boolean ignored);1530174524;Create a {@code StringDecoder} for {@code "text/plain"}._@param ignored ignored_@deprecated as of Spring 5.0.4, in favor of {@link #textPlainOnly()} or_{@link #textPlainOnly(List, boolean)}.;@Deprecated_	public static StringDecoder textPlainOnly(boolean ignored) {_		return textPlainOnly()__	};create,a,code,string,decoder,for,code,text,plain,param,ignored,ignored,deprecated,as,of,spring,5,0,4,in,favor,of,link,text,plain,only,or,link,text,plain,only,list,boolean;deprecated,public,static,string,decoder,text,plain,only,boolean,ignored,return,text,plain,only
StringDecoder -> @Deprecated 	public static StringDecoder textPlainOnly(boolean ignored);1530306952;Create a {@code StringDecoder} for {@code "text/plain"}._@param ignored ignored_@deprecated as of Spring 5.0.4, in favor of {@link #textPlainOnly()} or_{@link #textPlainOnly(List, boolean)}.;@Deprecated_	public static StringDecoder textPlainOnly(boolean ignored) {_		return textPlainOnly()__	};create,a,code,string,decoder,for,code,text,plain,param,ignored,ignored,deprecated,as,of,spring,5,0,4,in,favor,of,link,text,plain,only,or,link,text,plain,only,list,boolean;deprecated,public,static,string,decoder,text,plain,only,boolean,ignored,return,text,plain,only
StringDecoder -> @Deprecated 	public static StringDecoder textPlainOnly(boolean ignored);1530793695;Create a {@code StringDecoder} for {@code "text/plain"}._@param ignored ignored_@deprecated as of Spring 5.0.4, in favor of {@link #textPlainOnly()} or_{@link #textPlainOnly(List, boolean)}.;@Deprecated_	public static StringDecoder textPlainOnly(boolean ignored) {_		return textPlainOnly()__	};create,a,code,string,decoder,for,code,text,plain,param,ignored,ignored,deprecated,as,of,spring,5,0,4,in,favor,of,link,text,plain,only,or,link,text,plain,only,list,boolean;deprecated,public,static,string,decoder,text,plain,only,boolean,ignored,return,text,plain,only
StringDecoder -> @Deprecated 	public static StringDecoder textPlainOnly(boolean ignored);1536942003;Create a {@code StringDecoder} for {@code "text/plain"}._@param ignored ignored_@deprecated as of Spring 5.0.4, in favor of {@link #textPlainOnly()} or_{@link #textPlainOnly(List, boolean)}.;@Deprecated_	public static StringDecoder textPlainOnly(boolean ignored) {_		return textPlainOnly()__	};create,a,code,string,decoder,for,code,text,plain,param,ignored,ignored,deprecated,as,of,spring,5,0,4,in,favor,of,link,text,plain,only,or,link,text,plain,only,list,boolean;deprecated,public,static,string,decoder,text,plain,only,boolean,ignored,return,text,plain,only
StringDecoder -> @Deprecated 	public static StringDecoder textPlainOnly(boolean ignored);1536962806;Create a {@code StringDecoder} for {@code "text/plain"}._@param ignored ignored_@deprecated as of Spring 5.0.4, in favor of {@link #textPlainOnly()} or_{@link #textPlainOnly(List, boolean)}.;@Deprecated_	public static StringDecoder textPlainOnly(boolean ignored) {_		return textPlainOnly()__	};create,a,code,string,decoder,for,code,text,plain,param,ignored,ignored,deprecated,as,of,spring,5,0,4,in,favor,of,link,text,plain,only,or,link,text,plain,only,list,boolean;deprecated,public,static,string,decoder,text,plain,only,boolean,ignored,return,text,plain,only
StringDecoder -> @Deprecated 	public static StringDecoder textPlainOnly(boolean ignored);1540216832;Create a {@code StringDecoder} for {@code "text/plain"}._@param ignored ignored_@deprecated as of Spring 5.0.4, in favor of {@link #textPlainOnly()} or_{@link #textPlainOnly(List, boolean)}.;@Deprecated_	public static StringDecoder textPlainOnly(boolean ignored) {_		return textPlainOnly()__	};create,a,code,string,decoder,for,code,text,plain,param,ignored,ignored,deprecated,as,of,spring,5,0,4,in,favor,of,link,text,plain,only,or,link,text,plain,only,list,boolean;deprecated,public,static,string,decoder,text,plain,only,boolean,ignored,return,text,plain,only
StringDecoder -> @Deprecated 	public static StringDecoder textPlainOnly(boolean ignored);1540574693;Create a {@code StringDecoder} for {@code "text/plain"}._@param ignored ignored_@deprecated as of Spring 5.0.4, in favor of {@link #textPlainOnly()} or_{@link #textPlainOnly(List, boolean)}.;@Deprecated_	public static StringDecoder textPlainOnly(boolean ignored) {_		return textPlainOnly()__	};create,a,code,string,decoder,for,code,text,plain,param,ignored,ignored,deprecated,as,of,spring,5,0,4,in,favor,of,link,text,plain,only,or,link,text,plain,only,list,boolean;deprecated,public,static,string,decoder,text,plain,only,boolean,ignored,return,text,plain,only
StringDecoder -> @Deprecated 	public static StringDecoder textPlainOnly(boolean ignored);1542050977;Create a {@code StringDecoder} for {@code "text/plain"}._@param ignored ignored_@deprecated as of Spring 5.0.4, in favor of {@link #textPlainOnly()} or_{@link #textPlainOnly(List, boolean)}.;@Deprecated_	public static StringDecoder textPlainOnly(boolean ignored) {_		return textPlainOnly()__	};create,a,code,string,decoder,for,code,text,plain,param,ignored,ignored,deprecated,as,of,spring,5,0,4,in,favor,of,link,text,plain,only,or,link,text,plain,only,list,boolean;deprecated,public,static,string,decoder,text,plain,only,boolean,ignored,return,text,plain,only
StringDecoder -> @Deprecated 	public static StringDecoder textPlainOnly(boolean ignored);1542112693;Create a {@code StringDecoder} for {@code "text/plain"}._@param ignored ignored_@deprecated as of Spring 5.0.4, in favor of {@link #textPlainOnly()} or_{@link #textPlainOnly(List, boolean)}.;@Deprecated_	public static StringDecoder textPlainOnly(boolean ignored) {_		return textPlainOnly()__	};create,a,code,string,decoder,for,code,text,plain,param,ignored,ignored,deprecated,as,of,spring,5,0,4,in,favor,of,link,text,plain,only,or,link,text,plain,only,list,boolean;deprecated,public,static,string,decoder,text,plain,only,boolean,ignored,return,text,plain,only
StringDecoder -> @Deprecated 	public static StringDecoder textPlainOnly(boolean ignored);1543877580;Create a {@code StringDecoder} for {@code "text/plain"}._@param ignored ignored_@deprecated as of Spring 5.0.4, in favor of {@link #textPlainOnly()} or_{@link #textPlainOnly(List, boolean)};@Deprecated_	public static StringDecoder textPlainOnly(boolean ignored) {_		return textPlainOnly()__	};create,a,code,string,decoder,for,code,text,plain,param,ignored,ignored,deprecated,as,of,spring,5,0,4,in,favor,of,link,text,plain,only,or,link,text,plain,only,list,boolean;deprecated,public,static,string,decoder,text,plain,only,boolean,ignored,return,text,plain,only
StringDecoder -> private static int indexOf(DataBuffer dataBuffer, byte[] delimiter);1517583561;Finds the given delimiter in the given data buffer. Return the index of the delimiter, or_-1 if not found.;private static int indexOf(DataBuffer dataBuffer, byte[] delimiter) {_		for (int i = dataBuffer.readPosition()_ i < dataBuffer.writePosition()_ i++) {_			int dataBufferPos = i__			int delimiterPos = 0__			while (delimiterPos < delimiter.length) {_				if (dataBuffer.getByte(dataBufferPos) != delimiter[delimiterPos]) {_					break__				}_				else {_					dataBufferPos++__					if (dataBufferPos == dataBuffer.writePosition() &&_							delimiterPos != delimiter.length - 1) {_						return -1__					}_				}_				delimiterPos++__			}__			if (delimiterPos == delimiter.length) {_				return i - dataBuffer.readPosition()__			}_		}_		return -1__	};finds,the,given,delimiter,in,the,given,data,buffer,return,the,index,of,the,delimiter,or,1,if,not,found;private,static,int,index,of,data,buffer,data,buffer,byte,delimiter,for,int,i,data,buffer,read,position,i,data,buffer,write,position,i,int,data,buffer,pos,i,int,delimiter,pos,0,while,delimiter,pos,delimiter,length,if,data,buffer,get,byte,data,buffer,pos,delimiter,delimiter,pos,break,else,data,buffer,pos,if,data,buffer,pos,data,buffer,write,position,delimiter,pos,delimiter,length,1,return,1,delimiter,pos,if,delimiter,pos,delimiter,length,return,i,data,buffer,read,position,return,1
StringDecoder -> private static int indexOf(DataBuffer dataBuffer, byte[] delimiter);1518167526;Finds the given delimiter in the given data buffer. Return the index of the delimiter, or_-1 if not found.;private static int indexOf(DataBuffer dataBuffer, byte[] delimiter) {_		for (int i = dataBuffer.readPosition()_ i < dataBuffer.writePosition()_ i++) {_			int dataBufferPos = i__			int delimiterPos = 0__			while (delimiterPos < delimiter.length) {_				if (dataBuffer.getByte(dataBufferPos) != delimiter[delimiterPos]) {_					break__				}_				else {_					dataBufferPos++__					if (dataBufferPos == dataBuffer.writePosition() &&_							delimiterPos != delimiter.length - 1) {_						return -1__					}_				}_				delimiterPos++__			}__			if (delimiterPos == delimiter.length) {_				return i - dataBuffer.readPosition()__			}_		}_		return -1__	};finds,the,given,delimiter,in,the,given,data,buffer,return,the,index,of,the,delimiter,or,1,if,not,found;private,static,int,index,of,data,buffer,data,buffer,byte,delimiter,for,int,i,data,buffer,read,position,i,data,buffer,write,position,i,int,data,buffer,pos,i,int,delimiter,pos,0,while,delimiter,pos,delimiter,length,if,data,buffer,get,byte,data,buffer,pos,delimiter,delimiter,pos,break,else,data,buffer,pos,if,data,buffer,pos,data,buffer,write,position,delimiter,pos,delimiter,length,1,return,1,delimiter,pos,if,delimiter,pos,delimiter,length,return,i,data,buffer,read,position,return,1
StringDecoder -> private static int indexOf(DataBuffer dataBuffer, byte[] delimiter);1529721864;Finds the given delimiter in the given data buffer. Return the index of the delimiter, or_-1 if not found.;private static int indexOf(DataBuffer dataBuffer, byte[] delimiter) {_		for (int i = dataBuffer.readPosition()_ i < dataBuffer.writePosition()_ i++) {_			int dataBufferPos = i__			int delimiterPos = 0__			while (delimiterPos < delimiter.length) {_				if (dataBuffer.getByte(dataBufferPos) != delimiter[delimiterPos]) {_					break__				}_				else {_					dataBufferPos++__					if (dataBufferPos == dataBuffer.writePosition() &&_							delimiterPos != delimiter.length - 1) {_						return -1__					}_				}_				delimiterPos++__			}__			if (delimiterPos == delimiter.length) {_				return i - dataBuffer.readPosition()__			}_		}_		return -1__	};finds,the,given,delimiter,in,the,given,data,buffer,return,the,index,of,the,delimiter,or,1,if,not,found;private,static,int,index,of,data,buffer,data,buffer,byte,delimiter,for,int,i,data,buffer,read,position,i,data,buffer,write,position,i,int,data,buffer,pos,i,int,delimiter,pos,0,while,delimiter,pos,delimiter,length,if,data,buffer,get,byte,data,buffer,pos,delimiter,delimiter,pos,break,else,data,buffer,pos,if,data,buffer,pos,data,buffer,write,position,delimiter,pos,delimiter,length,1,return,1,delimiter,pos,if,delimiter,pos,delimiter,length,return,i,data,buffer,read,position,return,1
StringDecoder -> private static int indexOf(DataBuffer dataBuffer, byte[] delimiter);1530174524;Finds the given delimiter in the given data buffer. Return the index of the delimiter, or_-1 if not found.;private static int indexOf(DataBuffer dataBuffer, byte[] delimiter) {_		for (int i = dataBuffer.readPosition()_ i < dataBuffer.writePosition()_ i++) {_			int dataBufferPos = i__			int delimiterPos = 0__			while (delimiterPos < delimiter.length) {_				if (dataBuffer.getByte(dataBufferPos) != delimiter[delimiterPos]) {_					break__				}_				else {_					dataBufferPos++__					if (dataBufferPos == dataBuffer.writePosition() &&_							delimiterPos != delimiter.length - 1) {_						return -1__					}_				}_				delimiterPos++__			}__			if (delimiterPos == delimiter.length) {_				return i - dataBuffer.readPosition()__			}_		}_		return -1__	};finds,the,given,delimiter,in,the,given,data,buffer,return,the,index,of,the,delimiter,or,1,if,not,found;private,static,int,index,of,data,buffer,data,buffer,byte,delimiter,for,int,i,data,buffer,read,position,i,data,buffer,write,position,i,int,data,buffer,pos,i,int,delimiter,pos,0,while,delimiter,pos,delimiter,length,if,data,buffer,get,byte,data,buffer,pos,delimiter,delimiter,pos,break,else,data,buffer,pos,if,data,buffer,pos,data,buffer,write,position,delimiter,pos,delimiter,length,1,return,1,delimiter,pos,if,delimiter,pos,delimiter,length,return,i,data,buffer,read,position,return,1
StringDecoder -> private static int indexOf(DataBuffer dataBuffer, byte[] delimiter);1530306952;Finds the given delimiter in the given data buffer. Return the index of the delimiter, or_-1 if not found.;private static int indexOf(DataBuffer dataBuffer, byte[] delimiter) {_		for (int i = dataBuffer.readPosition()_ i < dataBuffer.writePosition()_ i++) {_			int dataBufferPos = i__			int delimiterPos = 0__			while (delimiterPos < delimiter.length) {_				if (dataBuffer.getByte(dataBufferPos) != delimiter[delimiterPos]) {_					break__				}_				else {_					dataBufferPos++__					if (dataBufferPos == dataBuffer.writePosition() &&_							delimiterPos != delimiter.length - 1) {_						return -1__					}_				}_				delimiterPos++__			}__			if (delimiterPos == delimiter.length) {_				return i - dataBuffer.readPosition()__			}_		}_		return -1__	};finds,the,given,delimiter,in,the,given,data,buffer,return,the,index,of,the,delimiter,or,1,if,not,found;private,static,int,index,of,data,buffer,data,buffer,byte,delimiter,for,int,i,data,buffer,read,position,i,data,buffer,write,position,i,int,data,buffer,pos,i,int,delimiter,pos,0,while,delimiter,pos,delimiter,length,if,data,buffer,get,byte,data,buffer,pos,delimiter,delimiter,pos,break,else,data,buffer,pos,if,data,buffer,pos,data,buffer,write,position,delimiter,pos,delimiter,length,1,return,1,delimiter,pos,if,delimiter,pos,delimiter,length,return,i,data,buffer,read,position,return,1
StringDecoder -> private static int indexOf(DataBuffer dataBuffer, byte[] delimiter);1530793695;Finds the given delimiter in the given data buffer. Return the index of the delimiter, or_-1 if not found.;private static int indexOf(DataBuffer dataBuffer, byte[] delimiter) {_		for (int i = dataBuffer.readPosition()_ i < dataBuffer.writePosition()_ i++) {_			int dataBufferPos = i__			int delimiterPos = 0__			while (delimiterPos < delimiter.length) {_				if (dataBuffer.getByte(dataBufferPos) != delimiter[delimiterPos]) {_					break__				}_				else {_					dataBufferPos++__					if (dataBufferPos == dataBuffer.writePosition() &&_							delimiterPos != delimiter.length - 1) {_						return -1__					}_				}_				delimiterPos++__			}__			if (delimiterPos == delimiter.length) {_				return i - dataBuffer.readPosition()__			}_		}_		return -1__	};finds,the,given,delimiter,in,the,given,data,buffer,return,the,index,of,the,delimiter,or,1,if,not,found;private,static,int,index,of,data,buffer,data,buffer,byte,delimiter,for,int,i,data,buffer,read,position,i,data,buffer,write,position,i,int,data,buffer,pos,i,int,delimiter,pos,0,while,delimiter,pos,delimiter,length,if,data,buffer,get,byte,data,buffer,pos,delimiter,delimiter,pos,break,else,data,buffer,pos,if,data,buffer,pos,data,buffer,write,position,delimiter,pos,delimiter,length,1,return,1,delimiter,pos,if,delimiter,pos,delimiter,length,return,i,data,buffer,read,position,return,1
StringDecoder -> private static int indexOf(DataBuffer dataBuffer, byte[] delimiter);1536942003;Finds the given delimiter in the given data buffer. Return the index of the delimiter, or_-1 if not found.;private static int indexOf(DataBuffer dataBuffer, byte[] delimiter) {_		for (int i = dataBuffer.readPosition()_ i < dataBuffer.writePosition()_ i++) {_			int dataBufferPos = i__			int delimiterPos = 0__			while (delimiterPos < delimiter.length) {_				if (dataBuffer.getByte(dataBufferPos) != delimiter[delimiterPos]) {_					break__				}_				else {_					dataBufferPos++__					if (dataBufferPos == dataBuffer.writePosition() &&_							delimiterPos != delimiter.length - 1) {_						return -1__					}_				}_				delimiterPos++__			}__			if (delimiterPos == delimiter.length) {_				return i - dataBuffer.readPosition()__			}_		}_		return -1__	};finds,the,given,delimiter,in,the,given,data,buffer,return,the,index,of,the,delimiter,or,1,if,not,found;private,static,int,index,of,data,buffer,data,buffer,byte,delimiter,for,int,i,data,buffer,read,position,i,data,buffer,write,position,i,int,data,buffer,pos,i,int,delimiter,pos,0,while,delimiter,pos,delimiter,length,if,data,buffer,get,byte,data,buffer,pos,delimiter,delimiter,pos,break,else,data,buffer,pos,if,data,buffer,pos,data,buffer,write,position,delimiter,pos,delimiter,length,1,return,1,delimiter,pos,if,delimiter,pos,delimiter,length,return,i,data,buffer,read,position,return,1
StringDecoder -> private static int indexOf(DataBuffer dataBuffer, byte[] delimiter);1536962806;Finds the given delimiter in the given data buffer. Return the index of the delimiter, or_-1 if not found.;private static int indexOf(DataBuffer dataBuffer, byte[] delimiter) {_		for (int i = dataBuffer.readPosition()_ i < dataBuffer.writePosition()_ i++) {_			int dataBufferPos = i__			int delimiterPos = 0__			while (delimiterPos < delimiter.length) {_				if (dataBuffer.getByte(dataBufferPos) != delimiter[delimiterPos]) {_					break__				}_				else {_					dataBufferPos++__					if (dataBufferPos == dataBuffer.writePosition() &&_							delimiterPos != delimiter.length - 1) {_						return -1__					}_				}_				delimiterPos++__			}__			if (delimiterPos == delimiter.length) {_				return i - dataBuffer.readPosition()__			}_		}_		return -1__	};finds,the,given,delimiter,in,the,given,data,buffer,return,the,index,of,the,delimiter,or,1,if,not,found;private,static,int,index,of,data,buffer,data,buffer,byte,delimiter,for,int,i,data,buffer,read,position,i,data,buffer,write,position,i,int,data,buffer,pos,i,int,delimiter,pos,0,while,delimiter,pos,delimiter,length,if,data,buffer,get,byte,data,buffer,pos,delimiter,delimiter,pos,break,else,data,buffer,pos,if,data,buffer,pos,data,buffer,write,position,delimiter,pos,delimiter,length,1,return,1,delimiter,pos,if,delimiter,pos,delimiter,length,return,i,data,buffer,read,position,return,1
StringDecoder -> private static int indexOf(DataBuffer dataBuffer, byte[] delimiter);1540216832;Finds the given delimiter in the given data buffer. Return the index of the delimiter, or_-1 if not found.;private static int indexOf(DataBuffer dataBuffer, byte[] delimiter) {_		for (int i = dataBuffer.readPosition()_ i < dataBuffer.writePosition()_ i++) {_			int dataBufferPos = i__			int delimiterPos = 0__			while (delimiterPos < delimiter.length) {_				if (dataBuffer.getByte(dataBufferPos) != delimiter[delimiterPos]) {_					break__				}_				else {_					dataBufferPos++__					if (dataBufferPos == dataBuffer.writePosition() &&_							delimiterPos != delimiter.length - 1) {_						return -1__					}_				}_				delimiterPos++__			}__			if (delimiterPos == delimiter.length) {_				return i - dataBuffer.readPosition()__			}_		}_		return -1__	};finds,the,given,delimiter,in,the,given,data,buffer,return,the,index,of,the,delimiter,or,1,if,not,found;private,static,int,index,of,data,buffer,data,buffer,byte,delimiter,for,int,i,data,buffer,read,position,i,data,buffer,write,position,i,int,data,buffer,pos,i,int,delimiter,pos,0,while,delimiter,pos,delimiter,length,if,data,buffer,get,byte,data,buffer,pos,delimiter,delimiter,pos,break,else,data,buffer,pos,if,data,buffer,pos,data,buffer,write,position,delimiter,pos,delimiter,length,1,return,1,delimiter,pos,if,delimiter,pos,delimiter,length,return,i,data,buffer,read,position,return,1
StringDecoder -> private static int indexOf(DataBuffer dataBuffer, byte[] delimiter);1540574693;Find the given delimiter in the given data buffer._@return the index of the delimiter, or -1 if not found.;private static int indexOf(DataBuffer dataBuffer, byte[] delimiter) {_		for (int i = dataBuffer.readPosition()_ i < dataBuffer.writePosition()_ i++) {_			int dataBufferPos = i__			int delimiterPos = 0__			while (delimiterPos < delimiter.length) {_				if (dataBuffer.getByte(dataBufferPos) != delimiter[delimiterPos]) {_					break__				}_				else {_					dataBufferPos++__					if (dataBufferPos == dataBuffer.writePosition() &&_							delimiterPos != delimiter.length - 1) {_						return -1__					}_				}_				delimiterPos++__			}_			if (delimiterPos == delimiter.length) {_				return i - dataBuffer.readPosition()__			}_		}_		return -1__	};find,the,given,delimiter,in,the,given,data,buffer,return,the,index,of,the,delimiter,or,1,if,not,found;private,static,int,index,of,data,buffer,data,buffer,byte,delimiter,for,int,i,data,buffer,read,position,i,data,buffer,write,position,i,int,data,buffer,pos,i,int,delimiter,pos,0,while,delimiter,pos,delimiter,length,if,data,buffer,get,byte,data,buffer,pos,delimiter,delimiter,pos,break,else,data,buffer,pos,if,data,buffer,pos,data,buffer,write,position,delimiter,pos,delimiter,length,1,return,1,delimiter,pos,if,delimiter,pos,delimiter,length,return,i,data,buffer,read,position,return,1
StringDecoder -> private static int indexOf(DataBuffer dataBuffer, byte[] delimiter);1542050977;Find the given delimiter in the given data buffer._@return the index of the delimiter, or -1 if not found.;private static int indexOf(DataBuffer dataBuffer, byte[] delimiter) {_		for (int i = dataBuffer.readPosition()_ i < dataBuffer.writePosition()_ i++) {_			int dataBufferPos = i__			int delimiterPos = 0__			while (delimiterPos < delimiter.length) {_				if (dataBuffer.getByte(dataBufferPos) != delimiter[delimiterPos]) {_					break__				}_				else {_					dataBufferPos++__					if (dataBufferPos == dataBuffer.writePosition() &&_							delimiterPos != delimiter.length - 1) {_						return -1__					}_				}_				delimiterPos++__			}_			if (delimiterPos == delimiter.length) {_				return i - dataBuffer.readPosition()__			}_		}_		return -1__	};find,the,given,delimiter,in,the,given,data,buffer,return,the,index,of,the,delimiter,or,1,if,not,found;private,static,int,index,of,data,buffer,data,buffer,byte,delimiter,for,int,i,data,buffer,read,position,i,data,buffer,write,position,i,int,data,buffer,pos,i,int,delimiter,pos,0,while,delimiter,pos,delimiter,length,if,data,buffer,get,byte,data,buffer,pos,delimiter,delimiter,pos,break,else,data,buffer,pos,if,data,buffer,pos,data,buffer,write,position,delimiter,pos,delimiter,length,1,return,1,delimiter,pos,if,delimiter,pos,delimiter,length,return,i,data,buffer,read,position,return,1
StringDecoder -> private static int indexOf(DataBuffer dataBuffer, byte[] delimiter);1542112693;Find the given delimiter in the given data buffer._@return the index of the delimiter, or -1 if not found.;private static int indexOf(DataBuffer dataBuffer, byte[] delimiter) {_		for (int i = dataBuffer.readPosition()_ i < dataBuffer.writePosition()_ i++) {_			int dataBufferPos = i__			int delimiterPos = 0__			while (delimiterPos < delimiter.length) {_				if (dataBuffer.getByte(dataBufferPos) != delimiter[delimiterPos]) {_					break__				}_				else {_					dataBufferPos++__					if (dataBufferPos == dataBuffer.writePosition() &&_							delimiterPos != delimiter.length - 1) {_						return -1__					}_				}_				delimiterPos++__			}_			if (delimiterPos == delimiter.length) {_				return i - dataBuffer.readPosition()__			}_		}_		return -1__	};find,the,given,delimiter,in,the,given,data,buffer,return,the,index,of,the,delimiter,or,1,if,not,found;private,static,int,index,of,data,buffer,data,buffer,byte,delimiter,for,int,i,data,buffer,read,position,i,data,buffer,write,position,i,int,data,buffer,pos,i,int,delimiter,pos,0,while,delimiter,pos,delimiter,length,if,data,buffer,get,byte,data,buffer,pos,delimiter,delimiter,pos,break,else,data,buffer,pos,if,data,buffer,pos,data,buffer,write,position,delimiter,pos,delimiter,length,1,return,1,delimiter,pos,if,delimiter,pos,delimiter,length,return,i,data,buffer,read,position,return,1
StringDecoder -> private static int indexOf(DataBuffer dataBuffer, byte[] delimiter);1543877580;Find the given delimiter in the given data buffer._@return the index of the delimiter, or -1 if not found.;private static int indexOf(DataBuffer dataBuffer, byte[] delimiter) {_		for (int i = dataBuffer.readPosition()_ i < dataBuffer.writePosition()_ i++) {_			int dataBufferPos = i__			int delimiterPos = 0__			while (delimiterPos < delimiter.length) {_				if (dataBuffer.getByte(dataBufferPos) != delimiter[delimiterPos]) {_					break__				}_				else {_					dataBufferPos++__					if (dataBufferPos == dataBuffer.writePosition() &&_							delimiterPos != delimiter.length - 1) {_						return -1__					}_				}_				delimiterPos++__			}_			if (delimiterPos == delimiter.length) {_				return i - dataBuffer.readPosition()__			}_		}_		return -1__	};find,the,given,delimiter,in,the,given,data,buffer,return,the,index,of,the,delimiter,or,1,if,not,found;private,static,int,index,of,data,buffer,data,buffer,byte,delimiter,for,int,i,data,buffer,read,position,i,data,buffer,write,position,i,int,data,buffer,pos,i,int,delimiter,pos,0,while,delimiter,pos,delimiter,length,if,data,buffer,get,byte,data,buffer,pos,delimiter,delimiter,pos,break,else,data,buffer,pos,if,data,buffer,pos,data,buffer,write,position,delimiter,pos,delimiter,length,1,return,1,delimiter,pos,if,delimiter,pos,delimiter,length,return,i,data,buffer,read,position,return,1
StringDecoder -> public static StringDecoder allMimeTypes();1517583561;Create a {@code StringDecoder} that supports all MIME types.;public static StringDecoder allMimeTypes() {_		return allMimeTypes(DEFAULT_DELIMITERS, true)__	};create,a,code,string,decoder,that,supports,all,mime,types;public,static,string,decoder,all,mime,types,return,all,mime,types,true
StringDecoder -> public static StringDecoder allMimeTypes();1518167526;Create a {@code StringDecoder} that supports all MIME types.;public static StringDecoder allMimeTypes() {_		return allMimeTypes(DEFAULT_DELIMITERS, true)__	};create,a,code,string,decoder,that,supports,all,mime,types;public,static,string,decoder,all,mime,types,return,all,mime,types,true
StringDecoder -> public static StringDecoder allMimeTypes();1529721864;Create a {@code StringDecoder} that supports all MIME types.;public static StringDecoder allMimeTypes() {_		return allMimeTypes(DEFAULT_DELIMITERS, true)__	};create,a,code,string,decoder,that,supports,all,mime,types;public,static,string,decoder,all,mime,types,return,all,mime,types,true
StringDecoder -> public static StringDecoder allMimeTypes();1530174524;Create a {@code StringDecoder} that supports all MIME types.;public static StringDecoder allMimeTypes() {_		return allMimeTypes(DEFAULT_DELIMITERS, true)__	};create,a,code,string,decoder,that,supports,all,mime,types;public,static,string,decoder,all,mime,types,return,all,mime,types,true
StringDecoder -> public static StringDecoder allMimeTypes();1530306952;Create a {@code StringDecoder} that supports all MIME types.;public static StringDecoder allMimeTypes() {_		return allMimeTypes(DEFAULT_DELIMITERS, true)__	};create,a,code,string,decoder,that,supports,all,mime,types;public,static,string,decoder,all,mime,types,return,all,mime,types,true
StringDecoder -> public static StringDecoder allMimeTypes();1530793695;Create a {@code StringDecoder} that supports all MIME types.;public static StringDecoder allMimeTypes() {_		return allMimeTypes(DEFAULT_DELIMITERS, true)__	};create,a,code,string,decoder,that,supports,all,mime,types;public,static,string,decoder,all,mime,types,return,all,mime,types,true
StringDecoder -> public static StringDecoder allMimeTypes();1536942003;Create a {@code StringDecoder} that supports all MIME types.;public static StringDecoder allMimeTypes() {_		return allMimeTypes(DEFAULT_DELIMITERS, true)__	};create,a,code,string,decoder,that,supports,all,mime,types;public,static,string,decoder,all,mime,types,return,all,mime,types,true
StringDecoder -> public static StringDecoder allMimeTypes();1536962806;Create a {@code StringDecoder} that supports all MIME types.;public static StringDecoder allMimeTypes() {_		return allMimeTypes(DEFAULT_DELIMITERS, true)__	};create,a,code,string,decoder,that,supports,all,mime,types;public,static,string,decoder,all,mime,types,return,all,mime,types,true
StringDecoder -> public static StringDecoder allMimeTypes();1540216832;Create a {@code StringDecoder} that supports all MIME types.;public static StringDecoder allMimeTypes() {_		return allMimeTypes(DEFAULT_DELIMITERS, true)__	};create,a,code,string,decoder,that,supports,all,mime,types;public,static,string,decoder,all,mime,types,return,all,mime,types,true
StringDecoder -> public static StringDecoder allMimeTypes();1540574693;Create a {@code StringDecoder} that supports all MIME types.;public static StringDecoder allMimeTypes() {_		return allMimeTypes(null, true)__	};create,a,code,string,decoder,that,supports,all,mime,types;public,static,string,decoder,all,mime,types,return,all,mime,types,null,true
StringDecoder -> public static StringDecoder allMimeTypes();1542050977;Create a {@code StringDecoder} that supports all MIME types.;public static StringDecoder allMimeTypes() {_		return allMimeTypes(null, true)__	};create,a,code,string,decoder,that,supports,all,mime,types;public,static,string,decoder,all,mime,types,return,all,mime,types,null,true
StringDecoder -> public static StringDecoder allMimeTypes();1542112693;Create a {@code StringDecoder} that supports all MIME types.;public static StringDecoder allMimeTypes() {_		return allMimeTypes(DEFAULT_DELIMITERS, true)__	};create,a,code,string,decoder,that,supports,all,mime,types;public,static,string,decoder,all,mime,types,return,all,mime,types,true
StringDecoder -> public static StringDecoder allMimeTypes();1543877580;Create a {@code StringDecoder} that supports all MIME types.;public static StringDecoder allMimeTypes() {_		return allMimeTypes(DEFAULT_DELIMITERS, true)__	};create,a,code,string,decoder,that,supports,all,mime,types;public,static,string,decoder,all,mime,types,return,all,mime,types,true
StringDecoder -> private StringDecoder(boolean splitOnNewline, MimeType... mimeTypes);1490302386;Create a {@code StringDecoder} that decodes a bytes stream to a String stream_@param splitOnNewline whether this decoder should split the received data buffers_along newline characters;private StringDecoder(boolean splitOnNewline, MimeType... mimeTypes) {_		super(mimeTypes)__		this.splitOnNewline = splitOnNewline__	};create,a,code,string,decoder,that,decodes,a,bytes,stream,to,a,string,stream,param,split,on,newline,whether,this,decoder,should,split,the,received,data,buffers,along,newline,characters;private,string,decoder,boolean,split,on,newline,mime,type,mime,types,super,mime,types,this,split,on,newline,split,on,newline
StringDecoder -> private StringDecoder(boolean splitOnNewline, MimeType... mimeTypes);1496242568;Create a {@code StringDecoder} that decodes a bytes stream to a String stream_@param splitOnNewline whether this decoder should split the received data buffers_along newline characters;private StringDecoder(boolean splitOnNewline, MimeType... mimeTypes) {_		super(mimeTypes)__		this.splitOnNewline = splitOnNewline__	};create,a,code,string,decoder,that,decodes,a,bytes,stream,to,a,string,stream,param,split,on,newline,whether,this,decoder,should,split,the,received,data,buffers,along,newline,characters;private,string,decoder,boolean,split,on,newline,mime,type,mime,types,super,mime,types,this,split,on,newline,split,on,newline
StringDecoder -> private StringDecoder(boolean splitOnNewline, MimeType... mimeTypes);1496259743;Create a {@code StringDecoder} that decodes a bytes stream to a String stream_@param splitOnNewline whether this decoder should split the received data buffers_along newline characters;private StringDecoder(boolean splitOnNewline, MimeType... mimeTypes) {_		super(mimeTypes)__		this.splitOnNewline = splitOnNewline__	};create,a,code,string,decoder,that,decodes,a,bytes,stream,to,a,string,stream,param,split,on,newline,whether,this,decoder,should,split,the,received,data,buffers,along,newline,characters;private,string,decoder,boolean,split,on,newline,mime,type,mime,types,super,mime,types,this,split,on,newline,split,on,newline
StringDecoder -> private StringDecoder(boolean splitOnNewline, MimeType... mimeTypes);1496837955;Create a {@code StringDecoder} that decodes a bytes stream to a String stream_@param splitOnNewline whether this decoder should split the received data buffers_along newline characters;private StringDecoder(boolean splitOnNewline, MimeType... mimeTypes) {_		super(mimeTypes)__		this.splitOnNewline = splitOnNewline__	};create,a,code,string,decoder,that,decodes,a,bytes,stream,to,a,string,stream,param,split,on,newline,whether,this,decoder,should,split,the,received,data,buffers,along,newline,characters;private,string,decoder,boolean,split,on,newline,mime,type,mime,types,super,mime,types,this,split,on,newline,split,on,newline
StringDecoder -> private StringDecoder(boolean splitOnNewline, MimeType... mimeTypes);1513288774;Create a {@code StringDecoder} that decodes a bytes stream to a String stream_@param splitOnNewline whether this decoder should split the received data buffers_along newline characters;private StringDecoder(boolean splitOnNewline, MimeType... mimeTypes) {_		super(mimeTypes)__		this.splitOnNewline = splitOnNewline__	};create,a,code,string,decoder,that,decodes,a,bytes,stream,to,a,string,stream,param,split,on,newline,whether,this,decoder,should,split,the,received,data,buffers,along,newline,characters;private,string,decoder,boolean,split,on,newline,mime,type,mime,types,super,mime,types,this,split,on,newline,split,on,newline
StringDecoder -> private static DataBuffer joinUntilEndFrame(List<DataBuffer> dataBuffers);1540574693;Joins the given list of buffers into a single buffer, also removing_the (inserted) {@link #END_FRAME}.;private static DataBuffer joinUntilEndFrame(List<DataBuffer> dataBuffers) {_		if (!dataBuffers.isEmpty()) {_			int lastIdx = dataBuffers.size() - 1__			if (isEndFrame(dataBuffers.get(lastIdx))) {_				dataBuffers.remove(lastIdx)__			}_		}_		return dataBuffers.get(0).factory().join(dataBuffers)__	};joins,the,given,list,of,buffers,into,a,single,buffer,also,removing,the,inserted,link;private,static,data,buffer,join,until,end,frame,list,data,buffer,data,buffers,if,data,buffers,is,empty,int,last,idx,data,buffers,size,1,if,is,end,frame,data,buffers,get,last,idx,data,buffers,remove,last,idx,return,data,buffers,get,0,factory,join,data,buffers
StringDecoder -> private static DataBuffer joinUntilEndFrame(List<DataBuffer> dataBuffers);1542050977;Joins the given list of buffers into a single buffer, also removing_the (inserted) {@link #END_FRAME}.;private static DataBuffer joinUntilEndFrame(List<DataBuffer> dataBuffers) {_		if (!dataBuffers.isEmpty()) {_			int lastIdx = dataBuffers.size() - 1__			if (isEndFrame(dataBuffers.get(lastIdx))) {_				dataBuffers.remove(lastIdx)__			}_		}_		return dataBuffers.get(0).factory().join(dataBuffers)__	};joins,the,given,list,of,buffers,into,a,single,buffer,also,removing,the,inserted,link;private,static,data,buffer,join,until,end,frame,list,data,buffer,data,buffers,if,data,buffers,is,empty,int,last,idx,data,buffers,size,1,if,is,end,frame,data,buffers,get,last,idx,data,buffers,remove,last,idx,return,data,buffers,get,0,factory,join,data,buffers
StringDecoder -> private static DataBuffer joinUntilEndFrame(List<DataBuffer> dataBuffers);1542112693;Joins the given list of buffers into a single buffer, also removing_the (inserted) {@link #END_FRAME}.;private static DataBuffer joinUntilEndFrame(List<DataBuffer> dataBuffers) {_		if (!dataBuffers.isEmpty()) {_			int lastIdx = dataBuffers.size() - 1__			if (isEndFrame(dataBuffers.get(lastIdx))) {_				dataBuffers.remove(lastIdx)__			}_		}_		return dataBuffers.get(0).factory().join(dataBuffers)__	};joins,the,given,list,of,buffers,into,a,single,buffer,also,removing,the,inserted,link;private,static,data,buffer,join,until,end,frame,list,data,buffer,data,buffers,if,data,buffers,is,empty,int,last,idx,data,buffers,size,1,if,is,end,frame,data,buffers,get,last,idx,data,buffers,remove,last,idx,return,data,buffers,get,0,factory,join,data,buffers
StringDecoder -> private static DataBuffer joinUntilEndFrame(List<DataBuffer> dataBuffers);1543877580;Join the given list of buffers into a single buffer.;private static DataBuffer joinUntilEndFrame(List<DataBuffer> dataBuffers) {_		if (!dataBuffers.isEmpty()) {_			int lastIdx = dataBuffers.size() - 1__			if (isEndFrame(dataBuffers.get(lastIdx))) {_				dataBuffers.remove(lastIdx)__			}_		}_		return dataBuffers.get(0).factory().join(dataBuffers)__	};join,the,given,list,of,buffers,into,a,single,buffer;private,static,data,buffer,join,until,end,frame,list,data,buffer,data,buffers,if,data,buffers,is,empty,int,last,idx,data,buffers,size,1,if,is,end,frame,data,buffers,get,last,idx,data,buffers,remove,last,idx,return,data,buffers,get,0,factory,join,data,buffers
StringDecoder -> public static StringDecoder allMimeTypes(@Nullable List<String> delimiters, boolean stripDelimiter);1540574693;Create a {@code StringDecoder} that supports all MIME types._@param delimiters delimiter strings to use to split the input stream, if_{@code null} by default {@link #DEFAULT_DELIMITERS} is used._@param stripDelimiter whether to remove delimiters from the resulting_input strings.;public static StringDecoder allMimeTypes(@Nullable List<String> delimiters, boolean stripDelimiter) {_		return new StringDecoder(delimiters, stripDelimiter,_				new MimeType("text", "plain", DEFAULT_CHARSET), MimeTypeUtils.ALL)__	};create,a,code,string,decoder,that,supports,all,mime,types,param,delimiters,delimiter,strings,to,use,to,split,the,input,stream,if,code,null,by,default,link,is,used,param,strip,delimiter,whether,to,remove,delimiters,from,the,resulting,input,strings;public,static,string,decoder,all,mime,types,nullable,list,string,delimiters,boolean,strip,delimiter,return,new,string,decoder,delimiters,strip,delimiter,new,mime,type,text,plain,mime,type,utils,all
StringDecoder -> public static StringDecoder allMimeTypes(@Nullable List<String> delimiters, boolean stripDelimiter);1542050977;Create a {@code StringDecoder} that supports all MIME types._@param delimiters delimiter strings to use to split the input stream, if_{@code null} by default {@link #DEFAULT_DELIMITERS} is used._@param stripDelimiter whether to remove delimiters from the resulting_input strings.;public static StringDecoder allMimeTypes(@Nullable List<String> delimiters, boolean stripDelimiter) {_		return new StringDecoder(delimiters, stripDelimiter,_				new MimeType("text", "plain", DEFAULT_CHARSET), MimeTypeUtils.ALL)__	};create,a,code,string,decoder,that,supports,all,mime,types,param,delimiters,delimiter,strings,to,use,to,split,the,input,stream,if,code,null,by,default,link,is,used,param,strip,delimiter,whether,to,remove,delimiters,from,the,resulting,input,strings;public,static,string,decoder,all,mime,types,nullable,list,string,delimiters,boolean,strip,delimiter,return,new,string,decoder,delimiters,strip,delimiter,new,mime,type,text,plain,mime,type,utils,all
StringDecoder -> public StringDecoder();1468513830;Create a {@code StringDecoder} that decodes a bytes stream to a String stream__<p>By default, this decoder will split along new lines.;public StringDecoder() {_		this(true)__	};create,a,code,string,decoder,that,decodes,a,bytes,stream,to,a,string,stream,p,by,default,this,decoder,will,split,along,new,lines;public,string,decoder,this,true
StringDecoder -> public StringDecoder();1468532417;Create a {@code StringDecoder} that decodes a bytes stream to a String stream__<p>By default, this decoder will split along new lines.;public StringDecoder() {_		this(true)__	};create,a,code,string,decoder,that,decodes,a,bytes,stream,to,a,string,stream,p,by,default,this,decoder,will,split,along,new,lines;public,string,decoder,this,true
StringDecoder -> public StringDecoder();1469206066;Create a {@code StringDecoder} that decodes a bytes stream to a String stream__<p>By default, this decoder will split along new lines.;public StringDecoder() {_		this(true)__	};create,a,code,string,decoder,that,decodes,a,bytes,stream,to,a,string,stream,p,by,default,this,decoder,will,split,along,new,lines;public,string,decoder,this,true
StringDecoder -> public StringDecoder();1469540372;Create a {@code StringDecoder} that decodes a bytes stream to a String stream_<p>By default, this decoder will split along new lines.;public StringDecoder() {_		this(true)__	};create,a,code,string,decoder,that,decodes,a,bytes,stream,to,a,string,stream,p,by,default,this,decoder,will,split,along,new,lines;public,string,decoder,this,true
StringDecoder -> public StringDecoder();1473671281;Create a {@code StringDecoder} that decodes a bytes stream to a String stream_<p>By default, this decoder will split along new lines.;public StringDecoder() {_		this(true)__	};create,a,code,string,decoder,that,decodes,a,bytes,stream,to,a,string,stream,p,by,default,this,decoder,will,split,along,new,lines;public,string,decoder,this,true
StringDecoder -> public StringDecoder();1474365351;Create a {@code StringDecoder} that decodes a bytes stream to a String stream_<p>By default, this decoder will split along new lines.;public StringDecoder() {_		this(true)__	};create,a,code,string,decoder,that,decodes,a,bytes,stream,to,a,string,stream,p,by,default,this,decoder,will,split,along,new,lines;public,string,decoder,this,true
StringDecoder -> public static StringDecoder textPlainOnly(List<String> delimiters, boolean stripDelimiter);1517583561;Create a {@code StringDecoder} for {@code "text/plain"}.;public static StringDecoder textPlainOnly(List<String> delimiters, boolean stripDelimiter) {_		return new StringDecoder(delimiters, stripDelimiter,_				new MimeType("text", "plain", DEFAULT_CHARSET))__	};create,a,code,string,decoder,for,code,text,plain;public,static,string,decoder,text,plain,only,list,string,delimiters,boolean,strip,delimiter,return,new,string,decoder,delimiters,strip,delimiter,new,mime,type,text,plain
StringDecoder -> public static StringDecoder textPlainOnly(List<String> delimiters, boolean stripDelimiter);1518167526;Create a {@code StringDecoder} for {@code "text/plain"}.;public static StringDecoder textPlainOnly(List<String> delimiters, boolean stripDelimiter) {_		return new StringDecoder(delimiters, stripDelimiter,_				new MimeType("text", "plain", DEFAULT_CHARSET))__	};create,a,code,string,decoder,for,code,text,plain;public,static,string,decoder,text,plain,only,list,string,delimiters,boolean,strip,delimiter,return,new,string,decoder,delimiters,strip,delimiter,new,mime,type,text,plain
StringDecoder -> public static StringDecoder textPlainOnly(List<String> delimiters, boolean stripDelimiter);1529721864;Create a {@code StringDecoder} for {@code "text/plain"}.;public static StringDecoder textPlainOnly(List<String> delimiters, boolean stripDelimiter) {_		return new StringDecoder(delimiters, stripDelimiter,_				new MimeType("text", "plain", DEFAULT_CHARSET))__	};create,a,code,string,decoder,for,code,text,plain;public,static,string,decoder,text,plain,only,list,string,delimiters,boolean,strip,delimiter,return,new,string,decoder,delimiters,strip,delimiter,new,mime,type,text,plain
StringDecoder -> public static StringDecoder textPlainOnly(List<String> delimiters, boolean stripDelimiter);1530174524;Create a {@code StringDecoder} for {@code "text/plain"}.;public static StringDecoder textPlainOnly(List<String> delimiters, boolean stripDelimiter) {_		return new StringDecoder(delimiters, stripDelimiter,_				new MimeType("text", "plain", DEFAULT_CHARSET))__	};create,a,code,string,decoder,for,code,text,plain;public,static,string,decoder,text,plain,only,list,string,delimiters,boolean,strip,delimiter,return,new,string,decoder,delimiters,strip,delimiter,new,mime,type,text,plain
StringDecoder -> public static StringDecoder textPlainOnly(List<String> delimiters, boolean stripDelimiter);1530306952;Create a {@code StringDecoder} for {@code "text/plain"}.;public static StringDecoder textPlainOnly(List<String> delimiters, boolean stripDelimiter) {_		return new StringDecoder(delimiters, stripDelimiter,_				new MimeType("text", "plain", DEFAULT_CHARSET))__	};create,a,code,string,decoder,for,code,text,plain;public,static,string,decoder,text,plain,only,list,string,delimiters,boolean,strip,delimiter,return,new,string,decoder,delimiters,strip,delimiter,new,mime,type,text,plain
StringDecoder -> public static StringDecoder textPlainOnly(List<String> delimiters, boolean stripDelimiter);1530793695;Create a {@code StringDecoder} for {@code "text/plain"}.;public static StringDecoder textPlainOnly(List<String> delimiters, boolean stripDelimiter) {_		return new StringDecoder(delimiters, stripDelimiter,_				new MimeType("text", "plain", DEFAULT_CHARSET))__	};create,a,code,string,decoder,for,code,text,plain;public,static,string,decoder,text,plain,only,list,string,delimiters,boolean,strip,delimiter,return,new,string,decoder,delimiters,strip,delimiter,new,mime,type,text,plain
StringDecoder -> public static StringDecoder textPlainOnly(List<String> delimiters, boolean stripDelimiter);1536942003;Create a {@code StringDecoder} for {@code "text/plain"}.;public static StringDecoder textPlainOnly(List<String> delimiters, boolean stripDelimiter) {_		return new StringDecoder(delimiters, stripDelimiter,_				new MimeType("text", "plain", DEFAULT_CHARSET))__	};create,a,code,string,decoder,for,code,text,plain;public,static,string,decoder,text,plain,only,list,string,delimiters,boolean,strip,delimiter,return,new,string,decoder,delimiters,strip,delimiter,new,mime,type,text,plain
StringDecoder -> public static StringDecoder textPlainOnly(List<String> delimiters, boolean stripDelimiter);1536962806;Create a {@code StringDecoder} for {@code "text/plain"}.;public static StringDecoder textPlainOnly(List<String> delimiters, boolean stripDelimiter) {_		return new StringDecoder(delimiters, stripDelimiter,_				new MimeType("text", "plain", DEFAULT_CHARSET))__	};create,a,code,string,decoder,for,code,text,plain;public,static,string,decoder,text,plain,only,list,string,delimiters,boolean,strip,delimiter,return,new,string,decoder,delimiters,strip,delimiter,new,mime,type,text,plain
StringDecoder -> public static StringDecoder textPlainOnly(List<String> delimiters, boolean stripDelimiter);1540216832;Create a {@code StringDecoder} for {@code "text/plain"}.;public static StringDecoder textPlainOnly(List<String> delimiters, boolean stripDelimiter) {_		return new StringDecoder(delimiters, stripDelimiter,_				new MimeType("text", "plain", DEFAULT_CHARSET))__	};create,a,code,string,decoder,for,code,text,plain;public,static,string,decoder,text,plain,only,list,string,delimiters,boolean,strip,delimiter,return,new,string,decoder,delimiters,strip,delimiter,new,mime,type,text,plain
StringDecoder -> public static StringDecoder textPlainOnly(List<String> delimiters, boolean stripDelimiter);1542112693;Create a {@code StringDecoder} for {@code "text/plain"}._@param delimiters delimiter strings to use to split the input stream_@param stripDelimiter whether to remove delimiters from the resulting_input strings.;public static StringDecoder textPlainOnly(List<String> delimiters, boolean stripDelimiter) {_		return new StringDecoder(delimiters, stripDelimiter, new MimeType("text", "plain", DEFAULT_CHARSET))__	};create,a,code,string,decoder,for,code,text,plain,param,delimiters,delimiter,strings,to,use,to,split,the,input,stream,param,strip,delimiter,whether,to,remove,delimiters,from,the,resulting,input,strings;public,static,string,decoder,text,plain,only,list,string,delimiters,boolean,strip,delimiter,return,new,string,decoder,delimiters,strip,delimiter,new,mime,type,text,plain
StringDecoder -> public static StringDecoder textPlainOnly(List<String> delimiters, boolean stripDelimiter);1543877580;Create a {@code StringDecoder} for {@code "text/plain"}._@param delimiters delimiter strings to use to split the input stream_@param stripDelimiter whether to remove delimiters from the resulting_input strings;public static StringDecoder textPlainOnly(List<String> delimiters, boolean stripDelimiter) {_		return new StringDecoder(delimiters, stripDelimiter, new MimeType("text", "plain", DEFAULT_CHARSET))__	};create,a,code,string,decoder,for,code,text,plain,param,delimiters,delimiter,strings,to,use,to,split,the,input,stream,param,strip,delimiter,whether,to,remove,delimiters,from,the,resulting,input,strings;public,static,string,decoder,text,plain,only,list,string,delimiters,boolean,strip,delimiter,return,new,string,decoder,delimiters,strip,delimiter,new,mime,type,text,plain
StringDecoder -> private static boolean isEndFrame(DataBuffer dataBuffer);1517583561;Checks whether the given buffer is {@link #END_FRAME}.;private static boolean isEndFrame(DataBuffer dataBuffer) {_		return dataBuffer == END_FRAME__	};checks,whether,the,given,buffer,is,link;private,static,boolean,is,end,frame,data,buffer,data,buffer,return,data,buffer
StringDecoder -> private static boolean isEndFrame(DataBuffer dataBuffer);1518167526;Checks whether the given buffer is {@link #END_FRAME}.;private static boolean isEndFrame(DataBuffer dataBuffer) {_		return dataBuffer == END_FRAME__	};checks,whether,the,given,buffer,is,link;private,static,boolean,is,end,frame,data,buffer,data,buffer,return,data,buffer
StringDecoder -> private static boolean isEndFrame(DataBuffer dataBuffer);1529721864;Checks whether the given buffer is {@link #END_FRAME}.;private static boolean isEndFrame(DataBuffer dataBuffer) {_		return dataBuffer == END_FRAME__	};checks,whether,the,given,buffer,is,link;private,static,boolean,is,end,frame,data,buffer,data,buffer,return,data,buffer
StringDecoder -> private static boolean isEndFrame(DataBuffer dataBuffer);1530174524;Checks whether the given buffer is {@link #END_FRAME}.;private static boolean isEndFrame(DataBuffer dataBuffer) {_		return dataBuffer == END_FRAME__	};checks,whether,the,given,buffer,is,link;private,static,boolean,is,end,frame,data,buffer,data,buffer,return,data,buffer
StringDecoder -> private static boolean isEndFrame(DataBuffer dataBuffer);1530306952;Checks whether the given buffer is {@link #END_FRAME}.;private static boolean isEndFrame(DataBuffer dataBuffer) {_		return dataBuffer == END_FRAME__	};checks,whether,the,given,buffer,is,link;private,static,boolean,is,end,frame,data,buffer,data,buffer,return,data,buffer
StringDecoder -> private static boolean isEndFrame(DataBuffer dataBuffer);1530793695;Checks whether the given buffer is {@link #END_FRAME}.;private static boolean isEndFrame(DataBuffer dataBuffer) {_		return dataBuffer == END_FRAME__	};checks,whether,the,given,buffer,is,link;private,static,boolean,is,end,frame,data,buffer,data,buffer,return,data,buffer
StringDecoder -> private static boolean isEndFrame(DataBuffer dataBuffer);1536942003;Checks whether the given buffer is {@link #END_FRAME}.;private static boolean isEndFrame(DataBuffer dataBuffer) {_		return dataBuffer == END_FRAME__	};checks,whether,the,given,buffer,is,link;private,static,boolean,is,end,frame,data,buffer,data,buffer,return,data,buffer
StringDecoder -> private static boolean isEndFrame(DataBuffer dataBuffer);1536962806;Checks whether the given buffer is {@link #END_FRAME}.;private static boolean isEndFrame(DataBuffer dataBuffer) {_		return dataBuffer == END_FRAME__	};checks,whether,the,given,buffer,is,link;private,static,boolean,is,end,frame,data,buffer,data,buffer,return,data,buffer
StringDecoder -> private static boolean isEndFrame(DataBuffer dataBuffer);1540216832;Checks whether the given buffer is {@link #END_FRAME}.;private static boolean isEndFrame(DataBuffer dataBuffer) {_		return dataBuffer == END_FRAME__	};checks,whether,the,given,buffer,is,link;private,static,boolean,is,end,frame,data,buffer,data,buffer,return,data,buffer
StringDecoder -> private static boolean isEndFrame(DataBuffer dataBuffer);1540574693;Checks whether the given buffer is {@link #END_FRAME}.;private static boolean isEndFrame(DataBuffer dataBuffer) {_		return dataBuffer == END_FRAME__	};checks,whether,the,given,buffer,is,link;private,static,boolean,is,end,frame,data,buffer,data,buffer,return,data,buffer
StringDecoder -> private static boolean isEndFrame(DataBuffer dataBuffer);1542050977;Checks whether the given buffer is {@link #END_FRAME}.;private static boolean isEndFrame(DataBuffer dataBuffer) {_		return dataBuffer == END_FRAME__	};checks,whether,the,given,buffer,is,link;private,static,boolean,is,end,frame,data,buffer,data,buffer,return,data,buffer
StringDecoder -> private static boolean isEndFrame(DataBuffer dataBuffer);1542112693;Checks whether the given buffer is {@link #END_FRAME}.;private static boolean isEndFrame(DataBuffer dataBuffer) {_		return dataBuffer == END_FRAME__	};checks,whether,the,given,buffer,is,link;private,static,boolean,is,end,frame,data,buffer,data,buffer,return,data,buffer
StringDecoder -> private static boolean isEndFrame(DataBuffer dataBuffer);1543877580;Check whether the given buffer is {@link #END_FRAME}.;private static boolean isEndFrame(DataBuffer dataBuffer) {_		return dataBuffer == END_FRAME__	};check,whether,the,given,buffer,is,link;private,static,boolean,is,end,frame,data,buffer,data,buffer,return,data,buffer
StringDecoder -> @Deprecated 	public static StringDecoder allMimeTypes(boolean ignored);1517583561;Create a {@code StringDecoder} that supports all MIME types._@param ignored ignored_@deprecated as of Spring 5.0.4, in favor of {@link #allMimeTypes()} or_{@link #allMimeTypes(List, boolean)}.;@Deprecated_	public static StringDecoder allMimeTypes(boolean ignored) {_		return allMimeTypes()__	};create,a,code,string,decoder,that,supports,all,mime,types,param,ignored,ignored,deprecated,as,of,spring,5,0,4,in,favor,of,link,all,mime,types,or,link,all,mime,types,list,boolean;deprecated,public,static,string,decoder,all,mime,types,boolean,ignored,return,all,mime,types
StringDecoder -> @Deprecated 	public static StringDecoder allMimeTypes(boolean ignored);1518167526;Create a {@code StringDecoder} that supports all MIME types._@param ignored ignored_@deprecated as of Spring 5.0.4, in favor of {@link #allMimeTypes()} or_{@link #allMimeTypes(List, boolean)}.;@Deprecated_	public static StringDecoder allMimeTypes(boolean ignored) {_		return allMimeTypes()__	};create,a,code,string,decoder,that,supports,all,mime,types,param,ignored,ignored,deprecated,as,of,spring,5,0,4,in,favor,of,link,all,mime,types,or,link,all,mime,types,list,boolean;deprecated,public,static,string,decoder,all,mime,types,boolean,ignored,return,all,mime,types
StringDecoder -> @Deprecated 	public static StringDecoder allMimeTypes(boolean ignored);1529721864;Create a {@code StringDecoder} that supports all MIME types._@param ignored ignored_@deprecated as of Spring 5.0.4, in favor of {@link #allMimeTypes()} or_{@link #allMimeTypes(List, boolean)}.;@Deprecated_	public static StringDecoder allMimeTypes(boolean ignored) {_		return allMimeTypes()__	};create,a,code,string,decoder,that,supports,all,mime,types,param,ignored,ignored,deprecated,as,of,spring,5,0,4,in,favor,of,link,all,mime,types,or,link,all,mime,types,list,boolean;deprecated,public,static,string,decoder,all,mime,types,boolean,ignored,return,all,mime,types
StringDecoder -> @Deprecated 	public static StringDecoder allMimeTypes(boolean ignored);1530174524;Create a {@code StringDecoder} that supports all MIME types._@param ignored ignored_@deprecated as of Spring 5.0.4, in favor of {@link #allMimeTypes()} or_{@link #allMimeTypes(List, boolean)}.;@Deprecated_	public static StringDecoder allMimeTypes(boolean ignored) {_		return allMimeTypes()__	};create,a,code,string,decoder,that,supports,all,mime,types,param,ignored,ignored,deprecated,as,of,spring,5,0,4,in,favor,of,link,all,mime,types,or,link,all,mime,types,list,boolean;deprecated,public,static,string,decoder,all,mime,types,boolean,ignored,return,all,mime,types
StringDecoder -> @Deprecated 	public static StringDecoder allMimeTypes(boolean ignored);1530306952;Create a {@code StringDecoder} that supports all MIME types._@param ignored ignored_@deprecated as of Spring 5.0.4, in favor of {@link #allMimeTypes()} or_{@link #allMimeTypes(List, boolean)}.;@Deprecated_	public static StringDecoder allMimeTypes(boolean ignored) {_		return allMimeTypes()__	};create,a,code,string,decoder,that,supports,all,mime,types,param,ignored,ignored,deprecated,as,of,spring,5,0,4,in,favor,of,link,all,mime,types,or,link,all,mime,types,list,boolean;deprecated,public,static,string,decoder,all,mime,types,boolean,ignored,return,all,mime,types
StringDecoder -> @Deprecated 	public static StringDecoder allMimeTypes(boolean ignored);1530793695;Create a {@code StringDecoder} that supports all MIME types._@param ignored ignored_@deprecated as of Spring 5.0.4, in favor of {@link #allMimeTypes()} or_{@link #allMimeTypes(List, boolean)}.;@Deprecated_	public static StringDecoder allMimeTypes(boolean ignored) {_		return allMimeTypes()__	};create,a,code,string,decoder,that,supports,all,mime,types,param,ignored,ignored,deprecated,as,of,spring,5,0,4,in,favor,of,link,all,mime,types,or,link,all,mime,types,list,boolean;deprecated,public,static,string,decoder,all,mime,types,boolean,ignored,return,all,mime,types
StringDecoder -> @Deprecated 	public static StringDecoder allMimeTypes(boolean ignored);1536942003;Create a {@code StringDecoder} that supports all MIME types._@param ignored ignored_@deprecated as of Spring 5.0.4, in favor of {@link #allMimeTypes()} or_{@link #allMimeTypes(List, boolean)}.;@Deprecated_	public static StringDecoder allMimeTypes(boolean ignored) {_		return allMimeTypes()__	};create,a,code,string,decoder,that,supports,all,mime,types,param,ignored,ignored,deprecated,as,of,spring,5,0,4,in,favor,of,link,all,mime,types,or,link,all,mime,types,list,boolean;deprecated,public,static,string,decoder,all,mime,types,boolean,ignored,return,all,mime,types
StringDecoder -> @Deprecated 	public static StringDecoder allMimeTypes(boolean ignored);1536962806;Create a {@code StringDecoder} that supports all MIME types._@param ignored ignored_@deprecated as of Spring 5.0.4, in favor of {@link #allMimeTypes()} or_{@link #allMimeTypes(List, boolean)}.;@Deprecated_	public static StringDecoder allMimeTypes(boolean ignored) {_		return allMimeTypes()__	};create,a,code,string,decoder,that,supports,all,mime,types,param,ignored,ignored,deprecated,as,of,spring,5,0,4,in,favor,of,link,all,mime,types,or,link,all,mime,types,list,boolean;deprecated,public,static,string,decoder,all,mime,types,boolean,ignored,return,all,mime,types
StringDecoder -> @Deprecated 	public static StringDecoder allMimeTypes(boolean ignored);1540216832;Create a {@code StringDecoder} that supports all MIME types._@param ignored ignored_@deprecated as of Spring 5.0.4, in favor of {@link #allMimeTypes()} or_{@link #allMimeTypes(List, boolean)}.;@Deprecated_	public static StringDecoder allMimeTypes(boolean ignored) {_		return allMimeTypes()__	};create,a,code,string,decoder,that,supports,all,mime,types,param,ignored,ignored,deprecated,as,of,spring,5,0,4,in,favor,of,link,all,mime,types,or,link,all,mime,types,list,boolean;deprecated,public,static,string,decoder,all,mime,types,boolean,ignored,return,all,mime,types
StringDecoder -> @Deprecated 	public static StringDecoder allMimeTypes(boolean ignored);1540574693;Create a {@code StringDecoder} that supports all MIME types._@param ignored ignored_@deprecated as of Spring 5.0.4, in favor of {@link #allMimeTypes()} or_{@link #allMimeTypes(List, boolean)}.;@Deprecated_	public static StringDecoder allMimeTypes(boolean ignored) {_		return allMimeTypes()__	};create,a,code,string,decoder,that,supports,all,mime,types,param,ignored,ignored,deprecated,as,of,spring,5,0,4,in,favor,of,link,all,mime,types,or,link,all,mime,types,list,boolean;deprecated,public,static,string,decoder,all,mime,types,boolean,ignored,return,all,mime,types
StringDecoder -> @Deprecated 	public static StringDecoder allMimeTypes(boolean ignored);1542050977;Create a {@code StringDecoder} that supports all MIME types._@param ignored ignored_@deprecated as of Spring 5.0.4, in favor of {@link #allMimeTypes()} or_{@link #allMimeTypes(List, boolean)}.;@Deprecated_	public static StringDecoder allMimeTypes(boolean ignored) {_		return allMimeTypes()__	};create,a,code,string,decoder,that,supports,all,mime,types,param,ignored,ignored,deprecated,as,of,spring,5,0,4,in,favor,of,link,all,mime,types,or,link,all,mime,types,list,boolean;deprecated,public,static,string,decoder,all,mime,types,boolean,ignored,return,all,mime,types
StringDecoder -> @Deprecated 	public static StringDecoder allMimeTypes(boolean ignored);1542112693;Create a {@code StringDecoder} that supports all MIME types._@param ignored ignored_@deprecated as of Spring 5.0.4, in favor of {@link #allMimeTypes()} or_{@link #allMimeTypes(List, boolean)}.;@Deprecated_	public static StringDecoder allMimeTypes(boolean ignored) {_		return allMimeTypes()__	};create,a,code,string,decoder,that,supports,all,mime,types,param,ignored,ignored,deprecated,as,of,spring,5,0,4,in,favor,of,link,all,mime,types,or,link,all,mime,types,list,boolean;deprecated,public,static,string,decoder,all,mime,types,boolean,ignored,return,all,mime,types
StringDecoder -> @Deprecated 	public static StringDecoder allMimeTypes(boolean ignored);1543877580;Create a {@code StringDecoder} that supports all MIME types._@param ignored ignored_@deprecated as of Spring 5.0.4, in favor of {@link #allMimeTypes()} or_{@link #allMimeTypes(List, boolean)};@Deprecated_	public static StringDecoder allMimeTypes(boolean ignored) {_		return allMimeTypes()__	};create,a,code,string,decoder,that,supports,all,mime,types,param,ignored,ignored,deprecated,as,of,spring,5,0,4,in,favor,of,link,all,mime,types,or,link,all,mime,types,list,boolean;deprecated,public,static,string,decoder,all,mime,types,boolean,ignored,return,all,mime,types
