commented;modifiers;parameterAmount;loc;comment;code
true;;0;2;/**  * Return the source and target types that this converter can convert between.  * <p>Each entry is a convertible source-to-target type pair.  * <p>For {@link ConditionalConverter conditional converters} this method may return  * {@code null} to indicate all source-to-target pairs should be considered.  */ ;/**  * Return the source and target types that this converter can convert between.  * <p>Each entry is a convertible source-to-target type pair.  * <p>For {@link ConditionalConverter conditional converters} this method may return  * {@code null} to indicate all source-to-target pairs should be considered.  */ @Nullable Set<ConvertiblePair> getConvertibleTypes().
true;;3;2;/**  * Convert the source object to the targetType described by the {@code TypeDescriptor}.  * @param source the source object to convert (may be {@code null})  * @param sourceType the type descriptor of the field we are converting from  * @param targetType the type descriptor of the field we are converting to  * @return the converted object  */ ;/**  * Convert the source object to the targetType described by the {@code TypeDescriptor}.  * @param source the source object to convert (may be {@code null})  * @param sourceType the type descriptor of the field we are converting from  * @param targetType the type descriptor of the field we are converting to  * @return the converted object  */ @Nullable Object convert(@Nullable Object source, TypeDescriptor sourceType, TypeDescriptor targetType).
false;public;0;3;;public Class<?> getSourceType() {     return this.sourceType. }
false;public;0;3;;public Class<?> getTargetType() {     return this.targetType. }
false;public;1;11;;@Override public boolean equals(@Nullable Object other) {     if (this == other) {         return true.     }     if (other == null || other.getClass() != ConvertiblePair.class) {         return false.     }     ConvertiblePair otherPair = (ConvertiblePair) other.     return (this.sourceType == otherPair.sourceType && this.targetType == otherPair.targetType). }
false;public;0;4;;@Override public int hashCode() {     return (this.sourceType.hashCode() * 31 + this.targetType.hashCode()). }
false;public;0;4;;@Override public String toString() {     return (this.sourceType.getName() + " -> " + this.targetType.getName()). }
