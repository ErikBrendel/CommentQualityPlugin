# id;timestamp;commentText;codeText;commentWords;codeWords
GenericConverter -> Object convert(Object source, TypeDescriptor sourceType, TypeDescriptor targetType)_;1328020251;Convert the source to the targetType described by the TypeDescriptor._@param source the source object to convert (may be null)_@param sourceType the type descriptor of the field we are converting from_@param targetType the type descriptor of the field we are converting to_@return the converted object;Object convert(Object source, TypeDescriptor sourceType, TypeDescriptor targetType)_;convert,the,source,to,the,target,type,described,by,the,type,descriptor,param,source,the,source,object,to,convert,may,be,null,param,source,type,the,type,descriptor,of,the,field,we,are,converting,from,param,target,type,the,type,descriptor,of,the,field,we,are,converting,to,return,the,converted,object;object,convert,object,source,type,descriptor,source,type,type,descriptor,target,type
GenericConverter -> Object convert(Object source, TypeDescriptor sourceType, TypeDescriptor targetType)_;1351584957;Convert the source to the targetType described by the TypeDescriptor._@param source the source object to convert (may be null)_@param sourceType the type descriptor of the field we are converting from_@param targetType the type descriptor of the field we are converting to_@return the converted object;Object convert(Object source, TypeDescriptor sourceType, TypeDescriptor targetType)_;convert,the,source,to,the,target,type,described,by,the,type,descriptor,param,source,the,source,object,to,convert,may,be,null,param,source,type,the,type,descriptor,of,the,field,we,are,converting,from,param,target,type,the,type,descriptor,of,the,field,we,are,converting,to,return,the,converted,object;object,convert,object,source,type,descriptor,source,type,type,descriptor,target,type
GenericConverter -> Object convert(Object source, TypeDescriptor sourceType, TypeDescriptor targetType)_;1356735495;Convert the source to the targetType described by the TypeDescriptor._@param source the source object to convert (may be null)_@param sourceType the type descriptor of the field we are converting from_@param targetType the type descriptor of the field we are converting to_@return the converted object;Object convert(Object source, TypeDescriptor sourceType, TypeDescriptor targetType)_;convert,the,source,to,the,target,type,described,by,the,type,descriptor,param,source,the,source,object,to,convert,may,be,null,param,source,type,the,type,descriptor,of,the,field,we,are,converting,from,param,target,type,the,type,descriptor,of,the,field,we,are,converting,to,return,the,converted,object;object,convert,object,source,type,descriptor,source,type,type,descriptor,target,type
GenericConverter -> Object convert(Object source, TypeDescriptor sourceType, TypeDescriptor targetType)_;1391248381;Convert the source to the targetType described by the TypeDescriptor._@param source the source object to convert (may be null)_@param sourceType the type descriptor of the field we are converting from_@param targetType the type descriptor of the field we are converting to_@return the converted object;Object convert(Object source, TypeDescriptor sourceType, TypeDescriptor targetType)_;convert,the,source,to,the,target,type,described,by,the,type,descriptor,param,source,the,source,object,to,convert,may,be,null,param,source,type,the,type,descriptor,of,the,field,we,are,converting,from,param,target,type,the,type,descriptor,of,the,field,we,are,converting,to,return,the,converted,object;object,convert,object,source,type,descriptor,source,type,type,descriptor,target,type
GenericConverter -> Object convert(Object source, TypeDescriptor sourceType, TypeDescriptor targetType)_;1427240641;Convert the source to the targetType described by the TypeDescriptor._@param source the source object to convert (may be null)_@param sourceType the type descriptor of the field we are converting from_@param targetType the type descriptor of the field we are converting to_@return the converted object;Object convert(Object source, TypeDescriptor sourceType, TypeDescriptor targetType)_;convert,the,source,to,the,target,type,described,by,the,type,descriptor,param,source,the,source,object,to,convert,may,be,null,param,source,type,the,type,descriptor,of,the,field,we,are,converting,from,param,target,type,the,type,descriptor,of,the,field,we,are,converting,to,return,the,converted,object;object,convert,object,source,type,descriptor,source,type,type,descriptor,target,type
GenericConverter -> Object convert(Object source, TypeDescriptor sourceType, TypeDescriptor targetType)_;1427725464;Convert the source object to the targetType described by the {@code TypeDescriptor}._@param source the source object to convert (may be {@code null})_@param sourceType the type descriptor of the field we are converting from_@param targetType the type descriptor of the field we are converting to_@return the converted object;Object convert(Object source, TypeDescriptor sourceType, TypeDescriptor targetType)_;convert,the,source,object,to,the,target,type,described,by,the,code,type,descriptor,param,source,the,source,object,to,convert,may,be,code,null,param,source,type,the,type,descriptor,of,the,field,we,are,converting,from,param,target,type,the,type,descriptor,of,the,field,we,are,converting,to,return,the,converted,object;object,convert,object,source,type,descriptor,source,type,type,descriptor,target,type
GenericConverter -> Object convert(Object source, TypeDescriptor sourceType, TypeDescriptor targetType)_;1448975504;Convert the source object to the targetType described by the {@code TypeDescriptor}._@param source the source object to convert (may be {@code null})_@param sourceType the type descriptor of the field we are converting from_@param targetType the type descriptor of the field we are converting to_@return the converted object;Object convert(Object source, TypeDescriptor sourceType, TypeDescriptor targetType)_;convert,the,source,object,to,the,target,type,described,by,the,code,type,descriptor,param,source,the,source,object,to,convert,may,be,code,null,param,source,type,the,type,descriptor,of,the,field,we,are,converting,from,param,target,type,the,type,descriptor,of,the,field,we,are,converting,to,return,the,converted,object;object,convert,object,source,type,descriptor,source,type,type,descriptor,target,type
GenericConverter -> @Nullable 	Object convert(@Nullable Object source, TypeDescriptor sourceType, TypeDescriptor targetType)_;1495868221;Convert the source object to the targetType described by the {@code TypeDescriptor}._@param source the source object to convert (may be {@code null})_@param sourceType the type descriptor of the field we are converting from_@param targetType the type descriptor of the field we are converting to_@return the converted object;@Nullable_	Object convert(@Nullable Object source, TypeDescriptor sourceType, TypeDescriptor targetType)_;convert,the,source,object,to,the,target,type,described,by,the,code,type,descriptor,param,source,the,source,object,to,convert,may,be,code,null,param,source,type,the,type,descriptor,of,the,field,we,are,converting,from,param,target,type,the,type,descriptor,of,the,field,we,are,converting,to,return,the,converted,object;nullable,object,convert,nullable,object,source,type,descriptor,source,type,type,descriptor,target,type
GenericConverter -> @Nullable 	Object convert(@Nullable Object source, TypeDescriptor sourceType, TypeDescriptor targetType)_;1496837955;Convert the source object to the targetType described by the {@code TypeDescriptor}._@param source the source object to convert (may be {@code null})_@param sourceType the type descriptor of the field we are converting from_@param targetType the type descriptor of the field we are converting to_@return the converted object;@Nullable_	Object convert(@Nullable Object source, TypeDescriptor sourceType, TypeDescriptor targetType)_;convert,the,source,object,to,the,target,type,described,by,the,code,type,descriptor,param,source,the,source,object,to,convert,may,be,code,null,param,source,type,the,type,descriptor,of,the,field,we,are,converting,from,param,target,type,the,type,descriptor,of,the,field,we,are,converting,to,return,the,converted,object;nullable,object,convert,nullable,object,source,type,descriptor,source,type,type,descriptor,target,type
GenericConverter -> ConvertiblePair -> public ConvertiblePair(Class<?> sourceType, Class<?> targetType);1328020251;Create a new source-to-target pair._@param sourceType the source type_@param targetType the target type;public ConvertiblePair(Class<?> sourceType, Class<?> targetType) {_			Assert.notNull(sourceType, "Source type must not be null")__			Assert.notNull(targetType, "Target type must not be null")__			this.sourceType = sourceType__			this.targetType = targetType__		};create,a,new,source,to,target,pair,param,source,type,the,source,type,param,target,type,the,target,type;public,convertible,pair,class,source,type,class,target,type,assert,not,null,source,type,source,type,must,not,be,null,assert,not,null,target,type,target,type,must,not,be,null,this,source,type,source,type,this,target,type,target,type
GenericConverter -> ConvertiblePair -> public ConvertiblePair(Class<?> sourceType, Class<?> targetType);1351584957;Create a new source-to-target pair._@param sourceType the source type_@param targetType the target type;public ConvertiblePair(Class<?> sourceType, Class<?> targetType) {_			Assert.notNull(sourceType, "Source type must not be null")__			Assert.notNull(targetType, "Target type must not be null")__			this.sourceType = sourceType__			this.targetType = targetType__		};create,a,new,source,to,target,pair,param,source,type,the,source,type,param,target,type,the,target,type;public,convertible,pair,class,source,type,class,target,type,assert,not,null,source,type,source,type,must,not,be,null,assert,not,null,target,type,target,type,must,not,be,null,this,source,type,source,type,this,target,type,target,type
GenericConverter -> ConvertiblePair -> public ConvertiblePair(Class<?> sourceType, Class<?> targetType);1356735495;Create a new source-to-target pair._@param sourceType the source type_@param targetType the target type;public ConvertiblePair(Class<?> sourceType, Class<?> targetType) {_			Assert.notNull(sourceType, "Source type must not be null")__			Assert.notNull(targetType, "Target type must not be null")__			this.sourceType = sourceType__			this.targetType = targetType__		};create,a,new,source,to,target,pair,param,source,type,the,source,type,param,target,type,the,target,type;public,convertible,pair,class,source,type,class,target,type,assert,not,null,source,type,source,type,must,not,be,null,assert,not,null,target,type,target,type,must,not,be,null,this,source,type,source,type,this,target,type,target,type
GenericConverter -> ConvertiblePair -> public ConvertiblePair(Class<?> sourceType, Class<?> targetType);1391248381;Create a new source-to-target pair._@param sourceType the source type_@param targetType the target type;public ConvertiblePair(Class<?> sourceType, Class<?> targetType) {_			Assert.notNull(sourceType, "Source type must not be null")__			Assert.notNull(targetType, "Target type must not be null")__			this.sourceType = sourceType__			this.targetType = targetType__		};create,a,new,source,to,target,pair,param,source,type,the,source,type,param,target,type,the,target,type;public,convertible,pair,class,source,type,class,target,type,assert,not,null,source,type,source,type,must,not,be,null,assert,not,null,target,type,target,type,must,not,be,null,this,source,type,source,type,this,target,type,target,type
GenericConverter -> ConvertiblePair -> public ConvertiblePair(Class<?> sourceType, Class<?> targetType);1427240641;Create a new source-to-target pair._@param sourceType the source type_@param targetType the target type;public ConvertiblePair(Class<?> sourceType, Class<?> targetType) {_			Assert.notNull(sourceType, "Source type must not be null")__			Assert.notNull(targetType, "Target type must not be null")__			this.sourceType = sourceType__			this.targetType = targetType__		};create,a,new,source,to,target,pair,param,source,type,the,source,type,param,target,type,the,target,type;public,convertible,pair,class,source,type,class,target,type,assert,not,null,source,type,source,type,must,not,be,null,assert,not,null,target,type,target,type,must,not,be,null,this,source,type,source,type,this,target,type,target,type
GenericConverter -> ConvertiblePair -> public ConvertiblePair(Class<?> sourceType, Class<?> targetType);1427725464;Create a new source-to-target pair._@param sourceType the source type_@param targetType the target type;public ConvertiblePair(Class<?> sourceType, Class<?> targetType) {_			Assert.notNull(sourceType, "Source type must not be null")__			Assert.notNull(targetType, "Target type must not be null")__			this.sourceType = sourceType__			this.targetType = targetType__		};create,a,new,source,to,target,pair,param,source,type,the,source,type,param,target,type,the,target,type;public,convertible,pair,class,source,type,class,target,type,assert,not,null,source,type,source,type,must,not,be,null,assert,not,null,target,type,target,type,must,not,be,null,this,source,type,source,type,this,target,type,target,type
GenericConverter -> ConvertiblePair -> public ConvertiblePair(Class<?> sourceType, Class<?> targetType);1448975504;Create a new source-to-target pair._@param sourceType the source type_@param targetType the target type;public ConvertiblePair(Class<?> sourceType, Class<?> targetType) {_			Assert.notNull(sourceType, "Source type must not be null")__			Assert.notNull(targetType, "Target type must not be null")__			this.sourceType = sourceType__			this.targetType = targetType__		};create,a,new,source,to,target,pair,param,source,type,the,source,type,param,target,type,the,target,type;public,convertible,pair,class,source,type,class,target,type,assert,not,null,source,type,source,type,must,not,be,null,assert,not,null,target,type,target,type,must,not,be,null,this,source,type,source,type,this,target,type,target,type
GenericConverter -> ConvertiblePair -> public ConvertiblePair(Class<?> sourceType, Class<?> targetType);1495868221;Create a new source-to-target pair._@param sourceType the source type_@param targetType the target type;public ConvertiblePair(Class<?> sourceType, Class<?> targetType) {_			Assert.notNull(sourceType, "Source type must not be null")__			Assert.notNull(targetType, "Target type must not be null")__			this.sourceType = sourceType__			this.targetType = targetType__		};create,a,new,source,to,target,pair,param,source,type,the,source,type,param,target,type,the,target,type;public,convertible,pair,class,source,type,class,target,type,assert,not,null,source,type,source,type,must,not,be,null,assert,not,null,target,type,target,type,must,not,be,null,this,source,type,source,type,this,target,type,target,type
GenericConverter -> ConvertiblePair -> public ConvertiblePair(Class<?> sourceType, Class<?> targetType);1496837955;Create a new source-to-target pair._@param sourceType the source type_@param targetType the target type;public ConvertiblePair(Class<?> sourceType, Class<?> targetType) {_			Assert.notNull(sourceType, "Source type must not be null")__			Assert.notNull(targetType, "Target type must not be null")__			this.sourceType = sourceType__			this.targetType = targetType__		};create,a,new,source,to,target,pair,param,source,type,the,source,type,param,target,type,the,target,type;public,convertible,pair,class,source,type,class,target,type,assert,not,null,source,type,source,type,must,not,be,null,assert,not,null,target,type,target,type,must,not,be,null,this,source,type,source,type,this,target,type,target,type
GenericConverter -> Set<ConvertiblePair> getConvertibleTypes()_;1328020251;Return the source and target types which this converter can convert between._<p>Each entry is a convertible source-to-target type pair.;Set<ConvertiblePair> getConvertibleTypes()_;return,the,source,and,target,types,which,this,converter,can,convert,between,p,each,entry,is,a,convertible,source,to,target,type,pair;set,convertible,pair,get,convertible,types
GenericConverter -> Set<ConvertiblePair> getConvertibleTypes()_;1351584957;Return the source and target types which this converter can convert between. Each_entry is a convertible source-to-target type pair._<p>_For {@link ConditionalConverter conditional} converters this method may return_{@code null} to indicate all source-to-target pairs should be considered. *;Set<ConvertiblePair> getConvertibleTypes()_;return,the,source,and,target,types,which,this,converter,can,convert,between,each,entry,is,a,convertible,source,to,target,type,pair,p,for,link,conditional,converter,conditional,converters,this,method,may,return,code,null,to,indicate,all,source,to,target,pairs,should,be,considered;set,convertible,pair,get,convertible,types
GenericConverter -> Set<ConvertiblePair> getConvertibleTypes()_;1356735495;Return the source and target types which this converter can convert between. Each_entry is a convertible source-to-target type pair._<p>_For {@link ConditionalConverter conditional} converters this method may return_{@code null} to indicate all source-to-target pairs should be considered. *;Set<ConvertiblePair> getConvertibleTypes()_;return,the,source,and,target,types,which,this,converter,can,convert,between,each,entry,is,a,convertible,source,to,target,type,pair,p,for,link,conditional,converter,conditional,converters,this,method,may,return,code,null,to,indicate,all,source,to,target,pairs,should,be,considered;set,convertible,pair,get,convertible,types
GenericConverter -> Set<ConvertiblePair> getConvertibleTypes()_;1391248381;Return the source and target types which this converter can convert between. Each_entry is a convertible source-to-target type pair._<p>_For {@link ConditionalConverter conditional} converters this method may return_{@code null} to indicate all source-to-target pairs should be considered. *;Set<ConvertiblePair> getConvertibleTypes()_;return,the,source,and,target,types,which,this,converter,can,convert,between,each,entry,is,a,convertible,source,to,target,type,pair,p,for,link,conditional,converter,conditional,converters,this,method,may,return,code,null,to,indicate,all,source,to,target,pairs,should,be,considered;set,convertible,pair,get,convertible,types
GenericConverter -> Set<ConvertiblePair> getConvertibleTypes()_;1427240641;Return the source and target types which this converter can convert between. Each_entry is a convertible source-to-target type pair._<p>For {@link ConditionalConverter conditional} converters this method may return_{@code null} to indicate all source-to-target pairs should be considered.;Set<ConvertiblePair> getConvertibleTypes()_;return,the,source,and,target,types,which,this,converter,can,convert,between,each,entry,is,a,convertible,source,to,target,type,pair,p,for,link,conditional,converter,conditional,converters,this,method,may,return,code,null,to,indicate,all,source,to,target,pairs,should,be,considered;set,convertible,pair,get,convertible,types
GenericConverter -> Set<ConvertiblePair> getConvertibleTypes()_;1427725464;Return the source and target types that this converter can convert between._<p>Each entry is a convertible source-to-target type pair._<p>For {@link ConditionalConverter conditional converters} this method may return_{@code null} to indicate all source-to-target pairs should be considered.;Set<ConvertiblePair> getConvertibleTypes()_;return,the,source,and,target,types,that,this,converter,can,convert,between,p,each,entry,is,a,convertible,source,to,target,type,pair,p,for,link,conditional,converter,conditional,converters,this,method,may,return,code,null,to,indicate,all,source,to,target,pairs,should,be,considered;set,convertible,pair,get,convertible,types
GenericConverter -> Set<ConvertiblePair> getConvertibleTypes()_;1448975504;Return the source and target types that this converter can convert between._<p>Each entry is a convertible source-to-target type pair._<p>For {@link ConditionalConverter conditional converters} this method may return_{@code null} to indicate all source-to-target pairs should be considered.;Set<ConvertiblePair> getConvertibleTypes()_;return,the,source,and,target,types,that,this,converter,can,convert,between,p,each,entry,is,a,convertible,source,to,target,type,pair,p,for,link,conditional,converter,conditional,converters,this,method,may,return,code,null,to,indicate,all,source,to,target,pairs,should,be,considered;set,convertible,pair,get,convertible,types
GenericConverter -> @Nullable 	Set<ConvertiblePair> getConvertibleTypes()_;1495868221;Return the source and target types that this converter can convert between._<p>Each entry is a convertible source-to-target type pair._<p>For {@link ConditionalConverter conditional converters} this method may return_{@code null} to indicate all source-to-target pairs should be considered.;@Nullable_	Set<ConvertiblePair> getConvertibleTypes()_;return,the,source,and,target,types,that,this,converter,can,convert,between,p,each,entry,is,a,convertible,source,to,target,type,pair,p,for,link,conditional,converter,conditional,converters,this,method,may,return,code,null,to,indicate,all,source,to,target,pairs,should,be,considered;nullable,set,convertible,pair,get,convertible,types
GenericConverter -> @Nullable 	Set<ConvertiblePair> getConvertibleTypes()_;1496837955;Return the source and target types that this converter can convert between._<p>Each entry is a convertible source-to-target type pair._<p>For {@link ConditionalConverter conditional converters} this method may return_{@code null} to indicate all source-to-target pairs should be considered.;@Nullable_	Set<ConvertiblePair> getConvertibleTypes()_;return,the,source,and,target,types,that,this,converter,can,convert,between,p,each,entry,is,a,convertible,source,to,target,type,pair,p,for,link,conditional,converter,conditional,converters,this,method,may,return,code,null,to,indicate,all,source,to,target,pairs,should,be,considered;nullable,set,convertible,pair,get,convertible,types
