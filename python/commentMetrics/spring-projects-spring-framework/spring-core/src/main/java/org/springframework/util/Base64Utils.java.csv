# id;timestamp;commentText;codeText;commentWords;codeWords
Base64Utils -> public static byte[] encode(byte[] src);1401880931;Base64-encode the given byte array._@param src the original byte array (may be {@code null})_@return the encoded byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding is not supported,_i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] encode(byte[] src) {_		assertSupported()__		return delegate.encode(src)__	};base64,encode,the,given,byte,array,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,encode,byte,src,assert,supported,return,delegate,encode,src
Base64Utils -> public static byte[] encode(byte[] src);1401910463;Base64-encode the given byte array._@param src the original byte array (may be {@code null})_@return the encoded byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding is not supported,_i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] encode(byte[] src) {_		assertSupported()__		return delegate.encode(src)__	};base64,encode,the,given,byte,array,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,encode,byte,src,assert,supported,return,delegate,encode,src
Base64Utils -> public static byte[] encode(byte[] src);1434925953;Base64-encode the given byte array._@param src the original byte array (may be {@code null})_@return the encoded byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding is not supported,_i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] encode(byte[] src) {_		assertSupported()__		return delegate.encode(src)__	};base64,encode,the,given,byte,array,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,encode,byte,src,assert,supported,return,delegate,encode,src
Base64Utils -> public static byte[] encode(byte[] src);1435349173;Base64-encode the given byte array._@param src the original byte array (may be {@code null})_@return the encoded byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] encode(byte[] src) {_		assertDelegateAvailable()__		return delegate.encode(src)__	};base64,encode,the,given,byte,array,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,encode,byte,src,assert,delegate,available,return,delegate,encode,src
Base64Utils -> public static byte[] encode(byte[] src);1449866984;Base64-encode the given byte array._@param src the original byte array (may be {@code null})_@return the encoded byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] encode(byte[] src) {_		assertDelegateAvailable()__		return delegate.encode(src)__	};base64,encode,the,given,byte,array,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,encode,byte,src,assert,delegate,available,return,delegate,encode,src
Base64Utils -> public static byte[] encode(byte[] src);1449867386;Base64-encode the given byte array._@param src the original byte array (may be {@code null})_@return the encoded byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] encode(byte[] src) {_		assertDelegateAvailable()__		return delegate.encode(src)__	};base64,encode,the,given,byte,array,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,encode,byte,src,assert,delegate,available,return,delegate,encode,src
Base64Utils -> public static byte[] encode(byte[] src);1458311433;Base64-encode the given byte array._@param src the original byte array (may be {@code null})_@return the encoded byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] encode(byte[] src) {_		assertDelegateAvailable()__		return delegate.encode(src)__	};base64,encode,the,given,byte,array,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,encode,byte,src,assert,delegate,available,return,delegate,encode,src
Base64Utils -> public static byte[] encode(byte[] src);1467677340;Base64-encode the given byte array._@param src the original byte array (may be {@code null})_@return the encoded byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] encode(byte[] src) {_		if (src == null || src.length == 0) {_			return src__		}_		return Base64.getEncoder().encode(src)__	};base64,encode,the,given,byte,array,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,encode,byte,src,if,src,null,src,length,0,return,src,return,base64,get,encoder,encode,src
Base64Utils -> public static byte[] encode(byte[] src);1468964586;Base64-encode the given byte array._@param src the original byte array (may be {@code null})_@return the encoded byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] encode(byte[] src) {_		if (src == null || src.length == 0) {_			return src__		}_		return Base64.getEncoder().encode(src)__	};base64,encode,the,given,byte,array,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,encode,byte,src,if,src,null,src,length,0,return,src,return,base64,get,encoder,encode,src
Base64Utils -> public static byte[] encode(byte[] src);1487760984;Base64-encode the given byte array._@param src the original byte array (may be {@code null})_@return the encoded byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] encode(byte[] src) {_		if (src == null || src.length == 0) {_			return src__		}_		return Base64.getEncoder().encode(src)__	};base64,encode,the,given,byte,array,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,encode,byte,src,if,src,null,src,length,0,return,src,return,base64,get,encoder,encode,src
Base64Utils -> public static byte[] encode(byte[] src);1496837955;Base64-encode the given byte array._@param src the original byte array_@return the encoded byte array_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] encode(byte[] src) {_		if (src.length == 0) {_			return src__		}_		return Base64.getEncoder().encode(src)__	};base64,encode,the,given,byte,array,param,src,the,original,byte,array,return,the,encoded,byte,array,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,encode,byte,src,if,src,length,0,return,src,return,base64,get,encoder,encode,src
Base64Utils -> public static byte[] encode(byte[] src);1506097334;Base64-encode the given byte array._@param src the original byte array_@return the encoded byte array_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] encode(byte[] src) {_		if (src.length == 0) {_			return src__		}_		return Base64.getEncoder().encode(src)__	};base64,encode,the,given,byte,array,param,src,the,original,byte,array,return,the,encoded,byte,array,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,encode,byte,src,if,src,length,0,return,src,return,base64,get,encoder,encode,src
Base64Utils -> public static byte[] encode(byte[] src);1533736265;Base64-encode the given byte array._@param src the original byte array_@return the encoded byte array;public static byte[] encode(byte[] src) {_		if (src.length == 0) {_			return src__		}_		return Base64.getEncoder().encode(src)__	};base64,encode,the,given,byte,array,param,src,the,original,byte,array,return,the,encoded,byte,array;public,static,byte,encode,byte,src,if,src,length,0,return,src,return,base64,get,encoder,encode,src
Base64Utils -> private static void assertDelegateAvailable();1435349173;Assert that Byte64 encoding between byte arrays is actually supported._@throws IllegalStateException if neither Java 8 nor Apache Commons Codec is present;private static void assertDelegateAvailable() {_		Assert.state(delegate != null,_				"Neither Java 8 nor Apache Commons Codec found - Base64 encoding between byte arrays not supported")__	};assert,that,byte64,encoding,between,byte,arrays,is,actually,supported,throws,illegal,state,exception,if,neither,java,8,nor,apache,commons,codec,is,present;private,static,void,assert,delegate,available,assert,state,delegate,null,neither,java,8,nor,apache,commons,codec,found,base64,encoding,between,byte,arrays,not,supported
Base64Utils -> private static void assertDelegateAvailable();1449866984;Assert that Byte64 encoding between byte arrays is actually supported._@throws IllegalStateException if neither Java 8 nor Apache Commons Codec is present;private static void assertDelegateAvailable() {_		Assert.state(delegate != null,_				"Neither Java 8 nor Apache Commons Codec found - Base64 encoding between byte arrays not supported")__	};assert,that,byte64,encoding,between,byte,arrays,is,actually,supported,throws,illegal,state,exception,if,neither,java,8,nor,apache,commons,codec,is,present;private,static,void,assert,delegate,available,assert,state,delegate,null,neither,java,8,nor,apache,commons,codec,found,base64,encoding,between,byte,arrays,not,supported
Base64Utils -> private static void assertDelegateAvailable();1449867386;Assert that Byte64 encoding between byte arrays is actually supported._@throws IllegalStateException if neither Java 8 nor Apache Commons Codec is present;private static void assertDelegateAvailable() {_		Assert.state(delegate != null,_				"Neither Java 8 nor Apache Commons Codec found - Base64 encoding between byte arrays not supported")__	};assert,that,byte64,encoding,between,byte,arrays,is,actually,supported,throws,illegal,state,exception,if,neither,java,8,nor,apache,commons,codec,is,present;private,static,void,assert,delegate,available,assert,state,delegate,null,neither,java,8,nor,apache,commons,codec,found,base64,encoding,between,byte,arrays,not,supported
Base64Utils -> private static void assertDelegateAvailable();1458311433;Assert that Byte64 encoding between byte arrays is actually supported._@throws IllegalStateException if neither Java 8 nor Apache Commons Codec is present;private static void assertDelegateAvailable() {_		Assert.state(delegate != null,_				"Neither Java 8 nor Apache Commons Codec found - Base64 encoding between byte arrays not supported")__	};assert,that,byte64,encoding,between,byte,arrays,is,actually,supported,throws,illegal,state,exception,if,neither,java,8,nor,apache,commons,codec,is,present;private,static,void,assert,delegate,available,assert,state,delegate,null,neither,java,8,nor,apache,commons,codec,found,base64,encoding,between,byte,arrays,not,supported
Base64Utils -> public static byte[] decodeUrlSafe(byte[] src);1449866984;Base64-decode the given byte array using the RFC 4868_"URL and Filename Safe Alphabet"._@param src the encoded byte array (may be {@code null})_@return the original byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] decodeUrlSafe(byte[] src) {_		assertDelegateAvailable()__		return delegate.decodeUrlSafe(src)__	};base64,decode,the,given,byte,array,using,the,rfc,4868,url,and,filename,safe,alphabet,param,src,the,encoded,byte,array,may,be,code,null,return,the,original,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,decode,url,safe,byte,src,assert,delegate,available,return,delegate,decode,url,safe,src
Base64Utils -> public static byte[] decodeUrlSafe(byte[] src);1449867386;Base64-decode the given byte array using the RFC 4868_"URL and Filename Safe Alphabet"._@param src the encoded byte array (may be {@code null})_@return the original byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime_@since 4.2.4;public static byte[] decodeUrlSafe(byte[] src) {_		assertDelegateAvailable()__		return delegate.decodeUrlSafe(src)__	};base64,decode,the,given,byte,array,using,the,rfc,4868,url,and,filename,safe,alphabet,param,src,the,encoded,byte,array,may,be,code,null,return,the,original,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime,since,4,2,4;public,static,byte,decode,url,safe,byte,src,assert,delegate,available,return,delegate,decode,url,safe,src
Base64Utils -> public static byte[] decodeUrlSafe(byte[] src);1458311433;Base64-decode the given byte array using the RFC 4648_"URL and Filename Safe Alphabet"._@param src the encoded byte array (may be {@code null})_@return the original byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime_@since 4.2.4;public static byte[] decodeUrlSafe(byte[] src) {_		assertDelegateAvailable()__		return delegate.decodeUrlSafe(src)__	};base64,decode,the,given,byte,array,using,the,rfc,4648,url,and,filename,safe,alphabet,param,src,the,encoded,byte,array,may,be,code,null,return,the,original,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime,since,4,2,4;public,static,byte,decode,url,safe,byte,src,assert,delegate,available,return,delegate,decode,url,safe,src
Base64Utils -> public static byte[] decodeUrlSafe(byte[] src);1467677340;Base64-decode the given byte array using the RFC 4648_"URL and Filename Safe Alphabet"._@param src the encoded byte array (may be {@code null})_@return the original byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime_@since 4.2.4;public static byte[] decodeUrlSafe(byte[] src) {_		if (src == null || src.length == 0) {_			return src__		}_		return Base64.getUrlDecoder().decode(src)__	};base64,decode,the,given,byte,array,using,the,rfc,4648,url,and,filename,safe,alphabet,param,src,the,encoded,byte,array,may,be,code,null,return,the,original,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime,since,4,2,4;public,static,byte,decode,url,safe,byte,src,if,src,null,src,length,0,return,src,return,base64,get,url,decoder,decode,src
Base64Utils -> public static byte[] decodeUrlSafe(byte[] src);1468964586;Base64-decode the given byte array using the RFC 4648_"URL and Filename Safe Alphabet"._@param src the encoded byte array (may be {@code null})_@return the original byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime_@since 4.2.4;public static byte[] decodeUrlSafe(byte[] src) {_		if (src == null || src.length == 0) {_			return src__		}_		return Base64.getUrlDecoder().decode(src)__	};base64,decode,the,given,byte,array,using,the,rfc,4648,url,and,filename,safe,alphabet,param,src,the,encoded,byte,array,may,be,code,null,return,the,original,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime,since,4,2,4;public,static,byte,decode,url,safe,byte,src,if,src,null,src,length,0,return,src,return,base64,get,url,decoder,decode,src
Base64Utils -> public static byte[] decodeUrlSafe(byte[] src);1487760984;Base64-decode the given byte array using the RFC 4648_"URL and Filename Safe Alphabet"._@param src the encoded byte array (may be {@code null})_@return the original byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime_@since 4.2.4;public static byte[] decodeUrlSafe(byte[] src) {_		if (src == null || src.length == 0) {_			return src__		}_		return Base64.getUrlDecoder().decode(src)__	};base64,decode,the,given,byte,array,using,the,rfc,4648,url,and,filename,safe,alphabet,param,src,the,encoded,byte,array,may,be,code,null,return,the,original,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime,since,4,2,4;public,static,byte,decode,url,safe,byte,src,if,src,null,src,length,0,return,src,return,base64,get,url,decoder,decode,src
Base64Utils -> public static byte[] decodeUrlSafe(byte[] src);1506097334;Base64-decode the given byte array using the RFC 4648_"URL and Filename Safe Alphabet"._@param src the encoded byte array_@return the original byte array_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime_@since 4.2.4;public static byte[] decodeUrlSafe(byte[] src) {_		if (src.length == 0) {_			return src__		}_		return Base64.getUrlDecoder().decode(src)__	};base64,decode,the,given,byte,array,using,the,rfc,4648,url,and,filename,safe,alphabet,param,src,the,encoded,byte,array,return,the,original,byte,array,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime,since,4,2,4;public,static,byte,decode,url,safe,byte,src,if,src,length,0,return,src,return,base64,get,url,decoder,decode,src
Base64Utils -> public static byte[] decodeUrlSafe(byte[] src);1533736265;Base64-decode the given byte array using the RFC 4648_"URL and Filename Safe Alphabet"._@param src the encoded byte array_@return the original byte array_@since 4.2.4;public static byte[] decodeUrlSafe(byte[] src) {_		if (src.length == 0) {_			return src__		}_		return Base64.getUrlDecoder().decode(src)__	};base64,decode,the,given,byte,array,using,the,rfc,4648,url,and,filename,safe,alphabet,param,src,the,encoded,byte,array,return,the,original,byte,array,since,4,2,4;public,static,byte,decode,url,safe,byte,src,if,src,length,0,return,src,return,base64,get,url,decoder,decode,src
Base64Utils -> public static String encodeToString(byte[] src);1401880931;Base64-encode the given byte array to a String._@param src the original byte array (may be {@code null})_@return the encoded byte array as a UTF-8 String_(or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding is not supported,_i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static String encodeToString(byte[] src) {_		assertSupported()__		if (src == null) {_			return null__		}_		if (src.length == 0) {_			return ""__		}_		return new String(delegate.encode(src), DEFAULT_CHARSET)__	};base64,encode,the,given,byte,array,to,a,string,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,as,a,utf,8,string,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,string,encode,to,string,byte,src,assert,supported,if,src,null,return,null,if,src,length,0,return,return,new,string,delegate,encode,src
Base64Utils -> public static String encodeToString(byte[] src);1401910463;Base64-encode the given byte array to a String._@param src the original byte array (may be {@code null})_@return the encoded byte array as a UTF-8 String_(or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding is not supported,_i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static String encodeToString(byte[] src) {_		assertSupported()__		if (src == null) {_			return null__		}_		if (src.length == 0) {_			return ""__		}_		return new String(delegate.encode(src), DEFAULT_CHARSET)__	};base64,encode,the,given,byte,array,to,a,string,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,as,a,utf,8,string,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,string,encode,to,string,byte,src,assert,supported,if,src,null,return,null,if,src,length,0,return,return,new,string,delegate,encode,src
Base64Utils -> public static String encodeToString(byte[] src);1434925953;Base64-encode the given byte array to a String._@param src the original byte array (may be {@code null})_@return the encoded byte array as a UTF-8 String_(or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding is not supported,_i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static String encodeToString(byte[] src) {_		assertSupported()__		if (src == null) {_			return null__		}_		if (src.length == 0) {_			return ""__		}_		return new String(delegate.encode(src), DEFAULT_CHARSET)__	};base64,encode,the,given,byte,array,to,a,string,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,as,a,utf,8,string,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,string,encode,to,string,byte,src,assert,supported,if,src,null,return,null,if,src,length,0,return,return,new,string,delegate,encode,src
Base64Utils -> public static String encodeToString(byte[] src);1435349173;Base64-encode the given byte array to a String._@param src the original byte array (may be {@code null})_@return the encoded byte array as a UTF-8 String_(or {@code null} if the input was {@code null});public static String encodeToString(byte[] src) {_		if (src == null) {_			return null__		}_		if (src.length == 0) {_			return ""__		}__		if (delegate != null) {_			_			return new String(delegate.encode(src), DEFAULT_CHARSET)__		}_		else {_			_			return DatatypeConverter.printBase64Binary(src)__		}_	};base64,encode,the,given,byte,array,to,a,string,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,as,a,utf,8,string,or,code,null,if,the,input,was,code,null;public,static,string,encode,to,string,byte,src,if,src,null,return,null,if,src,length,0,return,if,delegate,null,return,new,string,delegate,encode,src,else,return,datatype,converter,print,base64binary,src
Base64Utils -> public static String encodeToString(byte[] src);1449866984;Base64-encode the given byte array to a String._@param src the original byte array (may be {@code null})_@return the encoded byte array as a UTF-8 String_(or {@code null} if the input was {@code null});public static String encodeToString(byte[] src) {_		if (src == null) {_			return null__		}_		if (src.length == 0) {_			return ""__		}__		if (delegate != null) {_			_			return new String(delegate.encode(src), DEFAULT_CHARSET)__		}_		else {_			_			return DatatypeConverter.printBase64Binary(src)__		}_	};base64,encode,the,given,byte,array,to,a,string,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,as,a,utf,8,string,or,code,null,if,the,input,was,code,null;public,static,string,encode,to,string,byte,src,if,src,null,return,null,if,src,length,0,return,if,delegate,null,return,new,string,delegate,encode,src,else,return,datatype,converter,print,base64binary,src
Base64Utils -> public static String encodeToString(byte[] src);1449867386;Base64-encode the given byte array to a String._@param src the original byte array (may be {@code null})_@return the encoded byte array as a UTF-8 String_(or {@code null} if the input was {@code null});public static String encodeToString(byte[] src) {_		if (src == null) {_			return null__		}_		if (src.length == 0) {_			return ""__		}__		if (delegate != null) {_			_			return new String(delegate.encode(src), DEFAULT_CHARSET)__		}_		else {_			_			return DatatypeConverter.printBase64Binary(src)__		}_	};base64,encode,the,given,byte,array,to,a,string,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,as,a,utf,8,string,or,code,null,if,the,input,was,code,null;public,static,string,encode,to,string,byte,src,if,src,null,return,null,if,src,length,0,return,if,delegate,null,return,new,string,delegate,encode,src,else,return,datatype,converter,print,base64binary,src
Base64Utils -> public static String encodeToString(byte[] src);1458311433;Base64-encode the given byte array to a String._@param src the original byte array (may be {@code null})_@return the encoded byte array as a UTF-8 String_(or {@code null} if the input was {@code null});public static String encodeToString(byte[] src) {_		if (src == null) {_			return null__		}_		if (src.length == 0) {_			return ""__		}__		if (delegate != null) {_			_			return new String(delegate.encode(src), DEFAULT_CHARSET)__		}_		else {_			_			return DatatypeConverter.printBase64Binary(src)__		}_	};base64,encode,the,given,byte,array,to,a,string,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,as,a,utf,8,string,or,code,null,if,the,input,was,code,null;public,static,string,encode,to,string,byte,src,if,src,null,return,null,if,src,length,0,return,if,delegate,null,return,new,string,delegate,encode,src,else,return,datatype,converter,print,base64binary,src
Base64Utils -> public static String encodeToString(byte[] src);1467677340;Base64-encode the given byte array to a String._@param src the original byte array (may be {@code null})_@return the encoded byte array as a UTF-8 String_(or {@code null} if the input was {@code null});public static String encodeToString(byte[] src) {_		if (src == null) {_			return null__		}_		if (src.length == 0) {_			return ""__		}_		return new String(encode(src), DEFAULT_CHARSET)__	};base64,encode,the,given,byte,array,to,a,string,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,as,a,utf,8,string,or,code,null,if,the,input,was,code,null;public,static,string,encode,to,string,byte,src,if,src,null,return,null,if,src,length,0,return,return,new,string,encode,src
Base64Utils -> public static String encodeToString(byte[] src);1468964586;Base64-encode the given byte array to a String._@param src the original byte array (may be {@code null})_@return the encoded byte array as a UTF-8 String_(or {@code null} if the input was {@code null});public static String encodeToString(byte[] src) {_		if (src == null) {_			return null__		}_		if (src.length == 0) {_			return ""__		}_		return new String(encode(src), DEFAULT_CHARSET)__	};base64,encode,the,given,byte,array,to,a,string,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,as,a,utf,8,string,or,code,null,if,the,input,was,code,null;public,static,string,encode,to,string,byte,src,if,src,null,return,null,if,src,length,0,return,return,new,string,encode,src
Base64Utils -> public static String encodeToString(byte[] src);1487760984;Base64-encode the given byte array to a String._@param src the original byte array (may be {@code null})_@return the encoded byte array as a UTF-8 String_(or {@code null} if the input was {@code null});public static String encodeToString(byte[] src) {_		if (src == null) {_			return null__		}_		if (src.length == 0) {_			return ""__		}_		return new String(encode(src), DEFAULT_CHARSET)__	};base64,encode,the,given,byte,array,to,a,string,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,as,a,utf,8,string,or,code,null,if,the,input,was,code,null;public,static,string,encode,to,string,byte,src,if,src,null,return,null,if,src,length,0,return,return,new,string,encode,src
Base64Utils -> public static String encodeToString(byte[] src);1496837955;Base64-encode the given byte array to a String._@param src the original byte array (may be {@code null})_@return the encoded byte array as a UTF-8 String;public static String encodeToString(byte[] src) {_		if (src.length == 0) {_			return ""__		}_		return new String(encode(src), DEFAULT_CHARSET)__	};base64,encode,the,given,byte,array,to,a,string,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,as,a,utf,8,string;public,static,string,encode,to,string,byte,src,if,src,length,0,return,return,new,string,encode,src
Base64Utils -> public static String encodeToString(byte[] src);1506097334;Base64-encode the given byte array to a String._@param src the original byte array (may be {@code null})_@return the encoded byte array as a UTF-8 String;public static String encodeToString(byte[] src) {_		if (src.length == 0) {_			return ""__		}_		return new String(encode(src), DEFAULT_CHARSET)__	};base64,encode,the,given,byte,array,to,a,string,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,as,a,utf,8,string;public,static,string,encode,to,string,byte,src,if,src,length,0,return,return,new,string,encode,src
Base64Utils -> public static String encodeToString(byte[] src);1533736265;Base64-encode the given byte array to a String._@param src the original byte array (may be {@code null})_@return the encoded byte array as a UTF-8 String;public static String encodeToString(byte[] src) {_		if (src.length == 0) {_			return ""__		}_		return new String(encode(src), DEFAULT_CHARSET)__	};base64,encode,the,given,byte,array,to,a,string,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,as,a,utf,8,string;public,static,string,encode,to,string,byte,src,if,src,length,0,return,return,new,string,encode,src
Base64Utils -> public static byte[] decode(byte[] src);1401880931;Base64-decode the given byte array._@param src the encoded byte array (may be {@code null})_@return the original byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding is not supported,_i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] decode(byte[] src) {_		assertSupported()__		return delegate.decode(src)__	};base64,decode,the,given,byte,array,param,src,the,encoded,byte,array,may,be,code,null,return,the,original,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,decode,byte,src,assert,supported,return,delegate,decode,src
Base64Utils -> public static byte[] decode(byte[] src);1401910463;Base64-decode the given byte array._@param src the encoded byte array (may be {@code null})_@return the original byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding is not supported,_i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] decode(byte[] src) {_		assertSupported()__		return delegate.decode(src)__	};base64,decode,the,given,byte,array,param,src,the,encoded,byte,array,may,be,code,null,return,the,original,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,decode,byte,src,assert,supported,return,delegate,decode,src
Base64Utils -> public static byte[] decode(byte[] src);1434925953;Base64-decode the given byte array._@param src the encoded byte array (may be {@code null})_@return the original byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding is not supported,_i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] decode(byte[] src) {_		assertSupported()__		return delegate.decode(src)__	};base64,decode,the,given,byte,array,param,src,the,encoded,byte,array,may,be,code,null,return,the,original,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,decode,byte,src,assert,supported,return,delegate,decode,src
Base64Utils -> public static byte[] decode(byte[] src);1435349173;Base64-decode the given byte array._@param src the encoded byte array (may be {@code null})_@return the original byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] decode(byte[] src) {_		assertDelegateAvailable()__		return delegate.decode(src)__	};base64,decode,the,given,byte,array,param,src,the,encoded,byte,array,may,be,code,null,return,the,original,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,decode,byte,src,assert,delegate,available,return,delegate,decode,src
Base64Utils -> public static byte[] decode(byte[] src);1449866984;Base64-decode the given byte array._@param src the encoded byte array (may be {@code null})_@return the original byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] decode(byte[] src) {_		assertDelegateAvailable()__		return delegate.decode(src)__	};base64,decode,the,given,byte,array,param,src,the,encoded,byte,array,may,be,code,null,return,the,original,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,decode,byte,src,assert,delegate,available,return,delegate,decode,src
Base64Utils -> public static byte[] decode(byte[] src);1449867386;Base64-decode the given byte array._@param src the encoded byte array (may be {@code null})_@return the original byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] decode(byte[] src) {_		assertDelegateAvailable()__		return delegate.decode(src)__	};base64,decode,the,given,byte,array,param,src,the,encoded,byte,array,may,be,code,null,return,the,original,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,decode,byte,src,assert,delegate,available,return,delegate,decode,src
Base64Utils -> public static byte[] decode(byte[] src);1458311433;Base64-decode the given byte array._@param src the encoded byte array (may be {@code null})_@return the original byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] decode(byte[] src) {_		assertDelegateAvailable()__		return delegate.decode(src)__	};base64,decode,the,given,byte,array,param,src,the,encoded,byte,array,may,be,code,null,return,the,original,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,decode,byte,src,assert,delegate,available,return,delegate,decode,src
Base64Utils -> public static byte[] decode(byte[] src);1467677340;Base64-decode the given byte array._@param src the encoded byte array (may be {@code null})_@return the original byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] decode(byte[] src) {_		if (src == null || src.length == 0) {_			return src__		}_		return Base64.getDecoder().decode(src)__	};base64,decode,the,given,byte,array,param,src,the,encoded,byte,array,may,be,code,null,return,the,original,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,decode,byte,src,if,src,null,src,length,0,return,src,return,base64,get,decoder,decode,src
Base64Utils -> public static byte[] decode(byte[] src);1468964586;Base64-decode the given byte array._@param src the encoded byte array (may be {@code null})_@return the original byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] decode(byte[] src) {_		if (src == null || src.length == 0) {_			return src__		}_		return Base64.getDecoder().decode(src)__	};base64,decode,the,given,byte,array,param,src,the,encoded,byte,array,may,be,code,null,return,the,original,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,decode,byte,src,if,src,null,src,length,0,return,src,return,base64,get,decoder,decode,src
Base64Utils -> public static byte[] decode(byte[] src);1487760984;Base64-decode the given byte array._@param src the encoded byte array (may be {@code null})_@return the original byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] decode(byte[] src) {_		if (src == null || src.length == 0) {_			return src__		}_		return Base64.getDecoder().decode(src)__	};base64,decode,the,given,byte,array,param,src,the,encoded,byte,array,may,be,code,null,return,the,original,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,decode,byte,src,if,src,null,src,length,0,return,src,return,base64,get,decoder,decode,src
Base64Utils -> public static byte[] decode(byte[] src);1496837955;Base64-decode the given byte array._@param src the encoded byte array_@return the original byte array_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] decode(byte[] src) {_		if (src.length == 0) {_			return src__		}_		return Base64.getDecoder().decode(src)__	};base64,decode,the,given,byte,array,param,src,the,encoded,byte,array,return,the,original,byte,array,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,decode,byte,src,if,src,length,0,return,src,return,base64,get,decoder,decode,src
Base64Utils -> public static byte[] decode(byte[] src);1506097334;Base64-decode the given byte array._@param src the encoded byte array_@return the original byte array_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] decode(byte[] src) {_		if (src.length == 0) {_			return src__		}_		return Base64.getDecoder().decode(src)__	};base64,decode,the,given,byte,array,param,src,the,encoded,byte,array,return,the,original,byte,array,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,decode,byte,src,if,src,length,0,return,src,return,base64,get,decoder,decode,src
Base64Utils -> public static byte[] decode(byte[] src);1533736265;Base64-decode the given byte array._@param src the encoded byte array_@return the original byte array;public static byte[] decode(byte[] src) {_		if (src.length == 0) {_			return src__		}_		return Base64.getDecoder().decode(src)__	};base64,decode,the,given,byte,array,param,src,the,encoded,byte,array,return,the,original,byte,array;public,static,byte,decode,byte,src,if,src,length,0,return,src,return,base64,get,decoder,decode,src
Base64Utils -> public static byte[] decodeFromUrlSafeString(String src);1449866984;Base64-decode the given byte array from an UTF-8 String using the RFC 4868_"URL and Filename Safe Alphabet"._@param src the encoded UTF-8 String (may be {@code null})_@return the original byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] decodeFromUrlSafeString(String src) {_		assertDelegateAvailable()__		return delegate.decodeUrlSafe(src.getBytes(DEFAULT_CHARSET))__	};base64,decode,the,given,byte,array,from,an,utf,8,string,using,the,rfc,4868,url,and,filename,safe,alphabet,param,src,the,encoded,utf,8,string,may,be,code,null,return,the,original,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,decode,from,url,safe,string,string,src,assert,delegate,available,return,delegate,decode,url,safe,src,get,bytes
Base64Utils -> public static byte[] decodeFromUrlSafeString(String src);1449867386;Base64-decode the given byte array from an UTF-8 String using the RFC 4868_"URL and Filename Safe Alphabet"._@param src the encoded UTF-8 String (may be {@code null})_@return the original byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] decodeFromUrlSafeString(String src) {_		assertDelegateAvailable()__		return delegate.decodeUrlSafe(src.getBytes(DEFAULT_CHARSET))__	};base64,decode,the,given,byte,array,from,an,utf,8,string,using,the,rfc,4868,url,and,filename,safe,alphabet,param,src,the,encoded,utf,8,string,may,be,code,null,return,the,original,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,decode,from,url,safe,string,string,src,assert,delegate,available,return,delegate,decode,url,safe,src,get,bytes
Base64Utils -> public static byte[] decodeFromUrlSafeString(String src);1458311433;Base64-decode the given byte array from an UTF-8 String using the RFC 4648_"URL and Filename Safe Alphabet"._@param src the encoded UTF-8 String (may be {@code null})_@return the original byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] decodeFromUrlSafeString(String src) {_		assertDelegateAvailable()__		return delegate.decodeUrlSafe(src.getBytes(DEFAULT_CHARSET))__	};base64,decode,the,given,byte,array,from,an,utf,8,string,using,the,rfc,4648,url,and,filename,safe,alphabet,param,src,the,encoded,utf,8,string,may,be,code,null,return,the,original,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,decode,from,url,safe,string,string,src,assert,delegate,available,return,delegate,decode,url,safe,src,get,bytes
Base64Utils -> public static byte[] decodeFromUrlSafeString(String src);1467677340;Base64-decode the given byte array from an UTF-8 String using the RFC 4648_"URL and Filename Safe Alphabet"._@param src the encoded UTF-8 String (may be {@code null})_@return the original byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] decodeFromUrlSafeString(String src) {_		return decodeUrlSafe(src.getBytes(DEFAULT_CHARSET))__	};base64,decode,the,given,byte,array,from,an,utf,8,string,using,the,rfc,4648,url,and,filename,safe,alphabet,param,src,the,encoded,utf,8,string,may,be,code,null,return,the,original,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,decode,from,url,safe,string,string,src,return,decode,url,safe,src,get,bytes
Base64Utils -> public static byte[] decodeFromUrlSafeString(String src);1468964586;Base64-decode the given byte array from an UTF-8 String using the RFC 4648_"URL and Filename Safe Alphabet"._@param src the encoded UTF-8 String (may be {@code null})_@return the original byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] decodeFromUrlSafeString(String src) {_		return decodeUrlSafe(src.getBytes(DEFAULT_CHARSET))__	};base64,decode,the,given,byte,array,from,an,utf,8,string,using,the,rfc,4648,url,and,filename,safe,alphabet,param,src,the,encoded,utf,8,string,may,be,code,null,return,the,original,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,decode,from,url,safe,string,string,src,return,decode,url,safe,src,get,bytes
Base64Utils -> public static byte[] decodeFromUrlSafeString(String src);1487760984;Base64-decode the given byte array from an UTF-8 String using the RFC 4648_"URL and Filename Safe Alphabet"._@param src the encoded UTF-8 String (may be {@code null})_@return the original byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] decodeFromUrlSafeString(String src) {_		return decodeUrlSafe(src.getBytes(DEFAULT_CHARSET))__	};base64,decode,the,given,byte,array,from,an,utf,8,string,using,the,rfc,4648,url,and,filename,safe,alphabet,param,src,the,encoded,utf,8,string,may,be,code,null,return,the,original,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,decode,from,url,safe,string,string,src,return,decode,url,safe,src,get,bytes
Base64Utils -> public static byte[] decodeFromUrlSafeString(String src);1506097334;Base64-decode the given byte array from an UTF-8 String using the RFC 4648_"URL and Filename Safe Alphabet"._@param src the encoded UTF-8 String_@return the original byte array_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] decodeFromUrlSafeString(String src) {_		return decodeUrlSafe(src.getBytes(DEFAULT_CHARSET))__	};base64,decode,the,given,byte,array,from,an,utf,8,string,using,the,rfc,4648,url,and,filename,safe,alphabet,param,src,the,encoded,utf,8,string,return,the,original,byte,array,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,decode,from,url,safe,string,string,src,return,decode,url,safe,src,get,bytes
Base64Utils -> public static byte[] decodeFromUrlSafeString(String src);1533736265;Base64-decode the given byte array from an UTF-8 String using the RFC 4648_"URL and Filename Safe Alphabet"._@param src the encoded UTF-8 String_@return the original byte array;public static byte[] decodeFromUrlSafeString(String src) {_		return decodeUrlSafe(src.getBytes(DEFAULT_CHARSET))__	};base64,decode,the,given,byte,array,from,an,utf,8,string,using,the,rfc,4648,url,and,filename,safe,alphabet,param,src,the,encoded,utf,8,string,return,the,original,byte,array;public,static,byte,decode,from,url,safe,string,string,src,return,decode,url,safe,src,get,bytes
Base64Utils -> public static byte[] decodeFromString(String src);1401880931;Base64-decode the given byte array from an UTF-8 String._@param src the encoded UTF-8 String (may be {@code null})_@return the original byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding is not supported,_i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] decodeFromString(String src) {_		assertSupported()__		if (src == null) {_			return null__		}_		if (src.length() == 0) {_			return new byte[0]__		}_		return delegate.decode(src.getBytes(DEFAULT_CHARSET))__	};base64,decode,the,given,byte,array,from,an,utf,8,string,param,src,the,encoded,utf,8,string,may,be,code,null,return,the,original,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,decode,from,string,string,src,assert,supported,if,src,null,return,null,if,src,length,0,return,new,byte,0,return,delegate,decode,src,get,bytes
Base64Utils -> public static byte[] decodeFromString(String src);1401910463;Base64-decode the given byte array from an UTF-8 String._@param src the encoded UTF-8 String (may be {@code null})_@return the original byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding is not supported,_i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] decodeFromString(String src) {_		assertSupported()__		if (src == null) {_			return null__		}_		if (src.length() == 0) {_			return new byte[0]__		}_		return delegate.decode(src.getBytes(DEFAULT_CHARSET))__	};base64,decode,the,given,byte,array,from,an,utf,8,string,param,src,the,encoded,utf,8,string,may,be,code,null,return,the,original,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,decode,from,string,string,src,assert,supported,if,src,null,return,null,if,src,length,0,return,new,byte,0,return,delegate,decode,src,get,bytes
Base64Utils -> public static byte[] decodeFromString(String src);1434925953;Base64-decode the given byte array from an UTF-8 String._@param src the encoded UTF-8 String (may be {@code null})_@return the original byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding is not supported,_i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] decodeFromString(String src) {_		assertSupported()__		if (src == null) {_			return null__		}_		if (src.length() == 0) {_			return new byte[0]__		}_		return delegate.decode(src.getBytes(DEFAULT_CHARSET))__	};base64,decode,the,given,byte,array,from,an,utf,8,string,param,src,the,encoded,utf,8,string,may,be,code,null,return,the,original,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,decode,from,string,string,src,assert,supported,if,src,null,return,null,if,src,length,0,return,new,byte,0,return,delegate,decode,src,get,bytes
Base64Utils -> public static byte[] decodeFromString(String src);1435349173;Base64-decode the given byte array from an UTF-8 String._@param src the encoded UTF-8 String (may be {@code null})_@return the original byte array (or {@code null} if the input was {@code null});public static byte[] decodeFromString(String src) {_		if (src == null) {_			return null__		}_		if (src.length() == 0) {_			return new byte[0]__		}__		if (delegate != null) {_			_			return delegate.decode(src.getBytes(DEFAULT_CHARSET))__		}_		else {_			_			return DatatypeConverter.parseBase64Binary(src)__		}_	};base64,decode,the,given,byte,array,from,an,utf,8,string,param,src,the,encoded,utf,8,string,may,be,code,null,return,the,original,byte,array,or,code,null,if,the,input,was,code,null;public,static,byte,decode,from,string,string,src,if,src,null,return,null,if,src,length,0,return,new,byte,0,if,delegate,null,return,delegate,decode,src,get,bytes,else,return,datatype,converter,parse,base64binary,src
Base64Utils -> public static byte[] decodeFromString(String src);1449866984;Base64-decode the given byte array from an UTF-8 String._@param src the encoded UTF-8 String (may be {@code null})_@return the original byte array (or {@code null} if the input was {@code null});public static byte[] decodeFromString(String src) {_		if (src == null) {_			return null__		}_		if (src.length() == 0) {_			return new byte[0]__		}__		if (delegate != null) {_			_			return delegate.decode(src.getBytes(DEFAULT_CHARSET))__		}_		else {_			_			return DatatypeConverter.parseBase64Binary(src)__		}_	};base64,decode,the,given,byte,array,from,an,utf,8,string,param,src,the,encoded,utf,8,string,may,be,code,null,return,the,original,byte,array,or,code,null,if,the,input,was,code,null;public,static,byte,decode,from,string,string,src,if,src,null,return,null,if,src,length,0,return,new,byte,0,if,delegate,null,return,delegate,decode,src,get,bytes,else,return,datatype,converter,parse,base64binary,src
Base64Utils -> public static byte[] decodeFromString(String src);1449867386;Base64-decode the given byte array from an UTF-8 String._@param src the encoded UTF-8 String (may be {@code null})_@return the original byte array (or {@code null} if the input was {@code null});public static byte[] decodeFromString(String src) {_		if (src == null) {_			return null__		}_		if (src.length() == 0) {_			return new byte[0]__		}__		if (delegate != null) {_			_			return delegate.decode(src.getBytes(DEFAULT_CHARSET))__		}_		else {_			_			return DatatypeConverter.parseBase64Binary(src)__		}_	};base64,decode,the,given,byte,array,from,an,utf,8,string,param,src,the,encoded,utf,8,string,may,be,code,null,return,the,original,byte,array,or,code,null,if,the,input,was,code,null;public,static,byte,decode,from,string,string,src,if,src,null,return,null,if,src,length,0,return,new,byte,0,if,delegate,null,return,delegate,decode,src,get,bytes,else,return,datatype,converter,parse,base64binary,src
Base64Utils -> public static byte[] decodeFromString(String src);1458311433;Base64-decode the given byte array from an UTF-8 String._@param src the encoded UTF-8 String (may be {@code null})_@return the original byte array (or {@code null} if the input was {@code null});public static byte[] decodeFromString(String src) {_		if (src == null) {_			return null__		}_		if (src.length() == 0) {_			return new byte[0]__		}__		if (delegate != null) {_			_			return delegate.decode(src.getBytes(DEFAULT_CHARSET))__		}_		else {_			_			return DatatypeConverter.parseBase64Binary(src)__		}_	};base64,decode,the,given,byte,array,from,an,utf,8,string,param,src,the,encoded,utf,8,string,may,be,code,null,return,the,original,byte,array,or,code,null,if,the,input,was,code,null;public,static,byte,decode,from,string,string,src,if,src,null,return,null,if,src,length,0,return,new,byte,0,if,delegate,null,return,delegate,decode,src,get,bytes,else,return,datatype,converter,parse,base64binary,src
Base64Utils -> public static byte[] decodeFromString(String src);1467677340;Base64-decode the given byte array from an UTF-8 String._@param src the encoded UTF-8 String (may be {@code null})_@return the original byte array (or {@code null} if the input was {@code null});public static byte[] decodeFromString(String src) {_		if (src == null) {_			return null__		}_		if (src.length() == 0) {_			return new byte[0]__		}_		return decode(src.getBytes(DEFAULT_CHARSET))__	};base64,decode,the,given,byte,array,from,an,utf,8,string,param,src,the,encoded,utf,8,string,may,be,code,null,return,the,original,byte,array,or,code,null,if,the,input,was,code,null;public,static,byte,decode,from,string,string,src,if,src,null,return,null,if,src,length,0,return,new,byte,0,return,decode,src,get,bytes
Base64Utils -> public static byte[] decodeFromString(String src);1468964586;Base64-decode the given byte array from an UTF-8 String._@param src the encoded UTF-8 String (may be {@code null})_@return the original byte array (or {@code null} if the input was {@code null});public static byte[] decodeFromString(String src) {_		if (src == null) {_			return null__		}_		if (src.length() == 0) {_			return new byte[0]__		}_		return decode(src.getBytes(DEFAULT_CHARSET))__	};base64,decode,the,given,byte,array,from,an,utf,8,string,param,src,the,encoded,utf,8,string,may,be,code,null,return,the,original,byte,array,or,code,null,if,the,input,was,code,null;public,static,byte,decode,from,string,string,src,if,src,null,return,null,if,src,length,0,return,new,byte,0,return,decode,src,get,bytes
Base64Utils -> public static byte[] decodeFromString(String src);1487760984;Base64-decode the given byte array from an UTF-8 String._@param src the encoded UTF-8 String (may be {@code null})_@return the original byte array (or {@code null} if the input was {@code null});public static byte[] decodeFromString(String src) {_		if (src == null) {_			return null__		}_		if (src.isEmpty()) {_			return new byte[0]__		}_		return decode(src.getBytes(DEFAULT_CHARSET))__	};base64,decode,the,given,byte,array,from,an,utf,8,string,param,src,the,encoded,utf,8,string,may,be,code,null,return,the,original,byte,array,or,code,null,if,the,input,was,code,null;public,static,byte,decode,from,string,string,src,if,src,null,return,null,if,src,is,empty,return,new,byte,0,return,decode,src,get,bytes
Base64Utils -> public static byte[] decodeFromString(String src);1496837955;Base64-decode the given byte array from an UTF-8 String._@param src the encoded UTF-8 String_@return the original byte array;public static byte[] decodeFromString(String src) {_		if (src.isEmpty()) {_			return new byte[0]__		}_		return decode(src.getBytes(DEFAULT_CHARSET))__	};base64,decode,the,given,byte,array,from,an,utf,8,string,param,src,the,encoded,utf,8,string,return,the,original,byte,array;public,static,byte,decode,from,string,string,src,if,src,is,empty,return,new,byte,0,return,decode,src,get,bytes
Base64Utils -> public static byte[] decodeFromString(String src);1506097334;Base64-decode the given byte array from an UTF-8 String._@param src the encoded UTF-8 String_@return the original byte array;public static byte[] decodeFromString(String src) {_		if (src.isEmpty()) {_			return new byte[0]__		}_		return decode(src.getBytes(DEFAULT_CHARSET))__	};base64,decode,the,given,byte,array,from,an,utf,8,string,param,src,the,encoded,utf,8,string,return,the,original,byte,array;public,static,byte,decode,from,string,string,src,if,src,is,empty,return,new,byte,0,return,decode,src,get,bytes
Base64Utils -> public static byte[] decodeFromString(String src);1533736265;Base64-decode the given byte array from an UTF-8 String._@param src the encoded UTF-8 String_@return the original byte array;public static byte[] decodeFromString(String src) {_		if (src.isEmpty()) {_			return new byte[0]__		}_		return decode(src.getBytes(DEFAULT_CHARSET))__	};base64,decode,the,given,byte,array,from,an,utf,8,string,param,src,the,encoded,utf,8,string,return,the,original,byte,array;public,static,byte,decode,from,string,string,src,if,src,is,empty,return,new,byte,0,return,decode,src,get,bytes
Base64Utils -> @Nullable 	public static byte[] decodeUrlSafe(@Nullable byte[] src);1495868221;Base64-decode the given byte array using the RFC 4648_"URL and Filename Safe Alphabet"._@param src the encoded byte array (may be {@code null})_@return the original byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime_@since 4.2.4;@Nullable_	public static byte[] decodeUrlSafe(@Nullable byte[] src) {_		if (src == null || src.length == 0) {_			return src__		}_		return Base64.getUrlDecoder().decode(src)__	};base64,decode,the,given,byte,array,using,the,rfc,4648,url,and,filename,safe,alphabet,param,src,the,encoded,byte,array,may,be,code,null,return,the,original,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime,since,4,2,4;nullable,public,static,byte,decode,url,safe,nullable,byte,src,if,src,null,src,length,0,return,src,return,base64,get,url,decoder,decode,src
Base64Utils -> @Nullable 	public static byte[] decodeUrlSafe(@Nullable byte[] src);1496837955;Base64-decode the given byte array using the RFC 4648_"URL and Filename Safe Alphabet"._@param src the encoded byte array_@return the original byte array_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime_@since 4.2.4;@Nullable_	public static byte[] decodeUrlSafe(@Nullable byte[] src) {_		if (src == null || src.length == 0) {_			return src__		}_		return Base64.getUrlDecoder().decode(src)__	};base64,decode,the,given,byte,array,using,the,rfc,4648,url,and,filename,safe,alphabet,param,src,the,encoded,byte,array,return,the,original,byte,array,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime,since,4,2,4;nullable,public,static,byte,decode,url,safe,nullable,byte,src,if,src,null,src,length,0,return,src,return,base64,get,url,decoder,decode,src
Base64Utils -> public static String encodeToUrlSafeString(byte[] src);1449866984;Base64-encode the given byte array to a String using the RFC 4868_"URL and Filename Safe Alphabet"._@param src the original byte array (may be {@code null})_@return the encoded byte array as a UTF-8 String_(or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static String encodeToUrlSafeString(byte[] src) {_		assertDelegateAvailable()__		return new String(delegate.encodeUrlSafe(src), DEFAULT_CHARSET)__	};base64,encode,the,given,byte,array,to,a,string,using,the,rfc,4868,url,and,filename,safe,alphabet,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,as,a,utf,8,string,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,string,encode,to,url,safe,string,byte,src,assert,delegate,available,return,new,string,delegate,encode,url,safe,src
Base64Utils -> public static String encodeToUrlSafeString(byte[] src);1449867386;Base64-encode the given byte array to a String using the RFC 4868_"URL and Filename Safe Alphabet"._@param src the original byte array (may be {@code null})_@return the encoded byte array as a UTF-8 String_(or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static String encodeToUrlSafeString(byte[] src) {_		assertDelegateAvailable()__		return new String(delegate.encodeUrlSafe(src), DEFAULT_CHARSET)__	};base64,encode,the,given,byte,array,to,a,string,using,the,rfc,4868,url,and,filename,safe,alphabet,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,as,a,utf,8,string,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,string,encode,to,url,safe,string,byte,src,assert,delegate,available,return,new,string,delegate,encode,url,safe,src
Base64Utils -> public static String encodeToUrlSafeString(byte[] src);1458311433;Base64-encode the given byte array to a String using the RFC 4648_"URL and Filename Safe Alphabet"._@param src the original byte array (may be {@code null})_@return the encoded byte array as a UTF-8 String_(or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static String encodeToUrlSafeString(byte[] src) {_		assertDelegateAvailable()__		return new String(delegate.encodeUrlSafe(src), DEFAULT_CHARSET)__	};base64,encode,the,given,byte,array,to,a,string,using,the,rfc,4648,url,and,filename,safe,alphabet,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,as,a,utf,8,string,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,string,encode,to,url,safe,string,byte,src,assert,delegate,available,return,new,string,delegate,encode,url,safe,src
Base64Utils -> public static String encodeToUrlSafeString(byte[] src);1467677340;Base64-encode the given byte array to a String using the RFC 4648_"URL and Filename Safe Alphabet"._@param src the original byte array (may be {@code null})_@return the encoded byte array as a UTF-8 String_(or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static String encodeToUrlSafeString(byte[] src) {_		return new String(encodeUrlSafe(src), DEFAULT_CHARSET)__	};base64,encode,the,given,byte,array,to,a,string,using,the,rfc,4648,url,and,filename,safe,alphabet,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,as,a,utf,8,string,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,string,encode,to,url,safe,string,byte,src,return,new,string,encode,url,safe,src
Base64Utils -> public static String encodeToUrlSafeString(byte[] src);1468964586;Base64-encode the given byte array to a String using the RFC 4648_"URL and Filename Safe Alphabet"._@param src the original byte array (may be {@code null})_@return the encoded byte array as a UTF-8 String_(or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static String encodeToUrlSafeString(byte[] src) {_		return new String(encodeUrlSafe(src), DEFAULT_CHARSET)__	};base64,encode,the,given,byte,array,to,a,string,using,the,rfc,4648,url,and,filename,safe,alphabet,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,as,a,utf,8,string,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,string,encode,to,url,safe,string,byte,src,return,new,string,encode,url,safe,src
Base64Utils -> public static String encodeToUrlSafeString(byte[] src);1487760984;Base64-encode the given byte array to a String using the RFC 4648_"URL and Filename Safe Alphabet"._@param src the original byte array (may be {@code null})_@return the encoded byte array as a UTF-8 String_(or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static String encodeToUrlSafeString(byte[] src) {_		return new String(encodeUrlSafe(src), DEFAULT_CHARSET)__	};base64,encode,the,given,byte,array,to,a,string,using,the,rfc,4648,url,and,filename,safe,alphabet,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,as,a,utf,8,string,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,string,encode,to,url,safe,string,byte,src,return,new,string,encode,url,safe,src
Base64Utils -> public static String encodeToUrlSafeString(byte[] src);1506097334;Base64-encode the given byte array to a String using the RFC 4648_"URL and Filename Safe Alphabet"._@param src the original byte array_@return the encoded byte array as a UTF-8 String_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static String encodeToUrlSafeString(byte[] src) {_		return new String(encodeUrlSafe(src), DEFAULT_CHARSET)__	};base64,encode,the,given,byte,array,to,a,string,using,the,rfc,4648,url,and,filename,safe,alphabet,param,src,the,original,byte,array,return,the,encoded,byte,array,as,a,utf,8,string,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,string,encode,to,url,safe,string,byte,src,return,new,string,encode,url,safe,src
Base64Utils -> public static String encodeToUrlSafeString(byte[] src);1533736265;Base64-encode the given byte array to a String using the RFC 4648_"URL and Filename Safe Alphabet"._@param src the original byte array_@return the encoded byte array as a UTF-8 String;public static String encodeToUrlSafeString(byte[] src) {_		return new String(encodeUrlSafe(src), DEFAULT_CHARSET)__	};base64,encode,the,given,byte,array,to,a,string,using,the,rfc,4648,url,and,filename,safe,alphabet,param,src,the,original,byte,array,return,the,encoded,byte,array,as,a,utf,8,string;public,static,string,encode,to,url,safe,string,byte,src,return,new,string,encode,url,safe,src
Base64Utils -> private static void assertSupported();1401880931;Assert that Byte64 encoding is actually supported._@throws IllegalStateException if neither Java 8 nor Apache Commons Codec is present;private static void assertSupported() {_		Assert.state(delegate != null, "Neither Java 8 nor Apache Commons Codec found - Base64 encoding not supported")__	};assert,that,byte64,encoding,is,actually,supported,throws,illegal,state,exception,if,neither,java,8,nor,apache,commons,codec,is,present;private,static,void,assert,supported,assert,state,delegate,null,neither,java,8,nor,apache,commons,codec,found,base64,encoding,not,supported
Base64Utils -> private static void assertSupported();1401910463;Assert that Byte64 encoding is actually supported._@throws IllegalStateException if neither Java 8 nor Apache Commons Codec is present;private static void assertSupported() {_		Assert.state(delegate != null, "Neither Java 8 nor Apache Commons Codec found - Base64 encoding not supported")__	};assert,that,byte64,encoding,is,actually,supported,throws,illegal,state,exception,if,neither,java,8,nor,apache,commons,codec,is,present;private,static,void,assert,supported,assert,state,delegate,null,neither,java,8,nor,apache,commons,codec,found,base64,encoding,not,supported
Base64Utils -> private static void assertSupported();1434925953;Assert that Byte64 encoding is actually supported._@throws IllegalStateException if neither Java 8 nor Apache Commons Codec is present;private static void assertSupported() {_		Assert.state(delegate != null, "Neither Java 8 nor Apache Commons Codec found - Base64 encoding not supported")__	};assert,that,byte64,encoding,is,actually,supported,throws,illegal,state,exception,if,neither,java,8,nor,apache,commons,codec,is,present;private,static,void,assert,supported,assert,state,delegate,null,neither,java,8,nor,apache,commons,codec,found,base64,encoding,not,supported
Base64Utils -> public static byte[] encodeUrlSafe(byte[] src);1449866984;Base64-encode the given byte array using the RFC 4868_"URL and Filename Safe Alphabet"._@param src the original byte array (may be {@code null})_@return the encoded byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime;public static byte[] encodeUrlSafe(byte[] src) {_		assertDelegateAvailable()__		return delegate.encodeUrlSafe(src)__	};base64,encode,the,given,byte,array,using,the,rfc,4868,url,and,filename,safe,alphabet,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime;public,static,byte,encode,url,safe,byte,src,assert,delegate,available,return,delegate,encode,url,safe,src
Base64Utils -> public static byte[] encodeUrlSafe(byte[] src);1449867386;Base64-encode the given byte array using the RFC 4868_"URL and Filename Safe Alphabet"._@param src the original byte array (may be {@code null})_@return the encoded byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime_@since 4.2.4;public static byte[] encodeUrlSafe(byte[] src) {_		assertDelegateAvailable()__		return delegate.encodeUrlSafe(src)__	};base64,encode,the,given,byte,array,using,the,rfc,4868,url,and,filename,safe,alphabet,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime,since,4,2,4;public,static,byte,encode,url,safe,byte,src,assert,delegate,available,return,delegate,encode,url,safe,src
Base64Utils -> public static byte[] encodeUrlSafe(byte[] src);1458311433;Base64-encode the given byte array using the RFC 4648_"URL and Filename Safe Alphabet"._@param src the original byte array (may be {@code null})_@return the encoded byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime_@since 4.2.4;public static byte[] encodeUrlSafe(byte[] src) {_		assertDelegateAvailable()__		return delegate.encodeUrlSafe(src)__	};base64,encode,the,given,byte,array,using,the,rfc,4648,url,and,filename,safe,alphabet,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime,since,4,2,4;public,static,byte,encode,url,safe,byte,src,assert,delegate,available,return,delegate,encode,url,safe,src
Base64Utils -> public static byte[] encodeUrlSafe(byte[] src);1467677340;Base64-encode the given byte array using the RFC 4648_"URL and Filename Safe Alphabet"._@param src the original byte array (may be {@code null})_@return the encoded byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime_@since 4.2.4;public static byte[] encodeUrlSafe(byte[] src) {_		if (src == null || src.length == 0) {_			return src__		}_		return Base64.getUrlEncoder().encode(src)__	};base64,encode,the,given,byte,array,using,the,rfc,4648,url,and,filename,safe,alphabet,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime,since,4,2,4;public,static,byte,encode,url,safe,byte,src,if,src,null,src,length,0,return,src,return,base64,get,url,encoder,encode,src
Base64Utils -> public static byte[] encodeUrlSafe(byte[] src);1468964586;Base64-encode the given byte array using the RFC 4648_"URL and Filename Safe Alphabet"._@param src the original byte array (may be {@code null})_@return the encoded byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime_@since 4.2.4;public static byte[] encodeUrlSafe(byte[] src) {_		if (src == null || src.length == 0) {_			return src__		}_		return Base64.getUrlEncoder().encode(src)__	};base64,encode,the,given,byte,array,using,the,rfc,4648,url,and,filename,safe,alphabet,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime,since,4,2,4;public,static,byte,encode,url,safe,byte,src,if,src,null,src,length,0,return,src,return,base64,get,url,encoder,encode,src
Base64Utils -> public static byte[] encodeUrlSafe(byte[] src);1487760984;Base64-encode the given byte array using the RFC 4648_"URL and Filename Safe Alphabet"._@param src the original byte array (may be {@code null})_@return the encoded byte array (or {@code null} if the input was {@code null})_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime_@since 4.2.4;public static byte[] encodeUrlSafe(byte[] src) {_		if (src == null || src.length == 0) {_			return src__		}_		return Base64.getUrlEncoder().encode(src)__	};base64,encode,the,given,byte,array,using,the,rfc,4648,url,and,filename,safe,alphabet,param,src,the,original,byte,array,may,be,code,null,return,the,encoded,byte,array,or,code,null,if,the,input,was,code,null,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime,since,4,2,4;public,static,byte,encode,url,safe,byte,src,if,src,null,src,length,0,return,src,return,base64,get,url,encoder,encode,src
Base64Utils -> public static byte[] encodeUrlSafe(byte[] src);1496837955;Base64-encode the given byte array using the RFC 4648_"URL and Filename Safe Alphabet"._@param src the original byte array_@return the encoded byte array_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime_@since 4.2.4;public static byte[] encodeUrlSafe(byte[] src) {_		if (src.length == 0) {_			return src__		}_		return Base64.getUrlEncoder().encode(src)__	};base64,encode,the,given,byte,array,using,the,rfc,4648,url,and,filename,safe,alphabet,param,src,the,original,byte,array,return,the,encoded,byte,array,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime,since,4,2,4;public,static,byte,encode,url,safe,byte,src,if,src,length,0,return,src,return,base64,get,url,encoder,encode,src
Base64Utils -> public static byte[] encodeUrlSafe(byte[] src);1506097334;Base64-encode the given byte array using the RFC 4648_"URL and Filename Safe Alphabet"._@param src the original byte array_@return the encoded byte array_@throws IllegalStateException if Base64 encoding between byte arrays is not_supported, i.e. neither Java 8 nor Apache Commons Codec is present at runtime_@since 4.2.4;public static byte[] encodeUrlSafe(byte[] src) {_		if (src.length == 0) {_			return src__		}_		return Base64.getUrlEncoder().encode(src)__	};base64,encode,the,given,byte,array,using,the,rfc,4648,url,and,filename,safe,alphabet,param,src,the,original,byte,array,return,the,encoded,byte,array,throws,illegal,state,exception,if,base64,encoding,between,byte,arrays,is,not,supported,i,e,neither,java,8,nor,apache,commons,codec,is,present,at,runtime,since,4,2,4;public,static,byte,encode,url,safe,byte,src,if,src,length,0,return,src,return,base64,get,url,encoder,encode,src
Base64Utils -> public static byte[] encodeUrlSafe(byte[] src);1533736265;Base64-encode the given byte array using the RFC 4648_"URL and Filename Safe Alphabet"._@param src the original byte array_@return the encoded byte array_@since 4.2.4;public static byte[] encodeUrlSafe(byte[] src) {_		if (src.length == 0) {_			return src__		}_		return Base64.getUrlEncoder().encode(src)__	};base64,encode,the,given,byte,array,using,the,rfc,4648,url,and,filename,safe,alphabet,param,src,the,original,byte,array,return,the,encoded,byte,array,since,4,2,4;public,static,byte,encode,url,safe,byte,src,if,src,length,0,return,src,return,base64,get,url,encoder,encode,src
