# id;timestamp;commentText;codeText;commentWords;codeWords
AnnotationTypeFilter -> public final Class<? extends Annotation> getAnnotationType();1472736647;Return the {@link Annotation} that this instance is using to filter_candidates._@since 5.0;public final Class<? extends Annotation> getAnnotationType() {_		return this.annotationType__	};return,the,link,annotation,that,this,instance,is,using,to,filter,candidates,since,5,0;public,final,class,extends,annotation,get,annotation,type,return,this,annotation,type
AnnotationTypeFilter -> public final Class<? extends Annotation> getAnnotationType();1495868221;Return the {@link Annotation} that this instance is using to filter_candidates._@since 5.0;public final Class<? extends Annotation> getAnnotationType() {_		return this.annotationType__	};return,the,link,annotation,that,this,instance,is,using,to,filter,candidates,since,5,0;public,final,class,extends,annotation,get,annotation,type,return,this,annotation,type
AnnotationTypeFilter -> public final Class<? extends Annotation> getAnnotationType();1502974979;Return the {@link Annotation} that this instance is using to filter_candidates._@since 5.0;public final Class<? extends Annotation> getAnnotationType() {_		return this.annotationType__	};return,the,link,annotation,that,this,instance,is,using,to,filter,candidates,since,5,0;public,final,class,extends,annotation,get,annotation,type,return,this,annotation,type
AnnotationTypeFilter -> public final Class<? extends Annotation> getAnnotationType();1522416703;Return the {@link Annotation} that this instance is using to filter_candidates._@since 5.0;public final Class<? extends Annotation> getAnnotationType() {_		return this.annotationType__	};return,the,link,annotation,that,this,instance,is,using,to,filter,candidates,since,5,0;public,final,class,extends,annotation,get,annotation,type,return,this,annotation,type
AnnotationTypeFilter -> public final Class<? extends Annotation> getAnnotationType();1522448294;Return the {@link Annotation} that this instance is using to filter_candidates._@since 5.0;public final Class<? extends Annotation> getAnnotationType() {_		return this.annotationType__	};return,the,link,annotation,that,this,instance,is,using,to,filter,candidates,since,5,0;public,final,class,extends,annotation,get,annotation,type,return,this,annotation,type
AnnotationTypeFilter -> public AnnotationTypeFilter( 			Class<? extends Annotation> annotationType, boolean considerMetaAnnotations, boolean considerInterfaces);1522416703;Create a new {@link AnnotationTypeFilter} for the given annotation type._@param annotationType the annotation type to match_@param considerMetaAnnotations whether to also match on meta-annotations_@param considerInterfaces whether to also match interfaces;public AnnotationTypeFilter(_			Class<? extends Annotation> annotationType, boolean considerMetaAnnotations, boolean considerInterfaces) {__		super(annotationType.isAnnotationPresent(Inherited.class), considerInterfaces)__		this.annotationType = annotationType__		this.considerMetaAnnotations = considerMetaAnnotations__	};create,a,new,link,annotation,type,filter,for,the,given,annotation,type,param,annotation,type,the,annotation,type,to,match,param,consider,meta,annotations,whether,to,also,match,on,meta,annotations,param,consider,interfaces,whether,to,also,match,interfaces;public,annotation,type,filter,class,extends,annotation,annotation,type,boolean,consider,meta,annotations,boolean,consider,interfaces,super,annotation,type,is,annotation,present,inherited,class,consider,interfaces,this,annotation,type,annotation,type,this,consider,meta,annotations,consider,meta,annotations
AnnotationTypeFilter -> public AnnotationTypeFilter( 			Class<? extends Annotation> annotationType, boolean considerMetaAnnotations, boolean considerInterfaces);1522448294;Create a new {@link AnnotationTypeFilter} for the given annotation type._@param annotationType the annotation type to match_@param considerMetaAnnotations whether to also match on meta-annotations_@param considerInterfaces whether to also match interfaces;public AnnotationTypeFilter(_			Class<? extends Annotation> annotationType, boolean considerMetaAnnotations, boolean considerInterfaces) {__		super(annotationType.isAnnotationPresent(Inherited.class), considerInterfaces)__		this.annotationType = annotationType__		this.considerMetaAnnotations = considerMetaAnnotations__	};create,a,new,link,annotation,type,filter,for,the,given,annotation,type,param,annotation,type,the,annotation,type,to,match,param,consider,meta,annotations,whether,to,also,match,on,meta,annotations,param,consider,interfaces,whether,to,also,match,interfaces;public,annotation,type,filter,class,extends,annotation,annotation,type,boolean,consider,meta,annotations,boolean,consider,interfaces,super,annotation,type,is,annotation,present,inherited,class,consider,interfaces,this,annotation,type,annotation,type,this,consider,meta,annotations,consider,meta,annotations
AnnotationTypeFilter -> public AnnotationTypeFilter(Class<? extends Annotation> annotationType);1328020251;Create a new AnnotationTypeFilter for the given annotation type._This filter will also match meta-annotations. To disable the_meta-annotation matching, use the constructor that accepts a_'<code>considerMetaAnnotations</code>' argument. The filter will_not match interfaces._@param annotationType the annotation type to match;public AnnotationTypeFilter(Class<? extends Annotation> annotationType) {_		this(annotationType, true)__	};create,a,new,annotation,type,filter,for,the,given,annotation,type,this,filter,will,also,match,meta,annotations,to,disable,the,meta,annotation,matching,use,the,constructor,that,accepts,a,code,consider,meta,annotations,code,argument,the,filter,will,not,match,interfaces,param,annotation,type,the,annotation,type,to,match;public,annotation,type,filter,class,extends,annotation,annotation,type,this,annotation,type,true
AnnotationTypeFilter -> public AnnotationTypeFilter(Class<? extends Annotation> annotationType);1356735495;Create a new AnnotationTypeFilter for the given annotation type._This filter will also match meta-annotations. To disable the_meta-annotation matching, use the constructor that accepts a_'{@code considerMetaAnnotations}' argument. The filter will_not match interfaces._@param annotationType the annotation type to match;public AnnotationTypeFilter(Class<? extends Annotation> annotationType) {_		this(annotationType, true)__	};create,a,new,annotation,type,filter,for,the,given,annotation,type,this,filter,will,also,match,meta,annotations,to,disable,the,meta,annotation,matching,use,the,constructor,that,accepts,a,code,consider,meta,annotations,argument,the,filter,will,not,match,interfaces,param,annotation,type,the,annotation,type,to,match;public,annotation,type,filter,class,extends,annotation,annotation,type,this,annotation,type,true
AnnotationTypeFilter -> public AnnotationTypeFilter(Class<? extends Annotation> annotationType);1398192396;Create a new AnnotationTypeFilter for the given annotation type._This filter will also match meta-annotations. To disable the_meta-annotation matching, use the constructor that accepts a_'{@code considerMetaAnnotations}' argument. The filter will_not match interfaces._@param annotationType the annotation type to match;public AnnotationTypeFilter(Class<? extends Annotation> annotationType) {_		this(annotationType, true, false)__	};create,a,new,annotation,type,filter,for,the,given,annotation,type,this,filter,will,also,match,meta,annotations,to,disable,the,meta,annotation,matching,use,the,constructor,that,accepts,a,code,consider,meta,annotations,argument,the,filter,will,not,match,interfaces,param,annotation,type,the,annotation,type,to,match;public,annotation,type,filter,class,extends,annotation,annotation,type,this,annotation,type,true,false
AnnotationTypeFilter -> public AnnotationTypeFilter(Class<? extends Annotation> annotationType);1398638841;Create a new AnnotationTypeFilter for the given annotation type._This filter will also match meta-annotations. To disable the_meta-annotation matching, use the constructor that accepts a_'{@code considerMetaAnnotations}' argument. The filter will_not match interfaces._@param annotationType the annotation type to match;public AnnotationTypeFilter(Class<? extends Annotation> annotationType) {_		this(annotationType, true, false)__	};create,a,new,annotation,type,filter,for,the,given,annotation,type,this,filter,will,also,match,meta,annotations,to,disable,the,meta,annotation,matching,use,the,constructor,that,accepts,a,code,consider,meta,annotations,argument,the,filter,will,not,match,interfaces,param,annotation,type,the,annotation,type,to,match;public,annotation,type,filter,class,extends,annotation,annotation,type,this,annotation,type,true,false
AnnotationTypeFilter -> public AnnotationTypeFilter(Class<? extends Annotation> annotationType);1430861700;Create a new AnnotationTypeFilter for the given annotation type._This filter will also match meta-annotations. To disable the_meta-annotation matching, use the constructor that accepts a_'{@code considerMetaAnnotations}' argument. The filter will_not match interfaces._@param annotationType the annotation type to match;public AnnotationTypeFilter(Class<? extends Annotation> annotationType) {_		this(annotationType, true, false)__	};create,a,new,annotation,type,filter,for,the,given,annotation,type,this,filter,will,also,match,meta,annotations,to,disable,the,meta,annotation,matching,use,the,constructor,that,accepts,a,code,consider,meta,annotations,argument,the,filter,will,not,match,interfaces,param,annotation,type,the,annotation,type,to,match;public,annotation,type,filter,class,extends,annotation,annotation,type,this,annotation,type,true,false
AnnotationTypeFilter -> public AnnotationTypeFilter(Class<? extends Annotation> annotationType);1472736647;Create a new AnnotationTypeFilter for the given annotation type._This filter will also match meta-annotations. To disable the_meta-annotation matching, use the constructor that accepts a_'{@code considerMetaAnnotations}' argument. The filter will_not match interfaces._@param annotationType the annotation type to match;public AnnotationTypeFilter(Class<? extends Annotation> annotationType) {_		this(annotationType, true, false)__	};create,a,new,annotation,type,filter,for,the,given,annotation,type,this,filter,will,also,match,meta,annotations,to,disable,the,meta,annotation,matching,use,the,constructor,that,accepts,a,code,consider,meta,annotations,argument,the,filter,will,not,match,interfaces,param,annotation,type,the,annotation,type,to,match;public,annotation,type,filter,class,extends,annotation,annotation,type,this,annotation,type,true,false
AnnotationTypeFilter -> public AnnotationTypeFilter(Class<? extends Annotation> annotationType);1495868221;Create a new AnnotationTypeFilter for the given annotation type._This filter will also match meta-annotations. To disable the_meta-annotation matching, use the constructor that accepts a_'{@code considerMetaAnnotations}' argument. The filter will_not match interfaces._@param annotationType the annotation type to match;public AnnotationTypeFilter(Class<? extends Annotation> annotationType) {_		this(annotationType, true, false)__	};create,a,new,annotation,type,filter,for,the,given,annotation,type,this,filter,will,also,match,meta,annotations,to,disable,the,meta,annotation,matching,use,the,constructor,that,accepts,a,code,consider,meta,annotations,argument,the,filter,will,not,match,interfaces,param,annotation,type,the,annotation,type,to,match;public,annotation,type,filter,class,extends,annotation,annotation,type,this,annotation,type,true,false
AnnotationTypeFilter -> public AnnotationTypeFilter(Class<? extends Annotation> annotationType);1502974979;Create a new AnnotationTypeFilter for the given annotation type._This filter will also match meta-annotations. To disable the_meta-annotation matching, use the constructor that accepts a_'{@code considerMetaAnnotations}' argument. The filter will_not match interfaces._@param annotationType the annotation type to match;public AnnotationTypeFilter(Class<? extends Annotation> annotationType) {_		this(annotationType, true, false)__	};create,a,new,annotation,type,filter,for,the,given,annotation,type,this,filter,will,also,match,meta,annotations,to,disable,the,meta,annotation,matching,use,the,constructor,that,accepts,a,code,consider,meta,annotations,argument,the,filter,will,not,match,interfaces,param,annotation,type,the,annotation,type,to,match;public,annotation,type,filter,class,extends,annotation,annotation,type,this,annotation,type,true,false
AnnotationTypeFilter -> public AnnotationTypeFilter(Class<? extends Annotation> annotationType);1522416703;Create a new AnnotationTypeFilter for the given annotation type._This filter will also match meta-annotations. To disable the_meta-annotation matching, use the constructor that accepts a_'{@code considerMetaAnnotations}' argument. The filter will_not match interfaces._@param annotationType the annotation type to match;public AnnotationTypeFilter(Class<? extends Annotation> annotationType) {_		this(annotationType, true, false)__	};create,a,new,annotation,type,filter,for,the,given,annotation,type,this,filter,will,also,match,meta,annotations,to,disable,the,meta,annotation,matching,use,the,constructor,that,accepts,a,code,consider,meta,annotations,argument,the,filter,will,not,match,interfaces,param,annotation,type,the,annotation,type,to,match;public,annotation,type,filter,class,extends,annotation,annotation,type,this,annotation,type,true,false
AnnotationTypeFilter -> public AnnotationTypeFilter(Class<? extends Annotation> annotationType);1522448294;Create a new AnnotationTypeFilter for the given annotation type._This filter will also match meta-annotations. To disable the_meta-annotation matching, use the constructor that accepts a_'{@code considerMetaAnnotations}' argument. The filter will_not match interfaces._@param annotationType the annotation type to match;public AnnotationTypeFilter(Class<? extends Annotation> annotationType) {_		this(annotationType, true, false)__	};create,a,new,annotation,type,filter,for,the,given,annotation,type,this,filter,will,also,match,meta,annotations,to,disable,the,meta,annotation,matching,use,the,constructor,that,accepts,a,code,consider,meta,annotations,argument,the,filter,will,not,match,interfaces,param,annotation,type,the,annotation,type,to,match;public,annotation,type,filter,class,extends,annotation,annotation,type,this,annotation,type,true,false
AnnotationTypeFilter -> public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations);1328020251;Create a new AnnotationTypeFilter for the given annotation type._The filter will not match interfaces._@param annotationType the annotation type to match_@param considerMetaAnnotations whether to also match on meta-annotations;public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations) {_		this(annotationType, considerMetaAnnotations, false)__	};create,a,new,annotation,type,filter,for,the,given,annotation,type,the,filter,will,not,match,interfaces,param,annotation,type,the,annotation,type,to,match,param,consider,meta,annotations,whether,to,also,match,on,meta,annotations;public,annotation,type,filter,class,extends,annotation,annotation,type,boolean,consider,meta,annotations,this,annotation,type,consider,meta,annotations,false
AnnotationTypeFilter -> public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations);1356735495;Create a new AnnotationTypeFilter for the given annotation type._The filter will not match interfaces._@param annotationType the annotation type to match_@param considerMetaAnnotations whether to also match on meta-annotations;public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations) {_		this(annotationType, considerMetaAnnotations, false)__	};create,a,new,annotation,type,filter,for,the,given,annotation,type,the,filter,will,not,match,interfaces,param,annotation,type,the,annotation,type,to,match,param,consider,meta,annotations,whether,to,also,match,on,meta,annotations;public,annotation,type,filter,class,extends,annotation,annotation,type,boolean,consider,meta,annotations,this,annotation,type,consider,meta,annotations,false
AnnotationTypeFilter -> public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations);1398192396;Create a new AnnotationTypeFilter for the given annotation type._The filter will not match interfaces._@param annotationType the annotation type to match_@param considerMetaAnnotations whether to also match on meta-annotations;public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations) {_		this(annotationType, considerMetaAnnotations, false)__	};create,a,new,annotation,type,filter,for,the,given,annotation,type,the,filter,will,not,match,interfaces,param,annotation,type,the,annotation,type,to,match,param,consider,meta,annotations,whether,to,also,match,on,meta,annotations;public,annotation,type,filter,class,extends,annotation,annotation,type,boolean,consider,meta,annotations,this,annotation,type,consider,meta,annotations,false
AnnotationTypeFilter -> public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations);1398638841;Create a new AnnotationTypeFilter for the given annotation type._The filter will not match interfaces._@param annotationType the annotation type to match_@param considerMetaAnnotations whether to also match on meta-annotations;public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations) {_		this(annotationType, considerMetaAnnotations, false)__	};create,a,new,annotation,type,filter,for,the,given,annotation,type,the,filter,will,not,match,interfaces,param,annotation,type,the,annotation,type,to,match,param,consider,meta,annotations,whether,to,also,match,on,meta,annotations;public,annotation,type,filter,class,extends,annotation,annotation,type,boolean,consider,meta,annotations,this,annotation,type,consider,meta,annotations,false
AnnotationTypeFilter -> public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations);1430861700;Create a new AnnotationTypeFilter for the given annotation type._The filter will not match interfaces._@param annotationType the annotation type to match_@param considerMetaAnnotations whether to also match on meta-annotations;public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations) {_		this(annotationType, considerMetaAnnotations, false)__	};create,a,new,annotation,type,filter,for,the,given,annotation,type,the,filter,will,not,match,interfaces,param,annotation,type,the,annotation,type,to,match,param,consider,meta,annotations,whether,to,also,match,on,meta,annotations;public,annotation,type,filter,class,extends,annotation,annotation,type,boolean,consider,meta,annotations,this,annotation,type,consider,meta,annotations,false
AnnotationTypeFilter -> public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations);1472736647;Create a new AnnotationTypeFilter for the given annotation type._The filter will not match interfaces._@param annotationType the annotation type to match_@param considerMetaAnnotations whether to also match on meta-annotations;public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations) {_		this(annotationType, considerMetaAnnotations, false)__	};create,a,new,annotation,type,filter,for,the,given,annotation,type,the,filter,will,not,match,interfaces,param,annotation,type,the,annotation,type,to,match,param,consider,meta,annotations,whether,to,also,match,on,meta,annotations;public,annotation,type,filter,class,extends,annotation,annotation,type,boolean,consider,meta,annotations,this,annotation,type,consider,meta,annotations,false
AnnotationTypeFilter -> public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations);1495868221;Create a new AnnotationTypeFilter for the given annotation type._The filter will not match interfaces._@param annotationType the annotation type to match_@param considerMetaAnnotations whether to also match on meta-annotations;public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations) {_		this(annotationType, considerMetaAnnotations, false)__	};create,a,new,annotation,type,filter,for,the,given,annotation,type,the,filter,will,not,match,interfaces,param,annotation,type,the,annotation,type,to,match,param,consider,meta,annotations,whether,to,also,match,on,meta,annotations;public,annotation,type,filter,class,extends,annotation,annotation,type,boolean,consider,meta,annotations,this,annotation,type,consider,meta,annotations,false
AnnotationTypeFilter -> public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations);1502974979;Create a new AnnotationTypeFilter for the given annotation type._The filter will not match interfaces._@param annotationType the annotation type to match_@param considerMetaAnnotations whether to also match on meta-annotations;public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations) {_		this(annotationType, considerMetaAnnotations, false)__	};create,a,new,annotation,type,filter,for,the,given,annotation,type,the,filter,will,not,match,interfaces,param,annotation,type,the,annotation,type,to,match,param,consider,meta,annotations,whether,to,also,match,on,meta,annotations;public,annotation,type,filter,class,extends,annotation,annotation,type,boolean,consider,meta,annotations,this,annotation,type,consider,meta,annotations,false
AnnotationTypeFilter -> public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations);1522416703;Create a new AnnotationTypeFilter for the given annotation type._The filter will not match interfaces._@param annotationType the annotation type to match_@param considerMetaAnnotations whether to also match on meta-annotations;public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations) {_		this(annotationType, considerMetaAnnotations, false)__	};create,a,new,annotation,type,filter,for,the,given,annotation,type,the,filter,will,not,match,interfaces,param,annotation,type,the,annotation,type,to,match,param,consider,meta,annotations,whether,to,also,match,on,meta,annotations;public,annotation,type,filter,class,extends,annotation,annotation,type,boolean,consider,meta,annotations,this,annotation,type,consider,meta,annotations,false
AnnotationTypeFilter -> public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations);1522448294;Create a new AnnotationTypeFilter for the given annotation type._The filter will not match interfaces._@param annotationType the annotation type to match_@param considerMetaAnnotations whether to also match on meta-annotations;public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations) {_		this(annotationType, considerMetaAnnotations, false)__	};create,a,new,annotation,type,filter,for,the,given,annotation,type,the,filter,will,not,match,interfaces,param,annotation,type,the,annotation,type,to,match,param,consider,meta,annotations,whether,to,also,match,on,meta,annotations;public,annotation,type,filter,class,extends,annotation,annotation,type,boolean,consider,meta,annotations,this,annotation,type,consider,meta,annotations,false
AnnotationTypeFilter -> public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations, boolean considerInterfaces);1328020251;Create a new {@link AnnotationTypeFilter} for the given annotation type._@param annotationType the annotation type to match_@param considerMetaAnnotations whether to also match on meta-annotations_@param considerInterfaces whether to also match interfaces;public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations, boolean considerInterfaces) {_		super(annotationType.isAnnotationPresent(Inherited.class), considerInterfaces)__		this.annotationType = annotationType__		this.considerMetaAnnotations = considerMetaAnnotations__	};create,a,new,link,annotation,type,filter,for,the,given,annotation,type,param,annotation,type,the,annotation,type,to,match,param,consider,meta,annotations,whether,to,also,match,on,meta,annotations,param,consider,interfaces,whether,to,also,match,interfaces;public,annotation,type,filter,class,extends,annotation,annotation,type,boolean,consider,meta,annotations,boolean,consider,interfaces,super,annotation,type,is,annotation,present,inherited,class,consider,interfaces,this,annotation,type,annotation,type,this,consider,meta,annotations,consider,meta,annotations
AnnotationTypeFilter -> public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations, boolean considerInterfaces);1356735495;Create a new {@link AnnotationTypeFilter} for the given annotation type._@param annotationType the annotation type to match_@param considerMetaAnnotations whether to also match on meta-annotations_@param considerInterfaces whether to also match interfaces;public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations, boolean considerInterfaces) {_		super(annotationType.isAnnotationPresent(Inherited.class), considerInterfaces)__		this.annotationType = annotationType__		this.considerMetaAnnotations = considerMetaAnnotations__	};create,a,new,link,annotation,type,filter,for,the,given,annotation,type,param,annotation,type,the,annotation,type,to,match,param,consider,meta,annotations,whether,to,also,match,on,meta,annotations,param,consider,interfaces,whether,to,also,match,interfaces;public,annotation,type,filter,class,extends,annotation,annotation,type,boolean,consider,meta,annotations,boolean,consider,interfaces,super,annotation,type,is,annotation,present,inherited,class,consider,interfaces,this,annotation,type,annotation,type,this,consider,meta,annotations,consider,meta,annotations
AnnotationTypeFilter -> public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations, boolean considerInterfaces);1398192396;Create a new {@link AnnotationTypeFilter} for the given annotation type._@param annotationType the annotation type to match_@param considerMetaAnnotations whether to also match on meta-annotations_@param considerInterfaces whether to also match interfaces;public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations, boolean considerInterfaces) {_		super(annotationType.isAnnotationPresent(Inherited.class), considerInterfaces)__		this.annotationType = annotationType__		this.considerMetaAnnotations = considerMetaAnnotations__	};create,a,new,link,annotation,type,filter,for,the,given,annotation,type,param,annotation,type,the,annotation,type,to,match,param,consider,meta,annotations,whether,to,also,match,on,meta,annotations,param,consider,interfaces,whether,to,also,match,interfaces;public,annotation,type,filter,class,extends,annotation,annotation,type,boolean,consider,meta,annotations,boolean,consider,interfaces,super,annotation,type,is,annotation,present,inherited,class,consider,interfaces,this,annotation,type,annotation,type,this,consider,meta,annotations,consider,meta,annotations
AnnotationTypeFilter -> public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations, boolean considerInterfaces);1398638841;Create a new {@link AnnotationTypeFilter} for the given annotation type._@param annotationType the annotation type to match_@param considerMetaAnnotations whether to also match on meta-annotations_@param considerInterfaces whether to also match interfaces;public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations, boolean considerInterfaces) {_		super(annotationType.isAnnotationPresent(Inherited.class), considerInterfaces)__		this.annotationType = annotationType__		this.considerMetaAnnotations = considerMetaAnnotations__	};create,a,new,link,annotation,type,filter,for,the,given,annotation,type,param,annotation,type,the,annotation,type,to,match,param,consider,meta,annotations,whether,to,also,match,on,meta,annotations,param,consider,interfaces,whether,to,also,match,interfaces;public,annotation,type,filter,class,extends,annotation,annotation,type,boolean,consider,meta,annotations,boolean,consider,interfaces,super,annotation,type,is,annotation,present,inherited,class,consider,interfaces,this,annotation,type,annotation,type,this,consider,meta,annotations,consider,meta,annotations
AnnotationTypeFilter -> public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations, boolean considerInterfaces);1430861700;Create a new {@link AnnotationTypeFilter} for the given annotation type._@param annotationType the annotation type to match_@param considerMetaAnnotations whether to also match on meta-annotations_@param considerInterfaces whether to also match interfaces;public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations, boolean considerInterfaces) {_		super(annotationType.isAnnotationPresent(Inherited.class), considerInterfaces)__		this.annotationType = annotationType__		this.considerMetaAnnotations = considerMetaAnnotations__	};create,a,new,link,annotation,type,filter,for,the,given,annotation,type,param,annotation,type,the,annotation,type,to,match,param,consider,meta,annotations,whether,to,also,match,on,meta,annotations,param,consider,interfaces,whether,to,also,match,interfaces;public,annotation,type,filter,class,extends,annotation,annotation,type,boolean,consider,meta,annotations,boolean,consider,interfaces,super,annotation,type,is,annotation,present,inherited,class,consider,interfaces,this,annotation,type,annotation,type,this,consider,meta,annotations,consider,meta,annotations
AnnotationTypeFilter -> public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations, boolean considerInterfaces);1472736647;Create a new {@link AnnotationTypeFilter} for the given annotation type._@param annotationType the annotation type to match_@param considerMetaAnnotations whether to also match on meta-annotations_@param considerInterfaces whether to also match interfaces;public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations, boolean considerInterfaces) {_		super(annotationType.isAnnotationPresent(Inherited.class), considerInterfaces)__		this.annotationType = annotationType__		this.considerMetaAnnotations = considerMetaAnnotations__	};create,a,new,link,annotation,type,filter,for,the,given,annotation,type,param,annotation,type,the,annotation,type,to,match,param,consider,meta,annotations,whether,to,also,match,on,meta,annotations,param,consider,interfaces,whether,to,also,match,interfaces;public,annotation,type,filter,class,extends,annotation,annotation,type,boolean,consider,meta,annotations,boolean,consider,interfaces,super,annotation,type,is,annotation,present,inherited,class,consider,interfaces,this,annotation,type,annotation,type,this,consider,meta,annotations,consider,meta,annotations
AnnotationTypeFilter -> public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations, boolean considerInterfaces);1495868221;Create a new {@link AnnotationTypeFilter} for the given annotation type._@param annotationType the annotation type to match_@param considerMetaAnnotations whether to also match on meta-annotations_@param considerInterfaces whether to also match interfaces;public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations, boolean considerInterfaces) {_		super(annotationType.isAnnotationPresent(Inherited.class), considerInterfaces)__		this.annotationType = annotationType__		this.considerMetaAnnotations = considerMetaAnnotations__	};create,a,new,link,annotation,type,filter,for,the,given,annotation,type,param,annotation,type,the,annotation,type,to,match,param,consider,meta,annotations,whether,to,also,match,on,meta,annotations,param,consider,interfaces,whether,to,also,match,interfaces;public,annotation,type,filter,class,extends,annotation,annotation,type,boolean,consider,meta,annotations,boolean,consider,interfaces,super,annotation,type,is,annotation,present,inherited,class,consider,interfaces,this,annotation,type,annotation,type,this,consider,meta,annotations,consider,meta,annotations
AnnotationTypeFilter -> public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations, boolean considerInterfaces);1502974979;Create a new {@link AnnotationTypeFilter} for the given annotation type._@param annotationType the annotation type to match_@param considerMetaAnnotations whether to also match on meta-annotations_@param considerInterfaces whether to also match interfaces;public AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations, boolean considerInterfaces) {_		super(annotationType.isAnnotationPresent(Inherited.class), considerInterfaces)__		this.annotationType = annotationType__		this.considerMetaAnnotations = considerMetaAnnotations__	};create,a,new,link,annotation,type,filter,for,the,given,annotation,type,param,annotation,type,the,annotation,type,to,match,param,consider,meta,annotations,whether,to,also,match,on,meta,annotations,param,consider,interfaces,whether,to,also,match,interfaces;public,annotation,type,filter,class,extends,annotation,annotation,type,boolean,consider,meta,annotations,boolean,consider,interfaces,super,annotation,type,is,annotation,present,inherited,class,consider,interfaces,this,annotation,type,annotation,type,this,consider,meta,annotations,consider,meta,annotations
