commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public void addCallback(ListenableFutureCallback<? super T> callback) {     this.callbacks.addCallback(callback). }
false;public;2;5;;@Override public void addCallback(SuccessCallback<? super T> successCallback, FailureCallback failureCallback) {     this.callbacks.addSuccessCallback(successCallback).     this.callbacks.addFailureCallback(failureCallback). }
false;public;0;7;;@Override public CompletableFuture<T> completable() {     CompletableFuture<T> completable = new DelegatingCompletableFuture<>(this).     this.callbacks.addSuccessCallback(completable::complete).     this.callbacks.addFailureCallback(completable::completeExceptionally).     return completable. }
false;protected;0;23;;@Override protected void done() {     Throwable cause.     try {         T result = get().         this.callbacks.success(result).         return.     } catch (InterruptedException ex) {         Thread.currentThread().interrupt().         return.     } catch (ExecutionException ex) {         cause = ex.getCause().         if (cause == null) {             cause = ex.         }     } catch (Throwable ex) {         cause = ex.     }     this.callbacks.failure(cause). }
