# id;timestamp;commentText;codeText;commentWords;codeWords
AnnotationWriter -> int getSize();1366718246;Returns the size of this annotation writer list.__@return the size of this annotation writer list.;int getSize() {_        int size = 0__        AnnotationWriter aw = this__        while (aw != null) {_            size += aw.bv.length__            aw = aw.next__        }_        return size__    };returns,the,size,of,this,annotation,writer,list,return,the,size,of,this,annotation,writer,list;int,get,size,int,size,0,annotation,writer,aw,this,while,aw,null,size,aw,bv,length,aw,aw,next,return,size
AnnotationWriter -> int getSize();1395273982;Returns the size of this annotation writer list.__@return the size of this annotation writer list.;int getSize() {_        int size = 0__        AnnotationWriter aw = this__        while (aw != null) {_            size += aw.bv.length__            aw = aw.next__        }_        return size__    };returns,the,size,of,this,annotation,writer,list,return,the,size,of,this,annotation,writer,list;int,get,size,int,size,0,annotation,writer,aw,this,while,aw,null,size,aw,bv,length,aw,aw,next,return,size
AnnotationWriter -> int getSize();1505821772;Returns the size of this annotation writer list.__@return the size of this annotation writer list.;int getSize() {_        int size = 0__        AnnotationWriter aw = this__        while (aw != null) {_            size += aw.bv.length__            aw = aw.next__        }_        return size__    };returns,the,size,of,this,annotation,writer,list,return,the,size,of,this,annotation,writer,list;int,get,size,int,size,0,annotation,writer,aw,this,while,aw,null,size,aw,bv,length,aw,aw,next,return,size
AnnotationWriter -> void putAnnotations(final int attributeNameIndex, final ByteVector output);1531241461;Puts a Runtime[In]Visible[Type]Annotations attribute containing this annotations and all its_<i>predecessors</i> (see {@link #previousAnnotation} in the given ByteVector. Annotations are_put in the same order they have been visited.__@param attributeNameIndex the constant pool index of the attribute name (one of_"Runtime[In]Visible[Type]Annotations")._@param output where the attribute must be put.;void putAnnotations(final int attributeNameIndex, final ByteVector output) {_    int attributeLength = 2_ _    int numAnnotations = 0__    AnnotationWriter annotationWriter = this__    AnnotationWriter firstAnnotation = null__    while (annotationWriter != null) {_      _      annotationWriter.visitEnd()__      attributeLength += annotationWriter.annotation.length__      numAnnotations++__      firstAnnotation = annotationWriter__      annotationWriter = annotationWriter.previousAnnotation__    }_    output.putShort(attributeNameIndex)__    output.putInt(attributeLength)__    output.putShort(numAnnotations)__    annotationWriter = firstAnnotation__    while (annotationWriter != null) {_      output.putByteArray(annotationWriter.annotation.data, 0, annotationWriter.annotation.length)__      annotationWriter = annotationWriter.nextAnnotation__    }_  };puts,a,runtime,in,visible,type,annotations,attribute,containing,this,annotations,and,all,its,i,predecessors,i,see,link,previous,annotation,in,the,given,byte,vector,annotations,are,put,in,the,same,order,they,have,been,visited,param,attribute,name,index,the,constant,pool,index,of,the,attribute,name,one,of,runtime,in,visible,type,annotations,param,output,where,the,attribute,must,be,put;void,put,annotations,final,int,attribute,name,index,final,byte,vector,output,int,attribute,length,2,int,num,annotations,0,annotation,writer,annotation,writer,this,annotation,writer,first,annotation,null,while,annotation,writer,null,annotation,writer,visit,end,attribute,length,annotation,writer,annotation,length,num,annotations,first,annotation,annotation,writer,annotation,writer,annotation,writer,previous,annotation,output,put,short,attribute,name,index,output,put,int,attribute,length,output,put,short,num,annotations,annotation,writer,first,annotation,while,annotation,writer,null,output,put,byte,array,annotation,writer,annotation,data,0,annotation,writer,annotation,length,annotation,writer,annotation,writer,next,annotation
AnnotationWriter -> void putAnnotations(final int attributeNameIndex, final ByteVector output);1536664245;Puts a Runtime[In]Visible[Type]Annotations attribute containing this annotations and all its_<i>predecessors</i> (see {@link #previousAnnotation} in the given ByteVector. Annotations are_put in the same order they have been visited.__@param attributeNameIndex the constant pool index of the attribute name (one of_"Runtime[In]Visible[Type]Annotations")._@param output where the attribute must be put.;void putAnnotations(final int attributeNameIndex, final ByteVector output) {_    int attributeLength = 2_ _    int numAnnotations = 0__    AnnotationWriter annotationWriter = this__    AnnotationWriter firstAnnotation = null__    while (annotationWriter != null) {_      _      annotationWriter.visitEnd()__      attributeLength += annotationWriter.annotation.length__      numAnnotations++__      firstAnnotation = annotationWriter__      annotationWriter = annotationWriter.previousAnnotation__    }_    output.putShort(attributeNameIndex)__    output.putInt(attributeLength)__    output.putShort(numAnnotations)__    annotationWriter = firstAnnotation__    while (annotationWriter != null) {_      output.putByteArray(annotationWriter.annotation.data, 0, annotationWriter.annotation.length)__      annotationWriter = annotationWriter.nextAnnotation__    }_  };puts,a,runtime,in,visible,type,annotations,attribute,containing,this,annotations,and,all,its,i,predecessors,i,see,link,previous,annotation,in,the,given,byte,vector,annotations,are,put,in,the,same,order,they,have,been,visited,param,attribute,name,index,the,constant,pool,index,of,the,attribute,name,one,of,runtime,in,visible,type,annotations,param,output,where,the,attribute,must,be,put;void,put,annotations,final,int,attribute,name,index,final,byte,vector,output,int,attribute,length,2,int,num,annotations,0,annotation,writer,annotation,writer,this,annotation,writer,first,annotation,null,while,annotation,writer,null,annotation,writer,visit,end,attribute,length,annotation,writer,annotation,length,num,annotations,first,annotation,annotation,writer,annotation,writer,annotation,writer,previous,annotation,output,put,short,attribute,name,index,output,put,int,attribute,length,output,put,short,num,annotations,annotation,writer,first,annotation,while,annotation,writer,null,output,put,byte,array,annotation,writer,annotation,data,0,annotation,writer,annotation,length,annotation,writer,annotation,writer,next,annotation
AnnotationWriter -> AnnotationWriter(final ClassWriter cw, final boolean named,             final ByteVector bv, final ByteVector parent, final int offset);1366718246;Constructs a new {@link AnnotationWriter}.__@param cw_the class writer to which this annotation must be added._@param named_<tt>true<tt> if values are named, <tt>false</tt> otherwise._@param bv_where the annotation values must be stored._@param parent_where the number of annotation values must be stored._@param offset_where in <tt>parent</tt> the number of annotation values must_be stored.;AnnotationWriter(final ClassWriter cw, final boolean named,_            final ByteVector bv, final ByteVector parent, final int offset) {_        super(Opcodes.ASM4)__        this.cw = cw__        this.named = named__        this.bv = bv__        this.parent = parent__        this.offset = offset__    };constructs,a,new,link,annotation,writer,param,cw,the,class,writer,to,which,this,annotation,must,be,added,param,named,tt,true,tt,if,values,are,named,tt,false,tt,otherwise,param,bv,where,the,annotation,values,must,be,stored,param,parent,where,the,number,of,annotation,values,must,be,stored,param,offset,where,in,tt,parent,tt,the,number,of,annotation,values,must,be,stored;annotation,writer,final,class,writer,cw,final,boolean,named,final,byte,vector,bv,final,byte,vector,parent,final,int,offset,super,opcodes,asm4,this,cw,cw,this,named,named,this,bv,bv,this,parent,parent,this,offset,offset
AnnotationWriter -> AnnotationWriter(final ClassWriter cw, final boolean named,             final ByteVector bv, final ByteVector parent, final int offset);1395273982;Constructs a new {@link AnnotationWriter}.__@param cw_the class writer to which this annotation must be added._@param named_<tt>true<tt> if values are named, <tt>false</tt> otherwise._@param bv_where the annotation values must be stored._@param parent_where the number of annotation values must be stored._@param offset_where in <tt>parent</tt> the number of annotation values must_be stored.;AnnotationWriter(final ClassWriter cw, final boolean named,_            final ByteVector bv, final ByteVector parent, final int offset) {_        super(Opcodes.ASM5)__        this.cw = cw__        this.named = named__        this.bv = bv__        this.parent = parent__        this.offset = offset__    };constructs,a,new,link,annotation,writer,param,cw,the,class,writer,to,which,this,annotation,must,be,added,param,named,tt,true,tt,if,values,are,named,tt,false,tt,otherwise,param,bv,where,the,annotation,values,must,be,stored,param,parent,where,the,number,of,annotation,values,must,be,stored,param,offset,where,in,tt,parent,tt,the,number,of,annotation,values,must,be,stored;annotation,writer,final,class,writer,cw,final,boolean,named,final,byte,vector,bv,final,byte,vector,parent,final,int,offset,super,opcodes,asm5,this,cw,cw,this,named,named,this,bv,bv,this,parent,parent,this,offset,offset
AnnotationWriter -> AnnotationWriter(final ClassWriter cw, final boolean named,             final ByteVector bv, final ByteVector parent, final int offset);1505821772;Constructs a new {@link AnnotationWriter}.__@param cw_the class writer to which this annotation must be added._@param named_<tt>true<tt> if values are named, <tt>false</tt> otherwise._@param bv_where the annotation values must be stored._@param parent_where the number of annotation values must be stored._@param offset_where in <tt>parent</tt> the number of annotation values must_be stored.;AnnotationWriter(final ClassWriter cw, final boolean named,_            final ByteVector bv, final ByteVector parent, final int offset) {_        super(Opcodes.ASM6)__        this.cw = cw__        this.named = named__        this.bv = bv__        this.parent = parent__        this.offset = offset__    };constructs,a,new,link,annotation,writer,param,cw,the,class,writer,to,which,this,annotation,must,be,added,param,named,tt,true,tt,if,values,are,named,tt,false,tt,otherwise,param,bv,where,the,annotation,values,must,be,stored,param,parent,where,the,number,of,annotation,values,must,be,stored,param,offset,where,in,tt,parent,tt,the,number,of,annotation,values,must,be,stored;annotation,writer,final,class,writer,cw,final,boolean,named,final,byte,vector,bv,final,byte,vector,parent,final,int,offset,super,opcodes,asm6,this,cw,cw,this,named,named,this,bv,bv,this,parent,parent,this,offset,offset
AnnotationWriter -> AnnotationWriter(       final SymbolTable symbolTable,       final ByteVector annotation,       final AnnotationWriter previousAnnotation);1531241461;Constructs a new {@link AnnotationWriter} using named values.__@param symbolTable where the constants used in this AnnotationWriter must be stored._@param annotation where the 'annotation' or 'type_annotation' JVMS structure corresponding to_the visited content must be stored. This ByteVector must already contain all the fields of_the structure except the last one (the element_value_pairs array)._@param previousAnnotation the previously visited annotation of the_Runtime[In]Visible[Type]Annotations attribute to which this annotation belongs, or null in_other cases (e.g. nested or array annotations).;AnnotationWriter(_      final SymbolTable symbolTable,_      final ByteVector annotation,_      final AnnotationWriter previousAnnotation) {_    this(symbolTable,  true, annotation, previousAnnotation)__  };constructs,a,new,link,annotation,writer,using,named,values,param,symbol,table,where,the,constants,used,in,this,annotation,writer,must,be,stored,param,annotation,where,the,annotation,or,jvms,structure,corresponding,to,the,visited,content,must,be,stored,this,byte,vector,must,already,contain,all,the,fields,of,the,structure,except,the,last,one,the,array,param,previous,annotation,the,previously,visited,annotation,of,the,runtime,in,visible,type,annotations,attribute,to,which,this,annotation,belongs,or,null,in,other,cases,e,g,nested,or,array,annotations;annotation,writer,final,symbol,table,symbol,table,final,byte,vector,annotation,final,annotation,writer,previous,annotation,this,symbol,table,true,annotation,previous,annotation
AnnotationWriter -> AnnotationWriter(       final SymbolTable symbolTable,       final ByteVector annotation,       final AnnotationWriter previousAnnotation);1536664245;Constructs a new {@link AnnotationWriter} using named values.__@param symbolTable where the constants used in this AnnotationWriter must be stored._@param annotation where the 'annotation' or 'type_annotation' JVMS structure corresponding to_the visited content must be stored. This ByteVector must already contain all the fields of_the structure except the last one (the element_value_pairs array)._@param previousAnnotation the previously visited annotation of the_Runtime[In]Visible[Type]Annotations attribute to which this annotation belongs, or null in_other cases (e.g. nested or array annotations).;AnnotationWriter(_      final SymbolTable symbolTable,_      final ByteVector annotation,_      final AnnotationWriter previousAnnotation) {_    this(symbolTable,  true, annotation, previousAnnotation)__  };constructs,a,new,link,annotation,writer,using,named,values,param,symbol,table,where,the,constants,used,in,this,annotation,writer,must,be,stored,param,annotation,where,the,annotation,or,jvms,structure,corresponding,to,the,visited,content,must,be,stored,this,byte,vector,must,already,contain,all,the,fields,of,the,structure,except,the,last,one,the,array,param,previous,annotation,the,previously,visited,annotation,of,the,runtime,in,visible,type,annotations,attribute,to,which,this,annotation,belongs,or,null,in,other,cases,e,g,nested,or,array,annotations;annotation,writer,final,symbol,table,symbol,table,final,byte,vector,annotation,final,annotation,writer,previous,annotation,this,symbol,table,true,annotation,previous,annotation
AnnotationWriter -> int computeAnnotationsSize(final String attributeName);1531241461;Returns the size of a Runtime[In]Visible[Type]Annotations attribute containing this annotation_and all its <i>predecessors</i> (see {@link #previousAnnotation}. Also adds the attribute name_to the constant pool of the class (if not null).__@param attributeName one of "Runtime[In]Visible[Type]Annotations", or null._@return the size in bytes of a Runtime[In]Visible[Type]Annotations attribute containing this_annotation and all its predecessors. This includes the size of the attribute_name_index and_attribute_length fields.;int computeAnnotationsSize(final String attributeName) {_    if (attributeName != null) {_      symbolTable.addConstantUtf8(attributeName)__    }_    _    int attributeSize = 8__    AnnotationWriter annotationWriter = this__    while (annotationWriter != null) {_      attributeSize += annotationWriter.annotation.length__      annotationWriter = annotationWriter.previousAnnotation__    }_    return attributeSize__  };returns,the,size,of,a,runtime,in,visible,type,annotations,attribute,containing,this,annotation,and,all,its,i,predecessors,i,see,link,previous,annotation,also,adds,the,attribute,name,to,the,constant,pool,of,the,class,if,not,null,param,attribute,name,one,of,runtime,in,visible,type,annotations,or,null,return,the,size,in,bytes,of,a,runtime,in,visible,type,annotations,attribute,containing,this,annotation,and,all,its,predecessors,this,includes,the,size,of,the,and,fields;int,compute,annotations,size,final,string,attribute,name,if,attribute,name,null,symbol,table,add,constant,utf8,attribute,name,int,attribute,size,8,annotation,writer,annotation,writer,this,while,annotation,writer,null,attribute,size,annotation,writer,annotation,length,annotation,writer,annotation,writer,previous,annotation,return,attribute,size
AnnotationWriter -> int computeAnnotationsSize(final String attributeName);1536664245;Returns the size of a Runtime[In]Visible[Type]Annotations attribute containing this annotation_and all its <i>predecessors</i> (see {@link #previousAnnotation}. Also adds the attribute name_to the constant pool of the class (if not null).__@param attributeName one of "Runtime[In]Visible[Type]Annotations", or null._@return the size in bytes of a Runtime[In]Visible[Type]Annotations attribute containing this_annotation and all its predecessors. This includes the size of the attribute_name_index and_attribute_length fields.;int computeAnnotationsSize(final String attributeName) {_    if (attributeName != null) {_      symbolTable.addConstantUtf8(attributeName)__    }_    _    int attributeSize = 8__    AnnotationWriter annotationWriter = this__    while (annotationWriter != null) {_      attributeSize += annotationWriter.annotation.length__      annotationWriter = annotationWriter.previousAnnotation__    }_    return attributeSize__  };returns,the,size,of,a,runtime,in,visible,type,annotations,attribute,containing,this,annotation,and,all,its,i,predecessors,i,see,link,previous,annotation,also,adds,the,attribute,name,to,the,constant,pool,of,the,class,if,not,null,param,attribute,name,one,of,runtime,in,visible,type,annotations,or,null,return,the,size,in,bytes,of,a,runtime,in,visible,type,annotations,attribute,containing,this,annotation,and,all,its,predecessors,this,includes,the,size,of,the,and,fields;int,compute,annotations,size,final,string,attribute,name,if,attribute,name,null,symbol,table,add,constant,utf8,attribute,name,int,attribute,size,8,annotation,writer,annotation,writer,this,while,annotation,writer,null,attribute,size,annotation,writer,annotation,length,annotation,writer,annotation,writer,previous,annotation,return,attribute,size
AnnotationWriter -> static int computeParameterAnnotationsSize(       final String attributeName,       final AnnotationWriter[] annotationWriters,       final int annotableParameterCount);1531241461;Returns the size of a Runtime[In]VisibleParameterAnnotations attribute containing all the_annotation lists from the given AnnotationWriter sub-array. Also adds the attribute name to the_constant pool of the class.__@param attributeName one of "Runtime[In]VisibleParameterAnnotations"._@param annotationWriters an array of AnnotationWriter lists (designated by their <i>last</i>_element)._@param annotableParameterCount the number of elements in annotationWriters to take into account_(elements [0..annotableParameterCount[ are taken into account)._@return the size in bytes of a Runtime[In]VisibleParameterAnnotations attribute corresponding_to the given sub-array of AnnotationWriter lists. This includes the size of the_attribute_name_index and attribute_length fields.;static int computeParameterAnnotationsSize(_      final String attributeName,_      final AnnotationWriter[] annotationWriters,_      final int annotableParameterCount) {_    _    _    _    _    _    int attributeSize = 7 + 2 * annotableParameterCount__    for (int i = 0_ i < annotableParameterCount_ ++i) {_      AnnotationWriter annotationWriter = annotationWriters[i]__      attributeSize +=_          annotationWriter == null ? 0 : annotationWriter.computeAnnotationsSize(attributeName) - 8__    }_    return attributeSize__  };returns,the,size,of,a,runtime,in,visible,parameter,annotations,attribute,containing,all,the,annotation,lists,from,the,given,annotation,writer,sub,array,also,adds,the,attribute,name,to,the,constant,pool,of,the,class,param,attribute,name,one,of,runtime,in,visible,parameter,annotations,param,annotation,writers,an,array,of,annotation,writer,lists,designated,by,their,i,last,i,element,param,annotable,parameter,count,the,number,of,elements,in,annotation,writers,to,take,into,account,elements,0,annotable,parameter,count,are,taken,into,account,return,the,size,in,bytes,of,a,runtime,in,visible,parameter,annotations,attribute,corresponding,to,the,given,sub,array,of,annotation,writer,lists,this,includes,the,size,of,the,and,fields;static,int,compute,parameter,annotations,size,final,string,attribute,name,final,annotation,writer,annotation,writers,final,int,annotable,parameter,count,int,attribute,size,7,2,annotable,parameter,count,for,int,i,0,i,annotable,parameter,count,i,annotation,writer,annotation,writer,annotation,writers,i,attribute,size,annotation,writer,null,0,annotation,writer,compute,annotations,size,attribute,name,8,return,attribute,size
AnnotationWriter -> static int computeParameterAnnotationsSize(       final String attributeName,       final AnnotationWriter[] annotationWriters,       final int annotableParameterCount);1536664245;Returns the size of a Runtime[In]VisibleParameterAnnotations attribute containing all the_annotation lists from the given AnnotationWriter sub-array. Also adds the attribute name to the_constant pool of the class.__@param attributeName one of "Runtime[In]VisibleParameterAnnotations"._@param annotationWriters an array of AnnotationWriter lists (designated by their <i>last</i>_element)._@param annotableParameterCount the number of elements in annotationWriters to take into account_(elements [0..annotableParameterCount[ are taken into account)._@return the size in bytes of a Runtime[In]VisibleParameterAnnotations attribute corresponding_to the given sub-array of AnnotationWriter lists. This includes the size of the_attribute_name_index and attribute_length fields.;static int computeParameterAnnotationsSize(_      final String attributeName,_      final AnnotationWriter[] annotationWriters,_      final int annotableParameterCount) {_    _    _    _    _    _    int attributeSize = 7 + 2 * annotableParameterCount__    for (int i = 0_ i < annotableParameterCount_ ++i) {_      AnnotationWriter annotationWriter = annotationWriters[i]__      attributeSize +=_          annotationWriter == null ? 0 : annotationWriter.computeAnnotationsSize(attributeName) - 8__    }_    return attributeSize__  };returns,the,size,of,a,runtime,in,visible,parameter,annotations,attribute,containing,all,the,annotation,lists,from,the,given,annotation,writer,sub,array,also,adds,the,attribute,name,to,the,constant,pool,of,the,class,param,attribute,name,one,of,runtime,in,visible,parameter,annotations,param,annotation,writers,an,array,of,annotation,writer,lists,designated,by,their,i,last,i,element,param,annotable,parameter,count,the,number,of,elements,in,annotation,writers,to,take,into,account,elements,0,annotable,parameter,count,are,taken,into,account,return,the,size,in,bytes,of,a,runtime,in,visible,parameter,annotations,attribute,corresponding,to,the,given,sub,array,of,annotation,writer,lists,this,includes,the,size,of,the,and,fields;static,int,compute,parameter,annotations,size,final,string,attribute,name,final,annotation,writer,annotation,writers,final,int,annotable,parameter,count,int,attribute,size,7,2,annotable,parameter,count,for,int,i,0,i,annotable,parameter,count,i,annotation,writer,annotation,writer,annotation,writers,i,attribute,size,annotation,writer,null,0,annotation,writer,compute,annotations,size,attribute,name,8,return,attribute,size
AnnotationWriter -> void put(final ByteVector out);1366718246;Puts the annotations of this annotation writer list into the given byte_vector.__@param out_where the annotations must be put.;void put(final ByteVector out) {_        int n = 0__        int size = 2__        AnnotationWriter aw = this__        AnnotationWriter last = null__        while (aw != null) {_            ++n__            size += aw.bv.length__            aw.visitEnd()_ _            aw.prev = last__            last = aw__            aw = aw.next__        }_        out.putInt(size)__        out.putShort(n)__        aw = last__        while (aw != null) {_            out.putByteArray(aw.bv.data, 0, aw.bv.length)__            aw = aw.prev__        }_    };puts,the,annotations,of,this,annotation,writer,list,into,the,given,byte,vector,param,out,where,the,annotations,must,be,put;void,put,final,byte,vector,out,int,n,0,int,size,2,annotation,writer,aw,this,annotation,writer,last,null,while,aw,null,n,size,aw,bv,length,aw,visit,end,aw,prev,last,last,aw,aw,aw,next,out,put,int,size,out,put,short,n,aw,last,while,aw,null,out,put,byte,array,aw,bv,data,0,aw,bv,length,aw,aw,prev
AnnotationWriter -> void put(final ByteVector out);1395273982;Puts the annotations of this annotation writer list into the given byte_vector.__@param out_where the annotations must be put.;void put(final ByteVector out) {_        int n = 0__        int size = 2__        AnnotationWriter aw = this__        AnnotationWriter last = null__        while (aw != null) {_            ++n__            size += aw.bv.length__            aw.visitEnd()_ _            aw.prev = last__            last = aw__            aw = aw.next__        }_        out.putInt(size)__        out.putShort(n)__        aw = last__        while (aw != null) {_            out.putByteArray(aw.bv.data, 0, aw.bv.length)__            aw = aw.prev__        }_    };puts,the,annotations,of,this,annotation,writer,list,into,the,given,byte,vector,param,out,where,the,annotations,must,be,put;void,put,final,byte,vector,out,int,n,0,int,size,2,annotation,writer,aw,this,annotation,writer,last,null,while,aw,null,n,size,aw,bv,length,aw,visit,end,aw,prev,last,last,aw,aw,aw,next,out,put,int,size,out,put,short,n,aw,last,while,aw,null,out,put,byte,array,aw,bv,data,0,aw,bv,length,aw,aw,prev
AnnotationWriter -> void put(final ByteVector out);1505821772;Puts the annotations of this annotation writer list into the given byte_vector.__@param out_where the annotations must be put.;void put(final ByteVector out) {_        int n = 0__        int size = 2__        AnnotationWriter aw = this__        AnnotationWriter last = null__        while (aw != null) {_            ++n__            size += aw.bv.length__            aw.visitEnd()_ _            aw.prev = last__            last = aw__            aw = aw.next__        }_        out.putInt(size)__        out.putShort(n)__        aw = last__        while (aw != null) {_            out.putByteArray(aw.bv.data, 0, aw.bv.length)__            aw = aw.prev__        }_    };puts,the,annotations,of,this,annotation,writer,list,into,the,given,byte,vector,param,out,where,the,annotations,must,be,put;void,put,final,byte,vector,out,int,n,0,int,size,2,annotation,writer,aw,this,annotation,writer,last,null,while,aw,null,n,size,aw,bv,length,aw,visit,end,aw,prev,last,last,aw,aw,aw,next,out,put,int,size,out,put,short,n,aw,last,while,aw,null,out,put,byte,array,aw,bv,data,0,aw,bv,length,aw,aw,prev
AnnotationWriter -> AnnotationWriter(       final SymbolTable symbolTable,       final boolean useNamedValues,       final ByteVector annotation,       final AnnotationWriter previousAnnotation);1531241461;Constructs a new {@link AnnotationWriter}.__@param symbolTable where the constants used in this AnnotationWriter must be stored._@param useNamedValues whether values are named or not. AnnotationDefault and annotation arrays_use unnamed values._@param annotation where the 'annotation' or 'type_annotation' JVMS structure corresponding to_the visited content must be stored. This ByteVector must already contain all the fields of_the structure except the last one (the element_value_pairs array)._@param previousAnnotation the previously visited annotation of the_Runtime[In]Visible[Type]Annotations attribute to which this annotation belongs, or null in_other cases (e.g. nested or array annotations).;AnnotationWriter(_      final SymbolTable symbolTable,_      final boolean useNamedValues,_      final ByteVector annotation,_      final AnnotationWriter previousAnnotation) {_    super(Opcodes.ASM6)__    this.symbolTable = symbolTable__    this.useNamedValues = useNamedValues__    this.annotation = annotation__    _    this.numElementValuePairsOffset = annotation.length == 0 ? -1 : annotation.length - 2__    this.previousAnnotation = previousAnnotation__    if (previousAnnotation != null) {_      previousAnnotation.nextAnnotation = this__    }_  };constructs,a,new,link,annotation,writer,param,symbol,table,where,the,constants,used,in,this,annotation,writer,must,be,stored,param,use,named,values,whether,values,are,named,or,not,annotation,default,and,annotation,arrays,use,unnamed,values,param,annotation,where,the,annotation,or,jvms,structure,corresponding,to,the,visited,content,must,be,stored,this,byte,vector,must,already,contain,all,the,fields,of,the,structure,except,the,last,one,the,array,param,previous,annotation,the,previously,visited,annotation,of,the,runtime,in,visible,type,annotations,attribute,to,which,this,annotation,belongs,or,null,in,other,cases,e,g,nested,or,array,annotations;annotation,writer,final,symbol,table,symbol,table,final,boolean,use,named,values,final,byte,vector,annotation,final,annotation,writer,previous,annotation,super,opcodes,asm6,this,symbol,table,symbol,table,this,use,named,values,use,named,values,this,annotation,annotation,this,num,element,value,pairs,offset,annotation,length,0,1,annotation,length,2,this,previous,annotation,previous,annotation,if,previous,annotation,null,previous,annotation,next,annotation,this
AnnotationWriter -> AnnotationWriter(       final SymbolTable symbolTable,       final boolean useNamedValues,       final ByteVector annotation,       final AnnotationWriter previousAnnotation);1536664245;Constructs a new {@link AnnotationWriter}.__@param symbolTable where the constants used in this AnnotationWriter must be stored._@param useNamedValues whether values are named or not. AnnotationDefault and annotation arrays_use unnamed values._@param annotation where the 'annotation' or 'type_annotation' JVMS structure corresponding to_the visited content must be stored. This ByteVector must already contain all the fields of_the structure except the last one (the element_value_pairs array)._@param previousAnnotation the previously visited annotation of the_Runtime[In]Visible[Type]Annotations attribute to which this annotation belongs, or null in_other cases (e.g. nested or array annotations).;AnnotationWriter(_      final SymbolTable symbolTable,_      final boolean useNamedValues,_      final ByteVector annotation,_      final AnnotationWriter previousAnnotation) {_    super(Opcodes.ASM7)__    this.symbolTable = symbolTable__    this.useNamedValues = useNamedValues__    this.annotation = annotation__    _    this.numElementValuePairsOffset = annotation.length == 0 ? -1 : annotation.length - 2__    this.previousAnnotation = previousAnnotation__    if (previousAnnotation != null) {_      previousAnnotation.nextAnnotation = this__    }_  };constructs,a,new,link,annotation,writer,param,symbol,table,where,the,constants,used,in,this,annotation,writer,must,be,stored,param,use,named,values,whether,values,are,named,or,not,annotation,default,and,annotation,arrays,use,unnamed,values,param,annotation,where,the,annotation,or,jvms,structure,corresponding,to,the,visited,content,must,be,stored,this,byte,vector,must,already,contain,all,the,fields,of,the,structure,except,the,last,one,the,array,param,previous,annotation,the,previously,visited,annotation,of,the,runtime,in,visible,type,annotations,attribute,to,which,this,annotation,belongs,or,null,in,other,cases,e,g,nested,or,array,annotations;annotation,writer,final,symbol,table,symbol,table,final,boolean,use,named,values,final,byte,vector,annotation,final,annotation,writer,previous,annotation,super,opcodes,asm7,this,symbol,table,symbol,table,this,use,named,values,use,named,values,this,annotation,annotation,this,num,element,value,pairs,offset,annotation,length,0,1,annotation,length,2,this,previous,annotation,previous,annotation,if,previous,annotation,null,previous,annotation,next,annotation,this
AnnotationWriter -> static void putTarget(int typeRef, TypePath typePath, ByteVector out);1395273982;Puts the given type reference and type path into the given bytevector._LOCAL_VARIABLE and RESOURCE_VARIABLE target types are not supported.__@param typeRef_a reference to the annotated type. See {@link TypeReference}._@param typePath_the path to the annotated type argument, wildcard bound, array_element type, or static inner type within 'typeRef'. May be_<tt>null</tt> if the annotation targets 'typeRef' as a whole._@param out_where the type reference and type path must be put.;static void putTarget(int typeRef, TypePath typePath, ByteVector out) {_        switch (typeRef >>> 24) {_        case 0x00: _        case 0x01: _        case 0x16: _            out.putShort(typeRef >>> 16)__            break__        case 0x13: _        case 0x14: _        case 0x15: _            out.putByte(typeRef >>> 24)__            break__        case 0x47: _        case 0x48: _        case 0x49: _        case 0x4A: _        case 0x4B: _            out.putInt(typeRef)__            break__        _        _        _        _        _        _        _        _        _        default:_            out.put12(typeRef >>> 24, (typeRef & 0xFFFF00) >> 8)__            break__        }_        if (typePath == null) {_            out.putByte(0)__        } else {_            int length = typePath.b[typePath.offset] * 2 + 1__            out.putByteArray(typePath.b, typePath.offset, length)__        }_    };puts,the,given,type,reference,and,type,path,into,the,given,bytevector,and,target,types,are,not,supported,param,type,ref,a,reference,to,the,annotated,type,see,link,type,reference,param,type,path,the,path,to,the,annotated,type,argument,wildcard,bound,array,element,type,or,static,inner,type,within,type,ref,may,be,tt,null,tt,if,the,annotation,targets,type,ref,as,a,whole,param,out,where,the,type,reference,and,type,path,must,be,put;static,void,put,target,int,type,ref,type,path,type,path,byte,vector,out,switch,type,ref,24,case,0x00,case,0x01,case,0x16,out,put,short,type,ref,16,break,case,0x13,case,0x14,case,0x15,out,put,byte,type,ref,24,break,case,0x47,case,0x48,case,0x49,case,0x4a,case,0x4b,out,put,int,type,ref,break,default,out,put12,type,ref,24,type,ref,0x,ffff00,8,break,if,type,path,null,out,put,byte,0,else,int,length,type,path,b,type,path,offset,2,1,out,put,byte,array,type,path,b,type,path,offset,length
AnnotationWriter -> static void putTarget(int typeRef, TypePath typePath, ByteVector out);1505821772;Puts the given type reference and type path into the given bytevector._LOCAL_VARIABLE and RESOURCE_VARIABLE target types are not supported.__@param typeRef_a reference to the annotated type. See {@link TypeReference}._@param typePath_the path to the annotated type argument, wildcard bound, array_element type, or static inner type within 'typeRef'. May be_<tt>null</tt> if the annotation targets 'typeRef' as a whole._@param out_where the type reference and type path must be put.;static void putTarget(int typeRef, TypePath typePath, ByteVector out) {_        switch (typeRef >>> 24) {_        case 0x00: _        case 0x01: _        case 0x16: _            out.putShort(typeRef >>> 16)__            break__        case 0x13: _        case 0x14: _        case 0x15: _            out.putByte(typeRef >>> 24)__            break__        case 0x47: _        case 0x48: _        case 0x49: _        case 0x4A: _        case 0x4B: _            out.putInt(typeRef)__            break__        _        _        _        _        _        _        _        _        _        default:_            out.put12(typeRef >>> 24, (typeRef & 0xFFFF00) >> 8)__            break__        }_        if (typePath == null) {_            out.putByte(0)__        } else {_            int length = typePath.b[typePath.offset] * 2 + 1__            out.putByteArray(typePath.b, typePath.offset, length)__        }_    };puts,the,given,type,reference,and,type,path,into,the,given,bytevector,and,target,types,are,not,supported,param,type,ref,a,reference,to,the,annotated,type,see,link,type,reference,param,type,path,the,path,to,the,annotated,type,argument,wildcard,bound,array,element,type,or,static,inner,type,within,type,ref,may,be,tt,null,tt,if,the,annotation,targets,type,ref,as,a,whole,param,out,where,the,type,reference,and,type,path,must,be,put;static,void,put,target,int,type,ref,type,path,type,path,byte,vector,out,switch,type,ref,24,case,0x00,case,0x01,case,0x16,out,put,short,type,ref,16,break,case,0x13,case,0x14,case,0x15,out,put,byte,type,ref,24,break,case,0x47,case,0x48,case,0x49,case,0x4a,case,0x4b,out,put,int,type,ref,break,default,out,put12,type,ref,24,type,ref,0x,ffff00,8,break,if,type,path,null,out,put,byte,0,else,int,length,type,path,b,type,path,offset,2,1,out,put,byte,array,type,path,b,type,path,offset,length
AnnotationWriter -> static void putParameterAnnotations(       final int attributeNameIndex,       final AnnotationWriter[] annotationWriters,       final int annotableParameterCount,       final ByteVector output);1531241461;Puts a Runtime[In]VisibleParameterAnnotations attribute containing all the annotation lists_from the given AnnotationWriter sub-array in the given ByteVector.__@param attributeNameIndex constant pool index of the attribute name (one of_Runtime[In]VisibleParameterAnnotations)._@param annotationWriters an array of AnnotationWriter lists (designated by their <i>last</i>_element)._@param annotableParameterCount the number of elements in annotationWriters to put (elements_[0..annotableParameterCount[ are put)._@param output where the attribute must be put.;static void putParameterAnnotations(_      final int attributeNameIndex,_      final AnnotationWriter[] annotationWriters,_      final int annotableParameterCount,_      final ByteVector output) {_    _    _    int attributeLength = 1 + 2 * annotableParameterCount__    for (int i = 0_ i < annotableParameterCount_ ++i) {_      AnnotationWriter annotationWriter = annotationWriters[i]__      attributeLength +=_          annotationWriter == null ? 0 : annotationWriter.computeAnnotationsSize(null) - 8__    }_    output.putShort(attributeNameIndex)__    output.putInt(attributeLength)__    output.putByte(annotableParameterCount)__    for (int i = 0_ i < annotableParameterCount_ ++i) {_      AnnotationWriter annotationWriter = annotationWriters[i]__      AnnotationWriter firstAnnotation = null__      int numAnnotations = 0__      while (annotationWriter != null) {_        _        annotationWriter.visitEnd()__        numAnnotations++__        firstAnnotation = annotationWriter__        annotationWriter = annotationWriter.previousAnnotation__      }_      output.putShort(numAnnotations)__      annotationWriter = firstAnnotation__      while (annotationWriter != null) {_        output.putByteArray(_            annotationWriter.annotation.data, 0, annotationWriter.annotation.length)__        annotationWriter = annotationWriter.nextAnnotation__      }_    }_  };puts,a,runtime,in,visible,parameter,annotations,attribute,containing,all,the,annotation,lists,from,the,given,annotation,writer,sub,array,in,the,given,byte,vector,param,attribute,name,index,constant,pool,index,of,the,attribute,name,one,of,runtime,in,visible,parameter,annotations,param,annotation,writers,an,array,of,annotation,writer,lists,designated,by,their,i,last,i,element,param,annotable,parameter,count,the,number,of,elements,in,annotation,writers,to,put,elements,0,annotable,parameter,count,are,put,param,output,where,the,attribute,must,be,put;static,void,put,parameter,annotations,final,int,attribute,name,index,final,annotation,writer,annotation,writers,final,int,annotable,parameter,count,final,byte,vector,output,int,attribute,length,1,2,annotable,parameter,count,for,int,i,0,i,annotable,parameter,count,i,annotation,writer,annotation,writer,annotation,writers,i,attribute,length,annotation,writer,null,0,annotation,writer,compute,annotations,size,null,8,output,put,short,attribute,name,index,output,put,int,attribute,length,output,put,byte,annotable,parameter,count,for,int,i,0,i,annotable,parameter,count,i,annotation,writer,annotation,writer,annotation,writers,i,annotation,writer,first,annotation,null,int,num,annotations,0,while,annotation,writer,null,annotation,writer,visit,end,num,annotations,first,annotation,annotation,writer,annotation,writer,annotation,writer,previous,annotation,output,put,short,num,annotations,annotation,writer,first,annotation,while,annotation,writer,null,output,put,byte,array,annotation,writer,annotation,data,0,annotation,writer,annotation,length,annotation,writer,annotation,writer,next,annotation
AnnotationWriter -> static void putParameterAnnotations(       final int attributeNameIndex,       final AnnotationWriter[] annotationWriters,       final int annotableParameterCount,       final ByteVector output);1536664245;Puts a Runtime[In]VisibleParameterAnnotations attribute containing all the annotation lists_from the given AnnotationWriter sub-array in the given ByteVector.__@param attributeNameIndex constant pool index of the attribute name (one of_Runtime[In]VisibleParameterAnnotations)._@param annotationWriters an array of AnnotationWriter lists (designated by their <i>last</i>_element)._@param annotableParameterCount the number of elements in annotationWriters to put (elements_[0..annotableParameterCount[ are put)._@param output where the attribute must be put.;static void putParameterAnnotations(_      final int attributeNameIndex,_      final AnnotationWriter[] annotationWriters,_      final int annotableParameterCount,_      final ByteVector output) {_    _    _    int attributeLength = 1 + 2 * annotableParameterCount__    for (int i = 0_ i < annotableParameterCount_ ++i) {_      AnnotationWriter annotationWriter = annotationWriters[i]__      attributeLength +=_          annotationWriter == null ? 0 : annotationWriter.computeAnnotationsSize(null) - 8__    }_    output.putShort(attributeNameIndex)__    output.putInt(attributeLength)__    output.putByte(annotableParameterCount)__    for (int i = 0_ i < annotableParameterCount_ ++i) {_      AnnotationWriter annotationWriter = annotationWriters[i]__      AnnotationWriter firstAnnotation = null__      int numAnnotations = 0__      while (annotationWriter != null) {_        _        annotationWriter.visitEnd()__        numAnnotations++__        firstAnnotation = annotationWriter__        annotationWriter = annotationWriter.previousAnnotation__      }_      output.putShort(numAnnotations)__      annotationWriter = firstAnnotation__      while (annotationWriter != null) {_        output.putByteArray(_            annotationWriter.annotation.data, 0, annotationWriter.annotation.length)__        annotationWriter = annotationWriter.nextAnnotation__      }_    }_  };puts,a,runtime,in,visible,parameter,annotations,attribute,containing,all,the,annotation,lists,from,the,given,annotation,writer,sub,array,in,the,given,byte,vector,param,attribute,name,index,constant,pool,index,of,the,attribute,name,one,of,runtime,in,visible,parameter,annotations,param,annotation,writers,an,array,of,annotation,writer,lists,designated,by,their,i,last,i,element,param,annotable,parameter,count,the,number,of,elements,in,annotation,writers,to,put,elements,0,annotable,parameter,count,are,put,param,output,where,the,attribute,must,be,put;static,void,put,parameter,annotations,final,int,attribute,name,index,final,annotation,writer,annotation,writers,final,int,annotable,parameter,count,final,byte,vector,output,int,attribute,length,1,2,annotable,parameter,count,for,int,i,0,i,annotable,parameter,count,i,annotation,writer,annotation,writer,annotation,writers,i,attribute,length,annotation,writer,null,0,annotation,writer,compute,annotations,size,null,8,output,put,short,attribute,name,index,output,put,int,attribute,length,output,put,byte,annotable,parameter,count,for,int,i,0,i,annotable,parameter,count,i,annotation,writer,annotation,writer,annotation,writers,i,annotation,writer,first,annotation,null,int,num,annotations,0,while,annotation,writer,null,annotation,writer,visit,end,num,annotations,first,annotation,annotation,writer,annotation,writer,annotation,writer,previous,annotation,output,put,short,num,annotations,annotation,writer,first,annotation,while,annotation,writer,null,output,put,byte,array,annotation,writer,annotation,data,0,annotation,writer,annotation,length,annotation,writer,annotation,writer,next,annotation
AnnotationWriter -> static void put(final AnnotationWriter[] panns, final int off,             final ByteVector out);1366718246;Puts the given annotation lists into the given byte vector.__@param panns_an array of annotation writer lists._@param off_index of the first annotation to be written._@param out_where the annotations must be put.;static void put(final AnnotationWriter[] panns, final int off,_            final ByteVector out) {_        int size = 1 + 2 * (panns.length - off)__        for (int i = off_ i < panns.length_ ++i) {_            size += panns[i] == null ? 0 : panns[i].getSize()__        }_        out.putInt(size).putByte(panns.length - off)__        for (int i = off_ i < panns.length_ ++i) {_            AnnotationWriter aw = panns[i]__            AnnotationWriter last = null__            int n = 0__            while (aw != null) {_                ++n__                aw.visitEnd()_ _                aw.prev = last__                last = aw__                aw = aw.next__            }_            out.putShort(n)__            aw = last__            while (aw != null) {_                out.putByteArray(aw.bv.data, 0, aw.bv.length)__                aw = aw.prev__            }_        }_    };puts,the,given,annotation,lists,into,the,given,byte,vector,param,panns,an,array,of,annotation,writer,lists,param,off,index,of,the,first,annotation,to,be,written,param,out,where,the,annotations,must,be,put;static,void,put,final,annotation,writer,panns,final,int,off,final,byte,vector,out,int,size,1,2,panns,length,off,for,int,i,off,i,panns,length,i,size,panns,i,null,0,panns,i,get,size,out,put,int,size,put,byte,panns,length,off,for,int,i,off,i,panns,length,i,annotation,writer,aw,panns,i,annotation,writer,last,null,int,n,0,while,aw,null,n,aw,visit,end,aw,prev,last,last,aw,aw,aw,next,out,put,short,n,aw,last,while,aw,null,out,put,byte,array,aw,bv,data,0,aw,bv,length,aw,aw,prev
AnnotationWriter -> static void put(final AnnotationWriter[] panns, final int off,             final ByteVector out);1395273982;Puts the given annotation lists into the given byte vector.__@param panns_an array of annotation writer lists._@param off_index of the first annotation to be written._@param out_where the annotations must be put.;static void put(final AnnotationWriter[] panns, final int off,_            final ByteVector out) {_        int size = 1 + 2 * (panns.length - off)__        for (int i = off_ i < panns.length_ ++i) {_            size += panns[i] == null ? 0 : panns[i].getSize()__        }_        out.putInt(size).putByte(panns.length - off)__        for (int i = off_ i < panns.length_ ++i) {_            AnnotationWriter aw = panns[i]__            AnnotationWriter last = null__            int n = 0__            while (aw != null) {_                ++n__                aw.visitEnd()_ _                aw.prev = last__                last = aw__                aw = aw.next__            }_            out.putShort(n)__            aw = last__            while (aw != null) {_                out.putByteArray(aw.bv.data, 0, aw.bv.length)__                aw = aw.prev__            }_        }_    };puts,the,given,annotation,lists,into,the,given,byte,vector,param,panns,an,array,of,annotation,writer,lists,param,off,index,of,the,first,annotation,to,be,written,param,out,where,the,annotations,must,be,put;static,void,put,final,annotation,writer,panns,final,int,off,final,byte,vector,out,int,size,1,2,panns,length,off,for,int,i,off,i,panns,length,i,size,panns,i,null,0,panns,i,get,size,out,put,int,size,put,byte,panns,length,off,for,int,i,off,i,panns,length,i,annotation,writer,aw,panns,i,annotation,writer,last,null,int,n,0,while,aw,null,n,aw,visit,end,aw,prev,last,last,aw,aw,aw,next,out,put,short,n,aw,last,while,aw,null,out,put,byte,array,aw,bv,data,0,aw,bv,length,aw,aw,prev
AnnotationWriter -> static void put(final AnnotationWriter[] panns, final int off,             final ByteVector out);1505821772;Puts the given annotation lists into the given byte vector.__@param panns_an array of annotation writer lists._@param off_index of the first annotation to be written._@param out_where the annotations must be put.;static void put(final AnnotationWriter[] panns, final int off,_            final ByteVector out) {_        int size = 1 + 2 * (panns.length - off)__        for (int i = off_ i < panns.length_ ++i) {_            size += panns[i] == null ? 0 : panns[i].getSize()__        }_        out.putInt(size).putByte(panns.length - off)__        for (int i = off_ i < panns.length_ ++i) {_            AnnotationWriter aw = panns[i]__            AnnotationWriter last = null__            int n = 0__            while (aw != null) {_                ++n__                aw.visitEnd()_ _                aw.prev = last__                last = aw__                aw = aw.next__            }_            out.putShort(n)__            aw = last__            while (aw != null) {_                out.putByteArray(aw.bv.data, 0, aw.bv.length)__                aw = aw.prev__            }_        }_    };puts,the,given,annotation,lists,into,the,given,byte,vector,param,panns,an,array,of,annotation,writer,lists,param,off,index,of,the,first,annotation,to,be,written,param,out,where,the,annotations,must,be,put;static,void,put,final,annotation,writer,panns,final,int,off,final,byte,vector,out,int,size,1,2,panns,length,off,for,int,i,off,i,panns,length,i,size,panns,i,null,0,panns,i,get,size,out,put,int,size,put,byte,panns,length,off,for,int,i,off,i,panns,length,i,annotation,writer,aw,panns,i,annotation,writer,last,null,int,n,0,while,aw,null,n,aw,visit,end,aw,prev,last,last,aw,aw,aw,next,out,put,short,n,aw,last,while,aw,null,out,put,byte,array,aw,bv,data,0,aw,bv,length,aw,aw,prev
