# id;timestamp;commentText;codeText;commentWords;codeWords
SpringObjenesis -> public SpringObjenesis();1434484897;Create a new {@code SpringObjenesis} instance with the_standard instantiator strategy.;public SpringObjenesis() {_		this(null)__	};create,a,new,code,spring,objenesis,instance,with,the,standard,instantiator,strategy;public,spring,objenesis,this,null
SpringObjenesis -> public SpringObjenesis();1467730834;Create a new {@code SpringObjenesis} instance with the_standard instantiator strategy.;public SpringObjenesis() {_		this(null)__	};create,a,new,code,spring,objenesis,instance,with,the,standard,instantiator,strategy;public,spring,objenesis,this,null
SpringObjenesis -> public boolean isWorthTrying();1434484897;Return whether this Objenesis instance is worth trying for instance creation,_i.e. whether it hasn't been used yet or is known to work._<p>If the configured Objenesis instantiator strategy has been identified to not_work on the current JVM at all or if the "spring.objenesis.ignore" property has_been set to "true", this method returns {@code false}.;public boolean isWorthTrying() {_		return (this.worthTrying != Boolean.FALSE)__	};return,whether,this,objenesis,instance,is,worth,trying,for,instance,creation,i,e,whether,it,hasn,t,been,used,yet,or,is,known,to,work,p,if,the,configured,objenesis,instantiator,strategy,has,been,identified,to,not,work,on,the,current,jvm,at,all,or,if,the,spring,objenesis,ignore,property,has,been,set,to,true,this,method,returns,code,false;public,boolean,is,worth,trying,return,this,worth,trying,boolean,false
SpringObjenesis -> public boolean isWorthTrying();1467730834;Return whether this Objenesis instance is worth trying for instance creation,_i.e. whether it hasn't been used yet or is known to work._<p>If the configured Objenesis instantiator strategy has been identified to not_work on the current JVM at all or if the "spring.objenesis.ignore" property has_been set to "true", this method returns {@code false}.;public boolean isWorthTrying() {_		return (this.worthTrying != Boolean.FALSE)__	};return,whether,this,objenesis,instance,is,worth,trying,for,instance,creation,i,e,whether,it,hasn,t,been,used,yet,or,is,known,to,work,p,if,the,configured,objenesis,instantiator,strategy,has,been,identified,to,not,work,on,the,current,jvm,at,all,or,if,the,spring,objenesis,ignore,property,has,been,set,to,true,this,method,returns,code,false;public,boolean,is,worth,trying,return,this,worth,trying,boolean,false
SpringObjenesis -> public <T> T newInstance(Class<T> clazz, boolean useCache);1434484897;Create a new instance of the given class via Objenesis._@param clazz the class to create an instance of_@param useCache whether to use the instantiator cache_(typically {@code true} but can be set to {@code false}_e.g. for reloadable classes)_@return the new instance (never {@code null})_@throws ObjenesisException if instance creation failed;public <T> T newInstance(Class<T> clazz, boolean useCache) {_		if (!useCache) {_			return newInstantiatorOf(clazz).newInstance()__		}_		return getInstantiatorOf(clazz).newInstance()__	};create,a,new,instance,of,the,given,class,via,objenesis,param,clazz,the,class,to,create,an,instance,of,param,use,cache,whether,to,use,the,instantiator,cache,typically,code,true,but,can,be,set,to,code,false,e,g,for,reloadable,classes,return,the,new,instance,never,code,null,throws,objenesis,exception,if,instance,creation,failed;public,t,t,new,instance,class,t,clazz,boolean,use,cache,if,use,cache,return,new,instantiator,of,clazz,new,instance,return,get,instantiator,of,clazz,new,instance
SpringObjenesis -> public <T> T newInstance(Class<T> clazz, boolean useCache);1467730834;Create a new instance of the given class via Objenesis._@param clazz the class to create an instance of_@param useCache whether to use the instantiator cache_(typically {@code true} but can be set to {@code false}_e.g. for reloadable classes)_@return the new instance (never {@code null})_@throws ObjenesisException if instance creation failed;public <T> T newInstance(Class<T> clazz, boolean useCache) {_		if (!useCache) {_			return newInstantiatorOf(clazz).newInstance()__		}_		return getInstantiatorOf(clazz).newInstance()__	};create,a,new,instance,of,the,given,class,via,objenesis,param,clazz,the,class,to,create,an,instance,of,param,use,cache,whether,to,use,the,instantiator,cache,typically,code,true,but,can,be,set,to,code,false,e,g,for,reloadable,classes,return,the,new,instance,never,code,null,throws,objenesis,exception,if,instance,creation,failed;public,t,t,new,instance,class,t,clazz,boolean,use,cache,if,use,cache,return,new,instantiator,of,clazz,new,instance,return,get,instantiator,of,clazz,new,instance
SpringObjenesis -> public SpringObjenesis(InstantiatorStrategy strategy);1434484897;Create a new {@code SpringObjenesis} instance with the_given standard instantiator strategy._@param strategy the instantiator strategy to use;public SpringObjenesis(InstantiatorStrategy strategy) {_		this.strategy = (strategy != null ? strategy : new StdInstantiatorStrategy())___		_		if (SpringProperties.getFlag(SpringObjenesis.IGNORE_OBJENESIS_PROPERTY_NAME)) {_			this.worthTrying = Boolean.FALSE__		}_	};create,a,new,code,spring,objenesis,instance,with,the,given,standard,instantiator,strategy,param,strategy,the,instantiator,strategy,to,use;public,spring,objenesis,instantiator,strategy,strategy,this,strategy,strategy,null,strategy,new,std,instantiator,strategy,if,spring,properties,get,flag,spring,objenesis,this,worth,trying,boolean,false
SpringObjenesis -> public SpringObjenesis(InstantiatorStrategy strategy);1467730834;Create a new {@code SpringObjenesis} instance with the_given standard instantiator strategy._@param strategy the instantiator strategy to use;public SpringObjenesis(InstantiatorStrategy strategy) {_		this.strategy = (strategy != null ? strategy : new StdInstantiatorStrategy())___		_		if (SpringProperties.getFlag(SpringObjenesis.IGNORE_OBJENESIS_PROPERTY_NAME)) {_			this.worthTrying = Boolean.FALSE__		}_	};create,a,new,code,spring,objenesis,instance,with,the,given,standard,instantiator,strategy,param,strategy,the,instantiator,strategy,to,use;public,spring,objenesis,instantiator,strategy,strategy,this,strategy,strategy,null,strategy,new,std,instantiator,strategy,if,spring,properties,get,flag,spring,objenesis,this,worth,trying,boolean,false
