# id;timestamp;commentText;codeText;commentWords;codeWords
PropertiesLoaderUtils -> public static Properties loadAllProperties(String resourceName) throws IOException;1328020251;Load all properties from the given class path resource,_using the default class loader._<p>Merges properties if more than one resource of the same name_found in the class path._@param resourceName the name of the class path resource_@return the populated Properties instance_@throws IOException if loading failed;public static Properties loadAllProperties(String resourceName) throws IOException {_		return loadAllProperties(resourceName, null)__	};load,all,properties,from,the,given,class,path,resource,using,the,default,class,loader,p,merges,properties,if,more,than,one,resource,of,the,same,name,found,in,the,class,path,param,resource,name,the,name,of,the,class,path,resource,return,the,populated,properties,instance,throws,ioexception,if,loading,failed;public,static,properties,load,all,properties,string,resource,name,throws,ioexception,return,load,all,properties,resource,name,null
PropertiesLoaderUtils -> public static Properties loadAllProperties(String resourceName) throws IOException;1329393628;Load all properties from the given class path resource,_using the default class loader._<p>Merges properties if more than one resource of the same name_found in the class path._@param resourceName the name of the class path resource_@return the populated Properties instance_@throws IOException if loading failed;public static Properties loadAllProperties(String resourceName) throws IOException {_		return loadAllProperties(resourceName, null)__	};load,all,properties,from,the,given,class,path,resource,using,the,default,class,loader,p,merges,properties,if,more,than,one,resource,of,the,same,name,found,in,the,class,path,param,resource,name,the,name,of,the,class,path,resource,return,the,populated,properties,instance,throws,ioexception,if,loading,failed;public,static,properties,load,all,properties,string,resource,name,throws,ioexception,return,load,all,properties,resource,name,null
PropertiesLoaderUtils -> public static Properties loadAllProperties(String resourceName) throws IOException;1356735495;Load all properties from the given class path resource,_using the default class loader._<p>Merges properties if more than one resource of the same name_found in the class path._@param resourceName the name of the class path resource_@return the populated Properties instance_@throws IOException if loading failed;public static Properties loadAllProperties(String resourceName) throws IOException {_		return loadAllProperties(resourceName, null)__	};load,all,properties,from,the,given,class,path,resource,using,the,default,class,loader,p,merges,properties,if,more,than,one,resource,of,the,same,name,found,in,the,class,path,param,resource,name,the,name,of,the,class,path,resource,return,the,populated,properties,instance,throws,ioexception,if,loading,failed;public,static,properties,load,all,properties,string,resource,name,throws,ioexception,return,load,all,properties,resource,name,null
PropertiesLoaderUtils -> public static Properties loadAllProperties(String resourceName) throws IOException;1362408075;Load all properties from the specified class path resource_(in ISO-8859-1 encoding), using the default class loader._<p>Merges properties if more than one resource of the same name_found in the class path._@param resourceName the name of the class path resource_@return the populated Properties instance_@throws IOException if loading failed;public static Properties loadAllProperties(String resourceName) throws IOException {_		return loadAllProperties(resourceName, null)__	};load,all,properties,from,the,specified,class,path,resource,in,iso,8859,1,encoding,using,the,default,class,loader,p,merges,properties,if,more,than,one,resource,of,the,same,name,found,in,the,class,path,param,resource,name,the,name,of,the,class,path,resource,return,the,populated,properties,instance,throws,ioexception,if,loading,failed;public,static,properties,load,all,properties,string,resource,name,throws,ioexception,return,load,all,properties,resource,name,null
PropertiesLoaderUtils -> public static Properties loadAllProperties(String resourceName) throws IOException;1385412762;Load all properties from the specified class path resource_(in ISO-8859-1 encoding), using the default class loader._<p>Merges properties if more than one resource of the same name_found in the class path._@param resourceName the name of the class path resource_@return the populated Properties instance_@throws IOException if loading failed;public static Properties loadAllProperties(String resourceName) throws IOException {_		return loadAllProperties(resourceName, null)__	};load,all,properties,from,the,specified,class,path,resource,in,iso,8859,1,encoding,using,the,default,class,loader,p,merges,properties,if,more,than,one,resource,of,the,same,name,found,in,the,class,path,param,resource,name,the,name,of,the,class,path,resource,return,the,populated,properties,instance,throws,ioexception,if,loading,failed;public,static,properties,load,all,properties,string,resource,name,throws,ioexception,return,load,all,properties,resource,name,null
PropertiesLoaderUtils -> public static Properties loadAllProperties(String resourceName) throws IOException;1398290095;Load all properties from the specified class path resource_(in ISO-8859-1 encoding), using the default class loader._<p>Merges properties if more than one resource of the same name_found in the class path._@param resourceName the name of the class path resource_@return the populated Properties instance_@throws IOException if loading failed;public static Properties loadAllProperties(String resourceName) throws IOException {_		return loadAllProperties(resourceName, null)__	};load,all,properties,from,the,specified,class,path,resource,in,iso,8859,1,encoding,using,the,default,class,loader,p,merges,properties,if,more,than,one,resource,of,the,same,name,found,in,the,class,path,param,resource,name,the,name,of,the,class,path,resource,return,the,populated,properties,instance,throws,ioexception,if,loading,failed;public,static,properties,load,all,properties,string,resource,name,throws,ioexception,return,load,all,properties,resource,name,null
PropertiesLoaderUtils -> public static Properties loadAllProperties(String resourceName) throws IOException;1398638841;Load all properties from the specified class path resource_(in ISO-8859-1 encoding), using the default class loader._<p>Merges properties if more than one resource of the same name_found in the class path._@param resourceName the name of the class path resource_@return the populated Properties instance_@throws IOException if loading failed;public static Properties loadAllProperties(String resourceName) throws IOException {_		return loadAllProperties(resourceName, null)__	};load,all,properties,from,the,specified,class,path,resource,in,iso,8859,1,encoding,using,the,default,class,loader,p,merges,properties,if,more,than,one,resource,of,the,same,name,found,in,the,class,path,param,resource,name,the,name,of,the,class,path,resource,return,the,populated,properties,instance,throws,ioexception,if,loading,failed;public,static,properties,load,all,properties,string,resource,name,throws,ioexception,return,load,all,properties,resource,name,null
PropertiesLoaderUtils -> public static Properties loadAllProperties(String resourceName) throws IOException;1456180001;Load all properties from the specified class path resource_(in ISO-8859-1 encoding), using the default class loader._<p>Merges properties if more than one resource of the same name_found in the class path._@param resourceName the name of the class path resource_@return the populated Properties instance_@throws IOException if loading failed;public static Properties loadAllProperties(String resourceName) throws IOException {_		return loadAllProperties(resourceName, null)__	};load,all,properties,from,the,specified,class,path,resource,in,iso,8859,1,encoding,using,the,default,class,loader,p,merges,properties,if,more,than,one,resource,of,the,same,name,found,in,the,class,path,param,resource,name,the,name,of,the,class,path,resource,return,the,populated,properties,instance,throws,ioexception,if,loading,failed;public,static,properties,load,all,properties,string,resource,name,throws,ioexception,return,load,all,properties,resource,name,null
PropertiesLoaderUtils -> public static Properties loadAllProperties(String resourceName) throws IOException;1495868221;Load all properties from the specified class path resource_(in ISO-8859-1 encoding), using the default class loader._<p>Merges properties if more than one resource of the same name_found in the class path._@param resourceName the name of the class path resource_@return the populated Properties instance_@throws IOException if loading failed;public static Properties loadAllProperties(String resourceName) throws IOException {_		return loadAllProperties(resourceName, null)__	};load,all,properties,from,the,specified,class,path,resource,in,iso,8859,1,encoding,using,the,default,class,loader,p,merges,properties,if,more,than,one,resource,of,the,same,name,found,in,the,class,path,param,resource,name,the,name,of,the,class,path,resource,return,the,populated,properties,instance,throws,ioexception,if,loading,failed;public,static,properties,load,all,properties,string,resource,name,throws,ioexception,return,load,all,properties,resource,name,null
PropertiesLoaderUtils -> public static Properties loadAllProperties(String resourceName, ClassLoader classLoader) throws IOException;1328020251;Load all properties from the given class path resource,_using the given class loader._<p>Merges properties if more than one resource of the same name_found in the class path._@param resourceName the name of the class path resource_@param classLoader the ClassLoader to use for loading_(or <code>null</code> to use the default class loader)_@return the populated Properties instance_@throws IOException if loading failed;public static Properties loadAllProperties(String resourceName, ClassLoader classLoader) throws IOException {_		Assert.notNull(resourceName, "Resource name must not be null")__		ClassLoader clToUse = classLoader__		if (clToUse == null) {_			clToUse = ClassUtils.getDefaultClassLoader()__		}_		Properties properties = new Properties()__		Enumeration urls = clToUse.getResources(resourceName)__		while (urls.hasMoreElements()) {_			URL url = (URL) urls.nextElement()__			InputStream is = null__			try {_				URLConnection con = url.openConnection()__				con.setUseCaches(false)__				is = con.getInputStream()__				properties.load(is)__			}_			finally {_				if (is != null) {_					is.close()__				}_			}_		}_		return properties__	};load,all,properties,from,the,given,class,path,resource,using,the,given,class,loader,p,merges,properties,if,more,than,one,resource,of,the,same,name,found,in,the,class,path,param,resource,name,the,name,of,the,class,path,resource,param,class,loader,the,class,loader,to,use,for,loading,or,code,null,code,to,use,the,default,class,loader,return,the,populated,properties,instance,throws,ioexception,if,loading,failed;public,static,properties,load,all,properties,string,resource,name,class,loader,class,loader,throws,ioexception,assert,not,null,resource,name,resource,name,must,not,be,null,class,loader,cl,to,use,class,loader,if,cl,to,use,null,cl,to,use,class,utils,get,default,class,loader,properties,properties,new,properties,enumeration,urls,cl,to,use,get,resources,resource,name,while,urls,has,more,elements,url,url,url,urls,next,element,input,stream,is,null,try,urlconnection,con,url,open,connection,con,set,use,caches,false,is,con,get,input,stream,properties,load,is,finally,if,is,null,is,close,return,properties
PropertiesLoaderUtils -> public static Properties loadAllProperties(String resourceName, ClassLoader classLoader) throws IOException;1329393628;Load all properties from the given class path resource,_using the given class loader._<p>Merges properties if more than one resource of the same name_found in the class path._@param resourceName the name of the class path resource_@param classLoader the ClassLoader to use for loading_(or <code>null</code> to use the default class loader)_@return the populated Properties instance_@throws IOException if loading failed;public static Properties loadAllProperties(String resourceName, ClassLoader classLoader) throws IOException {_		Assert.notNull(resourceName, "Resource name must not be null")__		ClassLoader clToUse = classLoader__		if (clToUse == null) {_			clToUse = ClassUtils.getDefaultClassLoader()__		}_		Properties properties = new Properties()__		Enumeration urls = clToUse.getResources(resourceName)__		while (urls.hasMoreElements()) {_			URL url = (URL) urls.nextElement()__			InputStream is = null__			try {_				URLConnection con = url.openConnection()__				ResourceUtils.useCachesIfNecessary(con)__				is = con.getInputStream()__				properties.load(is)__			}_			finally {_				if (is != null) {_					is.close()__				}_			}_		}_		return properties__	};load,all,properties,from,the,given,class,path,resource,using,the,given,class,loader,p,merges,properties,if,more,than,one,resource,of,the,same,name,found,in,the,class,path,param,resource,name,the,name,of,the,class,path,resource,param,class,loader,the,class,loader,to,use,for,loading,or,code,null,code,to,use,the,default,class,loader,return,the,populated,properties,instance,throws,ioexception,if,loading,failed;public,static,properties,load,all,properties,string,resource,name,class,loader,class,loader,throws,ioexception,assert,not,null,resource,name,resource,name,must,not,be,null,class,loader,cl,to,use,class,loader,if,cl,to,use,null,cl,to,use,class,utils,get,default,class,loader,properties,properties,new,properties,enumeration,urls,cl,to,use,get,resources,resource,name,while,urls,has,more,elements,url,url,url,urls,next,element,input,stream,is,null,try,urlconnection,con,url,open,connection,resource,utils,use,caches,if,necessary,con,is,con,get,input,stream,properties,load,is,finally,if,is,null,is,close,return,properties
PropertiesLoaderUtils -> public static Properties loadAllProperties(String resourceName, ClassLoader classLoader) throws IOException;1356735495;Load all properties from the given class path resource,_using the given class loader._<p>Merges properties if more than one resource of the same name_found in the class path._@param resourceName the name of the class path resource_@param classLoader the ClassLoader to use for loading_(or {@code null} to use the default class loader)_@return the populated Properties instance_@throws IOException if loading failed;public static Properties loadAllProperties(String resourceName, ClassLoader classLoader) throws IOException {_		Assert.notNull(resourceName, "Resource name must not be null")__		ClassLoader clToUse = classLoader__		if (clToUse == null) {_			clToUse = ClassUtils.getDefaultClassLoader()__		}_		Properties properties = new Properties()__		Enumeration urls = clToUse.getResources(resourceName)__		while (urls.hasMoreElements()) {_			URL url = (URL) urls.nextElement()__			InputStream is = null__			try {_				URLConnection con = url.openConnection()__				ResourceUtils.useCachesIfNecessary(con)__				is = con.getInputStream()__				properties.load(is)__			}_			finally {_				if (is != null) {_					is.close()__				}_			}_		}_		return properties__	};load,all,properties,from,the,given,class,path,resource,using,the,given,class,loader,p,merges,properties,if,more,than,one,resource,of,the,same,name,found,in,the,class,path,param,resource,name,the,name,of,the,class,path,resource,param,class,loader,the,class,loader,to,use,for,loading,or,code,null,to,use,the,default,class,loader,return,the,populated,properties,instance,throws,ioexception,if,loading,failed;public,static,properties,load,all,properties,string,resource,name,class,loader,class,loader,throws,ioexception,assert,not,null,resource,name,resource,name,must,not,be,null,class,loader,cl,to,use,class,loader,if,cl,to,use,null,cl,to,use,class,utils,get,default,class,loader,properties,properties,new,properties,enumeration,urls,cl,to,use,get,resources,resource,name,while,urls,has,more,elements,url,url,url,urls,next,element,input,stream,is,null,try,urlconnection,con,url,open,connection,resource,utils,use,caches,if,necessary,con,is,con,get,input,stream,properties,load,is,finally,if,is,null,is,close,return,properties
PropertiesLoaderUtils -> public static Properties loadAllProperties(String resourceName, ClassLoader classLoader) throws IOException;1362408075;Load all properties from the specified class path resource_(in ISO-8859-1 encoding), using the given class loader._<p>Merges properties if more than one resource of the same name_found in the class path._@param resourceName the name of the class path resource_@param classLoader the ClassLoader to use for loading_(or {@code null} to use the default class loader)_@return the populated Properties instance_@throws IOException if loading failed;public static Properties loadAllProperties(String resourceName, ClassLoader classLoader) throws IOException {_		Assert.notNull(resourceName, "Resource name must not be null")__		ClassLoader clToUse = classLoader__		if (clToUse == null) {_			clToUse = ClassUtils.getDefaultClassLoader()__		}_		Properties props = new Properties()__		Enumeration urls = clToUse.getResources(resourceName)__		while (urls.hasMoreElements()) {_			URL url = (URL) urls.nextElement()__			URLConnection con = url.openConnection()__			ResourceUtils.useCachesIfNecessary(con)__			InputStream is = con.getInputStream()__			try {_				if (resourceName != null && resourceName.endsWith(XML_FILE_EXTENSION)) {_					props.loadFromXML(is)__				}_				else {_					props.load(is)__				}_			}_			finally {_				is.close()__			}_		}_		return props__	};load,all,properties,from,the,specified,class,path,resource,in,iso,8859,1,encoding,using,the,given,class,loader,p,merges,properties,if,more,than,one,resource,of,the,same,name,found,in,the,class,path,param,resource,name,the,name,of,the,class,path,resource,param,class,loader,the,class,loader,to,use,for,loading,or,code,null,to,use,the,default,class,loader,return,the,populated,properties,instance,throws,ioexception,if,loading,failed;public,static,properties,load,all,properties,string,resource,name,class,loader,class,loader,throws,ioexception,assert,not,null,resource,name,resource,name,must,not,be,null,class,loader,cl,to,use,class,loader,if,cl,to,use,null,cl,to,use,class,utils,get,default,class,loader,properties,props,new,properties,enumeration,urls,cl,to,use,get,resources,resource,name,while,urls,has,more,elements,url,url,url,urls,next,element,urlconnection,con,url,open,connection,resource,utils,use,caches,if,necessary,con,input,stream,is,con,get,input,stream,try,if,resource,name,null,resource,name,ends,with,props,load,from,xml,is,else,props,load,is,finally,is,close,return,props
PropertiesLoaderUtils -> public static Properties loadAllProperties(String resourceName, ClassLoader classLoader) throws IOException;1385412762;Load all properties from the specified class path resource_(in ISO-8859-1 encoding), using the given class loader._<p>Merges properties if more than one resource of the same name_found in the class path._@param resourceName the name of the class path resource_@param classLoader the ClassLoader to use for loading_(or {@code null} to use the default class loader)_@return the populated Properties instance_@throws IOException if loading failed;public static Properties loadAllProperties(String resourceName, ClassLoader classLoader) throws IOException {_		Assert.notNull(resourceName, "Resource name must not be null")__		ClassLoader clToUse = classLoader__		if (clToUse == null) {_			clToUse = ClassUtils.getDefaultClassLoader()__		}_		Properties props = new Properties()__		Enumeration<URL> urls = clToUse.getResources(resourceName)__		while (urls.hasMoreElements()) {_			URL url = urls.nextElement()__			URLConnection con = url.openConnection()__			ResourceUtils.useCachesIfNecessary(con)__			InputStream is = con.getInputStream()__			try {_				if (resourceName != null && resourceName.endsWith(XML_FILE_EXTENSION)) {_					props.loadFromXML(is)__				}_				else {_					props.load(is)__				}_			}_			finally {_				is.close()__			}_		}_		return props__	};load,all,properties,from,the,specified,class,path,resource,in,iso,8859,1,encoding,using,the,given,class,loader,p,merges,properties,if,more,than,one,resource,of,the,same,name,found,in,the,class,path,param,resource,name,the,name,of,the,class,path,resource,param,class,loader,the,class,loader,to,use,for,loading,or,code,null,to,use,the,default,class,loader,return,the,populated,properties,instance,throws,ioexception,if,loading,failed;public,static,properties,load,all,properties,string,resource,name,class,loader,class,loader,throws,ioexception,assert,not,null,resource,name,resource,name,must,not,be,null,class,loader,cl,to,use,class,loader,if,cl,to,use,null,cl,to,use,class,utils,get,default,class,loader,properties,props,new,properties,enumeration,url,urls,cl,to,use,get,resources,resource,name,while,urls,has,more,elements,url,url,urls,next,element,urlconnection,con,url,open,connection,resource,utils,use,caches,if,necessary,con,input,stream,is,con,get,input,stream,try,if,resource,name,null,resource,name,ends,with,props,load,from,xml,is,else,props,load,is,finally,is,close,return,props
PropertiesLoaderUtils -> public static Properties loadAllProperties(String resourceName, ClassLoader classLoader) throws IOException;1398290095;Load all properties from the specified class path resource_(in ISO-8859-1 encoding), using the given class loader._<p>Merges properties if more than one resource of the same name_found in the class path._@param resourceName the name of the class path resource_@param classLoader the ClassLoader to use for loading_(or {@code null} to use the default class loader)_@return the populated Properties instance_@throws IOException if loading failed;public static Properties loadAllProperties(String resourceName, ClassLoader classLoader) throws IOException {_		Assert.notNull(resourceName, "Resource name must not be null")__		ClassLoader classLoaderToUse = classLoader__		if (classLoaderToUse == null) {_			classLoaderToUse = ClassUtils.getDefaultClassLoader()__		}_		Properties props = new Properties()__		Enumeration<URL> urls = (classLoaderToUse != null ? classLoaderToUse.getResources(resourceName) :_				ClassLoader.getSystemResources(resourceName))__		while (urls.hasMoreElements()) {_			URL url = urls.nextElement()__			URLConnection con = url.openConnection()__			ResourceUtils.useCachesIfNecessary(con)__			InputStream is = con.getInputStream()__			try {_				if (resourceName != null && resourceName.endsWith(XML_FILE_EXTENSION)) {_					props.loadFromXML(is)__				}_				else {_					props.load(is)__				}_			}_			finally {_				is.close()__			}_		}_		return props__	};load,all,properties,from,the,specified,class,path,resource,in,iso,8859,1,encoding,using,the,given,class,loader,p,merges,properties,if,more,than,one,resource,of,the,same,name,found,in,the,class,path,param,resource,name,the,name,of,the,class,path,resource,param,class,loader,the,class,loader,to,use,for,loading,or,code,null,to,use,the,default,class,loader,return,the,populated,properties,instance,throws,ioexception,if,loading,failed;public,static,properties,load,all,properties,string,resource,name,class,loader,class,loader,throws,ioexception,assert,not,null,resource,name,resource,name,must,not,be,null,class,loader,class,loader,to,use,class,loader,if,class,loader,to,use,null,class,loader,to,use,class,utils,get,default,class,loader,properties,props,new,properties,enumeration,url,urls,class,loader,to,use,null,class,loader,to,use,get,resources,resource,name,class,loader,get,system,resources,resource,name,while,urls,has,more,elements,url,url,urls,next,element,urlconnection,con,url,open,connection,resource,utils,use,caches,if,necessary,con,input,stream,is,con,get,input,stream,try,if,resource,name,null,resource,name,ends,with,props,load,from,xml,is,else,props,load,is,finally,is,close,return,props
PropertiesLoaderUtils -> public static Properties loadAllProperties(String resourceName, ClassLoader classLoader) throws IOException;1398638841;Load all properties from the specified class path resource_(in ISO-8859-1 encoding), using the given class loader._<p>Merges properties if more than one resource of the same name_found in the class path._@param resourceName the name of the class path resource_@param classLoader the ClassLoader to use for loading_(or {@code null} to use the default class loader)_@return the populated Properties instance_@throws IOException if loading failed;public static Properties loadAllProperties(String resourceName, ClassLoader classLoader) throws IOException {_		Assert.notNull(resourceName, "Resource name must not be null")__		ClassLoader classLoaderToUse = classLoader__		if (classLoaderToUse == null) {_			classLoaderToUse = ClassUtils.getDefaultClassLoader()__		}_		Enumeration<URL> urls = (classLoaderToUse != null ? classLoaderToUse.getResources(resourceName) :_				ClassLoader.getSystemResources(resourceName))__		Properties props = new Properties()__		while (urls.hasMoreElements()) {_			URL url = urls.nextElement()__			URLConnection con = url.openConnection()__			ResourceUtils.useCachesIfNecessary(con)__			InputStream is = con.getInputStream()__			try {_				if (resourceName != null && resourceName.endsWith(XML_FILE_EXTENSION)) {_					props.loadFromXML(is)__				}_				else {_					props.load(is)__				}_			}_			finally {_				is.close()__			}_		}_		return props__	};load,all,properties,from,the,specified,class,path,resource,in,iso,8859,1,encoding,using,the,given,class,loader,p,merges,properties,if,more,than,one,resource,of,the,same,name,found,in,the,class,path,param,resource,name,the,name,of,the,class,path,resource,param,class,loader,the,class,loader,to,use,for,loading,or,code,null,to,use,the,default,class,loader,return,the,populated,properties,instance,throws,ioexception,if,loading,failed;public,static,properties,load,all,properties,string,resource,name,class,loader,class,loader,throws,ioexception,assert,not,null,resource,name,resource,name,must,not,be,null,class,loader,class,loader,to,use,class,loader,if,class,loader,to,use,null,class,loader,to,use,class,utils,get,default,class,loader,enumeration,url,urls,class,loader,to,use,null,class,loader,to,use,get,resources,resource,name,class,loader,get,system,resources,resource,name,properties,props,new,properties,while,urls,has,more,elements,url,url,urls,next,element,urlconnection,con,url,open,connection,resource,utils,use,caches,if,necessary,con,input,stream,is,con,get,input,stream,try,if,resource,name,null,resource,name,ends,with,props,load,from,xml,is,else,props,load,is,finally,is,close,return,props
PropertiesLoaderUtils -> public static Properties loadAllProperties(String resourceName, ClassLoader classLoader) throws IOException;1456180001;Load all properties from the specified class path resource_(in ISO-8859-1 encoding), using the given class loader._<p>Merges properties if more than one resource of the same name_found in the class path._@param resourceName the name of the class path resource_@param classLoader the ClassLoader to use for loading_(or {@code null} to use the default class loader)_@return the populated Properties instance_@throws IOException if loading failed;public static Properties loadAllProperties(String resourceName, ClassLoader classLoader) throws IOException {_		Assert.notNull(resourceName, "Resource name must not be null")__		ClassLoader classLoaderToUse = classLoader__		if (classLoaderToUse == null) {_			classLoaderToUse = ClassUtils.getDefaultClassLoader()__		}_		Enumeration<URL> urls = (classLoaderToUse != null ? classLoaderToUse.getResources(resourceName) :_				ClassLoader.getSystemResources(resourceName))__		Properties props = new Properties()__		while (urls.hasMoreElements()) {_			URL url = urls.nextElement()__			URLConnection con = url.openConnection()__			ResourceUtils.useCachesIfNecessary(con)__			InputStream is = con.getInputStream()__			try {_				if (resourceName.endsWith(XML_FILE_EXTENSION)) {_					props.loadFromXML(is)__				}_				else {_					props.load(is)__				}_			}_			finally {_				is.close()__			}_		}_		return props__	};load,all,properties,from,the,specified,class,path,resource,in,iso,8859,1,encoding,using,the,given,class,loader,p,merges,properties,if,more,than,one,resource,of,the,same,name,found,in,the,class,path,param,resource,name,the,name,of,the,class,path,resource,param,class,loader,the,class,loader,to,use,for,loading,or,code,null,to,use,the,default,class,loader,return,the,populated,properties,instance,throws,ioexception,if,loading,failed;public,static,properties,load,all,properties,string,resource,name,class,loader,class,loader,throws,ioexception,assert,not,null,resource,name,resource,name,must,not,be,null,class,loader,class,loader,to,use,class,loader,if,class,loader,to,use,null,class,loader,to,use,class,utils,get,default,class,loader,enumeration,url,urls,class,loader,to,use,null,class,loader,to,use,get,resources,resource,name,class,loader,get,system,resources,resource,name,properties,props,new,properties,while,urls,has,more,elements,url,url,urls,next,element,urlconnection,con,url,open,connection,resource,utils,use,caches,if,necessary,con,input,stream,is,con,get,input,stream,try,if,resource,name,ends,with,props,load,from,xml,is,else,props,load,is,finally,is,close,return,props
PropertiesLoaderUtils -> public static Properties loadProperties(EncodedResource resource) throws IOException;1362408075;Load properties from the given EncodedResource,_potentially defining a specific encoding for the properties file._@see #fillProperties(java.util.Properties, EncodedResource);public static Properties loadProperties(EncodedResource resource) throws IOException {_		Properties props = new Properties()__		fillProperties(props, resource)__		return props__	};load,properties,from,the,given,encoded,resource,potentially,defining,a,specific,encoding,for,the,properties,file,see,fill,properties,java,util,properties,encoded,resource;public,static,properties,load,properties,encoded,resource,resource,throws,ioexception,properties,props,new,properties,fill,properties,props,resource,return,props
PropertiesLoaderUtils -> public static Properties loadProperties(EncodedResource resource) throws IOException;1385412762;Load properties from the given EncodedResource,_potentially defining a specific encoding for the properties file._@see #fillProperties(java.util.Properties, EncodedResource);public static Properties loadProperties(EncodedResource resource) throws IOException {_		Properties props = new Properties()__		fillProperties(props, resource)__		return props__	};load,properties,from,the,given,encoded,resource,potentially,defining,a,specific,encoding,for,the,properties,file,see,fill,properties,java,util,properties,encoded,resource;public,static,properties,load,properties,encoded,resource,resource,throws,ioexception,properties,props,new,properties,fill,properties,props,resource,return,props
PropertiesLoaderUtils -> public static Properties loadProperties(EncodedResource resource) throws IOException;1398290095;Load properties from the given EncodedResource,_potentially defining a specific encoding for the properties file._@see #fillProperties(java.util.Properties, EncodedResource);public static Properties loadProperties(EncodedResource resource) throws IOException {_		Properties props = new Properties()__		fillProperties(props, resource)__		return props__	};load,properties,from,the,given,encoded,resource,potentially,defining,a,specific,encoding,for,the,properties,file,see,fill,properties,java,util,properties,encoded,resource;public,static,properties,load,properties,encoded,resource,resource,throws,ioexception,properties,props,new,properties,fill,properties,props,resource,return,props
PropertiesLoaderUtils -> public static Properties loadProperties(EncodedResource resource) throws IOException;1398638841;Load properties from the given EncodedResource,_potentially defining a specific encoding for the properties file._@see #fillProperties(java.util.Properties, EncodedResource);public static Properties loadProperties(EncodedResource resource) throws IOException {_		Properties props = new Properties()__		fillProperties(props, resource)__		return props__	};load,properties,from,the,given,encoded,resource,potentially,defining,a,specific,encoding,for,the,properties,file,see,fill,properties,java,util,properties,encoded,resource;public,static,properties,load,properties,encoded,resource,resource,throws,ioexception,properties,props,new,properties,fill,properties,props,resource,return,props
PropertiesLoaderUtils -> public static Properties loadProperties(EncodedResource resource) throws IOException;1456180001;Load properties from the given EncodedResource,_potentially defining a specific encoding for the properties file._@see #fillProperties(java.util.Properties, EncodedResource);public static Properties loadProperties(EncodedResource resource) throws IOException {_		Properties props = new Properties()__		fillProperties(props, resource)__		return props__	};load,properties,from,the,given,encoded,resource,potentially,defining,a,specific,encoding,for,the,properties,file,see,fill,properties,java,util,properties,encoded,resource;public,static,properties,load,properties,encoded,resource,resource,throws,ioexception,properties,props,new,properties,fill,properties,props,resource,return,props
PropertiesLoaderUtils -> public static Properties loadProperties(EncodedResource resource) throws IOException;1495868221;Load properties from the given EncodedResource,_potentially defining a specific encoding for the properties file._@see #fillProperties(java.util.Properties, EncodedResource);public static Properties loadProperties(EncodedResource resource) throws IOException {_		Properties props = new Properties()__		fillProperties(props, resource)__		return props__	};load,properties,from,the,given,encoded,resource,potentially,defining,a,specific,encoding,for,the,properties,file,see,fill,properties,java,util,properties,encoded,resource;public,static,properties,load,properties,encoded,resource,resource,throws,ioexception,properties,props,new,properties,fill,properties,props,resource,return,props
PropertiesLoaderUtils -> static void fillProperties(Properties props, EncodedResource resource, PropertiesPersister persister) 			throws IOException;1362408075;Actually load properties from the given EncodedResource into the given Properties instance._@param props the Properties instance to load into_@param resource the resource to load from_@param persister the PropertiesPersister to use_@throws IOException in case of I/O errors;static void fillProperties(Properties props, EncodedResource resource, PropertiesPersister persister)_			throws IOException {__		InputStream stream = null__		Reader reader = null__		try {_			String filename = resource.getResource().getFilename()__			if (filename != null && filename.endsWith(XML_FILE_EXTENSION)) {_				stream = resource.getInputStream()__				persister.loadFromXml(props, stream)__			}_			else if (resource.requiresReader()) {_				reader = resource.getReader()__				persister.load(props, reader)__			}_			else {_				stream = resource.getInputStream()__				persister.load(props, stream)__			}_		}_		finally {_			if (stream != null) {_				stream.close()__			}_			if (reader != null) {_				reader.close()__			}_		}_	};actually,load,properties,from,the,given,encoded,resource,into,the,given,properties,instance,param,props,the,properties,instance,to,load,into,param,resource,the,resource,to,load,from,param,persister,the,properties,persister,to,use,throws,ioexception,in,case,of,i,o,errors;static,void,fill,properties,properties,props,encoded,resource,resource,properties,persister,persister,throws,ioexception,input,stream,stream,null,reader,reader,null,try,string,filename,resource,get,resource,get,filename,if,filename,null,filename,ends,with,stream,resource,get,input,stream,persister,load,from,xml,props,stream,else,if,resource,requires,reader,reader,resource,get,reader,persister,load,props,reader,else,stream,resource,get,input,stream,persister,load,props,stream,finally,if,stream,null,stream,close,if,reader,null,reader,close
PropertiesLoaderUtils -> static void fillProperties(Properties props, EncodedResource resource, PropertiesPersister persister) 			throws IOException;1385412762;Actually load properties from the given EncodedResource into the given Properties instance._@param props the Properties instance to load into_@param resource the resource to load from_@param persister the PropertiesPersister to use_@throws IOException in case of I/O errors;static void fillProperties(Properties props, EncodedResource resource, PropertiesPersister persister)_			throws IOException {__		InputStream stream = null__		Reader reader = null__		try {_			String filename = resource.getResource().getFilename()__			if (filename != null && filename.endsWith(XML_FILE_EXTENSION)) {_				stream = resource.getInputStream()__				persister.loadFromXml(props, stream)__			}_			else if (resource.requiresReader()) {_				reader = resource.getReader()__				persister.load(props, reader)__			}_			else {_				stream = resource.getInputStream()__				persister.load(props, stream)__			}_		}_		finally {_			if (stream != null) {_				stream.close()__			}_			if (reader != null) {_				reader.close()__			}_		}_	};actually,load,properties,from,the,given,encoded,resource,into,the,given,properties,instance,param,props,the,properties,instance,to,load,into,param,resource,the,resource,to,load,from,param,persister,the,properties,persister,to,use,throws,ioexception,in,case,of,i,o,errors;static,void,fill,properties,properties,props,encoded,resource,resource,properties,persister,persister,throws,ioexception,input,stream,stream,null,reader,reader,null,try,string,filename,resource,get,resource,get,filename,if,filename,null,filename,ends,with,stream,resource,get,input,stream,persister,load,from,xml,props,stream,else,if,resource,requires,reader,reader,resource,get,reader,persister,load,props,reader,else,stream,resource,get,input,stream,persister,load,props,stream,finally,if,stream,null,stream,close,if,reader,null,reader,close
PropertiesLoaderUtils -> static void fillProperties(Properties props, EncodedResource resource, PropertiesPersister persister) 			throws IOException;1398290095;Actually load properties from the given EncodedResource into the given Properties instance._@param props the Properties instance to load into_@param resource the resource to load from_@param persister the PropertiesPersister to use_@throws IOException in case of I/O errors;static void fillProperties(Properties props, EncodedResource resource, PropertiesPersister persister)_			throws IOException {__		InputStream stream = null__		Reader reader = null__		try {_			String filename = resource.getResource().getFilename()__			if (filename != null && filename.endsWith(XML_FILE_EXTENSION)) {_				stream = resource.getInputStream()__				persister.loadFromXml(props, stream)__			}_			else if (resource.requiresReader()) {_				reader = resource.getReader()__				persister.load(props, reader)__			}_			else {_				stream = resource.getInputStream()__				persister.load(props, stream)__			}_		}_		finally {_			if (stream != null) {_				stream.close()__			}_			if (reader != null) {_				reader.close()__			}_		}_	};actually,load,properties,from,the,given,encoded,resource,into,the,given,properties,instance,param,props,the,properties,instance,to,load,into,param,resource,the,resource,to,load,from,param,persister,the,properties,persister,to,use,throws,ioexception,in,case,of,i,o,errors;static,void,fill,properties,properties,props,encoded,resource,resource,properties,persister,persister,throws,ioexception,input,stream,stream,null,reader,reader,null,try,string,filename,resource,get,resource,get,filename,if,filename,null,filename,ends,with,stream,resource,get,input,stream,persister,load,from,xml,props,stream,else,if,resource,requires,reader,reader,resource,get,reader,persister,load,props,reader,else,stream,resource,get,input,stream,persister,load,props,stream,finally,if,stream,null,stream,close,if,reader,null,reader,close
PropertiesLoaderUtils -> static void fillProperties(Properties props, EncodedResource resource, PropertiesPersister persister) 			throws IOException;1398638841;Actually load properties from the given EncodedResource into the given Properties instance._@param props the Properties instance to load into_@param resource the resource to load from_@param persister the PropertiesPersister to use_@throws IOException in case of I/O errors;static void fillProperties(Properties props, EncodedResource resource, PropertiesPersister persister)_			throws IOException {__		InputStream stream = null__		Reader reader = null__		try {_			String filename = resource.getResource().getFilename()__			if (filename != null && filename.endsWith(XML_FILE_EXTENSION)) {_				stream = resource.getInputStream()__				persister.loadFromXml(props, stream)__			}_			else if (resource.requiresReader()) {_				reader = resource.getReader()__				persister.load(props, reader)__			}_			else {_				stream = resource.getInputStream()__				persister.load(props, stream)__			}_		}_		finally {_			if (stream != null) {_				stream.close()__			}_			if (reader != null) {_				reader.close()__			}_		}_	};actually,load,properties,from,the,given,encoded,resource,into,the,given,properties,instance,param,props,the,properties,instance,to,load,into,param,resource,the,resource,to,load,from,param,persister,the,properties,persister,to,use,throws,ioexception,in,case,of,i,o,errors;static,void,fill,properties,properties,props,encoded,resource,resource,properties,persister,persister,throws,ioexception,input,stream,stream,null,reader,reader,null,try,string,filename,resource,get,resource,get,filename,if,filename,null,filename,ends,with,stream,resource,get,input,stream,persister,load,from,xml,props,stream,else,if,resource,requires,reader,reader,resource,get,reader,persister,load,props,reader,else,stream,resource,get,input,stream,persister,load,props,stream,finally,if,stream,null,stream,close,if,reader,null,reader,close
PropertiesLoaderUtils -> static void fillProperties(Properties props, EncodedResource resource, PropertiesPersister persister) 			throws IOException;1456180001;Actually load properties from the given EncodedResource into the given Properties instance._@param props the Properties instance to load into_@param resource the resource to load from_@param persister the PropertiesPersister to use_@throws IOException in case of I/O errors;static void fillProperties(Properties props, EncodedResource resource, PropertiesPersister persister)_			throws IOException {__		InputStream stream = null__		Reader reader = null__		try {_			String filename = resource.getResource().getFilename()__			if (filename != null && filename.endsWith(XML_FILE_EXTENSION)) {_				stream = resource.getInputStream()__				persister.loadFromXml(props, stream)__			}_			else if (resource.requiresReader()) {_				reader = resource.getReader()__				persister.load(props, reader)__			}_			else {_				stream = resource.getInputStream()__				persister.load(props, stream)__			}_		}_		finally {_			if (stream != null) {_				stream.close()__			}_			if (reader != null) {_				reader.close()__			}_		}_	};actually,load,properties,from,the,given,encoded,resource,into,the,given,properties,instance,param,props,the,properties,instance,to,load,into,param,resource,the,resource,to,load,from,param,persister,the,properties,persister,to,use,throws,ioexception,in,case,of,i,o,errors;static,void,fill,properties,properties,props,encoded,resource,resource,properties,persister,persister,throws,ioexception,input,stream,stream,null,reader,reader,null,try,string,filename,resource,get,resource,get,filename,if,filename,null,filename,ends,with,stream,resource,get,input,stream,persister,load,from,xml,props,stream,else,if,resource,requires,reader,reader,resource,get,reader,persister,load,props,reader,else,stream,resource,get,input,stream,persister,load,props,stream,finally,if,stream,null,stream,close,if,reader,null,reader,close
PropertiesLoaderUtils -> static void fillProperties(Properties props, EncodedResource resource, PropertiesPersister persister) 			throws IOException;1495868221;Actually load properties from the given EncodedResource into the given Properties instance._@param props the Properties instance to load into_@param resource the resource to load from_@param persister the PropertiesPersister to use_@throws IOException in case of I/O errors;static void fillProperties(Properties props, EncodedResource resource, PropertiesPersister persister)_			throws IOException {__		InputStream stream = null__		Reader reader = null__		try {_			String filename = resource.getResource().getFilename()__			if (filename != null && filename.endsWith(XML_FILE_EXTENSION)) {_				stream = resource.getInputStream()__				persister.loadFromXml(props, stream)__			}_			else if (resource.requiresReader()) {_				reader = resource.getReader()__				persister.load(props, reader)__			}_			else {_				stream = resource.getInputStream()__				persister.load(props, stream)__			}_		}_		finally {_			if (stream != null) {_				stream.close()__			}_			if (reader != null) {_				reader.close()__			}_		}_	};actually,load,properties,from,the,given,encoded,resource,into,the,given,properties,instance,param,props,the,properties,instance,to,load,into,param,resource,the,resource,to,load,from,param,persister,the,properties,persister,to,use,throws,ioexception,in,case,of,i,o,errors;static,void,fill,properties,properties,props,encoded,resource,resource,properties,persister,persister,throws,ioexception,input,stream,stream,null,reader,reader,null,try,string,filename,resource,get,resource,get,filename,if,filename,null,filename,ends,with,stream,resource,get,input,stream,persister,load,from,xml,props,stream,else,if,resource,requires,reader,reader,resource,get,reader,persister,load,props,reader,else,stream,resource,get,input,stream,persister,load,props,stream,finally,if,stream,null,stream,close,if,reader,null,reader,close
PropertiesLoaderUtils -> public static void fillProperties(Properties props, Resource resource) throws IOException;1328020251;Fill the given properties from the given resource._@param props the Properties instance to fill_@param resource the resource to load from_@throws IOException if loading failed;public static void fillProperties(Properties props, Resource resource) throws IOException {_		InputStream is = resource.getInputStream()__		try {_			props.load(is)__		}_		finally {_			is.close()__		}_	};fill,the,given,properties,from,the,given,resource,param,props,the,properties,instance,to,fill,param,resource,the,resource,to,load,from,throws,ioexception,if,loading,failed;public,static,void,fill,properties,properties,props,resource,resource,throws,ioexception,input,stream,is,resource,get,input,stream,try,props,load,is,finally,is,close
PropertiesLoaderUtils -> public static void fillProperties(Properties props, Resource resource) throws IOException;1329393628;Fill the given properties from the given resource._@param props the Properties instance to fill_@param resource the resource to load from_@throws IOException if loading failed;public static void fillProperties(Properties props, Resource resource) throws IOException {_		InputStream is = resource.getInputStream()__		try {_			props.load(is)__		}_		finally {_			is.close()__		}_	};fill,the,given,properties,from,the,given,resource,param,props,the,properties,instance,to,fill,param,resource,the,resource,to,load,from,throws,ioexception,if,loading,failed;public,static,void,fill,properties,properties,props,resource,resource,throws,ioexception,input,stream,is,resource,get,input,stream,try,props,load,is,finally,is,close
PropertiesLoaderUtils -> public static void fillProperties(Properties props, Resource resource) throws IOException;1356735495;Fill the given properties from the given resource._@param props the Properties instance to fill_@param resource the resource to load from_@throws IOException if loading failed;public static void fillProperties(Properties props, Resource resource) throws IOException {_		InputStream is = resource.getInputStream()__		try {_			props.load(is)__		}_		finally {_			is.close()__		}_	};fill,the,given,properties,from,the,given,resource,param,props,the,properties,instance,to,fill,param,resource,the,resource,to,load,from,throws,ioexception,if,loading,failed;public,static,void,fill,properties,properties,props,resource,resource,throws,ioexception,input,stream,is,resource,get,input,stream,try,props,load,is,finally,is,close
PropertiesLoaderUtils -> public static void fillProperties(Properties props, Resource resource) throws IOException;1362408075;Fill the given properties from the given resource (in ISO-8859-1 encoding)._@param props the Properties instance to fill_@param resource the resource to load from_@throws IOException if loading failed;public static void fillProperties(Properties props, Resource resource) throws IOException {_		InputStream is = resource.getInputStream()__		try {_			String filename = resource.getFilename()__			if (filename != null && filename.endsWith(XML_FILE_EXTENSION)) {_				props.loadFromXML(is)__			}_			else {_				props.load(is)__			}_		}_		finally {_			is.close()__		}_	};fill,the,given,properties,from,the,given,resource,in,iso,8859,1,encoding,param,props,the,properties,instance,to,fill,param,resource,the,resource,to,load,from,throws,ioexception,if,loading,failed;public,static,void,fill,properties,properties,props,resource,resource,throws,ioexception,input,stream,is,resource,get,input,stream,try,string,filename,resource,get,filename,if,filename,null,filename,ends,with,props,load,from,xml,is,else,props,load,is,finally,is,close
PropertiesLoaderUtils -> public static void fillProperties(Properties props, Resource resource) throws IOException;1385412762;Fill the given properties from the given resource (in ISO-8859-1 encoding)._@param props the Properties instance to fill_@param resource the resource to load from_@throws IOException if loading failed;public static void fillProperties(Properties props, Resource resource) throws IOException {_		InputStream is = resource.getInputStream()__		try {_			String filename = resource.getFilename()__			if (filename != null && filename.endsWith(XML_FILE_EXTENSION)) {_				props.loadFromXML(is)__			}_			else {_				props.load(is)__			}_		}_		finally {_			is.close()__		}_	};fill,the,given,properties,from,the,given,resource,in,iso,8859,1,encoding,param,props,the,properties,instance,to,fill,param,resource,the,resource,to,load,from,throws,ioexception,if,loading,failed;public,static,void,fill,properties,properties,props,resource,resource,throws,ioexception,input,stream,is,resource,get,input,stream,try,string,filename,resource,get,filename,if,filename,null,filename,ends,with,props,load,from,xml,is,else,props,load,is,finally,is,close
PropertiesLoaderUtils -> public static void fillProperties(Properties props, Resource resource) throws IOException;1398290095;Fill the given properties from the given resource (in ISO-8859-1 encoding)._@param props the Properties instance to fill_@param resource the resource to load from_@throws IOException if loading failed;public static void fillProperties(Properties props, Resource resource) throws IOException {_		InputStream is = resource.getInputStream()__		try {_			String filename = resource.getFilename()__			if (filename != null && filename.endsWith(XML_FILE_EXTENSION)) {_				props.loadFromXML(is)__			}_			else {_				props.load(is)__			}_		}_		finally {_			is.close()__		}_	};fill,the,given,properties,from,the,given,resource,in,iso,8859,1,encoding,param,props,the,properties,instance,to,fill,param,resource,the,resource,to,load,from,throws,ioexception,if,loading,failed;public,static,void,fill,properties,properties,props,resource,resource,throws,ioexception,input,stream,is,resource,get,input,stream,try,string,filename,resource,get,filename,if,filename,null,filename,ends,with,props,load,from,xml,is,else,props,load,is,finally,is,close
PropertiesLoaderUtils -> public static void fillProperties(Properties props, Resource resource) throws IOException;1398638841;Fill the given properties from the given resource (in ISO-8859-1 encoding)._@param props the Properties instance to fill_@param resource the resource to load from_@throws IOException if loading failed;public static void fillProperties(Properties props, Resource resource) throws IOException {_		InputStream is = resource.getInputStream()__		try {_			String filename = resource.getFilename()__			if (filename != null && filename.endsWith(XML_FILE_EXTENSION)) {_				props.loadFromXML(is)__			}_			else {_				props.load(is)__			}_		}_		finally {_			is.close()__		}_	};fill,the,given,properties,from,the,given,resource,in,iso,8859,1,encoding,param,props,the,properties,instance,to,fill,param,resource,the,resource,to,load,from,throws,ioexception,if,loading,failed;public,static,void,fill,properties,properties,props,resource,resource,throws,ioexception,input,stream,is,resource,get,input,stream,try,string,filename,resource,get,filename,if,filename,null,filename,ends,with,props,load,from,xml,is,else,props,load,is,finally,is,close
PropertiesLoaderUtils -> public static void fillProperties(Properties props, Resource resource) throws IOException;1456180001;Fill the given properties from the given resource (in ISO-8859-1 encoding)._@param props the Properties instance to fill_@param resource the resource to load from_@throws IOException if loading failed;public static void fillProperties(Properties props, Resource resource) throws IOException {_		InputStream is = resource.getInputStream()__		try {_			String filename = resource.getFilename()__			if (filename != null && filename.endsWith(XML_FILE_EXTENSION)) {_				props.loadFromXML(is)__			}_			else {_				props.load(is)__			}_		}_		finally {_			is.close()__		}_	};fill,the,given,properties,from,the,given,resource,in,iso,8859,1,encoding,param,props,the,properties,instance,to,fill,param,resource,the,resource,to,load,from,throws,ioexception,if,loading,failed;public,static,void,fill,properties,properties,props,resource,resource,throws,ioexception,input,stream,is,resource,get,input,stream,try,string,filename,resource,get,filename,if,filename,null,filename,ends,with,props,load,from,xml,is,else,props,load,is,finally,is,close
PropertiesLoaderUtils -> public static void fillProperties(Properties props, Resource resource) throws IOException;1495868221;Fill the given properties from the given resource (in ISO-8859-1 encoding)._@param props the Properties instance to fill_@param resource the resource to load from_@throws IOException if loading failed;public static void fillProperties(Properties props, Resource resource) throws IOException {_		InputStream is = resource.getInputStream()__		try {_			String filename = resource.getFilename()__			if (filename != null && filename.endsWith(XML_FILE_EXTENSION)) {_				props.loadFromXML(is)__			}_			else {_				props.load(is)__			}_		}_		finally {_			is.close()__		}_	};fill,the,given,properties,from,the,given,resource,in,iso,8859,1,encoding,param,props,the,properties,instance,to,fill,param,resource,the,resource,to,load,from,throws,ioexception,if,loading,failed;public,static,void,fill,properties,properties,props,resource,resource,throws,ioexception,input,stream,is,resource,get,input,stream,try,string,filename,resource,get,filename,if,filename,null,filename,ends,with,props,load,from,xml,is,else,props,load,is,finally,is,close
PropertiesLoaderUtils -> public static void fillProperties(Properties props, EncodedResource resource) 			throws IOException;1362408075;Fill the given properties from the given EncodedResource,_potentially defining a specific encoding for the properties file._@param props the Properties instance to load into_@param resource the resource to load from_@throws IOException in case of I/O errors;public static void fillProperties(Properties props, EncodedResource resource)_			throws IOException {__		fillProperties(props, resource, new DefaultPropertiesPersister())__	};fill,the,given,properties,from,the,given,encoded,resource,potentially,defining,a,specific,encoding,for,the,properties,file,param,props,the,properties,instance,to,load,into,param,resource,the,resource,to,load,from,throws,ioexception,in,case,of,i,o,errors;public,static,void,fill,properties,properties,props,encoded,resource,resource,throws,ioexception,fill,properties,props,resource,new,default,properties,persister
PropertiesLoaderUtils -> public static void fillProperties(Properties props, EncodedResource resource) 			throws IOException;1385412762;Fill the given properties from the given EncodedResource,_potentially defining a specific encoding for the properties file._@param props the Properties instance to load into_@param resource the resource to load from_@throws IOException in case of I/O errors;public static void fillProperties(Properties props, EncodedResource resource)_			throws IOException {__		fillProperties(props, resource, new DefaultPropertiesPersister())__	};fill,the,given,properties,from,the,given,encoded,resource,potentially,defining,a,specific,encoding,for,the,properties,file,param,props,the,properties,instance,to,load,into,param,resource,the,resource,to,load,from,throws,ioexception,in,case,of,i,o,errors;public,static,void,fill,properties,properties,props,encoded,resource,resource,throws,ioexception,fill,properties,props,resource,new,default,properties,persister
PropertiesLoaderUtils -> public static void fillProperties(Properties props, EncodedResource resource) 			throws IOException;1398290095;Fill the given properties from the given EncodedResource,_potentially defining a specific encoding for the properties file._@param props the Properties instance to load into_@param resource the resource to load from_@throws IOException in case of I/O errors;public static void fillProperties(Properties props, EncodedResource resource)_			throws IOException {__		fillProperties(props, resource, new DefaultPropertiesPersister())__	};fill,the,given,properties,from,the,given,encoded,resource,potentially,defining,a,specific,encoding,for,the,properties,file,param,props,the,properties,instance,to,load,into,param,resource,the,resource,to,load,from,throws,ioexception,in,case,of,i,o,errors;public,static,void,fill,properties,properties,props,encoded,resource,resource,throws,ioexception,fill,properties,props,resource,new,default,properties,persister
PropertiesLoaderUtils -> public static void fillProperties(Properties props, EncodedResource resource) 			throws IOException;1398638841;Fill the given properties from the given EncodedResource,_potentially defining a specific encoding for the properties file._@param props the Properties instance to load into_@param resource the resource to load from_@throws IOException in case of I/O errors;public static void fillProperties(Properties props, EncodedResource resource)_			throws IOException {__		fillProperties(props, resource, new DefaultPropertiesPersister())__	};fill,the,given,properties,from,the,given,encoded,resource,potentially,defining,a,specific,encoding,for,the,properties,file,param,props,the,properties,instance,to,load,into,param,resource,the,resource,to,load,from,throws,ioexception,in,case,of,i,o,errors;public,static,void,fill,properties,properties,props,encoded,resource,resource,throws,ioexception,fill,properties,props,resource,new,default,properties,persister
PropertiesLoaderUtils -> public static void fillProperties(Properties props, EncodedResource resource) 			throws IOException;1456180001;Fill the given properties from the given EncodedResource,_potentially defining a specific encoding for the properties file._@param props the Properties instance to load into_@param resource the resource to load from_@throws IOException in case of I/O errors;public static void fillProperties(Properties props, EncodedResource resource)_			throws IOException {__		fillProperties(props, resource, new DefaultPropertiesPersister())__	};fill,the,given,properties,from,the,given,encoded,resource,potentially,defining,a,specific,encoding,for,the,properties,file,param,props,the,properties,instance,to,load,into,param,resource,the,resource,to,load,from,throws,ioexception,in,case,of,i,o,errors;public,static,void,fill,properties,properties,props,encoded,resource,resource,throws,ioexception,fill,properties,props,resource,new,default,properties,persister
PropertiesLoaderUtils -> public static void fillProperties(Properties props, EncodedResource resource) 			throws IOException;1495868221;Fill the given properties from the given EncodedResource,_potentially defining a specific encoding for the properties file._@param props the Properties instance to load into_@param resource the resource to load from_@throws IOException in case of I/O errors;public static void fillProperties(Properties props, EncodedResource resource)_			throws IOException {__		fillProperties(props, resource, new DefaultPropertiesPersister())__	};fill,the,given,properties,from,the,given,encoded,resource,potentially,defining,a,specific,encoding,for,the,properties,file,param,props,the,properties,instance,to,load,into,param,resource,the,resource,to,load,from,throws,ioexception,in,case,of,i,o,errors;public,static,void,fill,properties,properties,props,encoded,resource,resource,throws,ioexception,fill,properties,props,resource,new,default,properties,persister
PropertiesLoaderUtils -> public static Properties loadProperties(Resource resource) throws IOException;1328020251;Load properties from the given resource._@param resource the resource to load from_@return the populated Properties instance_@throws IOException if loading failed;public static Properties loadProperties(Resource resource) throws IOException {_		Properties props = new Properties()__		fillProperties(props, resource)__		return props__	};load,properties,from,the,given,resource,param,resource,the,resource,to,load,from,return,the,populated,properties,instance,throws,ioexception,if,loading,failed;public,static,properties,load,properties,resource,resource,throws,ioexception,properties,props,new,properties,fill,properties,props,resource,return,props
PropertiesLoaderUtils -> public static Properties loadProperties(Resource resource) throws IOException;1329393628;Load properties from the given resource._@param resource the resource to load from_@return the populated Properties instance_@throws IOException if loading failed;public static Properties loadProperties(Resource resource) throws IOException {_		Properties props = new Properties()__		fillProperties(props, resource)__		return props__	};load,properties,from,the,given,resource,param,resource,the,resource,to,load,from,return,the,populated,properties,instance,throws,ioexception,if,loading,failed;public,static,properties,load,properties,resource,resource,throws,ioexception,properties,props,new,properties,fill,properties,props,resource,return,props
PropertiesLoaderUtils -> public static Properties loadProperties(Resource resource) throws IOException;1356735495;Load properties from the given resource._@param resource the resource to load from_@return the populated Properties instance_@throws IOException if loading failed;public static Properties loadProperties(Resource resource) throws IOException {_		Properties props = new Properties()__		fillProperties(props, resource)__		return props__	};load,properties,from,the,given,resource,param,resource,the,resource,to,load,from,return,the,populated,properties,instance,throws,ioexception,if,loading,failed;public,static,properties,load,properties,resource,resource,throws,ioexception,properties,props,new,properties,fill,properties,props,resource,return,props
PropertiesLoaderUtils -> public static Properties loadProperties(Resource resource) throws IOException;1362408075;Load properties from the given resource (in ISO-8859-1 encoding)._@param resource the resource to load from_@return the populated Properties instance_@throws IOException if loading failed_@see #fillProperties(java.util.Properties, Resource);public static Properties loadProperties(Resource resource) throws IOException {_		Properties props = new Properties()__		fillProperties(props, resource)__		return props__	};load,properties,from,the,given,resource,in,iso,8859,1,encoding,param,resource,the,resource,to,load,from,return,the,populated,properties,instance,throws,ioexception,if,loading,failed,see,fill,properties,java,util,properties,resource;public,static,properties,load,properties,resource,resource,throws,ioexception,properties,props,new,properties,fill,properties,props,resource,return,props
PropertiesLoaderUtils -> public static Properties loadProperties(Resource resource) throws IOException;1385412762;Load properties from the given resource (in ISO-8859-1 encoding)._@param resource the resource to load from_@return the populated Properties instance_@throws IOException if loading failed_@see #fillProperties(java.util.Properties, Resource);public static Properties loadProperties(Resource resource) throws IOException {_		Properties props = new Properties()__		fillProperties(props, resource)__		return props__	};load,properties,from,the,given,resource,in,iso,8859,1,encoding,param,resource,the,resource,to,load,from,return,the,populated,properties,instance,throws,ioexception,if,loading,failed,see,fill,properties,java,util,properties,resource;public,static,properties,load,properties,resource,resource,throws,ioexception,properties,props,new,properties,fill,properties,props,resource,return,props
PropertiesLoaderUtils -> public static Properties loadProperties(Resource resource) throws IOException;1398290095;Load properties from the given resource (in ISO-8859-1 encoding)._@param resource the resource to load from_@return the populated Properties instance_@throws IOException if loading failed_@see #fillProperties(java.util.Properties, Resource);public static Properties loadProperties(Resource resource) throws IOException {_		Properties props = new Properties()__		fillProperties(props, resource)__		return props__	};load,properties,from,the,given,resource,in,iso,8859,1,encoding,param,resource,the,resource,to,load,from,return,the,populated,properties,instance,throws,ioexception,if,loading,failed,see,fill,properties,java,util,properties,resource;public,static,properties,load,properties,resource,resource,throws,ioexception,properties,props,new,properties,fill,properties,props,resource,return,props
PropertiesLoaderUtils -> public static Properties loadProperties(Resource resource) throws IOException;1398638841;Load properties from the given resource (in ISO-8859-1 encoding)._@param resource the resource to load from_@return the populated Properties instance_@throws IOException if loading failed_@see #fillProperties(java.util.Properties, Resource);public static Properties loadProperties(Resource resource) throws IOException {_		Properties props = new Properties()__		fillProperties(props, resource)__		return props__	};load,properties,from,the,given,resource,in,iso,8859,1,encoding,param,resource,the,resource,to,load,from,return,the,populated,properties,instance,throws,ioexception,if,loading,failed,see,fill,properties,java,util,properties,resource;public,static,properties,load,properties,resource,resource,throws,ioexception,properties,props,new,properties,fill,properties,props,resource,return,props
PropertiesLoaderUtils -> public static Properties loadProperties(Resource resource) throws IOException;1456180001;Load properties from the given resource (in ISO-8859-1 encoding)._@param resource the resource to load from_@return the populated Properties instance_@throws IOException if loading failed_@see #fillProperties(java.util.Properties, Resource);public static Properties loadProperties(Resource resource) throws IOException {_		Properties props = new Properties()__		fillProperties(props, resource)__		return props__	};load,properties,from,the,given,resource,in,iso,8859,1,encoding,param,resource,the,resource,to,load,from,return,the,populated,properties,instance,throws,ioexception,if,loading,failed,see,fill,properties,java,util,properties,resource;public,static,properties,load,properties,resource,resource,throws,ioexception,properties,props,new,properties,fill,properties,props,resource,return,props
PropertiesLoaderUtils -> public static Properties loadProperties(Resource resource) throws IOException;1495868221;Load properties from the given resource (in ISO-8859-1 encoding)._@param resource the resource to load from_@return the populated Properties instance_@throws IOException if loading failed_@see #fillProperties(java.util.Properties, Resource);public static Properties loadProperties(Resource resource) throws IOException {_		Properties props = new Properties()__		fillProperties(props, resource)__		return props__	};load,properties,from,the,given,resource,in,iso,8859,1,encoding,param,resource,the,resource,to,load,from,return,the,populated,properties,instance,throws,ioexception,if,loading,failed,see,fill,properties,java,util,properties,resource;public,static,properties,load,properties,resource,resource,throws,ioexception,properties,props,new,properties,fill,properties,props,resource,return,props
