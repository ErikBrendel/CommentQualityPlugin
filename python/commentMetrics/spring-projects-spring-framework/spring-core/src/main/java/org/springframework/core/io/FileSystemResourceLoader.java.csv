# id;timestamp;commentText;codeText;commentWords;codeWords
FileSystemResourceLoader -> @Override 	protected Resource getResourceByPath(String path);1328020251;Resolve resource paths as file system paths._<p>Note: Even if a given path starts with a slash, it will get_interpreted as relative to the current VM working directory._@param path the path to the resource_@return the corresponding Resource handle_@see FileSystemResource_@see org.springframework.web.context.support.ServletContextResourceLoader#getResourceByPath;@Override_	protected Resource getResourceByPath(String path) {_		if (path != null && path.startsWith("/")) {_			path = path.substring(1)__		}_		return new FileSystemContextResource(path)__	};resolve,resource,paths,as,file,system,paths,p,note,even,if,a,given,path,starts,with,a,slash,it,will,get,interpreted,as,relative,to,the,current,vm,working,directory,param,path,the,path,to,the,resource,return,the,corresponding,resource,handle,see,file,system,resource,see,org,springframework,web,context,support,servlet,context,resource,loader,get,resource,by,path;override,protected,resource,get,resource,by,path,string,path,if,path,null,path,starts,with,path,path,substring,1,return,new,file,system,context,resource,path
FileSystemResourceLoader -> @Override 	protected Resource getResourceByPath(String path);1356735495;Resolve resource paths as file system paths._<p>Note: Even if a given path starts with a slash, it will get_interpreted as relative to the current VM working directory._@param path the path to the resource_@return the corresponding Resource handle_@see FileSystemResource_@see org.springframework.web.context.support.ServletContextResourceLoader#getResourceByPath;@Override_	protected Resource getResourceByPath(String path) {_		if (path != null && path.startsWith("/")) {_			path = path.substring(1)__		}_		return new FileSystemContextResource(path)__	};resolve,resource,paths,as,file,system,paths,p,note,even,if,a,given,path,starts,with,a,slash,it,will,get,interpreted,as,relative,to,the,current,vm,working,directory,param,path,the,path,to,the,resource,return,the,corresponding,resource,handle,see,file,system,resource,see,org,springframework,web,context,support,servlet,context,resource,loader,get,resource,by,path;override,protected,resource,get,resource,by,path,string,path,if,path,null,path,starts,with,path,path,substring,1,return,new,file,system,context,resource,path
FileSystemResourceLoader -> @Override 	protected Resource getResourceByPath(String path);1357119239;Resolve resource paths as file system paths._<p>Note: Even if a given path starts with a slash, it will get_interpreted as relative to the current VM working directory._@param path the path to the resource_@return the corresponding Resource handle_@see FileSystemResource_@see org.springframework.web.context.support.ServletContextResourceLoader#getResourceByPath;@Override_	protected Resource getResourceByPath(String path) {_		if (path != null && path.startsWith("/")) {_			path = path.substring(1)__		}_		return new FileSystemContextResource(path)__	};resolve,resource,paths,as,file,system,paths,p,note,even,if,a,given,path,starts,with,a,slash,it,will,get,interpreted,as,relative,to,the,current,vm,working,directory,param,path,the,path,to,the,resource,return,the,corresponding,resource,handle,see,file,system,resource,see,org,springframework,web,context,support,servlet,context,resource,loader,get,resource,by,path;override,protected,resource,get,resource,by,path,string,path,if,path,null,path,starts,with,path,path,substring,1,return,new,file,system,context,resource,path
FileSystemResourceLoader -> @Override 	protected Resource getResourceByPath(String path);1368482696;Resolve resource paths as file system paths._<p>Note: Even if a given path starts with a slash, it will get_interpreted as relative to the current VM working directory._@param path the path to the resource_@return the corresponding Resource handle_@see FileSystemResource_@see org.springframework.web.context.support.ServletContextResourceLoader#getResourceByPath;@Override_	protected Resource getResourceByPath(String path) {_		if (path != null && path.startsWith("/")) {_			path = path.substring(1)__		}_		return new FileSystemContextResource(path)__	};resolve,resource,paths,as,file,system,paths,p,note,even,if,a,given,path,starts,with,a,slash,it,will,get,interpreted,as,relative,to,the,current,vm,working,directory,param,path,the,path,to,the,resource,return,the,corresponding,resource,handle,see,file,system,resource,see,org,springframework,web,context,support,servlet,context,resource,loader,get,resource,by,path;override,protected,resource,get,resource,by,path,string,path,if,path,null,path,starts,with,path,path,substring,1,return,new,file,system,context,resource,path
FileSystemResourceLoader -> @Override 	protected Resource getResourceByPath(String path);1496837955;Resolve resource paths as file system paths._<p>Note: Even if a given path starts with a slash, it will get_interpreted as relative to the current VM working directory._@param path the path to the resource_@return the corresponding Resource handle_@see FileSystemResource_@see org.springframework.web.context.support.ServletContextResourceLoader#getResourceByPath;@Override_	protected Resource getResourceByPath(String path) {_		if (path.startsWith("/")) {_			path = path.substring(1)__		}_		return new FileSystemContextResource(path)__	};resolve,resource,paths,as,file,system,paths,p,note,even,if,a,given,path,starts,with,a,slash,it,will,get,interpreted,as,relative,to,the,current,vm,working,directory,param,path,the,path,to,the,resource,return,the,corresponding,resource,handle,see,file,system,resource,see,org,springframework,web,context,support,servlet,context,resource,loader,get,resource,by,path;override,protected,resource,get,resource,by,path,string,path,if,path,starts,with,path,path,substring,1,return,new,file,system,context,resource,path
