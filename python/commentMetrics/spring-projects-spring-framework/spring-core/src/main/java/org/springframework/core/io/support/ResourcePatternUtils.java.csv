# id;timestamp;commentText;codeText;commentWords;codeWords
ResourcePatternUtils -> public static ResourcePatternResolver getResourcePatternResolver(ResourceLoader resourceLoader);1328020251;Return a default ResourcePatternResolver for the given ResourceLoader._<p>This might be the ResourceLoader itself, if it implements the_ResourcePatternResolver extension, or a PathMatchingResourcePatternResolver_built on the given ResourceLoader._@param resourceLoader the ResourceLoader to build a pattern resolver for_(may be <code>null</code> to indicate a default ResourceLoader)_@return the ResourcePatternResolver_@see PathMatchingResourcePatternResolver;public static ResourcePatternResolver getResourcePatternResolver(ResourceLoader resourceLoader) {_		Assert.notNull(resourceLoader, "ResourceLoader must not be null")__		if (resourceLoader instanceof ResourcePatternResolver) {_			return (ResourcePatternResolver) resourceLoader__		}_		else if (resourceLoader != null) {_			return new PathMatchingResourcePatternResolver(resourceLoader)__		}_		else {_			return new PathMatchingResourcePatternResolver()__		}_	};return,a,default,resource,pattern,resolver,for,the,given,resource,loader,p,this,might,be,the,resource,loader,itself,if,it,implements,the,resource,pattern,resolver,extension,or,a,path,matching,resource,pattern,resolver,built,on,the,given,resource,loader,param,resource,loader,the,resource,loader,to,build,a,pattern,resolver,for,may,be,code,null,code,to,indicate,a,default,resource,loader,return,the,resource,pattern,resolver,see,path,matching,resource,pattern,resolver;public,static,resource,pattern,resolver,get,resource,pattern,resolver,resource,loader,resource,loader,assert,not,null,resource,loader,resource,loader,must,not,be,null,if,resource,loader,instanceof,resource,pattern,resolver,return,resource,pattern,resolver,resource,loader,else,if,resource,loader,null,return,new,path,matching,resource,pattern,resolver,resource,loader,else,return,new,path,matching,resource,pattern,resolver
ResourcePatternUtils -> public static ResourcePatternResolver getResourcePatternResolver(ResourceLoader resourceLoader);1356735495;Return a default ResourcePatternResolver for the given ResourceLoader._<p>This might be the ResourceLoader itself, if it implements the_ResourcePatternResolver extension, or a PathMatchingResourcePatternResolver_built on the given ResourceLoader._@param resourceLoader the ResourceLoader to build a pattern resolver for_(may be {@code null} to indicate a default ResourceLoader)_@return the ResourcePatternResolver_@see PathMatchingResourcePatternResolver;public static ResourcePatternResolver getResourcePatternResolver(ResourceLoader resourceLoader) {_		Assert.notNull(resourceLoader, "ResourceLoader must not be null")__		if (resourceLoader instanceof ResourcePatternResolver) {_			return (ResourcePatternResolver) resourceLoader__		}_		else if (resourceLoader != null) {_			return new PathMatchingResourcePatternResolver(resourceLoader)__		}_		else {_			return new PathMatchingResourcePatternResolver()__		}_	};return,a,default,resource,pattern,resolver,for,the,given,resource,loader,p,this,might,be,the,resource,loader,itself,if,it,implements,the,resource,pattern,resolver,extension,or,a,path,matching,resource,pattern,resolver,built,on,the,given,resource,loader,param,resource,loader,the,resource,loader,to,build,a,pattern,resolver,for,may,be,code,null,to,indicate,a,default,resource,loader,return,the,resource,pattern,resolver,see,path,matching,resource,pattern,resolver;public,static,resource,pattern,resolver,get,resource,pattern,resolver,resource,loader,resource,loader,assert,not,null,resource,loader,resource,loader,must,not,be,null,if,resource,loader,instanceof,resource,pattern,resolver,return,resource,pattern,resolver,resource,loader,else,if,resource,loader,null,return,new,path,matching,resource,pattern,resolver,resource,loader,else,return,new,path,matching,resource,pattern,resolver
ResourcePatternUtils -> public static ResourcePatternResolver getResourcePatternResolver(ResourceLoader resourceLoader);1469102790;Return a default ResourcePatternResolver for the given ResourceLoader._<p>This might be the ResourceLoader itself, if it implements the_ResourcePatternResolver extension, or a PathMatchingResourcePatternResolver_built on the given ResourceLoader._@param resourceLoader the ResourceLoader to build a pattern resolver for_(may be {@code null} to indicate a default ResourceLoader)_@return the ResourcePatternResolver_@see PathMatchingResourcePatternResolver;public static ResourcePatternResolver getResourcePatternResolver(ResourceLoader resourceLoader) {_		if (resourceLoader instanceof ResourcePatternResolver) {_			return (ResourcePatternResolver) resourceLoader__		}_		else if (resourceLoader != null) {_			return new PathMatchingResourcePatternResolver(resourceLoader)__		}_		else {_			return new PathMatchingResourcePatternResolver()__		}_	};return,a,default,resource,pattern,resolver,for,the,given,resource,loader,p,this,might,be,the,resource,loader,itself,if,it,implements,the,resource,pattern,resolver,extension,or,a,path,matching,resource,pattern,resolver,built,on,the,given,resource,loader,param,resource,loader,the,resource,loader,to,build,a,pattern,resolver,for,may,be,code,null,to,indicate,a,default,resource,loader,return,the,resource,pattern,resolver,see,path,matching,resource,pattern,resolver;public,static,resource,pattern,resolver,get,resource,pattern,resolver,resource,loader,resource,loader,if,resource,loader,instanceof,resource,pattern,resolver,return,resource,pattern,resolver,resource,loader,else,if,resource,loader,null,return,new,path,matching,resource,pattern,resolver,resource,loader,else,return,new,path,matching,resource,pattern,resolver
ResourcePatternUtils -> public static boolean isUrl(@Nullable String resourceLocation);1496837955;Return whether the given resource location is a URL: either a_special "classpath" or "classpath*" pseudo URL or a standard URL._@param resourceLocation the location String to check_@return whether the location qualifies as a URL_@see ResourcePatternResolver#CLASSPATH_ALL_URL_PREFIX_@see org.springframework.util.ResourceUtils#CLASSPATH_URL_PREFIX_@see org.springframework.util.ResourceUtils#isUrl(String)_@see java.net.URL;public static boolean isUrl(@Nullable String resourceLocation) {_		return (resourceLocation != null &&_				(resourceLocation.startsWith(ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX) ||_						ResourceUtils.isUrl(resourceLocation)))__	};return,whether,the,given,resource,location,is,a,url,either,a,special,classpath,or,classpath,pseudo,url,or,a,standard,url,param,resource,location,the,location,string,to,check,return,whether,the,location,qualifies,as,a,url,see,resource,pattern,resolver,see,org,springframework,util,resource,utils,see,org,springframework,util,resource,utils,is,url,string,see,java,net,url;public,static,boolean,is,url,nullable,string,resource,location,return,resource,location,null,resource,location,starts,with,resource,pattern,resolver,resource,utils,is,url,resource,location
ResourcePatternUtils -> public static boolean isUrl(@Nullable String resourceLocation);1550247388;Return whether the given resource location is a URL: either a_special "classpath" or "classpath*" pseudo URL or a standard URL._@param resourceLocation the location String to check_@return whether the location qualifies as a URL_@see ResourcePatternResolver#CLASSPATH_ALL_URL_PREFIX_@see org.springframework.util.ResourceUtils#CLASSPATH_URL_PREFIX_@see org.springframework.util.ResourceUtils#isUrl(String)_@see java.net.URL;public static boolean isUrl(@Nullable String resourceLocation) {_		return (resourceLocation != null &&_				(resourceLocation.startsWith(ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX) ||_						ResourceUtils.isUrl(resourceLocation)))__	};return,whether,the,given,resource,location,is,a,url,either,a,special,classpath,or,classpath,pseudo,url,or,a,standard,url,param,resource,location,the,location,string,to,check,return,whether,the,location,qualifies,as,a,url,see,resource,pattern,resolver,see,org,springframework,util,resource,utils,see,org,springframework,util,resource,utils,is,url,string,see,java,net,url;public,static,boolean,is,url,nullable,string,resource,location,return,resource,location,null,resource,location,starts,with,resource,pattern,resolver,resource,utils,is,url,resource,location
ResourcePatternUtils -> public static boolean isUrl(String resourceLocation);1328020251;Return whether the given resource location is a URL: either a_special "classpath" or "classpath*" pseudo URL or a standard URL._@param resourceLocation the location String to check_@return whether the location qualifies as a URL_@see ResourcePatternResolver#CLASSPATH_ALL_URL_PREFIX_@see org.springframework.util.ResourceUtils#CLASSPATH_URL_PREFIX_@see org.springframework.util.ResourceUtils#isUrl(String)_@see java.net.URL;public static boolean isUrl(String resourceLocation) {_		return (resourceLocation != null &&_				(resourceLocation.startsWith(ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX) ||_						ResourceUtils.isUrl(resourceLocation)))__	};return,whether,the,given,resource,location,is,a,url,either,a,special,classpath,or,classpath,pseudo,url,or,a,standard,url,param,resource,location,the,location,string,to,check,return,whether,the,location,qualifies,as,a,url,see,resource,pattern,resolver,see,org,springframework,util,resource,utils,see,org,springframework,util,resource,utils,is,url,string,see,java,net,url;public,static,boolean,is,url,string,resource,location,return,resource,location,null,resource,location,starts,with,resource,pattern,resolver,resource,utils,is,url,resource,location
ResourcePatternUtils -> public static boolean isUrl(String resourceLocation);1356735495;Return whether the given resource location is a URL: either a_special "classpath" or "classpath*" pseudo URL or a standard URL._@param resourceLocation the location String to check_@return whether the location qualifies as a URL_@see ResourcePatternResolver#CLASSPATH_ALL_URL_PREFIX_@see org.springframework.util.ResourceUtils#CLASSPATH_URL_PREFIX_@see org.springframework.util.ResourceUtils#isUrl(String)_@see java.net.URL;public static boolean isUrl(String resourceLocation) {_		return (resourceLocation != null &&_				(resourceLocation.startsWith(ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX) ||_						ResourceUtils.isUrl(resourceLocation)))__	};return,whether,the,given,resource,location,is,a,url,either,a,special,classpath,or,classpath,pseudo,url,or,a,standard,url,param,resource,location,the,location,string,to,check,return,whether,the,location,qualifies,as,a,url,see,resource,pattern,resolver,see,org,springframework,util,resource,utils,see,org,springframework,util,resource,utils,is,url,string,see,java,net,url;public,static,boolean,is,url,string,resource,location,return,resource,location,null,resource,location,starts,with,resource,pattern,resolver,resource,utils,is,url,resource,location
ResourcePatternUtils -> public static boolean isUrl(String resourceLocation);1469102790;Return whether the given resource location is a URL: either a_special "classpath" or "classpath*" pseudo URL or a standard URL._@param resourceLocation the location String to check_@return whether the location qualifies as a URL_@see ResourcePatternResolver#CLASSPATH_ALL_URL_PREFIX_@see org.springframework.util.ResourceUtils#CLASSPATH_URL_PREFIX_@see org.springframework.util.ResourceUtils#isUrl(String)_@see java.net.URL;public static boolean isUrl(String resourceLocation) {_		return (resourceLocation != null &&_				(resourceLocation.startsWith(ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX) ||_						ResourceUtils.isUrl(resourceLocation)))__	};return,whether,the,given,resource,location,is,a,url,either,a,special,classpath,or,classpath,pseudo,url,or,a,standard,url,param,resource,location,the,location,string,to,check,return,whether,the,location,qualifies,as,a,url,see,resource,pattern,resolver,see,org,springframework,util,resource,utils,see,org,springframework,util,resource,utils,is,url,string,see,java,net,url;public,static,boolean,is,url,string,resource,location,return,resource,location,null,resource,location,starts,with,resource,pattern,resolver,resource,utils,is,url,resource,location
ResourcePatternUtils -> public static boolean isUrl(String resourceLocation);1495868221;Return whether the given resource location is a URL: either a_special "classpath" or "classpath*" pseudo URL or a standard URL._@param resourceLocation the location String to check_@return whether the location qualifies as a URL_@see ResourcePatternResolver#CLASSPATH_ALL_URL_PREFIX_@see org.springframework.util.ResourceUtils#CLASSPATH_URL_PREFIX_@see org.springframework.util.ResourceUtils#isUrl(String)_@see java.net.URL;public static boolean isUrl(String resourceLocation) {_		return (resourceLocation != null &&_				(resourceLocation.startsWith(ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX) ||_						ResourceUtils.isUrl(resourceLocation)))__	};return,whether,the,given,resource,location,is,a,url,either,a,special,classpath,or,classpath,pseudo,url,or,a,standard,url,param,resource,location,the,location,string,to,check,return,whether,the,location,qualifies,as,a,url,see,resource,pattern,resolver,see,org,springframework,util,resource,utils,see,org,springframework,util,resource,utils,is,url,string,see,java,net,url;public,static,boolean,is,url,string,resource,location,return,resource,location,null,resource,location,starts,with,resource,pattern,resolver,resource,utils,is,url,resource,location
ResourcePatternUtils -> public static ResourcePatternResolver getResourcePatternResolver(@Nullable ResourceLoader resourceLoader);1495868221;Return a default ResourcePatternResolver for the given ResourceLoader._<p>This might be the ResourceLoader itself, if it implements the_ResourcePatternResolver extension, or a PathMatchingResourcePatternResolver_built on the given ResourceLoader._@param resourceLoader the ResourceLoader to build a pattern resolver for_(may be {@code null} to indicate a default ResourceLoader)_@return the ResourcePatternResolver_@see PathMatchingResourcePatternResolver;public static ResourcePatternResolver getResourcePatternResolver(@Nullable ResourceLoader resourceLoader) {_		if (resourceLoader instanceof ResourcePatternResolver) {_			return (ResourcePatternResolver) resourceLoader__		}_		else if (resourceLoader != null) {_			return new PathMatchingResourcePatternResolver(resourceLoader)__		}_		else {_			return new PathMatchingResourcePatternResolver()__		}_	};return,a,default,resource,pattern,resolver,for,the,given,resource,loader,p,this,might,be,the,resource,loader,itself,if,it,implements,the,resource,pattern,resolver,extension,or,a,path,matching,resource,pattern,resolver,built,on,the,given,resource,loader,param,resource,loader,the,resource,loader,to,build,a,pattern,resolver,for,may,be,code,null,to,indicate,a,default,resource,loader,return,the,resource,pattern,resolver,see,path,matching,resource,pattern,resolver;public,static,resource,pattern,resolver,get,resource,pattern,resolver,nullable,resource,loader,resource,loader,if,resource,loader,instanceof,resource,pattern,resolver,return,resource,pattern,resolver,resource,loader,else,if,resource,loader,null,return,new,path,matching,resource,pattern,resolver,resource,loader,else,return,new,path,matching,resource,pattern,resolver
ResourcePatternUtils -> public static ResourcePatternResolver getResourcePatternResolver(@Nullable ResourceLoader resourceLoader);1496837955;Return a default ResourcePatternResolver for the given ResourceLoader._<p>This might be the ResourceLoader itself, if it implements the_ResourcePatternResolver extension, or a PathMatchingResourcePatternResolver_built on the given ResourceLoader._@param resourceLoader the ResourceLoader to build a pattern resolver for_(may be {@code null} to indicate a default ResourceLoader)_@return the ResourcePatternResolver_@see PathMatchingResourcePatternResolver;public static ResourcePatternResolver getResourcePatternResolver(@Nullable ResourceLoader resourceLoader) {_		if (resourceLoader instanceof ResourcePatternResolver) {_			return (ResourcePatternResolver) resourceLoader__		}_		else if (resourceLoader != null) {_			return new PathMatchingResourcePatternResolver(resourceLoader)__		}_		else {_			return new PathMatchingResourcePatternResolver()__		}_	};return,a,default,resource,pattern,resolver,for,the,given,resource,loader,p,this,might,be,the,resource,loader,itself,if,it,implements,the,resource,pattern,resolver,extension,or,a,path,matching,resource,pattern,resolver,built,on,the,given,resource,loader,param,resource,loader,the,resource,loader,to,build,a,pattern,resolver,for,may,be,code,null,to,indicate,a,default,resource,loader,return,the,resource,pattern,resolver,see,path,matching,resource,pattern,resolver;public,static,resource,pattern,resolver,get,resource,pattern,resolver,nullable,resource,loader,resource,loader,if,resource,loader,instanceof,resource,pattern,resolver,return,resource,pattern,resolver,resource,loader,else,if,resource,loader,null,return,new,path,matching,resource,pattern,resolver,resource,loader,else,return,new,path,matching,resource,pattern,resolver
ResourcePatternUtils -> public static ResourcePatternResolver getResourcePatternResolver(@Nullable ResourceLoader resourceLoader);1550247388;Return a default {@link ResourcePatternResolver} for the given {@link ResourceLoader}._<p>This might be the {@code ResourceLoader} itself, if it implements the_{@code ResourcePatternResolver} extension, or a default_{@link PathMatchingResourcePatternResolver} built on the given {@code ResourceLoader}._@param resourceLoader the ResourceLoader to build a pattern resolver for_(may be {@code null} to indicate a default ResourceLoader)_@return the ResourcePatternResolver_@see PathMatchingResourcePatternResolver;public static ResourcePatternResolver getResourcePatternResolver(@Nullable ResourceLoader resourceLoader) {_		if (resourceLoader instanceof ResourcePatternResolver) {_			return (ResourcePatternResolver) resourceLoader__		}_		else if (resourceLoader != null) {_			return new PathMatchingResourcePatternResolver(resourceLoader)__		}_		else {_			return new PathMatchingResourcePatternResolver()__		}_	};return,a,default,link,resource,pattern,resolver,for,the,given,link,resource,loader,p,this,might,be,the,code,resource,loader,itself,if,it,implements,the,code,resource,pattern,resolver,extension,or,a,default,link,path,matching,resource,pattern,resolver,built,on,the,given,code,resource,loader,param,resource,loader,the,resource,loader,to,build,a,pattern,resolver,for,may,be,code,null,to,indicate,a,default,resource,loader,return,the,resource,pattern,resolver,see,path,matching,resource,pattern,resolver;public,static,resource,pattern,resolver,get,resource,pattern,resolver,nullable,resource,loader,resource,loader,if,resource,loader,instanceof,resource,pattern,resolver,return,resource,pattern,resolver,resource,loader,else,if,resource,loader,null,return,new,path,matching,resource,pattern,resolver,resource,loader,else,return,new,path,matching,resource,pattern,resolver
