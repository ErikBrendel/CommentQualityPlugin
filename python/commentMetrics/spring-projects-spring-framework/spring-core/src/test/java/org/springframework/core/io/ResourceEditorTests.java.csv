commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void sunnyDay() throws Exception {     PropertyEditor editor = new ResourceEditor().     editor.setAsText("classpath:org/springframework/core/io/ResourceEditorTests.class").     Resource resource = (Resource) editor.getValue().     assertNotNull(resource).     assertTrue(resource.exists()). }
false;public;0;4;;@Test(expected = IllegalArgumentException.class) public void ctorWithNullCtorArgs() throws Exception {     new ResourceEditor(null, null). }
false;public;0;6;;@Test public void setAndGetAsTextWithNull() throws Exception {     PropertyEditor editor = new ResourceEditor().     editor.setAsText(null).     assertEquals("", editor.getAsText()). }
false;public;0;6;;@Test public void setAndGetAsTextWithWhitespaceResource() throws Exception {     PropertyEditor editor = new ResourceEditor().     editor.setAsText("  ").     assertEquals("", editor.getAsText()). }
false;public;0;13;;@Test public void testSystemPropertyReplacement() {     PropertyEditor editor = new ResourceEditor().     System.setProperty("test.prop", "foo").     try {         editor.setAsText("${test.prop}-${bar}").         Resource resolved = (Resource) editor.getValue().         assertEquals("foo-${bar}", resolved.getFilename()).     } finally {         System.getProperties().remove("test.prop").     } }
false;public;0;13;;@Test(expected = IllegalArgumentException.class) public void testStrictSystemPropertyReplacement() {     PropertyEditor editor = new ResourceEditor(new DefaultResourceLoader(), new StandardEnvironment(), false).     System.setProperty("test.prop", "foo").     try {         editor.setAsText("${test.prop}-${bar}").         Resource resolved = (Resource) editor.getValue().         assertEquals("foo-${bar}", resolved.getFilename()).     } finally {         System.getProperties().remove("test.prop").     } }
