# id;timestamp;commentText;codeText;commentWords;codeWords
StopWatchTests -> public void testValidUsage() throws Exception;1328020251;Are timings off in JUnit?;public void testValidUsage() throws Exception {_		StopWatch sw = new StopWatch()__		long int1 = 166L__		long int2 = 45L__		String name1 = "Task 1"__		String name2 = "Task 2"__		_		long fudgeFactor = 5L__		assertFalse(sw.isRunning())__		sw.start(name1)__		Thread.sleep(int1)__		assertTrue(sw.isRunning())__		sw.stop()__		_		_		_		_		_		_		sw.start(name2)__		Thread.sleep(int2)__		sw.stop()__		_		_		_		assertTrue(sw.getTaskCount() == 2)__		String pp = sw.prettyPrint()__		assertTrue(pp.indexOf(name1) != -1)__		assertTrue(pp.indexOf(name2) != -1)__		_		StopWatch.TaskInfo[] tasks = sw.getTaskInfo()__		assertTrue(tasks.length == 2)__		assertTrue(tasks[0].getTaskName().equals(name1))__		assertTrue(tasks[1].getTaskName().equals(name2))__		sw.toString()__	};are,timings,off,in,junit;public,void,test,valid,usage,throws,exception,stop,watch,sw,new,stop,watch,long,int1,166l,long,int2,45l,string,name1,task,1,string,name2,task,2,long,fudge,factor,5l,assert,false,sw,is,running,sw,start,name1,thread,sleep,int1,assert,true,sw,is,running,sw,stop,sw,start,name2,thread,sleep,int2,sw,stop,assert,true,sw,get,task,count,2,string,pp,sw,pretty,print,assert,true,pp,index,of,name1,1,assert,true,pp,index,of,name2,1,stop,watch,task,info,tasks,sw,get,task,info,assert,true,tasks,length,2,assert,true,tasks,0,get,task,name,equals,name1,assert,true,tasks,1,get,task,name,equals,name2,sw,to,string
StopWatchTests -> public void testValidUsage() throws Exception;1356735495;Are timings off in JUnit?;public void testValidUsage() throws Exception {_		StopWatch sw = new StopWatch()__		long int1 = 166L__		long int2 = 45L__		String name1 = "Task 1"__		String name2 = "Task 2"___		long fudgeFactor = 5L__		assertFalse(sw.isRunning())__		sw.start(name1)__		Thread.sleep(int1)__		assertTrue(sw.isRunning())__		sw.stop()___		_		__		_		_		sw.start(name2)__		Thread.sleep(int2)__		sw.stop()__		_		__		assertTrue(sw.getTaskCount() == 2)__		String pp = sw.prettyPrint()__		assertTrue(pp.indexOf(name1) != -1)__		assertTrue(pp.indexOf(name2) != -1)___		StopWatch.TaskInfo[] tasks = sw.getTaskInfo()__		assertTrue(tasks.length == 2)__		assertTrue(tasks[0].getTaskName().equals(name1))__		assertTrue(tasks[1].getTaskName().equals(name2))__		sw.toString()__	};are,timings,off,in,junit;public,void,test,valid,usage,throws,exception,stop,watch,sw,new,stop,watch,long,int1,166l,long,int2,45l,string,name1,task,1,string,name2,task,2,long,fudge,factor,5l,assert,false,sw,is,running,sw,start,name1,thread,sleep,int1,assert,true,sw,is,running,sw,stop,sw,start,name2,thread,sleep,int2,sw,stop,assert,true,sw,get,task,count,2,string,pp,sw,pretty,print,assert,true,pp,index,of,name1,1,assert,true,pp,index,of,name2,1,stop,watch,task,info,tasks,sw,get,task,info,assert,true,tasks,length,2,assert,true,tasks,0,get,task,name,equals,name1,assert,true,tasks,1,get,task,name,equals,name2,sw,to,string
StopWatchTests -> public void testValidUsage() throws Exception;1362408075;Are timings off in JUnit?;public void testValidUsage() throws Exception {_		StopWatch sw = new StopWatch()__		long int1 = 166L__		long int2 = 45L__		String name1 = "Task 1"__		String name2 = "Task 2"___		assertFalse(sw.isRunning())__		sw.start(name1)__		Thread.sleep(int1)__		assertTrue(sw.isRunning())__		sw.stop()___		_		__		_		_		_		sw.start(name2)__		Thread.sleep(int2)__		sw.stop()__		_		__		assertTrue(sw.getTaskCount() == 2)__		String pp = sw.prettyPrint()__		assertTrue(pp.indexOf(name1) != -1)__		assertTrue(pp.indexOf(name2) != -1)___		StopWatch.TaskInfo[] tasks = sw.getTaskInfo()__		assertTrue(tasks.length == 2)__		assertTrue(tasks[0].getTaskName().equals(name1))__		assertTrue(tasks[1].getTaskName().equals(name2))__		sw.toString()__	};are,timings,off,in,junit;public,void,test,valid,usage,throws,exception,stop,watch,sw,new,stop,watch,long,int1,166l,long,int2,45l,string,name1,task,1,string,name2,task,2,assert,false,sw,is,running,sw,start,name1,thread,sleep,int1,assert,true,sw,is,running,sw,stop,sw,start,name2,thread,sleep,int2,sw,stop,assert,true,sw,get,task,count,2,string,pp,sw,pretty,print,assert,true,pp,index,of,name1,1,assert,true,pp,index,of,name2,1,stop,watch,task,info,tasks,sw,get,task,info,assert,true,tasks,length,2,assert,true,tasks,0,get,task,name,equals,name1,assert,true,tasks,1,get,task,name,equals,name2,sw,to,string
StopWatchTests -> public void testValidUsage() throws Exception;1443187419;Are timings off in JUnit?;public void testValidUsage() throws Exception {_		String id = "myId"__		StopWatch sw = new StopWatch(id)__		long int1 = 166L__		long int2 = 45L__		String name1 = "Task 1"__		String name2 = "Task 2"___		assertFalse(sw.isRunning())__		sw.start(name1)__		Thread.sleep(int1)__		assertTrue(sw.isRunning())__		assertEquals(name1, sw.currentTaskName())__		sw.stop()___		_		__		_		_		_		sw.start(name2)__		Thread.sleep(int2)__		sw.stop()__		_		__		assertTrue(sw.getTaskCount() == 2)__		String pp = sw.prettyPrint()__		assertTrue(pp.contains(name1))__		assertTrue(pp.contains(name2))___		StopWatch.TaskInfo[] tasks = sw.getTaskInfo()__		assertTrue(tasks.length == 2)__		assertTrue(tasks[0].getTaskName().equals(name1))__		assertTrue(tasks[1].getTaskName().equals(name2))___		String toString = sw.toString()__		assertTrue(toString.contains(id))__		assertTrue(toString.contains(name1))__		assertTrue(toString.contains(name2))___		assertEquals(id, sw.getId())__	};are,timings,off,in,junit;public,void,test,valid,usage,throws,exception,string,id,my,id,stop,watch,sw,new,stop,watch,id,long,int1,166l,long,int2,45l,string,name1,task,1,string,name2,task,2,assert,false,sw,is,running,sw,start,name1,thread,sleep,int1,assert,true,sw,is,running,assert,equals,name1,sw,current,task,name,sw,stop,sw,start,name2,thread,sleep,int2,sw,stop,assert,true,sw,get,task,count,2,string,pp,sw,pretty,print,assert,true,pp,contains,name1,assert,true,pp,contains,name2,stop,watch,task,info,tasks,sw,get,task,info,assert,true,tasks,length,2,assert,true,tasks,0,get,task,name,equals,name1,assert,true,tasks,1,get,task,name,equals,name2,string,to,string,sw,to,string,assert,true,to,string,contains,id,assert,true,to,string,contains,name1,assert,true,to,string,contains,name2,assert,equals,id,sw,get,id
