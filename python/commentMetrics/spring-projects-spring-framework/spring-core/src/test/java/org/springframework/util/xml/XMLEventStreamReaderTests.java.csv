commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Before public void createStreamReader() throws Exception {     XMLInputFactory inputFactory = XMLInputFactory.newInstance().     XMLEventReader eventReader = inputFactory.createXMLEventReader(new StringReader(XML)).     streamReader = new XMLEventStreamReader(eventReader). }
false;public;0;6;;@Test public void readAll() throws Exception {     while (streamReader.hasNext()) {         streamReader.next().     } }
false;public;0;10;;@Test public void readCorrect() throws Exception {     Transformer transformer = TransformerFactory.newInstance().newTransformer().     StAXSource source = new StAXSource(streamReader).     StringWriter writer = new StringWriter().     transformer.transform(source, new StreamResult(writer)).     Predicate<Node> nodeFilter = n -> n.getNodeType() != Node.DOCUMENT_TYPE_NODE && n.getNodeType() != Node.PROCESSING_INSTRUCTION_NODE.     assertThat(writer.toString(), isSimilarTo(XML).withNodeFilter(nodeFilter)). }
