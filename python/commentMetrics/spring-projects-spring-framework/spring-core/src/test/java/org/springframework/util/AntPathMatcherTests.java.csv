# id;timestamp;commentText;codeText;commentWords;codeWords
AntPathMatcherTests -> @Test 	public void extractUriTemplateVarsRegexQualifiers();1431086052;SPR-7787;@Test_	public void extractUriTemplateVarsRegexQualifiers() {_		Map<String, String> result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\p{L}\\.]+}-sources-{version:[\\p{N}\\.]+}.jar",_				"com.example-sources-1.0.0.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0", result.get("version"))___		result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\w\\.]+}-sources-{version:[\\d\\.]+}-{year:\\d{4}}{month:\\d{2}}{day:\\d{2}}.jar",_				"com.example-sources-1.0.0-20100220.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0", result.get("version"))__		assertEquals("2010", result.get("year"))__		assertEquals("02", result.get("month"))__		assertEquals("20", result.get("day"))___		result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\p{L}\\.]+}-sources-{version:[\\p{N}\\.\\{\\}]+}.jar",_				"com.example-sources-1.0.0.{12}.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0.{12}", result.get("version"))__	};spr,7787;test,public,void,extract,uri,template,vars,regex,qualifiers,map,string,string,result,path,matcher,extract,uri,template,variables,symbolic,name,p,l,sources,version,p,n,jar,com,example,sources,1,0,0,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,result,get,version,result,path,matcher,extract,uri,template,variables,symbolic,name,w,sources,version,d,year,d,4,month,d,2,day,d,2,jar,com,example,sources,1,0,0,20100220,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,result,get,version,assert,equals,2010,result,get,year,assert,equals,02,result,get,month,assert,equals,20,result,get,day,result,path,matcher,extract,uri,template,variables,symbolic,name,p,l,sources,version,p,n,jar,com,example,sources,1,0,0,12,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,12,result,get,version
AntPathMatcherTests -> @Test 	public void extractUriTemplateVarsRegexQualifiers();1431088281;SPR-7787;@Test_	public void extractUriTemplateVarsRegexQualifiers() {_		Map<String, String> result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\p{L}\\.]+}-sources-{version:[\\p{N}\\.]+}.jar",_				"com.example-sources-1.0.0.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0", result.get("version"))___		result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\w\\.]+}-sources-{version:[\\d\\.]+}-{year:\\d{4}}{month:\\d{2}}{day:\\d{2}}.jar",_				"com.example-sources-1.0.0-20100220.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0", result.get("version"))__		assertEquals("2010", result.get("year"))__		assertEquals("02", result.get("month"))__		assertEquals("20", result.get("day"))___		result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\p{L}\\.]+}-sources-{version:[\\p{N}\\.\\{\\}]+}.jar",_				"com.example-sources-1.0.0.{12}.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0.{12}", result.get("version"))__	};spr,7787;test,public,void,extract,uri,template,vars,regex,qualifiers,map,string,string,result,path,matcher,extract,uri,template,variables,symbolic,name,p,l,sources,version,p,n,jar,com,example,sources,1,0,0,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,result,get,version,result,path,matcher,extract,uri,template,variables,symbolic,name,w,sources,version,d,year,d,4,month,d,2,day,d,2,jar,com,example,sources,1,0,0,20100220,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,result,get,version,assert,equals,2010,result,get,year,assert,equals,02,result,get,month,assert,equals,20,result,get,day,result,path,matcher,extract,uri,template,variables,symbolic,name,p,l,sources,version,p,n,jar,com,example,sources,1,0,0,12,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,12,result,get,version
AntPathMatcherTests -> @Test 	public void extractUriTemplateVarsRegexQualifiers();1431088635;SPR-7787;@Test_	public void extractUriTemplateVarsRegexQualifiers() {_		Map<String, String> result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\p{L}\\.]+}-sources-{version:[\\p{N}\\.]+}.jar",_				"com.example-sources-1.0.0.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0", result.get("version"))___		result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\w\\.]+}-sources-{version:[\\d\\.]+}-{year:\\d{4}}{month:\\d{2}}{day:\\d{2}}.jar",_				"com.example-sources-1.0.0-20100220.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0", result.get("version"))__		assertEquals("2010", result.get("year"))__		assertEquals("02", result.get("month"))__		assertEquals("20", result.get("day"))___		result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\p{L}\\.]+}-sources-{version:[\\p{N}\\.\\{\\}]+}.jar",_				"com.example-sources-1.0.0.{12}.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0.{12}", result.get("version"))__	};spr,7787;test,public,void,extract,uri,template,vars,regex,qualifiers,map,string,string,result,path,matcher,extract,uri,template,variables,symbolic,name,p,l,sources,version,p,n,jar,com,example,sources,1,0,0,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,result,get,version,result,path,matcher,extract,uri,template,variables,symbolic,name,w,sources,version,d,year,d,4,month,d,2,day,d,2,jar,com,example,sources,1,0,0,20100220,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,result,get,version,assert,equals,2010,result,get,year,assert,equals,02,result,get,month,assert,equals,20,result,get,day,result,path,matcher,extract,uri,template,variables,symbolic,name,p,l,sources,version,p,n,jar,com,example,sources,1,0,0,12,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,12,result,get,version
AntPathMatcherTests -> @Test 	public void extractUriTemplateVarsRegexQualifiers();1431178173;SPR-7787;@Test_	public void extractUriTemplateVarsRegexQualifiers() {_		Map<String, String> result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\p{L}\\.]+}-sources-{version:[\\p{N}\\.]+}.jar",_				"com.example-sources-1.0.0.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0", result.get("version"))___		result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\w\\.]+}-sources-{version:[\\d\\.]+}-{year:\\d{4}}{month:\\d{2}}{day:\\d{2}}.jar",_				"com.example-sources-1.0.0-20100220.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0", result.get("version"))__		assertEquals("2010", result.get("year"))__		assertEquals("02", result.get("month"))__		assertEquals("20", result.get("day"))___		result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\p{L}\\.]+}-sources-{version:[\\p{N}\\.\\{\\}]+}.jar",_				"com.example-sources-1.0.0.{12}.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0.{12}", result.get("version"))__	};spr,7787;test,public,void,extract,uri,template,vars,regex,qualifiers,map,string,string,result,path,matcher,extract,uri,template,variables,symbolic,name,p,l,sources,version,p,n,jar,com,example,sources,1,0,0,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,result,get,version,result,path,matcher,extract,uri,template,variables,symbolic,name,w,sources,version,d,year,d,4,month,d,2,day,d,2,jar,com,example,sources,1,0,0,20100220,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,result,get,version,assert,equals,2010,result,get,year,assert,equals,02,result,get,month,assert,equals,20,result,get,day,result,path,matcher,extract,uri,template,variables,symbolic,name,p,l,sources,version,p,n,jar,com,example,sources,1,0,0,12,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,12,result,get,version
AntPathMatcherTests -> @Test 	public void extractUriTemplateVarsRegexQualifiers();1432018141;SPR-7787;@Test_	public void extractUriTemplateVarsRegexQualifiers() {_		Map<String, String> result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\p{L}\\.]+}-sources-{version:[\\p{N}\\.]+}.jar",_				"com.example-sources-1.0.0.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0", result.get("version"))___		result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\w\\.]+}-sources-{version:[\\d\\.]+}-{year:\\d{4}}{month:\\d{2}}{day:\\d{2}}.jar",_				"com.example-sources-1.0.0-20100220.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0", result.get("version"))__		assertEquals("2010", result.get("year"))__		assertEquals("02", result.get("month"))__		assertEquals("20", result.get("day"))___		result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\p{L}\\.]+}-sources-{version:[\\p{N}\\.\\{\\}]+}.jar",_				"com.example-sources-1.0.0.{12}.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0.{12}", result.get("version"))__	};spr,7787;test,public,void,extract,uri,template,vars,regex,qualifiers,map,string,string,result,path,matcher,extract,uri,template,variables,symbolic,name,p,l,sources,version,p,n,jar,com,example,sources,1,0,0,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,result,get,version,result,path,matcher,extract,uri,template,variables,symbolic,name,w,sources,version,d,year,d,4,month,d,2,day,d,2,jar,com,example,sources,1,0,0,20100220,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,result,get,version,assert,equals,2010,result,get,year,assert,equals,02,result,get,month,assert,equals,20,result,get,day,result,path,matcher,extract,uri,template,variables,symbolic,name,p,l,sources,version,p,n,jar,com,example,sources,1,0,0,12,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,12,result,get,version
AntPathMatcherTests -> @Test 	public void extractUriTemplateVarsRegexQualifiers();1434572159;SPR-7787;@Test_	public void extractUriTemplateVarsRegexQualifiers() {_		Map<String, String> result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\p{L}\\.]+}-sources-{version:[\\p{N}\\.]+}.jar",_				"com.example-sources-1.0.0.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0", result.get("version"))___		result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\w\\.]+}-sources-{version:[\\d\\.]+}-{year:\\d{4}}{month:\\d{2}}{day:\\d{2}}.jar",_				"com.example-sources-1.0.0-20100220.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0", result.get("version"))__		assertEquals("2010", result.get("year"))__		assertEquals("02", result.get("month"))__		assertEquals("20", result.get("day"))___		result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\p{L}\\.]+}-sources-{version:[\\p{N}\\.\\{\\}]+}.jar",_				"com.example-sources-1.0.0.{12}.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0.{12}", result.get("version"))__	};spr,7787;test,public,void,extract,uri,template,vars,regex,qualifiers,map,string,string,result,path,matcher,extract,uri,template,variables,symbolic,name,p,l,sources,version,p,n,jar,com,example,sources,1,0,0,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,result,get,version,result,path,matcher,extract,uri,template,variables,symbolic,name,w,sources,version,d,year,d,4,month,d,2,day,d,2,jar,com,example,sources,1,0,0,20100220,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,result,get,version,assert,equals,2010,result,get,year,assert,equals,02,result,get,month,assert,equals,20,result,get,day,result,path,matcher,extract,uri,template,variables,symbolic,name,p,l,sources,version,p,n,jar,com,example,sources,1,0,0,12,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,12,result,get,version
AntPathMatcherTests -> @Test 	public void extractUriTemplateVarsRegexQualifiers();1434726592;SPR-7787;@Test_	public void extractUriTemplateVarsRegexQualifiers() {_		Map<String, String> result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\p{L}\\.]+}-sources-{version:[\\p{N}\\.]+}.jar",_				"com.example-sources-1.0.0.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0", result.get("version"))___		result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\w\\.]+}-sources-{version:[\\d\\.]+}-{year:\\d{4}}{month:\\d{2}}{day:\\d{2}}.jar",_				"com.example-sources-1.0.0-20100220.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0", result.get("version"))__		assertEquals("2010", result.get("year"))__		assertEquals("02", result.get("month"))__		assertEquals("20", result.get("day"))___		result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\p{L}\\.]+}-sources-{version:[\\p{N}\\.\\{\\}]+}.jar",_				"com.example-sources-1.0.0.{12}.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0.{12}", result.get("version"))__	};spr,7787;test,public,void,extract,uri,template,vars,regex,qualifiers,map,string,string,result,path,matcher,extract,uri,template,variables,symbolic,name,p,l,sources,version,p,n,jar,com,example,sources,1,0,0,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,result,get,version,result,path,matcher,extract,uri,template,variables,symbolic,name,w,sources,version,d,year,d,4,month,d,2,day,d,2,jar,com,example,sources,1,0,0,20100220,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,result,get,version,assert,equals,2010,result,get,year,assert,equals,02,result,get,month,assert,equals,20,result,get,day,result,path,matcher,extract,uri,template,variables,symbolic,name,p,l,sources,version,p,n,jar,com,example,sources,1,0,0,12,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,12,result,get,version
AntPathMatcherTests -> @Test 	public void extractUriTemplateVarsRegexQualifiers();1437993654;SPR-7787;@Test_	public void extractUriTemplateVarsRegexQualifiers() {_		Map<String, String> result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\p{L}\\.]+}-sources-{version:[\\p{N}\\.]+}.jar",_				"com.example-sources-1.0.0.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0", result.get("version"))___		result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\w\\.]+}-sources-{version:[\\d\\.]+}-{year:\\d{4}}{month:\\d{2}}{day:\\d{2}}.jar",_				"com.example-sources-1.0.0-20100220.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0", result.get("version"))__		assertEquals("2010", result.get("year"))__		assertEquals("02", result.get("month"))__		assertEquals("20", result.get("day"))___		result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\p{L}\\.]+}-sources-{version:[\\p{N}\\.\\{\\}]+}.jar",_				"com.example-sources-1.0.0.{12}.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0.{12}", result.get("version"))__	};spr,7787;test,public,void,extract,uri,template,vars,regex,qualifiers,map,string,string,result,path,matcher,extract,uri,template,variables,symbolic,name,p,l,sources,version,p,n,jar,com,example,sources,1,0,0,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,result,get,version,result,path,matcher,extract,uri,template,variables,symbolic,name,w,sources,version,d,year,d,4,month,d,2,day,d,2,jar,com,example,sources,1,0,0,20100220,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,result,get,version,assert,equals,2010,result,get,year,assert,equals,02,result,get,month,assert,equals,20,result,get,day,result,path,matcher,extract,uri,template,variables,symbolic,name,p,l,sources,version,p,n,jar,com,example,sources,1,0,0,12,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,12,result,get,version
AntPathMatcherTests -> @Test 	public void extractUriTemplateVarsRegexQualifiers();1438166321;SPR-7787;@Test_	public void extractUriTemplateVarsRegexQualifiers() {_		Map<String, String> result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\p{L}\\.]+}-sources-{version:[\\p{N}\\.]+}.jar",_				"com.example-sources-1.0.0.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0", result.get("version"))___		result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\w\\.]+}-sources-{version:[\\d\\.]+}-{year:\\d{4}}{month:\\d{2}}{day:\\d{2}}.jar",_				"com.example-sources-1.0.0-20100220.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0", result.get("version"))__		assertEquals("2010", result.get("year"))__		assertEquals("02", result.get("month"))__		assertEquals("20", result.get("day"))___		result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\p{L}\\.]+}-sources-{version:[\\p{N}\\.\\{\\}]+}.jar",_				"com.example-sources-1.0.0.{12}.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0.{12}", result.get("version"))__	};spr,7787;test,public,void,extract,uri,template,vars,regex,qualifiers,map,string,string,result,path,matcher,extract,uri,template,variables,symbolic,name,p,l,sources,version,p,n,jar,com,example,sources,1,0,0,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,result,get,version,result,path,matcher,extract,uri,template,variables,symbolic,name,w,sources,version,d,year,d,4,month,d,2,day,d,2,jar,com,example,sources,1,0,0,20100220,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,result,get,version,assert,equals,2010,result,get,year,assert,equals,02,result,get,month,assert,equals,20,result,get,day,result,path,matcher,extract,uri,template,variables,symbolic,name,p,l,sources,version,p,n,jar,com,example,sources,1,0,0,12,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,12,result,get,version
AntPathMatcherTests -> @Test 	public void extractUriTemplateVarsRegexQualifiers();1455100778;SPR-7787;@Test_	public void extractUriTemplateVarsRegexQualifiers() {_		Map<String, String> result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\p{L}\\.]+}-sources-{version:[\\p{N}\\.]+}.jar",_				"com.example-sources-1.0.0.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0", result.get("version"))___		result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\w\\.]+}-sources-{version:[\\d\\.]+}-{year:\\d{4}}{month:\\d{2}}{day:\\d{2}}.jar",_				"com.example-sources-1.0.0-20100220.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0", result.get("version"))__		assertEquals("2010", result.get("year"))__		assertEquals("02", result.get("month"))__		assertEquals("20", result.get("day"))___		result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\p{L}\\.]+}-sources-{version:[\\p{N}\\.\\{\\}]+}.jar",_				"com.example-sources-1.0.0.{12}.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0.{12}", result.get("version"))__	};spr,7787;test,public,void,extract,uri,template,vars,regex,qualifiers,map,string,string,result,path,matcher,extract,uri,template,variables,symbolic,name,p,l,sources,version,p,n,jar,com,example,sources,1,0,0,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,result,get,version,result,path,matcher,extract,uri,template,variables,symbolic,name,w,sources,version,d,year,d,4,month,d,2,day,d,2,jar,com,example,sources,1,0,0,20100220,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,result,get,version,assert,equals,2010,result,get,year,assert,equals,02,result,get,month,assert,equals,20,result,get,day,result,path,matcher,extract,uri,template,variables,symbolic,name,p,l,sources,version,p,n,jar,com,example,sources,1,0,0,12,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,12,result,get,version
AntPathMatcherTests -> @Test 	public void extractUriTemplateVarsRegexQualifiers();1455850198;SPR-7787;@Test_	public void extractUriTemplateVarsRegexQualifiers() {_		Map<String, String> result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\p{L}\\.]+}-sources-{version:[\\p{N}\\.]+}.jar",_				"com.example-sources-1.0.0.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0", result.get("version"))___		result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\w\\.]+}-sources-{version:[\\d\\.]+}-{year:\\d{4}}{month:\\d{2}}{day:\\d{2}}.jar",_				"com.example-sources-1.0.0-20100220.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0", result.get("version"))__		assertEquals("2010", result.get("year"))__		assertEquals("02", result.get("month"))__		assertEquals("20", result.get("day"))___		result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\p{L}\\.]+}-sources-{version:[\\p{N}\\.\\{\\}]+}.jar",_				"com.example-sources-1.0.0.{12}.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0.{12}", result.get("version"))__	};spr,7787;test,public,void,extract,uri,template,vars,regex,qualifiers,map,string,string,result,path,matcher,extract,uri,template,variables,symbolic,name,p,l,sources,version,p,n,jar,com,example,sources,1,0,0,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,result,get,version,result,path,matcher,extract,uri,template,variables,symbolic,name,w,sources,version,d,year,d,4,month,d,2,day,d,2,jar,com,example,sources,1,0,0,20100220,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,result,get,version,assert,equals,2010,result,get,year,assert,equals,02,result,get,month,assert,equals,20,result,get,day,result,path,matcher,extract,uri,template,variables,symbolic,name,p,l,sources,version,p,n,jar,com,example,sources,1,0,0,12,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,12,result,get,version
AntPathMatcherTests -> @Test 	public void extractUriTemplateVarsRegexQualifiers();1460754629;SPR-7787;@Test_	public void extractUriTemplateVarsRegexQualifiers() {_		Map<String, String> result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\p{L}\\.]+}-sources-{version:[\\p{N}\\.]+}.jar",_				"com.example-sources-1.0.0.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0", result.get("version"))___		result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\w\\.]+}-sources-{version:[\\d\\.]+}-{year:\\d{4}}{month:\\d{2}}{day:\\d{2}}.jar",_				"com.example-sources-1.0.0-20100220.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0", result.get("version"))__		assertEquals("2010", result.get("year"))__		assertEquals("02", result.get("month"))__		assertEquals("20", result.get("day"))___		result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\p{L}\\.]+}-sources-{version:[\\p{N}\\.\\{\\}]+}.jar",_				"com.example-sources-1.0.0.{12}.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0.{12}", result.get("version"))__	};spr,7787;test,public,void,extract,uri,template,vars,regex,qualifiers,map,string,string,result,path,matcher,extract,uri,template,variables,symbolic,name,p,l,sources,version,p,n,jar,com,example,sources,1,0,0,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,result,get,version,result,path,matcher,extract,uri,template,variables,symbolic,name,w,sources,version,d,year,d,4,month,d,2,day,d,2,jar,com,example,sources,1,0,0,20100220,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,result,get,version,assert,equals,2010,result,get,year,assert,equals,02,result,get,month,assert,equals,20,result,get,day,result,path,matcher,extract,uri,template,variables,symbolic,name,p,l,sources,version,p,n,jar,com,example,sources,1,0,0,12,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,12,result,get,version
AntPathMatcherTests -> @Test 	public void extractUriTemplateVarsRegexQualifiers();1462393686;SPR-7787;@Test_	public void extractUriTemplateVarsRegexQualifiers() {_		Map<String, String> result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\p{L}\\.]+}-sources-{version:[\\p{N}\\.]+}.jar",_				"com.example-sources-1.0.0.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0", result.get("version"))___		result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\w\\.]+}-sources-{version:[\\d\\.]+}-{year:\\d{4}}{month:\\d{2}}{day:\\d{2}}.jar",_				"com.example-sources-1.0.0-20100220.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0", result.get("version"))__		assertEquals("2010", result.get("year"))__		assertEquals("02", result.get("month"))__		assertEquals("20", result.get("day"))___		result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\p{L}\\.]+}-sources-{version:[\\p{N}\\.\\{\\}]+}.jar",_				"com.example-sources-1.0.0.{12}.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0.{12}", result.get("version"))__	};spr,7787;test,public,void,extract,uri,template,vars,regex,qualifiers,map,string,string,result,path,matcher,extract,uri,template,variables,symbolic,name,p,l,sources,version,p,n,jar,com,example,sources,1,0,0,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,result,get,version,result,path,matcher,extract,uri,template,variables,symbolic,name,w,sources,version,d,year,d,4,month,d,2,day,d,2,jar,com,example,sources,1,0,0,20100220,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,result,get,version,assert,equals,2010,result,get,year,assert,equals,02,result,get,month,assert,equals,20,result,get,day,result,path,matcher,extract,uri,template,variables,symbolic,name,p,l,sources,version,p,n,jar,com,example,sources,1,0,0,12,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,12,result,get,version
AntPathMatcherTests -> @Test 	public void extractUriTemplateVarsRegexQualifiers();1467730834;SPR-7787;@Test_	public void extractUriTemplateVarsRegexQualifiers() {_		Map<String, String> result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\p{L}\\.]+}-sources-{version:[\\p{N}\\.]+}.jar",_				"com.example-sources-1.0.0.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0", result.get("version"))___		result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\w\\.]+}-sources-{version:[\\d\\.]+}-{year:\\d{4}}{month:\\d{2}}{day:\\d{2}}.jar",_				"com.example-sources-1.0.0-20100220.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0", result.get("version"))__		assertEquals("2010", result.get("year"))__		assertEquals("02", result.get("month"))__		assertEquals("20", result.get("day"))___		result = pathMatcher.extractUriTemplateVariables(_				"{symbolicName:[\\p{L}\\.]+}-sources-{version:[\\p{N}\\.\\{\\}]+}.jar",_				"com.example-sources-1.0.0.{12}.jar")__		assertEquals("com.example", result.get("symbolicName"))__		assertEquals("1.0.0.{12}", result.get("version"))__	};spr,7787;test,public,void,extract,uri,template,vars,regex,qualifiers,map,string,string,result,path,matcher,extract,uri,template,variables,symbolic,name,p,l,sources,version,p,n,jar,com,example,sources,1,0,0,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,result,get,version,result,path,matcher,extract,uri,template,variables,symbolic,name,w,sources,version,d,year,d,4,month,d,2,day,d,2,jar,com,example,sources,1,0,0,20100220,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,result,get,version,assert,equals,2010,result,get,year,assert,equals,02,result,get,month,assert,equals,20,result,get,day,result,path,matcher,extract,uri,template,variables,symbolic,name,p,l,sources,version,p,n,jar,com,example,sources,1,0,0,12,jar,assert,equals,com,example,result,get,symbolic,name,assert,equals,1,0,0,12,result,get,version
AntPathMatcherTests -> @Test 	public void trimTokensOff();1431086052;SPR-8687;@Test_	public void trimTokensOff() {_		pathMatcher.setTrimTokens(false)___		assertTrue(pathMatcher.match("/group/{groupName}/members", "/group/sales/members"))__		assertTrue(pathMatcher.match("/group/{groupName}/members", "/group/  sales/members"))__	};spr,8687;test,public,void,trim,tokens,off,path,matcher,set,trim,tokens,false,assert,true,path,matcher,match,group,group,name,members,group,sales,members,assert,true,path,matcher,match,group,group,name,members,group,sales,members
AntPathMatcherTests -> @Test 	public void trimTokensOff();1431088281;SPR-8687;@Test_	public void trimTokensOff() {_		pathMatcher.setTrimTokens(false)___		assertTrue(pathMatcher.match("/group/{groupName}/members", "/group/sales/members"))__		assertTrue(pathMatcher.match("/group/{groupName}/members", "/group/  sales/members"))__	};spr,8687;test,public,void,trim,tokens,off,path,matcher,set,trim,tokens,false,assert,true,path,matcher,match,group,group,name,members,group,sales,members,assert,true,path,matcher,match,group,group,name,members,group,sales,members
AntPathMatcherTests -> @Test 	public void trimTokensOff();1431088635;SPR-8687;@Test_	public void trimTokensOff() {_		pathMatcher.setTrimTokens(false)___		assertTrue(pathMatcher.match("/group/{groupName}/members", "/group/sales/members"))__		assertTrue(pathMatcher.match("/group/{groupName}/members", "/group/  sales/members"))__	};spr,8687;test,public,void,trim,tokens,off,path,matcher,set,trim,tokens,false,assert,true,path,matcher,match,group,group,name,members,group,sales,members,assert,true,path,matcher,match,group,group,name,members,group,sales,members
AntPathMatcherTests -> @Test 	public void trimTokensOff();1431178173;SPR-8687;@Test_	public void trimTokensOff() {_		pathMatcher.setTrimTokens(false)___		assertTrue(pathMatcher.match("/group/{groupName}/members", "/group/sales/members"))__		assertTrue(pathMatcher.match("/group/{groupName}/members", "/group/  sales/members"))__	};spr,8687;test,public,void,trim,tokens,off,path,matcher,set,trim,tokens,false,assert,true,path,matcher,match,group,group,name,members,group,sales,members,assert,true,path,matcher,match,group,group,name,members,group,sales,members
AntPathMatcherTests -> @Test 	public void trimTokensOff();1432018141;SPR-8687;@Test_	public void trimTokensOff() {_		pathMatcher.setTrimTokens(false)___		assertTrue(pathMatcher.match("/group/{groupName}/members", "/group/sales/members"))__		assertTrue(pathMatcher.match("/group/{groupName}/members", "/group/  sales/members"))__	};spr,8687;test,public,void,trim,tokens,off,path,matcher,set,trim,tokens,false,assert,true,path,matcher,match,group,group,name,members,group,sales,members,assert,true,path,matcher,match,group,group,name,members,group,sales,members
AntPathMatcherTests -> @Test 	public void trimTokensOff();1434572159;SPR-8687;@Test_	public void trimTokensOff() {_		pathMatcher.setTrimTokens(false)___		assertTrue(pathMatcher.match("/group/{groupName}/members", "/group/sales/members"))__		assertTrue(pathMatcher.match("/group/{groupName}/members", "/group/  sales/members"))__	};spr,8687;test,public,void,trim,tokens,off,path,matcher,set,trim,tokens,false,assert,true,path,matcher,match,group,group,name,members,group,sales,members,assert,true,path,matcher,match,group,group,name,members,group,sales,members
AntPathMatcherTests -> @Test 	public void trimTokensOff();1434726592;SPR-8687;@Test_	public void trimTokensOff() {_		pathMatcher.setTrimTokens(false)___		assertTrue(pathMatcher.match("/group/{groupName}/members", "/group/sales/members"))__		assertTrue(pathMatcher.match("/group/{groupName}/members", "/group/  sales/members"))__	};spr,8687;test,public,void,trim,tokens,off,path,matcher,set,trim,tokens,false,assert,true,path,matcher,match,group,group,name,members,group,sales,members,assert,true,path,matcher,match,group,group,name,members,group,sales,members
AntPathMatcherTests -> @Test 	public void trimTokensOff();1437993654;SPR-8687;@Test_	public void trimTokensOff() {_		pathMatcher.setTrimTokens(false)___		assertTrue(pathMatcher.match("/group/{groupName}/members", "/group/sales/members"))__		assertTrue(pathMatcher.match("/group/{groupName}/members", "/group/  sales/members"))__	};spr,8687;test,public,void,trim,tokens,off,path,matcher,set,trim,tokens,false,assert,true,path,matcher,match,group,group,name,members,group,sales,members,assert,true,path,matcher,match,group,group,name,members,group,sales,members
AntPathMatcherTests -> @Test 	public void extractUriTemplateVarsRegexCapturingGroups();1431086052;SPR-8455;@Test_	public void extractUriTemplateVarsRegexCapturingGroups() {_		try {_			pathMatcher.extractUriTemplateVariables("/web/{id:foo(bar)?}", "/web/foobar")__			fail("Expected exception")__		}_		catch (IllegalArgumentException ex) {_			assertTrue("Expected helpful message on the use of capturing groups",_					ex.getMessage().contains("The number of capturing groups in the pattern"))__		}_	};spr,8455;test,public,void,extract,uri,template,vars,regex,capturing,groups,try,path,matcher,extract,uri,template,variables,web,id,foo,bar,web,foobar,fail,expected,exception,catch,illegal,argument,exception,ex,assert,true,expected,helpful,message,on,the,use,of,capturing,groups,ex,get,message,contains,the,number,of,capturing,groups,in,the,pattern
AntPathMatcherTests -> @Test 	public void extractUriTemplateVarsRegexCapturingGroups();1431088281;SPR-8455;@Test_	public void extractUriTemplateVarsRegexCapturingGroups() {_		try {_			pathMatcher.extractUriTemplateVariables("/web/{id:foo(bar)?}", "/web/foobar")__			fail("Expected exception")__		}_		catch (IllegalArgumentException ex) {_			assertTrue("Expected helpful message on the use of capturing groups",_					ex.getMessage().contains("The number of capturing groups in the pattern"))__		}_	};spr,8455;test,public,void,extract,uri,template,vars,regex,capturing,groups,try,path,matcher,extract,uri,template,variables,web,id,foo,bar,web,foobar,fail,expected,exception,catch,illegal,argument,exception,ex,assert,true,expected,helpful,message,on,the,use,of,capturing,groups,ex,get,message,contains,the,number,of,capturing,groups,in,the,pattern
AntPathMatcherTests -> @Test 	public void extractUriTemplateVarsRegexCapturingGroups();1431088635;SPR-8455;@Test_	public void extractUriTemplateVarsRegexCapturingGroups() {_		exception.expect(IllegalArgumentException.class)__		exception.expectMessage(containsString("The number of capturing groups in the pattern"))__		pathMatcher.extractUriTemplateVariables("/web/{id:foo(bar)?}", "/web/foobar")__	};spr,8455;test,public,void,extract,uri,template,vars,regex,capturing,groups,exception,expect,illegal,argument,exception,class,exception,expect,message,contains,string,the,number,of,capturing,groups,in,the,pattern,path,matcher,extract,uri,template,variables,web,id,foo,bar,web,foobar
AntPathMatcherTests -> @Test 	public void extractUriTemplateVarsRegexCapturingGroups();1431178173;SPR-8455;@Test_	public void extractUriTemplateVarsRegexCapturingGroups() {_		exception.expect(IllegalArgumentException.class)__		exception.expectMessage(containsString("The number of capturing groups in the pattern"))__		pathMatcher.extractUriTemplateVariables("/web/{id:foo(bar)?}", "/web/foobar")__	};spr,8455;test,public,void,extract,uri,template,vars,regex,capturing,groups,exception,expect,illegal,argument,exception,class,exception,expect,message,contains,string,the,number,of,capturing,groups,in,the,pattern,path,matcher,extract,uri,template,variables,web,id,foo,bar,web,foobar
AntPathMatcherTests -> @Test 	public void extractUriTemplateVarsRegexCapturingGroups();1432018141;SPR-8455;@Test_	public void extractUriTemplateVarsRegexCapturingGroups() {_		exception.expect(IllegalArgumentException.class)__		exception.expectMessage(containsString("The number of capturing groups in the pattern"))__		pathMatcher.extractUriTemplateVariables("/web/{id:foo(bar)?}", "/web/foobar")__	};spr,8455;test,public,void,extract,uri,template,vars,regex,capturing,groups,exception,expect,illegal,argument,exception,class,exception,expect,message,contains,string,the,number,of,capturing,groups,in,the,pattern,path,matcher,extract,uri,template,variables,web,id,foo,bar,web,foobar
AntPathMatcherTests -> @Test 	public void extractUriTemplateVarsRegexCapturingGroups();1434572159;SPR-8455;@Test_	public void extractUriTemplateVarsRegexCapturingGroups() {_		exception.expect(IllegalArgumentException.class)__		exception.expectMessage(containsString("The number of capturing groups in the pattern"))__		pathMatcher.extractUriTemplateVariables("/web/{id:foo(bar)?}", "/web/foobar")__	};spr,8455;test,public,void,extract,uri,template,vars,regex,capturing,groups,exception,expect,illegal,argument,exception,class,exception,expect,message,contains,string,the,number,of,capturing,groups,in,the,pattern,path,matcher,extract,uri,template,variables,web,id,foo,bar,web,foobar
AntPathMatcherTests -> @Test 	public void extractUriTemplateVarsRegexCapturingGroups();1434726592;SPR-8455;@Test_	public void extractUriTemplateVarsRegexCapturingGroups() {_		exception.expect(IllegalArgumentException.class)__		exception.expectMessage(containsString("The number of capturing groups in the pattern"))__		pathMatcher.extractUriTemplateVariables("/web/{id:foo(bar)?}", "/web/foobar")__	};spr,8455;test,public,void,extract,uri,template,vars,regex,capturing,groups,exception,expect,illegal,argument,exception,class,exception,expect,message,contains,string,the,number,of,capturing,groups,in,the,pattern,path,matcher,extract,uri,template,variables,web,id,foo,bar,web,foobar
AntPathMatcherTests -> @Test 	public void extractUriTemplateVarsRegexCapturingGroups();1437993654;SPR-8455;@Test_	public void extractUriTemplateVarsRegexCapturingGroups() {_		exception.expect(IllegalArgumentException.class)__		exception.expectMessage(containsString("The number of capturing groups in the pattern"))__		pathMatcher.extractUriTemplateVariables("/web/{id:foo(bar)?}", "/web/foobar")__	};spr,8455;test,public,void,extract,uri,template,vars,regex,capturing,groups,exception,expect,illegal,argument,exception,class,exception,expect,message,contains,string,the,number,of,capturing,groups,in,the,pattern,path,matcher,extract,uri,template,variables,web,id,foo,bar,web,foobar
AntPathMatcherTests -> @Test 	public void extractUriTemplateVarsRegexCapturingGroups();1438166321;SPR-8455;@Test_	public void extractUriTemplateVarsRegexCapturingGroups() {_		exception.expect(IllegalArgumentException.class)__		exception.expectMessage(containsString("The number of capturing groups in the pattern"))__		pathMatcher.extractUriTemplateVariables("/web/{id:foo(bar)?}", "/web/foobar")__	};spr,8455;test,public,void,extract,uri,template,vars,regex,capturing,groups,exception,expect,illegal,argument,exception,class,exception,expect,message,contains,string,the,number,of,capturing,groups,in,the,pattern,path,matcher,extract,uri,template,variables,web,id,foo,bar,web,foobar
AntPathMatcherTests -> @Test 	public void extractUriTemplateVarsRegexCapturingGroups();1455100778;SPR-8455;@Test_	public void extractUriTemplateVarsRegexCapturingGroups() {_		exception.expect(IllegalArgumentException.class)__		exception.expectMessage(containsString("The number of capturing groups in the pattern"))__		pathMatcher.extractUriTemplateVariables("/web/{id:foo(bar)?}", "/web/foobar")__	};spr,8455;test,public,void,extract,uri,template,vars,regex,capturing,groups,exception,expect,illegal,argument,exception,class,exception,expect,message,contains,string,the,number,of,capturing,groups,in,the,pattern,path,matcher,extract,uri,template,variables,web,id,foo,bar,web,foobar
AntPathMatcherTests -> @Test 	public void extractUriTemplateVarsRegexCapturingGroups();1455850198;SPR-8455;@Test_	public void extractUriTemplateVarsRegexCapturingGroups() {_		exception.expect(IllegalArgumentException.class)__		exception.expectMessage(containsString("The number of capturing groups in the pattern"))__		pathMatcher.extractUriTemplateVariables("/web/{id:foo(bar)?}", "/web/foobar")__	};spr,8455;test,public,void,extract,uri,template,vars,regex,capturing,groups,exception,expect,illegal,argument,exception,class,exception,expect,message,contains,string,the,number,of,capturing,groups,in,the,pattern,path,matcher,extract,uri,template,variables,web,id,foo,bar,web,foobar
AntPathMatcherTests -> @Test 	public void extractUriTemplateVarsRegexCapturingGroups();1460754629;SPR-8455;@Test_	public void extractUriTemplateVarsRegexCapturingGroups() {_		exception.expect(IllegalArgumentException.class)__		exception.expectMessage(containsString("The number of capturing groups in the pattern"))__		pathMatcher.extractUriTemplateVariables("/web/{id:foo(bar)?}", "/web/foobar")__	};spr,8455;test,public,void,extract,uri,template,vars,regex,capturing,groups,exception,expect,illegal,argument,exception,class,exception,expect,message,contains,string,the,number,of,capturing,groups,in,the,pattern,path,matcher,extract,uri,template,variables,web,id,foo,bar,web,foobar
AntPathMatcherTests -> @Test 	public void extractUriTemplateVarsRegexCapturingGroups();1462393686;SPR-8455;@Test_	public void extractUriTemplateVarsRegexCapturingGroups() {_		exception.expect(IllegalArgumentException.class)__		exception.expectMessage(containsString("The number of capturing groups in the pattern"))__		pathMatcher.extractUriTemplateVariables("/web/{id:foo(bar)?}", "/web/foobar")__	};spr,8455;test,public,void,extract,uri,template,vars,regex,capturing,groups,exception,expect,illegal,argument,exception,class,exception,expect,message,contains,string,the,number,of,capturing,groups,in,the,pattern,path,matcher,extract,uri,template,variables,web,id,foo,bar,web,foobar
AntPathMatcherTests -> @Test 	public void extractUriTemplateVarsRegexCapturingGroups();1467730834;SPR-8455;@Test_	public void extractUriTemplateVarsRegexCapturingGroups() {_		exception.expect(IllegalArgumentException.class)__		exception.expectMessage(containsString("The number of capturing groups in the pattern"))__		pathMatcher.extractUriTemplateVariables("/web/{id:foo(bar)?}", "/web/foobar")__	};spr,8455;test,public,void,extract,uri,template,vars,regex,capturing,groups,exception,expect,illegal,argument,exception,class,exception,expect,message,contains,string,the,number,of,capturing,groups,in,the,pattern,path,matcher,extract,uri,template,variables,web,id,foo,bar,web,foobar
