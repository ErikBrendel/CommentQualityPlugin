# id;timestamp;commentText;codeText;commentWords;codeWords
Assume -> public static void group(TestGroup group, Executable executable) throws Exception;1438019281;Assume that a particular {@link TestGroup} has been specified before_executing the supplied {@link Executable}._<p>If the assumption fails, the executable will not be executed, but_no {@link AssumptionViolatedException} will be thrown._@param group the group that must be specified_@param executable the executable to execute if the test group is active_@since 4.2;public static void group(TestGroup group, Executable executable) throws Exception {_		if (GROUPS.contains(group)) {_			executable.execute()__		}_	};assume,that,a,particular,link,test,group,has,been,specified,before,executing,the,supplied,link,executable,p,if,the,assumption,fails,the,executable,will,not,be,executed,but,no,link,assumption,violated,exception,will,be,thrown,param,group,the,group,that,must,be,specified,param,executable,the,executable,to,execute,if,the,test,group,is,active,since,4,2;public,static,void,group,test,group,group,executable,executable,throws,exception,if,groups,contains,group,executable,execute
Assume -> public static void group(TestGroup group, Executable executable) throws Exception;1452876337;Assume that a particular {@link TestGroup} has been specified before_executing the supplied {@link Executable}._<p>If the assumption fails, the executable will not be executed, but_no {@link AssumptionViolatedException} will be thrown._@param group the group that must be specified_@param executable the executable to execute if the test group is active_@since 4.2;public static void group(TestGroup group, Executable executable) throws Exception {_		if (GROUPS.contains(group)) {_			executable.execute()__		}_	};assume,that,a,particular,link,test,group,has,been,specified,before,executing,the,supplied,link,executable,p,if,the,assumption,fails,the,executable,will,not,be,executed,but,no,link,assumption,violated,exception,will,be,thrown,param,group,the,group,that,must,be,specified,param,executable,the,executable,to,execute,if,the,test,group,is,active,since,4,2;public,static,void,group,test,group,group,executable,executable,throws,exception,if,groups,contains,group,executable,execute
Assume -> public static void group(TestGroup group, Executable executable) throws Exception;1467752775;Assume that a particular {@link TestGroup} has been specified before_executing the supplied {@link Executable}._<p>If the assumption fails, the executable will not be executed, but_no {@link AssumptionViolatedException} will be thrown._@param group the group that must be specified_@param executable the executable to execute if the test group is active_@since 4.2;public static void group(TestGroup group, Executable executable) throws Exception {_		if (GROUPS.contains(group)) {_			executable.execute()__		}_	};assume,that,a,particular,link,test,group,has,been,specified,before,executing,the,supplied,link,executable,p,if,the,assumption,fails,the,executable,will,not,be,executed,but,no,link,assumption,violated,exception,will,be,thrown,param,group,the,group,that,must,be,specified,param,executable,the,executable,to,execute,if,the,test,group,is,active,since,4,2;public,static,void,group,test,group,group,executable,executable,throws,exception,if,groups,contains,group,executable,execute
Assume -> public static void group(TestGroup group, Executable executable) throws Exception;1484801882;Assume that a particular {@link TestGroup} has been specified before_executing the supplied {@link Executable}._<p>If the assumption fails, the executable will not be executed, but_no {@link AssumptionViolatedException} will be thrown._@param group the group that must be specified_@param executable the executable to execute if the test group is active_@since 4.2;public static void group(TestGroup group, Executable executable) throws Exception {_		Set<TestGroup> testGroups = loadTestGroups()__		if (testGroups.contains(group)) {_			executable.execute()__		}_	};assume,that,a,particular,link,test,group,has,been,specified,before,executing,the,supplied,link,executable,p,if,the,assumption,fails,the,executable,will,not,be,executed,but,no,link,assumption,violated,exception,will,be,thrown,param,group,the,group,that,must,be,specified,param,executable,the,executable,to,execute,if,the,test,group,is,active,since,4,2;public,static,void,group,test,group,group,executable,executable,throws,exception,set,test,group,test,groups,load,test,groups,if,test,groups,contains,group,executable,execute
Assume -> public static void atLeast(JavaVersion version);1357119417;Assume a minimum {@link JavaVersion} is running._@param version the minimum version for the test to run;public static void atLeast(JavaVersion version) {_		if (!JavaVersion.runningVersion().isAtLeast(version)) {_			throw new AssumptionViolatedException("Requires JDK " + version + " but running "_					+ JavaVersion.runningVersion())__		}_	};assume,a,minimum,link,java,version,is,running,param,version,the,minimum,version,for,the,test,to,run;public,static,void,at,least,java,version,version,if,java,version,running,version,is,at,least,version,throw,new,assumption,violated,exception,requires,jdk,version,but,running,java,version,running,version
Assume -> public static void atLeast(JavaVersion version);1367940226;Assume a minimum {@link JavaVersion} is running._@param version the minimum version for the test to run;public static void atLeast(JavaVersion version) {_		if (!JavaVersion.runningVersion().isAtLeast(version)) {_			throw new AssumptionViolatedException("Requires JDK " + version + " but running "_					+ JavaVersion.runningVersion())__		}_	};assume,a,minimum,link,java,version,is,running,param,version,the,minimum,version,for,the,test,to,run;public,static,void,at,least,java,version,version,if,java,version,running,version,is,at,least,version,throw,new,assumption,violated,exception,requires,jdk,version,but,running,java,version,running,version
Assume -> public static void atLeast(JavaVersion version);1399919273;Assume a minimum {@link JavaVersion} is running._@param version the minimum version for the test to run;public static void atLeast(JavaVersion version) {_		if (!JavaVersion.runningVersion().isAtLeast(version)) {_			throw new AssumptionViolatedException("Requires JDK " + version + " but running "_					+ JavaVersion.runningVersion())__		}_	};assume,a,minimum,link,java,version,is,running,param,version,the,minimum,version,for,the,test,to,run;public,static,void,at,least,java,version,version,if,java,version,running,version,is,at,least,version,throw,new,assumption,violated,exception,requires,jdk,version,but,running,java,version,running,version
Assume -> public static void atLeast(JavaVersion version);1418167792;Assume a minimum {@link JavaVersion} is running._@param version the minimum version for the test to run;public static void atLeast(JavaVersion version) {_		if (!JavaVersion.runningVersion().isAtLeast(version)) {_			throw new AssumptionViolatedException("Requires JDK " + version + " but running "_					+ JavaVersion.runningVersion())__		}_	};assume,a,minimum,link,java,version,is,running,param,version,the,minimum,version,for,the,test,to,run;public,static,void,at,least,java,version,version,if,java,version,running,version,is,at,least,version,throw,new,assumption,violated,exception,requires,jdk,version,but,running,java,version,running,version
Assume -> public static void atLeast(JavaVersion version);1438019281;Assume that a minimum {@link JavaVersion} is running._@param version the minimum version for the test to run_@throws AssumptionViolatedException if the assumption fails;public static void atLeast(JavaVersion version) {_		if (!JavaVersion.runningVersion().isAtLeast(version)) {_			throw new AssumptionViolatedException("Requires JDK " + version + " but running "_					+ JavaVersion.runningVersion())__		}_	};assume,that,a,minimum,link,java,version,is,running,param,version,the,minimum,version,for,the,test,to,run,throws,assumption,violated,exception,if,the,assumption,fails;public,static,void,at,least,java,version,version,if,java,version,running,version,is,at,least,version,throw,new,assumption,violated,exception,requires,jdk,version,but,running,java,version,running,version
Assume -> public static void canLoadNativeDirFonts();1367940226;Assume that we can load fonts (https://java.net/jira/browse/MACOSX_PORT-355);public static void canLoadNativeDirFonts() {_		try {_			GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames()__			Class<?> parserClass = ClassUtils.forName("net.sf.jasperreports.engine.util.JRStyledTextParser", null)__			Method method = parserClass.getMethod("getInstance")__			method.setAccessible(true)__			method.invoke(null)__		} catch(Throwable ex) {_			throw new AssumptionViolatedException(_					"Requires GraphicsEnvironment that can load fonts.", ex)__		}_	};assume,that,we,can,load,fonts,https,java,net,jira,browse,355;public,static,void,can,load,native,dir,fonts,try,graphics,environment,get,local,graphics,environment,get,available,font,family,names,class,parser,class,class,utils,for,name,net,sf,jasperreports,engine,util,jrstyled,text,parser,null,method,method,parser,class,get,method,get,instance,method,set,accessible,true,method,invoke,null,catch,throwable,ex,throw,new,assumption,violated,exception,requires,graphics,environment,that,can,load,fonts,ex
Assume -> public static void canLoadNativeDirFonts();1399919273;Assume that we can load fonts (https://java.net/jira/browse/MACOSX_PORT-355);public static void canLoadNativeDirFonts() {_		try {_			GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames()__			Class<?> parserClass = ClassUtils.forName(_					"net.sf.jasperreports.engine.util.JRStyledTextParser", Assume.class.getClassLoader())__			Method method = parserClass.getMethod("getInstance")__			method.setAccessible(true)__			method.invoke(null)__		}_		catch (Throwable ex) {_			throw new AssumptionViolatedException("Requires GraphicsEnvironment that can load fonts", ex)__		}_	};assume,that,we,can,load,fonts,https,java,net,jira,browse,355;public,static,void,can,load,native,dir,fonts,try,graphics,environment,get,local,graphics,environment,get,available,font,family,names,class,parser,class,class,utils,for,name,net,sf,jasperreports,engine,util,jrstyled,text,parser,assume,class,get,class,loader,method,method,parser,class,get,method,get,instance,method,set,accessible,true,method,invoke,null,catch,throwable,ex,throw,new,assumption,violated,exception,requires,graphics,environment,that,can,load,fonts,ex
Assume -> public static void canLoadNativeDirFonts();1418167792;Assume that we can load fonts (https://java.net/jira/browse/MACOSX_PORT-355);public static void canLoadNativeDirFonts() {_		try {_			GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames()__			Class<?> parserClass = ClassUtils.forName(_					"net.sf.jasperreports.engine.util.JRStyledTextParser", Assume.class.getClassLoader())__			Method method = parserClass.getMethod("getInstance")__			method.setAccessible(true)__			method.invoke(null)__		}_		catch (Throwable ex) {_			throw new AssumptionViolatedException("Requires GraphicsEnvironment that can load fonts", ex)__		}_	};assume,that,we,can,load,fonts,https,java,net,jira,browse,355;public,static,void,can,load,native,dir,fonts,try,graphics,environment,get,local,graphics,environment,get,available,font,family,names,class,parser,class,class,utils,for,name,net,sf,jasperreports,engine,util,jrstyled,text,parser,assume,class,get,class,loader,method,method,parser,class,get,method,get,instance,method,set,accessible,true,method,invoke,null,catch,throwable,ex,throw,new,assumption,violated,exception,requires,graphics,environment,that,can,load,fonts,ex
Assume -> public static void canLoadNativeDirFonts();1438019281;Assume that we can load fonts._<p>See <a href="https://java.net/jira/browse/MACOSX_PORT-355">MACOSX_PORT-355</a>_issue._@throws AssumptionViolatedException if the assumption fails;public static void canLoadNativeDirFonts() {_		try {_			GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames()__			Class<?> parserClass = ClassUtils.forName(_					"net.sf.jasperreports.engine.util.JRStyledTextParser", Assume.class.getClassLoader())__			Method method = parserClass.getMethod("getInstance")__			method.setAccessible(true)__			method.invoke(null)__		}_		catch (Throwable ex) {_			throw new AssumptionViolatedException("Requires GraphicsEnvironment that can load fonts", ex)__		}_	};assume,that,we,can,load,fonts,p,see,a,href,https,java,net,jira,browse,355,355,a,issue,throws,assumption,violated,exception,if,the,assumption,fails;public,static,void,can,load,native,dir,fonts,try,graphics,environment,get,local,graphics,environment,get,available,font,family,names,class,parser,class,class,utils,for,name,net,sf,jasperreports,engine,util,jrstyled,text,parser,assume,class,get,class,loader,method,method,parser,class,get,method,get,instance,method,set,accessible,true,method,invoke,null,catch,throwable,ex,throw,new,assumption,violated,exception,requires,graphics,environment,that,can,load,fonts,ex
Assume -> public static void canLoadNativeDirFonts();1452876337;Assume that we can load fonts._<p>See <a href="https://java.net/jira/browse/MACOSX_PORT-355">MACOSX_PORT-355</a>_issue._@throws AssumptionViolatedException if the assumption fails;public static void canLoadNativeDirFonts() {_		try {_			GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames()__			Class<?> parserClass = ClassUtils.forName(_					"net.sf.jasperreports.engine.util.JRStyledTextParser", Assume.class.getClassLoader())__			Method method = parserClass.getMethod("getInstance")__			method.setAccessible(true)__			method.invoke(null)__		}_		catch (Throwable ex) {_			throw new AssumptionViolatedException("Requires GraphicsEnvironment that can load fonts", ex)__		}_	};assume,that,we,can,load,fonts,p,see,a,href,https,java,net,jira,browse,355,355,a,issue,throws,assumption,violated,exception,if,the,assumption,fails;public,static,void,can,load,native,dir,fonts,try,graphics,environment,get,local,graphics,environment,get,available,font,family,names,class,parser,class,class,utils,for,name,net,sf,jasperreports,engine,util,jrstyled,text,parser,assume,class,get,class,loader,method,method,parser,class,get,method,get,instance,method,set,accessible,true,method,invoke,null,catch,throwable,ex,throw,new,assumption,violated,exception,requires,graphics,environment,that,can,load,fonts,ex
Assume -> public static void group(TestGroup group);1357119417;Assume that a particular {@link TestGroup} has been specified._@param group the group that must be specified.;public static void group(TestGroup group) {_		if (!GROUPS.contains(group)) {_			throw new AssumptionViolatedException("Requires unspecified group " + group_					+ " from " + GROUPS)__		}_	};assume,that,a,particular,link,test,group,has,been,specified,param,group,the,group,that,must,be,specified;public,static,void,group,test,group,group,if,groups,contains,group,throw,new,assumption,violated,exception,requires,unspecified,group,group,from,groups
Assume -> public static void group(TestGroup group);1367940226;Assume that a particular {@link TestGroup} has been specified._@param group the group that must be specified.;public static void group(TestGroup group) {_		if (!GROUPS.contains(group)) {_			throw new AssumptionViolatedException("Requires unspecified group " + group_					+ " from " + GROUPS)__		}_	};assume,that,a,particular,link,test,group,has,been,specified,param,group,the,group,that,must,be,specified;public,static,void,group,test,group,group,if,groups,contains,group,throw,new,assumption,violated,exception,requires,unspecified,group,group,from,groups
Assume -> public static void group(TestGroup group);1399919273;Assume that a particular {@link TestGroup} has been specified._@param group the group that must be specified.;public static void group(TestGroup group) {_		if (!GROUPS.contains(group)) {_			throw new AssumptionViolatedException("Requires unspecified group " + group_					+ " from " + GROUPS)__		}_	};assume,that,a,particular,link,test,group,has,been,specified,param,group,the,group,that,must,be,specified;public,static,void,group,test,group,group,if,groups,contains,group,throw,new,assumption,violated,exception,requires,unspecified,group,group,from,groups
Assume -> public static void group(TestGroup group);1418167792;Assume that a particular {@link TestGroup} has been specified._@param group the group that must be specified.;public static void group(TestGroup group) {_		if (!GROUPS.contains(group)) {_			throw new AssumptionViolatedException("Requires unspecified group " + group_					+ " from " + GROUPS)__		}_	};assume,that,a,particular,link,test,group,has,been,specified,param,group,the,group,that,must,be,specified;public,static,void,group,test,group,group,if,groups,contains,group,throw,new,assumption,violated,exception,requires,unspecified,group,group,from,groups
Assume -> public static void group(TestGroup group);1438019281;Assume that a particular {@link TestGroup} has been specified._@param group the group that must be specified_@throws AssumptionViolatedException if the assumption fails;public static void group(TestGroup group) {_		if (!GROUPS.contains(group)) {_			throw new AssumptionViolatedException("Requires unspecified group " + group_					+ " from " + GROUPS)__		}_	};assume,that,a,particular,link,test,group,has,been,specified,param,group,the,group,that,must,be,specified,throws,assumption,violated,exception,if,the,assumption,fails;public,static,void,group,test,group,group,if,groups,contains,group,throw,new,assumption,violated,exception,requires,unspecified,group,group,from,groups
Assume -> public static void group(TestGroup group);1452876337;Assume that a particular {@link TestGroup} has been specified._@param group the group that must be specified_@throws AssumptionViolatedException if the assumption fails;public static void group(TestGroup group) {_		if (!GROUPS.contains(group)) {_			throw new AssumptionViolatedException("Requires unspecified group " + group + " from " + GROUPS)__		}_	};assume,that,a,particular,link,test,group,has,been,specified,param,group,the,group,that,must,be,specified,throws,assumption,violated,exception,if,the,assumption,fails;public,static,void,group,test,group,group,if,groups,contains,group,throw,new,assumption,violated,exception,requires,unspecified,group,group,from,groups
Assume -> public static void group(TestGroup group);1467752775;Assume that a particular {@link TestGroup} has been specified._@param group the group that must be specified_@throws AssumptionViolatedException if the assumption fails;public static void group(TestGroup group) {_		if (!GROUPS.contains(group)) {_			throw new AssumptionViolatedException("Requires unspecified group " + group + " from " + GROUPS)__		}_	};assume,that,a,particular,link,test,group,has,been,specified,param,group,the,group,that,must,be,specified,throws,assumption,violated,exception,if,the,assumption,fails;public,static,void,group,test,group,group,if,groups,contains,group,throw,new,assumption,violated,exception,requires,unspecified,group,group,from,groups
Assume -> public static void group(TestGroup group);1484801882;Assume that a particular {@link TestGroup} has been specified._@param group the group that must be specified_@throws AssumptionViolatedException if the assumption fails;public static void group(TestGroup group) {_		Set<TestGroup> testGroups = loadTestGroups()__		if (!testGroups.contains(group)) {_			throw new AssumptionViolatedException("Requires unspecified group " + group + " from " + testGroups)__		}_	};assume,that,a,particular,link,test,group,has,been,specified,param,group,the,group,that,must,be,specified,throws,assumption,violated,exception,if,the,assumption,fails;public,static,void,group,test,group,group,set,test,group,test,groups,load,test,groups,if,test,groups,contains,group,throw,new,assumption,violated,exception,requires,unspecified,group,group,from,test,groups
Assume -> public static void notLogging(Log log);1357119417;Assume that the specified log is not set to Trace or Debug._@param log the log to test;public static void notLogging(Log log) {_		assumeFalse(log.isTraceEnabled())__		assumeFalse(log.isDebugEnabled())__	};assume,that,the,specified,log,is,not,set,to,trace,or,debug,param,log,the,log,to,test;public,static,void,not,logging,log,log,assume,false,log,is,trace,enabled,assume,false,log,is,debug,enabled
Assume -> public static void notLogging(Log log);1367940226;Assume that the specified log is not set to Trace or Debug._@param log the log to test;public static void notLogging(Log log) {_		assumeFalse(log.isTraceEnabled())__		assumeFalse(log.isDebugEnabled())__	};assume,that,the,specified,log,is,not,set,to,trace,or,debug,param,log,the,log,to,test;public,static,void,not,logging,log,log,assume,false,log,is,trace,enabled,assume,false,log,is,debug,enabled
Assume -> public static void notLogging(Log log);1399919273;Assume that the specified log is not set to Trace or Debug._@param log the log to test;public static void notLogging(Log log) {_		assumeFalse(log.isTraceEnabled())__		assumeFalse(log.isDebugEnabled())__	};assume,that,the,specified,log,is,not,set,to,trace,or,debug,param,log,the,log,to,test;public,static,void,not,logging,log,log,assume,false,log,is,trace,enabled,assume,false,log,is,debug,enabled
Assume -> public static void notLogging(Log log);1418167792;Assume that the specified log is not set to Trace or Debug._@param log the log to test;public static void notLogging(Log log) {_		assumeFalse(log.isTraceEnabled())__		assumeFalse(log.isDebugEnabled())__	};assume,that,the,specified,log,is,not,set,to,trace,or,debug,param,log,the,log,to,test;public,static,void,not,logging,log,log,assume,false,log,is,trace,enabled,assume,false,log,is,debug,enabled
Assume -> public static void notLogging(Log log);1438019281;Assume that the specified log is not set to Trace or Debug._@param log the log to test_@throws AssumptionViolatedException if the assumption fails;public static void notLogging(Log log) {_		assumeFalse(log.isTraceEnabled())__		assumeFalse(log.isDebugEnabled())__	};assume,that,the,specified,log,is,not,set,to,trace,or,debug,param,log,the,log,to,test,throws,assumption,violated,exception,if,the,assumption,fails;public,static,void,not,logging,log,log,assume,false,log,is,trace,enabled,assume,false,log,is,debug,enabled
Assume -> public static void notLogging(Log log);1452876337;Assume that the specified log is not set to Trace or Debug._@param log the log to test_@throws AssumptionViolatedException if the assumption fails;public static void notLogging(Log log) {_		assumeFalse(log.isTraceEnabled())__		assumeFalse(log.isDebugEnabled())__	};assume,that,the,specified,log,is,not,set,to,trace,or,debug,param,log,the,log,to,test,throws,assumption,violated,exception,if,the,assumption,fails;public,static,void,not,logging,log,log,assume,false,log,is,trace,enabled,assume,false,log,is,debug,enabled
Assume -> public static void notLogging(Log log);1467752775;Assume that the specified log is not set to Trace or Debug._@param log the log to test_@throws AssumptionViolatedException if the assumption fails;public static void notLogging(Log log) {_		assumeFalse(log.isTraceEnabled())__		assumeFalse(log.isDebugEnabled())__	};assume,that,the,specified,log,is,not,set,to,trace,or,debug,param,log,the,log,to,test,throws,assumption,violated,exception,if,the,assumption,fails;public,static,void,not,logging,log,log,assume,false,log,is,trace,enabled,assume,false,log,is,debug,enabled
Assume -> public static void notLogging(Log log);1484801882;Assume that the specified log is not set to Trace or Debug._@param log the log to test_@throws AssumptionViolatedException if the assumption fails;public static void notLogging(Log log) {_		assumeFalse(log.isTraceEnabled())__		assumeFalse(log.isDebugEnabled())__	};assume,that,the,specified,log,is,not,set,to,trace,or,debug,param,log,the,log,to,test,throws,assumption,violated,exception,if,the,assumption,fails;public,static,void,not,logging,log,log,assume,false,log,is,trace,enabled,assume,false,log,is,debug,enabled
