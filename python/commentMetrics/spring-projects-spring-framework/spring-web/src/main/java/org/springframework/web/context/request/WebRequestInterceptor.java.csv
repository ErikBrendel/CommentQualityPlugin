# id;timestamp;commentText;codeText;commentWords;codeWords
WebRequestInterceptor -> void preHandle(WebRequest request) throws Exception_;1328020251;Intercept the execution of a request handler <i>before</i> its invocation._<p>Allows for preparing context resources (such as a Hibernate Session)_and expose them as request attributes or as thread-local objects._@param request the current web request_@throws Exception in case of errors;void preHandle(WebRequest request) throws Exception_;intercept,the,execution,of,a,request,handler,i,before,i,its,invocation,p,allows,for,preparing,context,resources,such,as,a,hibernate,session,and,expose,them,as,request,attributes,or,as,thread,local,objects,param,request,the,current,web,request,throws,exception,in,case,of,errors;void,pre,handle,web,request,request,throws,exception
WebRequestInterceptor -> void preHandle(WebRequest request) throws Exception_;1344035753;Intercept the execution of a request handler <i>before</i> its invocation._<p>Allows for preparing context resources (such as a Hibernate Session)_and expose them as request attributes or as thread-local objects._@param request the current web request_@throws Exception in case of errors;void preHandle(WebRequest request) throws Exception_;intercept,the,execution,of,a,request,handler,i,before,i,its,invocation,p,allows,for,preparing,context,resources,such,as,a,hibernate,session,and,expose,them,as,request,attributes,or,as,thread,local,objects,param,request,the,current,web,request,throws,exception,in,case,of,errors;void,pre,handle,web,request,request,throws,exception
WebRequestInterceptor -> void preHandle(WebRequest request) throws Exception_;1356735495;Intercept the execution of a request handler <i>before</i> its invocation._<p>Allows for preparing context resources (such as a Hibernate Session)_and expose them as request attributes or as thread-local objects._@param request the current web request_@throws Exception in case of errors;void preHandle(WebRequest request) throws Exception_;intercept,the,execution,of,a,request,handler,i,before,i,its,invocation,p,allows,for,preparing,context,resources,such,as,a,hibernate,session,and,expose,them,as,request,attributes,or,as,thread,local,objects,param,request,the,current,web,request,throws,exception,in,case,of,errors;void,pre,handle,web,request,request,throws,exception
WebRequestInterceptor -> void preHandle(WebRequest request) throws Exception_;1467668027;Intercept the execution of a request handler <i>before</i> its invocation._<p>Allows for preparing context resources (such as a Hibernate Session)_and expose them as request attributes or as thread-local objects._@param request the current web request_@throws Exception in case of errors;void preHandle(WebRequest request) throws Exception_;intercept,the,execution,of,a,request,handler,i,before,i,its,invocation,p,allows,for,preparing,context,resources,such,as,a,hibernate,session,and,expose,them,as,request,attributes,or,as,thread,local,objects,param,request,the,current,web,request,throws,exception,in,case,of,errors;void,pre,handle,web,request,request,throws,exception
WebRequestInterceptor -> void preHandle(WebRequest request) throws Exception_;1495868221;Intercept the execution of a request handler <i>before</i> its invocation._<p>Allows for preparing context resources (such as a Hibernate Session)_and expose them as request attributes or as thread-local objects._@param request the current web request_@throws Exception in case of errors;void preHandle(WebRequest request) throws Exception_;intercept,the,execution,of,a,request,handler,i,before,i,its,invocation,p,allows,for,preparing,context,resources,such,as,a,hibernate,session,and,expose,them,as,request,attributes,or,as,thread,local,objects,param,request,the,current,web,request,throws,exception,in,case,of,errors;void,pre,handle,web,request,request,throws,exception
WebRequestInterceptor -> void preHandle(WebRequest request) throws Exception_;1527090734;Intercept the execution of a request handler <i>before</i> its invocation._<p>Allows for preparing context resources (such as a Hibernate Session)_and expose them as request attributes or as thread-local objects._@param request the current web request_@throws Exception in case of errors;void preHandle(WebRequest request) throws Exception_;intercept,the,execution,of,a,request,handler,i,before,i,its,invocation,p,allows,for,preparing,context,resources,such,as,a,hibernate,session,and,expose,them,as,request,attributes,or,as,thread,local,objects,param,request,the,current,web,request,throws,exception,in,case,of,errors;void,pre,handle,web,request,request,throws,exception
WebRequestInterceptor -> void postHandle(WebRequest request, ModelMap model) throws Exception_;1328020251;Intercept the execution of a request handler <i>after</i> its successful_invocation, right before view rendering (if any)._<p>Allows for modifying context resources after successful handler_execution (for example, flushing a Hibernate Session)._@param request the current web request_@param model the map of model objects that will be exposed to the view_(may be <code>null</code>). Can be used to analyze the exposed model_and/or to add further model attributes, if desired._@throws Exception in case of errors;void postHandle(WebRequest request, ModelMap model) throws Exception_;intercept,the,execution,of,a,request,handler,i,after,i,its,successful,invocation,right,before,view,rendering,if,any,p,allows,for,modifying,context,resources,after,successful,handler,execution,for,example,flushing,a,hibernate,session,param,request,the,current,web,request,param,model,the,map,of,model,objects,that,will,be,exposed,to,the,view,may,be,code,null,code,can,be,used,to,analyze,the,exposed,model,and,or,to,add,further,model,attributes,if,desired,throws,exception,in,case,of,errors;void,post,handle,web,request,request,model,map,model,throws,exception
WebRequestInterceptor -> void postHandle(WebRequest request, ModelMap model) throws Exception_;1344035753;Intercept the execution of a request handler <i>after</i> its successful_invocation, right before view rendering (if any)._<p>Allows for modifying context resources after successful handler_execution (for example, flushing a Hibernate Session)._@param request the current web request_@param model the map of model objects that will be exposed to the view_(may be <code>null</code>). Can be used to analyze the exposed model_and/or to add further model attributes, if desired._@throws Exception in case of errors;void postHandle(WebRequest request, ModelMap model) throws Exception_;intercept,the,execution,of,a,request,handler,i,after,i,its,successful,invocation,right,before,view,rendering,if,any,p,allows,for,modifying,context,resources,after,successful,handler,execution,for,example,flushing,a,hibernate,session,param,request,the,current,web,request,param,model,the,map,of,model,objects,that,will,be,exposed,to,the,view,may,be,code,null,code,can,be,used,to,analyze,the,exposed,model,and,or,to,add,further,model,attributes,if,desired,throws,exception,in,case,of,errors;void,post,handle,web,request,request,model,map,model,throws,exception
WebRequestInterceptor -> void postHandle(WebRequest request, ModelMap model) throws Exception_;1356735495;Intercept the execution of a request handler <i>after</i> its successful_invocation, right before view rendering (if any)._<p>Allows for modifying context resources after successful handler_execution (for example, flushing a Hibernate Session)._@param request the current web request_@param model the map of model objects that will be exposed to the view_(may be {@code null}). Can be used to analyze the exposed model_and/or to add further model attributes, if desired._@throws Exception in case of errors;void postHandle(WebRequest request, ModelMap model) throws Exception_;intercept,the,execution,of,a,request,handler,i,after,i,its,successful,invocation,right,before,view,rendering,if,any,p,allows,for,modifying,context,resources,after,successful,handler,execution,for,example,flushing,a,hibernate,session,param,request,the,current,web,request,param,model,the,map,of,model,objects,that,will,be,exposed,to,the,view,may,be,code,null,can,be,used,to,analyze,the,exposed,model,and,or,to,add,further,model,attributes,if,desired,throws,exception,in,case,of,errors;void,post,handle,web,request,request,model,map,model,throws,exception
WebRequestInterceptor -> void postHandle(WebRequest request, ModelMap model) throws Exception_;1467668027;Intercept the execution of a request handler <i>after</i> its successful_invocation, right before view rendering (if any)._<p>Allows for modifying context resources after successful handler_execution (for example, flushing a Hibernate Session)._@param request the current web request_@param model the map of model objects that will be exposed to the view_(may be {@code null}). Can be used to analyze the exposed model_and/or to add further model attributes, if desired._@throws Exception in case of errors;void postHandle(WebRequest request, ModelMap model) throws Exception_;intercept,the,execution,of,a,request,handler,i,after,i,its,successful,invocation,right,before,view,rendering,if,any,p,allows,for,modifying,context,resources,after,successful,handler,execution,for,example,flushing,a,hibernate,session,param,request,the,current,web,request,param,model,the,map,of,model,objects,that,will,be,exposed,to,the,view,may,be,code,null,can,be,used,to,analyze,the,exposed,model,and,or,to,add,further,model,attributes,if,desired,throws,exception,in,case,of,errors;void,post,handle,web,request,request,model,map,model,throws,exception
WebRequestInterceptor -> void afterCompletion(WebRequest request, Exception ex) throws Exception_;1328020251;Callback after completion of request processing, that is, after rendering_the view. Will be called on any outcome of handler execution, thus allows_for proper resource cleanup._<p>Note: Will only be called if this interceptor's <code>preHandle</code>_method has successfully completed!_@param request the current web request_@param ex exception thrown on handler execution, if any_@throws Exception in case of errors;void afterCompletion(WebRequest request, Exception ex) throws Exception_;callback,after,completion,of,request,processing,that,is,after,rendering,the,view,will,be,called,on,any,outcome,of,handler,execution,thus,allows,for,proper,resource,cleanup,p,note,will,only,be,called,if,this,interceptor,s,code,pre,handle,code,method,has,successfully,completed,param,request,the,current,web,request,param,ex,exception,thrown,on,handler,execution,if,any,throws,exception,in,case,of,errors;void,after,completion,web,request,request,exception,ex,throws,exception
WebRequestInterceptor -> void afterCompletion(WebRequest request, Exception ex) throws Exception_;1344035753;Callback after completion of request processing, that is, after rendering_the view. Will be called on any outcome of handler execution, thus allows_for proper resource cleanup._<p>Note: Will only be called if this interceptor's <code>preHandle</code>_method has successfully completed!_@param request the current web request_@param ex exception thrown on handler execution, if any_@throws Exception in case of errors;void afterCompletion(WebRequest request, Exception ex) throws Exception_;callback,after,completion,of,request,processing,that,is,after,rendering,the,view,will,be,called,on,any,outcome,of,handler,execution,thus,allows,for,proper,resource,cleanup,p,note,will,only,be,called,if,this,interceptor,s,code,pre,handle,code,method,has,successfully,completed,param,request,the,current,web,request,param,ex,exception,thrown,on,handler,execution,if,any,throws,exception,in,case,of,errors;void,after,completion,web,request,request,exception,ex,throws,exception
WebRequestInterceptor -> void afterCompletion(WebRequest request, Exception ex) throws Exception_;1356735495;Callback after completion of request processing, that is, after rendering_the view. Will be called on any outcome of handler execution, thus allows_for proper resource cleanup._<p>Note: Will only be called if this interceptor's {@code preHandle}_method has successfully completed!_@param request the current web request_@param ex exception thrown on handler execution, if any_@throws Exception in case of errors;void afterCompletion(WebRequest request, Exception ex) throws Exception_;callback,after,completion,of,request,processing,that,is,after,rendering,the,view,will,be,called,on,any,outcome,of,handler,execution,thus,allows,for,proper,resource,cleanup,p,note,will,only,be,called,if,this,interceptor,s,code,pre,handle,method,has,successfully,completed,param,request,the,current,web,request,param,ex,exception,thrown,on,handler,execution,if,any,throws,exception,in,case,of,errors;void,after,completion,web,request,request,exception,ex,throws,exception
WebRequestInterceptor -> void afterCompletion(WebRequest request, Exception ex) throws Exception_;1467668027;Callback after completion of request processing, that is, after rendering_the view. Will be called on any outcome of handler execution, thus allows_for proper resource cleanup._<p>Note: Will only be called if this interceptor's {@code preHandle}_method has successfully completed!_@param request the current web request_@param ex exception thrown on handler execution, if any_@throws Exception in case of errors;void afterCompletion(WebRequest request, Exception ex) throws Exception_;callback,after,completion,of,request,processing,that,is,after,rendering,the,view,will,be,called,on,any,outcome,of,handler,execution,thus,allows,for,proper,resource,cleanup,p,note,will,only,be,called,if,this,interceptor,s,code,pre,handle,method,has,successfully,completed,param,request,the,current,web,request,param,ex,exception,thrown,on,handler,execution,if,any,throws,exception,in,case,of,errors;void,after,completion,web,request,request,exception,ex,throws,exception
WebRequestInterceptor -> void postHandle(WebRequest request, @Nullable ModelMap model) throws Exception_;1495868221;Intercept the execution of a request handler <i>after</i> its successful_invocation, right before view rendering (if any)._<p>Allows for modifying context resources after successful handler_execution (for example, flushing a Hibernate Session)._@param request the current web request_@param model the map of model objects that will be exposed to the view_(may be {@code null}). Can be used to analyze the exposed model_and/or to add further model attributes, if desired._@throws Exception in case of errors;void postHandle(WebRequest request, @Nullable ModelMap model) throws Exception_;intercept,the,execution,of,a,request,handler,i,after,i,its,successful,invocation,right,before,view,rendering,if,any,p,allows,for,modifying,context,resources,after,successful,handler,execution,for,example,flushing,a,hibernate,session,param,request,the,current,web,request,param,model,the,map,of,model,objects,that,will,be,exposed,to,the,view,may,be,code,null,can,be,used,to,analyze,the,exposed,model,and,or,to,add,further,model,attributes,if,desired,throws,exception,in,case,of,errors;void,post,handle,web,request,request,nullable,model,map,model,throws,exception
WebRequestInterceptor -> void postHandle(WebRequest request, @Nullable ModelMap model) throws Exception_;1527090734;Intercept the execution of a request handler <i>after</i> its successful_invocation, right before view rendering (if any)._<p>Allows for modifying context resources after successful handler_execution (for example, flushing a Hibernate Session)._@param request the current web request_@param model the map of model objects that will be exposed to the view_(may be {@code null}). Can be used to analyze the exposed model_and/or to add further model attributes, if desired._@throws Exception in case of errors;void postHandle(WebRequest request, @Nullable ModelMap model) throws Exception_;intercept,the,execution,of,a,request,handler,i,after,i,its,successful,invocation,right,before,view,rendering,if,any,p,allows,for,modifying,context,resources,after,successful,handler,execution,for,example,flushing,a,hibernate,session,param,request,the,current,web,request,param,model,the,map,of,model,objects,that,will,be,exposed,to,the,view,may,be,code,null,can,be,used,to,analyze,the,exposed,model,and,or,to,add,further,model,attributes,if,desired,throws,exception,in,case,of,errors;void,post,handle,web,request,request,nullable,model,map,model,throws,exception
WebRequestInterceptor -> void afterCompletion(WebRequest request, @Nullable Exception ex) throws Exception_;1495868221;Callback after completion of request processing, that is, after rendering_the view. Will be called on any outcome of handler execution, thus allows_for proper resource cleanup._<p>Note: Will only be called if this interceptor's {@code preHandle}_method has successfully completed!_@param request the current web request_@param ex exception thrown on handler execution, if any_@throws Exception in case of errors;void afterCompletion(WebRequest request, @Nullable Exception ex) throws Exception_;callback,after,completion,of,request,processing,that,is,after,rendering,the,view,will,be,called,on,any,outcome,of,handler,execution,thus,allows,for,proper,resource,cleanup,p,note,will,only,be,called,if,this,interceptor,s,code,pre,handle,method,has,successfully,completed,param,request,the,current,web,request,param,ex,exception,thrown,on,handler,execution,if,any,throws,exception,in,case,of,errors;void,after,completion,web,request,request,nullable,exception,ex,throws,exception
WebRequestInterceptor -> void afterCompletion(WebRequest request, @Nullable Exception ex) throws Exception_;1527090734;Callback after completion of request processing, that is, after rendering_the view. Will be called on any outcome of handler execution, thus allows_for proper resource cleanup._<p>Note: Will only be called if this interceptor's {@code preHandle}_method has successfully completed!_@param request the current web request_@param ex exception thrown on handler execution, if any_@throws Exception in case of errors;void afterCompletion(WebRequest request, @Nullable Exception ex) throws Exception_;callback,after,completion,of,request,processing,that,is,after,rendering,the,view,will,be,called,on,any,outcome,of,handler,execution,thus,allows,for,proper,resource,cleanup,p,note,will,only,be,called,if,this,interceptor,s,code,pre,handle,method,has,successfully,completed,param,request,the,current,web,request,param,ex,exception,thrown,on,handler,execution,if,any,throws,exception,in,case,of,errors;void,after,completion,web,request,request,nullable,exception,ex,throws,exception
