# id;timestamp;commentText;codeText;commentWords;codeWords
GsonHttpMessageConverter -> public void setGson(Gson gson);1400811712;Set the {@code Gson} for this view._If not set, a default {@link Gson#Gson() Gson} is used._<p>Setting a custom-configured {@code Gson} is one way to take further_control of the JSON serialization process.;public void setGson(Gson gson) {_		Assert.notNull(gson, "Gson must not be null")__		this.gson = gson__	};set,the,code,gson,for,this,view,if,not,set,a,default,link,gson,gson,gson,is,used,p,setting,a,custom,configured,code,gson,is,one,way,to,take,further,control,of,the,json,serialization,process;public,void,set,gson,gson,gson,assert,not,null,gson,gson,must,not,be,null,this,gson,gson
GsonHttpMessageConverter -> public void setGson(Gson gson);1400811712;Set the {@code Gson} instance to use._If not set, a default {@link Gson#Gson() Gson} instance is used.__<p>Setting a custom-configured {@code Gson} is one way to take further_control of the JSON serialization process.;public void setGson(Gson gson) {_		Assert.notNull(gson, "'gson' is required")__		this.gson = gson__	};set,the,code,gson,instance,to,use,if,not,set,a,default,link,gson,gson,gson,instance,is,used,p,setting,a,custom,configured,code,gson,is,one,way,to,take,further,control,of,the,json,serialization,process;public,void,set,gson,gson,gson,assert,not,null,gson,gson,is,required,this,gson,gson
GsonHttpMessageConverter -> public void setGson(Gson gson);1401208191;Set the {@code Gson} instance to use._If not set, a default {@link Gson#Gson() Gson} instance is used._<p>Setting a custom-configured {@code Gson} is one way to take further_control of the JSON serialization process.;public void setGson(Gson gson) {_		Assert.notNull(gson, "'gson' is required")__		this.gson = gson__	};set,the,code,gson,instance,to,use,if,not,set,a,default,link,gson,gson,gson,instance,is,used,p,setting,a,custom,configured,code,gson,is,one,way,to,take,further,control,of,the,json,serialization,process;public,void,set,gson,gson,gson,assert,not,null,gson,gson,is,required,this,gson,gson
GsonHttpMessageConverter -> public void setGson(Gson gson);1407833553;Set the {@code Gson} instance to use._If not set, a default {@link Gson#Gson() Gson} instance is used._<p>Setting a custom-configured {@code Gson} is one way to take further_control of the JSON serialization process.;public void setGson(Gson gson) {_		Assert.notNull(gson, "'gson' is required")__		this.gson = gson__	};set,the,code,gson,instance,to,use,if,not,set,a,default,link,gson,gson,gson,instance,is,used,p,setting,a,custom,configured,code,gson,is,one,way,to,take,further,control,of,the,json,serialization,process;public,void,set,gson,gson,gson,assert,not,null,gson,gson,is,required,this,gson,gson
GsonHttpMessageConverter -> public void setGson(Gson gson);1409792592;Set the {@code Gson} instance to use._If not set, a default {@link Gson#Gson() Gson} instance is used._<p>Setting a custom-configured {@code Gson} is one way to take further_control of the JSON serialization process.;public void setGson(Gson gson) {_		Assert.notNull(gson, "'gson' is required")__		this.gson = gson__	};set,the,code,gson,instance,to,use,if,not,set,a,default,link,gson,gson,gson,instance,is,used,p,setting,a,custom,configured,code,gson,is,one,way,to,take,further,control,of,the,json,serialization,process;public,void,set,gson,gson,gson,assert,not,null,gson,gson,is,required,this,gson,gson
GsonHttpMessageConverter -> public void setGson(Gson gson);1434447007;Set the {@code Gson} instance to use._If not set, a default {@link Gson#Gson() Gson} instance is used._<p>Setting a custom-configured {@code Gson} is one way to take further_control of the JSON serialization process.;public void setGson(Gson gson) {_		Assert.notNull(gson, "'gson' is required")__		this.gson = gson__	};set,the,code,gson,instance,to,use,if,not,set,a,default,link,gson,gson,gson,instance,is,used,p,setting,a,custom,configured,code,gson,is,one,way,to,take,further,control,of,the,json,serialization,process;public,void,set,gson,gson,gson,assert,not,null,gson,gson,is,required,this,gson,gson
GsonHttpMessageConverter -> public void setGson(Gson gson);1434985545;Set the {@code Gson} instance to use._If not set, a default {@link Gson#Gson() Gson} instance is used._<p>Setting a custom-configured {@code Gson} is one way to take further_control of the JSON serialization process.;public void setGson(Gson gson) {_		Assert.notNull(gson, "'gson' is required")__		this.gson = gson__	};set,the,code,gson,instance,to,use,if,not,set,a,default,link,gson,gson,gson,instance,is,used,p,setting,a,custom,configured,code,gson,is,one,way,to,take,further,control,of,the,json,serialization,process;public,void,set,gson,gson,gson,assert,not,null,gson,gson,is,required,this,gson,gson
GsonHttpMessageConverter -> public void setGson(Gson gson);1435237353;Set the {@code Gson} instance to use._If not set, a default {@link Gson#Gson() Gson} instance is used._<p>Setting a custom-configured {@code Gson} is one way to take further_control of the JSON serialization process.;public void setGson(Gson gson) {_		Assert.notNull(gson, "'gson' is required")__		this.gson = gson__	};set,the,code,gson,instance,to,use,if,not,set,a,default,link,gson,gson,gson,instance,is,used,p,setting,a,custom,configured,code,gson,is,one,way,to,take,further,control,of,the,json,serialization,process;public,void,set,gson,gson,gson,assert,not,null,gson,gson,is,required,this,gson,gson
GsonHttpMessageConverter -> public void setGson(Gson gson);1446549639;Set the {@code Gson} instance to use._If not set, a default {@link Gson#Gson() Gson} instance is used._<p>Setting a custom-configured {@code Gson} is one way to take further_control of the JSON serialization process.;public void setGson(Gson gson) {_		Assert.notNull(gson, "'gson' is required")__		this.gson = gson__	};set,the,code,gson,instance,to,use,if,not,set,a,default,link,gson,gson,gson,instance,is,used,p,setting,a,custom,configured,code,gson,is,one,way,to,take,further,control,of,the,json,serialization,process;public,void,set,gson,gson,gson,assert,not,null,gson,gson,is,required,this,gson,gson
GsonHttpMessageConverter -> public void setGson(Gson gson);1456785272;Set the {@code Gson} instance to use._If not set, a default {@link Gson#Gson() Gson} instance is used._<p>Setting a custom-configured {@code Gson} is one way to take further_control of the JSON serialization process.;public void setGson(Gson gson) {_		Assert.notNull(gson, "'gson' is required")__		this.gson = gson__	};set,the,code,gson,instance,to,use,if,not,set,a,default,link,gson,gson,gson,instance,is,used,p,setting,a,custom,configured,code,gson,is,one,way,to,take,further,control,of,the,json,serialization,process;public,void,set,gson,gson,gson,assert,not,null,gson,gson,is,required,this,gson,gson
GsonHttpMessageConverter -> public void setGson(Gson gson);1460566372;Set the {@code Gson} instance to use._If not set, a default {@link Gson#Gson() Gson} instance is used._<p>Setting a custom-configured {@code Gson} is one way to take further_control of the JSON serialization process.;public void setGson(Gson gson) {_		Assert.notNull(gson, "'gson' is required")__		this.gson = gson__	};set,the,code,gson,instance,to,use,if,not,set,a,default,link,gson,gson,gson,instance,is,used,p,setting,a,custom,configured,code,gson,is,one,way,to,take,further,control,of,the,json,serialization,process;public,void,set,gson,gson,gson,assert,not,null,gson,gson,is,required,this,gson,gson
GsonHttpMessageConverter -> public void setGson(Gson gson);1460567039;Set the {@code Gson} instance to use._If not set, a default {@link Gson#Gson() Gson} instance is used._<p>Setting a custom-configured {@code Gson} is one way to take further_control of the JSON serialization process.;public void setGson(Gson gson) {_		Assert.notNull(gson, "'gson' is required")__		this.gson = gson__	};set,the,code,gson,instance,to,use,if,not,set,a,default,link,gson,gson,gson,instance,is,used,p,setting,a,custom,configured,code,gson,is,one,way,to,take,further,control,of,the,json,serialization,process;public,void,set,gson,gson,gson,assert,not,null,gson,gson,is,required,this,gson,gson
GsonHttpMessageConverter -> public void setGson(Gson gson);1460644739;Set the {@code Gson} instance to use._If not set, a default {@link Gson#Gson() Gson} instance is used._<p>Setting a custom-configured {@code Gson} is one way to take further_control of the JSON serialization process.;public void setGson(Gson gson) {_		Assert.notNull(gson, "'gson' is required")__		this.gson = gson__	};set,the,code,gson,instance,to,use,if,not,set,a,default,link,gson,gson,gson,instance,is,used,p,setting,a,custom,configured,code,gson,is,one,way,to,take,further,control,of,the,json,serialization,process;public,void,set,gson,gson,gson,assert,not,null,gson,gson,is,required,this,gson,gson
GsonHttpMessageConverter -> public void setGson(Gson gson);1468964586;Set the {@code Gson} instance to use._If not set, a default {@link Gson#Gson() Gson} instance is used._<p>Setting a custom-configured {@code Gson} is one way to take further_control of the JSON serialization process.;public void setGson(Gson gson) {_		Assert.notNull(gson, "'gson' is required")__		this.gson = gson__	};set,the,code,gson,instance,to,use,if,not,set,a,default,link,gson,gson,gson,instance,is,used,p,setting,a,custom,configured,code,gson,is,one,way,to,take,further,control,of,the,json,serialization,process;public,void,set,gson,gson,gson,assert,not,null,gson,gson,is,required,this,gson,gson
GsonHttpMessageConverter -> public void setGson(Gson gson);1491831389;Set the {@code Gson} instance to use._If not set, a default {@link Gson#Gson() Gson} instance will be used._<p>Setting a custom-configured {@code Gson} is one way to take further_control of the JSON serialization process._@see #GsonHttpMessageConverter(Gson);public void setGson(Gson gson) {_		Assert.notNull(gson, "A Gson instance is required")__		this.gson = gson__	};set,the,code,gson,instance,to,use,if,not,set,a,default,link,gson,gson,gson,instance,will,be,used,p,setting,a,custom,configured,code,gson,is,one,way,to,take,further,control,of,the,json,serialization,process,see,gson,http,message,converter,gson;public,void,set,gson,gson,gson,assert,not,null,gson,a,gson,instance,is,required,this,gson,gson
GsonHttpMessageConverter -> public void setGson(Gson gson);1496242568;Set the {@code Gson} instance to use._If not set, a default {@link Gson#Gson() Gson} instance will be used._<p>Setting a custom-configured {@code Gson} is one way to take further_control of the JSON serialization process._@see #GsonHttpMessageConverter(Gson);public void setGson(Gson gson) {_		Assert.notNull(gson, "A Gson instance is required")__		this.gson = gson__	};set,the,code,gson,instance,to,use,if,not,set,a,default,link,gson,gson,gson,instance,will,be,used,p,setting,a,custom,configured,code,gson,is,one,way,to,take,further,control,of,the,json,serialization,process,see,gson,http,message,converter,gson;public,void,set,gson,gson,gson,assert,not,null,gson,a,gson,instance,is,required,this,gson,gson
GsonHttpMessageConverter -> public void setGson(Gson gson);1500495740;Set the {@code Gson} instance to use._If not set, a default {@link Gson#Gson() Gson} instance will be used._<p>Setting a custom-configured {@code Gson} is one way to take further_control of the JSON serialization process._@see #GsonHttpMessageConverter(Gson);public void setGson(Gson gson) {_		Assert.notNull(gson, "A Gson instance is required")__		this.gson = gson__	};set,the,code,gson,instance,to,use,if,not,set,a,default,link,gson,gson,gson,instance,will,be,used,p,setting,a,custom,configured,code,gson,is,one,way,to,take,further,control,of,the,json,serialization,process,see,gson,http,message,converter,gson;public,void,set,gson,gson,gson,assert,not,null,gson,a,gson,instance,is,required,this,gson,gson
GsonHttpMessageConverter -> public void setGson(Gson gson);1517867493;Set the {@code Gson} instance to use._If not set, a default {@link Gson#Gson() Gson} instance will be used._<p>Setting a custom-configured {@code Gson} is one way to take further_control of the JSON serialization process._@see #GsonHttpMessageConverter(Gson);public void setGson(Gson gson) {_		Assert.notNull(gson, "A Gson instance is required")__		this.gson = gson__	};set,the,code,gson,instance,to,use,if,not,set,a,default,link,gson,gson,gson,instance,will,be,used,p,setting,a,custom,configured,code,gson,is,one,way,to,take,further,control,of,the,json,serialization,process,see,gson,http,message,converter,gson;public,void,set,gson,gson,gson,assert,not,null,gson,a,gson,instance,is,required,this,gson,gson
GsonHttpMessageConverter -> public void setJsonPrefix(String jsonPrefix);1400811712;Specify a custom prefix to use for JSON output. Default is none.__@see #setPrefixJson;public void setJsonPrefix(String jsonPrefix) {_		this.jsonPrefix = jsonPrefix__	};specify,a,custom,prefix,to,use,for,json,output,default,is,none,see,set,prefix,json;public,void,set,json,prefix,string,json,prefix,this,json,prefix,json,prefix
GsonHttpMessageConverter -> public void setJsonPrefix(String jsonPrefix);1400811712;Specify a custom prefix to use for JSON output. Default is none.__@see #setPrefixJson;public void setJsonPrefix(String jsonPrefix) {_		this.jsonPrefix = jsonPrefix__	};specify,a,custom,prefix,to,use,for,json,output,default,is,none,see,set,prefix,json;public,void,set,json,prefix,string,json,prefix,this,json,prefix,json,prefix
GsonHttpMessageConverter -> public void setJsonPrefix(String jsonPrefix);1401208191;Specify a custom prefix to use for JSON output. Default is none._@see #setPrefixJson;public void setJsonPrefix(String jsonPrefix) {_		this.jsonPrefix = jsonPrefix__	};specify,a,custom,prefix,to,use,for,json,output,default,is,none,see,set,prefix,json;public,void,set,json,prefix,string,json,prefix,this,json,prefix,json,prefix
GsonHttpMessageConverter -> public void setJsonPrefix(String jsonPrefix);1407833553;Specify a custom prefix to use for JSON output. Default is none._@see #setPrefixJson;public void setJsonPrefix(String jsonPrefix) {_		this.jsonPrefix = jsonPrefix__	};specify,a,custom,prefix,to,use,for,json,output,default,is,none,see,set,prefix,json;public,void,set,json,prefix,string,json,prefix,this,json,prefix,json,prefix
GsonHttpMessageConverter -> public void setJsonPrefix(String jsonPrefix);1409792592;Specify a custom prefix to use for JSON output. Default is none._@see #setPrefixJson;public void setJsonPrefix(String jsonPrefix) {_		this.jsonPrefix = jsonPrefix__	};specify,a,custom,prefix,to,use,for,json,output,default,is,none,see,set,prefix,json;public,void,set,json,prefix,string,json,prefix,this,json,prefix,json,prefix
GsonHttpMessageConverter -> public void setJsonPrefix(String jsonPrefix);1434447007;Specify a custom prefix to use for JSON output. Default is none._@see #setPrefixJson;public void setJsonPrefix(String jsonPrefix) {_		this.jsonPrefix = jsonPrefix__	};specify,a,custom,prefix,to,use,for,json,output,default,is,none,see,set,prefix,json;public,void,set,json,prefix,string,json,prefix,this,json,prefix,json,prefix
GsonHttpMessageConverter -> public void setJsonPrefix(String jsonPrefix);1434985545;Specify a custom prefix to use for JSON output. Default is none._@see #setPrefixJson;public void setJsonPrefix(String jsonPrefix) {_		this.jsonPrefix = jsonPrefix__	};specify,a,custom,prefix,to,use,for,json,output,default,is,none,see,set,prefix,json;public,void,set,json,prefix,string,json,prefix,this,json,prefix,json,prefix
GsonHttpMessageConverter -> public void setJsonPrefix(String jsonPrefix);1435237353;Specify a custom prefix to use for JSON output. Default is none._@see #setPrefixJson;public void setJsonPrefix(String jsonPrefix) {_		this.jsonPrefix = jsonPrefix__	};specify,a,custom,prefix,to,use,for,json,output,default,is,none,see,set,prefix,json;public,void,set,json,prefix,string,json,prefix,this,json,prefix,json,prefix
GsonHttpMessageConverter -> public void setJsonPrefix(String jsonPrefix);1446549639;Specify a custom prefix to use for JSON output. Default is none._@see #setPrefixJson;public void setJsonPrefix(String jsonPrefix) {_		this.jsonPrefix = jsonPrefix__	};specify,a,custom,prefix,to,use,for,json,output,default,is,none,see,set,prefix,json;public,void,set,json,prefix,string,json,prefix,this,json,prefix,json,prefix
GsonHttpMessageConverter -> public void setJsonPrefix(String jsonPrefix);1456785272;Specify a custom prefix to use for JSON output. Default is none._@see #setPrefixJson;public void setJsonPrefix(String jsonPrefix) {_		this.jsonPrefix = jsonPrefix__	};specify,a,custom,prefix,to,use,for,json,output,default,is,none,see,set,prefix,json;public,void,set,json,prefix,string,json,prefix,this,json,prefix,json,prefix
GsonHttpMessageConverter -> public void setJsonPrefix(String jsonPrefix);1460566372;Specify a custom prefix to use for JSON output. Default is none._@see #setPrefixJson;public void setJsonPrefix(String jsonPrefix) {_		this.jsonPrefix = jsonPrefix__	};specify,a,custom,prefix,to,use,for,json,output,default,is,none,see,set,prefix,json;public,void,set,json,prefix,string,json,prefix,this,json,prefix,json,prefix
GsonHttpMessageConverter -> public void setJsonPrefix(String jsonPrefix);1460567039;Specify a custom prefix to use for JSON output. Default is none._@see #setPrefixJson;public void setJsonPrefix(String jsonPrefix) {_		this.jsonPrefix = jsonPrefix__	};specify,a,custom,prefix,to,use,for,json,output,default,is,none,see,set,prefix,json;public,void,set,json,prefix,string,json,prefix,this,json,prefix,json,prefix
GsonHttpMessageConverter -> public void setJsonPrefix(String jsonPrefix);1460644739;Specify a custom prefix to use for JSON output. Default is none._@see #setPrefixJson;public void setJsonPrefix(String jsonPrefix) {_		this.jsonPrefix = jsonPrefix__	};specify,a,custom,prefix,to,use,for,json,output,default,is,none,see,set,prefix,json;public,void,set,json,prefix,string,json,prefix,this,json,prefix,json,prefix
GsonHttpMessageConverter -> public void setJsonPrefix(String jsonPrefix);1468964586;Specify a custom prefix to use for JSON output. Default is none._@see #setPrefixJson;public void setJsonPrefix(String jsonPrefix) {_		this.jsonPrefix = jsonPrefix__	};specify,a,custom,prefix,to,use,for,json,output,default,is,none,see,set,prefix,json;public,void,set,json,prefix,string,json,prefix,this,json,prefix,json,prefix
GsonHttpMessageConverter -> public Gson getGson();1400811712;Return the underlying {@code GsonBuilder} for this converter.;public Gson getGson() {_		return this.gson__	};return,the,underlying,code,gson,builder,for,this,converter;public,gson,get,gson,return,this,gson
GsonHttpMessageConverter -> public Gson getGson();1400811712;Return the configured {@code Gson} instance for this converter.;public Gson getGson() {_		return this.gson__	};return,the,configured,code,gson,instance,for,this,converter;public,gson,get,gson,return,this,gson
GsonHttpMessageConverter -> public Gson getGson();1401208191;Return the configured {@code Gson} instance for this converter.;public Gson getGson() {_		return this.gson__	};return,the,configured,code,gson,instance,for,this,converter;public,gson,get,gson,return,this,gson
GsonHttpMessageConverter -> public Gson getGson();1407833553;Return the configured {@code Gson} instance for this converter.;public Gson getGson() {_		return this.gson__	};return,the,configured,code,gson,instance,for,this,converter;public,gson,get,gson,return,this,gson
GsonHttpMessageConverter -> public Gson getGson();1409792592;Return the configured {@code Gson} instance for this converter.;public Gson getGson() {_		return this.gson__	};return,the,configured,code,gson,instance,for,this,converter;public,gson,get,gson,return,this,gson
GsonHttpMessageConverter -> public Gson getGson();1434447007;Return the configured {@code Gson} instance for this converter.;public Gson getGson() {_		return this.gson__	};return,the,configured,code,gson,instance,for,this,converter;public,gson,get,gson,return,this,gson
GsonHttpMessageConverter -> public Gson getGson();1434985545;Return the configured {@code Gson} instance for this converter.;public Gson getGson() {_		return this.gson__	};return,the,configured,code,gson,instance,for,this,converter;public,gson,get,gson,return,this,gson
GsonHttpMessageConverter -> public Gson getGson();1435237353;Return the configured {@code Gson} instance for this converter.;public Gson getGson() {_		return this.gson__	};return,the,configured,code,gson,instance,for,this,converter;public,gson,get,gson,return,this,gson
GsonHttpMessageConverter -> public Gson getGson();1446549639;Return the configured {@code Gson} instance for this converter.;public Gson getGson() {_		return this.gson__	};return,the,configured,code,gson,instance,for,this,converter;public,gson,get,gson,return,this,gson
GsonHttpMessageConverter -> public Gson getGson();1456785272;Return the configured {@code Gson} instance for this converter.;public Gson getGson() {_		return this.gson__	};return,the,configured,code,gson,instance,for,this,converter;public,gson,get,gson,return,this,gson
GsonHttpMessageConverter -> public Gson getGson();1460566372;Return the configured {@code Gson} instance for this converter.;public Gson getGson() {_		return this.gson__	};return,the,configured,code,gson,instance,for,this,converter;public,gson,get,gson,return,this,gson
GsonHttpMessageConverter -> public Gson getGson();1460567039;Return the configured {@code Gson} instance for this converter.;public Gson getGson() {_		return this.gson__	};return,the,configured,code,gson,instance,for,this,converter;public,gson,get,gson,return,this,gson
GsonHttpMessageConverter -> public Gson getGson();1460644739;Return the configured {@code Gson} instance for this converter.;public Gson getGson() {_		return this.gson__	};return,the,configured,code,gson,instance,for,this,converter;public,gson,get,gson,return,this,gson
GsonHttpMessageConverter -> public Gson getGson();1468964586;Return the configured {@code Gson} instance for this converter.;public Gson getGson() {_		return this.gson__	};return,the,configured,code,gson,instance,for,this,converter;public,gson,get,gson,return,this,gson
GsonHttpMessageConverter -> public Gson getGson();1491831389;Return the configured {@code Gson} instance for this converter.;public Gson getGson() {_		return this.gson__	};return,the,configured,code,gson,instance,for,this,converter;public,gson,get,gson,return,this,gson
GsonHttpMessageConverter -> public Gson getGson();1496242568;Return the configured {@code Gson} instance for this converter.;public Gson getGson() {_		return this.gson__	};return,the,configured,code,gson,instance,for,this,converter;public,gson,get,gson,return,this,gson
GsonHttpMessageConverter -> public Gson getGson();1500495740;Return the configured {@code Gson} instance for this converter.;public Gson getGson() {_		return this.gson__	};return,the,configured,code,gson,instance,for,this,converter;public,gson,get,gson,return,this,gson
GsonHttpMessageConverter -> public Gson getGson();1517867493;Return the configured {@code Gson} instance for this converter.;public Gson getGson() {_		return this.gson__	};return,the,configured,code,gson,instance,for,this,converter;public,gson,get,gson,return,this,gson
GsonHttpMessageConverter -> public void setPrefixJson(boolean prefixJson);1400811712;Indicate whether the JSON output by this view should be prefixed with "{} &&"._Default is {@code false}.__<p>Prefixing the JSON string in this manner is used to help prevent JSON Hijacking._The prefix renders the string syntactically invalid as a script so that it cannot_be hijacked. This prefix does not affect the evaluation of JSON, but if JSON_validation is performed on the string, the prefix would need to be ignored.__@see #setJsonPrefix;public void setPrefixJson(boolean prefixJson) {_		this.jsonPrefix = (prefixJson ? "{} && " : null)__	};indicate,whether,the,json,output,by,this,view,should,be,prefixed,with,default,is,code,false,p,prefixing,the,json,string,in,this,manner,is,used,to,help,prevent,json,hijacking,the,prefix,renders,the,string,syntactically,invalid,as,a,script,so,that,it,cannot,be,hijacked,this,prefix,does,not,affect,the,evaluation,of,json,but,if,json,validation,is,performed,on,the,string,the,prefix,would,need,to,be,ignored,see,set,json,prefix;public,void,set,prefix,json,boolean,prefix,json,this,json,prefix,prefix,json,null
GsonHttpMessageConverter -> public void setPrefixJson(boolean prefixJson);1400811712;Indicate whether the JSON output by this view should be prefixed with "{} &&"._Default is {@code false}.__<p>Prefixing the JSON string in this manner is used to help prevent JSON_Hijacking. The prefix renders the string syntactically invalid as a script_so that it cannot be hijacked. This prefix does not affect the evaluation_of JSON, but if JSON validation is performed on the string, the prefix_would need to be ignored.__@see #setJsonPrefix;public void setPrefixJson(boolean prefixJson) {_		this.jsonPrefix = (prefixJson ? "{} && " : null)__	};indicate,whether,the,json,output,by,this,view,should,be,prefixed,with,default,is,code,false,p,prefixing,the,json,string,in,this,manner,is,used,to,help,prevent,json,hijacking,the,prefix,renders,the,string,syntactically,invalid,as,a,script,so,that,it,cannot,be,hijacked,this,prefix,does,not,affect,the,evaluation,of,json,but,if,json,validation,is,performed,on,the,string,the,prefix,would,need,to,be,ignored,see,set,json,prefix;public,void,set,prefix,json,boolean,prefix,json,this,json,prefix,prefix,json,null
GsonHttpMessageConverter -> public void setPrefixJson(boolean prefixJson);1401208191;Indicate whether the JSON output by this view should be prefixed with "{} &&"._Default is {@code false}._<p>Prefixing the JSON string in this manner is used to help prevent JSON_Hijacking. The prefix renders the string syntactically invalid as a script_so that it cannot be hijacked. This prefix does not affect the evaluation_of JSON, but if JSON validation is performed on the string, the prefix_would need to be ignored._@see #setJsonPrefix;public void setPrefixJson(boolean prefixJson) {_		this.jsonPrefix = (prefixJson ? "{} && " : null)__	};indicate,whether,the,json,output,by,this,view,should,be,prefixed,with,default,is,code,false,p,prefixing,the,json,string,in,this,manner,is,used,to,help,prevent,json,hijacking,the,prefix,renders,the,string,syntactically,invalid,as,a,script,so,that,it,cannot,be,hijacked,this,prefix,does,not,affect,the,evaluation,of,json,but,if,json,validation,is,performed,on,the,string,the,prefix,would,need,to,be,ignored,see,set,json,prefix;public,void,set,prefix,json,boolean,prefix,json,this,json,prefix,prefix,json,null
GsonHttpMessageConverter -> public void setPrefixJson(boolean prefixJson);1407833553;Indicate whether the JSON output by this view should be prefixed with "{} &&"._Default is {@code false}._<p>Prefixing the JSON string in this manner is used to help prevent JSON_Hijacking. The prefix renders the string syntactically invalid as a script_so that it cannot be hijacked. This prefix does not affect the evaluation_of JSON, but if JSON validation is performed on the string, the prefix_would need to be ignored._@see #setJsonPrefix;public void setPrefixJson(boolean prefixJson) {_		this.jsonPrefix = (prefixJson ? "{} && " : null)__	};indicate,whether,the,json,output,by,this,view,should,be,prefixed,with,default,is,code,false,p,prefixing,the,json,string,in,this,manner,is,used,to,help,prevent,json,hijacking,the,prefix,renders,the,string,syntactically,invalid,as,a,script,so,that,it,cannot,be,hijacked,this,prefix,does,not,affect,the,evaluation,of,json,but,if,json,validation,is,performed,on,the,string,the,prefix,would,need,to,be,ignored,see,set,json,prefix;public,void,set,prefix,json,boolean,prefix,json,this,json,prefix,prefix,json,null
GsonHttpMessageConverter -> public void setPrefixJson(boolean prefixJson);1409792592;Indicate whether the JSON output by this view should be prefixed with "{} &&"._Default is {@code false}._<p>Prefixing the JSON string in this manner is used to help prevent JSON_Hijacking. The prefix renders the string syntactically invalid as a script_so that it cannot be hijacked. This prefix does not affect the evaluation_of JSON, but if JSON validation is performed on the string, the prefix_would need to be ignored._@see #setJsonPrefix;public void setPrefixJson(boolean prefixJson) {_		this.jsonPrefix = (prefixJson ? "{} && " : null)__	};indicate,whether,the,json,output,by,this,view,should,be,prefixed,with,default,is,code,false,p,prefixing,the,json,string,in,this,manner,is,used,to,help,prevent,json,hijacking,the,prefix,renders,the,string,syntactically,invalid,as,a,script,so,that,it,cannot,be,hijacked,this,prefix,does,not,affect,the,evaluation,of,json,but,if,json,validation,is,performed,on,the,string,the,prefix,would,need,to,be,ignored,see,set,json,prefix;public,void,set,prefix,json,boolean,prefix,json,this,json,prefix,prefix,json,null
GsonHttpMessageConverter -> public void setPrefixJson(boolean prefixJson);1434447007;Indicate whether the JSON output by this view should be prefixed with ")]}', "._Default is {@code false}._<p>Prefixing the JSON string in this manner is used to help prevent JSON_Hijacking. The prefix renders the string syntactically invalid as a script_so that it cannot be hijacked._This prefix should be stripped before parsing the string as JSON._@see #setJsonPrefix;public void setPrefixJson(boolean prefixJson) {_		this.jsonPrefix = (prefixJson ? ")]}', " : null)__	};indicate,whether,the,json,output,by,this,view,should,be,prefixed,with,default,is,code,false,p,prefixing,the,json,string,in,this,manner,is,used,to,help,prevent,json,hijacking,the,prefix,renders,the,string,syntactically,invalid,as,a,script,so,that,it,cannot,be,hijacked,this,prefix,should,be,stripped,before,parsing,the,string,as,json,see,set,json,prefix;public,void,set,prefix,json,boolean,prefix,json,this,json,prefix,prefix,json,null
GsonHttpMessageConverter -> public void setPrefixJson(boolean prefixJson);1434985545;Indicate whether the JSON output by this view should be prefixed with ")]}', "._Default is {@code false}._<p>Prefixing the JSON string in this manner is used to help prevent JSON_Hijacking. The prefix renders the string syntactically invalid as a script_so that it cannot be hijacked._This prefix should be stripped before parsing the string as JSON._@see #setJsonPrefix;public void setPrefixJson(boolean prefixJson) {_		this.jsonPrefix = (prefixJson ? ")]}', " : null)__	};indicate,whether,the,json,output,by,this,view,should,be,prefixed,with,default,is,code,false,p,prefixing,the,json,string,in,this,manner,is,used,to,help,prevent,json,hijacking,the,prefix,renders,the,string,syntactically,invalid,as,a,script,so,that,it,cannot,be,hijacked,this,prefix,should,be,stripped,before,parsing,the,string,as,json,see,set,json,prefix;public,void,set,prefix,json,boolean,prefix,json,this,json,prefix,prefix,json,null
GsonHttpMessageConverter -> public void setPrefixJson(boolean prefixJson);1435237353;Indicate whether the JSON output by this view should be prefixed with ")]}', "._Default is {@code false}._<p>Prefixing the JSON string in this manner is used to help prevent JSON_Hijacking. The prefix renders the string syntactically invalid as a script_so that it cannot be hijacked._This prefix should be stripped before parsing the string as JSON._@see #setJsonPrefix;public void setPrefixJson(boolean prefixJson) {_		this.jsonPrefix = (prefixJson ? ")]}', " : null)__	};indicate,whether,the,json,output,by,this,view,should,be,prefixed,with,default,is,code,false,p,prefixing,the,json,string,in,this,manner,is,used,to,help,prevent,json,hijacking,the,prefix,renders,the,string,syntactically,invalid,as,a,script,so,that,it,cannot,be,hijacked,this,prefix,should,be,stripped,before,parsing,the,string,as,json,see,set,json,prefix;public,void,set,prefix,json,boolean,prefix,json,this,json,prefix,prefix,json,null
GsonHttpMessageConverter -> public void setPrefixJson(boolean prefixJson);1446549639;Indicate whether the JSON output by this view should be prefixed with ")]}', "._Default is {@code false}._<p>Prefixing the JSON string in this manner is used to help prevent JSON_Hijacking. The prefix renders the string syntactically invalid as a script_so that it cannot be hijacked._This prefix should be stripped before parsing the string as JSON._@see #setJsonPrefix;public void setPrefixJson(boolean prefixJson) {_		this.jsonPrefix = (prefixJson ? ")]}', " : null)__	};indicate,whether,the,json,output,by,this,view,should,be,prefixed,with,default,is,code,false,p,prefixing,the,json,string,in,this,manner,is,used,to,help,prevent,json,hijacking,the,prefix,renders,the,string,syntactically,invalid,as,a,script,so,that,it,cannot,be,hijacked,this,prefix,should,be,stripped,before,parsing,the,string,as,json,see,set,json,prefix;public,void,set,prefix,json,boolean,prefix,json,this,json,prefix,prefix,json,null
GsonHttpMessageConverter -> public void setPrefixJson(boolean prefixJson);1456785272;Indicate whether the JSON output by this view should be prefixed with ")]}', "._Default is {@code false}._<p>Prefixing the JSON string in this manner is used to help prevent JSON_Hijacking. The prefix renders the string syntactically invalid as a script_so that it cannot be hijacked._This prefix should be stripped before parsing the string as JSON._@see #setJsonPrefix;public void setPrefixJson(boolean prefixJson) {_		this.jsonPrefix = (prefixJson ? ")]}', " : null)__	};indicate,whether,the,json,output,by,this,view,should,be,prefixed,with,default,is,code,false,p,prefixing,the,json,string,in,this,manner,is,used,to,help,prevent,json,hijacking,the,prefix,renders,the,string,syntactically,invalid,as,a,script,so,that,it,cannot,be,hijacked,this,prefix,should,be,stripped,before,parsing,the,string,as,json,see,set,json,prefix;public,void,set,prefix,json,boolean,prefix,json,this,json,prefix,prefix,json,null
GsonHttpMessageConverter -> public void setPrefixJson(boolean prefixJson);1460566372;Indicate whether the JSON output by this view should be prefixed with ")]}', "._Default is {@code false}._<p>Prefixing the JSON string in this manner is used to help prevent JSON_Hijacking. The prefix renders the string syntactically invalid as a script_so that it cannot be hijacked._This prefix should be stripped before parsing the string as JSON._@see #setJsonPrefix;public void setPrefixJson(boolean prefixJson) {_		this.jsonPrefix = (prefixJson ? ")]}', " : null)__	};indicate,whether,the,json,output,by,this,view,should,be,prefixed,with,default,is,code,false,p,prefixing,the,json,string,in,this,manner,is,used,to,help,prevent,json,hijacking,the,prefix,renders,the,string,syntactically,invalid,as,a,script,so,that,it,cannot,be,hijacked,this,prefix,should,be,stripped,before,parsing,the,string,as,json,see,set,json,prefix;public,void,set,prefix,json,boolean,prefix,json,this,json,prefix,prefix,json,null
GsonHttpMessageConverter -> public void setPrefixJson(boolean prefixJson);1460567039;Indicate whether the JSON output by this view should be prefixed with ")]}', "._Default is {@code false}._<p>Prefixing the JSON string in this manner is used to help prevent JSON_Hijacking. The prefix renders the string syntactically invalid as a script_so that it cannot be hijacked._This prefix should be stripped before parsing the string as JSON._@see #setJsonPrefix;public void setPrefixJson(boolean prefixJson) {_		this.jsonPrefix = (prefixJson ? ")]}', " : null)__	};indicate,whether,the,json,output,by,this,view,should,be,prefixed,with,default,is,code,false,p,prefixing,the,json,string,in,this,manner,is,used,to,help,prevent,json,hijacking,the,prefix,renders,the,string,syntactically,invalid,as,a,script,so,that,it,cannot,be,hijacked,this,prefix,should,be,stripped,before,parsing,the,string,as,json,see,set,json,prefix;public,void,set,prefix,json,boolean,prefix,json,this,json,prefix,prefix,json,null
GsonHttpMessageConverter -> public void setPrefixJson(boolean prefixJson);1460644739;Indicate whether the JSON output by this view should be prefixed with ")]}', "._Default is {@code false}._<p>Prefixing the JSON string in this manner is used to help prevent JSON_Hijacking. The prefix renders the string syntactically invalid as a script_so that it cannot be hijacked._This prefix should be stripped before parsing the string as JSON._@see #setJsonPrefix;public void setPrefixJson(boolean prefixJson) {_		this.jsonPrefix = (prefixJson ? ")]}', " : null)__	};indicate,whether,the,json,output,by,this,view,should,be,prefixed,with,default,is,code,false,p,prefixing,the,json,string,in,this,manner,is,used,to,help,prevent,json,hijacking,the,prefix,renders,the,string,syntactically,invalid,as,a,script,so,that,it,cannot,be,hijacked,this,prefix,should,be,stripped,before,parsing,the,string,as,json,see,set,json,prefix;public,void,set,prefix,json,boolean,prefix,json,this,json,prefix,prefix,json,null
GsonHttpMessageConverter -> public void setPrefixJson(boolean prefixJson);1468964586;Indicate whether the JSON output by this view should be prefixed with ")]}', "._Default is {@code false}._<p>Prefixing the JSON string in this manner is used to help prevent JSON_Hijacking. The prefix renders the string syntactically invalid as a script_so that it cannot be hijacked._This prefix should be stripped before parsing the string as JSON._@see #setJsonPrefix;public void setPrefixJson(boolean prefixJson) {_		this.jsonPrefix = (prefixJson ? ")]}', " : null)__	};indicate,whether,the,json,output,by,this,view,should,be,prefixed,with,default,is,code,false,p,prefixing,the,json,string,in,this,manner,is,used,to,help,prevent,json,hijacking,the,prefix,renders,the,string,syntactically,invalid,as,a,script,so,that,it,cannot,be,hijacked,this,prefix,should,be,stripped,before,parsing,the,string,as,json,see,set,json,prefix;public,void,set,prefix,json,boolean,prefix,json,this,json,prefix,prefix,json,null
GsonHttpMessageConverter -> public GsonHttpMessageConverter();1400811712;Construct a new {@code GsonHttpMessageConverter}.;public GsonHttpMessageConverter() {_		super(new MediaType("application", "json", DEFAULT_CHARSET),_				new MediaType("application", "*+json", DEFAULT_CHARSET))__	};construct,a,new,code,gson,http,message,converter;public,gson,http,message,converter,super,new,media,type,application,json,new,media,type,application,json
GsonHttpMessageConverter -> public GsonHttpMessageConverter();1400811712;Construct a new {@code GsonHttpMessageConverter}.;public GsonHttpMessageConverter() {_		super(new MediaType("application", "json", DEFAULT_CHARSET),_				new MediaType("application", "*+json", DEFAULT_CHARSET))__	};construct,a,new,code,gson,http,message,converter;public,gson,http,message,converter,super,new,media,type,application,json,new,media,type,application,json
GsonHttpMessageConverter -> public GsonHttpMessageConverter();1401208191;Construct a new {@code GsonHttpMessageConverter}.;public GsonHttpMessageConverter() {_		super(new MediaType("application", "json", DEFAULT_CHARSET),_				new MediaType("application", "*+json", DEFAULT_CHARSET))__	};construct,a,new,code,gson,http,message,converter;public,gson,http,message,converter,super,new,media,type,application,json,new,media,type,application,json
GsonHttpMessageConverter -> public GsonHttpMessageConverter();1407833553;Construct a new {@code GsonHttpMessageConverter}.;public GsonHttpMessageConverter() {_		super(new MediaType("application", "json", DEFAULT_CHARSET),_				new MediaType("application", "*+json", DEFAULT_CHARSET))__	};construct,a,new,code,gson,http,message,converter;public,gson,http,message,converter,super,new,media,type,application,json,new,media,type,application,json
GsonHttpMessageConverter -> public GsonHttpMessageConverter();1409792592;Construct a new {@code GsonHttpMessageConverter}.;public GsonHttpMessageConverter() {_		super(new MediaType("application", "json", DEFAULT_CHARSET),_				new MediaType("application", "*+json", DEFAULT_CHARSET))__	};construct,a,new,code,gson,http,message,converter;public,gson,http,message,converter,super,new,media,type,application,json,new,media,type,application,json
GsonHttpMessageConverter -> public GsonHttpMessageConverter();1434447007;Construct a new {@code GsonHttpMessageConverter}.;public GsonHttpMessageConverter() {_		super(new MediaType("application", "json", DEFAULT_CHARSET),_				new MediaType("application", "*+json", DEFAULT_CHARSET))__	};construct,a,new,code,gson,http,message,converter;public,gson,http,message,converter,super,new,media,type,application,json,new,media,type,application,json
GsonHttpMessageConverter -> public GsonHttpMessageConverter();1434985545;Construct a new {@code GsonHttpMessageConverter}.;public GsonHttpMessageConverter() {_		super(new MediaType("application", "json", DEFAULT_CHARSET),_				new MediaType("application", "*+json", DEFAULT_CHARSET))__	};construct,a,new,code,gson,http,message,converter;public,gson,http,message,converter,super,new,media,type,application,json,new,media,type,application,json
GsonHttpMessageConverter -> public GsonHttpMessageConverter();1435237353;Construct a new {@code GsonHttpMessageConverter}.;public GsonHttpMessageConverter() {_		super(new MediaType("application", "json", DEFAULT_CHARSET),_				new MediaType("application", "*+json", DEFAULT_CHARSET))__	};construct,a,new,code,gson,http,message,converter;public,gson,http,message,converter,super,new,media,type,application,json,new,media,type,application,json
GsonHttpMessageConverter -> public GsonHttpMessageConverter();1446549639;Construct a new {@code GsonHttpMessageConverter}.;public GsonHttpMessageConverter() {_		super(MediaType.APPLICATION_JSON_UTF8, new MediaType("application", "*+json", DEFAULT_CHARSET))__	};construct,a,new,code,gson,http,message,converter;public,gson,http,message,converter,super,media,type,new,media,type,application,json
GsonHttpMessageConverter -> public GsonHttpMessageConverter();1456785272;Construct a new {@code GsonHttpMessageConverter}.;public GsonHttpMessageConverter() {_		super(MediaType.APPLICATION_JSON, new MediaType("application", "*+json"))__		this.setDefaultCharset(DEFAULT_CHARSET)__	};construct,a,new,code,gson,http,message,converter;public,gson,http,message,converter,super,media,type,new,media,type,application,json,this,set,default,charset
GsonHttpMessageConverter -> public GsonHttpMessageConverter();1460566372;Construct a new {@code GsonHttpMessageConverter}.;public GsonHttpMessageConverter() {_		super(MediaType.APPLICATION_JSON, new MediaType("application", "*+json"))__		this.setDefaultCharset(DEFAULT_CHARSET)__	};construct,a,new,code,gson,http,message,converter;public,gson,http,message,converter,super,media,type,new,media,type,application,json,this,set,default,charset
GsonHttpMessageConverter -> public GsonHttpMessageConverter();1460567039;Construct a new {@code GsonHttpMessageConverter}.;public GsonHttpMessageConverter() {_		super(MediaType.APPLICATION_JSON, new MediaType("application", "*+json"))__		this.setDefaultCharset(DEFAULT_CHARSET)__	};construct,a,new,code,gson,http,message,converter;public,gson,http,message,converter,super,media,type,new,media,type,application,json,this,set,default,charset
GsonHttpMessageConverter -> public GsonHttpMessageConverter();1460644739;Construct a new {@code GsonHttpMessageConverter}.;public GsonHttpMessageConverter() {_		super(MediaType.APPLICATION_JSON, new MediaType("application", "*+json"))__		this.setDefaultCharset(DEFAULT_CHARSET)__	};construct,a,new,code,gson,http,message,converter;public,gson,http,message,converter,super,media,type,new,media,type,application,json,this,set,default,charset
GsonHttpMessageConverter -> public GsonHttpMessageConverter();1468964586;Construct a new {@code GsonHttpMessageConverter}.;public GsonHttpMessageConverter() {_		super(MediaType.APPLICATION_JSON, new MediaType("application", "*+json"))__		this.setDefaultCharset(DEFAULT_CHARSET)__	};construct,a,new,code,gson,http,message,converter;public,gson,http,message,converter,super,media,type,new,media,type,application,json,this,set,default,charset
GsonHttpMessageConverter -> public GsonHttpMessageConverter();1491831389;Construct a new {@code GsonHttpMessageConverter} with default configuration.;public GsonHttpMessageConverter() {_		this(new Gson())__	};construct,a,new,code,gson,http,message,converter,with,default,configuration;public,gson,http,message,converter,this,new,gson
GsonHttpMessageConverter -> public GsonHttpMessageConverter();1496242568;Construct a new {@code GsonHttpMessageConverter} with default configuration.;public GsonHttpMessageConverter() {_		this(new Gson())__	};construct,a,new,code,gson,http,message,converter,with,default,configuration;public,gson,http,message,converter,this,new,gson
GsonHttpMessageConverter -> public GsonHttpMessageConverter();1500495740;Construct a new {@code GsonHttpMessageConverter} with default configuration.;public GsonHttpMessageConverter() {_		this.gson = new Gson()__	};construct,a,new,code,gson,http,message,converter,with,default,configuration;public,gson,http,message,converter,this,gson,new,gson
GsonHttpMessageConverter -> public GsonHttpMessageConverter();1517867493;Construct a new {@code GsonHttpMessageConverter} with default configuration.;public GsonHttpMessageConverter() {_		this.gson = new Gson()__	};construct,a,new,code,gson,http,message,converter,with,default,configuration;public,gson,http,message,converter,this,gson,new,gson
GsonHttpMessageConverter -> public GsonHttpMessageConverter(Gson gson);1491831389;Construct a new {@code GsonHttpMessageConverter} with the given delegate._@param gson the Gson instance to use_@since 5.0;public GsonHttpMessageConverter(Gson gson) {_		setGson(gson)__	};construct,a,new,code,gson,http,message,converter,with,the,given,delegate,param,gson,the,gson,instance,to,use,since,5,0;public,gson,http,message,converter,gson,gson,set,gson,gson
GsonHttpMessageConverter -> public GsonHttpMessageConverter(Gson gson);1496242568;Construct a new {@code GsonHttpMessageConverter} with the given delegate._@param gson the Gson instance to use_@since 5.0;public GsonHttpMessageConverter(Gson gson) {_		setGson(gson)__	};construct,a,new,code,gson,http,message,converter,with,the,given,delegate,param,gson,the,gson,instance,to,use,since,5,0;public,gson,http,message,converter,gson,gson,set,gson,gson
GsonHttpMessageConverter -> public GsonHttpMessageConverter(Gson gson);1500495740;Construct a new {@code GsonHttpMessageConverter} with the given delegate._@param gson the Gson instance to use_@since 5.0;public GsonHttpMessageConverter(Gson gson) {_		Assert.notNull(gson, "A Gson instance is required")__		this.gson = gson__	};construct,a,new,code,gson,http,message,converter,with,the,given,delegate,param,gson,the,gson,instance,to,use,since,5,0;public,gson,http,message,converter,gson,gson,assert,not,null,gson,a,gson,instance,is,required,this,gson,gson
GsonHttpMessageConverter -> public GsonHttpMessageConverter(Gson gson);1517867493;Construct a new {@code GsonHttpMessageConverter} with the given delegate._@param gson the Gson instance to use_@since 5.0;public GsonHttpMessageConverter(Gson gson) {_		Assert.notNull(gson, "A Gson instance is required")__		this.gson = gson__	};construct,a,new,code,gson,http,message,converter,with,the,given,delegate,param,gson,the,gson,instance,to,use,since,5,0;public,gson,http,message,converter,gson,gson,assert,not,null,gson,a,gson,instance,is,required,this,gson,gson
GsonHttpMessageConverter -> protected TypeToken<?> getTypeToken(Type type);1400811712;Return the Gson {@link TypeToken} for the specified type._<p>The default implementation returns {@code TypeToken.get(type)}, but this can be_overridden in subclasses to allow for custom generic collection handling._For instance:_<pre class="code">_protected TypeToken<?> getTypeToken(Type type) {_if (type instanceof Class && List.class.isAssignableFrom((Class<?>) type)) {_return new TypeToken<ArrayList<MyBean>>() {__} else {_return super.getTypeToken(type)____</pre>_@param type the type for which to return the TypeToken_@return the type token;protected TypeToken<?> getTypeToken(Type type) {_		return TypeToken.get(type)__	};return,the,gson,link,type,token,for,the,specified,type,p,the,default,implementation,returns,code,type,token,get,type,but,this,can,be,overridden,in,subclasses,to,allow,for,custom,generic,collection,handling,for,instance,pre,class,code,protected,type,token,get,type,token,type,type,if,type,instanceof,class,list,class,is,assignable,from,class,type,return,new,type,token,array,list,my,bean,else,return,super,get,type,token,type,pre,param,type,the,type,for,which,to,return,the,type,token,return,the,type,token;protected,type,token,get,type,token,type,type,return,type,token,get,type
GsonHttpMessageConverter -> protected TypeToken<?> getTypeToken(Type type);1400811712;Return the Gson {@link TypeToken} for the specified type.__<p>The default implementation returns {@code TypeToken.get(type)}, but_this can be overridden in subclasses to allow for custom generic_collection handling. For instance:_<pre class="code">_protected TypeToken<?> getTypeToken(Type type) {_if (type instanceof Class && List.class.isAssignableFrom((Class<?>) type)) {_return new TypeToken<ArrayList<MyBean>>() {__} else {_return super.getTypeToken(type)____</pre>_@param type the type for which to return the TypeToken_@return the type token;protected TypeToken<?> getTypeToken(Type type) {_		return TypeToken.get(type)__	};return,the,gson,link,type,token,for,the,specified,type,p,the,default,implementation,returns,code,type,token,get,type,but,this,can,be,overridden,in,subclasses,to,allow,for,custom,generic,collection,handling,for,instance,pre,class,code,protected,type,token,get,type,token,type,type,if,type,instanceof,class,list,class,is,assignable,from,class,type,return,new,type,token,array,list,my,bean,else,return,super,get,type,token,type,pre,param,type,the,type,for,which,to,return,the,type,token,return,the,type,token;protected,type,token,get,type,token,type,type,return,type,token,get,type
GsonHttpMessageConverter -> protected TypeToken<?> getTypeToken(Type type);1401208191;Return the Gson {@link TypeToken} for the specified type._<p>The default implementation returns {@code TypeToken.get(type)}, but_this can be overridden in subclasses to allow for custom generic_collection handling. For instance:_<pre class="code">_protected TypeToken<?> getTypeToken(Type type) {_if (type instanceof Class && List.class.isAssignableFrom((Class<?>) type)) {_return new TypeToken<ArrayList<MyBean>>() {}___else {_return super.getTypeToken(type)____</pre>_@param type the type for which to return the TypeToken_@return the type token;protected TypeToken<?> getTypeToken(Type type) {_		return TypeToken.get(type)__	};return,the,gson,link,type,token,for,the,specified,type,p,the,default,implementation,returns,code,type,token,get,type,but,this,can,be,overridden,in,subclasses,to,allow,for,custom,generic,collection,handling,for,instance,pre,class,code,protected,type,token,get,type,token,type,type,if,type,instanceof,class,list,class,is,assignable,from,class,type,return,new,type,token,array,list,my,bean,else,return,super,get,type,token,type,pre,param,type,the,type,for,which,to,return,the,type,token,return,the,type,token;protected,type,token,get,type,token,type,type,return,type,token,get,type
GsonHttpMessageConverter -> protected TypeToken<?> getTypeToken(Type type);1407833553;Return the Gson {@link TypeToken} for the specified type._<p>The default implementation returns {@code TypeToken.get(type)}, but_this can be overridden in subclasses to allow for custom generic_collection handling. For instance:_<pre class="code">_protected TypeToken<?> getTypeToken(Type type) {_if (type instanceof Class && List.class.isAssignableFrom((Class<?>) type)) {_return new TypeToken<ArrayList<MyBean>>() {}___else {_return super.getTypeToken(type)____</pre>_@param type the type for which to return the TypeToken_@return the type token;protected TypeToken<?> getTypeToken(Type type) {_		return TypeToken.get(type)__	};return,the,gson,link,type,token,for,the,specified,type,p,the,default,implementation,returns,code,type,token,get,type,but,this,can,be,overridden,in,subclasses,to,allow,for,custom,generic,collection,handling,for,instance,pre,class,code,protected,type,token,get,type,token,type,type,if,type,instanceof,class,list,class,is,assignable,from,class,type,return,new,type,token,array,list,my,bean,else,return,super,get,type,token,type,pre,param,type,the,type,for,which,to,return,the,type,token,return,the,type,token;protected,type,token,get,type,token,type,type,return,type,token,get,type
GsonHttpMessageConverter -> protected TypeToken<?> getTypeToken(Type type);1409792592;Return the Gson {@link TypeToken} for the specified type._<p>The default implementation returns {@code TypeToken.get(type)}, but_this can be overridden in subclasses to allow for custom generic_collection handling. For instance:_<pre class="code">_protected TypeToken<?> getTypeToken(Type type) {_if (type instanceof Class && List.class.isAssignableFrom((Class<?>) type)) {_return new TypeToken<ArrayList<MyBean>>() {}___else {_return super.getTypeToken(type)____</pre>_@param type the type for which to return the TypeToken_@return the type token;protected TypeToken<?> getTypeToken(Type type) {_		return TypeToken.get(type)__	};return,the,gson,link,type,token,for,the,specified,type,p,the,default,implementation,returns,code,type,token,get,type,but,this,can,be,overridden,in,subclasses,to,allow,for,custom,generic,collection,handling,for,instance,pre,class,code,protected,type,token,get,type,token,type,type,if,type,instanceof,class,list,class,is,assignable,from,class,type,return,new,type,token,array,list,my,bean,else,return,super,get,type,token,type,pre,param,type,the,type,for,which,to,return,the,type,token,return,the,type,token;protected,type,token,get,type,token,type,type,return,type,token,get,type
GsonHttpMessageConverter -> protected TypeToken<?> getTypeToken(Type type);1434447007;Return the Gson {@link TypeToken} for the specified type._<p>The default implementation returns {@code TypeToken.get(type)}, but_this can be overridden in subclasses to allow for custom generic_collection handling. For instance:_<pre class="code">_protected TypeToken<?> getTypeToken(Type type) {_if (type instanceof Class && List.class.isAssignableFrom((Class<?>) type)) {_return new TypeToken<ArrayList<MyBean>>() {}___else {_return super.getTypeToken(type)____</pre>_@param type the type for which to return the TypeToken_@return the type token;protected TypeToken<?> getTypeToken(Type type) {_		return TypeToken.get(type)__	};return,the,gson,link,type,token,for,the,specified,type,p,the,default,implementation,returns,code,type,token,get,type,but,this,can,be,overridden,in,subclasses,to,allow,for,custom,generic,collection,handling,for,instance,pre,class,code,protected,type,token,get,type,token,type,type,if,type,instanceof,class,list,class,is,assignable,from,class,type,return,new,type,token,array,list,my,bean,else,return,super,get,type,token,type,pre,param,type,the,type,for,which,to,return,the,type,token,return,the,type,token;protected,type,token,get,type,token,type,type,return,type,token,get,type
GsonHttpMessageConverter -> protected TypeToken<?> getTypeToken(Type type);1434985545;Return the Gson {@link TypeToken} for the specified type._<p>The default implementation returns {@code TypeToken.get(type)}, but_this can be overridden in subclasses to allow for custom generic_collection handling. For instance:_<pre class="code">_protected TypeToken<?> getTypeToken(Type type) {_if (type instanceof Class && List.class.isAssignableFrom((Class<?>) type)) {_return new TypeToken<ArrayList<MyBean>>() {}___else {_return super.getTypeToken(type)____</pre>_@param type the type for which to return the TypeToken_@return the type token;protected TypeToken<?> getTypeToken(Type type) {_		return TypeToken.get(type)__	};return,the,gson,link,type,token,for,the,specified,type,p,the,default,implementation,returns,code,type,token,get,type,but,this,can,be,overridden,in,subclasses,to,allow,for,custom,generic,collection,handling,for,instance,pre,class,code,protected,type,token,get,type,token,type,type,if,type,instanceof,class,list,class,is,assignable,from,class,type,return,new,type,token,array,list,my,bean,else,return,super,get,type,token,type,pre,param,type,the,type,for,which,to,return,the,type,token,return,the,type,token;protected,type,token,get,type,token,type,type,return,type,token,get,type
GsonHttpMessageConverter -> protected TypeToken<?> getTypeToken(Type type);1435237353;Return the Gson {@link TypeToken} for the specified type._<p>The default implementation returns {@code TypeToken.get(type)}, but_this can be overridden in subclasses to allow for custom generic_collection handling. For instance:_<pre class="code">_protected TypeToken<?> getTypeToken(Type type) {_if (type instanceof Class && List.class.isAssignableFrom((Class<?>) type)) {_return new TypeToken<ArrayList<MyBean>>() {}___else {_return super.getTypeToken(type)____</pre>_@param type the type for which to return the TypeToken_@return the type token;protected TypeToken<?> getTypeToken(Type type) {_		return TypeToken.get(type)__	};return,the,gson,link,type,token,for,the,specified,type,p,the,default,implementation,returns,code,type,token,get,type,but,this,can,be,overridden,in,subclasses,to,allow,for,custom,generic,collection,handling,for,instance,pre,class,code,protected,type,token,get,type,token,type,type,if,type,instanceof,class,list,class,is,assignable,from,class,type,return,new,type,token,array,list,my,bean,else,return,super,get,type,token,type,pre,param,type,the,type,for,which,to,return,the,type,token,return,the,type,token;protected,type,token,get,type,token,type,type,return,type,token,get,type
GsonHttpMessageConverter -> protected TypeToken<?> getTypeToken(Type type);1446549639;Return the Gson {@link TypeToken} for the specified type._<p>The default implementation returns {@code TypeToken.get(type)}, but_this can be overridden in subclasses to allow for custom generic_collection handling. For instance:_<pre class="code">_protected TypeToken<?> getTypeToken(Type type) {_if (type instanceof Class && List.class.isAssignableFrom((Class<?>) type)) {_return new TypeToken<ArrayList<MyBean>>() {}___else {_return super.getTypeToken(type)____</pre>_@param type the type for which to return the TypeToken_@return the type token;protected TypeToken<?> getTypeToken(Type type) {_		return TypeToken.get(type)__	};return,the,gson,link,type,token,for,the,specified,type,p,the,default,implementation,returns,code,type,token,get,type,but,this,can,be,overridden,in,subclasses,to,allow,for,custom,generic,collection,handling,for,instance,pre,class,code,protected,type,token,get,type,token,type,type,if,type,instanceof,class,list,class,is,assignable,from,class,type,return,new,type,token,array,list,my,bean,else,return,super,get,type,token,type,pre,param,type,the,type,for,which,to,return,the,type,token,return,the,type,token;protected,type,token,get,type,token,type,type,return,type,token,get,type
GsonHttpMessageConverter -> protected TypeToken<?> getTypeToken(Type type);1456785272;Return the Gson {@link TypeToken} for the specified type._<p>The default implementation returns {@code TypeToken.get(type)}, but_this can be overridden in subclasses to allow for custom generic_collection handling. For instance:_<pre class="code">_protected TypeToken<?> getTypeToken(Type type) {_if (type instanceof Class && List.class.isAssignableFrom((Class<?>) type)) {_return new TypeToken<ArrayList<MyBean>>() {}___else {_return super.getTypeToken(type)____</pre>_@param type the type for which to return the TypeToken_@return the type token;protected TypeToken<?> getTypeToken(Type type) {_		return TypeToken.get(type)__	};return,the,gson,link,type,token,for,the,specified,type,p,the,default,implementation,returns,code,type,token,get,type,but,this,can,be,overridden,in,subclasses,to,allow,for,custom,generic,collection,handling,for,instance,pre,class,code,protected,type,token,get,type,token,type,type,if,type,instanceof,class,list,class,is,assignable,from,class,type,return,new,type,token,array,list,my,bean,else,return,super,get,type,token,type,pre,param,type,the,type,for,which,to,return,the,type,token,return,the,type,token;protected,type,token,get,type,token,type,type,return,type,token,get,type
GsonHttpMessageConverter -> protected TypeToken<?> getTypeToken(Type type);1460566372;Return the Gson {@link TypeToken} for the specified type._<p>The default implementation returns {@code TypeToken.get(type)}, but_this can be overridden in subclasses to allow for custom generic_collection handling. For instance:_<pre class="code">_protected TypeToken<?> getTypeToken(Type type) {_if (type instanceof Class && List.class.isAssignableFrom((Class<?>) type)) {_return new TypeToken<ArrayList<MyBean>>() {}___else {_return super.getTypeToken(type)____</pre>_@param type the type for which to return the TypeToken_@return the type token;protected TypeToken<?> getTypeToken(Type type) {_		return TypeToken.get(type)__	};return,the,gson,link,type,token,for,the,specified,type,p,the,default,implementation,returns,code,type,token,get,type,but,this,can,be,overridden,in,subclasses,to,allow,for,custom,generic,collection,handling,for,instance,pre,class,code,protected,type,token,get,type,token,type,type,if,type,instanceof,class,list,class,is,assignable,from,class,type,return,new,type,token,array,list,my,bean,else,return,super,get,type,token,type,pre,param,type,the,type,for,which,to,return,the,type,token,return,the,type,token;protected,type,token,get,type,token,type,type,return,type,token,get,type
GsonHttpMessageConverter -> protected TypeToken<?> getTypeToken(Type type);1460567039;Return the Gson {@link TypeToken} for the specified type._<p>The default implementation returns {@code TypeToken.get(type)}, but_this can be overridden in subclasses to allow for custom generic_collection handling. For instance:_<pre class="code">_protected TypeToken<?> getTypeToken(Type type) {_if (type instanceof Class && List.class.isAssignableFrom((Class<?>) type)) {_return new TypeToken<ArrayList<MyBean>>() {}___else {_return super.getTypeToken(type)____</pre>_@param type the type for which to return the TypeToken_@return the type token;protected TypeToken<?> getTypeToken(Type type) {_		return TypeToken.get(type)__	};return,the,gson,link,type,token,for,the,specified,type,p,the,default,implementation,returns,code,type,token,get,type,but,this,can,be,overridden,in,subclasses,to,allow,for,custom,generic,collection,handling,for,instance,pre,class,code,protected,type,token,get,type,token,type,type,if,type,instanceof,class,list,class,is,assignable,from,class,type,return,new,type,token,array,list,my,bean,else,return,super,get,type,token,type,pre,param,type,the,type,for,which,to,return,the,type,token,return,the,type,token;protected,type,token,get,type,token,type,type,return,type,token,get,type
GsonHttpMessageConverter -> protected TypeToken<?> getTypeToken(Type type);1460644739;Return the Gson {@link TypeToken} for the specified type._<p>The default implementation returns {@code TypeToken.get(type)}, but_this can be overridden in subclasses to allow for custom generic_collection handling. For instance:_<pre class="code">_protected TypeToken<?> getTypeToken(Type type) {_if (type instanceof Class && List.class.isAssignableFrom((Class<?>) type)) {_return new TypeToken<ArrayList<MyBean>>() {}___else {_return super.getTypeToken(type)____</pre>_@param type the type for which to return the TypeToken_@return the type token;protected TypeToken<?> getTypeToken(Type type) {_		return TypeToken.get(type)__	};return,the,gson,link,type,token,for,the,specified,type,p,the,default,implementation,returns,code,type,token,get,type,but,this,can,be,overridden,in,subclasses,to,allow,for,custom,generic,collection,handling,for,instance,pre,class,code,protected,type,token,get,type,token,type,type,if,type,instanceof,class,list,class,is,assignable,from,class,type,return,new,type,token,array,list,my,bean,else,return,super,get,type,token,type,pre,param,type,the,type,for,which,to,return,the,type,token,return,the,type,token;protected,type,token,get,type,token,type,type,return,type,token,get,type
GsonHttpMessageConverter -> protected TypeToken<?> getTypeToken(Type type);1468964586;Return the Gson {@link TypeToken} for the specified type._<p>The default implementation returns {@code TypeToken.get(type)}, but_this can be overridden in subclasses to allow for custom generic_collection handling. For instance:_<pre class="code">_protected TypeToken<?> getTypeToken(Type type) {_if (type instanceof Class && List.class.isAssignableFrom((Class<?>) type)) {_return new TypeToken<ArrayList<MyBean>>() {}___else {_return super.getTypeToken(type)____</pre>_@param type the type for which to return the TypeToken_@return the type token;protected TypeToken<?> getTypeToken(Type type) {_		return TypeToken.get(type)__	};return,the,gson,link,type,token,for,the,specified,type,p,the,default,implementation,returns,code,type,token,get,type,but,this,can,be,overridden,in,subclasses,to,allow,for,custom,generic,collection,handling,for,instance,pre,class,code,protected,type,token,get,type,token,type,type,if,type,instanceof,class,list,class,is,assignable,from,class,type,return,new,type,token,array,list,my,bean,else,return,super,get,type,token,type,pre,param,type,the,type,for,which,to,return,the,type,token,return,the,type,token;protected,type,token,get,type,token,type,type,return,type,token,get,type
