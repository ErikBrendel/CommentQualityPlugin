commented;modifiers;parameterAmount;loc;comment;code
true;public;2;4;/**  * This implementation is empty.  */ ;/**  * This implementation is empty.  */ @Override public <T> void beforeConcurrentHandling(NativeWebRequest request, DeferredResult<T> deferredResult) throws Exception { }
true;public;2;3;/**  * This implementation is empty.  */ ;/**  * This implementation is empty.  */ @Override public <T> void preProcess(NativeWebRequest request, DeferredResult<T> deferredResult) throws Exception { }
true;public;3;4;/**  * This implementation is empty.  */ ;/**  * This implementation is empty.  */ @Override public <T> void postProcess(NativeWebRequest request, DeferredResult<T> deferredResult, Object concurrentResult) throws Exception { }
true;public;2;4;/**  * This implementation returns {@code true} by default allowing other interceptors  * to be given a chance to handle the timeout.  */ ;/**  * This implementation returns {@code true} by default allowing other interceptors  * to be given a chance to handle the timeout.  */ @Override public <T> boolean handleTimeout(NativeWebRequest request, DeferredResult<T> deferredResult) throws Exception {     return true. }
true;public;3;5;/**  * This implementation returns {@code true} by default allowing other interceptors  * to be given a chance to handle the error.  */ ;/**  * This implementation returns {@code true} by default allowing other interceptors  * to be given a chance to handle the error.  */ @Override public <T> boolean handleError(NativeWebRequest request, DeferredResult<T> deferredResult, Throwable t) throws Exception {     return true. }
true;public;2;3;/**  * This implementation is empty.  */ ;/**  * This implementation is empty.  */ @Override public <T> void afterCompletion(NativeWebRequest request, DeferredResult<T> deferredResult) throws Exception { }
