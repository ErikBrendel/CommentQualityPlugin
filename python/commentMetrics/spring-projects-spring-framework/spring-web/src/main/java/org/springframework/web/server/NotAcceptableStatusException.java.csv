# id;timestamp;commentText;codeText;commentWords;codeWords
NotAcceptableStatusException -> public NotAcceptableStatusException(List<MediaType> supportedMediaTypes);1468513835;Constructor for when requested Content-Type is not supported.;public NotAcceptableStatusException(List<MediaType> supportedMediaTypes) {_		super(HttpStatus.NOT_ACCEPTABLE, "Could not find acceptable representation", null)__		this.supportedMediaTypes = Collections.unmodifiableList(supportedMediaTypes)__	};constructor,for,when,requested,content,type,is,not,supported;public,not,acceptable,status,exception,list,media,type,supported,media,types,super,http,status,could,not,find,acceptable,representation,null,this,supported,media,types,collections,unmodifiable,list,supported,media,types
NotAcceptableStatusException -> public NotAcceptableStatusException(List<MediaType> supportedMediaTypes);1468532417;Constructor for when requested Content-Type is not supported.;public NotAcceptableStatusException(List<MediaType> supportedMediaTypes) {_		super(HttpStatus.NOT_ACCEPTABLE, "Could not find acceptable representation", null)__		this.supportedMediaTypes = Collections.unmodifiableList(supportedMediaTypes)__	};constructor,for,when,requested,content,type,is,not,supported;public,not,acceptable,status,exception,list,media,type,supported,media,types,super,http,status,could,not,find,acceptable,representation,null,this,supported,media,types,collections,unmodifiable,list,supported,media,types
NotAcceptableStatusException -> public NotAcceptableStatusException(List<MediaType> supportedMediaTypes);1472594294;Constructor for when requested Content-Type is not supported.;public NotAcceptableStatusException(List<MediaType> supportedMediaTypes) {_		super(HttpStatus.NOT_ACCEPTABLE, "Could not find acceptable representation", null)__		this.supportedMediaTypes = Collections.unmodifiableList(supportedMediaTypes)__	};constructor,for,when,requested,content,type,is,not,supported;public,not,acceptable,status,exception,list,media,type,supported,media,types,super,http,status,could,not,find,acceptable,representation,null,this,supported,media,types,collections,unmodifiable,list,supported,media,types
NotAcceptableStatusException -> public NotAcceptableStatusException(List<MediaType> supportedMediaTypes);1490642219;Constructor for when requested Content-Type is not supported.;public NotAcceptableStatusException(List<MediaType> supportedMediaTypes) {_		super(HttpStatus.NOT_ACCEPTABLE, "Could not find acceptable representation", null)__		this.supportedMediaTypes = Collections.unmodifiableList(supportedMediaTypes)__	};constructor,for,when,requested,content,type,is,not,supported;public,not,acceptable,status,exception,list,media,type,supported,media,types,super,http,status,could,not,find,acceptable,representation,null,this,supported,media,types,collections,unmodifiable,list,supported,media,types
NotAcceptableStatusException -> public List<MediaType> getSupportedMediaTypes();1468513835;Return the list of supported content types in cases when the Accept_header is parsed but not supported, or an empty list otherwise.;public List<MediaType> getSupportedMediaTypes() {_		return this.supportedMediaTypes__	};return,the,list,of,supported,content,types,in,cases,when,the,accept,header,is,parsed,but,not,supported,or,an,empty,list,otherwise;public,list,media,type,get,supported,media,types,return,this,supported,media,types
NotAcceptableStatusException -> public List<MediaType> getSupportedMediaTypes();1468532417;Return the list of supported content types in cases when the Accept_header is parsed but not supported, or an empty list otherwise.;public List<MediaType> getSupportedMediaTypes() {_		return this.supportedMediaTypes__	};return,the,list,of,supported,content,types,in,cases,when,the,accept,header,is,parsed,but,not,supported,or,an,empty,list,otherwise;public,list,media,type,get,supported,media,types,return,this,supported,media,types
NotAcceptableStatusException -> public List<MediaType> getSupportedMediaTypes();1472594294;Return the list of supported content types in cases when the Accept_header is parsed but not supported, or an empty list otherwise.;public List<MediaType> getSupportedMediaTypes() {_		return this.supportedMediaTypes__	};return,the,list,of,supported,content,types,in,cases,when,the,accept,header,is,parsed,but,not,supported,or,an,empty,list,otherwise;public,list,media,type,get,supported,media,types,return,this,supported,media,types
NotAcceptableStatusException -> public List<MediaType> getSupportedMediaTypes();1490642219;Return the list of supported content types in cases when the Accept_header is parsed but not supported, or an empty list otherwise.;public List<MediaType> getSupportedMediaTypes() {_		return this.supportedMediaTypes__	};return,the,list,of,supported,content,types,in,cases,when,the,accept,header,is,parsed,but,not,supported,or,an,empty,list,otherwise;public,list,media,type,get,supported,media,types,return,this,supported,media,types
NotAcceptableStatusException -> public NotAcceptableStatusException(String reason);1468513835;Constructor for when the requested Content-Type is invalid.;public NotAcceptableStatusException(String reason) {_		super(HttpStatus.NOT_ACCEPTABLE, reason)__		this.supportedMediaTypes = Collections.emptyList()__	};constructor,for,when,the,requested,content,type,is,invalid;public,not,acceptable,status,exception,string,reason,super,http,status,reason,this,supported,media,types,collections,empty,list
NotAcceptableStatusException -> public NotAcceptableStatusException(String reason);1468532417;Constructor for when the requested Content-Type is invalid.;public NotAcceptableStatusException(String reason) {_		super(HttpStatus.NOT_ACCEPTABLE, reason)__		this.supportedMediaTypes = Collections.emptyList()__	};constructor,for,when,the,requested,content,type,is,invalid;public,not,acceptable,status,exception,string,reason,super,http,status,reason,this,supported,media,types,collections,empty,list
NotAcceptableStatusException -> public NotAcceptableStatusException(String reason);1472594294;Constructor for when the requested Content-Type is invalid.;public NotAcceptableStatusException(String reason) {_		super(HttpStatus.NOT_ACCEPTABLE, reason)__		this.supportedMediaTypes = Collections.emptyList()__	};constructor,for,when,the,requested,content,type,is,invalid;public,not,acceptable,status,exception,string,reason,super,http,status,reason,this,supported,media,types,collections,empty,list
NotAcceptableStatusException -> public NotAcceptableStatusException(String reason);1490642219;Constructor for when the requested Content-Type is invalid.;public NotAcceptableStatusException(String reason) {_		super(HttpStatus.NOT_ACCEPTABLE, reason)__		this.supportedMediaTypes = Collections.emptyList()__	};constructor,for,when,the,requested,content,type,is,invalid;public,not,acceptable,status,exception,string,reason,super,http,status,reason,this,supported,media,types,collections,empty,list
