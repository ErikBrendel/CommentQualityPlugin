# id;timestamp;commentText;codeText;commentWords;codeWords
InterceptingAsyncClientHttpRequestFactory -> public InterceptingAsyncClientHttpRequestFactory(AsyncClientHttpRequestFactory delegate, 			@Nullable List<AsyncClientHttpRequestInterceptor> interceptors);1496837955;Create new instance of {@link InterceptingAsyncClientHttpRequestFactory}_with delegated request factory and list of interceptors._@param delegate the request factory to delegate to_@param interceptors the list of interceptors to use;public InterceptingAsyncClientHttpRequestFactory(AsyncClientHttpRequestFactory delegate,_			@Nullable List<AsyncClientHttpRequestInterceptor> interceptors) {__		this.delegate = delegate__		this.interceptors = (interceptors != null ? interceptors : Collections.emptyList())__	};create,new,instance,of,link,intercepting,async,client,http,request,factory,with,delegated,request,factory,and,list,of,interceptors,param,delegate,the,request,factory,to,delegate,to,param,interceptors,the,list,of,interceptors,to,use;public,intercepting,async,client,http,request,factory,async,client,http,request,factory,delegate,nullable,list,async,client,http,request,interceptor,interceptors,this,delegate,delegate,this,interceptors,interceptors,null,interceptors,collections,empty,list
InterceptingAsyncClientHttpRequestFactory -> public InterceptingAsyncClientHttpRequestFactory(AsyncClientHttpRequestFactory delegate, 			@Nullable List<AsyncClientHttpRequestInterceptor> interceptors);1530174524;Create new instance of {@link InterceptingAsyncClientHttpRequestFactory}_with delegated request factory and list of interceptors._@param delegate the request factory to delegate to_@param interceptors the list of interceptors to use;public InterceptingAsyncClientHttpRequestFactory(AsyncClientHttpRequestFactory delegate,_			@Nullable List<AsyncClientHttpRequestInterceptor> interceptors) {__		this.delegate = delegate__		this.interceptors = (interceptors != null ? interceptors : Collections.emptyList())__	};create,new,instance,of,link,intercepting,async,client,http,request,factory,with,delegated,request,factory,and,list,of,interceptors,param,delegate,the,request,factory,to,delegate,to,param,interceptors,the,list,of,interceptors,to,use;public,intercepting,async,client,http,request,factory,async,client,http,request,factory,delegate,nullable,list,async,client,http,request,interceptor,interceptors,this,delegate,delegate,this,interceptors,interceptors,null,interceptors,collections,empty,list
InterceptingAsyncClientHttpRequestFactory -> public InterceptingAsyncClientHttpRequestFactory(AsyncClientHttpRequestFactory delegate, 			List<AsyncClientHttpRequestInterceptor> interceptors);1465306936;Create new instance of {@link InterceptingAsyncClientHttpRequestFactory}_with delegated request factory and list of interceptors._@param delegate the request factory to delegate to_@param interceptors the list of interceptors to use;public InterceptingAsyncClientHttpRequestFactory(AsyncClientHttpRequestFactory delegate,_			List<AsyncClientHttpRequestInterceptor> interceptors) {__		this.delegate = delegate__		this.interceptors = (interceptors != null ? interceptors : Collections.<AsyncClientHttpRequestInterceptor>emptyList())__	};create,new,instance,of,link,intercepting,async,client,http,request,factory,with,delegated,request,factory,and,list,of,interceptors,param,delegate,the,request,factory,to,delegate,to,param,interceptors,the,list,of,interceptors,to,use;public,intercepting,async,client,http,request,factory,async,client,http,request,factory,delegate,list,async,client,http,request,interceptor,interceptors,this,delegate,delegate,this,interceptors,interceptors,null,interceptors,collections,async,client,http,request,interceptor,empty,list
InterceptingAsyncClientHttpRequestFactory -> public InterceptingAsyncClientHttpRequestFactory(AsyncClientHttpRequestFactory delegate, 			List<AsyncClientHttpRequestInterceptor> interceptors);1474905889;Create new instance of {@link InterceptingAsyncClientHttpRequestFactory}_with delegated request factory and list of interceptors._@param delegate the request factory to delegate to_@param interceptors the list of interceptors to use;public InterceptingAsyncClientHttpRequestFactory(AsyncClientHttpRequestFactory delegate,_			List<AsyncClientHttpRequestInterceptor> interceptors) {__		this.delegate = delegate__		this.interceptors = (interceptors != null ? interceptors : Collections.emptyList())__	};create,new,instance,of,link,intercepting,async,client,http,request,factory,with,delegated,request,factory,and,list,of,interceptors,param,delegate,the,request,factory,to,delegate,to,param,interceptors,the,list,of,interceptors,to,use;public,intercepting,async,client,http,request,factory,async,client,http,request,factory,delegate,list,async,client,http,request,interceptor,interceptors,this,delegate,delegate,this,interceptors,interceptors,null,interceptors,collections,empty,list
InterceptingAsyncClientHttpRequestFactory -> public InterceptingAsyncClientHttpRequestFactory(AsyncClientHttpRequestFactory delegate, 			List<AsyncClientHttpRequestInterceptor> interceptors);1490795646;Create new instance of {@link InterceptingAsyncClientHttpRequestFactory}_with delegated request factory and list of interceptors._@param delegate the request factory to delegate to_@param interceptors the list of interceptors to use;public InterceptingAsyncClientHttpRequestFactory(AsyncClientHttpRequestFactory delegate,_			List<AsyncClientHttpRequestInterceptor> interceptors) {__		this.delegate = delegate__		this.interceptors = (interceptors != null ? interceptors : Collections.emptyList())__	};create,new,instance,of,link,intercepting,async,client,http,request,factory,with,delegated,request,factory,and,list,of,interceptors,param,delegate,the,request,factory,to,delegate,to,param,interceptors,the,list,of,interceptors,to,use;public,intercepting,async,client,http,request,factory,async,client,http,request,factory,delegate,list,async,client,http,request,interceptor,interceptors,this,delegate,delegate,this,interceptors,interceptors,null,interceptors,collections,empty,list
