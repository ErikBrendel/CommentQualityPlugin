# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractListenerWriteFlushProcessor -> protected abstract boolean isWritePossible()_;1505458380;Whether writing is possible.;protected abstract boolean isWritePossible()_;whether,writing,is,possible;protected,abstract,boolean,is,write,possible
AbstractListenerWriteFlushProcessor -> protected abstract boolean isWritePossible()_;1511293325;Whether writing is possible.;protected abstract boolean isWritePossible()_;whether,writing,is,possible;protected,abstract,boolean,is,write,possible
AbstractListenerWriteFlushProcessor -> protected abstract boolean isWritePossible()_;1511318790;Whether writing is possible.;protected abstract boolean isWritePossible()_;whether,writing,is,possible;protected,abstract,boolean,is,write,possible
AbstractListenerWriteFlushProcessor -> protected abstract boolean isWritePossible()_;1511411136;Whether writing is possible.;protected abstract boolean isWritePossible()_;whether,writing,is,possible;protected,abstract,boolean,is,write,possible
AbstractListenerWriteFlushProcessor -> protected abstract boolean isWritePossible()_;1511450555;Whether writing/flushing is possible.;protected abstract boolean isWritePossible()_;whether,writing,flushing,is,possible;protected,abstract,boolean,is,write,possible
AbstractListenerWriteFlushProcessor -> protected abstract boolean isWritePossible()_;1511452503;Whether writing/flushing is possible.;protected abstract boolean isWritePossible()_;whether,writing,flushing,is,possible;protected,abstract,boolean,is,write,possible
AbstractListenerWriteFlushProcessor -> protected abstract boolean isWritePossible()_;1519859718;Whether writing/flushing is possible.;protected abstract boolean isWritePossible()_;whether,writing,flushing,is,possible;protected,abstract,boolean,is,write,possible
AbstractListenerWriteFlushProcessor -> protected abstract boolean isWritePossible()_;1523471247;Whether writing/flushing is possible.;protected abstract boolean isWritePossible()_;whether,writing,flushing,is,possible;protected,abstract,boolean,is,write,possible
AbstractListenerWriteFlushProcessor -> protected abstract boolean isWritePossible()_;1530174524;Whether writing/flushing is possible.;protected abstract boolean isWritePossible()_;whether,writing,flushing,is,possible;protected,abstract,boolean,is,write,possible
AbstractListenerWriteFlushProcessor -> protected abstract boolean isWritePossible()_;1530174524;Whether writing/flushing is possible.;protected abstract boolean isWritePossible()_;whether,writing,flushing,is,possible;protected,abstract,boolean,is,write,possible
AbstractListenerWriteFlushProcessor -> protected abstract boolean isWritePossible()_;1530906258;Whether writing/flushing is possible.;protected abstract boolean isWritePossible()_;whether,writing,flushing,is,possible;protected,abstract,boolean,is,write,possible
AbstractListenerWriteFlushProcessor -> protected abstract boolean isWritePossible()_;1530912796;Whether writing/flushing is possible.;protected abstract boolean isWritePossible()_;whether,writing,flushing,is,possible;protected,abstract,boolean,is,write,possible
AbstractListenerWriteFlushProcessor -> protected abstract boolean isWritePossible()_;1531942370;Whether writing/flushing is possible.;protected abstract boolean isWritePossible()_;whether,writing,flushing,is,possible;protected,abstract,boolean,is,write,possible
AbstractListenerWriteFlushProcessor -> protected abstract boolean isWritePossible()_;1532436274;Whether writing/flushing is possible.;protected abstract boolean isWritePossible()_;whether,writing,flushing,is,possible;protected,abstract,boolean,is,write,possible
AbstractListenerWriteFlushProcessor -> protected abstract boolean isWritePossible()_;1536962806;Whether writing/flushing is possible.;protected abstract boolean isWritePossible()_;whether,writing,flushing,is,possible;protected,abstract,boolean,is,write,possible
AbstractListenerWriteFlushProcessor -> protected abstract boolean isWritePossible()_;1542613849;Whether writing/flushing is possible.;protected abstract boolean isWritePossible()_;whether,writing,flushing,is,possible;protected,abstract,boolean,is,write,possible
AbstractListenerWriteFlushProcessor -> @Override 	public final void onError(Throwable ex);1511411136;Notify of an error. This can come from the upstream write Publisher or_from sub-classes as a result of an I/O error.;@Override_	public final void onError(Throwable ex) {_		if (logger.isTraceEnabled()) {_			logger.trace("Received onError: " + ex)__		}_		this.state.get().onError(this, ex)__	};notify,of,an,error,this,can,come,from,the,upstream,write,publisher,or,from,sub,classes,as,a,result,of,an,i,o,error;override,public,final,void,on,error,throwable,ex,if,logger,is,trace,enabled,logger,trace,received,on,error,ex,this,state,get,on,error,this,ex
AbstractListenerWriteFlushProcessor -> @Override 	public final void onError(Throwable ex);1511450555;Error signal from the upstream, write Publisher. This is also used by_sub-classes to delegate error notifications from the container.;@Override_	public final void onError(Throwable ex) {_		if (logger.isTraceEnabled()) {_			logger.trace("Received onError: " + ex)__		}_		this.state.get().onError(this, ex)__	};error,signal,from,the,upstream,write,publisher,this,is,also,used,by,sub,classes,to,delegate,error,notifications,from,the,container;override,public,final,void,on,error,throwable,ex,if,logger,is,trace,enabled,logger,trace,received,on,error,ex,this,state,get,on,error,this,ex
AbstractListenerWriteFlushProcessor -> @Override 	public final void onError(Throwable ex);1511452503;Error signal from the upstream, write Publisher. This is also used by_sub-classes to delegate error notifications from the container.;@Override_	public final void onError(Throwable ex) {_		if (logger.isTraceEnabled()) {_			logger.trace("Received onError: " + ex)__		}_		this.state.get().onError(this, ex)__	};error,signal,from,the,upstream,write,publisher,this,is,also,used,by,sub,classes,to,delegate,error,notifications,from,the,container;override,public,final,void,on,error,throwable,ex,if,logger,is,trace,enabled,logger,trace,received,on,error,ex,this,state,get,on,error,this,ex
AbstractListenerWriteFlushProcessor -> @Override 	public final void onError(Throwable ex);1519859718;Error signal from the upstream, write Publisher. This is also used by_sub-classes to delegate error notifications from the container.;@Override_	public final void onError(Throwable ex) {_		if (logger.isTraceEnabled()) {_			logger.trace("Received onError: " + ex)__		}_		this.state.get().onError(this, ex)__	};error,signal,from,the,upstream,write,publisher,this,is,also,used,by,sub,classes,to,delegate,error,notifications,from,the,container;override,public,final,void,on,error,throwable,ex,if,logger,is,trace,enabled,logger,trace,received,on,error,ex,this,state,get,on,error,this,ex
AbstractListenerWriteFlushProcessor -> @Override 	public final void onError(Throwable ex);1523471247;Error signal from the upstream, write Publisher. This is also used by_sub-classes to delegate error notifications from the container.;@Override_	public final void onError(Throwable ex) {_		if (logger.isTraceEnabled()) {_			logger.trace("Received onError: " + ex)__		}_		this.state.get().onError(this, ex)__	};error,signal,from,the,upstream,write,publisher,this,is,also,used,by,sub,classes,to,delegate,error,notifications,from,the,container;override,public,final,void,on,error,throwable,ex,if,logger,is,trace,enabled,logger,trace,received,on,error,ex,this,state,get,on,error,this,ex
AbstractListenerWriteFlushProcessor -> @Override 	public final void onError(Throwable ex);1530174524;Error signal from the upstream, write Publisher. This is also used by_sub-classes to delegate error notifications from the container.;@Override_	public final void onError(Throwable ex) {_		if (logger.isTraceEnabled()) {_			logger.trace("Received onError: " + ex)__		}_		this.state.get().onError(this, ex)__	};error,signal,from,the,upstream,write,publisher,this,is,also,used,by,sub,classes,to,delegate,error,notifications,from,the,container;override,public,final,void,on,error,throwable,ex,if,logger,is,trace,enabled,logger,trace,received,on,error,ex,this,state,get,on,error,this,ex
AbstractListenerWriteFlushProcessor -> @Override 	public final void onError(Throwable ex);1530174524;Error signal from the upstream, write Publisher. This is also used by_sub-classes to delegate error notifications from the container.;@Override_	public final void onError(Throwable ex) {_		if (logger.isTraceEnabled()) {_			logger.trace("Received onError: " + ex)__		}_		this.state.get().onError(this, ex)__	};error,signal,from,the,upstream,write,publisher,this,is,also,used,by,sub,classes,to,delegate,error,notifications,from,the,container;override,public,final,void,on,error,throwable,ex,if,logger,is,trace,enabled,logger,trace,received,on,error,ex,this,state,get,on,error,this,ex
AbstractListenerWriteFlushProcessor -> @Override 	public final void onError(Throwable ex);1530906258;Error signal from the upstream, write Publisher. This is also used by_sub-classes to delegate error notifications from the container.;@Override_	public final void onError(Throwable ex) {_		if (logger.isTraceEnabled()) {_			logger.trace(getLogPrefix() + "Received onError: " + ex)__		}_		this.state.get().onError(this, ex)__	};error,signal,from,the,upstream,write,publisher,this,is,also,used,by,sub,classes,to,delegate,error,notifications,from,the,container;override,public,final,void,on,error,throwable,ex,if,logger,is,trace,enabled,logger,trace,get,log,prefix,received,on,error,ex,this,state,get,on,error,this,ex
AbstractListenerWriteFlushProcessor -> @Override 	public final void onError(Throwable ex);1530912796;Error signal from the upstream, write Publisher. This is also used by_sub-classes to delegate error notifications from the container.;@Override_	public final void onError(Throwable ex) {_		if (rsWriteFlushLogger.isTraceEnabled()) {_			rsWriteFlushLogger.trace(getLogPrefix() + "Received onError: " + ex)__		}_		this.state.get().onError(this, ex)__	};error,signal,from,the,upstream,write,publisher,this,is,also,used,by,sub,classes,to,delegate,error,notifications,from,the,container;override,public,final,void,on,error,throwable,ex,if,rs,write,flush,logger,is,trace,enabled,rs,write,flush,logger,trace,get,log,prefix,received,on,error,ex,this,state,get,on,error,this,ex
AbstractListenerWriteFlushProcessor -> @Override 	public final void onError(Throwable ex);1531942370;Error signal from the upstream, write Publisher. This is also used by_sub-classes to delegate error notifications from the container.;@Override_	public final void onError(Throwable ex) {_		if (rsWriteFlushLogger.isTraceEnabled()) {_			rsWriteFlushLogger.trace(getLogPrefix() + "Received onError: " + ex)__		}_		this.state.get().onError(this, ex)__	};error,signal,from,the,upstream,write,publisher,this,is,also,used,by,sub,classes,to,delegate,error,notifications,from,the,container;override,public,final,void,on,error,throwable,ex,if,rs,write,flush,logger,is,trace,enabled,rs,write,flush,logger,trace,get,log,prefix,received,on,error,ex,this,state,get,on,error,this,ex
AbstractListenerWriteFlushProcessor -> @Override 	public final void onError(Throwable ex);1532436274;Error signal from the upstream, write Publisher. This is also used by_sub-classes to delegate error notifications from the container.;@Override_	public final void onError(Throwable ex) {_		if (rsWriteFlushLogger.isTraceEnabled()) {_			rsWriteFlushLogger.trace(getLogPrefix() + "Received onError: " + ex)__		}_		this.state.get().onError(this, ex)__	};error,signal,from,the,upstream,write,publisher,this,is,also,used,by,sub,classes,to,delegate,error,notifications,from,the,container;override,public,final,void,on,error,throwable,ex,if,rs,write,flush,logger,is,trace,enabled,rs,write,flush,logger,trace,get,log,prefix,received,on,error,ex,this,state,get,on,error,this,ex
AbstractListenerWriteFlushProcessor -> @Override 	public final void onError(Throwable ex);1536962806;Error signal from the upstream, write Publisher. This is also used by_sub-classes to delegate error notifications from the container.;@Override_	public final void onError(Throwable ex) {_		if (rsWriteFlushLogger.isTraceEnabled()) {_			rsWriteFlushLogger.trace(getLogPrefix() + "Received onError: " + ex)__		}_		this.state.get().onError(this, ex)__	};error,signal,from,the,upstream,write,publisher,this,is,also,used,by,sub,classes,to,delegate,error,notifications,from,the,container;override,public,final,void,on,error,throwable,ex,if,rs,write,flush,logger,is,trace,enabled,rs,write,flush,logger,trace,get,log,prefix,received,on,error,ex,this,state,get,on,error,this,ex
AbstractListenerWriteFlushProcessor -> @Override 	public final void onError(Throwable ex);1542613849;Error signal from the upstream, write Publisher. This is also used by_sub-classes to delegate error notifications from the container.;@Override_	public final void onError(Throwable ex) {_		if (rsWriteFlushLogger.isTraceEnabled()) {_			rsWriteFlushLogger.trace(getLogPrefix() + "Received onError: " + ex)__		}_		this.state.get().onError(this, ex)__	};error,signal,from,the,upstream,write,publisher,this,is,also,used,by,sub,classes,to,delegate,error,notifications,from,the,container;override,public,final,void,on,error,throwable,ex,if,rs,write,flush,logger,is,trace,enabled,rs,write,flush,logger,trace,get,log,prefix,received,on,error,ex,this,state,get,on,error,this,ex
AbstractListenerWriteFlushProcessor -> @Override 	public final void onComplete();1511411136;Notify of completion. This can come from the upstream write Publisher or_from sub-classes as a result of an I/O completion event.;@Override_	public final void onComplete() {_		logger.trace("Received onComplete")__		this.state.get().onComplete(this)__	};notify,of,completion,this,can,come,from,the,upstream,write,publisher,or,from,sub,classes,as,a,result,of,an,i,o,completion,event;override,public,final,void,on,complete,logger,trace,received,on,complete,this,state,get,on,complete,this
AbstractListenerWriteFlushProcessor -> @Override 	public final void onComplete();1511450555;Completion signal from the upstream, write Publisher. This is also used_by sub-classes to delegate completion notifications from the container.;@Override_	public final void onComplete() {_		logger.trace("Received onComplete")__		this.state.get().onComplete(this)__	};completion,signal,from,the,upstream,write,publisher,this,is,also,used,by,sub,classes,to,delegate,completion,notifications,from,the,container;override,public,final,void,on,complete,logger,trace,received,on,complete,this,state,get,on,complete,this
AbstractListenerWriteFlushProcessor -> @Override 	public final void onComplete();1511452503;Completion signal from the upstream, write Publisher. This is also used_by sub-classes to delegate completion notifications from the container.;@Override_	public final void onComplete() {_		logger.trace("Received onComplete")__		this.state.get().onComplete(this)__	};completion,signal,from,the,upstream,write,publisher,this,is,also,used,by,sub,classes,to,delegate,completion,notifications,from,the,container;override,public,final,void,on,complete,logger,trace,received,on,complete,this,state,get,on,complete,this
AbstractListenerWriteFlushProcessor -> @Override 	public final void onComplete();1519859718;Completion signal from the upstream, write Publisher. This is also used_by sub-classes to delegate completion notifications from the container.;@Override_	public final void onComplete() {_		logger.trace("Received onComplete")__		this.state.get().onComplete(this)__	};completion,signal,from,the,upstream,write,publisher,this,is,also,used,by,sub,classes,to,delegate,completion,notifications,from,the,container;override,public,final,void,on,complete,logger,trace,received,on,complete,this,state,get,on,complete,this
AbstractListenerWriteFlushProcessor -> @Override 	public final void onComplete();1523471247;Completion signal from the upstream, write Publisher. This is also used_by sub-classes to delegate completion notifications from the container.;@Override_	public final void onComplete() {_		logger.trace("Received onComplete")__		this.state.get().onComplete(this)__	};completion,signal,from,the,upstream,write,publisher,this,is,also,used,by,sub,classes,to,delegate,completion,notifications,from,the,container;override,public,final,void,on,complete,logger,trace,received,on,complete,this,state,get,on,complete,this
AbstractListenerWriteFlushProcessor -> @Override 	public final void onComplete();1530174524;Completion signal from the upstream, write Publisher. This is also used_by sub-classes to delegate completion notifications from the container.;@Override_	public final void onComplete() {_		logger.trace("Received onComplete")__		this.state.get().onComplete(this)__	};completion,signal,from,the,upstream,write,publisher,this,is,also,used,by,sub,classes,to,delegate,completion,notifications,from,the,container;override,public,final,void,on,complete,logger,trace,received,on,complete,this,state,get,on,complete,this
AbstractListenerWriteFlushProcessor -> @Override 	public final void onComplete();1530174524;Completion signal from the upstream, write Publisher. This is also used_by sub-classes to delegate completion notifications from the container.;@Override_	public final void onComplete() {_		logger.trace("Received onComplete")__		this.state.get().onComplete(this)__	};completion,signal,from,the,upstream,write,publisher,this,is,also,used,by,sub,classes,to,delegate,completion,notifications,from,the,container;override,public,final,void,on,complete,logger,trace,received,on,complete,this,state,get,on,complete,this
AbstractListenerWriteFlushProcessor -> @Override 	public final void onComplete();1530906258;Completion signal from the upstream, write Publisher. This is also used_by sub-classes to delegate completion notifications from the container.;@Override_	public final void onComplete() {_		if (logger.isTraceEnabled()) {_			logger.trace(getLogPrefix() + "Received onComplete")__		}_		this.state.get().onComplete(this)__	};completion,signal,from,the,upstream,write,publisher,this,is,also,used,by,sub,classes,to,delegate,completion,notifications,from,the,container;override,public,final,void,on,complete,if,logger,is,trace,enabled,logger,trace,get,log,prefix,received,on,complete,this,state,get,on,complete,this
AbstractListenerWriteFlushProcessor -> @Override 	public final void onComplete();1530912796;Completion signal from the upstream, write Publisher. This is also used_by sub-classes to delegate completion notifications from the container.;@Override_	public final void onComplete() {_		if (rsWriteFlushLogger.isTraceEnabled()) {_			rsWriteFlushLogger.trace(getLogPrefix() + "Received onComplete")__		}_		this.state.get().onComplete(this)__	};completion,signal,from,the,upstream,write,publisher,this,is,also,used,by,sub,classes,to,delegate,completion,notifications,from,the,container;override,public,final,void,on,complete,if,rs,write,flush,logger,is,trace,enabled,rs,write,flush,logger,trace,get,log,prefix,received,on,complete,this,state,get,on,complete,this
AbstractListenerWriteFlushProcessor -> @Override 	public final void onComplete();1531942370;Completion signal from the upstream, write Publisher. This is also used_by sub-classes to delegate completion notifications from the container.;@Override_	public final void onComplete() {_		if (rsWriteFlushLogger.isTraceEnabled()) {_			rsWriteFlushLogger.trace(getLogPrefix() + "Received onComplete")__		}_		this.state.get().onComplete(this)__	};completion,signal,from,the,upstream,write,publisher,this,is,also,used,by,sub,classes,to,delegate,completion,notifications,from,the,container;override,public,final,void,on,complete,if,rs,write,flush,logger,is,trace,enabled,rs,write,flush,logger,trace,get,log,prefix,received,on,complete,this,state,get,on,complete,this
AbstractListenerWriteFlushProcessor -> @Override 	public final void onComplete();1532436274;Completion signal from the upstream, write Publisher. This is also used_by sub-classes to delegate completion notifications from the container.;@Override_	public final void onComplete() {_		if (rsWriteFlushLogger.isTraceEnabled()) {_			rsWriteFlushLogger.trace(getLogPrefix() + "Received onComplete")__		}_		this.state.get().onComplete(this)__	};completion,signal,from,the,upstream,write,publisher,this,is,also,used,by,sub,classes,to,delegate,completion,notifications,from,the,container;override,public,final,void,on,complete,if,rs,write,flush,logger,is,trace,enabled,rs,write,flush,logger,trace,get,log,prefix,received,on,complete,this,state,get,on,complete,this
AbstractListenerWriteFlushProcessor -> @Override 	public final void onComplete();1536962806;Completion signal from the upstream, write Publisher. This is also used_by sub-classes to delegate completion notifications from the container.;@Override_	public final void onComplete() {_		if (rsWriteFlushLogger.isTraceEnabled()) {_			rsWriteFlushLogger.trace(getLogPrefix() + "Received onComplete")__		}_		this.state.get().onComplete(this)__	};completion,signal,from,the,upstream,write,publisher,this,is,also,used,by,sub,classes,to,delegate,completion,notifications,from,the,container;override,public,final,void,on,complete,if,rs,write,flush,logger,is,trace,enabled,rs,write,flush,logger,trace,get,log,prefix,received,on,complete,this,state,get,on,complete,this
AbstractListenerWriteFlushProcessor -> @Override 	public final void onComplete();1542613849;Completion signal from the upstream, write Publisher. This is also used_by sub-classes to delegate completion notifications from the container.;@Override_	public final void onComplete() {_		if (rsWriteFlushLogger.isTraceEnabled()) {_			rsWriteFlushLogger.trace(getLogPrefix() + "Received onComplete")__		}_		this.state.get().onComplete(this)__	};completion,signal,from,the,upstream,write,publisher,this,is,also,used,by,sub,classes,to,delegate,completion,notifications,from,the,container;override,public,final,void,on,complete,if,rs,write,flush,logger,is,trace,enabled,rs,write,flush,logger,trace,get,log,prefix,received,on,complete,this,state,get,on,complete,this
AbstractListenerWriteFlushProcessor -> public String getLogPrefix();1530906258;Create an instance with the given log prefix._@since 5.1;public String getLogPrefix() {_		return this.logPrefix__	};create,an,instance,with,the,given,log,prefix,since,5,1;public,string,get,log,prefix,return,this,log,prefix
AbstractListenerWriteFlushProcessor -> public String getLogPrefix();1530912796;Create an instance with the given log prefix._@since 5.1;public String getLogPrefix() {_		return this.logPrefix__	};create,an,instance,with,the,given,log,prefix,since,5,1;public,string,get,log,prefix,return,this,log,prefix
AbstractListenerWriteFlushProcessor -> public String getLogPrefix();1531942370;Create an instance with the given log prefix._@since 5.1;public String getLogPrefix() {_		return this.logPrefix__	};create,an,instance,with,the,given,log,prefix,since,5,1;public,string,get,log,prefix,return,this,log,prefix
AbstractListenerWriteFlushProcessor -> public String getLogPrefix();1532436274;Create an instance with the given log prefix._@since 5.1;public String getLogPrefix() {_		return this.logPrefix__	};create,an,instance,with,the,given,log,prefix,since,5,1;public,string,get,log,prefix,return,this,log,prefix
AbstractListenerWriteFlushProcessor -> public String getLogPrefix();1536962806;Create an instance with the given log prefix._@since 5.1;public String getLogPrefix() {_		return this.logPrefix__	};create,an,instance,with,the,given,log,prefix,since,5,1;public,string,get,log,prefix,return,this,log,prefix
AbstractListenerWriteFlushProcessor -> public String getLogPrefix();1542613849;Create an instance with the given log prefix._@since 5.1;public String getLogPrefix() {_		return this.logPrefix__	};create,an,instance,with,the,given,log,prefix,since,5,1;public,string,get,log,prefix,return,this,log,prefix
AbstractListenerWriteFlushProcessor -> protected abstract Processor<? super T, Void> createWriteProcessor()_;1481755387;Create a new processor for subscribing to the next flush boundary.;protected abstract Processor<? super T, Void> createWriteProcessor()_;create,a,new,processor,for,subscribing,to,the,next,flush,boundary;protected,abstract,processor,super,t,void,create,write,processor
AbstractListenerWriteFlushProcessor -> protected abstract Processor<? super T, Void> createWriteProcessor()_;1485810955;Create a new processor for subscribing to the next flush boundary.;protected abstract Processor<? super T, Void> createWriteProcessor()_;create,a,new,processor,for,subscribing,to,the,next,flush,boundary;protected,abstract,processor,super,t,void,create,write,processor
AbstractListenerWriteFlushProcessor -> protected abstract Processor<? super T, Void> createWriteProcessor()_;1490793036;Create a new processor for subscribing to the next flush boundary.;protected abstract Processor<? super T, Void> createWriteProcessor()_;create,a,new,processor,for,subscribing,to,the,next,flush,boundary;protected,abstract,processor,super,t,void,create,write,processor
AbstractListenerWriteFlushProcessor -> protected abstract Processor<? super T, Void> createWriteProcessor()_;1496323185;Create a new processor for subscribing to the next flush boundary.;protected abstract Processor<? super T, Void> createWriteProcessor()_;create,a,new,processor,for,subscribing,to,the,next,flush,boundary;protected,abstract,processor,super,t,void,create,write,processor
AbstractListenerWriteFlushProcessor -> protected abstract Processor<? super T, Void> createWriteProcessor()_;1498780456;Create a new processor for subscribing to the next flush boundary.;protected abstract Processor<? super T, Void> createWriteProcessor()_;create,a,new,processor,for,subscribing,to,the,next,flush,boundary;protected,abstract,processor,super,t,void,create,write,processor
AbstractListenerWriteFlushProcessor -> protected abstract Processor<? super T, Void> createWriteProcessor()_;1505458380;Create a new processor for subscribing to the next flush boundary.;protected abstract Processor<? super T, Void> createWriteProcessor()_;create,a,new,processor,for,subscribing,to,the,next,flush,boundary;protected,abstract,processor,super,t,void,create,write,processor
AbstractListenerWriteFlushProcessor -> protected abstract Processor<? super T, Void> createWriteProcessor()_;1511293325;Create a new processor for subscribing to the next flush boundary.;protected abstract Processor<? super T, Void> createWriteProcessor()_;create,a,new,processor,for,subscribing,to,the,next,flush,boundary;protected,abstract,processor,super,t,void,create,write,processor
AbstractListenerWriteFlushProcessor -> protected abstract Processor<? super T, Void> createWriteProcessor()_;1511318790;Create a new processor for subscribing to the next flush boundary.;protected abstract Processor<? super T, Void> createWriteProcessor()_;create,a,new,processor,for,subscribing,to,the,next,flush,boundary;protected,abstract,processor,super,t,void,create,write,processor
AbstractListenerWriteFlushProcessor -> protected abstract Processor<? super T, Void> createWriteProcessor()_;1511411136;Create a new processor for subscribing to the next flush boundary.;protected abstract Processor<? super T, Void> createWriteProcessor()_;create,a,new,processor,for,subscribing,to,the,next,flush,boundary;protected,abstract,processor,super,t,void,create,write,processor
AbstractListenerWriteFlushProcessor -> protected abstract Processor<? super T, Void> createWriteProcessor()_;1511450555;Create a new processor for the current flush boundary.;protected abstract Processor<? super T, Void> createWriteProcessor()_;create,a,new,processor,for,the,current,flush,boundary;protected,abstract,processor,super,t,void,create,write,processor
AbstractListenerWriteFlushProcessor -> protected abstract Processor<? super T, Void> createWriteProcessor()_;1511452503;Create a new processor for the current flush boundary.;protected abstract Processor<? super T, Void> createWriteProcessor()_;create,a,new,processor,for,the,current,flush,boundary;protected,abstract,processor,super,t,void,create,write,processor
AbstractListenerWriteFlushProcessor -> protected abstract Processor<? super T, Void> createWriteProcessor()_;1519859718;Create a new processor for the current flush boundary.;protected abstract Processor<? super T, Void> createWriteProcessor()_;create,a,new,processor,for,the,current,flush,boundary;protected,abstract,processor,super,t,void,create,write,processor
AbstractListenerWriteFlushProcessor -> protected abstract Processor<? super T, Void> createWriteProcessor()_;1523471247;Create a new processor for the current flush boundary.;protected abstract Processor<? super T, Void> createWriteProcessor()_;create,a,new,processor,for,the,current,flush,boundary;protected,abstract,processor,super,t,void,create,write,processor
AbstractListenerWriteFlushProcessor -> protected abstract Processor<? super T, Void> createWriteProcessor()_;1530174524;Create a new processor for the current flush boundary.;protected abstract Processor<? super T, Void> createWriteProcessor()_;create,a,new,processor,for,the,current,flush,boundary;protected,abstract,processor,super,t,void,create,write,processor
AbstractListenerWriteFlushProcessor -> protected abstract Processor<? super T, Void> createWriteProcessor()_;1530174524;Create a new processor for the current flush boundary.;protected abstract Processor<? super T, Void> createWriteProcessor()_;create,a,new,processor,for,the,current,flush,boundary;protected,abstract,processor,super,t,void,create,write,processor
AbstractListenerWriteFlushProcessor -> protected abstract Processor<? super T, Void> createWriteProcessor()_;1530906258;Create a new processor for the current flush boundary.;protected abstract Processor<? super T, Void> createWriteProcessor()_;create,a,new,processor,for,the,current,flush,boundary;protected,abstract,processor,super,t,void,create,write,processor
AbstractListenerWriteFlushProcessor -> protected abstract Processor<? super T, Void> createWriteProcessor()_;1530912796;Create a new processor for the current flush boundary.;protected abstract Processor<? super T, Void> createWriteProcessor()_;create,a,new,processor,for,the,current,flush,boundary;protected,abstract,processor,super,t,void,create,write,processor
AbstractListenerWriteFlushProcessor -> protected abstract Processor<? super T, Void> createWriteProcessor()_;1531942370;Create a new processor for the current flush boundary.;protected abstract Processor<? super T, Void> createWriteProcessor()_;create,a,new,processor,for,the,current,flush,boundary;protected,abstract,processor,super,t,void,create,write,processor
AbstractListenerWriteFlushProcessor -> protected abstract Processor<? super T, Void> createWriteProcessor()_;1532436274;Create a new processor for the current flush boundary.;protected abstract Processor<? super T, Void> createWriteProcessor()_;create,a,new,processor,for,the,current,flush,boundary;protected,abstract,processor,super,t,void,create,write,processor
AbstractListenerWriteFlushProcessor -> protected abstract Processor<? super T, Void> createWriteProcessor()_;1536962806;Create a new processor for the current flush boundary.;protected abstract Processor<? super T, Void> createWriteProcessor()_;create,a,new,processor,for,the,current,flush,boundary;protected,abstract,processor,super,t,void,create,write,processor
AbstractListenerWriteFlushProcessor -> protected abstract Processor<? super T, Void> createWriteProcessor()_;1542613849;Create a new processor for the current flush boundary.;protected abstract Processor<? super T, Void> createWriteProcessor()_;create,a,new,processor,for,the,current,flush,boundary;protected,abstract,processor,super,t,void,create,write,processor
AbstractListenerWriteFlushProcessor -> protected void cancel();1481755387;Listeners can call this method to cancel further writing.;protected void cancel() {_		this.subscription.cancel()__	};listeners,can,call,this,method,to,cancel,further,writing;protected,void,cancel,this,subscription,cancel
AbstractListenerWriteFlushProcessor -> protected void cancel();1485810955;Listeners can call this method to cancel further writing.;protected void cancel() {_		this.subscription.cancel()__	};listeners,can,call,this,method,to,cancel,further,writing;protected,void,cancel,this,subscription,cancel
AbstractListenerWriteFlushProcessor -> protected void cancel();1490793036;Listeners can call this method to cancel further writing.;protected void cancel() {_		if (this.subscription != null) {_			this.subscription.cancel()__		}_	};listeners,can,call,this,method,to,cancel,further,writing;protected,void,cancel,if,this,subscription,null,this,subscription,cancel
AbstractListenerWriteFlushProcessor -> protected void cancel();1496323185;Listeners can call this method to cancel further writing.;protected void cancel() {_		if (this.subscription != null) {_			this.subscription.cancel()__		}_	};listeners,can,call,this,method,to,cancel,further,writing;protected,void,cancel,if,this,subscription,null,this,subscription,cancel
AbstractListenerWriteFlushProcessor -> protected void cancel();1498780456;Listeners can call this method to cancel further writing.;protected void cancel() {_		if (this.subscription != null) {_			this.subscription.cancel()__		}_	};listeners,can,call,this,method,to,cancel,further,writing;protected,void,cancel,if,this,subscription,null,this,subscription,cancel
AbstractListenerWriteFlushProcessor -> protected void cancel();1505458380;Listeners can call this method to cancel further writing.;protected void cancel() {_		if (this.subscription != null) {_			this.subscription.cancel()__		}_	};listeners,can,call,this,method,to,cancel,further,writing;protected,void,cancel,if,this,subscription,null,this,subscription,cancel
AbstractListenerWriteFlushProcessor -> protected void cancel();1511293325;Listeners can call this method to cancel further writing.;protected void cancel() {_		if (this.subscription != null) {_			this.subscription.cancel()__		}_	};listeners,can,call,this,method,to,cancel,further,writing;protected,void,cancel,if,this,subscription,null,this,subscription,cancel
AbstractListenerWriteFlushProcessor -> protected void cancel();1511450555;Invoked during an error or completion callback from the underlying_container to cancel the upstream subscription.;protected void cancel() {_		this.logger.trace("Received request to cancel")__		if (this.subscription != null) {_			this.subscription.cancel()__		}_	};invoked,during,an,error,or,completion,callback,from,the,underlying,container,to,cancel,the,upstream,subscription;protected,void,cancel,this,logger,trace,received,request,to,cancel,if,this,subscription,null,this,subscription,cancel
AbstractListenerWriteFlushProcessor -> protected void cancel();1511452503;Invoked during an error or completion callback from the underlying_container to cancel the upstream subscription.;protected void cancel() {_		this.logger.trace("Received request to cancel")__		if (this.subscription != null) {_			this.subscription.cancel()__		}_	};invoked,during,an,error,or,completion,callback,from,the,underlying,container,to,cancel,the,upstream,subscription;protected,void,cancel,this,logger,trace,received,request,to,cancel,if,this,subscription,null,this,subscription,cancel
AbstractListenerWriteFlushProcessor -> protected void cancel();1519859718;Invoked during an error or completion callback from the underlying_container to cancel the upstream subscription.;protected void cancel() {_		this.logger.trace("Received request to cancel")__		if (this.subscription != null) {_			this.subscription.cancel()__		}_	};invoked,during,an,error,or,completion,callback,from,the,underlying,container,to,cancel,the,upstream,subscription;protected,void,cancel,this,logger,trace,received,request,to,cancel,if,this,subscription,null,this,subscription,cancel
AbstractListenerWriteFlushProcessor -> protected void cancel();1523471247;Invoked during an error or completion callback from the underlying_container to cancel the upstream subscription.;protected void cancel() {_		this.logger.trace("Received request to cancel")__		if (this.subscription != null) {_			this.subscription.cancel()__		}_	};invoked,during,an,error,or,completion,callback,from,the,underlying,container,to,cancel,the,upstream,subscription;protected,void,cancel,this,logger,trace,received,request,to,cancel,if,this,subscription,null,this,subscription,cancel
AbstractListenerWriteFlushProcessor -> protected void cancel();1530174524;Invoked during an error or completion callback from the underlying_container to cancel the upstream subscription.;protected void cancel() {_		this.logger.trace("Received request to cancel")__		if (this.subscription != null) {_			this.subscription.cancel()__		}_	};invoked,during,an,error,or,completion,callback,from,the,underlying,container,to,cancel,the,upstream,subscription;protected,void,cancel,this,logger,trace,received,request,to,cancel,if,this,subscription,null,this,subscription,cancel
AbstractListenerWriteFlushProcessor -> protected void cancel();1530174524;Invoked during an error or completion callback from the underlying_container to cancel the upstream subscription.;protected void cancel() {_		logger.trace("Received request to cancel")__		if (this.subscription != null) {_			this.subscription.cancel()__		}_	};invoked,during,an,error,or,completion,callback,from,the,underlying,container,to,cancel,the,upstream,subscription;protected,void,cancel,logger,trace,received,request,to,cancel,if,this,subscription,null,this,subscription,cancel
AbstractListenerWriteFlushProcessor -> protected void cancel();1530906258;Invoked during an error or completion callback from the underlying_container to cancel the upstream subscription.;protected void cancel() {_		if (logger.isTraceEnabled()) {_			logger.trace(getLogPrefix() + "Received request to cancel")__		}_		if (this.subscription != null) {_			this.subscription.cancel()__		}_	};invoked,during,an,error,or,completion,callback,from,the,underlying,container,to,cancel,the,upstream,subscription;protected,void,cancel,if,logger,is,trace,enabled,logger,trace,get,log,prefix,received,request,to,cancel,if,this,subscription,null,this,subscription,cancel
AbstractListenerWriteFlushProcessor -> protected void cancel();1530912796;Invoked during an error or completion callback from the underlying_container to cancel the upstream subscription.;protected void cancel() {_		if (rsWriteFlushLogger.isTraceEnabled()) {_			rsWriteFlushLogger.trace(getLogPrefix() + "Received request to cancel")__		}_		if (this.subscription != null) {_			this.subscription.cancel()__		}_	};invoked,during,an,error,or,completion,callback,from,the,underlying,container,to,cancel,the,upstream,subscription;protected,void,cancel,if,rs,write,flush,logger,is,trace,enabled,rs,write,flush,logger,trace,get,log,prefix,received,request,to,cancel,if,this,subscription,null,this,subscription,cancel
AbstractListenerWriteFlushProcessor -> protected void cancel();1531942370;Invoked during an error or completion callback from the underlying_container to cancel the upstream subscription.;protected void cancel() {_		if (rsWriteFlushLogger.isTraceEnabled()) {_			rsWriteFlushLogger.trace(getLogPrefix() + "Received request to cancel")__		}_		if (this.subscription != null) {_			this.subscription.cancel()__		}_	};invoked,during,an,error,or,completion,callback,from,the,underlying,container,to,cancel,the,upstream,subscription;protected,void,cancel,if,rs,write,flush,logger,is,trace,enabled,rs,write,flush,logger,trace,get,log,prefix,received,request,to,cancel,if,this,subscription,null,this,subscription,cancel
AbstractListenerWriteFlushProcessor -> protected void cancel();1532436274;Invoked during an error or completion callback from the underlying_container to cancel the upstream subscription.;protected void cancel() {_		if (rsWriteFlushLogger.isTraceEnabled()) {_			rsWriteFlushLogger.trace(getLogPrefix() + "Received request to cancel")__		}_		if (this.subscription != null) {_			this.subscription.cancel()__		}_	};invoked,during,an,error,or,completion,callback,from,the,underlying,container,to,cancel,the,upstream,subscription;protected,void,cancel,if,rs,write,flush,logger,is,trace,enabled,rs,write,flush,logger,trace,get,log,prefix,received,request,to,cancel,if,this,subscription,null,this,subscription,cancel
AbstractListenerWriteFlushProcessor -> protected void cancel();1536962806;Invoked during an error or completion callback from the underlying_container to cancel the upstream subscription.;protected void cancel() {_		if (rsWriteFlushLogger.isTraceEnabled()) {_			rsWriteFlushLogger.trace(getLogPrefix() + "Received request to cancel")__		}_		if (this.subscription != null) {_			this.subscription.cancel()__		}_	};invoked,during,an,error,or,completion,callback,from,the,underlying,container,to,cancel,the,upstream,subscription;protected,void,cancel,if,rs,write,flush,logger,is,trace,enabled,rs,write,flush,logger,trace,get,log,prefix,received,request,to,cancel,if,this,subscription,null,this,subscription,cancel
AbstractListenerWriteFlushProcessor -> protected void cancel();1542613849;Invoked during an error or completion callback from the underlying_container to cancel the upstream subscription.;protected void cancel() {_		if (rsWriteFlushLogger.isTraceEnabled()) {_			rsWriteFlushLogger.trace(getLogPrefix() + "Received request to cancel")__		}_		if (this.subscription != null) {_			this.subscription.cancel()__		}_	};invoked,during,an,error,or,completion,callback,from,the,underlying,container,to,cancel,the,upstream,subscription;protected,void,cancel,if,rs,write,flush,logger,is,trace,enabled,rs,write,flush,logger,trace,get,log,prefix,received,request,to,cancel,if,this,subscription,null,this,subscription,cancel
AbstractListenerWriteFlushProcessor -> public AbstractListenerWriteFlushProcessor(String logPrefix);1530906258;Create an instance with the given log prefix._@since 5.1;public AbstractListenerWriteFlushProcessor(String logPrefix) {_		this.logPrefix = logPrefix__		this.resultPublisher = new WriteResultPublisher(logPrefix)__	};create,an,instance,with,the,given,log,prefix,since,5,1;public,abstract,listener,write,flush,processor,string,log,prefix,this,log,prefix,log,prefix,this,result,publisher,new,write,result,publisher,log,prefix
AbstractListenerWriteFlushProcessor -> public AbstractListenerWriteFlushProcessor(String logPrefix);1530912796;Create an instance with the given log prefix._@since 5.1;public AbstractListenerWriteFlushProcessor(String logPrefix) {_		this.logPrefix = logPrefix__		this.resultPublisher = new WriteResultPublisher(logPrefix)__	};create,an,instance,with,the,given,log,prefix,since,5,1;public,abstract,listener,write,flush,processor,string,log,prefix,this,log,prefix,log,prefix,this,result,publisher,new,write,result,publisher,log,prefix
AbstractListenerWriteFlushProcessor -> public AbstractListenerWriteFlushProcessor(String logPrefix);1531942370;Create an instance with the given log prefix._@since 5.1;public AbstractListenerWriteFlushProcessor(String logPrefix) {_		this.logPrefix = logPrefix__		this.resultPublisher = new WriteResultPublisher(logPrefix)__	};create,an,instance,with,the,given,log,prefix,since,5,1;public,abstract,listener,write,flush,processor,string,log,prefix,this,log,prefix,log,prefix,this,result,publisher,new,write,result,publisher,log,prefix
AbstractListenerWriteFlushProcessor -> public AbstractListenerWriteFlushProcessor(String logPrefix);1532436274;Create an instance with the given log prefix._@since 5.1;public AbstractListenerWriteFlushProcessor(String logPrefix) {_		this.logPrefix = logPrefix__		this.resultPublisher = new WriteResultPublisher(logPrefix)__	};create,an,instance,with,the,given,log,prefix,since,5,1;public,abstract,listener,write,flush,processor,string,log,prefix,this,log,prefix,log,prefix,this,result,publisher,new,write,result,publisher,log,prefix
AbstractListenerWriteFlushProcessor -> public AbstractListenerWriteFlushProcessor(String logPrefix);1536962806;Create an instance with the given log prefix._@since 5.1;public AbstractListenerWriteFlushProcessor(String logPrefix) {_		this.logPrefix = logPrefix__		this.resultPublisher = new WriteResultPublisher(logPrefix)__	};create,an,instance,with,the,given,log,prefix,since,5,1;public,abstract,listener,write,flush,processor,string,log,prefix,this,log,prefix,log,prefix,this,result,publisher,new,write,result,publisher,log,prefix
AbstractListenerWriteFlushProcessor -> public AbstractListenerWriteFlushProcessor(String logPrefix);1542613849;Create an instance with the given log prefix._@since 5.1;public AbstractListenerWriteFlushProcessor(String logPrefix) {_		this.logPrefix = logPrefix__		this.resultPublisher = new WriteResultPublisher(logPrefix)__	};create,an,instance,with,the,given,log,prefix,since,5,1;public,abstract,listener,write,flush,processor,string,log,prefix,this,log,prefix,log,prefix,this,result,publisher,new,write,result,publisher,log,prefix
AbstractListenerWriteFlushProcessor -> protected abstract void flush() throws IOException_;1481755387;Flush the output.;protected abstract void flush() throws IOException_;flush,the,output;protected,abstract,void,flush,throws,ioexception
AbstractListenerWriteFlushProcessor -> protected abstract void flush() throws IOException_;1485810955;Flush the output.;protected abstract void flush() throws IOException_;flush,the,output;protected,abstract,void,flush,throws,ioexception
AbstractListenerWriteFlushProcessor -> protected abstract void flush() throws IOException_;1490793036;Flush the output.;protected abstract void flush() throws IOException_;flush,the,output;protected,abstract,void,flush,throws,ioexception
AbstractListenerWriteFlushProcessor -> protected abstract void flush() throws IOException_;1496323185;Flush the output.;protected abstract void flush() throws IOException_;flush,the,output;protected,abstract,void,flush,throws,ioexception
AbstractListenerWriteFlushProcessor -> protected abstract void flush() throws IOException_;1498780456;Flush the output.;protected abstract void flush() throws IOException_;flush,the,output;protected,abstract,void,flush,throws,ioexception
AbstractListenerWriteFlushProcessor -> protected abstract void flush() throws IOException_;1505458380;Flush the output.;protected abstract void flush() throws IOException_;flush,the,output;protected,abstract,void,flush,throws,ioexception
AbstractListenerWriteFlushProcessor -> protected abstract void flush() throws IOException_;1511293325;Flush the output.;protected abstract void flush() throws IOException_;flush,the,output;protected,abstract,void,flush,throws,ioexception
AbstractListenerWriteFlushProcessor -> protected abstract void flush() throws IOException_;1511318790;Flush the output if ready, or otherwise {@link #isFlushPending()} should_return true after that.;protected abstract void flush() throws IOException_;flush,the,output,if,ready,or,otherwise,link,is,flush,pending,should,return,true,after,that;protected,abstract,void,flush,throws,ioexception
AbstractListenerWriteFlushProcessor -> protected abstract void flush() throws IOException_;1511411136;Flush the output if ready, or otherwise {@link #isFlushPending()} should_return true after that.;protected abstract void flush() throws IOException_;flush,the,output,if,ready,or,otherwise,link,is,flush,pending,should,return,true,after,that;protected,abstract,void,flush,throws,ioexception
AbstractListenerWriteFlushProcessor -> protected abstract void flush() throws IOException_;1511450555;Flush the output if ready, or otherwise {@link #isFlushPending()} should_return true after.;protected abstract void flush() throws IOException_;flush,the,output,if,ready,or,otherwise,link,is,flush,pending,should,return,true,after;protected,abstract,void,flush,throws,ioexception
AbstractListenerWriteFlushProcessor -> protected abstract void flush() throws IOException_;1511452503;Flush the output if ready, or otherwise {@link #isFlushPending()} should_return true after.;protected abstract void flush() throws IOException_;flush,the,output,if,ready,or,otherwise,link,is,flush,pending,should,return,true,after;protected,abstract,void,flush,throws,ioexception
AbstractListenerWriteFlushProcessor -> protected abstract void flush() throws IOException_;1519859718;Flush the output if ready, or otherwise {@link #isFlushPending()} should_return true after.;protected abstract void flush() throws IOException_;flush,the,output,if,ready,or,otherwise,link,is,flush,pending,should,return,true,after;protected,abstract,void,flush,throws,ioexception
AbstractListenerWriteFlushProcessor -> protected abstract void flush() throws IOException_;1523471247;Flush the output if ready, or otherwise {@link #isFlushPending()} should_return true after._<p>This is primarily for the Servlet non-blocking I/O API where flush_cannot be called without a readyToWrite check.;protected abstract void flush() throws IOException_;flush,the,output,if,ready,or,otherwise,link,is,flush,pending,should,return,true,after,p,this,is,primarily,for,the,servlet,non,blocking,i,o,api,where,flush,cannot,be,called,without,a,ready,to,write,check;protected,abstract,void,flush,throws,ioexception
AbstractListenerWriteFlushProcessor -> protected abstract void flush() throws IOException_;1530174524;Flush the output if ready, or otherwise {@link #isFlushPending()} should_return true after._<p>This is primarily for the Servlet non-blocking I/O API where flush_cannot be called without a readyToWrite check.;protected abstract void flush() throws IOException_;flush,the,output,if,ready,or,otherwise,link,is,flush,pending,should,return,true,after,p,this,is,primarily,for,the,servlet,non,blocking,i,o,api,where,flush,cannot,be,called,without,a,ready,to,write,check;protected,abstract,void,flush,throws,ioexception
AbstractListenerWriteFlushProcessor -> protected abstract void flush() throws IOException_;1530174524;Flush the output if ready, or otherwise {@link #isFlushPending()} should_return true after._<p>This is primarily for the Servlet non-blocking I/O API where flush_cannot be called without a readyToWrite check.;protected abstract void flush() throws IOException_;flush,the,output,if,ready,or,otherwise,link,is,flush,pending,should,return,true,after,p,this,is,primarily,for,the,servlet,non,blocking,i,o,api,where,flush,cannot,be,called,without,a,ready,to,write,check;protected,abstract,void,flush,throws,ioexception
AbstractListenerWriteFlushProcessor -> protected abstract void flush() throws IOException_;1530906258;Flush the output if ready, or otherwise {@link #isFlushPending()} should_return true after._<p>This is primarily for the Servlet non-blocking I/O API where flush_cannot be called without a readyToWrite check.;protected abstract void flush() throws IOException_;flush,the,output,if,ready,or,otherwise,link,is,flush,pending,should,return,true,after,p,this,is,primarily,for,the,servlet,non,blocking,i,o,api,where,flush,cannot,be,called,without,a,ready,to,write,check;protected,abstract,void,flush,throws,ioexception
AbstractListenerWriteFlushProcessor -> protected abstract void flush() throws IOException_;1530912796;Flush the output if ready, or otherwise {@link #isFlushPending()} should_return true after._<p>This is primarily for the Servlet non-blocking I/O API where flush_cannot be called without a readyToWrite check.;protected abstract void flush() throws IOException_;flush,the,output,if,ready,or,otherwise,link,is,flush,pending,should,return,true,after,p,this,is,primarily,for,the,servlet,non,blocking,i,o,api,where,flush,cannot,be,called,without,a,ready,to,write,check;protected,abstract,void,flush,throws,ioexception
AbstractListenerWriteFlushProcessor -> protected abstract void flush() throws IOException_;1531942370;Flush the output if ready, or otherwise {@link #isFlushPending()} should_return true after._<p>This is primarily for the Servlet non-blocking I/O API where flush_cannot be called without a readyToWrite check.;protected abstract void flush() throws IOException_;flush,the,output,if,ready,or,otherwise,link,is,flush,pending,should,return,true,after,p,this,is,primarily,for,the,servlet,non,blocking,i,o,api,where,flush,cannot,be,called,without,a,ready,to,write,check;protected,abstract,void,flush,throws,ioexception
AbstractListenerWriteFlushProcessor -> protected abstract void flush() throws IOException_;1532436274;Flush the output if ready, or otherwise {@link #isFlushPending()} should_return true after._<p>This is primarily for the Servlet non-blocking I/O API where flush_cannot be called without a readyToWrite check.;protected abstract void flush() throws IOException_;flush,the,output,if,ready,or,otherwise,link,is,flush,pending,should,return,true,after,p,this,is,primarily,for,the,servlet,non,blocking,i,o,api,where,flush,cannot,be,called,without,a,ready,to,write,check;protected,abstract,void,flush,throws,ioexception
AbstractListenerWriteFlushProcessor -> protected abstract void flush() throws IOException_;1536962806;Flush the output if ready, or otherwise {@link #isFlushPending()} should_return true after._<p>This is primarily for the Servlet non-blocking I/O API where flush_cannot be called without a readyToWrite check.;protected abstract void flush() throws IOException_;flush,the,output,if,ready,or,otherwise,link,is,flush,pending,should,return,true,after,p,this,is,primarily,for,the,servlet,non,blocking,i,o,api,where,flush,cannot,be,called,without,a,ready,to,write,check;protected,abstract,void,flush,throws,ioexception
AbstractListenerWriteFlushProcessor -> protected abstract void flush() throws IOException_;1542613849;Flush the output if ready, or otherwise {@link #isFlushPending()} should_return true after._<p>This is primarily for the Servlet non-blocking I/O API where flush_cannot be called without a readyToWrite check.;protected abstract void flush() throws IOException_;flush,the,output,if,ready,or,otherwise,link,is,flush,pending,should,return,true,after,p,this,is,primarily,for,the,servlet,non,blocking,i,o,api,where,flush,cannot,be,called,without,a,ready,to,write,check;protected,abstract,void,flush,throws,ioexception
AbstractListenerWriteFlushProcessor -> protected void flushingFailed(Throwable t);1496323185;Invoked when an error happens while flushing. Defaults to no-op._Servlet 3.1 based implementations will receive_{@link AsyncListener#onError(Throwable)} event.;protected void flushingFailed(Throwable t) {_	};invoked,when,an,error,happens,while,flushing,defaults,to,no,op,servlet,3,1,based,implementations,will,receive,link,async,listener,on,error,throwable,event;protected,void,flushing,failed,throwable,t
AbstractListenerWriteFlushProcessor -> protected void flushingFailed(Throwable t);1498780456;Invoked when an error happens while flushing. Defaults to no-op._Servlet 3.1 based implementations will receive an_{@link javax.servlet.AsyncListener#onError} event.;protected void flushingFailed(Throwable t) {_	};invoked,when,an,error,happens,while,flushing,defaults,to,no,op,servlet,3,1,based,implementations,will,receive,an,link,javax,servlet,async,listener,on,error,event;protected,void,flushing,failed,throwable,t
AbstractListenerWriteFlushProcessor -> protected void flushingFailed(Throwable t);1505458380;Invoked when an error happens while flushing. Defaults to no-op._Servlet 3.1 based implementations will receive an_{@link javax.servlet.AsyncListener#onError} event.;protected void flushingFailed(Throwable t) {_	};invoked,when,an,error,happens,while,flushing,defaults,to,no,op,servlet,3,1,based,implementations,will,receive,an,link,javax,servlet,async,listener,on,error,event;protected,void,flushing,failed,throwable,t
AbstractListenerWriteFlushProcessor -> protected void flushingFailed(Throwable t);1511293325;Invoked when an error happens while flushing. Defaults to no-op._Servlet 3.1 based implementations will receive an_{@link javax.servlet.AsyncListener#onError} event.;protected void flushingFailed(Throwable t) {_	};invoked,when,an,error,happens,while,flushing,defaults,to,no,op,servlet,3,1,based,implementations,will,receive,an,link,javax,servlet,async,listener,on,error,event;protected,void,flushing,failed,throwable,t
AbstractListenerWriteFlushProcessor -> protected void flushingFailed(Throwable t);1511318790;Invoked when an error happens while flushing. Defaults to no-op._Servlet 3.1 based implementations will receive an_{@link javax.servlet.AsyncListener#onError} event.;protected void flushingFailed(Throwable t) {_	};invoked,when,an,error,happens,while,flushing,defaults,to,no,op,servlet,3,1,based,implementations,will,receive,an,link,javax,servlet,async,listener,on,error,event;protected,void,flushing,failed,throwable,t
AbstractListenerWriteFlushProcessor -> protected void flushingFailed(Throwable t);1511411136;Invoked when an error happens while flushing. Defaults to no-op._Servlet 3.1 based implementations will receive an_{@link javax.servlet.AsyncListener#onError} event.;protected void flushingFailed(Throwable t) {_	};invoked,when,an,error,happens,while,flushing,defaults,to,no,op,servlet,3,1,based,implementations,will,receive,an,link,javax,servlet,async,listener,on,error,event;protected,void,flushing,failed,throwable,t
AbstractListenerWriteFlushProcessor -> protected void flushingFailed(Throwable t);1511450555;Invoked when an error happens while flushing. Sub-classes may choose_to ignore this if they know the underlying API will provide an error_notification in a container thread._<p>Defaults to no-op.;protected void flushingFailed(Throwable t) {_	};invoked,when,an,error,happens,while,flushing,sub,classes,may,choose,to,ignore,this,if,they,know,the,underlying,api,will,provide,an,error,notification,in,a,container,thread,p,defaults,to,no,op;protected,void,flushing,failed,throwable,t
AbstractListenerWriteFlushProcessor -> protected void flushingFailed(Throwable t);1511452503;Invoked when an error happens while flushing. Sub-classes may choose_to ignore this if they know the underlying API will provide an error_notification in a container thread._<p>Defaults to no-op.;protected void flushingFailed(Throwable t) {_	};invoked,when,an,error,happens,while,flushing,sub,classes,may,choose,to,ignore,this,if,they,know,the,underlying,api,will,provide,an,error,notification,in,a,container,thread,p,defaults,to,no,op;protected,void,flushing,failed,throwable,t
AbstractListenerWriteFlushProcessor -> protected void flushingFailed(Throwable t);1519859718;Invoked when an error happens while flushing. Sub-classes may choose_to ignore this if they know the underlying API will provide an error_notification in a container thread._<p>Defaults to no-op.;protected void flushingFailed(Throwable t) {_	};invoked,when,an,error,happens,while,flushing,sub,classes,may,choose,to,ignore,this,if,they,know,the,underlying,api,will,provide,an,error,notification,in,a,container,thread,p,defaults,to,no,op;protected,void,flushing,failed,throwable,t
AbstractListenerWriteFlushProcessor -> protected void flushingFailed(Throwable t);1523471247;Invoked when an error happens while flushing. Sub-classes may choose_to ignore this if they know the underlying API will provide an error_notification in a container thread._<p>Defaults to no-op.;protected void flushingFailed(Throwable t) {_	};invoked,when,an,error,happens,while,flushing,sub,classes,may,choose,to,ignore,this,if,they,know,the,underlying,api,will,provide,an,error,notification,in,a,container,thread,p,defaults,to,no,op;protected,void,flushing,failed,throwable,t
AbstractListenerWriteFlushProcessor -> protected void flushingFailed(Throwable t);1530174524;Invoked when an error happens while flushing. Sub-classes may choose_to ignore this if they know the underlying API will provide an error_notification in a container thread._<p>Defaults to no-op.;protected void flushingFailed(Throwable t) {_	};invoked,when,an,error,happens,while,flushing,sub,classes,may,choose,to,ignore,this,if,they,know,the,underlying,api,will,provide,an,error,notification,in,a,container,thread,p,defaults,to,no,op;protected,void,flushing,failed,throwable,t
AbstractListenerWriteFlushProcessor -> protected void flushingFailed(Throwable t);1530174524;Invoked when an error happens while flushing. Sub-classes may choose_to ignore this if they know the underlying API will provide an error_notification in a container thread._<p>Defaults to no-op.;protected void flushingFailed(Throwable t) {_	};invoked,when,an,error,happens,while,flushing,sub,classes,may,choose,to,ignore,this,if,they,know,the,underlying,api,will,provide,an,error,notification,in,a,container,thread,p,defaults,to,no,op;protected,void,flushing,failed,throwable,t
AbstractListenerWriteFlushProcessor -> protected void flushingFailed(Throwable t);1530906258;Invoked when an error happens while flushing. Sub-classes may choose_to ignore this if they know the underlying API will provide an error_notification in a container thread._<p>Defaults to no-op.;protected void flushingFailed(Throwable t) {_	};invoked,when,an,error,happens,while,flushing,sub,classes,may,choose,to,ignore,this,if,they,know,the,underlying,api,will,provide,an,error,notification,in,a,container,thread,p,defaults,to,no,op;protected,void,flushing,failed,throwable,t
AbstractListenerWriteFlushProcessor -> protected void flushingFailed(Throwable t);1530912796;Invoked when an error happens while flushing. Sub-classes may choose_to ignore this if they know the underlying API will provide an error_notification in a container thread._<p>Defaults to no-op.;protected void flushingFailed(Throwable t) {_	};invoked,when,an,error,happens,while,flushing,sub,classes,may,choose,to,ignore,this,if,they,know,the,underlying,api,will,provide,an,error,notification,in,a,container,thread,p,defaults,to,no,op;protected,void,flushing,failed,throwable,t
AbstractListenerWriteFlushProcessor -> protected void flushingFailed(Throwable t);1531942370;Invoked when an error happens while flushing. Sub-classes may choose_to ignore this if they know the underlying API will provide an error_notification in a container thread._<p>Defaults to no-op.;protected void flushingFailed(Throwable t) {_	};invoked,when,an,error,happens,while,flushing,sub,classes,may,choose,to,ignore,this,if,they,know,the,underlying,api,will,provide,an,error,notification,in,a,container,thread,p,defaults,to,no,op;protected,void,flushing,failed,throwable,t
AbstractListenerWriteFlushProcessor -> protected void flushingFailed(Throwable t);1532436274;Invoked when an error happens while flushing. Sub-classes may choose_to ignore this if they know the underlying API will provide an error_notification in a container thread._<p>Defaults to no-op.;protected void flushingFailed(Throwable t) {_	};invoked,when,an,error,happens,while,flushing,sub,classes,may,choose,to,ignore,this,if,they,know,the,underlying,api,will,provide,an,error,notification,in,a,container,thread,p,defaults,to,no,op;protected,void,flushing,failed,throwable,t
AbstractListenerWriteFlushProcessor -> protected void flushingFailed(Throwable t);1536962806;Invoked when an error happens while flushing. Sub-classes may choose_to ignore this if they know the underlying API will provide an error_notification in a container thread._<p>Defaults to no-op.;protected void flushingFailed(Throwable t) {_	};invoked,when,an,error,happens,while,flushing,sub,classes,may,choose,to,ignore,this,if,they,know,the,underlying,api,will,provide,an,error,notification,in,a,container,thread,p,defaults,to,no,op;protected,void,flushing,failed,throwable,t
AbstractListenerWriteFlushProcessor -> protected void flushingFailed(Throwable t);1542613849;Invoked when an error happens while flushing. Sub-classes may choose_to ignore this if they know the underlying API will provide an error_notification in a container thread._<p>Defaults to no-op.;protected void flushingFailed(Throwable t) {_	};invoked,when,an,error,happens,while,flushing,sub,classes,may,choose,to,ignore,this,if,they,know,the,underlying,api,will,provide,an,error,notification,in,a,container,thread,p,defaults,to,no,op;protected,void,flushing,failed,throwable,t
AbstractListenerWriteFlushProcessor -> protected abstract boolean isFlushPending()_;1505458380;Whether flushing is pending.;protected abstract boolean isFlushPending()_;whether,flushing,is,pending;protected,abstract,boolean,is,flush,pending
AbstractListenerWriteFlushProcessor -> protected abstract boolean isFlushPending()_;1511293325;Whether flushing is pending.;protected abstract boolean isFlushPending()_;whether,flushing,is,pending;protected,abstract,boolean,is,flush,pending
AbstractListenerWriteFlushProcessor -> protected abstract boolean isFlushPending()_;1511318790;Whether flushing is pending.;protected abstract boolean isFlushPending()_;whether,flushing,is,pending;protected,abstract,boolean,is,flush,pending
AbstractListenerWriteFlushProcessor -> protected abstract boolean isFlushPending()_;1511411136;Whether flushing is pending.;protected abstract boolean isFlushPending()_;whether,flushing,is,pending;protected,abstract,boolean,is,flush,pending
AbstractListenerWriteFlushProcessor -> protected abstract boolean isFlushPending()_;1511450555;Whether flushing is pending.;protected abstract boolean isFlushPending()_;whether,flushing,is,pending;protected,abstract,boolean,is,flush,pending
AbstractListenerWriteFlushProcessor -> protected abstract boolean isFlushPending()_;1511452503;Whether flushing is pending.;protected abstract boolean isFlushPending()_;whether,flushing,is,pending;protected,abstract,boolean,is,flush,pending
AbstractListenerWriteFlushProcessor -> protected abstract boolean isFlushPending()_;1519859718;Whether flushing is pending.;protected abstract boolean isFlushPending()_;whether,flushing,is,pending;protected,abstract,boolean,is,flush,pending
AbstractListenerWriteFlushProcessor -> protected abstract boolean isFlushPending()_;1523471247;Whether flushing is pending._<p>This is primarily for the Servlet non-blocking I/O API where flush_cannot be called without a readyToWrite check.;protected abstract boolean isFlushPending()_;whether,flushing,is,pending,p,this,is,primarily,for,the,servlet,non,blocking,i,o,api,where,flush,cannot,be,called,without,a,ready,to,write,check;protected,abstract,boolean,is,flush,pending
AbstractListenerWriteFlushProcessor -> protected abstract boolean isFlushPending()_;1530174524;Whether flushing is pending._<p>This is primarily for the Servlet non-blocking I/O API where flush_cannot be called without a readyToWrite check.;protected abstract boolean isFlushPending()_;whether,flushing,is,pending,p,this,is,primarily,for,the,servlet,non,blocking,i,o,api,where,flush,cannot,be,called,without,a,ready,to,write,check;protected,abstract,boolean,is,flush,pending
AbstractListenerWriteFlushProcessor -> protected abstract boolean isFlushPending()_;1530174524;Whether flushing is pending._<p>This is primarily for the Servlet non-blocking I/O API where flush_cannot be called without a readyToWrite check.;protected abstract boolean isFlushPending()_;whether,flushing,is,pending,p,this,is,primarily,for,the,servlet,non,blocking,i,o,api,where,flush,cannot,be,called,without,a,ready,to,write,check;protected,abstract,boolean,is,flush,pending
AbstractListenerWriteFlushProcessor -> protected abstract boolean isFlushPending()_;1530906258;Whether flushing is pending._<p>This is primarily for the Servlet non-blocking I/O API where flush_cannot be called without a readyToWrite check.;protected abstract boolean isFlushPending()_;whether,flushing,is,pending,p,this,is,primarily,for,the,servlet,non,blocking,i,o,api,where,flush,cannot,be,called,without,a,ready,to,write,check;protected,abstract,boolean,is,flush,pending
AbstractListenerWriteFlushProcessor -> protected abstract boolean isFlushPending()_;1530912796;Whether flushing is pending._<p>This is primarily for the Servlet non-blocking I/O API where flush_cannot be called without a readyToWrite check.;protected abstract boolean isFlushPending()_;whether,flushing,is,pending,p,this,is,primarily,for,the,servlet,non,blocking,i,o,api,where,flush,cannot,be,called,without,a,ready,to,write,check;protected,abstract,boolean,is,flush,pending
AbstractListenerWriteFlushProcessor -> protected abstract boolean isFlushPending()_;1531942370;Whether flushing is pending._<p>This is primarily for the Servlet non-blocking I/O API where flush_cannot be called without a readyToWrite check.;protected abstract boolean isFlushPending()_;whether,flushing,is,pending,p,this,is,primarily,for,the,servlet,non,blocking,i,o,api,where,flush,cannot,be,called,without,a,ready,to,write,check;protected,abstract,boolean,is,flush,pending
AbstractListenerWriteFlushProcessor -> protected abstract boolean isFlushPending()_;1532436274;Whether flushing is pending._<p>This is primarily for the Servlet non-blocking I/O API where flush_cannot be called without a readyToWrite check.;protected abstract boolean isFlushPending()_;whether,flushing,is,pending,p,this,is,primarily,for,the,servlet,non,blocking,i,o,api,where,flush,cannot,be,called,without,a,ready,to,write,check;protected,abstract,boolean,is,flush,pending
AbstractListenerWriteFlushProcessor -> protected abstract boolean isFlushPending()_;1536962806;Whether flushing is pending._<p>This is primarily for the Servlet non-blocking I/O API where flush_cannot be called without a readyToWrite check.;protected abstract boolean isFlushPending()_;whether,flushing,is,pending,p,this,is,primarily,for,the,servlet,non,blocking,i,o,api,where,flush,cannot,be,called,without,a,ready,to,write,check;protected,abstract,boolean,is,flush,pending
AbstractListenerWriteFlushProcessor -> protected abstract boolean isFlushPending()_;1542613849;Whether flushing is pending._<p>This is primarily for the Servlet non-blocking I/O API where flush_cannot be called without a readyToWrite check.;protected abstract boolean isFlushPending()_;whether,flushing,is,pending,p,this,is,primarily,for,the,servlet,non,blocking,i,o,api,where,flush,cannot,be,called,without,a,ready,to,write,check;protected,abstract,boolean,is,flush,pending
AbstractListenerWriteFlushProcessor -> protected final void onFlushPossible();1505458380;Listeners can call this to notify when flushing is possible.;protected final void onFlushPossible() {_		this.state.get().onFlushPossible(this)__	};listeners,can,call,this,to,notify,when,flushing,is,possible;protected,final,void,on,flush,possible,this,state,get,on,flush,possible,this
AbstractListenerWriteFlushProcessor -> protected final void onFlushPossible();1511293325;Listeners can call this to notify when flushing is possible.;protected final void onFlushPossible() {_		this.state.get().onFlushPossible(this)__	};listeners,can,call,this,to,notify,when,flushing,is,possible;protected,final,void,on,flush,possible,this,state,get,on,flush,possible,this
AbstractListenerWriteFlushProcessor -> protected final void onFlushPossible();1511318790;Listeners can call this to notify when flushing is possible.;protected final void onFlushPossible() {_		this.state.get().onFlushPossible(this)__	};listeners,can,call,this,to,notify,when,flushing,is,possible;protected,final,void,on,flush,possible,this,state,get,on,flush,possible,this
AbstractListenerWriteFlushProcessor -> protected final void onFlushPossible();1511411136;Listeners can call this to notify when flushing is possible.;protected final void onFlushPossible() {_		this.state.get().onFlushPossible(this)__	};listeners,can,call,this,to,notify,when,flushing,is,possible;protected,final,void,on,flush,possible,this,state,get,on,flush,possible,this
AbstractListenerWriteFlushProcessor -> protected final void onFlushPossible();1511450555;Invoked when flusing is possible, either in the same thread after a check_via {@link #isWritePossible()}, or as a callback from the underlying_container.;protected final void onFlushPossible() {_		this.state.get().onFlushPossible(this)__	};invoked,when,flusing,is,possible,either,in,the,same,thread,after,a,check,via,link,is,write,possible,or,as,a,callback,from,the,underlying,container;protected,final,void,on,flush,possible,this,state,get,on,flush,possible,this
AbstractListenerWriteFlushProcessor -> protected final void onFlushPossible();1511452503;Invoked when flusing is possible, either in the same thread after a check_via {@link #isWritePossible()}, or as a callback from the underlying_container.;protected final void onFlushPossible() {_		this.state.get().onFlushPossible(this)__	};invoked,when,flusing,is,possible,either,in,the,same,thread,after,a,check,via,link,is,write,possible,or,as,a,callback,from,the,underlying,container;protected,final,void,on,flush,possible,this,state,get,on,flush,possible,this
AbstractListenerWriteFlushProcessor -> protected final void onFlushPossible();1519859718;Invoked when flusing is possible, either in the same thread after a check_via {@link #isWritePossible()}, or as a callback from the underlying_container.;protected final void onFlushPossible() {_		this.state.get().onFlushPossible(this)__	};invoked,when,flusing,is,possible,either,in,the,same,thread,after,a,check,via,link,is,write,possible,or,as,a,callback,from,the,underlying,container;protected,final,void,on,flush,possible,this,state,get,on,flush,possible,this
AbstractListenerWriteFlushProcessor -> protected final void onFlushPossible();1523471247;Invoked when flusing is possible, either in the same thread after a check_via {@link #isWritePossible()}, or as a callback from the underlying_container.;protected final void onFlushPossible() {_		this.state.get().onFlushPossible(this)__	};invoked,when,flusing,is,possible,either,in,the,same,thread,after,a,check,via,link,is,write,possible,or,as,a,callback,from,the,underlying,container;protected,final,void,on,flush,possible,this,state,get,on,flush,possible,this
AbstractListenerWriteFlushProcessor -> protected final void onFlushPossible();1530174524;Invoked when flusing is possible, either in the same thread after a check_via {@link #isWritePossible()}, or as a callback from the underlying_container.;protected final void onFlushPossible() {_		this.state.get().onFlushPossible(this)__	};invoked,when,flusing,is,possible,either,in,the,same,thread,after,a,check,via,link,is,write,possible,or,as,a,callback,from,the,underlying,container;protected,final,void,on,flush,possible,this,state,get,on,flush,possible,this
AbstractListenerWriteFlushProcessor -> protected final void onFlushPossible();1530174524;Invoked when flusing is possible, either in the same thread after a check_via {@link #isWritePossible()}, or as a callback from the underlying_container.;protected final void onFlushPossible() {_		this.state.get().onFlushPossible(this)__	};invoked,when,flusing,is,possible,either,in,the,same,thread,after,a,check,via,link,is,write,possible,or,as,a,callback,from,the,underlying,container;protected,final,void,on,flush,possible,this,state,get,on,flush,possible,this
AbstractListenerWriteFlushProcessor -> protected final void onFlushPossible();1530906258;Invoked when flusing is possible, either in the same thread after a check_via {@link #isWritePossible()}, or as a callback from the underlying_container.;protected final void onFlushPossible() {_		this.state.get().onFlushPossible(this)__	};invoked,when,flusing,is,possible,either,in,the,same,thread,after,a,check,via,link,is,write,possible,or,as,a,callback,from,the,underlying,container;protected,final,void,on,flush,possible,this,state,get,on,flush,possible,this
AbstractListenerWriteFlushProcessor -> protected final void onFlushPossible();1530912796;Invoked when flusing is possible, either in the same thread after a check_via {@link #isWritePossible()}, or as a callback from the underlying_container.;protected final void onFlushPossible() {_		this.state.get().onFlushPossible(this)__	};invoked,when,flusing,is,possible,either,in,the,same,thread,after,a,check,via,link,is,write,possible,or,as,a,callback,from,the,underlying,container;protected,final,void,on,flush,possible,this,state,get,on,flush,possible,this
AbstractListenerWriteFlushProcessor -> protected final void onFlushPossible();1531942370;Invoked when flusing is possible, either in the same thread after a check_via {@link #isWritePossible()}, or as a callback from the underlying_container.;protected final void onFlushPossible() {_		this.state.get().onFlushPossible(this)__	};invoked,when,flusing,is,possible,either,in,the,same,thread,after,a,check,via,link,is,write,possible,or,as,a,callback,from,the,underlying,container;protected,final,void,on,flush,possible,this,state,get,on,flush,possible,this
AbstractListenerWriteFlushProcessor -> protected final void onFlushPossible();1532436274;Invoked when flusing is possible, either in the same thread after a check_via {@link #isWritePossible()}, or as a callback from the underlying_container.;protected final void onFlushPossible() {_		this.state.get().onFlushPossible(this)__	};invoked,when,flusing,is,possible,either,in,the,same,thread,after,a,check,via,link,is,write,possible,or,as,a,callback,from,the,underlying,container;protected,final,void,on,flush,possible,this,state,get,on,flush,possible,this
AbstractListenerWriteFlushProcessor -> protected final void onFlushPossible();1536962806;Invoked when flusing is possible, either in the same thread after a check_via {@link #isWritePossible()}, or as a callback from the underlying_container.;protected final void onFlushPossible() {_		this.state.get().onFlushPossible(this)__	};invoked,when,flusing,is,possible,either,in,the,same,thread,after,a,check,via,link,is,write,possible,or,as,a,callback,from,the,underlying,container;protected,final,void,on,flush,possible,this,state,get,on,flush,possible,this
AbstractListenerWriteFlushProcessor -> protected final void onFlushPossible();1542613849;Invoked when flushing is possible, either in the same thread after a check_via {@link #isWritePossible()}, or as a callback from the underlying_container.;protected final void onFlushPossible() {_		this.state.get().onFlushPossible(this)__	};invoked,when,flushing,is,possible,either,in,the,same,thread,after,a,check,via,link,is,write,possible,or,as,a,callback,from,the,underlying,container;protected,final,void,on,flush,possible,this,state,get,on,flush,possible,this
