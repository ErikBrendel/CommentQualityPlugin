commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * Return the processing time of the request in milliseconds.  */ ;/**  * Return the processing time of the request in milliseconds.  */ public long getProcessingTimeMillis() {     return this.processingTimeMillis. }
true;public;0;4;/**  * Return the id of the HTTP session, if any.  */ ;/**  * Return the id of the HTTP session, if any.  */ @Nullable public String getSessionId() {     return this.sessionId. }
true;public;0;4;/**  * Return the name of the user that was associated with the request  * (usually the UserPrincipal).  * @see javax.servlet.http.HttpServletRequest#getUserPrincipal()  */ ;/**  * Return the name of the user that was associated with the request  * (usually the UserPrincipal).  * @see javax.servlet.http.HttpServletRequest#getUserPrincipal()  */ @Nullable public String getUserName() {     return this.userName. }
true;public;0;3;/**  * Return whether the request failed.  */ ;/**  * Return whether the request failed.  */ public boolean wasFailure() {     return (this.failureCause != null). }
true;public;0;4;/**  * Return the cause of failure, if any.  */ ;/**  * Return the cause of failure, if any.  */ @Nullable public Throwable getFailureCause() {     return this.failureCause. }
true;public;0;6;/**  * Return a short description of this event, only involving  * the most important context data.  */ ;/**  * Return a short description of this event, only involving  * the most important context data.  */ public String getShortDescription() {     StringBuilder sb = new StringBuilder().     sb.append("session=[").append(this.sessionId).append("]. ").     sb.append("user=[").append(this.userName).append("]. ").     return sb.toString(). }
true;public;0;15;/**  * Return a full description of this event, involving  * all available context data.  */ ;/**  * Return a full description of this event, involving  * all available context data.  */ public String getDescription() {     StringBuilder sb = new StringBuilder().     sb.append("session=[").append(this.sessionId).append("]. ").     sb.append("user=[").append(this.userName).append("]. ").     sb.append("time=[").append(this.processingTimeMillis).append("ms]. ").     sb.append("status=[").     if (!wasFailure()) {         sb.append("OK").     } else {         sb.append("failed: ").append(this.failureCause).     }     sb.append(']').     return sb.toString(). }
false;public;0;4;;@Override public String toString() {     return ("RequestHandledEvent: " + getDescription()). }
