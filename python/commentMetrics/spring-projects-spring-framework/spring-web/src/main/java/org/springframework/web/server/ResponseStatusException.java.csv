# id;timestamp;commentText;codeText;commentWords;codeWords
ResponseStatusException -> @Nullable 	public String getReason();1495868221;The reason explaining the exception (potentially {@code null} or empty).;@Nullable_	public String getReason() {_		return this.reason__	};the,reason,explaining,the,exception,potentially,code,null,or,empty;nullable,public,string,get,reason,return,this,reason
ResponseStatusException -> @Nullable 	public String getReason();1498780456;The reason explaining the exception (potentially {@code null} or empty).;@Nullable_	public String getReason() {_		return this.reason__	};the,reason,explaining,the,exception,potentially,code,null,or,empty;nullable,public,string,get,reason,return,this,reason
ResponseStatusException -> @Nullable 	public String getReason();1502974979;The reason explaining the exception (potentially {@code null} or empty).;@Nullable_	public String getReason() {_		return this.reason__	};the,reason,explaining,the,exception,potentially,code,null,or,empty;nullable,public,string,get,reason,return,this,reason
ResponseStatusException -> @Nullable 	public String getReason();1508162158;The reason explaining the exception (potentially {@code null} or empty).;@Nullable_	public String getReason() {_		return this.reason__	};the,reason,explaining,the,exception,potentially,code,null,or,empty;nullable,public,string,get,reason,return,this,reason
ResponseStatusException -> @Nullable 	public String getReason();1529721864;The reason explaining the exception (potentially {@code null} or empty).;@Nullable_	public String getReason() {_		return this.reason__	};the,reason,explaining,the,exception,potentially,code,null,or,empty;nullable,public,string,get,reason,return,this,reason
ResponseStatusException -> @Nullable 	public String getReason();1530174524;The reason explaining the exception (potentially {@code null} or empty).;@Nullable_	public String getReason() {_		return this.reason__	};the,reason,explaining,the,exception,potentially,code,null,or,empty;nullable,public,string,get,reason,return,this,reason
ResponseStatusException -> public ResponseStatusException(HttpStatus status, @Nullable String reason);1495868221;Constructor with a response status and a reason to add to the exception_message as explanation._@param status the HTTP status (required)_@param reason the associated reason (optional);public ResponseStatusException(HttpStatus status, @Nullable String reason) {_		this(status, reason, null)__	};constructor,with,a,response,status,and,a,reason,to,add,to,the,exception,message,as,explanation,param,status,the,http,status,required,param,reason,the,associated,reason,optional;public,response,status,exception,http,status,status,nullable,string,reason,this,status,reason,null
ResponseStatusException -> public ResponseStatusException(HttpStatus status, @Nullable String reason);1498780456;Constructor with a response status and a reason to add to the exception_message as explanation._@param status the HTTP status (required)_@param reason the associated reason (optional);public ResponseStatusException(HttpStatus status, @Nullable String reason) {_		this(status, reason, null)__	};constructor,with,a,response,status,and,a,reason,to,add,to,the,exception,message,as,explanation,param,status,the,http,status,required,param,reason,the,associated,reason,optional;public,response,status,exception,http,status,status,nullable,string,reason,this,status,reason,null
ResponseStatusException -> public ResponseStatusException(HttpStatus status, @Nullable String reason);1502974979;Constructor with a response status and a reason to add to the exception_message as explanation._@param status the HTTP status (required)_@param reason the associated reason (optional);public ResponseStatusException(HttpStatus status, @Nullable String reason) {_		this(status, reason, null)__	};constructor,with,a,response,status,and,a,reason,to,add,to,the,exception,message,as,explanation,param,status,the,http,status,required,param,reason,the,associated,reason,optional;public,response,status,exception,http,status,status,nullable,string,reason,this,status,reason,null
ResponseStatusException -> public ResponseStatusException(HttpStatus status, @Nullable String reason);1508162158;Constructor with a response status and a reason to add to the exception_message as explanation._@param status the HTTP status (required)_@param reason the associated reason (optional);public ResponseStatusException(HttpStatus status, @Nullable String reason) {_		this(status, reason, null)__	};constructor,with,a,response,status,and,a,reason,to,add,to,the,exception,message,as,explanation,param,status,the,http,status,required,param,reason,the,associated,reason,optional;public,response,status,exception,http,status,status,nullable,string,reason,this,status,reason,null
ResponseStatusException -> public ResponseStatusException(HttpStatus status, @Nullable String reason);1529721864;Constructor with a response status and a reason to add to the exception_message as explanation._@param status the HTTP status (required)_@param reason the associated reason (optional);public ResponseStatusException(HttpStatus status, @Nullable String reason) {_		this(status, reason, null)__	};constructor,with,a,response,status,and,a,reason,to,add,to,the,exception,message,as,explanation,param,status,the,http,status,required,param,reason,the,associated,reason,optional;public,response,status,exception,http,status,status,nullable,string,reason,this,status,reason,null
ResponseStatusException -> public ResponseStatusException(HttpStatus status, @Nullable String reason);1530174524;Constructor with a response status and a reason to add to the exception_message as explanation._@param status the HTTP status (required)_@param reason the associated reason (optional);public ResponseStatusException(HttpStatus status, @Nullable String reason) {_		this(status, reason, null)__	};constructor,with,a,response,status,and,a,reason,to,add,to,the,exception,message,as,explanation,param,status,the,http,status,required,param,reason,the,associated,reason,optional;public,response,status,exception,http,status,status,nullable,string,reason,this,status,reason,null
ResponseStatusException -> public ResponseStatusException(HttpStatus status, String reason);1468513835;Constructor with a response code and a reason to add to the exception_message as explanation.;public ResponseStatusException(HttpStatus status, String reason) {_		this(status, reason, null)__	};constructor,with,a,response,code,and,a,reason,to,add,to,the,exception,message,as,explanation;public,response,status,exception,http,status,status,string,reason,this,status,reason,null
ResponseStatusException -> public ResponseStatusException(HttpStatus status, String reason);1468532417;Constructor with a response code and a reason to add to the exception_message as explanation.;public ResponseStatusException(HttpStatus status, String reason) {_		this(status, reason, null)__	};constructor,with,a,response,code,and,a,reason,to,add,to,the,exception,message,as,explanation;public,response,status,exception,http,status,status,string,reason,this,status,reason,null
ResponseStatusException -> public ResponseStatusException(HttpStatus status, String reason);1472594294;Constructor with a response code and a reason to add to the exception_message as explanation.;public ResponseStatusException(HttpStatus status, String reason) {_		this(status, reason, null)__	};constructor,with,a,response,code,and,a,reason,to,add,to,the,exception,message,as,explanation;public,response,status,exception,http,status,status,string,reason,this,status,reason,null
ResponseStatusException -> public ResponseStatusException(HttpStatus status, String reason);1494067983;Constructor with a response status and a reason to add to the exception_message as explanation._@param status the HTTP status (required)_@param reason the associated reason (optional);public ResponseStatusException(HttpStatus status, String reason) {_		this(status, reason, null)__	};constructor,with,a,response,status,and,a,reason,to,add,to,the,exception,message,as,explanation,param,status,the,http,status,required,param,reason,the,associated,reason,optional;public,response,status,exception,http,status,status,string,reason,this,status,reason,null
ResponseStatusException -> public String getReason();1468513835;The reason explaining the exception.;public String getReason() {_		return this.reason__	};the,reason,explaining,the,exception;public,string,get,reason,return,this,reason
ResponseStatusException -> public String getReason();1468532417;The reason explaining the exception.;public String getReason() {_		return this.reason__	};the,reason,explaining,the,exception;public,string,get,reason,return,this,reason
ResponseStatusException -> public String getReason();1472594294;The reason explaining the exception.;public String getReason() {_		return this.reason__	};the,reason,explaining,the,exception;public,string,get,reason,return,this,reason
ResponseStatusException -> public String getReason();1494067983;The reason explaining the exception (potentially {@code null} or empty).;public String getReason() {_		return this.reason__	};the,reason,explaining,the,exception,potentially,code,null,or,empty;public,string,get,reason,return,this,reason
ResponseStatusException -> public ResponseStatusException(HttpStatus status);1494067983;Constructor with a response status._@param status the HTTP status (required);public ResponseStatusException(HttpStatus status) {_		this(status, null, null)__	};constructor,with,a,response,status,param,status,the,http,status,required;public,response,status,exception,http,status,status,this,status,null,null
ResponseStatusException -> public ResponseStatusException(HttpStatus status);1495868221;Constructor with a response status._@param status the HTTP status (required);public ResponseStatusException(HttpStatus status) {_		this(status, null, null)__	};constructor,with,a,response,status,param,status,the,http,status,required;public,response,status,exception,http,status,status,this,status,null,null
ResponseStatusException -> public ResponseStatusException(HttpStatus status);1498780456;Constructor with a response status._@param status the HTTP status (required);public ResponseStatusException(HttpStatus status) {_		this(status, null, null)__	};constructor,with,a,response,status,param,status,the,http,status,required;public,response,status,exception,http,status,status,this,status,null,null
ResponseStatusException -> public ResponseStatusException(HttpStatus status);1502974979;Constructor with a response status._@param status the HTTP status (required);public ResponseStatusException(HttpStatus status) {_		this(status, null, null)__	};constructor,with,a,response,status,param,status,the,http,status,required;public,response,status,exception,http,status,status,this,status,null,null
ResponseStatusException -> public ResponseStatusException(HttpStatus status);1508162158;Constructor with a response status._@param status the HTTP status (required);public ResponseStatusException(HttpStatus status) {_		this(status, null, null)__	};constructor,with,a,response,status,param,status,the,http,status,required;public,response,status,exception,http,status,status,this,status,null,null
ResponseStatusException -> public ResponseStatusException(HttpStatus status);1529721864;Constructor with a response status._@param status the HTTP status (required);public ResponseStatusException(HttpStatus status) {_		this(status, null, null)__	};constructor,with,a,response,status,param,status,the,http,status,required;public,response,status,exception,http,status,status,this,status,null,null
ResponseStatusException -> public ResponseStatusException(HttpStatus status);1530174524;Constructor with a response status._@param status the HTTP status (required);public ResponseStatusException(HttpStatus status) {_		this(status, null, null)__	};constructor,with,a,response,status,param,status,the,http,status,required;public,response,status,exception,http,status,status,this,status,null,null
ResponseStatusException -> public HttpStatus getStatus();1468513835;The HTTP status that fits the exception.;public HttpStatus getStatus() {_		return this.status__	};the,http,status,that,fits,the,exception;public,http,status,get,status,return,this,status
ResponseStatusException -> public HttpStatus getStatus();1468532417;The HTTP status that fits the exception.;public HttpStatus getStatus() {_		return this.status__	};the,http,status,that,fits,the,exception;public,http,status,get,status,return,this,status
ResponseStatusException -> public HttpStatus getStatus();1472594294;The HTTP status that fits the exception.;public HttpStatus getStatus() {_		return this.status__	};the,http,status,that,fits,the,exception;public,http,status,get,status,return,this,status
ResponseStatusException -> public HttpStatus getStatus();1494067983;The HTTP status that fits the exception (never {@code null}).;public HttpStatus getStatus() {_		return this.status__	};the,http,status,that,fits,the,exception,never,code,null;public,http,status,get,status,return,this,status
ResponseStatusException -> public HttpStatus getStatus();1495868221;The HTTP status that fits the exception (never {@code null}).;public HttpStatus getStatus() {_		return this.status__	};the,http,status,that,fits,the,exception,never,code,null;public,http,status,get,status,return,this,status
ResponseStatusException -> public HttpStatus getStatus();1498780456;The HTTP status that fits the exception (never {@code null}).;public HttpStatus getStatus() {_		return this.status__	};the,http,status,that,fits,the,exception,never,code,null;public,http,status,get,status,return,this,status
ResponseStatusException -> public HttpStatus getStatus();1502974979;The HTTP status that fits the exception (never {@code null}).;public HttpStatus getStatus() {_		return this.status__	};the,http,status,that,fits,the,exception,never,code,null;public,http,status,get,status,return,this,status
ResponseStatusException -> public HttpStatus getStatus();1508162158;The HTTP status that fits the exception (never {@code null}).;public HttpStatus getStatus() {_		return this.status__	};the,http,status,that,fits,the,exception,never,code,null;public,http,status,get,status,return,this,status
ResponseStatusException -> public HttpStatus getStatus();1529721864;The HTTP status that fits the exception (never {@code null}).;public HttpStatus getStatus() {_		return this.status__	};the,http,status,that,fits,the,exception,never,code,null;public,http,status,get,status,return,this,status
ResponseStatusException -> public HttpStatus getStatus();1530174524;The HTTP status that fits the exception (never {@code null}).;public HttpStatus getStatus() {_		return this.status__	};the,http,status,that,fits,the,exception,never,code,null;public,http,status,get,status,return,this,status
ResponseStatusException -> public ResponseStatusException(HttpStatus status, String reason, Throwable cause);1468513835;Constructor with a nested exception.;public ResponseStatusException(HttpStatus status, String reason, Throwable cause) {_		super("Request failure [status: " + status + ", reason: \"" + reason + "\"]", cause)__		Assert.notNull(status, "'status' is required")__		Assert.notNull(reason, "'reason' is required")__		this.status = status__		this.reason = reason__	};constructor,with,a,nested,exception;public,response,status,exception,http,status,status,string,reason,throwable,cause,super,request,failure,status,status,reason,reason,cause,assert,not,null,status,status,is,required,assert,not,null,reason,reason,is,required,this,status,status,this,reason,reason
ResponseStatusException -> public ResponseStatusException(HttpStatus status, String reason, Throwable cause);1468532417;Constructor with a nested exception.;public ResponseStatusException(HttpStatus status, String reason, Throwable cause) {_		super("Request failure [status: " + status + ", reason: \"" + reason + "\"]", cause)__		Assert.notNull(status, "'status' is required")__		Assert.notNull(reason, "'reason' is required")__		this.status = status__		this.reason = reason__	};constructor,with,a,nested,exception;public,response,status,exception,http,status,status,string,reason,throwable,cause,super,request,failure,status,status,reason,reason,cause,assert,not,null,status,status,is,required,assert,not,null,reason,reason,is,required,this,status,status,this,reason,reason
ResponseStatusException -> public ResponseStatusException(HttpStatus status, String reason, Throwable cause);1472594294;Constructor with a nested exception.;public ResponseStatusException(HttpStatus status, String reason, Throwable cause) {_		super("Request failure [status: " + status + ", reason: \"" + reason + "\"]", cause)__		Assert.notNull(status, "'status' is required")__		Assert.notNull(reason, "'reason' is required")__		this.status = status__		this.reason = reason__	};constructor,with,a,nested,exception;public,response,status,exception,http,status,status,string,reason,throwable,cause,super,request,failure,status,status,reason,reason,cause,assert,not,null,status,status,is,required,assert,not,null,reason,reason,is,required,this,status,status,this,reason,reason
ResponseStatusException -> public ResponseStatusException(HttpStatus status, String reason, Throwable cause);1494067983;Constructor with a response status and a reason to add to the exception_message as explanation, as well as a nested exception._@param status the HTTP status (required)_@param reason the associated reason (optional)_@param cause a nested exception (optional);public ResponseStatusException(HttpStatus status, String reason, Throwable cause) {_		super(null, cause)__		Assert.notNull(status, "HttpStatus is required")__		this.status = status__		this.reason = reason__	};constructor,with,a,response,status,and,a,reason,to,add,to,the,exception,message,as,explanation,as,well,as,a,nested,exception,param,status,the,http,status,required,param,reason,the,associated,reason,optional,param,cause,a,nested,exception,optional;public,response,status,exception,http,status,status,string,reason,throwable,cause,super,null,cause,assert,not,null,status,http,status,is,required,this,status,status,this,reason,reason
ResponseStatusException -> public ResponseStatusException(HttpStatus status, @Nullable String reason, @Nullable Throwable cause);1495868221;Constructor with a response status and a reason to add to the exception_message as explanation, as well as a nested exception._@param status the HTTP status (required)_@param reason the associated reason (optional)_@param cause a nested exception (optional);public ResponseStatusException(HttpStatus status, @Nullable String reason, @Nullable Throwable cause) {_		super(null, cause)__		Assert.notNull(status, "HttpStatus is required")__		this.status = status__		this.reason = reason__	};constructor,with,a,response,status,and,a,reason,to,add,to,the,exception,message,as,explanation,as,well,as,a,nested,exception,param,status,the,http,status,required,param,reason,the,associated,reason,optional,param,cause,a,nested,exception,optional;public,response,status,exception,http,status,status,nullable,string,reason,nullable,throwable,cause,super,null,cause,assert,not,null,status,http,status,is,required,this,status,status,this,reason,reason
ResponseStatusException -> public ResponseStatusException(HttpStatus status, @Nullable String reason, @Nullable Throwable cause);1498780456;Constructor with a response status and a reason to add to the exception_message as explanation, as well as a nested exception._@param status the HTTP status (required)_@param reason the associated reason (optional)_@param cause a nested exception (optional);public ResponseStatusException(HttpStatus status, @Nullable String reason, @Nullable Throwable cause) {_		super(null, cause)__		Assert.notNull(status, "HttpStatus is required")__		this.status = status__		this.reason = reason__	};constructor,with,a,response,status,and,a,reason,to,add,to,the,exception,message,as,explanation,as,well,as,a,nested,exception,param,status,the,http,status,required,param,reason,the,associated,reason,optional,param,cause,a,nested,exception,optional;public,response,status,exception,http,status,status,nullable,string,reason,nullable,throwable,cause,super,null,cause,assert,not,null,status,http,status,is,required,this,status,status,this,reason,reason
ResponseStatusException -> public ResponseStatusException(HttpStatus status, @Nullable String reason, @Nullable Throwable cause);1502974979;Constructor with a response status and a reason to add to the exception_message as explanation, as well as a nested exception._@param status the HTTP status (required)_@param reason the associated reason (optional)_@param cause a nested exception (optional);public ResponseStatusException(HttpStatus status, @Nullable String reason, @Nullable Throwable cause) {_		super(null, cause)__		Assert.notNull(status, "HttpStatus is required")__		this.status = status__		this.reason = reason__	};constructor,with,a,response,status,and,a,reason,to,add,to,the,exception,message,as,explanation,as,well,as,a,nested,exception,param,status,the,http,status,required,param,reason,the,associated,reason,optional,param,cause,a,nested,exception,optional;public,response,status,exception,http,status,status,nullable,string,reason,nullable,throwable,cause,super,null,cause,assert,not,null,status,http,status,is,required,this,status,status,this,reason,reason
ResponseStatusException -> public ResponseStatusException(HttpStatus status, @Nullable String reason, @Nullable Throwable cause);1508162158;Constructor with a response status and a reason to add to the exception_message as explanation, as well as a nested exception._@param status the HTTP status (required)_@param reason the associated reason (optional)_@param cause a nested exception (optional);public ResponseStatusException(HttpStatus status, @Nullable String reason, @Nullable Throwable cause) {_		super(null, cause)__		Assert.notNull(status, "HttpStatus is required")__		this.status = status__		this.reason = reason__	};constructor,with,a,response,status,and,a,reason,to,add,to,the,exception,message,as,explanation,as,well,as,a,nested,exception,param,status,the,http,status,required,param,reason,the,associated,reason,optional,param,cause,a,nested,exception,optional;public,response,status,exception,http,status,status,nullable,string,reason,nullable,throwable,cause,super,null,cause,assert,not,null,status,http,status,is,required,this,status,status,this,reason,reason
ResponseStatusException -> public ResponseStatusException(HttpStatus status, @Nullable String reason, @Nullable Throwable cause);1529721864;Constructor with a response status and a reason to add to the exception_message as explanation, as well as a nested exception._@param status the HTTP status (required)_@param reason the associated reason (optional)_@param cause a nested exception (optional);public ResponseStatusException(HttpStatus status, @Nullable String reason, @Nullable Throwable cause) {_		super(null, cause)__		Assert.notNull(status, "HttpStatus is required")__		this.status = status__		this.reason = reason__	};constructor,with,a,response,status,and,a,reason,to,add,to,the,exception,message,as,explanation,as,well,as,a,nested,exception,param,status,the,http,status,required,param,reason,the,associated,reason,optional,param,cause,a,nested,exception,optional;public,response,status,exception,http,status,status,nullable,string,reason,nullable,throwable,cause,super,null,cause,assert,not,null,status,http,status,is,required,this,status,status,this,reason,reason
ResponseStatusException -> public ResponseStatusException(HttpStatus status, @Nullable String reason, @Nullable Throwable cause);1530174524;Constructor with a response status and a reason to add to the exception_message as explanation, as well as a nested exception._@param status the HTTP status (required)_@param reason the associated reason (optional)_@param cause a nested exception (optional);public ResponseStatusException(HttpStatus status, @Nullable String reason, @Nullable Throwable cause) {_		super(null, cause)__		Assert.notNull(status, "HttpStatus is required")__		this.status = status__		this.reason = reason__	};constructor,with,a,response,status,and,a,reason,to,add,to,the,exception,message,as,explanation,as,well,as,a,nested,exception,param,status,the,http,status,required,param,reason,the,associated,reason,optional,param,cause,a,nested,exception,optional;public,response,status,exception,http,status,status,nullable,string,reason,nullable,throwable,cause,super,null,cause,assert,not,null,status,http,status,is,required,this,status,status,this,reason,reason
