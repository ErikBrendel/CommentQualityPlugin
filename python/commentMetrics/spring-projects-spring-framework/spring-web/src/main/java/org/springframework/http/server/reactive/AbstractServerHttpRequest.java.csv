# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractServerHttpRequest -> public AbstractServerHttpRequest(URI uri, @Nullable String contextPath, HttpHeaders headers);1500495740;Constructor with the URI and headers for the request._@param uri the URI for the request_@param contextPath the context path for the request_@param headers the headers for the request;public AbstractServerHttpRequest(URI uri, @Nullable String contextPath, HttpHeaders headers) {_		this.uri = uri__		this.path = RequestPath.parse(uri, contextPath)__		this.headers = HttpHeaders.readOnlyHttpHeaders(headers)__	};constructor,with,the,uri,and,headers,for,the,request,param,uri,the,uri,for,the,request,param,context,path,the,context,path,for,the,request,param,headers,the,headers,for,the,request;public,abstract,server,http,request,uri,uri,nullable,string,context,path,http,headers,headers,this,uri,uri,this,path,request,path,parse,uri,context,path,this,headers,http,headers,read,only,http,headers,headers
AbstractServerHttpRequest -> public AbstractServerHttpRequest(URI uri, @Nullable String contextPath, HttpHeaders headers);1501237594;Constructor with the URI and headers for the request._@param uri the URI for the request_@param contextPath the context path for the request_@param headers the headers for the request;public AbstractServerHttpRequest(URI uri, @Nullable String contextPath, HttpHeaders headers) {_		this.uri = uri__		this.path = RequestPath.parse(uri, contextPath)__		this.headers = HttpHeaders.readOnlyHttpHeaders(headers)__	};constructor,with,the,uri,and,headers,for,the,request,param,uri,the,uri,for,the,request,param,context,path,the,context,path,for,the,request,param,headers,the,headers,for,the,request;public,abstract,server,http,request,uri,uri,nullable,string,context,path,http,headers,headers,this,uri,uri,this,path,request,path,parse,uri,context,path,this,headers,http,headers,read,only,http,headers,headers
AbstractServerHttpRequest -> public AbstractServerHttpRequest(URI uri, @Nullable String contextPath, HttpHeaders headers);1502883271;Constructor with the URI and headers for the request._@param uri the URI for the request_@param contextPath the context path for the request_@param headers the headers for the request;public AbstractServerHttpRequest(URI uri, @Nullable String contextPath, HttpHeaders headers) {_		this.uri = uri__		this.path = RequestPath.parse(uri, contextPath)__		this.headers = HttpHeaders.readOnlyHttpHeaders(headers)__	};constructor,with,the,uri,and,headers,for,the,request,param,uri,the,uri,for,the,request,param,context,path,the,context,path,for,the,request,param,headers,the,headers,for,the,request;public,abstract,server,http,request,uri,uri,nullable,string,context,path,http,headers,headers,this,uri,uri,this,path,request,path,parse,uri,context,path,this,headers,http,headers,read,only,http,headers,headers
AbstractServerHttpRequest -> public AbstractServerHttpRequest(URI uri, @Nullable String contextPath, HttpHeaders headers);1506704643;Constructor with the URI and headers for the request._@param uri the URI for the request_@param contextPath the context path for the request_@param headers the headers for the request;public AbstractServerHttpRequest(URI uri, @Nullable String contextPath, HttpHeaders headers) {_		this.uri = uri__		this.path = RequestPath.parse(uri, contextPath)__		this.headers = HttpHeaders.readOnlyHttpHeaders(headers)__	};constructor,with,the,uri,and,headers,for,the,request,param,uri,the,uri,for,the,request,param,context,path,the,context,path,for,the,request,param,headers,the,headers,for,the,request;public,abstract,server,http,request,uri,uri,nullable,string,context,path,http,headers,headers,this,uri,uri,this,path,request,path,parse,uri,context,path,this,headers,http,headers,read,only,http,headers,headers
AbstractServerHttpRequest -> public AbstractServerHttpRequest(URI uri, @Nullable String contextPath, HttpHeaders headers);1510350192;Constructor with the URI and headers for the request._@param uri the URI for the request_@param contextPath the context path for the request_@param headers the headers for the request;public AbstractServerHttpRequest(URI uri, @Nullable String contextPath, HttpHeaders headers) {_		this.uri = uri__		this.path = RequestPath.parse(uri, contextPath)__		this.headers = HttpHeaders.readOnlyHttpHeaders(headers)__	};constructor,with,the,uri,and,headers,for,the,request,param,uri,the,uri,for,the,request,param,context,path,the,context,path,for,the,request,param,headers,the,headers,for,the,request;public,abstract,server,http,request,uri,uri,nullable,string,context,path,http,headers,headers,this,uri,uri,this,path,request,path,parse,uri,context,path,this,headers,http,headers,read,only,http,headers,headers
AbstractServerHttpRequest -> public AbstractServerHttpRequest(URI uri, @Nullable String contextPath, HttpHeaders headers);1510357070;Constructor with the URI and headers for the request._@param uri the URI for the request_@param contextPath the context path for the request_@param headers the headers for the request;public AbstractServerHttpRequest(URI uri, @Nullable String contextPath, HttpHeaders headers) {_		this.uri = uri__		this.path = RequestPath.parse(uri, contextPath)__		this.headers = HttpHeaders.readOnlyHttpHeaders(headers)__	};constructor,with,the,uri,and,headers,for,the,request,param,uri,the,uri,for,the,request,param,context,path,the,context,path,for,the,request,param,headers,the,headers,for,the,request;public,abstract,server,http,request,uri,uri,nullable,string,context,path,http,headers,headers,this,uri,uri,this,path,request,path,parse,uri,context,path,this,headers,http,headers,read,only,http,headers,headers
AbstractServerHttpRequest -> public AbstractServerHttpRequest(URI uri, @Nullable String contextPath, HttpHeaders headers);1530793947;Constructor with the URI and headers for the request._@param uri the URI for the request_@param contextPath the context path for the request_@param headers the headers for the request;public AbstractServerHttpRequest(URI uri, @Nullable String contextPath, HttpHeaders headers) {_		this.uri = uri__		this.path = RequestPath.parse(uri, contextPath)__		this.headers = HttpHeaders.readOnlyHttpHeaders(headers)__	};constructor,with,the,uri,and,headers,for,the,request,param,uri,the,uri,for,the,request,param,context,path,the,context,path,for,the,request,param,headers,the,headers,for,the,request;public,abstract,server,http,request,uri,uri,nullable,string,context,path,http,headers,headers,this,uri,uri,this,path,request,path,parse,uri,context,path,this,headers,http,headers,read,only,http,headers,headers
AbstractServerHttpRequest -> public AbstractServerHttpRequest(URI uri, @Nullable String contextPath, HttpHeaders headers);1530906258;Constructor with the URI and headers for the request._@param uri the URI for the request_@param contextPath the context path for the request_@param headers the headers for the request;public AbstractServerHttpRequest(URI uri, @Nullable String contextPath, HttpHeaders headers) {_		this.uri = uri__		this.path = RequestPath.parse(uri, contextPath)__		this.headers = HttpHeaders.readOnlyHttpHeaders(headers)__	};constructor,with,the,uri,and,headers,for,the,request,param,uri,the,uri,for,the,request,param,context,path,the,context,path,for,the,request,param,headers,the,headers,for,the,request;public,abstract,server,http,request,uri,uri,nullable,string,context,path,http,headers,headers,this,uri,uri,this,path,request,path,parse,uri,context,path,this,headers,http,headers,read,only,http,headers,headers
AbstractServerHttpRequest -> public AbstractServerHttpRequest(URI uri, @Nullable String contextPath, HttpHeaders headers);1530906264;Constructor with the URI and headers for the request._@param uri the URI for the request_@param contextPath the context path for the request_@param headers the headers for the request;public AbstractServerHttpRequest(URI uri, @Nullable String contextPath, HttpHeaders headers) {_		this.uri = uri__		this.path = RequestPath.parse(uri, contextPath)__		this.headers = HttpHeaders.readOnlyHttpHeaders(headers)__	};constructor,with,the,uri,and,headers,for,the,request,param,uri,the,uri,for,the,request,param,context,path,the,context,path,for,the,request,param,headers,the,headers,for,the,request;public,abstract,server,http,request,uri,uri,nullable,string,context,path,http,headers,headers,this,uri,uri,this,path,request,path,parse,uri,context,path,this,headers,http,headers,read,only,http,headers,headers
AbstractServerHttpRequest -> public AbstractServerHttpRequest(URI uri, @Nullable String contextPath, HttpHeaders headers);1530912796;Constructor with the URI and headers for the request._@param uri the URI for the request_@param contextPath the context path for the request_@param headers the headers for the request;public AbstractServerHttpRequest(URI uri, @Nullable String contextPath, HttpHeaders headers) {_		this.uri = uri__		this.path = RequestPath.parse(uri, contextPath)__		this.headers = HttpHeaders.readOnlyHttpHeaders(headers)__	};constructor,with,the,uri,and,headers,for,the,request,param,uri,the,uri,for,the,request,param,context,path,the,context,path,for,the,request,param,headers,the,headers,for,the,request;public,abstract,server,http,request,uri,uri,nullable,string,context,path,http,headers,headers,this,uri,uri,this,path,request,path,parse,uri,context,path,this,headers,http,headers,read,only,http,headers,headers
AbstractServerHttpRequest -> public AbstractServerHttpRequest(URI uri, @Nullable String contextPath, HttpHeaders headers);1530975243;Constructor with the URI and headers for the request._@param uri the URI for the request_@param contextPath the context path for the request_@param headers the headers for the request;public AbstractServerHttpRequest(URI uri, @Nullable String contextPath, HttpHeaders headers) {_		this.uri = uri__		this.path = RequestPath.parse(uri, contextPath)__		this.headers = HttpHeaders.readOnlyHttpHeaders(headers)__	};constructor,with,the,uri,and,headers,for,the,request,param,uri,the,uri,for,the,request,param,context,path,the,context,path,for,the,request,param,headers,the,headers,for,the,request;public,abstract,server,http,request,uri,uri,nullable,string,context,path,http,headers,headers,this,uri,uri,this,path,request,path,parse,uri,context,path,this,headers,http,headers,read,only,http,headers,headers
AbstractServerHttpRequest -> public AbstractServerHttpRequest(URI uri, @Nullable String contextPath, HttpHeaders headers);1531942370;Constructor with the URI and headers for the request._@param uri the URI for the request_@param contextPath the context path for the request_@param headers the headers for the request;public AbstractServerHttpRequest(URI uri, @Nullable String contextPath, HttpHeaders headers) {_		this.uri = uri__		this.path = RequestPath.parse(uri, contextPath)__		this.headers = HttpHeaders.readOnlyHttpHeaders(headers)__	};constructor,with,the,uri,and,headers,for,the,request,param,uri,the,uri,for,the,request,param,context,path,the,context,path,for,the,request,param,headers,the,headers,for,the,request;public,abstract,server,http,request,uri,uri,nullable,string,context,path,http,headers,headers,this,uri,uri,this,path,request,path,parse,uri,context,path,this,headers,http,headers,read,only,http,headers,headers
AbstractServerHttpRequest -> @Nullable 	protected abstract SslInfo initSslInfo()_;1510350192;Obtain SSL session information from the underlying "native" request._@return the SSL information or {@code null} if not available_@since 5.0.2;@Nullable_	protected abstract SslInfo initSslInfo()_;obtain,ssl,session,information,from,the,underlying,native,request,return,the,ssl,information,or,code,null,if,not,available,since,5,0,2;nullable,protected,abstract,ssl,info,init,ssl,info
AbstractServerHttpRequest -> @Nullable 	protected abstract SslInfo initSslInfo()_;1510357070;Obtain SSL session information from the underlying "native" request._@return the session information, or {@code null} if none available_@since 5.0.2;@Nullable_	protected abstract SslInfo initSslInfo()_;obtain,ssl,session,information,from,the,underlying,native,request,return,the,session,information,or,code,null,if,none,available,since,5,0,2;nullable,protected,abstract,ssl,info,init,ssl,info
AbstractServerHttpRequest -> @Nullable 	protected abstract SslInfo initSslInfo()_;1530793947;Obtain SSL session information from the underlying "native" request._@return the session information, or {@code null} if none available_@since 5.0.2;@Nullable_	protected abstract SslInfo initSslInfo()_;obtain,ssl,session,information,from,the,underlying,native,request,return,the,session,information,or,code,null,if,none,available,since,5,0,2;nullable,protected,abstract,ssl,info,init,ssl,info
AbstractServerHttpRequest -> @Nullable 	protected abstract SslInfo initSslInfo()_;1530906258;Obtain SSL session information from the underlying "native" request._@return the session information, or {@code null} if none available_@since 5.0.2;@Nullable_	protected abstract SslInfo initSslInfo()_;obtain,ssl,session,information,from,the,underlying,native,request,return,the,session,information,or,code,null,if,none,available,since,5,0,2;nullable,protected,abstract,ssl,info,init,ssl,info
AbstractServerHttpRequest -> @Nullable 	protected abstract SslInfo initSslInfo()_;1530906264;Obtain SSL session information from the underlying "native" request._@return the session information, or {@code null} if none available_@since 5.0.2;@Nullable_	protected abstract SslInfo initSslInfo()_;obtain,ssl,session,information,from,the,underlying,native,request,return,the,session,information,or,code,null,if,none,available,since,5,0,2;nullable,protected,abstract,ssl,info,init,ssl,info
AbstractServerHttpRequest -> @Nullable 	protected abstract SslInfo initSslInfo()_;1530912796;Obtain SSL session information from the underlying "native" request._@return the session information, or {@code null} if none available_@since 5.0.2;@Nullable_	protected abstract SslInfo initSslInfo()_;obtain,ssl,session,information,from,the,underlying,native,request,return,the,session,information,or,code,null,if,none,available,since,5,0,2;nullable,protected,abstract,ssl,info,init,ssl,info
AbstractServerHttpRequest -> @Nullable 	protected abstract SslInfo initSslInfo()_;1530975243;Obtain SSL session information from the underlying "native" request._@return the session information, or {@code null} if none available_@since 5.0.2;@Nullable_	protected abstract SslInfo initSslInfo()_;obtain,ssl,session,information,from,the,underlying,native,request,return,the,session,information,or,code,null,if,none,available,since,5,0,2;nullable,protected,abstract,ssl,info,init,ssl,info
AbstractServerHttpRequest -> @Nullable 	protected abstract SslInfo initSslInfo()_;1531942370;Obtain SSL session information from the underlying "native" request._@return the session information, or {@code null} if none available_@since 5.0.2;@Nullable_	protected abstract SslInfo initSslInfo()_;obtain,ssl,session,information,from,the,underlying,native,request,return,the,session,information,or,code,null,if,none,available,since,5,0,2;nullable,protected,abstract,ssl,info,init,ssl,info
AbstractServerHttpRequest -> protected MultiValueMap<String, String> initQueryParams();1477077448;A method for parsing of the query into name-value pairs. The return_value is turned into an immutable map and cached.__<p>Note that this method is invoked lazily on first access to_{@link #getQueryParams()}. The invocation is not synchronized but the_parsing is thread-safe nevertheless.;protected MultiValueMap<String, String> initQueryParams() {_		MultiValueMap<String, String> queryParams = new LinkedMultiValueMap<>()__		String query = getURI().getRawQuery()__		if (query != null) {_			Matcher matcher = QUERY_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				value = (value != null ? value : (StringUtils.hasLength(eq) ? "" : null))__				queryParams.add(name, value)__			}_		}_		return queryParams__	};a,method,for,parsing,of,the,query,into,name,value,pairs,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,first,access,to,link,get,query,params,the,invocation,is,not,synchronized,but,the,parsing,is,thread,safe,nevertheless;protected,multi,value,map,string,string,init,query,params,multi,value,map,string,string,query,params,new,linked,multi,value,map,string,query,get,uri,get,raw,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,value,value,null,value,string,utils,has,length,eq,null,query,params,add,name,value,return,query,params
AbstractServerHttpRequest -> protected MultiValueMap<String, String> initQueryParams();1484675207;A method for parsing of the query into name-value pairs. The return_value is turned into an immutable map and cached.__<p>Note that this method is invoked lazily on first access to_{@link #getQueryParams()}. The invocation is not synchronized but the_parsing is thread-safe nevertheless.;protected MultiValueMap<String, String> initQueryParams() {_		MultiValueMap<String, String> queryParams = new LinkedMultiValueMap<>()__		String query = getURI().getRawQuery()__		if (query != null) {_			Matcher matcher = QUERY_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				value = (value != null ? value : (StringUtils.hasLength(eq) ? "" : null))__				queryParams.add(decodeQueryParam(name), decodeQueryParam(value))__			}_		}_		return queryParams__	};a,method,for,parsing,of,the,query,into,name,value,pairs,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,first,access,to,link,get,query,params,the,invocation,is,not,synchronized,but,the,parsing,is,thread,safe,nevertheless;protected,multi,value,map,string,string,init,query,params,multi,value,map,string,string,query,params,new,linked,multi,value,map,string,query,get,uri,get,raw,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,value,value,null,value,string,utils,has,length,eq,null,query,params,add,decode,query,param,name,decode,query,param,value,return,query,params
AbstractServerHttpRequest -> protected MultiValueMap<String, String> initQueryParams();1484694546;A method for parsing of the query into name-value pairs. The return_value is turned into an immutable map and cached._<p>Note that this method is invoked lazily on first access to_{@link #getQueryParams()}. The invocation is not synchronized but the_parsing is thread-safe nevertheless.;protected MultiValueMap<String, String> initQueryParams() {_		MultiValueMap<String, String> queryParams = new LinkedMultiValueMap<>()__		String query = getURI().getRawQuery()__		if (query != null) {_			Matcher matcher = QUERY_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				value = (value != null ? value : (StringUtils.hasLength(eq) ? "" : null))__				queryParams.add(decodeQueryParam(name), decodeQueryParam(value))__			}_		}_		return queryParams__	};a,method,for,parsing,of,the,query,into,name,value,pairs,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,first,access,to,link,get,query,params,the,invocation,is,not,synchronized,but,the,parsing,is,thread,safe,nevertheless;protected,multi,value,map,string,string,init,query,params,multi,value,map,string,string,query,params,new,linked,multi,value,map,string,query,get,uri,get,raw,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,value,value,null,value,string,utils,has,length,eq,null,query,params,add,decode,query,param,name,decode,query,param,value,return,query,params
AbstractServerHttpRequest -> protected MultiValueMap<String, String> initQueryParams();1496837955;A method for parsing of the query into name-value pairs. The return_value is turned into an immutable map and cached._<p>Note that this method is invoked lazily on first access to_{@link #getQueryParams()}. The invocation is not synchronized but the_parsing is thread-safe nevertheless.;protected MultiValueMap<String, String> initQueryParams() {_		MultiValueMap<String, String> queryParams = new LinkedMultiValueMap<>()__		String query = getURI().getRawQuery()__		if (query != null) {_			Matcher matcher = QUERY_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = decodeQueryParam(matcher.group(1))__				String eq = matcher.group(2)__				String value = matcher.group(3)__				value = (value != null ? decodeQueryParam(value) : (StringUtils.hasLength(eq) ? "" : null))__				queryParams.add(name, value)__			}_		}_		return queryParams__	};a,method,for,parsing,of,the,query,into,name,value,pairs,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,first,access,to,link,get,query,params,the,invocation,is,not,synchronized,but,the,parsing,is,thread,safe,nevertheless;protected,multi,value,map,string,string,init,query,params,multi,value,map,string,string,query,params,new,linked,multi,value,map,string,query,get,uri,get,raw,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,decode,query,param,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,value,value,null,decode,query,param,value,string,utils,has,length,eq,null,query,params,add,name,value,return,query,params
AbstractServerHttpRequest -> protected MultiValueMap<String, String> initQueryParams();1497232764;A method for parsing of the query into name-value pairs. The return_value is turned into an immutable map and cached._<p>Note that this method is invoked lazily on first access to_{@link #getQueryParams()}. The invocation is not synchronized but the_parsing is thread-safe nevertheless.;protected MultiValueMap<String, String> initQueryParams() {_		MultiValueMap<String, String> queryParams = new LinkedMultiValueMap<>()__		String query = getURI().getRawQuery()__		if (query != null) {_			Matcher matcher = QUERY_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = decodeQueryParam(matcher.group(1))__				String eq = matcher.group(2)__				String value = matcher.group(3)__				value = (value != null ? decodeQueryParam(value) : (StringUtils.hasLength(eq) ? "" : null))__				queryParams.add(name, value)__			}_		}_		return queryParams__	};a,method,for,parsing,of,the,query,into,name,value,pairs,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,first,access,to,link,get,query,params,the,invocation,is,not,synchronized,but,the,parsing,is,thread,safe,nevertheless;protected,multi,value,map,string,string,init,query,params,multi,value,map,string,string,query,params,new,linked,multi,value,map,string,query,get,uri,get,raw,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,decode,query,param,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,value,value,null,decode,query,param,value,string,utils,has,length,eq,null,query,params,add,name,value,return,query,params
AbstractServerHttpRequest -> protected MultiValueMap<String, String> initQueryParams();1498780456;A method for parsing of the query into name-value pairs. The return_value is turned into an immutable map and cached._<p>Note that this method is invoked lazily on first access to_{@link #getQueryParams()}. The invocation is not synchronized but the_parsing is thread-safe nevertheless.;protected MultiValueMap<String, String> initQueryParams() {_		MultiValueMap<String, String> queryParams = new LinkedMultiValueMap<>()__		String query = getURI().getRawQuery()__		if (query != null) {_			Matcher matcher = QUERY_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = decodeQueryParam(matcher.group(1))__				String eq = matcher.group(2)__				String value = matcher.group(3)__				value = (value != null ? decodeQueryParam(value) : (StringUtils.hasLength(eq) ? "" : null))__				queryParams.add(name, value)__			}_		}_		return queryParams__	};a,method,for,parsing,of,the,query,into,name,value,pairs,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,first,access,to,link,get,query,params,the,invocation,is,not,synchronized,but,the,parsing,is,thread,safe,nevertheless;protected,multi,value,map,string,string,init,query,params,multi,value,map,string,string,query,params,new,linked,multi,value,map,string,query,get,uri,get,raw,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,decode,query,param,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,value,value,null,decode,query,param,value,string,utils,has,length,eq,null,query,params,add,name,value,return,query,params
AbstractServerHttpRequest -> protected MultiValueMap<String, String> initQueryParams();1499763525;A method for parsing of the query into name-value pairs. The return_value is turned into an immutable map and cached._<p>Note that this method is invoked lazily on first access to_{@link #getQueryParams()}. The invocation is not synchronized but the_parsing is thread-safe nevertheless.;protected MultiValueMap<String, String> initQueryParams() {_		MultiValueMap<String, String> queryParams = new LinkedMultiValueMap<>()__		String query = getURI().getRawQuery()__		if (query != null) {_			Matcher matcher = QUERY_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = decodeQueryParam(matcher.group(1))__				String eq = matcher.group(2)__				String value = matcher.group(3)__				value = (value != null ? decodeQueryParam(value) : (StringUtils.hasLength(eq) ? "" : null))__				queryParams.add(name, value)__			}_		}_		return queryParams__	};a,method,for,parsing,of,the,query,into,name,value,pairs,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,first,access,to,link,get,query,params,the,invocation,is,not,synchronized,but,the,parsing,is,thread,safe,nevertheless;protected,multi,value,map,string,string,init,query,params,multi,value,map,string,string,query,params,new,linked,multi,value,map,string,query,get,uri,get,raw,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,decode,query,param,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,value,value,null,decode,query,param,value,string,utils,has,length,eq,null,query,params,add,name,value,return,query,params
AbstractServerHttpRequest -> protected MultiValueMap<String, String> initQueryParams();1500495740;A method for parsing of the query into name-value pairs. The return_value is turned into an immutable map and cached._<p>Note that this method is invoked lazily on first access to_{@link #getQueryParams()}. The invocation is not synchronized but the_parsing is thread-safe nevertheless.;protected MultiValueMap<String, String> initQueryParams() {_		MultiValueMap<String, String> queryParams = new LinkedMultiValueMap<>()__		String query = getURI().getRawQuery()__		if (query != null) {_			Matcher matcher = QUERY_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = decodeQueryParam(matcher.group(1))__				String eq = matcher.group(2)__				String value = matcher.group(3)__				value = (value != null ? decodeQueryParam(value) : (StringUtils.hasLength(eq) ? "" : null))__				queryParams.add(name, value)__			}_		}_		return queryParams__	};a,method,for,parsing,of,the,query,into,name,value,pairs,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,first,access,to,link,get,query,params,the,invocation,is,not,synchronized,but,the,parsing,is,thread,safe,nevertheless;protected,multi,value,map,string,string,init,query,params,multi,value,map,string,string,query,params,new,linked,multi,value,map,string,query,get,uri,get,raw,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,decode,query,param,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,value,value,null,decode,query,param,value,string,utils,has,length,eq,null,query,params,add,name,value,return,query,params
AbstractServerHttpRequest -> protected MultiValueMap<String, String> initQueryParams();1501237594;A method for parsing of the query into name-value pairs. The return_value is turned into an immutable map and cached._<p>Note that this method is invoked lazily on first access to_{@link #getQueryParams()}. The invocation is not synchronized but the_parsing is thread-safe nevertheless.;protected MultiValueMap<String, String> initQueryParams() {_		MultiValueMap<String, String> queryParams = new LinkedMultiValueMap<>()__		String query = getURI().getRawQuery()__		if (query != null) {_			Matcher matcher = QUERY_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = decodeQueryParam(matcher.group(1))__				String eq = matcher.group(2)__				String value = matcher.group(3)__				value = (value != null ? decodeQueryParam(value) : (StringUtils.hasLength(eq) ? "" : null))__				queryParams.add(name, value)__			}_		}_		return queryParams__	};a,method,for,parsing,of,the,query,into,name,value,pairs,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,first,access,to,link,get,query,params,the,invocation,is,not,synchronized,but,the,parsing,is,thread,safe,nevertheless;protected,multi,value,map,string,string,init,query,params,multi,value,map,string,string,query,params,new,linked,multi,value,map,string,query,get,uri,get,raw,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,decode,query,param,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,value,value,null,decode,query,param,value,string,utils,has,length,eq,null,query,params,add,name,value,return,query,params
AbstractServerHttpRequest -> protected MultiValueMap<String, String> initQueryParams();1502883271;A method for parsing of the query into name-value pairs. The return_value is turned into an immutable map and cached._<p>Note that this method is invoked lazily on first access to_{@link #getQueryParams()}. The invocation is not synchronized but the_parsing is thread-safe nevertheless.;protected MultiValueMap<String, String> initQueryParams() {_		MultiValueMap<String, String> queryParams = new LinkedMultiValueMap<>()__		String query = getURI().getRawQuery()__		if (query != null) {_			Matcher matcher = QUERY_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = decodeQueryParam(matcher.group(1))__				String eq = matcher.group(2)__				String value = matcher.group(3)__				value = (value != null ? decodeQueryParam(value) : (StringUtils.hasLength(eq) ? "" : null))__				queryParams.add(name, value)__			}_		}_		return queryParams__	};a,method,for,parsing,of,the,query,into,name,value,pairs,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,first,access,to,link,get,query,params,the,invocation,is,not,synchronized,but,the,parsing,is,thread,safe,nevertheless;protected,multi,value,map,string,string,init,query,params,multi,value,map,string,string,query,params,new,linked,multi,value,map,string,query,get,uri,get,raw,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,decode,query,param,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,value,value,null,decode,query,param,value,string,utils,has,length,eq,null,query,params,add,name,value,return,query,params
AbstractServerHttpRequest -> protected MultiValueMap<String, String> initQueryParams();1506704643;A method for parsing of the query into name-value pairs. The return_value is turned into an immutable map and cached._<p>Note that this method is invoked lazily on first access to_{@link #getQueryParams()}. The invocation is not synchronized but the_parsing is thread-safe nevertheless.;protected MultiValueMap<String, String> initQueryParams() {_		MultiValueMap<String, String> queryParams = new LinkedMultiValueMap<>()__		String query = getURI().getRawQuery()__		if (query != null) {_			Matcher matcher = QUERY_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = decodeQueryParam(matcher.group(1))__				String eq = matcher.group(2)__				String value = matcher.group(3)__				value = (value != null ? decodeQueryParam(value) : (StringUtils.hasLength(eq) ? "" : null))__				queryParams.add(name, value)__			}_		}_		return queryParams__	};a,method,for,parsing,of,the,query,into,name,value,pairs,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,first,access,to,link,get,query,params,the,invocation,is,not,synchronized,but,the,parsing,is,thread,safe,nevertheless;protected,multi,value,map,string,string,init,query,params,multi,value,map,string,string,query,params,new,linked,multi,value,map,string,query,get,uri,get,raw,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,decode,query,param,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,value,value,null,decode,query,param,value,string,utils,has,length,eq,null,query,params,add,name,value,return,query,params
AbstractServerHttpRequest -> protected MultiValueMap<String, String> initQueryParams();1510350192;A method for parsing of the query into name-value pairs. The return_value is turned into an immutable map and cached._<p>Note that this method is invoked lazily on first access to_{@link #getQueryParams()}. The invocation is not synchronized but the_parsing is thread-safe nevertheless.;protected MultiValueMap<String, String> initQueryParams() {_		MultiValueMap<String, String> queryParams = new LinkedMultiValueMap<>()__		String query = getURI().getRawQuery()__		if (query != null) {_			Matcher matcher = QUERY_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = decodeQueryParam(matcher.group(1))__				String eq = matcher.group(2)__				String value = matcher.group(3)__				value = (value != null ? decodeQueryParam(value) : (StringUtils.hasLength(eq) ? "" : null))__				queryParams.add(name, value)__			}_		}_		return queryParams__	};a,method,for,parsing,of,the,query,into,name,value,pairs,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,first,access,to,link,get,query,params,the,invocation,is,not,synchronized,but,the,parsing,is,thread,safe,nevertheless;protected,multi,value,map,string,string,init,query,params,multi,value,map,string,string,query,params,new,linked,multi,value,map,string,query,get,uri,get,raw,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,decode,query,param,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,value,value,null,decode,query,param,value,string,utils,has,length,eq,null,query,params,add,name,value,return,query,params
AbstractServerHttpRequest -> protected MultiValueMap<String, String> initQueryParams();1510357070;A method for parsing of the query into name-value pairs. The return_value is turned into an immutable map and cached._<p>Note that this method is invoked lazily on first access to_{@link #getQueryParams()}. The invocation is not synchronized but the_parsing is thread-safe nevertheless.;protected MultiValueMap<String, String> initQueryParams() {_		MultiValueMap<String, String> queryParams = new LinkedMultiValueMap<>()__		String query = getURI().getRawQuery()__		if (query != null) {_			Matcher matcher = QUERY_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = decodeQueryParam(matcher.group(1))__				String eq = matcher.group(2)__				String value = matcher.group(3)__				value = (value != null ? decodeQueryParam(value) : (StringUtils.hasLength(eq) ? "" : null))__				queryParams.add(name, value)__			}_		}_		return queryParams__	};a,method,for,parsing,of,the,query,into,name,value,pairs,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,first,access,to,link,get,query,params,the,invocation,is,not,synchronized,but,the,parsing,is,thread,safe,nevertheless;protected,multi,value,map,string,string,init,query,params,multi,value,map,string,string,query,params,new,linked,multi,value,map,string,query,get,uri,get,raw,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,decode,query,param,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,value,value,null,decode,query,param,value,string,utils,has,length,eq,null,query,params,add,name,value,return,query,params
AbstractServerHttpRequest -> protected MultiValueMap<String, String> initQueryParams();1530793947;A method for parsing of the query into name-value pairs. The return_value is turned into an immutable map and cached._<p>Note that this method is invoked lazily on first access to_{@link #getQueryParams()}. The invocation is not synchronized but the_parsing is thread-safe nevertheless.;protected MultiValueMap<String, String> initQueryParams() {_		MultiValueMap<String, String> queryParams = new LinkedMultiValueMap<>()__		String query = getURI().getRawQuery()__		if (query != null) {_			Matcher matcher = QUERY_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = decodeQueryParam(matcher.group(1))__				String eq = matcher.group(2)__				String value = matcher.group(3)__				value = (value != null ? decodeQueryParam(value) : (StringUtils.hasLength(eq) ? "" : null))__				queryParams.add(name, value)__			}_		}_		return queryParams__	};a,method,for,parsing,of,the,query,into,name,value,pairs,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,first,access,to,link,get,query,params,the,invocation,is,not,synchronized,but,the,parsing,is,thread,safe,nevertheless;protected,multi,value,map,string,string,init,query,params,multi,value,map,string,string,query,params,new,linked,multi,value,map,string,query,get,uri,get,raw,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,decode,query,param,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,value,value,null,decode,query,param,value,string,utils,has,length,eq,null,query,params,add,name,value,return,query,params
AbstractServerHttpRequest -> protected MultiValueMap<String, String> initQueryParams();1530906258;A method for parsing of the query into name-value pairs. The return_value is turned into an immutable map and cached._<p>Note that this method is invoked lazily on first access to_{@link #getQueryParams()}. The invocation is not synchronized but the_parsing is thread-safe nevertheless.;protected MultiValueMap<String, String> initQueryParams() {_		MultiValueMap<String, String> queryParams = new LinkedMultiValueMap<>()__		String query = getURI().getRawQuery()__		if (query != null) {_			Matcher matcher = QUERY_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = decodeQueryParam(matcher.group(1))__				String eq = matcher.group(2)__				String value = matcher.group(3)__				value = (value != null ? decodeQueryParam(value) : (StringUtils.hasLength(eq) ? "" : null))__				queryParams.add(name, value)__			}_		}_		return queryParams__	};a,method,for,parsing,of,the,query,into,name,value,pairs,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,first,access,to,link,get,query,params,the,invocation,is,not,synchronized,but,the,parsing,is,thread,safe,nevertheless;protected,multi,value,map,string,string,init,query,params,multi,value,map,string,string,query,params,new,linked,multi,value,map,string,query,get,uri,get,raw,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,decode,query,param,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,value,value,null,decode,query,param,value,string,utils,has,length,eq,null,query,params,add,name,value,return,query,params
AbstractServerHttpRequest -> protected MultiValueMap<String, String> initQueryParams();1530906264;A method for parsing of the query into name-value pairs. The return_value is turned into an immutable map and cached._<p>Note that this method is invoked lazily on first access to_{@link #getQueryParams()}. The invocation is not synchronized but the_parsing is thread-safe nevertheless.;protected MultiValueMap<String, String> initQueryParams() {_		MultiValueMap<String, String> queryParams = new LinkedMultiValueMap<>()__		String query = getURI().getRawQuery()__		if (query != null) {_			Matcher matcher = QUERY_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = decodeQueryParam(matcher.group(1))__				String eq = matcher.group(2)__				String value = matcher.group(3)__				value = (value != null ? decodeQueryParam(value) : (StringUtils.hasLength(eq) ? "" : null))__				queryParams.add(name, value)__			}_		}_		return queryParams__	};a,method,for,parsing,of,the,query,into,name,value,pairs,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,first,access,to,link,get,query,params,the,invocation,is,not,synchronized,but,the,parsing,is,thread,safe,nevertheless;protected,multi,value,map,string,string,init,query,params,multi,value,map,string,string,query,params,new,linked,multi,value,map,string,query,get,uri,get,raw,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,decode,query,param,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,value,value,null,decode,query,param,value,string,utils,has,length,eq,null,query,params,add,name,value,return,query,params
AbstractServerHttpRequest -> protected MultiValueMap<String, String> initQueryParams();1530912796;A method for parsing of the query into name-value pairs. The return_value is turned into an immutable map and cached._<p>Note that this method is invoked lazily on first access to_{@link #getQueryParams()}. The invocation is not synchronized but the_parsing is thread-safe nevertheless.;protected MultiValueMap<String, String> initQueryParams() {_		MultiValueMap<String, String> queryParams = new LinkedMultiValueMap<>()__		String query = getURI().getRawQuery()__		if (query != null) {_			Matcher matcher = QUERY_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = decodeQueryParam(matcher.group(1))__				String eq = matcher.group(2)__				String value = matcher.group(3)__				value = (value != null ? decodeQueryParam(value) : (StringUtils.hasLength(eq) ? "" : null))__				queryParams.add(name, value)__			}_		}_		return queryParams__	};a,method,for,parsing,of,the,query,into,name,value,pairs,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,first,access,to,link,get,query,params,the,invocation,is,not,synchronized,but,the,parsing,is,thread,safe,nevertheless;protected,multi,value,map,string,string,init,query,params,multi,value,map,string,string,query,params,new,linked,multi,value,map,string,query,get,uri,get,raw,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,decode,query,param,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,value,value,null,decode,query,param,value,string,utils,has,length,eq,null,query,params,add,name,value,return,query,params
AbstractServerHttpRequest -> protected MultiValueMap<String, String> initQueryParams();1530975243;A method for parsing of the query into name-value pairs. The return_value is turned into an immutable map and cached._<p>Note that this method is invoked lazily on first access to_{@link #getQueryParams()}. The invocation is not synchronized but the_parsing is thread-safe nevertheless.;protected MultiValueMap<String, String> initQueryParams() {_		MultiValueMap<String, String> queryParams = new LinkedMultiValueMap<>()__		String query = getURI().getRawQuery()__		if (query != null) {_			Matcher matcher = QUERY_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = decodeQueryParam(matcher.group(1))__				String eq = matcher.group(2)__				String value = matcher.group(3)__				value = (value != null ? decodeQueryParam(value) : (StringUtils.hasLength(eq) ? "" : null))__				queryParams.add(name, value)__			}_		}_		return queryParams__	};a,method,for,parsing,of,the,query,into,name,value,pairs,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,first,access,to,link,get,query,params,the,invocation,is,not,synchronized,but,the,parsing,is,thread,safe,nevertheless;protected,multi,value,map,string,string,init,query,params,multi,value,map,string,string,query,params,new,linked,multi,value,map,string,query,get,uri,get,raw,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,decode,query,param,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,value,value,null,decode,query,param,value,string,utils,has,length,eq,null,query,params,add,name,value,return,query,params
AbstractServerHttpRequest -> protected MultiValueMap<String, String> initQueryParams();1531942370;A method for parsing of the query into name-value pairs. The return_value is turned into an immutable map and cached._<p>Note that this method is invoked lazily on first access to_{@link #getQueryParams()}. The invocation is not synchronized but the_parsing is thread-safe nevertheless.;protected MultiValueMap<String, String> initQueryParams() {_		MultiValueMap<String, String> queryParams = new LinkedMultiValueMap<>()__		String query = getURI().getRawQuery()__		if (query != null) {_			Matcher matcher = QUERY_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = decodeQueryParam(matcher.group(1))__				String eq = matcher.group(2)__				String value = matcher.group(3)__				value = (value != null ? decodeQueryParam(value) : (StringUtils.hasLength(eq) ? "" : null))__				queryParams.add(name, value)__			}_		}_		return queryParams__	};a,method,for,parsing,of,the,query,into,name,value,pairs,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,first,access,to,link,get,query,params,the,invocation,is,not,synchronized,but,the,parsing,is,thread,safe,nevertheless;protected,multi,value,map,string,string,init,query,params,multi,value,map,string,string,query,params,new,linked,multi,value,map,string,query,get,uri,get,raw,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,decode,query,param,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,value,value,null,decode,query,param,value,string,utils,has,length,eq,null,query,params,add,name,value,return,query,params
AbstractServerHttpRequest -> protected abstract URI initUri() throws URISyntaxException_;1468513835;Initialize a URI that represents the request. Invoked lazily on the first_call to {@link #getURI()} and then cached._@throws URISyntaxException;protected abstract URI initUri() throws URISyntaxException_;initialize,a,uri,that,represents,the,request,invoked,lazily,on,the,first,call,to,link,get,uri,and,then,cached,throws,urisyntax,exception;protected,abstract,uri,init,uri,throws,urisyntax,exception
AbstractServerHttpRequest -> protected abstract URI initUri() throws URISyntaxException_;1468532417;Initialize a URI that represents the request. Invoked lazily on the first_call to {@link #getURI()} and then cached._@throws URISyntaxException;protected abstract URI initUri() throws URISyntaxException_;initialize,a,uri,that,represents,the,request,invoked,lazily,on,the,first,call,to,link,get,uri,and,then,cached,throws,urisyntax,exception;protected,abstract,uri,init,uri,throws,urisyntax,exception
AbstractServerHttpRequest -> protected abstract URI initUri() throws URISyntaxException_;1472031624;Initialize a URI that represents the request._<p>Invoked lazily on the first call to {@link #getURI()} and then cached._@throws URISyntaxException;protected abstract URI initUri() throws URISyntaxException_;initialize,a,uri,that,represents,the,request,p,invoked,lazily,on,the,first,call,to,link,get,uri,and,then,cached,throws,urisyntax,exception;protected,abstract,uri,init,uri,throws,urisyntax,exception
AbstractServerHttpRequest -> public abstract <T> T getNativeRequest()_;1506704643;Return the underlying server response._<p><strong>Note:</strong> This is exposed mainly for internal framework_use such as WebSocket upgrades in the spring-webflux module.;public abstract <T> T getNativeRequest()_;return,the,underlying,server,response,p,strong,note,strong,this,is,exposed,mainly,for,internal,framework,use,such,as,web,socket,upgrades,in,the,spring,webflux,module;public,abstract,t,t,get,native,request
AbstractServerHttpRequest -> public abstract <T> T getNativeRequest()_;1510350192;Return the underlying server response._<p><strong>Note:</strong> This is exposed mainly for internal framework_use such as WebSocket upgrades in the spring-webflux module.;public abstract <T> T getNativeRequest()_;return,the,underlying,server,response,p,strong,note,strong,this,is,exposed,mainly,for,internal,framework,use,such,as,web,socket,upgrades,in,the,spring,webflux,module;public,abstract,t,t,get,native,request
AbstractServerHttpRequest -> public abstract <T> T getNativeRequest()_;1510357070;Return the underlying server response._<p><strong>Note:</strong> This is exposed mainly for internal framework_use such as WebSocket upgrades in the spring-webflux module.;public abstract <T> T getNativeRequest()_;return,the,underlying,server,response,p,strong,note,strong,this,is,exposed,mainly,for,internal,framework,use,such,as,web,socket,upgrades,in,the,spring,webflux,module;public,abstract,t,t,get,native,request
AbstractServerHttpRequest -> public abstract <T> T getNativeRequest()_;1530793947;Return the underlying server response._<p><strong>Note:</strong> This is exposed mainly for internal framework_use such as WebSocket upgrades in the spring-webflux module.;public abstract <T> T getNativeRequest()_;return,the,underlying,server,response,p,strong,note,strong,this,is,exposed,mainly,for,internal,framework,use,such,as,web,socket,upgrades,in,the,spring,webflux,module;public,abstract,t,t,get,native,request
AbstractServerHttpRequest -> public abstract <T> T getNativeRequest()_;1530906258;Return the underlying server response._<p><strong>Note:</strong> This is exposed mainly for internal framework_use such as WebSocket upgrades in the spring-webflux module.;public abstract <T> T getNativeRequest()_;return,the,underlying,server,response,p,strong,note,strong,this,is,exposed,mainly,for,internal,framework,use,such,as,web,socket,upgrades,in,the,spring,webflux,module;public,abstract,t,t,get,native,request
AbstractServerHttpRequest -> public abstract <T> T getNativeRequest()_;1530906264;Return the underlying server response._<p><strong>Note:</strong> This is exposed mainly for internal framework_use such as WebSocket upgrades in the spring-webflux module.;public abstract <T> T getNativeRequest()_;return,the,underlying,server,response,p,strong,note,strong,this,is,exposed,mainly,for,internal,framework,use,such,as,web,socket,upgrades,in,the,spring,webflux,module;public,abstract,t,t,get,native,request
AbstractServerHttpRequest -> public abstract <T> T getNativeRequest()_;1530912796;Return the underlying server response._<p><strong>Note:</strong> This is exposed mainly for internal framework_use such as WebSocket upgrades in the spring-webflux module.;public abstract <T> T getNativeRequest()_;return,the,underlying,server,response,p,strong,note,strong,this,is,exposed,mainly,for,internal,framework,use,such,as,web,socket,upgrades,in,the,spring,webflux,module;public,abstract,t,t,get,native,request
AbstractServerHttpRequest -> public abstract <T> T getNativeRequest()_;1530975243;Return the underlying server response._<p><strong>Note:</strong> This is exposed mainly for internal framework_use such as WebSocket upgrades in the spring-webflux module.;public abstract <T> T getNativeRequest()_;return,the,underlying,server,response,p,strong,note,strong,this,is,exposed,mainly,for,internal,framework,use,such,as,web,socket,upgrades,in,the,spring,webflux,module;public,abstract,t,t,get,native,request
AbstractServerHttpRequest -> public abstract <T> T getNativeRequest()_;1531942370;Return the underlying server response._<p><strong>Note:</strong> This is exposed mainly for internal framework_use such as WebSocket upgrades in the spring-webflux module.;public abstract <T> T getNativeRequest()_;return,the,underlying,server,response,p,strong,note,strong,this,is,exposed,mainly,for,internal,framework,use,such,as,web,socket,upgrades,in,the,spring,webflux,module;public,abstract,t,t,get,native,request
AbstractServerHttpRequest -> protected abstract HttpHeaders initHeaders()_;1468513835;Initialize the headers from the underlying request. Invoked lazily on the_first call to {@link #getHeaders()} and then cached.;protected abstract HttpHeaders initHeaders()_;initialize,the,headers,from,the,underlying,request,invoked,lazily,on,the,first,call,to,link,get,headers,and,then,cached;protected,abstract,http,headers,init,headers
AbstractServerHttpRequest -> protected abstract HttpHeaders initHeaders()_;1468532417;Initialize the headers from the underlying request. Invoked lazily on the_first call to {@link #getHeaders()} and then cached.;protected abstract HttpHeaders initHeaders()_;initialize,the,headers,from,the,underlying,request,invoked,lazily,on,the,first,call,to,link,get,headers,and,then,cached;protected,abstract,http,headers,init,headers
AbstractServerHttpRequest -> protected abstract HttpHeaders initHeaders()_;1472031624;Initialize the headers from the underlying request._<p>Invoked lazily on the first call to {@link #getHeaders()} and then cached.;protected abstract HttpHeaders initHeaders()_;initialize,the,headers,from,the,underlying,request,p,invoked,lazily,on,the,first,call,to,link,get,headers,and,then,cached;protected,abstract,http,headers,init,headers
AbstractServerHttpRequest -> protected abstract MultiValueMap<String, HttpCookie> initCookies()_;1468513835;Initialize the cookies from the underlying request. Invoked lazily on the_first access to cookies via {@link #getHeaders()} and then cached.;protected abstract MultiValueMap<String, HttpCookie> initCookies()_;initialize,the,cookies,from,the,underlying,request,invoked,lazily,on,the,first,access,to,cookies,via,link,get,headers,and,then,cached;protected,abstract,multi,value,map,string,http,cookie,init,cookies
AbstractServerHttpRequest -> protected abstract MultiValueMap<String, HttpCookie> initCookies()_;1468532417;Initialize the cookies from the underlying request. Invoked lazily on the_first access to cookies via {@link #getHeaders()} and then cached.;protected abstract MultiValueMap<String, HttpCookie> initCookies()_;initialize,the,cookies,from,the,underlying,request,invoked,lazily,on,the,first,access,to,cookies,via,link,get,headers,and,then,cached;protected,abstract,multi,value,map,string,http,cookie,init,cookies
AbstractServerHttpRequest -> protected abstract MultiValueMap<String, HttpCookie> initCookies()_;1472031624;Initialize the cookies from the underlying request._<p>Invoked lazily on the first access to cookies via {@link #getHeaders()}_and then cached.;protected abstract MultiValueMap<String, HttpCookie> initCookies()_;initialize,the,cookies,from,the,underlying,request,p,invoked,lazily,on,the,first,access,to,cookies,via,link,get,headers,and,then,cached;protected,abstract,multi,value,map,string,http,cookie,init,cookies
AbstractServerHttpRequest -> protected abstract MultiValueMap<String, HttpCookie> initCookies()_;1477077448;Obtain the cookies from the underlying "native" request and adapt those to_an {@link HttpCookie} map. The return value is turned into an immutable_map and cached._<p>Note that this method is invoked lazily on access to_{@link #getCookies()}. Sub-classes should synchronize cookie_initialization if the underlying "native" request does not provide_thread-safe access to cookie data.;protected abstract MultiValueMap<String, HttpCookie> initCookies()_;obtain,the,cookies,from,the,underlying,native,request,and,adapt,those,to,an,link,http,cookie,map,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,access,to,link,get,cookies,sub,classes,should,synchronize,cookie,initialization,if,the,underlying,native,request,does,not,provide,thread,safe,access,to,cookie,data;protected,abstract,multi,value,map,string,http,cookie,init,cookies
AbstractServerHttpRequest -> protected abstract MultiValueMap<String, HttpCookie> initCookies()_;1484675207;Obtain the cookies from the underlying "native" request and adapt those to_an {@link HttpCookie} map. The return value is turned into an immutable_map and cached._<p>Note that this method is invoked lazily on access to_{@link #getCookies()}. Sub-classes should synchronize cookie_initialization if the underlying "native" request does not provide_thread-safe access to cookie data.;protected abstract MultiValueMap<String, HttpCookie> initCookies()_;obtain,the,cookies,from,the,underlying,native,request,and,adapt,those,to,an,link,http,cookie,map,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,access,to,link,get,cookies,sub,classes,should,synchronize,cookie,initialization,if,the,underlying,native,request,does,not,provide,thread,safe,access,to,cookie,data;protected,abstract,multi,value,map,string,http,cookie,init,cookies
AbstractServerHttpRequest -> protected abstract MultiValueMap<String, HttpCookie> initCookies()_;1484694546;Obtain the cookies from the underlying "native" request and adapt those to_an {@link HttpCookie} map. The return value is turned into an immutable_map and cached._<p>Note that this method is invoked lazily on access to_{@link #getCookies()}. Sub-classes should synchronize cookie_initialization if the underlying "native" request does not provide_thread-safe access to cookie data.;protected abstract MultiValueMap<String, HttpCookie> initCookies()_;obtain,the,cookies,from,the,underlying,native,request,and,adapt,those,to,an,link,http,cookie,map,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,access,to,link,get,cookies,sub,classes,should,synchronize,cookie,initialization,if,the,underlying,native,request,does,not,provide,thread,safe,access,to,cookie,data;protected,abstract,multi,value,map,string,http,cookie,init,cookies
AbstractServerHttpRequest -> protected abstract MultiValueMap<String, HttpCookie> initCookies()_;1496837955;Obtain the cookies from the underlying "native" request and adapt those to_an {@link HttpCookie} map. The return value is turned into an immutable_map and cached._<p>Note that this method is invoked lazily on access to_{@link #getCookies()}. Sub-classes should synchronize cookie_initialization if the underlying "native" request does not provide_thread-safe access to cookie data.;protected abstract MultiValueMap<String, HttpCookie> initCookies()_;obtain,the,cookies,from,the,underlying,native,request,and,adapt,those,to,an,link,http,cookie,map,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,access,to,link,get,cookies,sub,classes,should,synchronize,cookie,initialization,if,the,underlying,native,request,does,not,provide,thread,safe,access,to,cookie,data;protected,abstract,multi,value,map,string,http,cookie,init,cookies
AbstractServerHttpRequest -> protected abstract MultiValueMap<String, HttpCookie> initCookies()_;1497232764;Obtain the cookies from the underlying "native" request and adapt those to_an {@link HttpCookie} map. The return value is turned into an immutable_map and cached._<p>Note that this method is invoked lazily on access to_{@link #getCookies()}. Sub-classes should synchronize cookie_initialization if the underlying "native" request does not provide_thread-safe access to cookie data.;protected abstract MultiValueMap<String, HttpCookie> initCookies()_;obtain,the,cookies,from,the,underlying,native,request,and,adapt,those,to,an,link,http,cookie,map,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,access,to,link,get,cookies,sub,classes,should,synchronize,cookie,initialization,if,the,underlying,native,request,does,not,provide,thread,safe,access,to,cookie,data;protected,abstract,multi,value,map,string,http,cookie,init,cookies
AbstractServerHttpRequest -> protected abstract MultiValueMap<String, HttpCookie> initCookies()_;1498780456;Obtain the cookies from the underlying "native" request and adapt those to_an {@link HttpCookie} map. The return value is turned into an immutable_map and cached._<p>Note that this method is invoked lazily on access to_{@link #getCookies()}. Sub-classes should synchronize cookie_initialization if the underlying "native" request does not provide_thread-safe access to cookie data.;protected abstract MultiValueMap<String, HttpCookie> initCookies()_;obtain,the,cookies,from,the,underlying,native,request,and,adapt,those,to,an,link,http,cookie,map,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,access,to,link,get,cookies,sub,classes,should,synchronize,cookie,initialization,if,the,underlying,native,request,does,not,provide,thread,safe,access,to,cookie,data;protected,abstract,multi,value,map,string,http,cookie,init,cookies
AbstractServerHttpRequest -> protected abstract MultiValueMap<String, HttpCookie> initCookies()_;1499763525;Obtain the cookies from the underlying "native" request and adapt those to_an {@link HttpCookie} map. The return value is turned into an immutable_map and cached._<p>Note that this method is invoked lazily on access to_{@link #getCookies()}. Sub-classes should synchronize cookie_initialization if the underlying "native" request does not provide_thread-safe access to cookie data.;protected abstract MultiValueMap<String, HttpCookie> initCookies()_;obtain,the,cookies,from,the,underlying,native,request,and,adapt,those,to,an,link,http,cookie,map,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,access,to,link,get,cookies,sub,classes,should,synchronize,cookie,initialization,if,the,underlying,native,request,does,not,provide,thread,safe,access,to,cookie,data;protected,abstract,multi,value,map,string,http,cookie,init,cookies
AbstractServerHttpRequest -> protected abstract MultiValueMap<String, HttpCookie> initCookies()_;1500495740;Obtain the cookies from the underlying "native" request and adapt those to_an {@link HttpCookie} map. The return value is turned into an immutable_map and cached._<p>Note that this method is invoked lazily on access to_{@link #getCookies()}. Sub-classes should synchronize cookie_initialization if the underlying "native" request does not provide_thread-safe access to cookie data.;protected abstract MultiValueMap<String, HttpCookie> initCookies()_;obtain,the,cookies,from,the,underlying,native,request,and,adapt,those,to,an,link,http,cookie,map,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,access,to,link,get,cookies,sub,classes,should,synchronize,cookie,initialization,if,the,underlying,native,request,does,not,provide,thread,safe,access,to,cookie,data;protected,abstract,multi,value,map,string,http,cookie,init,cookies
AbstractServerHttpRequest -> protected abstract MultiValueMap<String, HttpCookie> initCookies()_;1501237594;Obtain the cookies from the underlying "native" request and adapt those to_an {@link HttpCookie} map. The return value is turned into an immutable_map and cached._<p>Note that this method is invoked lazily on access to_{@link #getCookies()}. Sub-classes should synchronize cookie_initialization if the underlying "native" request does not provide_thread-safe access to cookie data.;protected abstract MultiValueMap<String, HttpCookie> initCookies()_;obtain,the,cookies,from,the,underlying,native,request,and,adapt,those,to,an,link,http,cookie,map,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,access,to,link,get,cookies,sub,classes,should,synchronize,cookie,initialization,if,the,underlying,native,request,does,not,provide,thread,safe,access,to,cookie,data;protected,abstract,multi,value,map,string,http,cookie,init,cookies
AbstractServerHttpRequest -> protected abstract MultiValueMap<String, HttpCookie> initCookies()_;1502883271;Obtain the cookies from the underlying "native" request and adapt those to_an {@link HttpCookie} map. The return value is turned into an immutable_map and cached._<p>Note that this method is invoked lazily on access to_{@link #getCookies()}. Sub-classes should synchronize cookie_initialization if the underlying "native" request does not provide_thread-safe access to cookie data.;protected abstract MultiValueMap<String, HttpCookie> initCookies()_;obtain,the,cookies,from,the,underlying,native,request,and,adapt,those,to,an,link,http,cookie,map,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,access,to,link,get,cookies,sub,classes,should,synchronize,cookie,initialization,if,the,underlying,native,request,does,not,provide,thread,safe,access,to,cookie,data;protected,abstract,multi,value,map,string,http,cookie,init,cookies
AbstractServerHttpRequest -> protected abstract MultiValueMap<String, HttpCookie> initCookies()_;1506704643;Obtain the cookies from the underlying "native" request and adapt those to_an {@link HttpCookie} map. The return value is turned into an immutable_map and cached._<p>Note that this method is invoked lazily on access to_{@link #getCookies()}. Sub-classes should synchronize cookie_initialization if the underlying "native" request does not provide_thread-safe access to cookie data.;protected abstract MultiValueMap<String, HttpCookie> initCookies()_;obtain,the,cookies,from,the,underlying,native,request,and,adapt,those,to,an,link,http,cookie,map,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,access,to,link,get,cookies,sub,classes,should,synchronize,cookie,initialization,if,the,underlying,native,request,does,not,provide,thread,safe,access,to,cookie,data;protected,abstract,multi,value,map,string,http,cookie,init,cookies
AbstractServerHttpRequest -> protected abstract MultiValueMap<String, HttpCookie> initCookies()_;1510350192;Obtain the cookies from the underlying "native" request and adapt those to_an {@link HttpCookie} map. The return value is turned into an immutable_map and cached._<p>Note that this method is invoked lazily on access to_{@link #getCookies()}. Sub-classes should synchronize cookie_initialization if the underlying "native" request does not provide_thread-safe access to cookie data.;protected abstract MultiValueMap<String, HttpCookie> initCookies()_;obtain,the,cookies,from,the,underlying,native,request,and,adapt,those,to,an,link,http,cookie,map,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,access,to,link,get,cookies,sub,classes,should,synchronize,cookie,initialization,if,the,underlying,native,request,does,not,provide,thread,safe,access,to,cookie,data;protected,abstract,multi,value,map,string,http,cookie,init,cookies
AbstractServerHttpRequest -> protected abstract MultiValueMap<String, HttpCookie> initCookies()_;1510357070;Obtain the cookies from the underlying "native" request and adapt those to_an {@link HttpCookie} map. The return value is turned into an immutable_map and cached._<p>Note that this method is invoked lazily on access to_{@link #getCookies()}. Sub-classes should synchronize cookie_initialization if the underlying "native" request does not provide_thread-safe access to cookie data.;protected abstract MultiValueMap<String, HttpCookie> initCookies()_;obtain,the,cookies,from,the,underlying,native,request,and,adapt,those,to,an,link,http,cookie,map,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,access,to,link,get,cookies,sub,classes,should,synchronize,cookie,initialization,if,the,underlying,native,request,does,not,provide,thread,safe,access,to,cookie,data;protected,abstract,multi,value,map,string,http,cookie,init,cookies
AbstractServerHttpRequest -> protected abstract MultiValueMap<String, HttpCookie> initCookies()_;1530793947;Obtain the cookies from the underlying "native" request and adapt those to_an {@link HttpCookie} map. The return value is turned into an immutable_map and cached._<p>Note that this method is invoked lazily on access to_{@link #getCookies()}. Sub-classes should synchronize cookie_initialization if the underlying "native" request does not provide_thread-safe access to cookie data.;protected abstract MultiValueMap<String, HttpCookie> initCookies()_;obtain,the,cookies,from,the,underlying,native,request,and,adapt,those,to,an,link,http,cookie,map,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,access,to,link,get,cookies,sub,classes,should,synchronize,cookie,initialization,if,the,underlying,native,request,does,not,provide,thread,safe,access,to,cookie,data;protected,abstract,multi,value,map,string,http,cookie,init,cookies
AbstractServerHttpRequest -> protected abstract MultiValueMap<String, HttpCookie> initCookies()_;1530906258;Obtain the cookies from the underlying "native" request and adapt those to_an {@link HttpCookie} map. The return value is turned into an immutable_map and cached._<p>Note that this method is invoked lazily on access to_{@link #getCookies()}. Sub-classes should synchronize cookie_initialization if the underlying "native" request does not provide_thread-safe access to cookie data.;protected abstract MultiValueMap<String, HttpCookie> initCookies()_;obtain,the,cookies,from,the,underlying,native,request,and,adapt,those,to,an,link,http,cookie,map,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,access,to,link,get,cookies,sub,classes,should,synchronize,cookie,initialization,if,the,underlying,native,request,does,not,provide,thread,safe,access,to,cookie,data;protected,abstract,multi,value,map,string,http,cookie,init,cookies
AbstractServerHttpRequest -> protected abstract MultiValueMap<String, HttpCookie> initCookies()_;1530906264;Obtain the cookies from the underlying "native" request and adapt those to_an {@link HttpCookie} map. The return value is turned into an immutable_map and cached._<p>Note that this method is invoked lazily on access to_{@link #getCookies()}. Sub-classes should synchronize cookie_initialization if the underlying "native" request does not provide_thread-safe access to cookie data.;protected abstract MultiValueMap<String, HttpCookie> initCookies()_;obtain,the,cookies,from,the,underlying,native,request,and,adapt,those,to,an,link,http,cookie,map,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,access,to,link,get,cookies,sub,classes,should,synchronize,cookie,initialization,if,the,underlying,native,request,does,not,provide,thread,safe,access,to,cookie,data;protected,abstract,multi,value,map,string,http,cookie,init,cookies
AbstractServerHttpRequest -> protected abstract MultiValueMap<String, HttpCookie> initCookies()_;1530912796;Obtain the cookies from the underlying "native" request and adapt those to_an {@link HttpCookie} map. The return value is turned into an immutable_map and cached._<p>Note that this method is invoked lazily on access to_{@link #getCookies()}. Sub-classes should synchronize cookie_initialization if the underlying "native" request does not provide_thread-safe access to cookie data.;protected abstract MultiValueMap<String, HttpCookie> initCookies()_;obtain,the,cookies,from,the,underlying,native,request,and,adapt,those,to,an,link,http,cookie,map,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,access,to,link,get,cookies,sub,classes,should,synchronize,cookie,initialization,if,the,underlying,native,request,does,not,provide,thread,safe,access,to,cookie,data;protected,abstract,multi,value,map,string,http,cookie,init,cookies
AbstractServerHttpRequest -> protected abstract MultiValueMap<String, HttpCookie> initCookies()_;1530975243;Obtain the cookies from the underlying "native" request and adapt those to_an {@link HttpCookie} map. The return value is turned into an immutable_map and cached._<p>Note that this method is invoked lazily on access to_{@link #getCookies()}. Sub-classes should synchronize cookie_initialization if the underlying "native" request does not provide_thread-safe access to cookie data.;protected abstract MultiValueMap<String, HttpCookie> initCookies()_;obtain,the,cookies,from,the,underlying,native,request,and,adapt,those,to,an,link,http,cookie,map,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,access,to,link,get,cookies,sub,classes,should,synchronize,cookie,initialization,if,the,underlying,native,request,does,not,provide,thread,safe,access,to,cookie,data;protected,abstract,multi,value,map,string,http,cookie,init,cookies
AbstractServerHttpRequest -> protected abstract MultiValueMap<String, HttpCookie> initCookies()_;1531942370;Obtain the cookies from the underlying "native" request and adapt those to_an {@link HttpCookie} map. The return value is turned into an immutable_map and cached._<p>Note that this method is invoked lazily on access to_{@link #getCookies()}. Sub-classes should synchronize cookie_initialization if the underlying "native" request does not provide_thread-safe access to cookie data.;protected abstract MultiValueMap<String, HttpCookie> initCookies()_;obtain,the,cookies,from,the,underlying,native,request,and,adapt,those,to,an,link,http,cookie,map,the,return,value,is,turned,into,an,immutable,map,and,cached,p,note,that,this,method,is,invoked,lazily,on,access,to,link,get,cookies,sub,classes,should,synchronize,cookie,initialization,if,the,underlying,native,request,does,not,provide,thread,safe,access,to,cookie,data;protected,abstract,multi,value,map,string,http,cookie,init,cookies
AbstractServerHttpRequest -> public AbstractServerHttpRequest(URI uri, HttpHeaders headers);1477077448;Constructor with the URI and headers for the request._@param uri the URI for the request_@param headers the headers for the request;public AbstractServerHttpRequest(URI uri, HttpHeaders headers) {_		this.uri = uri__		this.headers = HttpHeaders.readOnlyHttpHeaders(headers)__	};constructor,with,the,uri,and,headers,for,the,request,param,uri,the,uri,for,the,request,param,headers,the,headers,for,the,request;public,abstract,server,http,request,uri,uri,http,headers,headers,this,uri,uri,this,headers,http,headers,read,only,http,headers,headers
AbstractServerHttpRequest -> public AbstractServerHttpRequest(URI uri, HttpHeaders headers);1484675207;Constructor with the URI and headers for the request._@param uri the URI for the request_@param headers the headers for the request;public AbstractServerHttpRequest(URI uri, HttpHeaders headers) {_		this.uri = uri__		this.headers = HttpHeaders.readOnlyHttpHeaders(headers)__	};constructor,with,the,uri,and,headers,for,the,request,param,uri,the,uri,for,the,request,param,headers,the,headers,for,the,request;public,abstract,server,http,request,uri,uri,http,headers,headers,this,uri,uri,this,headers,http,headers,read,only,http,headers,headers
AbstractServerHttpRequest -> public AbstractServerHttpRequest(URI uri, HttpHeaders headers);1484694546;Constructor with the URI and headers for the request._@param uri the URI for the request_@param headers the headers for the request;public AbstractServerHttpRequest(URI uri, HttpHeaders headers) {_		this.uri = uri__		this.headers = HttpHeaders.readOnlyHttpHeaders(headers)__	};constructor,with,the,uri,and,headers,for,the,request,param,uri,the,uri,for,the,request,param,headers,the,headers,for,the,request;public,abstract,server,http,request,uri,uri,http,headers,headers,this,uri,uri,this,headers,http,headers,read,only,http,headers,headers
AbstractServerHttpRequest -> public AbstractServerHttpRequest(URI uri, HttpHeaders headers);1496837955;Constructor with the URI and headers for the request._@param uri the URI for the request_@param headers the headers for the request;public AbstractServerHttpRequest(URI uri, HttpHeaders headers) {_		this.uri = uri__		this.headers = HttpHeaders.readOnlyHttpHeaders(headers)__	};constructor,with,the,uri,and,headers,for,the,request,param,uri,the,uri,for,the,request,param,headers,the,headers,for,the,request;public,abstract,server,http,request,uri,uri,http,headers,headers,this,uri,uri,this,headers,http,headers,read,only,http,headers,headers
AbstractServerHttpRequest -> @Nullable 	protected String initId();1530906264;Obtain the request id to use, or {@code null} in which case the Object_identity of this request instance is used._@since 5.1;@Nullable_	protected String initId() {_		return null__	};obtain,the,request,id,to,use,or,code,null,in,which,case,the,object,identity,of,this,request,instance,is,used,since,5,1;nullable,protected,string,init,id,return,null
AbstractServerHttpRequest -> @Nullable 	protected String initId();1530912796;Obtain the request id to use, or {@code null} in which case the Object_identity of this request instance is used._@since 5.1;@Nullable_	protected String initId() {_		return null__	};obtain,the,request,id,to,use,or,code,null,in,which,case,the,object,identity,of,this,request,instance,is,used,since,5,1;nullable,protected,string,init,id,return,null
AbstractServerHttpRequest -> @Nullable 	protected String initId();1530975243;Obtain the request id to use, or {@code null} in which case the Object_identity of this request instance is used._@since 5.1;@Nullable_	protected String initId() {_		return null__	};obtain,the,request,id,to,use,or,code,null,in,which,case,the,object,identity,of,this,request,instance,is,used,since,5,1;nullable,protected,string,init,id,return,null
AbstractServerHttpRequest -> @Nullable 	protected String initId();1531942370;Obtain the request id to use, or {@code null} in which case the Object_identity of this request instance is used._@since 5.1;@Nullable_	protected String initId() {_		return null__	};obtain,the,request,id,to,use,or,code,null,in,which,case,the,object,identity,of,this,request,instance,is,used,since,5,1;nullable,protected,string,init,id,return,null
AbstractServerHttpRequest -> String getLogPrefix();1530906258;For internal use in logging at the HTTP adapter layer._@since 5.1;String getLogPrefix() {_		if (this.logPrefix == null) {_			this.logPrefix = "[" + getConnectionId() + "] "__		}_		return this.logPrefix__	};for,internal,use,in,logging,at,the,http,adapter,layer,since,5,1;string,get,log,prefix,if,this,log,prefix,null,this,log,prefix,get,connection,id,return,this,log,prefix
AbstractServerHttpRequest -> String getLogPrefix();1530906264;For internal use in logging at the HTTP adapter layer._@since 5.1;String getLogPrefix() {_		if (this.logPrefix == null) {_			this.logPrefix = "[" + getId() + "] "__		}_		return this.logPrefix__	};for,internal,use,in,logging,at,the,http,adapter,layer,since,5,1;string,get,log,prefix,if,this,log,prefix,null,this,log,prefix,get,id,return,this,log,prefix
AbstractServerHttpRequest -> String getLogPrefix();1530912796;For internal use in logging at the HTTP adapter layer._@since 5.1;String getLogPrefix() {_		if (this.logPrefix == null) {_			this.logPrefix = "[" + getId() + "] "__		}_		return this.logPrefix__	};for,internal,use,in,logging,at,the,http,adapter,layer,since,5,1;string,get,log,prefix,if,this,log,prefix,null,this,log,prefix,get,id,return,this,log,prefix
AbstractServerHttpRequest -> String getLogPrefix();1530975243;For internal use in logging at the HTTP adapter layer._@since 5.1;String getLogPrefix() {_		if (this.logPrefix == null) {_			this.logPrefix = "[" + getId() + "] "__		}_		return this.logPrefix__	};for,internal,use,in,logging,at,the,http,adapter,layer,since,5,1;string,get,log,prefix,if,this,log,prefix,null,this,log,prefix,get,id,return,this,log,prefix
AbstractServerHttpRequest -> String getLogPrefix();1531942370;For internal use in logging at the HTTP adapter layer._@since 5.1;String getLogPrefix() {_		if (this.logPrefix == null) {_			this.logPrefix = "[" + getId() + "] "__		}_		return this.logPrefix__	};for,internal,use,in,logging,at,the,http,adapter,layer,since,5,1;string,get,log,prefix,if,this,log,prefix,null,this,log,prefix,get,id,return,this,log,prefix
AbstractServerHttpRequest -> public AbstractServerHttpRequest(URI uri, String contextPath, HttpHeaders headers);1497232764;Constructor with the URI and headers for the request._@param uri the URI for the request_@param contextPath the context path for the request_@param headers the headers for the request;public AbstractServerHttpRequest(URI uri, String contextPath, HttpHeaders headers) {_		this.uri = uri__		this.path = new DefaultRequestPath(uri, contextPath, StandardCharsets.UTF_8)__		this.headers = HttpHeaders.readOnlyHttpHeaders(headers)__	};constructor,with,the,uri,and,headers,for,the,request,param,uri,the,uri,for,the,request,param,context,path,the,context,path,for,the,request,param,headers,the,headers,for,the,request;public,abstract,server,http,request,uri,uri,string,context,path,http,headers,headers,this,uri,uri,this,path,new,default,request,path,uri,context,path,standard,charsets,this,headers,http,headers,read,only,http,headers,headers
AbstractServerHttpRequest -> public AbstractServerHttpRequest(URI uri, String contextPath, HttpHeaders headers);1498780456;Constructor with the URI and headers for the request._@param uri the URI for the request_@param contextPath the context path for the request_@param headers the headers for the request;public AbstractServerHttpRequest(URI uri, String contextPath, HttpHeaders headers) {_		this.uri = uri__		this.path = new DefaultRequestPath(uri, contextPath, StandardCharsets.UTF_8)__		this.headers = HttpHeaders.readOnlyHttpHeaders(headers)__	};constructor,with,the,uri,and,headers,for,the,request,param,uri,the,uri,for,the,request,param,context,path,the,context,path,for,the,request,param,headers,the,headers,for,the,request;public,abstract,server,http,request,uri,uri,string,context,path,http,headers,headers,this,uri,uri,this,path,new,default,request,path,uri,context,path,standard,charsets,this,headers,http,headers,read,only,http,headers,headers
AbstractServerHttpRequest -> public AbstractServerHttpRequest(URI uri, String contextPath, HttpHeaders headers);1499763525;Constructor with the URI and headers for the request._@param uri the URI for the request_@param contextPath the context path for the request_@param headers the headers for the request;public AbstractServerHttpRequest(URI uri, String contextPath, HttpHeaders headers) {_		this.uri = uri__		this.path = RequestPath.parse(uri, contextPath)__		this.headers = HttpHeaders.readOnlyHttpHeaders(headers)__	};constructor,with,the,uri,and,headers,for,the,request,param,uri,the,uri,for,the,request,param,context,path,the,context,path,for,the,request,param,headers,the,headers,for,the,request;public,abstract,server,http,request,uri,uri,string,context,path,http,headers,headers,this,uri,uri,this,path,request,path,parse,uri,context,path,this,headers,http,headers,read,only,http,headers,headers
