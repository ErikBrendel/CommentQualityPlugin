# id;timestamp;commentText;codeText;commentWords;codeWords
FixedContentNegotiationStrategy -> public List<MediaType> getContentTypes();1491926110;Return the configured list of media types.;public List<MediaType> getContentTypes() {_		return this.contentTypes__	};return,the,configured,list,of,media,types;public,list,media,type,get,content,types,return,this,content,types
FixedContentNegotiationStrategy -> public List<MediaType> getContentTypes();1529361191;Return the configured list of media types.;public List<MediaType> getContentTypes() {_		return this.contentTypes__	};return,the,configured,list,of,media,types;public,list,media,type,get,content,types,return,this,content,types
FixedContentNegotiationStrategy -> public FixedContentNegotiationStrategy(MediaType defaultContentType);1340380546;Create an instance that always returns the given content type.;public FixedContentNegotiationStrategy(MediaType defaultContentType) {_		this.defaultContentType = defaultContentType__	};create,an,instance,that,always,returns,the,given,content,type;public,fixed,content,negotiation,strategy,media,type,default,content,type,this,default,content,type,default,content,type
FixedContentNegotiationStrategy -> public FixedContentNegotiationStrategy(MediaType defaultContentType);1356735495;Create an instance that always returns the given content type.;public FixedContentNegotiationStrategy(MediaType defaultContentType) {_		this.defaultContentType = defaultContentType__	};create,an,instance,that,always,returns,the,given,content,type;public,fixed,content,negotiation,strategy,media,type,default,content,type,this,default,content,type,default,content,type
FixedContentNegotiationStrategy -> public FixedContentNegotiationStrategy(MediaType defaultContentType);1357119239;Create an instance that always returns the given content type.;public FixedContentNegotiationStrategy(MediaType defaultContentType) {_		this.defaultContentType = defaultContentType__	};create,an,instance,that,always,returns,the,given,content,type;public,fixed,content,negotiation,strategy,media,type,default,content,type,this,default,content,type,default,content,type
FixedContentNegotiationStrategy -> public FixedContentNegotiationStrategy(MediaType defaultContentType);1368482696;Create an instance that always returns the given content type.;public FixedContentNegotiationStrategy(MediaType defaultContentType) {_		this.defaultContentType = defaultContentType__	};create,an,instance,that,always,returns,the,given,content,type;public,fixed,content,negotiation,strategy,media,type,default,content,type,this,default,content,type,default,content,type
FixedContentNegotiationStrategy -> public FixedContentNegotiationStrategy(MediaType defaultContentType);1413848647;Create an instance that always returns the given content type.;public FixedContentNegotiationStrategy(MediaType defaultContentType) {_		this.defaultContentType = defaultContentType__	};create,an,instance,that,always,returns,the,given,content,type;public,fixed,content,negotiation,strategy,media,type,default,content,type,this,default,content,type,default,content,type
FixedContentNegotiationStrategy -> public FixedContentNegotiationStrategy(MediaType contentType);1443560917;Create an instance with the given content type.;public FixedContentNegotiationStrategy(MediaType contentType) {_		this.contentType = Collections.singletonList(contentType)__	};create,an,instance,with,the,given,content,type;public,fixed,content,negotiation,strategy,media,type,content,type,this,content,type,collections,singleton,list,content,type
FixedContentNegotiationStrategy -> public FixedContentNegotiationStrategy(MediaType contentType);1464879764;Create an instance with the given content type.;public FixedContentNegotiationStrategy(MediaType contentType) {_		this.contentType = Collections.singletonList(contentType)__	};create,an,instance,with,the,given,content,type;public,fixed,content,negotiation,strategy,media,type,content,type,this,content,type,collections,singleton,list,content,type
FixedContentNegotiationStrategy -> public FixedContentNegotiationStrategy(MediaType contentType);1491926110;Constructor with a single default {@code MediaType}.;public FixedContentNegotiationStrategy(MediaType contentType) {_		this(Collections.singletonList(contentType))__	};constructor,with,a,single,default,code,media,type;public,fixed,content,negotiation,strategy,media,type,content,type,this,collections,singleton,list,content,type
FixedContentNegotiationStrategy -> public FixedContentNegotiationStrategy(MediaType contentType);1529361191;Constructor with a single default {@code MediaType}.;public FixedContentNegotiationStrategy(MediaType contentType) {_		this(Collections.singletonList(contentType))__	};constructor,with,a,single,default,code,media,type;public,fixed,content,negotiation,strategy,media,type,content,type,this,collections,singleton,list,content,type
FixedContentNegotiationStrategy -> public FixedContentNegotiationStrategy(List<MediaType> contentTypes);1491926110;Constructor with an ordered List of default {@code MediaType}'s to return_for use in applications that support a variety of content types._<p>Consider appending {@link MediaType#ALL} at the end if destinations_are present which do not support any of the other default media types._@since 5.0;public FixedContentNegotiationStrategy(List<MediaType> contentTypes) {_		Assert.notNull(contentTypes, "'contentTypes' must not be null")__		this.contentTypes = Collections.unmodifiableList(contentTypes)__	};constructor,with,an,ordered,list,of,default,code,media,type,s,to,return,for,use,in,applications,that,support,a,variety,of,content,types,p,consider,appending,link,media,type,all,at,the,end,if,destinations,are,present,which,do,not,support,any,of,the,other,default,media,types,since,5,0;public,fixed,content,negotiation,strategy,list,media,type,content,types,assert,not,null,content,types,content,types,must,not,be,null,this,content,types,collections,unmodifiable,list,content,types
FixedContentNegotiationStrategy -> public FixedContentNegotiationStrategy(List<MediaType> contentTypes);1529361191;Constructor with an ordered List of default {@code MediaType}'s to return_for use in applications that support a variety of content types._<p>Consider appending {@link MediaType#ALL} at the end if destinations_are present which do not support any of the other default media types._@since 5.0;public FixedContentNegotiationStrategy(List<MediaType> contentTypes) {_		Assert.notNull(contentTypes, "'contentTypes' must not be null")__		this.contentTypes = Collections.unmodifiableList(contentTypes)__	};constructor,with,an,ordered,list,of,default,code,media,type,s,to,return,for,use,in,applications,that,support,a,variety,of,content,types,p,consider,appending,link,media,type,all,at,the,end,if,destinations,are,present,which,do,not,support,any,of,the,other,default,media,types,since,5,0;public,fixed,content,negotiation,strategy,list,media,type,content,types,assert,not,null,content,types,content,types,must,not,be,null,this,content,types,collections,unmodifiable,list,content,types
