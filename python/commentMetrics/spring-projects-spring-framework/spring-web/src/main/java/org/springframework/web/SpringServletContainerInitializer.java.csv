# id;timestamp;commentText;codeText;commentWords;codeWords
SpringServletContainerInitializer -> @Override 	public void onStartup(Set<Class<?>> webAppInitializerClasses, ServletContext servletContext) 			throws ServletException;1356735495;Delegate the {@code ServletContext} to any {@link WebApplicationInitializer}_implementations present on the application classpath.__<p>Because this class declares @{@code HandlesTypes(WebApplicationInitializer.class)},_Servlet 3.0+ containers will automatically scan the classpath for implementations_of Spring's {@code WebApplicationInitializer} interface and provide the set of all_such types to the {@code webAppInitializerClasses} parameter of this method.__<p>If no {@code WebApplicationInitializer} implementations are found on the_classpath, this method is effectively a no-op. An INFO-level log message will be_issued notifying the user that the {@code ServletContainerInitializer} has indeed_been invoked but that no {@code WebApplicationInitializer} implementations were_found.__<p>Assuming that one or more {@code WebApplicationInitializer} types are detected,_they will be instantiated (and <em>sorted</em> if the @{@link_org.springframework.core.annotation.Order @Order} annotation is present or_the {@link org.springframework.core.Ordered Ordered} interface has been_implemented). Then the {@link WebApplicationInitializer#onStartup(ServletContext)}_method will be invoked on each instance, delegating the {@code ServletContext} such_that each instance may register and configure servlets such as Spring's_{@code DispatcherServlet}, listeners such as Spring's {@code ContextLoaderListener},_or any other Servlet API componentry such as filters.__@param webAppInitializerClasses all implementations of_{@link WebApplicationInitializer} found on the application classpath_@param servletContext the servlet context to be initialized_@see WebApplicationInitializer#onStartup(ServletContext)_@see AnnotationAwareOrderComparator;@Override_	public void onStartup(Set<Class<?>> webAppInitializerClasses, ServletContext servletContext)_			throws ServletException {__		List<WebApplicationInitializer> initializers = new LinkedList<WebApplicationInitializer>()___		if (webAppInitializerClasses != null) {_			for (Class<?> waiClass : webAppInitializerClasses) {_				_				_				if (!waiClass.isInterface() && !Modifier.isAbstract(waiClass.getModifiers()) &&_						WebApplicationInitializer.class.isAssignableFrom(waiClass)) {_					try {_						initializers.add((WebApplicationInitializer) waiClass.newInstance())__					}_					catch (Throwable ex) {_						throw new ServletException("Failed to instantiate WebApplicationInitializer class", ex)__					}_				}_			}_		}__		if (initializers.isEmpty()) {_			servletContext.log("No Spring WebApplicationInitializer types detected on classpath")__			return__		}__		Collections.sort(initializers, new AnnotationAwareOrderComparator())__		servletContext.log("Spring WebApplicationInitializers detected on classpath: " + initializers)___		for (WebApplicationInitializer initializer : initializers) {_			initializer.onStartup(servletContext)__		}_	};delegate,the,code,servlet,context,to,any,link,web,application,initializer,implementations,present,on,the,application,classpath,p,because,this,class,declares,code,handles,types,web,application,initializer,class,servlet,3,0,containers,will,automatically,scan,the,classpath,for,implementations,of,spring,s,code,web,application,initializer,interface,and,provide,the,set,of,all,such,types,to,the,code,web,app,initializer,classes,parameter,of,this,method,p,if,no,code,web,application,initializer,implementations,are,found,on,the,classpath,this,method,is,effectively,a,no,op,an,info,level,log,message,will,be,issued,notifying,the,user,that,the,code,servlet,container,initializer,has,indeed,been,invoked,but,that,no,code,web,application,initializer,implementations,were,found,p,assuming,that,one,or,more,code,web,application,initializer,types,are,detected,they,will,be,instantiated,and,em,sorted,em,if,the,link,org,springframework,core,annotation,order,order,annotation,is,present,or,the,link,org,springframework,core,ordered,ordered,interface,has,been,implemented,then,the,link,web,application,initializer,on,startup,servlet,context,method,will,be,invoked,on,each,instance,delegating,the,code,servlet,context,such,that,each,instance,may,register,and,configure,servlets,such,as,spring,s,code,dispatcher,servlet,listeners,such,as,spring,s,code,context,loader,listener,or,any,other,servlet,api,componentry,such,as,filters,param,web,app,initializer,classes,all,implementations,of,link,web,application,initializer,found,on,the,application,classpath,param,servlet,context,the,servlet,context,to,be,initialized,see,web,application,initializer,on,startup,servlet,context,see,annotation,aware,order,comparator;override,public,void,on,startup,set,class,web,app,initializer,classes,servlet,context,servlet,context,throws,servlet,exception,list,web,application,initializer,initializers,new,linked,list,web,application,initializer,if,web,app,initializer,classes,null,for,class,wai,class,web,app,initializer,classes,if,wai,class,is,interface,modifier,is,abstract,wai,class,get,modifiers,web,application,initializer,class,is,assignable,from,wai,class,try,initializers,add,web,application,initializer,wai,class,new,instance,catch,throwable,ex,throw,new,servlet,exception,failed,to,instantiate,web,application,initializer,class,ex,if,initializers,is,empty,servlet,context,log,no,spring,web,application,initializer,types,detected,on,classpath,return,collections,sort,initializers,new,annotation,aware,order,comparator,servlet,context,log,spring,web,application,initializers,detected,on,classpath,initializers,for,web,application,initializer,initializer,initializers,initializer,on,startup,servlet,context
SpringServletContainerInitializer -> @Override 	public void onStartup(Set<Class<?>> webAppInitializerClasses, ServletContext servletContext) 			throws ServletException;1368482696;Delegate the {@code ServletContext} to any {@link WebApplicationInitializer}_implementations present on the application classpath.__<p>Because this class declares @{@code HandlesTypes(WebApplicationInitializer.class)},_Servlet 3.0+ containers will automatically scan the classpath for implementations_of Spring's {@code WebApplicationInitializer} interface and provide the set of all_such types to the {@code webAppInitializerClasses} parameter of this method.__<p>If no {@code WebApplicationInitializer} implementations are found on the_classpath, this method is effectively a no-op. An INFO-level log message will be_issued notifying the user that the {@code ServletContainerInitializer} has indeed_been invoked but that no {@code WebApplicationInitializer} implementations were_found.__<p>Assuming that one or more {@code WebApplicationInitializer} types are detected,_they will be instantiated (and <em>sorted</em> if the @{@link_org.springframework.core.annotation.Order @Order} annotation is present or_the {@link org.springframework.core.Ordered Ordered} interface has been_implemented). Then the {@link WebApplicationInitializer#onStartup(ServletContext)}_method will be invoked on each instance, delegating the {@code ServletContext} such_that each instance may register and configure servlets such as Spring's_{@code DispatcherServlet}, listeners such as Spring's {@code ContextLoaderListener},_or any other Servlet API componentry such as filters.__@param webAppInitializerClasses all implementations of_{@link WebApplicationInitializer} found on the application classpath_@param servletContext the servlet context to be initialized_@see WebApplicationInitializer#onStartup(ServletContext)_@see AnnotationAwareOrderComparator;@Override_	public void onStartup(Set<Class<?>> webAppInitializerClasses, ServletContext servletContext)_			throws ServletException {__		List<WebApplicationInitializer> initializers = new LinkedList<WebApplicationInitializer>()___		if (webAppInitializerClasses != null) {_			for (Class<?> waiClass : webAppInitializerClasses) {_				_				_				if (!waiClass.isInterface() && !Modifier.isAbstract(waiClass.getModifiers()) &&_						WebApplicationInitializer.class.isAssignableFrom(waiClass)) {_					try {_						initializers.add((WebApplicationInitializer) waiClass.newInstance())__					}_					catch (Throwable ex) {_						throw new ServletException("Failed to instantiate WebApplicationInitializer class", ex)__					}_				}_			}_		}__		if (initializers.isEmpty()) {_			servletContext.log("No Spring WebApplicationInitializer types detected on classpath")__			return__		}__		Collections.sort(initializers, new AnnotationAwareOrderComparator())__		servletContext.log("Spring WebApplicationInitializers detected on classpath: " + initializers)___		for (WebApplicationInitializer initializer : initializers) {_			initializer.onStartup(servletContext)__		}_	};delegate,the,code,servlet,context,to,any,link,web,application,initializer,implementations,present,on,the,application,classpath,p,because,this,class,declares,code,handles,types,web,application,initializer,class,servlet,3,0,containers,will,automatically,scan,the,classpath,for,implementations,of,spring,s,code,web,application,initializer,interface,and,provide,the,set,of,all,such,types,to,the,code,web,app,initializer,classes,parameter,of,this,method,p,if,no,code,web,application,initializer,implementations,are,found,on,the,classpath,this,method,is,effectively,a,no,op,an,info,level,log,message,will,be,issued,notifying,the,user,that,the,code,servlet,container,initializer,has,indeed,been,invoked,but,that,no,code,web,application,initializer,implementations,were,found,p,assuming,that,one,or,more,code,web,application,initializer,types,are,detected,they,will,be,instantiated,and,em,sorted,em,if,the,link,org,springframework,core,annotation,order,order,annotation,is,present,or,the,link,org,springframework,core,ordered,ordered,interface,has,been,implemented,then,the,link,web,application,initializer,on,startup,servlet,context,method,will,be,invoked,on,each,instance,delegating,the,code,servlet,context,such,that,each,instance,may,register,and,configure,servlets,such,as,spring,s,code,dispatcher,servlet,listeners,such,as,spring,s,code,context,loader,listener,or,any,other,servlet,api,componentry,such,as,filters,param,web,app,initializer,classes,all,implementations,of,link,web,application,initializer,found,on,the,application,classpath,param,servlet,context,the,servlet,context,to,be,initialized,see,web,application,initializer,on,startup,servlet,context,see,annotation,aware,order,comparator;override,public,void,on,startup,set,class,web,app,initializer,classes,servlet,context,servlet,context,throws,servlet,exception,list,web,application,initializer,initializers,new,linked,list,web,application,initializer,if,web,app,initializer,classes,null,for,class,wai,class,web,app,initializer,classes,if,wai,class,is,interface,modifier,is,abstract,wai,class,get,modifiers,web,application,initializer,class,is,assignable,from,wai,class,try,initializers,add,web,application,initializer,wai,class,new,instance,catch,throwable,ex,throw,new,servlet,exception,failed,to,instantiate,web,application,initializer,class,ex,if,initializers,is,empty,servlet,context,log,no,spring,web,application,initializer,types,detected,on,classpath,return,collections,sort,initializers,new,annotation,aware,order,comparator,servlet,context,log,spring,web,application,initializers,detected,on,classpath,initializers,for,web,application,initializer,initializer,initializers,initializer,on,startup,servlet,context
SpringServletContainerInitializer -> @Override 	public void onStartup(Set<Class<?>> webAppInitializerClasses, ServletContext servletContext) 			throws ServletException;1390926867;Delegate the {@code ServletContext} to any {@link WebApplicationInitializer}_implementations present on the application classpath.__<p>Because this class declares @{@code HandlesTypes(WebApplicationInitializer.class)},_Servlet 3.0+ containers will automatically scan the classpath for implementations_of Spring's {@code WebApplicationInitializer} interface and provide the set of all_such types to the {@code webAppInitializerClasses} parameter of this method.__<p>If no {@code WebApplicationInitializer} implementations are found on the_classpath, this method is effectively a no-op. An INFO-level log message will be_issued notifying the user that the {@code ServletContainerInitializer} has indeed_been invoked but that no {@code WebApplicationInitializer} implementations were_found.__<p>Assuming that one or more {@code WebApplicationInitializer} types are detected,_they will be instantiated (and <em>sorted</em> if the @{@link_org.springframework.core.annotation.Order @Order} annotation is present or_the {@link org.springframework.core.Ordered Ordered} interface has been_implemented). Then the {@link WebApplicationInitializer#onStartup(ServletContext)}_method will be invoked on each instance, delegating the {@code ServletContext} such_that each instance may register and configure servlets such as Spring's_{@code DispatcherServlet}, listeners such as Spring's {@code ContextLoaderListener},_or any other Servlet API componentry such as filters.__@param webAppInitializerClasses all implementations of_{@link WebApplicationInitializer} found on the application classpath_@param servletContext the servlet context to be initialized_@see WebApplicationInitializer#onStartup(ServletContext)_@see AnnotationAwareOrderComparator;@Override_	public void onStartup(Set<Class<?>> webAppInitializerClasses, ServletContext servletContext)_			throws ServletException {__		List<WebApplicationInitializer> initializers = new LinkedList<WebApplicationInitializer>()___		if (webAppInitializerClasses != null) {_			for (Class<?> waiClass : webAppInitializerClasses) {_				_				_				if (!waiClass.isInterface() && !Modifier.isAbstract(waiClass.getModifiers()) &&_						WebApplicationInitializer.class.isAssignableFrom(waiClass)) {_					try {_						initializers.add((WebApplicationInitializer) waiClass.newInstance())__					}_					catch (Throwable ex) {_						throw new ServletException("Failed to instantiate WebApplicationInitializer class", ex)__					}_				}_			}_		}__		if (initializers.isEmpty()) {_			servletContext.log("No Spring WebApplicationInitializer types detected on classpath")__			return__		}__		AnnotationAwareOrderComparator.sort(initializers)__		servletContext.log("Spring WebApplicationInitializers detected on classpath: " + initializers)___		for (WebApplicationInitializer initializer : initializers) {_			initializer.onStartup(servletContext)__		}_	};delegate,the,code,servlet,context,to,any,link,web,application,initializer,implementations,present,on,the,application,classpath,p,because,this,class,declares,code,handles,types,web,application,initializer,class,servlet,3,0,containers,will,automatically,scan,the,classpath,for,implementations,of,spring,s,code,web,application,initializer,interface,and,provide,the,set,of,all,such,types,to,the,code,web,app,initializer,classes,parameter,of,this,method,p,if,no,code,web,application,initializer,implementations,are,found,on,the,classpath,this,method,is,effectively,a,no,op,an,info,level,log,message,will,be,issued,notifying,the,user,that,the,code,servlet,container,initializer,has,indeed,been,invoked,but,that,no,code,web,application,initializer,implementations,were,found,p,assuming,that,one,or,more,code,web,application,initializer,types,are,detected,they,will,be,instantiated,and,em,sorted,em,if,the,link,org,springframework,core,annotation,order,order,annotation,is,present,or,the,link,org,springframework,core,ordered,ordered,interface,has,been,implemented,then,the,link,web,application,initializer,on,startup,servlet,context,method,will,be,invoked,on,each,instance,delegating,the,code,servlet,context,such,that,each,instance,may,register,and,configure,servlets,such,as,spring,s,code,dispatcher,servlet,listeners,such,as,spring,s,code,context,loader,listener,or,any,other,servlet,api,componentry,such,as,filters,param,web,app,initializer,classes,all,implementations,of,link,web,application,initializer,found,on,the,application,classpath,param,servlet,context,the,servlet,context,to,be,initialized,see,web,application,initializer,on,startup,servlet,context,see,annotation,aware,order,comparator;override,public,void,on,startup,set,class,web,app,initializer,classes,servlet,context,servlet,context,throws,servlet,exception,list,web,application,initializer,initializers,new,linked,list,web,application,initializer,if,web,app,initializer,classes,null,for,class,wai,class,web,app,initializer,classes,if,wai,class,is,interface,modifier,is,abstract,wai,class,get,modifiers,web,application,initializer,class,is,assignable,from,wai,class,try,initializers,add,web,application,initializer,wai,class,new,instance,catch,throwable,ex,throw,new,servlet,exception,failed,to,instantiate,web,application,initializer,class,ex,if,initializers,is,empty,servlet,context,log,no,spring,web,application,initializer,types,detected,on,classpath,return,annotation,aware,order,comparator,sort,initializers,servlet,context,log,spring,web,application,initializers,detected,on,classpath,initializers,for,web,application,initializer,initializer,initializers,initializer,on,startup,servlet,context
SpringServletContainerInitializer -> @Override 	public void onStartup(Set<Class<?>> webAppInitializerClasses, ServletContext servletContext) 			throws ServletException;1461683397;Delegate the {@code ServletContext} to any {@link WebApplicationInitializer}_implementations present on the application classpath._<p>Because this class declares @{@code HandlesTypes(WebApplicationInitializer.class)},_Servlet 3.0+ containers will automatically scan the classpath for implementations_of Spring's {@code WebApplicationInitializer} interface and provide the set of all_such types to the {@code webAppInitializerClasses} parameter of this method._<p>If no {@code WebApplicationInitializer} implementations are found on the classpath,_this method is effectively a no-op. An INFO-level log message will be issued notifying_the user that the {@code ServletContainerInitializer} has indeed been invoked but that_no {@code WebApplicationInitializer} implementations were found._<p>Assuming that one or more {@code WebApplicationInitializer} types are detected,_they will be instantiated (and <em>sorted</em> if the @{@link_org.springframework.core.annotation.Order @Order} annotation is present or_the {@link org.springframework.core.Ordered Ordered} interface has been_implemented). Then the {@link WebApplicationInitializer#onStartup(ServletContext)}_method will be invoked on each instance, delegating the {@code ServletContext} such_that each instance may register and configure servlets such as Spring's_{@code DispatcherServlet}, listeners such as Spring's {@code ContextLoaderListener},_or any other Servlet API componentry such as filters._@param webAppInitializerClasses all implementations of_{@link WebApplicationInitializer} found on the application classpath_@param servletContext the servlet context to be initialized_@see WebApplicationInitializer#onStartup(ServletContext)_@see AnnotationAwareOrderComparator;@Override_	public void onStartup(Set<Class<?>> webAppInitializerClasses, ServletContext servletContext)_			throws ServletException {__		List<WebApplicationInitializer> initializers = new LinkedList<WebApplicationInitializer>()___		if (webAppInitializerClasses != null) {_			for (Class<?> waiClass : webAppInitializerClasses) {_				_				_				if (!waiClass.isInterface() && !Modifier.isAbstract(waiClass.getModifiers()) &&_						WebApplicationInitializer.class.isAssignableFrom(waiClass)) {_					try {_						initializers.add((WebApplicationInitializer) waiClass.newInstance())__					}_					catch (Throwable ex) {_						throw new ServletException("Failed to instantiate WebApplicationInitializer class", ex)__					}_				}_			}_		}__		if (initializers.isEmpty()) {_			servletContext.log("No Spring WebApplicationInitializer types detected on classpath")__			return__		}__		servletContext.log(initializers.size() + " Spring WebApplicationInitializers detected on classpath")__		AnnotationAwareOrderComparator.sort(initializers)__		for (WebApplicationInitializer initializer : initializers) {_			initializer.onStartup(servletContext)__		}_	};delegate,the,code,servlet,context,to,any,link,web,application,initializer,implementations,present,on,the,application,classpath,p,because,this,class,declares,code,handles,types,web,application,initializer,class,servlet,3,0,containers,will,automatically,scan,the,classpath,for,implementations,of,spring,s,code,web,application,initializer,interface,and,provide,the,set,of,all,such,types,to,the,code,web,app,initializer,classes,parameter,of,this,method,p,if,no,code,web,application,initializer,implementations,are,found,on,the,classpath,this,method,is,effectively,a,no,op,an,info,level,log,message,will,be,issued,notifying,the,user,that,the,code,servlet,container,initializer,has,indeed,been,invoked,but,that,no,code,web,application,initializer,implementations,were,found,p,assuming,that,one,or,more,code,web,application,initializer,types,are,detected,they,will,be,instantiated,and,em,sorted,em,if,the,link,org,springframework,core,annotation,order,order,annotation,is,present,or,the,link,org,springframework,core,ordered,ordered,interface,has,been,implemented,then,the,link,web,application,initializer,on,startup,servlet,context,method,will,be,invoked,on,each,instance,delegating,the,code,servlet,context,such,that,each,instance,may,register,and,configure,servlets,such,as,spring,s,code,dispatcher,servlet,listeners,such,as,spring,s,code,context,loader,listener,or,any,other,servlet,api,componentry,such,as,filters,param,web,app,initializer,classes,all,implementations,of,link,web,application,initializer,found,on,the,application,classpath,param,servlet,context,the,servlet,context,to,be,initialized,see,web,application,initializer,on,startup,servlet,context,see,annotation,aware,order,comparator;override,public,void,on,startup,set,class,web,app,initializer,classes,servlet,context,servlet,context,throws,servlet,exception,list,web,application,initializer,initializers,new,linked,list,web,application,initializer,if,web,app,initializer,classes,null,for,class,wai,class,web,app,initializer,classes,if,wai,class,is,interface,modifier,is,abstract,wai,class,get,modifiers,web,application,initializer,class,is,assignable,from,wai,class,try,initializers,add,web,application,initializer,wai,class,new,instance,catch,throwable,ex,throw,new,servlet,exception,failed,to,instantiate,web,application,initializer,class,ex,if,initializers,is,empty,servlet,context,log,no,spring,web,application,initializer,types,detected,on,classpath,return,servlet,context,log,initializers,size,spring,web,application,initializers,detected,on,classpath,annotation,aware,order,comparator,sort,initializers,for,web,application,initializer,initializer,initializers,initializer,on,startup,servlet,context
SpringServletContainerInitializer -> @Override 	public void onStartup(Set<Class<?>> webAppInitializerClasses, ServletContext servletContext) 			throws ServletException;1467730834;Delegate the {@code ServletContext} to any {@link WebApplicationInitializer}_implementations present on the application classpath._<p>Because this class declares @{@code HandlesTypes(WebApplicationInitializer.class)},_Servlet 3.0+ containers will automatically scan the classpath for implementations_of Spring's {@code WebApplicationInitializer} interface and provide the set of all_such types to the {@code webAppInitializerClasses} parameter of this method._<p>If no {@code WebApplicationInitializer} implementations are found on the classpath,_this method is effectively a no-op. An INFO-level log message will be issued notifying_the user that the {@code ServletContainerInitializer} has indeed been invoked but that_no {@code WebApplicationInitializer} implementations were found._<p>Assuming that one or more {@code WebApplicationInitializer} types are detected,_they will be instantiated (and <em>sorted</em> if the @{@link_org.springframework.core.annotation.Order @Order} annotation is present or_the {@link org.springframework.core.Ordered Ordered} interface has been_implemented). Then the {@link WebApplicationInitializer#onStartup(ServletContext)}_method will be invoked on each instance, delegating the {@code ServletContext} such_that each instance may register and configure servlets such as Spring's_{@code DispatcherServlet}, listeners such as Spring's {@code ContextLoaderListener},_or any other Servlet API componentry such as filters._@param webAppInitializerClasses all implementations of_{@link WebApplicationInitializer} found on the application classpath_@param servletContext the servlet context to be initialized_@see WebApplicationInitializer#onStartup(ServletContext)_@see AnnotationAwareOrderComparator;@Override_	public void onStartup(Set<Class<?>> webAppInitializerClasses, ServletContext servletContext)_			throws ServletException {__		List<WebApplicationInitializer> initializers = new LinkedList<>()___		if (webAppInitializerClasses != null) {_			for (Class<?> waiClass : webAppInitializerClasses) {_				_				_				if (!waiClass.isInterface() && !Modifier.isAbstract(waiClass.getModifiers()) &&_						WebApplicationInitializer.class.isAssignableFrom(waiClass)) {_					try {_						initializers.add((WebApplicationInitializer) waiClass.newInstance())__					}_					catch (Throwable ex) {_						throw new ServletException("Failed to instantiate WebApplicationInitializer class", ex)__					}_				}_			}_		}__		if (initializers.isEmpty()) {_			servletContext.log("No Spring WebApplicationInitializer types detected on classpath")__			return__		}__		servletContext.log(initializers.size() + " Spring WebApplicationInitializers detected on classpath")__		AnnotationAwareOrderComparator.sort(initializers)__		for (WebApplicationInitializer initializer : initializers) {_			initializer.onStartup(servletContext)__		}_	};delegate,the,code,servlet,context,to,any,link,web,application,initializer,implementations,present,on,the,application,classpath,p,because,this,class,declares,code,handles,types,web,application,initializer,class,servlet,3,0,containers,will,automatically,scan,the,classpath,for,implementations,of,spring,s,code,web,application,initializer,interface,and,provide,the,set,of,all,such,types,to,the,code,web,app,initializer,classes,parameter,of,this,method,p,if,no,code,web,application,initializer,implementations,are,found,on,the,classpath,this,method,is,effectively,a,no,op,an,info,level,log,message,will,be,issued,notifying,the,user,that,the,code,servlet,container,initializer,has,indeed,been,invoked,but,that,no,code,web,application,initializer,implementations,were,found,p,assuming,that,one,or,more,code,web,application,initializer,types,are,detected,they,will,be,instantiated,and,em,sorted,em,if,the,link,org,springframework,core,annotation,order,order,annotation,is,present,or,the,link,org,springframework,core,ordered,ordered,interface,has,been,implemented,then,the,link,web,application,initializer,on,startup,servlet,context,method,will,be,invoked,on,each,instance,delegating,the,code,servlet,context,such,that,each,instance,may,register,and,configure,servlets,such,as,spring,s,code,dispatcher,servlet,listeners,such,as,spring,s,code,context,loader,listener,or,any,other,servlet,api,componentry,such,as,filters,param,web,app,initializer,classes,all,implementations,of,link,web,application,initializer,found,on,the,application,classpath,param,servlet,context,the,servlet,context,to,be,initialized,see,web,application,initializer,on,startup,servlet,context,see,annotation,aware,order,comparator;override,public,void,on,startup,set,class,web,app,initializer,classes,servlet,context,servlet,context,throws,servlet,exception,list,web,application,initializer,initializers,new,linked,list,if,web,app,initializer,classes,null,for,class,wai,class,web,app,initializer,classes,if,wai,class,is,interface,modifier,is,abstract,wai,class,get,modifiers,web,application,initializer,class,is,assignable,from,wai,class,try,initializers,add,web,application,initializer,wai,class,new,instance,catch,throwable,ex,throw,new,servlet,exception,failed,to,instantiate,web,application,initializer,class,ex,if,initializers,is,empty,servlet,context,log,no,spring,web,application,initializer,types,detected,on,classpath,return,servlet,context,log,initializers,size,spring,web,application,initializers,detected,on,classpath,annotation,aware,order,comparator,sort,initializers,for,web,application,initializer,initializer,initializers,initializer,on,startup,servlet,context
SpringServletContainerInitializer -> @Override 	public void onStartup(Set<Class<?>> webAppInitializerClasses, ServletContext servletContext) 			throws ServletException;1468948866;Delegate the {@code ServletContext} to any {@link WebApplicationInitializer}_implementations present on the application classpath._<p>Because this class declares @{@code HandlesTypes(WebApplicationInitializer.class)},_Servlet 3.0+ containers will automatically scan the classpath for implementations_of Spring's {@code WebApplicationInitializer} interface and provide the set of all_such types to the {@code webAppInitializerClasses} parameter of this method._<p>If no {@code WebApplicationInitializer} implementations are found on the classpath,_this method is effectively a no-op. An INFO-level log message will be issued notifying_the user that the {@code ServletContainerInitializer} has indeed been invoked but that_no {@code WebApplicationInitializer} implementations were found._<p>Assuming that one or more {@code WebApplicationInitializer} types are detected,_they will be instantiated (and <em>sorted</em> if the @{@link_org.springframework.core.annotation.Order @Order} annotation is present or_the {@link org.springframework.core.Ordered Ordered} interface has been_implemented). Then the {@link WebApplicationInitializer#onStartup(ServletContext)}_method will be invoked on each instance, delegating the {@code ServletContext} such_that each instance may register and configure servlets such as Spring's_{@code DispatcherServlet}, listeners such as Spring's {@code ContextLoaderListener},_or any other Servlet API componentry such as filters._@param webAppInitializerClasses all implementations of_{@link WebApplicationInitializer} found on the application classpath_@param servletContext the servlet context to be initialized_@see WebApplicationInitializer#onStartup(ServletContext)_@see AnnotationAwareOrderComparator;@Override_	public void onStartup(Set<Class<?>> webAppInitializerClasses, ServletContext servletContext)_			throws ServletException {__		List<WebApplicationInitializer> initializers = new LinkedList<>()___		if (webAppInitializerClasses != null) {_			for (Class<?> waiClass : webAppInitializerClasses) {_				_				_				if (!waiClass.isInterface() && !Modifier.isAbstract(waiClass.getModifiers()) &&_						WebApplicationInitializer.class.isAssignableFrom(waiClass)) {_					try {_						initializers.add((WebApplicationInitializer)_								ReflectionUtils.accessibleConstructor(waiClass).newInstance())__					}_					catch (Throwable ex) {_						throw new ServletException("Failed to instantiate WebApplicationInitializer class", ex)__					}_				}_			}_		}__		if (initializers.isEmpty()) {_			servletContext.log("No Spring WebApplicationInitializer types detected on classpath")__			return__		}__		servletContext.log(initializers.size() + " Spring WebApplicationInitializers detected on classpath")__		AnnotationAwareOrderComparator.sort(initializers)__		for (WebApplicationInitializer initializer : initializers) {_			initializer.onStartup(servletContext)__		}_	};delegate,the,code,servlet,context,to,any,link,web,application,initializer,implementations,present,on,the,application,classpath,p,because,this,class,declares,code,handles,types,web,application,initializer,class,servlet,3,0,containers,will,automatically,scan,the,classpath,for,implementations,of,spring,s,code,web,application,initializer,interface,and,provide,the,set,of,all,such,types,to,the,code,web,app,initializer,classes,parameter,of,this,method,p,if,no,code,web,application,initializer,implementations,are,found,on,the,classpath,this,method,is,effectively,a,no,op,an,info,level,log,message,will,be,issued,notifying,the,user,that,the,code,servlet,container,initializer,has,indeed,been,invoked,but,that,no,code,web,application,initializer,implementations,were,found,p,assuming,that,one,or,more,code,web,application,initializer,types,are,detected,they,will,be,instantiated,and,em,sorted,em,if,the,link,org,springframework,core,annotation,order,order,annotation,is,present,or,the,link,org,springframework,core,ordered,ordered,interface,has,been,implemented,then,the,link,web,application,initializer,on,startup,servlet,context,method,will,be,invoked,on,each,instance,delegating,the,code,servlet,context,such,that,each,instance,may,register,and,configure,servlets,such,as,spring,s,code,dispatcher,servlet,listeners,such,as,spring,s,code,context,loader,listener,or,any,other,servlet,api,componentry,such,as,filters,param,web,app,initializer,classes,all,implementations,of,link,web,application,initializer,found,on,the,application,classpath,param,servlet,context,the,servlet,context,to,be,initialized,see,web,application,initializer,on,startup,servlet,context,see,annotation,aware,order,comparator;override,public,void,on,startup,set,class,web,app,initializer,classes,servlet,context,servlet,context,throws,servlet,exception,list,web,application,initializer,initializers,new,linked,list,if,web,app,initializer,classes,null,for,class,wai,class,web,app,initializer,classes,if,wai,class,is,interface,modifier,is,abstract,wai,class,get,modifiers,web,application,initializer,class,is,assignable,from,wai,class,try,initializers,add,web,application,initializer,reflection,utils,accessible,constructor,wai,class,new,instance,catch,throwable,ex,throw,new,servlet,exception,failed,to,instantiate,web,application,initializer,class,ex,if,initializers,is,empty,servlet,context,log,no,spring,web,application,initializer,types,detected,on,classpath,return,servlet,context,log,initializers,size,spring,web,application,initializers,detected,on,classpath,annotation,aware,order,comparator,sort,initializers,for,web,application,initializer,initializer,initializers,initializer,on,startup,servlet,context
SpringServletContainerInitializer -> public void onStartup(Set<Class<?>> webAppInitializerClasses, ServletContext servletContext) 			throws ServletException;1328020251;Delegate the {@code ServletContext} to any {@link WebApplicationInitializer}_implementations present on the application classpath.__<p>Because this class declares @{@code HandlesTypes(WebApplicationInitializer.class)},_Servlet 3.0+ containers will automatically scan the classpath for implementations_of Spring's {@code WebApplicationInitializer} interface and provide the set of all_such types to the {@code webAppInitializerClasses} parameter of this method.__<p>If no {@code WebApplicationInitializer} implementations are found on the_classpath, this method is effectively a no-op. An INFO-level log message will be_issued notifying the user that the {@code ServletContainerInitializer} has indeed_been invoked, but that no {@code WebApplicationInitializer} implementations were_found.__<p>Assuming that one or more {@code WebApplicationInitializer} types are detected,_they will be instantiated (and <em>sorted</em> if the @{@link_org.springframework.core.annotation.Order Order} annotation is present or_the {@link org.springframework.core.Ordered Ordered} interface has been_implemented). Then the {@link WebApplicationInitializer#onStartup(ServletContext)}_method will be invoked on each instance, delegating the {@code ServletContext} such_that each instance may register and configure servlets such as Spring's_{@code DispatcherServlet}, listeners such as Spring's {@code ContextLoaderListener}_or any other Servlet API componentry such as filters.__@param webAppInitializerClasses all implementations of_{@link WebApplicationInitializer} found on the application classpath_@param servletContext the servlet context to be initialized_@see WebApplicationInitializer#onStartup(ServletContext)_@see AnnotationAwareOrderComparator;public void onStartup(Set<Class<?>> webAppInitializerClasses, ServletContext servletContext)_			throws ServletException {__		List<WebApplicationInitializer> initializers = new LinkedList<WebApplicationInitializer>()___		if (webAppInitializerClasses != null) {_			for (Class<?> waiClass : webAppInitializerClasses) {_				_				_				if (!waiClass.isInterface() && !Modifier.isAbstract(waiClass.getModifiers()) &&_						WebApplicationInitializer.class.isAssignableFrom(waiClass)) {_					try {_						initializers.add((WebApplicationInitializer) waiClass.newInstance())__					}_					catch (Throwable ex) {_						throw new ServletException("Failed to instantiate WebApplicationInitializer class", ex)__					}_				}_			}_		}__		if (initializers.isEmpty()) {_			servletContext.log("No Spring WebApplicationInitializer types detected on classpath")__			return__		}__		Collections.sort(initializers, new AnnotationAwareOrderComparator())__		servletContext.log("Spring WebApplicationInitializers detected on classpath: " + initializers)___		for (WebApplicationInitializer initializer : initializers) {_			initializer.onStartup(servletContext)__		}_	};delegate,the,code,servlet,context,to,any,link,web,application,initializer,implementations,present,on,the,application,classpath,p,because,this,class,declares,code,handles,types,web,application,initializer,class,servlet,3,0,containers,will,automatically,scan,the,classpath,for,implementations,of,spring,s,code,web,application,initializer,interface,and,provide,the,set,of,all,such,types,to,the,code,web,app,initializer,classes,parameter,of,this,method,p,if,no,code,web,application,initializer,implementations,are,found,on,the,classpath,this,method,is,effectively,a,no,op,an,info,level,log,message,will,be,issued,notifying,the,user,that,the,code,servlet,container,initializer,has,indeed,been,invoked,but,that,no,code,web,application,initializer,implementations,were,found,p,assuming,that,one,or,more,code,web,application,initializer,types,are,detected,they,will,be,instantiated,and,em,sorted,em,if,the,link,org,springframework,core,annotation,order,order,annotation,is,present,or,the,link,org,springframework,core,ordered,ordered,interface,has,been,implemented,then,the,link,web,application,initializer,on,startup,servlet,context,method,will,be,invoked,on,each,instance,delegating,the,code,servlet,context,such,that,each,instance,may,register,and,configure,servlets,such,as,spring,s,code,dispatcher,servlet,listeners,such,as,spring,s,code,context,loader,listener,or,any,other,servlet,api,componentry,such,as,filters,param,web,app,initializer,classes,all,implementations,of,link,web,application,initializer,found,on,the,application,classpath,param,servlet,context,the,servlet,context,to,be,initialized,see,web,application,initializer,on,startup,servlet,context,see,annotation,aware,order,comparator;public,void,on,startup,set,class,web,app,initializer,classes,servlet,context,servlet,context,throws,servlet,exception,list,web,application,initializer,initializers,new,linked,list,web,application,initializer,if,web,app,initializer,classes,null,for,class,wai,class,web,app,initializer,classes,if,wai,class,is,interface,modifier,is,abstract,wai,class,get,modifiers,web,application,initializer,class,is,assignable,from,wai,class,try,initializers,add,web,application,initializer,wai,class,new,instance,catch,throwable,ex,throw,new,servlet,exception,failed,to,instantiate,web,application,initializer,class,ex,if,initializers,is,empty,servlet,context,log,no,spring,web,application,initializer,types,detected,on,classpath,return,collections,sort,initializers,new,annotation,aware,order,comparator,servlet,context,log,spring,web,application,initializers,detected,on,classpath,initializers,for,web,application,initializer,initializer,initializers,initializer,on,startup,servlet,context
SpringServletContainerInitializer -> public void onStartup(Set<Class<?>> webAppInitializerClasses, ServletContext servletContext) 			throws ServletException;1354919444;Delegate the {@code ServletContext} to any {@link WebApplicationInitializer}_implementations present on the application classpath.__<p>Because this class declares @{@code HandlesTypes(WebApplicationInitializer.class)},_Servlet 3.0+ containers will automatically scan the classpath for implementations_of Spring's {@code WebApplicationInitializer} interface and provide the set of all_such types to the {@code webAppInitializerClasses} parameter of this method.__<p>If no {@code WebApplicationInitializer} implementations are found on the_classpath, this method is effectively a no-op. An INFO-level log message will be_issued notifying the user that the {@code ServletContainerInitializer} has indeed_been invoked, but that no {@code WebApplicationInitializer} implementations were_found.__<p>Assuming that one or more {@code WebApplicationInitializer} types are detected,_they will be instantiated (and <em>sorted</em> if the @{@link_org.springframework.core.annotation.Order Order} annotation is present or_the {@link org.springframework.core.Ordered Ordered} interface has been_implemented). Then the {@link WebApplicationInitializer#onStartup(ServletContext)}_method will be invoked on each instance, delegating the {@code ServletContext} such_that each instance may register and configure servlets such as Spring's_{@code DispatcherServlet}, listeners such as Spring's {@code ContextLoaderListener}_or any other Servlet API componentry such as filters.__@param webAppInitializerClasses all implementations of_{@link WebApplicationInitializer} found on the application classpath_@param servletContext the servlet context to be initialized_@see WebApplicationInitializer#onStartup(ServletContext)_@see AnnotationAwareOrderComparator;public void onStartup(Set<Class<?>> webAppInitializerClasses, ServletContext servletContext)_			throws ServletException {__		List<WebApplicationInitializer> initializers = new LinkedList<WebApplicationInitializer>()___		if (webAppInitializerClasses != null) {_			for (Class<?> waiClass : webAppInitializerClasses) {_				_				_				if (!waiClass.isInterface() && !Modifier.isAbstract(waiClass.getModifiers()) &&_						WebApplicationInitializer.class.isAssignableFrom(waiClass)) {_					try {_						initializers.add((WebApplicationInitializer) waiClass.newInstance())__					}_					catch (Throwable ex) {_						throw new ServletException("Failed to instantiate WebApplicationInitializer class", ex)__					}_				}_			}_		}__		if (initializers.isEmpty()) {_			servletContext.log("No Spring WebApplicationInitializer types detected on classpath")__			return__		}__		Collections.sort(initializers, new AnnotationAwareOrderComparator())__		servletContext.log("Spring WebApplicationInitializers detected on classpath: " + initializers)___		for (WebApplicationInitializer initializer : initializers) {_			initializer.onStartup(servletContext)__		}_	};delegate,the,code,servlet,context,to,any,link,web,application,initializer,implementations,present,on,the,application,classpath,p,because,this,class,declares,code,handles,types,web,application,initializer,class,servlet,3,0,containers,will,automatically,scan,the,classpath,for,implementations,of,spring,s,code,web,application,initializer,interface,and,provide,the,set,of,all,such,types,to,the,code,web,app,initializer,classes,parameter,of,this,method,p,if,no,code,web,application,initializer,implementations,are,found,on,the,classpath,this,method,is,effectively,a,no,op,an,info,level,log,message,will,be,issued,notifying,the,user,that,the,code,servlet,container,initializer,has,indeed,been,invoked,but,that,no,code,web,application,initializer,implementations,were,found,p,assuming,that,one,or,more,code,web,application,initializer,types,are,detected,they,will,be,instantiated,and,em,sorted,em,if,the,link,org,springframework,core,annotation,order,order,annotation,is,present,or,the,link,org,springframework,core,ordered,ordered,interface,has,been,implemented,then,the,link,web,application,initializer,on,startup,servlet,context,method,will,be,invoked,on,each,instance,delegating,the,code,servlet,context,such,that,each,instance,may,register,and,configure,servlets,such,as,spring,s,code,dispatcher,servlet,listeners,such,as,spring,s,code,context,loader,listener,or,any,other,servlet,api,componentry,such,as,filters,param,web,app,initializer,classes,all,implementations,of,link,web,application,initializer,found,on,the,application,classpath,param,servlet,context,the,servlet,context,to,be,initialized,see,web,application,initializer,on,startup,servlet,context,see,annotation,aware,order,comparator;public,void,on,startup,set,class,web,app,initializer,classes,servlet,context,servlet,context,throws,servlet,exception,list,web,application,initializer,initializers,new,linked,list,web,application,initializer,if,web,app,initializer,classes,null,for,class,wai,class,web,app,initializer,classes,if,wai,class,is,interface,modifier,is,abstract,wai,class,get,modifiers,web,application,initializer,class,is,assignable,from,wai,class,try,initializers,add,web,application,initializer,wai,class,new,instance,catch,throwable,ex,throw,new,servlet,exception,failed,to,instantiate,web,application,initializer,class,ex,if,initializers,is,empty,servlet,context,log,no,spring,web,application,initializer,types,detected,on,classpath,return,collections,sort,initializers,new,annotation,aware,order,comparator,servlet,context,log,spring,web,application,initializers,detected,on,classpath,initializers,for,web,application,initializer,initializer,initializers,initializer,on,startup,servlet,context
SpringServletContainerInitializer -> public void onStartup(Set<Class<?>> webAppInitializerClasses, ServletContext servletContext) 			throws ServletException;1354984250;Delegate the {@code ServletContext} to any {@link WebApplicationInitializer}_implementations present on the application classpath.__<p>Because this class declares @{@code HandlesTypes(WebApplicationInitializer.class)},_Servlet 3.0+ containers will automatically scan the classpath for implementations_of Spring's {@code WebApplicationInitializer} interface and provide the set of all_such types to the {@code webAppInitializerClasses} parameter of this method.__<p>If no {@code WebApplicationInitializer} implementations are found on the_classpath, this method is effectively a no-op. An INFO-level log message will be_issued notifying the user that the {@code ServletContainerInitializer} has indeed_been invoked but that no {@code WebApplicationInitializer} implementations were_found.__<p>Assuming that one or more {@code WebApplicationInitializer} types are detected,_they will be instantiated (and <em>sorted</em> if the @{@link_org.springframework.core.annotation.Order @Order} annotation is present or_the {@link org.springframework.core.Ordered Ordered} interface has been_implemented). Then the {@link WebApplicationInitializer#onStartup(ServletContext)}_method will be invoked on each instance, delegating the {@code ServletContext} such_that each instance may register and configure servlets such as Spring's_{@code DispatcherServlet}, listeners such as Spring's {@code ContextLoaderListener},_or any other Servlet API componentry such as filters.__@param webAppInitializerClasses all implementations of_{@link WebApplicationInitializer} found on the application classpath_@param servletContext the servlet context to be initialized_@see WebApplicationInitializer#onStartup(ServletContext)_@see AnnotationAwareOrderComparator;public void onStartup(Set<Class<?>> webAppInitializerClasses, ServletContext servletContext)_			throws ServletException {__		List<WebApplicationInitializer> initializers = new LinkedList<WebApplicationInitializer>()___		if (webAppInitializerClasses != null) {_			for (Class<?> waiClass : webAppInitializerClasses) {_				_				_				if (!waiClass.isInterface() && !Modifier.isAbstract(waiClass.getModifiers()) &&_						WebApplicationInitializer.class.isAssignableFrom(waiClass)) {_					try {_						initializers.add((WebApplicationInitializer) waiClass.newInstance())__					}_					catch (Throwable ex) {_						throw new ServletException("Failed to instantiate WebApplicationInitializer class", ex)__					}_				}_			}_		}__		if (initializers.isEmpty()) {_			servletContext.log("No Spring WebApplicationInitializer types detected on classpath")__			return__		}__		Collections.sort(initializers, new AnnotationAwareOrderComparator())__		servletContext.log("Spring WebApplicationInitializers detected on classpath: " + initializers)___		for (WebApplicationInitializer initializer : initializers) {_			initializer.onStartup(servletContext)__		}_	};delegate,the,code,servlet,context,to,any,link,web,application,initializer,implementations,present,on,the,application,classpath,p,because,this,class,declares,code,handles,types,web,application,initializer,class,servlet,3,0,containers,will,automatically,scan,the,classpath,for,implementations,of,spring,s,code,web,application,initializer,interface,and,provide,the,set,of,all,such,types,to,the,code,web,app,initializer,classes,parameter,of,this,method,p,if,no,code,web,application,initializer,implementations,are,found,on,the,classpath,this,method,is,effectively,a,no,op,an,info,level,log,message,will,be,issued,notifying,the,user,that,the,code,servlet,container,initializer,has,indeed,been,invoked,but,that,no,code,web,application,initializer,implementations,were,found,p,assuming,that,one,or,more,code,web,application,initializer,types,are,detected,they,will,be,instantiated,and,em,sorted,em,if,the,link,org,springframework,core,annotation,order,order,annotation,is,present,or,the,link,org,springframework,core,ordered,ordered,interface,has,been,implemented,then,the,link,web,application,initializer,on,startup,servlet,context,method,will,be,invoked,on,each,instance,delegating,the,code,servlet,context,such,that,each,instance,may,register,and,configure,servlets,such,as,spring,s,code,dispatcher,servlet,listeners,such,as,spring,s,code,context,loader,listener,or,any,other,servlet,api,componentry,such,as,filters,param,web,app,initializer,classes,all,implementations,of,link,web,application,initializer,found,on,the,application,classpath,param,servlet,context,the,servlet,context,to,be,initialized,see,web,application,initializer,on,startup,servlet,context,see,annotation,aware,order,comparator;public,void,on,startup,set,class,web,app,initializer,classes,servlet,context,servlet,context,throws,servlet,exception,list,web,application,initializer,initializers,new,linked,list,web,application,initializer,if,web,app,initializer,classes,null,for,class,wai,class,web,app,initializer,classes,if,wai,class,is,interface,modifier,is,abstract,wai,class,get,modifiers,web,application,initializer,class,is,assignable,from,wai,class,try,initializers,add,web,application,initializer,wai,class,new,instance,catch,throwable,ex,throw,new,servlet,exception,failed,to,instantiate,web,application,initializer,class,ex,if,initializers,is,empty,servlet,context,log,no,spring,web,application,initializer,types,detected,on,classpath,return,collections,sort,initializers,new,annotation,aware,order,comparator,servlet,context,log,spring,web,application,initializers,detected,on,classpath,initializers,for,web,application,initializer,initializer,initializers,initializer,on,startup,servlet,context
SpringServletContainerInitializer -> public void onStartup(Set<Class<?>> webAppInitializerClasses, ServletContext servletContext) 			throws ServletException;1357119239;Delegate the {@code ServletContext} to any {@link WebApplicationInitializer}_implementations present on the application classpath.__<p>Because this class declares @{@code HandlesTypes(WebApplicationInitializer.class)},_Servlet 3.0+ containers will automatically scan the classpath for implementations_of Spring's {@code WebApplicationInitializer} interface and provide the set of all_such types to the {@code webAppInitializerClasses} parameter of this method.__<p>If no {@code WebApplicationInitializer} implementations are found on the_classpath, this method is effectively a no-op. An INFO-level log message will be_issued notifying the user that the {@code ServletContainerInitializer} has indeed_been invoked but that no {@code WebApplicationInitializer} implementations were_found.__<p>Assuming that one or more {@code WebApplicationInitializer} types are detected,_they will be instantiated (and <em>sorted</em> if the @{@link_org.springframework.core.annotation.Order @Order} annotation is present or_the {@link org.springframework.core.Ordered Ordered} interface has been_implemented). Then the {@link WebApplicationInitializer#onStartup(ServletContext)}_method will be invoked on each instance, delegating the {@code ServletContext} such_that each instance may register and configure servlets such as Spring's_{@code DispatcherServlet}, listeners such as Spring's {@code ContextLoaderListener},_or any other Servlet API componentry such as filters.__@param webAppInitializerClasses all implementations of_{@link WebApplicationInitializer} found on the application classpath_@param servletContext the servlet context to be initialized_@see WebApplicationInitializer#onStartup(ServletContext)_@see AnnotationAwareOrderComparator;public void onStartup(Set<Class<?>> webAppInitializerClasses, ServletContext servletContext)_			throws ServletException {__		List<WebApplicationInitializer> initializers = new LinkedList<WebApplicationInitializer>()___		if (webAppInitializerClasses != null) {_			for (Class<?> waiClass : webAppInitializerClasses) {_				_				_				if (!waiClass.isInterface() && !Modifier.isAbstract(waiClass.getModifiers()) &&_						WebApplicationInitializer.class.isAssignableFrom(waiClass)) {_					try {_						initializers.add((WebApplicationInitializer) waiClass.newInstance())__					}_					catch (Throwable ex) {_						throw new ServletException("Failed to instantiate WebApplicationInitializer class", ex)__					}_				}_			}_		}__		if (initializers.isEmpty()) {_			servletContext.log("No Spring WebApplicationInitializer types detected on classpath")__			return__		}__		Collections.sort(initializers, new AnnotationAwareOrderComparator())__		servletContext.log("Spring WebApplicationInitializers detected on classpath: " + initializers)___		for (WebApplicationInitializer initializer : initializers) {_			initializer.onStartup(servletContext)__		}_	};delegate,the,code,servlet,context,to,any,link,web,application,initializer,implementations,present,on,the,application,classpath,p,because,this,class,declares,code,handles,types,web,application,initializer,class,servlet,3,0,containers,will,automatically,scan,the,classpath,for,implementations,of,spring,s,code,web,application,initializer,interface,and,provide,the,set,of,all,such,types,to,the,code,web,app,initializer,classes,parameter,of,this,method,p,if,no,code,web,application,initializer,implementations,are,found,on,the,classpath,this,method,is,effectively,a,no,op,an,info,level,log,message,will,be,issued,notifying,the,user,that,the,code,servlet,container,initializer,has,indeed,been,invoked,but,that,no,code,web,application,initializer,implementations,were,found,p,assuming,that,one,or,more,code,web,application,initializer,types,are,detected,they,will,be,instantiated,and,em,sorted,em,if,the,link,org,springframework,core,annotation,order,order,annotation,is,present,or,the,link,org,springframework,core,ordered,ordered,interface,has,been,implemented,then,the,link,web,application,initializer,on,startup,servlet,context,method,will,be,invoked,on,each,instance,delegating,the,code,servlet,context,such,that,each,instance,may,register,and,configure,servlets,such,as,spring,s,code,dispatcher,servlet,listeners,such,as,spring,s,code,context,loader,listener,or,any,other,servlet,api,componentry,such,as,filters,param,web,app,initializer,classes,all,implementations,of,link,web,application,initializer,found,on,the,application,classpath,param,servlet,context,the,servlet,context,to,be,initialized,see,web,application,initializer,on,startup,servlet,context,see,annotation,aware,order,comparator;public,void,on,startup,set,class,web,app,initializer,classes,servlet,context,servlet,context,throws,servlet,exception,list,web,application,initializer,initializers,new,linked,list,web,application,initializer,if,web,app,initializer,classes,null,for,class,wai,class,web,app,initializer,classes,if,wai,class,is,interface,modifier,is,abstract,wai,class,get,modifiers,web,application,initializer,class,is,assignable,from,wai,class,try,initializers,add,web,application,initializer,wai,class,new,instance,catch,throwable,ex,throw,new,servlet,exception,failed,to,instantiate,web,application,initializer,class,ex,if,initializers,is,empty,servlet,context,log,no,spring,web,application,initializer,types,detected,on,classpath,return,collections,sort,initializers,new,annotation,aware,order,comparator,servlet,context,log,spring,web,application,initializers,detected,on,classpath,initializers,for,web,application,initializer,initializer,initializers,initializer,on,startup,servlet,context
SpringServletContainerInitializer -> @Override 	public void onStartup(@Nullable Set<Class<?>> webAppInitializerClasses, ServletContext servletContext) 			throws ServletException;1496837955;Delegate the {@code ServletContext} to any {@link WebApplicationInitializer}_implementations present on the application classpath._<p>Because this class declares @{@code HandlesTypes(WebApplicationInitializer.class)},_Servlet 3.0+ containers will automatically scan the classpath for implementations_of Spring's {@code WebApplicationInitializer} interface and provide the set of all_such types to the {@code webAppInitializerClasses} parameter of this method._<p>If no {@code WebApplicationInitializer} implementations are found on the classpath,_this method is effectively a no-op. An INFO-level log message will be issued notifying_the user that the {@code ServletContainerInitializer} has indeed been invoked but that_no {@code WebApplicationInitializer} implementations were found._<p>Assuming that one or more {@code WebApplicationInitializer} types are detected,_they will be instantiated (and <em>sorted</em> if the @{@link_org.springframework.core.annotation.Order @Order} annotation is present or_the {@link org.springframework.core.Ordered Ordered} interface has been_implemented). Then the {@link WebApplicationInitializer#onStartup(ServletContext)}_method will be invoked on each instance, delegating the {@code ServletContext} such_that each instance may register and configure servlets such as Spring's_{@code DispatcherServlet}, listeners such as Spring's {@code ContextLoaderListener},_or any other Servlet API componentry such as filters._@param webAppInitializerClasses all implementations of_{@link WebApplicationInitializer} found on the application classpath_@param servletContext the servlet context to be initialized_@see WebApplicationInitializer#onStartup(ServletContext)_@see AnnotationAwareOrderComparator;@Override_	public void onStartup(@Nullable Set<Class<?>> webAppInitializerClasses, ServletContext servletContext)_			throws ServletException {__		List<WebApplicationInitializer> initializers = new LinkedList<>()___		if (webAppInitializerClasses != null) {_			for (Class<?> waiClass : webAppInitializerClasses) {_				_				_				if (!waiClass.isInterface() && !Modifier.isAbstract(waiClass.getModifiers()) &&_						WebApplicationInitializer.class.isAssignableFrom(waiClass)) {_					try {_						initializers.add((WebApplicationInitializer)_								ReflectionUtils.accessibleConstructor(waiClass).newInstance())__					}_					catch (Throwable ex) {_						throw new ServletException("Failed to instantiate WebApplicationInitializer class", ex)__					}_				}_			}_		}__		if (initializers.isEmpty()) {_			servletContext.log("No Spring WebApplicationInitializer types detected on classpath")__			return__		}__		servletContext.log(initializers.size() + " Spring WebApplicationInitializers detected on classpath")__		AnnotationAwareOrderComparator.sort(initializers)__		for (WebApplicationInitializer initializer : initializers) {_			initializer.onStartup(servletContext)__		}_	};delegate,the,code,servlet,context,to,any,link,web,application,initializer,implementations,present,on,the,application,classpath,p,because,this,class,declares,code,handles,types,web,application,initializer,class,servlet,3,0,containers,will,automatically,scan,the,classpath,for,implementations,of,spring,s,code,web,application,initializer,interface,and,provide,the,set,of,all,such,types,to,the,code,web,app,initializer,classes,parameter,of,this,method,p,if,no,code,web,application,initializer,implementations,are,found,on,the,classpath,this,method,is,effectively,a,no,op,an,info,level,log,message,will,be,issued,notifying,the,user,that,the,code,servlet,container,initializer,has,indeed,been,invoked,but,that,no,code,web,application,initializer,implementations,were,found,p,assuming,that,one,or,more,code,web,application,initializer,types,are,detected,they,will,be,instantiated,and,em,sorted,em,if,the,link,org,springframework,core,annotation,order,order,annotation,is,present,or,the,link,org,springframework,core,ordered,ordered,interface,has,been,implemented,then,the,link,web,application,initializer,on,startup,servlet,context,method,will,be,invoked,on,each,instance,delegating,the,code,servlet,context,such,that,each,instance,may,register,and,configure,servlets,such,as,spring,s,code,dispatcher,servlet,listeners,such,as,spring,s,code,context,loader,listener,or,any,other,servlet,api,componentry,such,as,filters,param,web,app,initializer,classes,all,implementations,of,link,web,application,initializer,found,on,the,application,classpath,param,servlet,context,the,servlet,context,to,be,initialized,see,web,application,initializer,on,startup,servlet,context,see,annotation,aware,order,comparator;override,public,void,on,startup,nullable,set,class,web,app,initializer,classes,servlet,context,servlet,context,throws,servlet,exception,list,web,application,initializer,initializers,new,linked,list,if,web,app,initializer,classes,null,for,class,wai,class,web,app,initializer,classes,if,wai,class,is,interface,modifier,is,abstract,wai,class,get,modifiers,web,application,initializer,class,is,assignable,from,wai,class,try,initializers,add,web,application,initializer,reflection,utils,accessible,constructor,wai,class,new,instance,catch,throwable,ex,throw,new,servlet,exception,failed,to,instantiate,web,application,initializer,class,ex,if,initializers,is,empty,servlet,context,log,no,spring,web,application,initializer,types,detected,on,classpath,return,servlet,context,log,initializers,size,spring,web,application,initializers,detected,on,classpath,annotation,aware,order,comparator,sort,initializers,for,web,application,initializer,initializer,initializers,initializer,on,startup,servlet,context
SpringServletContainerInitializer -> @Override 	public void onStartup(@Nullable Set<Class<?>> webAppInitializerClasses, ServletContext servletContext) 			throws ServletException;1530174524;Delegate the {@code ServletContext} to any {@link WebApplicationInitializer}_implementations present on the application classpath._<p>Because this class declares @{@code HandlesTypes(WebApplicationInitializer.class)},_Servlet 3.0+ containers will automatically scan the classpath for implementations_of Spring's {@code WebApplicationInitializer} interface and provide the set of all_such types to the {@code webAppInitializerClasses} parameter of this method._<p>If no {@code WebApplicationInitializer} implementations are found on the classpath,_this method is effectively a no-op. An INFO-level log message will be issued notifying_the user that the {@code ServletContainerInitializer} has indeed been invoked but that_no {@code WebApplicationInitializer} implementations were found._<p>Assuming that one or more {@code WebApplicationInitializer} types are detected,_they will be instantiated (and <em>sorted</em> if the @{@link_org.springframework.core.annotation.Order @Order} annotation is present or_the {@link org.springframework.core.Ordered Ordered} interface has been_implemented). Then the {@link WebApplicationInitializer#onStartup(ServletContext)}_method will be invoked on each instance, delegating the {@code ServletContext} such_that each instance may register and configure servlets such as Spring's_{@code DispatcherServlet}, listeners such as Spring's {@code ContextLoaderListener},_or any other Servlet API componentry such as filters._@param webAppInitializerClasses all implementations of_{@link WebApplicationInitializer} found on the application classpath_@param servletContext the servlet context to be initialized_@see WebApplicationInitializer#onStartup(ServletContext)_@see AnnotationAwareOrderComparator;@Override_	public void onStartup(@Nullable Set<Class<?>> webAppInitializerClasses, ServletContext servletContext)_			throws ServletException {__		List<WebApplicationInitializer> initializers = new LinkedList<>()___		if (webAppInitializerClasses != null) {_			for (Class<?> waiClass : webAppInitializerClasses) {_				_				_				if (!waiClass.isInterface() && !Modifier.isAbstract(waiClass.getModifiers()) &&_						WebApplicationInitializer.class.isAssignableFrom(waiClass)) {_					try {_						initializers.add((WebApplicationInitializer)_								ReflectionUtils.accessibleConstructor(waiClass).newInstance())__					}_					catch (Throwable ex) {_						throw new ServletException("Failed to instantiate WebApplicationInitializer class", ex)__					}_				}_			}_		}__		if (initializers.isEmpty()) {_			servletContext.log("No Spring WebApplicationInitializer types detected on classpath")__			return__		}__		servletContext.log(initializers.size() + " Spring WebApplicationInitializers detected on classpath")__		AnnotationAwareOrderComparator.sort(initializers)__		for (WebApplicationInitializer initializer : initializers) {_			initializer.onStartup(servletContext)__		}_	};delegate,the,code,servlet,context,to,any,link,web,application,initializer,implementations,present,on,the,application,classpath,p,because,this,class,declares,code,handles,types,web,application,initializer,class,servlet,3,0,containers,will,automatically,scan,the,classpath,for,implementations,of,spring,s,code,web,application,initializer,interface,and,provide,the,set,of,all,such,types,to,the,code,web,app,initializer,classes,parameter,of,this,method,p,if,no,code,web,application,initializer,implementations,are,found,on,the,classpath,this,method,is,effectively,a,no,op,an,info,level,log,message,will,be,issued,notifying,the,user,that,the,code,servlet,container,initializer,has,indeed,been,invoked,but,that,no,code,web,application,initializer,implementations,were,found,p,assuming,that,one,or,more,code,web,application,initializer,types,are,detected,they,will,be,instantiated,and,em,sorted,em,if,the,link,org,springframework,core,annotation,order,order,annotation,is,present,or,the,link,org,springframework,core,ordered,ordered,interface,has,been,implemented,then,the,link,web,application,initializer,on,startup,servlet,context,method,will,be,invoked,on,each,instance,delegating,the,code,servlet,context,such,that,each,instance,may,register,and,configure,servlets,such,as,spring,s,code,dispatcher,servlet,listeners,such,as,spring,s,code,context,loader,listener,or,any,other,servlet,api,componentry,such,as,filters,param,web,app,initializer,classes,all,implementations,of,link,web,application,initializer,found,on,the,application,classpath,param,servlet,context,the,servlet,context,to,be,initialized,see,web,application,initializer,on,startup,servlet,context,see,annotation,aware,order,comparator;override,public,void,on,startup,nullable,set,class,web,app,initializer,classes,servlet,context,servlet,context,throws,servlet,exception,list,web,application,initializer,initializers,new,linked,list,if,web,app,initializer,classes,null,for,class,wai,class,web,app,initializer,classes,if,wai,class,is,interface,modifier,is,abstract,wai,class,get,modifiers,web,application,initializer,class,is,assignable,from,wai,class,try,initializers,add,web,application,initializer,reflection,utils,accessible,constructor,wai,class,new,instance,catch,throwable,ex,throw,new,servlet,exception,failed,to,instantiate,web,application,initializer,class,ex,if,initializers,is,empty,servlet,context,log,no,spring,web,application,initializer,types,detected,on,classpath,return,servlet,context,log,initializers,size,spring,web,application,initializers,detected,on,classpath,annotation,aware,order,comparator,sort,initializers,for,web,application,initializer,initializer,initializers,initializer,on,startup,servlet,context
