# id;timestamp;commentText;codeText;commentWords;codeWords
CommonsMultipartFile -> public final FileItem getFileItem();1328020251;Return the underlying <code>org.apache.commons.fileupload.FileItem</code>_instance. There is hardly any need to access this.;public final FileItem getFileItem() {_		return this.fileItem__	};return,the,underlying,code,org,apache,commons,fileupload,file,item,code,instance,there,is,hardly,any,need,to,access,this;public,final,file,item,get,file,item,return,this,file,item
CommonsMultipartFile -> public final FileItem getFileItem();1356735495;Return the underlying {@code org.apache.commons.fileupload.FileItem}_instance. There is hardly any need to access this.;public final FileItem getFileItem() {_		return this.fileItem__	};return,the,underlying,code,org,apache,commons,fileupload,file,item,instance,there,is,hardly,any,need,to,access,this;public,final,file,item,get,file,item,return,this,file,item
CommonsMultipartFile -> public final FileItem getFileItem();1357119239;Return the underlying {@code org.apache.commons.fileupload.FileItem}_instance. There is hardly any need to access this.;public final FileItem getFileItem() {_		return this.fileItem__	};return,the,underlying,code,org,apache,commons,fileupload,file,item,instance,there,is,hardly,any,need,to,access,this;public,final,file,item,get,file,item,return,this,file,item
CommonsMultipartFile -> public final FileItem getFileItem();1368482696;Return the underlying {@code org.apache.commons.fileupload.FileItem}_instance. There is hardly any need to access this.;public final FileItem getFileItem() {_		return this.fileItem__	};return,the,underlying,code,org,apache,commons,fileupload,file,item,instance,there,is,hardly,any,need,to,access,this;public,final,file,item,get,file,item,return,this,file,item
CommonsMultipartFile -> public final FileItem getFileItem();1413848647;Return the underlying {@code org.apache.commons.fileupload.FileItem}_instance. There is hardly any need to access this.;public final FileItem getFileItem() {_		return this.fileItem__	};return,the,underlying,code,org,apache,commons,fileupload,file,item,instance,there,is,hardly,any,need,to,access,this;public,final,file,item,get,file,item,return,this,file,item
CommonsMultipartFile -> public final FileItem getFileItem();1426267150;Return the underlying {@code org.apache.commons.fileupload.FileItem}_instance. There is hardly any need to access this.;public final FileItem getFileItem() {_		return this.fileItem__	};return,the,underlying,code,org,apache,commons,fileupload,file,item,instance,there,is,hardly,any,need,to,access,this;public,final,file,item,get,file,item,return,this,file,item
CommonsMultipartFile -> public final FileItem getFileItem();1433453260;Return the underlying {@code org.apache.commons.fileupload.FileItem}_instance. There is hardly any need to access this.;public final FileItem getFileItem() {_		return this.fileItem__	};return,the,underlying,code,org,apache,commons,fileupload,file,item,instance,there,is,hardly,any,need,to,access,this;public,final,file,item,get,file,item,return,this,file,item
CommonsMultipartFile -> public final FileItem getFileItem();1444681540;Return the underlying {@code org.apache.commons.fileupload.FileItem}_instance. There is hardly any need to access this.;public final FileItem getFileItem() {_		return this.fileItem__	};return,the,underlying,code,org,apache,commons,fileupload,file,item,instance,there,is,hardly,any,need,to,access,this;public,final,file,item,get,file,item,return,this,file,item
CommonsMultipartFile -> public final FileItem getFileItem();1447195420;Return the underlying {@code org.apache.commons.fileupload.FileItem}_instance. There is hardly any need to access this.;public final FileItem getFileItem() {_		return this.fileItem__	};return,the,underlying,code,org,apache,commons,fileupload,file,item,instance,there,is,hardly,any,need,to,access,this;public,final,file,item,get,file,item,return,this,file,item
CommonsMultipartFile -> public final FileItem getFileItem();1481321151;Return the underlying {@code org.apache.commons.fileupload.FileItem}_instance. There is hardly any need to access this.;public final FileItem getFileItem() {_		return this.fileItem__	};return,the,underlying,code,org,apache,commons,fileupload,file,item,instance,there,is,hardly,any,need,to,access,this;public,final,file,item,get,file,item,return,this,file,item
CommonsMultipartFile -> public final FileItem getFileItem();1490349999;Return the underlying {@code org.apache.commons.fileupload.FileItem}_instance. There is hardly any need to access this.;public final FileItem getFileItem() {_		return this.fileItem__	};return,the,underlying,code,org,apache,commons,fileupload,file,item,instance,there,is,hardly,any,need,to,access,this;public,final,file,item,get,file,item,return,this,file,item
CommonsMultipartFile -> public final FileItem getFileItem();1519588127;Return the underlying {@code org.apache.commons.fileupload.FileItem}_instance. There is hardly any need to access this.;public final FileItem getFileItem() {_		return this.fileItem__	};return,the,underlying,code,org,apache,commons,fileupload,file,item,instance,there,is,hardly,any,need,to,access,this;public,final,file,item,get,file,item,return,this,file,item
CommonsMultipartFile -> public final FileItem getFileItem();1519732288;Return the underlying {@code org.apache.commons.fileupload.FileItem}_instance. There is hardly any need to access this.;public final FileItem getFileItem() {_		return this.fileItem__	};return,the,underlying,code,org,apache,commons,fileupload,file,item,instance,there,is,hardly,any,need,to,access,this;public,final,file,item,get,file,item,return,this,file,item
CommonsMultipartFile -> public final FileItem getFileItem();1519772955;Return the underlying {@code org.apache.commons.fileupload.FileItem}_instance. There is hardly any need to access this.;public final FileItem getFileItem() {_		return this.fileItem__	};return,the,underlying,code,org,apache,commons,fileupload,file,item,instance,there,is,hardly,any,need,to,access,this;public,final,file,item,get,file,item,return,this,file,item
CommonsMultipartFile -> public final FileItem getFileItem();1528929756;Return the underlying {@code org.apache.commons.fileupload.FileItem}_instance. There is hardly any need to access this.;public final FileItem getFileItem() {_		return this.fileItem__	};return,the,underlying,code,org,apache,commons,fileupload,file,item,instance,there,is,hardly,any,need,to,access,this;public,final,file,item,get,file,item,return,this,file,item
CommonsMultipartFile -> public final FileItem getFileItem();1529361191;Return the underlying {@code org.apache.commons.fileupload.FileItem}_instance. There is hardly any need to access this.;public final FileItem getFileItem() {_		return this.fileItem__	};return,the,underlying,code,org,apache,commons,fileupload,file,item,instance,there,is,hardly,any,need,to,access,this;public,final,file,item,get,file,item,return,this,file,item
CommonsMultipartFile -> public final FileItem getFileItem();1529948549;Return the underlying {@code org.apache.commons.fileupload.FileItem}_instance. There is hardly any need to access this.;public final FileItem getFileItem() {_		return this.fileItem__	};return,the,underlying,code,org,apache,commons,fileupload,file,item,instance,there,is,hardly,any,need,to,access,this;public,final,file,item,get,file,item,return,this,file,item
CommonsMultipartFile -> public final FileItem getFileItem();1536962806;Return the underlying {@code org.apache.commons.fileupload.FileItem}_instance. There is hardly any need to access this.;public final FileItem getFileItem() {_		return this.fileItem__	};return,the,underlying,code,org,apache,commons,fileupload,file,item,instance,there,is,hardly,any,need,to,access,this;public,final,file,item,get,file,item,return,this,file,item
CommonsMultipartFile -> public String getStorageDescription();1328020251;Return a description for the storage location of the multipart content._Tries to be as specific as possible: mentions the file location in case_of a temporary file.;public String getStorageDescription() {_		if (this.fileItem.isInMemory()) {_			return "in memory"__		}_		else if (this.fileItem instanceof DiskFileItem) {_			return "at [" + ((DiskFileItem) this.fileItem).getStoreLocation().getAbsolutePath() + "]"__		}_		else {_			return "on disk"__		}_	};return,a,description,for,the,storage,location,of,the,multipart,content,tries,to,be,as,specific,as,possible,mentions,the,file,location,in,case,of,a,temporary,file;public,string,get,storage,description,if,this,file,item,is,in,memory,return,in,memory,else,if,this,file,item,instanceof,disk,file,item,return,at,disk,file,item,this,file,item,get,store,location,get,absolute,path,else,return,on,disk
CommonsMultipartFile -> public String getStorageDescription();1356735495;Return a description for the storage location of the multipart content._Tries to be as specific as possible: mentions the file location in case_of a temporary file.;public String getStorageDescription() {_		if (this.fileItem.isInMemory()) {_			return "in memory"__		}_		else if (this.fileItem instanceof DiskFileItem) {_			return "at [" + ((DiskFileItem) this.fileItem).getStoreLocation().getAbsolutePath() + "]"__		}_		else {_			return "on disk"__		}_	};return,a,description,for,the,storage,location,of,the,multipart,content,tries,to,be,as,specific,as,possible,mentions,the,file,location,in,case,of,a,temporary,file;public,string,get,storage,description,if,this,file,item,is,in,memory,return,in,memory,else,if,this,file,item,instanceof,disk,file,item,return,at,disk,file,item,this,file,item,get,store,location,get,absolute,path,else,return,on,disk
CommonsMultipartFile -> public String getStorageDescription();1357119239;Return a description for the storage location of the multipart content._Tries to be as specific as possible: mentions the file location in case_of a temporary file.;public String getStorageDescription() {_		if (this.fileItem.isInMemory()) {_			return "in memory"__		}_		else if (this.fileItem instanceof DiskFileItem) {_			return "at [" + ((DiskFileItem) this.fileItem).getStoreLocation().getAbsolutePath() + "]"__		}_		else {_			return "on disk"__		}_	};return,a,description,for,the,storage,location,of,the,multipart,content,tries,to,be,as,specific,as,possible,mentions,the,file,location,in,case,of,a,temporary,file;public,string,get,storage,description,if,this,file,item,is,in,memory,return,in,memory,else,if,this,file,item,instanceof,disk,file,item,return,at,disk,file,item,this,file,item,get,store,location,get,absolute,path,else,return,on,disk
CommonsMultipartFile -> public String getStorageDescription();1368482696;Return a description for the storage location of the multipart content._Tries to be as specific as possible: mentions the file location in case_of a temporary file.;public String getStorageDescription() {_		if (this.fileItem.isInMemory()) {_			return "in memory"__		}_		else if (this.fileItem instanceof DiskFileItem) {_			return "at [" + ((DiskFileItem) this.fileItem).getStoreLocation().getAbsolutePath() + "]"__		}_		else {_			return "on disk"__		}_	};return,a,description,for,the,storage,location,of,the,multipart,content,tries,to,be,as,specific,as,possible,mentions,the,file,location,in,case,of,a,temporary,file;public,string,get,storage,description,if,this,file,item,is,in,memory,return,in,memory,else,if,this,file,item,instanceof,disk,file,item,return,at,disk,file,item,this,file,item,get,store,location,get,absolute,path,else,return,on,disk
CommonsMultipartFile -> public String getStorageDescription();1413848647;Return a description for the storage location of the multipart content._Tries to be as specific as possible: mentions the file location in case_of a temporary file.;public String getStorageDescription() {_		if (this.fileItem.isInMemory()) {_			return "in memory"__		}_		else if (this.fileItem instanceof DiskFileItem) {_			return "at [" + ((DiskFileItem) this.fileItem).getStoreLocation().getAbsolutePath() + "]"__		}_		else {_			return "on disk"__		}_	};return,a,description,for,the,storage,location,of,the,multipart,content,tries,to,be,as,specific,as,possible,mentions,the,file,location,in,case,of,a,temporary,file;public,string,get,storage,description,if,this,file,item,is,in,memory,return,in,memory,else,if,this,file,item,instanceof,disk,file,item,return,at,disk,file,item,this,file,item,get,store,location,get,absolute,path,else,return,on,disk
CommonsMultipartFile -> public String getStorageDescription();1426267150;Return a description for the storage location of the multipart content._Tries to be as specific as possible: mentions the file location in case_of a temporary file.;public String getStorageDescription() {_		if (this.fileItem.isInMemory()) {_			return "in memory"__		}_		else if (this.fileItem instanceof DiskFileItem) {_			return "at [" + ((DiskFileItem) this.fileItem).getStoreLocation().getAbsolutePath() + "]"__		}_		else {_			return "on disk"__		}_	};return,a,description,for,the,storage,location,of,the,multipart,content,tries,to,be,as,specific,as,possible,mentions,the,file,location,in,case,of,a,temporary,file;public,string,get,storage,description,if,this,file,item,is,in,memory,return,in,memory,else,if,this,file,item,instanceof,disk,file,item,return,at,disk,file,item,this,file,item,get,store,location,get,absolute,path,else,return,on,disk
CommonsMultipartFile -> public String getStorageDescription();1433453260;Return a description for the storage location of the multipart content._Tries to be as specific as possible: mentions the file location in case_of a temporary file.;public String getStorageDescription() {_		if (this.fileItem.isInMemory()) {_			return "in memory"__		}_		else if (this.fileItem instanceof DiskFileItem) {_			return "at [" + ((DiskFileItem) this.fileItem).getStoreLocation().getAbsolutePath() + "]"__		}_		else {_			return "on disk"__		}_	};return,a,description,for,the,storage,location,of,the,multipart,content,tries,to,be,as,specific,as,possible,mentions,the,file,location,in,case,of,a,temporary,file;public,string,get,storage,description,if,this,file,item,is,in,memory,return,in,memory,else,if,this,file,item,instanceof,disk,file,item,return,at,disk,file,item,this,file,item,get,store,location,get,absolute,path,else,return,on,disk
CommonsMultipartFile -> public String getStorageDescription();1444681540;Return a description for the storage location of the multipart content._Tries to be as specific as possible: mentions the file location in case_of a temporary file.;public String getStorageDescription() {_		if (this.fileItem.isInMemory()) {_			return "in memory"__		}_		else if (this.fileItem instanceof DiskFileItem) {_			return "at [" + ((DiskFileItem) this.fileItem).getStoreLocation().getAbsolutePath() + "]"__		}_		else {_			return "on disk"__		}_	};return,a,description,for,the,storage,location,of,the,multipart,content,tries,to,be,as,specific,as,possible,mentions,the,file,location,in,case,of,a,temporary,file;public,string,get,storage,description,if,this,file,item,is,in,memory,return,in,memory,else,if,this,file,item,instanceof,disk,file,item,return,at,disk,file,item,this,file,item,get,store,location,get,absolute,path,else,return,on,disk
CommonsMultipartFile -> public String getStorageDescription();1447195420;Return a description for the storage location of the multipart content._Tries to be as specific as possible: mentions the file location in case_of a temporary file.;public String getStorageDescription() {_		if (this.fileItem.isInMemory()) {_			return "in memory"__		}_		else if (this.fileItem instanceof DiskFileItem) {_			return "at [" + ((DiskFileItem) this.fileItem).getStoreLocation().getAbsolutePath() + "]"__		}_		else {_			return "on disk"__		}_	};return,a,description,for,the,storage,location,of,the,multipart,content,tries,to,be,as,specific,as,possible,mentions,the,file,location,in,case,of,a,temporary,file;public,string,get,storage,description,if,this,file,item,is,in,memory,return,in,memory,else,if,this,file,item,instanceof,disk,file,item,return,at,disk,file,item,this,file,item,get,store,location,get,absolute,path,else,return,on,disk
CommonsMultipartFile -> public String getStorageDescription();1481321151;Return a description for the storage location of the multipart content._Tries to be as specific as possible: mentions the file location in case_of a temporary file.;public String getStorageDescription() {_		if (this.fileItem.isInMemory()) {_			return "in memory"__		}_		else if (this.fileItem instanceof DiskFileItem) {_			return "at [" + ((DiskFileItem) this.fileItem).getStoreLocation().getAbsolutePath() + "]"__		}_		else {_			return "on disk"__		}_	};return,a,description,for,the,storage,location,of,the,multipart,content,tries,to,be,as,specific,as,possible,mentions,the,file,location,in,case,of,a,temporary,file;public,string,get,storage,description,if,this,file,item,is,in,memory,return,in,memory,else,if,this,file,item,instanceof,disk,file,item,return,at,disk,file,item,this,file,item,get,store,location,get,absolute,path,else,return,on,disk
CommonsMultipartFile -> public String getStorageDescription();1490349999;Return a description for the storage location of the multipart content._Tries to be as specific as possible: mentions the file location in case_of a temporary file.;public String getStorageDescription() {_		if (this.fileItem.isInMemory()) {_			return "in memory"__		}_		else if (this.fileItem instanceof DiskFileItem) {_			return "at [" + ((DiskFileItem) this.fileItem).getStoreLocation().getAbsolutePath() + "]"__		}_		else {_			return "on disk"__		}_	};return,a,description,for,the,storage,location,of,the,multipart,content,tries,to,be,as,specific,as,possible,mentions,the,file,location,in,case,of,a,temporary,file;public,string,get,storage,description,if,this,file,item,is,in,memory,return,in,memory,else,if,this,file,item,instanceof,disk,file,item,return,at,disk,file,item,this,file,item,get,store,location,get,absolute,path,else,return,on,disk
CommonsMultipartFile -> public String getStorageDescription();1519588127;Return a description for the storage location of the multipart content._Tries to be as specific as possible: mentions the file location in case_of a temporary file.;public String getStorageDescription() {_		if (this.fileItem.isInMemory()) {_			return "in memory"__		}_		else if (this.fileItem instanceof DiskFileItem) {_			return "at [" + ((DiskFileItem) this.fileItem).getStoreLocation().getAbsolutePath() + "]"__		}_		else {_			return "on disk"__		}_	};return,a,description,for,the,storage,location,of,the,multipart,content,tries,to,be,as,specific,as,possible,mentions,the,file,location,in,case,of,a,temporary,file;public,string,get,storage,description,if,this,file,item,is,in,memory,return,in,memory,else,if,this,file,item,instanceof,disk,file,item,return,at,disk,file,item,this,file,item,get,store,location,get,absolute,path,else,return,on,disk
CommonsMultipartFile -> public String getStorageDescription();1519732288;Return a description for the storage location of the multipart content._Tries to be as specific as possible: mentions the file location in case_of a temporary file.;public String getStorageDescription() {_		if (this.fileItem.isInMemory()) {_			return "in memory"__		}_		else if (this.fileItem instanceof DiskFileItem) {_			return "at [" + ((DiskFileItem) this.fileItem).getStoreLocation().getAbsolutePath() + "]"__		}_		else {_			return "on disk"__		}_	};return,a,description,for,the,storage,location,of,the,multipart,content,tries,to,be,as,specific,as,possible,mentions,the,file,location,in,case,of,a,temporary,file;public,string,get,storage,description,if,this,file,item,is,in,memory,return,in,memory,else,if,this,file,item,instanceof,disk,file,item,return,at,disk,file,item,this,file,item,get,store,location,get,absolute,path,else,return,on,disk
CommonsMultipartFile -> public String getStorageDescription();1519772955;Return a description for the storage location of the multipart content._Tries to be as specific as possible: mentions the file location in case_of a temporary file.;public String getStorageDescription() {_		if (this.fileItem.isInMemory()) {_			return "in memory"__		}_		else if (this.fileItem instanceof DiskFileItem) {_			return "at [" + ((DiskFileItem) this.fileItem).getStoreLocation().getAbsolutePath() + "]"__		}_		else {_			return "on disk"__		}_	};return,a,description,for,the,storage,location,of,the,multipart,content,tries,to,be,as,specific,as,possible,mentions,the,file,location,in,case,of,a,temporary,file;public,string,get,storage,description,if,this,file,item,is,in,memory,return,in,memory,else,if,this,file,item,instanceof,disk,file,item,return,at,disk,file,item,this,file,item,get,store,location,get,absolute,path,else,return,on,disk
CommonsMultipartFile -> public String getStorageDescription();1528929756;Return a description for the storage location of the multipart content._Tries to be as specific as possible: mentions the file location in case_of a temporary file.;public String getStorageDescription() {_		if (this.fileItem.isInMemory()) {_			return "in memory"__		}_		else if (this.fileItem instanceof DiskFileItem) {_			return "at [" + ((DiskFileItem) this.fileItem).getStoreLocation().getAbsolutePath() + "]"__		}_		else {_			return "on disk"__		}_	};return,a,description,for,the,storage,location,of,the,multipart,content,tries,to,be,as,specific,as,possible,mentions,the,file,location,in,case,of,a,temporary,file;public,string,get,storage,description,if,this,file,item,is,in,memory,return,in,memory,else,if,this,file,item,instanceof,disk,file,item,return,at,disk,file,item,this,file,item,get,store,location,get,absolute,path,else,return,on,disk
CommonsMultipartFile -> public String getStorageDescription();1529361191;Return a description for the storage location of the multipart content._Tries to be as specific as possible: mentions the file location in case_of a temporary file.;public String getStorageDescription() {_		if (this.fileItem.isInMemory()) {_			return "in memory"__		}_		else if (this.fileItem instanceof DiskFileItem) {_			return "at [" + ((DiskFileItem) this.fileItem).getStoreLocation().getAbsolutePath() + "]"__		}_		else {_			return "on disk"__		}_	};return,a,description,for,the,storage,location,of,the,multipart,content,tries,to,be,as,specific,as,possible,mentions,the,file,location,in,case,of,a,temporary,file;public,string,get,storage,description,if,this,file,item,is,in,memory,return,in,memory,else,if,this,file,item,instanceof,disk,file,item,return,at,disk,file,item,this,file,item,get,store,location,get,absolute,path,else,return,on,disk
CommonsMultipartFile -> public String getStorageDescription();1529948549;Return a description for the storage location of the multipart content._Tries to be as specific as possible: mentions the file location in case_of a temporary file.;public String getStorageDescription() {_		if (this.fileItem.isInMemory()) {_			return "in memory"__		}_		else if (this.fileItem instanceof DiskFileItem) {_			return "at [" + ((DiskFileItem) this.fileItem).getStoreLocation().getAbsolutePath() + "]"__		}_		else {_			return "on disk"__		}_	};return,a,description,for,the,storage,location,of,the,multipart,content,tries,to,be,as,specific,as,possible,mentions,the,file,location,in,case,of,a,temporary,file;public,string,get,storage,description,if,this,file,item,is,in,memory,return,in,memory,else,if,this,file,item,instanceof,disk,file,item,return,at,disk,file,item,this,file,item,get,store,location,get,absolute,path,else,return,on,disk
CommonsMultipartFile -> public String getStorageDescription();1536962806;Return a description for the storage location of the multipart content._Tries to be as specific as possible: mentions the file location in case_of a temporary file.;public String getStorageDescription() {_		if (this.fileItem.isInMemory()) {_			return "in memory"__		}_		else if (this.fileItem instanceof DiskFileItem) {_			return "at [" + ((DiskFileItem) this.fileItem).getStoreLocation().getAbsolutePath() + "]"__		}_		else {_			return "on disk"__		}_	};return,a,description,for,the,storage,location,of,the,multipart,content,tries,to,be,as,specific,as,possible,mentions,the,file,location,in,case,of,a,temporary,file;public,string,get,storage,description,if,this,file,item,is,in,memory,return,in,memory,else,if,this,file,item,instanceof,disk,file,item,return,at,disk,file,item,this,file,item,get,store,location,get,absolute,path,else,return,on,disk
CommonsMultipartFile -> public void setPreserveFilename(boolean preserveFilename);1481321151;Set whether to preserve the filename as sent by the client, not stripping off_path information in {@link CommonsMultipartFile#getOriginalFilename()}._<p>Default is "false", stripping off path information that may prefix the_actual filename e.g. from Opera. Switch this to "true" for preserving the_client-specified filename as-is, including potential path separators._@since 4.3.5_@see #getOriginalFilename()_@see CommonsMultipartResolver#setPreserveFilename(boolean);public void setPreserveFilename(boolean preserveFilename) {_		this.preserveFilename = preserveFilename__	};set,whether,to,preserve,the,filename,as,sent,by,the,client,not,stripping,off,path,information,in,link,commons,multipart,file,get,original,filename,p,default,is,false,stripping,off,path,information,that,may,prefix,the,actual,filename,e,g,from,opera,switch,this,to,true,for,preserving,the,client,specified,filename,as,is,including,potential,path,separators,since,4,3,5,see,get,original,filename,see,commons,multipart,resolver,set,preserve,filename,boolean;public,void,set,preserve,filename,boolean,preserve,filename,this,preserve,filename,preserve,filename
CommonsMultipartFile -> public void setPreserveFilename(boolean preserveFilename);1490349999;Set whether to preserve the filename as sent by the client, not stripping off_path information in {@link CommonsMultipartFile#getOriginalFilename()}._<p>Default is "false", stripping off path information that may prefix the_actual filename e.g. from Opera. Switch this to "true" for preserving the_client-specified filename as-is, including potential path separators._@since 4.3.5_@see #getOriginalFilename()_@see CommonsMultipartResolver#setPreserveFilename(boolean);public void setPreserveFilename(boolean preserveFilename) {_		this.preserveFilename = preserveFilename__	};set,whether,to,preserve,the,filename,as,sent,by,the,client,not,stripping,off,path,information,in,link,commons,multipart,file,get,original,filename,p,default,is,false,stripping,off,path,information,that,may,prefix,the,actual,filename,e,g,from,opera,switch,this,to,true,for,preserving,the,client,specified,filename,as,is,including,potential,path,separators,since,4,3,5,see,get,original,filename,see,commons,multipart,resolver,set,preserve,filename,boolean;public,void,set,preserve,filename,boolean,preserve,filename,this,preserve,filename,preserve,filename
CommonsMultipartFile -> public void setPreserveFilename(boolean preserveFilename);1519588127;Set whether to preserve the filename as sent by the client, not stripping off_path information in {@link CommonsMultipartFile#getOriginalFilename()}._<p>Default is "false", stripping off path information that may prefix the_actual filename e.g. from Opera. Switch this to "true" for preserving the_client-specified filename as-is, including potential path separators._@since 4.3.5_@see #getOriginalFilename()_@see CommonsMultipartResolver#setPreserveFilename(boolean);public void setPreserveFilename(boolean preserveFilename) {_		this.preserveFilename = preserveFilename__	};set,whether,to,preserve,the,filename,as,sent,by,the,client,not,stripping,off,path,information,in,link,commons,multipart,file,get,original,filename,p,default,is,false,stripping,off,path,information,that,may,prefix,the,actual,filename,e,g,from,opera,switch,this,to,true,for,preserving,the,client,specified,filename,as,is,including,potential,path,separators,since,4,3,5,see,get,original,filename,see,commons,multipart,resolver,set,preserve,filename,boolean;public,void,set,preserve,filename,boolean,preserve,filename,this,preserve,filename,preserve,filename
CommonsMultipartFile -> public void setPreserveFilename(boolean preserveFilename);1519732288;Set whether to preserve the filename as sent by the client, not stripping off_path information in {@link CommonsMultipartFile#getOriginalFilename()}._<p>Default is "false", stripping off path information that may prefix the_actual filename e.g. from Opera. Switch this to "true" for preserving the_client-specified filename as-is, including potential path separators._@since 4.3.5_@see #getOriginalFilename()_@see CommonsMultipartResolver#setPreserveFilename(boolean);public void setPreserveFilename(boolean preserveFilename) {_		this.preserveFilename = preserveFilename__	};set,whether,to,preserve,the,filename,as,sent,by,the,client,not,stripping,off,path,information,in,link,commons,multipart,file,get,original,filename,p,default,is,false,stripping,off,path,information,that,may,prefix,the,actual,filename,e,g,from,opera,switch,this,to,true,for,preserving,the,client,specified,filename,as,is,including,potential,path,separators,since,4,3,5,see,get,original,filename,see,commons,multipart,resolver,set,preserve,filename,boolean;public,void,set,preserve,filename,boolean,preserve,filename,this,preserve,filename,preserve,filename
CommonsMultipartFile -> public void setPreserveFilename(boolean preserveFilename);1519772955;Set whether to preserve the filename as sent by the client, not stripping off_path information in {@link CommonsMultipartFile#getOriginalFilename()}._<p>Default is "false", stripping off path information that may prefix the_actual filename e.g. from Opera. Switch this to "true" for preserving the_client-specified filename as-is, including potential path separators._@since 4.3.5_@see #getOriginalFilename()_@see CommonsMultipartResolver#setPreserveFilename(boolean);public void setPreserveFilename(boolean preserveFilename) {_		this.preserveFilename = preserveFilename__	};set,whether,to,preserve,the,filename,as,sent,by,the,client,not,stripping,off,path,information,in,link,commons,multipart,file,get,original,filename,p,default,is,false,stripping,off,path,information,that,may,prefix,the,actual,filename,e,g,from,opera,switch,this,to,true,for,preserving,the,client,specified,filename,as,is,including,potential,path,separators,since,4,3,5,see,get,original,filename,see,commons,multipart,resolver,set,preserve,filename,boolean;public,void,set,preserve,filename,boolean,preserve,filename,this,preserve,filename,preserve,filename
CommonsMultipartFile -> public void setPreserveFilename(boolean preserveFilename);1528929756;Set whether to preserve the filename as sent by the client, not stripping off_path information in {@link CommonsMultipartFile#getOriginalFilename()}._<p>Default is "false", stripping off path information that may prefix the_actual filename e.g. from Opera. Switch this to "true" for preserving the_client-specified filename as-is, including potential path separators._@since 4.3.5_@see #getOriginalFilename()_@see CommonsMultipartResolver#setPreserveFilename(boolean);public void setPreserveFilename(boolean preserveFilename) {_		this.preserveFilename = preserveFilename__	};set,whether,to,preserve,the,filename,as,sent,by,the,client,not,stripping,off,path,information,in,link,commons,multipart,file,get,original,filename,p,default,is,false,stripping,off,path,information,that,may,prefix,the,actual,filename,e,g,from,opera,switch,this,to,true,for,preserving,the,client,specified,filename,as,is,including,potential,path,separators,since,4,3,5,see,get,original,filename,see,commons,multipart,resolver,set,preserve,filename,boolean;public,void,set,preserve,filename,boolean,preserve,filename,this,preserve,filename,preserve,filename
CommonsMultipartFile -> public void setPreserveFilename(boolean preserveFilename);1529361191;Set whether to preserve the filename as sent by the client, not stripping off_path information in {@link CommonsMultipartFile#getOriginalFilename()}._<p>Default is "false", stripping off path information that may prefix the_actual filename e.g. from Opera. Switch this to "true" for preserving the_client-specified filename as-is, including potential path separators._@since 4.3.5_@see #getOriginalFilename()_@see CommonsMultipartResolver#setPreserveFilename(boolean);public void setPreserveFilename(boolean preserveFilename) {_		this.preserveFilename = preserveFilename__	};set,whether,to,preserve,the,filename,as,sent,by,the,client,not,stripping,off,path,information,in,link,commons,multipart,file,get,original,filename,p,default,is,false,stripping,off,path,information,that,may,prefix,the,actual,filename,e,g,from,opera,switch,this,to,true,for,preserving,the,client,specified,filename,as,is,including,potential,path,separators,since,4,3,5,see,get,original,filename,see,commons,multipart,resolver,set,preserve,filename,boolean;public,void,set,preserve,filename,boolean,preserve,filename,this,preserve,filename,preserve,filename
CommonsMultipartFile -> public void setPreserveFilename(boolean preserveFilename);1529948549;Set whether to preserve the filename as sent by the client, not stripping off_path information in {@link CommonsMultipartFile#getOriginalFilename()}._<p>Default is "false", stripping off path information that may prefix the_actual filename e.g. from Opera. Switch this to "true" for preserving the_client-specified filename as-is, including potential path separators._@since 4.3.5_@see #getOriginalFilename()_@see CommonsMultipartResolver#setPreserveFilename(boolean);public void setPreserveFilename(boolean preserveFilename) {_		this.preserveFilename = preserveFilename__	};set,whether,to,preserve,the,filename,as,sent,by,the,client,not,stripping,off,path,information,in,link,commons,multipart,file,get,original,filename,p,default,is,false,stripping,off,path,information,that,may,prefix,the,actual,filename,e,g,from,opera,switch,this,to,true,for,preserving,the,client,specified,filename,as,is,including,potential,path,separators,since,4,3,5,see,get,original,filename,see,commons,multipart,resolver,set,preserve,filename,boolean;public,void,set,preserve,filename,boolean,preserve,filename,this,preserve,filename,preserve,filename
CommonsMultipartFile -> public void setPreserveFilename(boolean preserveFilename);1536962806;Set whether to preserve the filename as sent by the client, not stripping off_path information in {@link CommonsMultipartFile#getOriginalFilename()}._<p>Default is "false", stripping off path information that may prefix the_actual filename e.g. from Opera. Switch this to "true" for preserving the_client-specified filename as-is, including potential path separators._@since 4.3.5_@see #getOriginalFilename()_@see CommonsMultipartResolver#setPreserveFilename(boolean);public void setPreserveFilename(boolean preserveFilename) {_		this.preserveFilename = preserveFilename__	};set,whether,to,preserve,the,filename,as,sent,by,the,client,not,stripping,off,path,information,in,link,commons,multipart,file,get,original,filename,p,default,is,false,stripping,off,path,information,that,may,prefix,the,actual,filename,e,g,from,opera,switch,this,to,true,for,preserving,the,client,specified,filename,as,is,including,potential,path,separators,since,4,3,5,see,get,original,filename,see,commons,multipart,resolver,set,preserve,filename,boolean;public,void,set,preserve,filename,boolean,preserve,filename,this,preserve,filename,preserve,filename
CommonsMultipartFile -> protected boolean isAvailable();1328020251;Determine whether the multipart content is still available._If a temporary file has been moved, the content is no longer available.;protected boolean isAvailable() {_		_		if (this.fileItem.isInMemory()) {_			return true__		}_		_		if (this.fileItem instanceof DiskFileItem) {_			return ((DiskFileItem) this.fileItem).getStoreLocation().exists()__		}_		_		return (this.fileItem.getSize() == this.size)__	};determine,whether,the,multipart,content,is,still,available,if,a,temporary,file,has,been,moved,the,content,is,no,longer,available;protected,boolean,is,available,if,this,file,item,is,in,memory,return,true,if,this,file,item,instanceof,disk,file,item,return,disk,file,item,this,file,item,get,store,location,exists,return,this,file,item,get,size,this,size
CommonsMultipartFile -> protected boolean isAvailable();1356735495;Determine whether the multipart content is still available._If a temporary file has been moved, the content is no longer available.;protected boolean isAvailable() {_		_		if (this.fileItem.isInMemory()) {_			return true__		}_		_		if (this.fileItem instanceof DiskFileItem) {_			return ((DiskFileItem) this.fileItem).getStoreLocation().exists()__		}_		_		return (this.fileItem.getSize() == this.size)__	};determine,whether,the,multipart,content,is,still,available,if,a,temporary,file,has,been,moved,the,content,is,no,longer,available;protected,boolean,is,available,if,this,file,item,is,in,memory,return,true,if,this,file,item,instanceof,disk,file,item,return,disk,file,item,this,file,item,get,store,location,exists,return,this,file,item,get,size,this,size
CommonsMultipartFile -> protected boolean isAvailable();1357119239;Determine whether the multipart content is still available._If a temporary file has been moved, the content is no longer available.;protected boolean isAvailable() {_		_		if (this.fileItem.isInMemory()) {_			return true__		}_		_		if (this.fileItem instanceof DiskFileItem) {_			return ((DiskFileItem) this.fileItem).getStoreLocation().exists()__		}_		_		return (this.fileItem.getSize() == this.size)__	};determine,whether,the,multipart,content,is,still,available,if,a,temporary,file,has,been,moved,the,content,is,no,longer,available;protected,boolean,is,available,if,this,file,item,is,in,memory,return,true,if,this,file,item,instanceof,disk,file,item,return,disk,file,item,this,file,item,get,store,location,exists,return,this,file,item,get,size,this,size
CommonsMultipartFile -> protected boolean isAvailable();1368482696;Determine whether the multipart content is still available._If a temporary file has been moved, the content is no longer available.;protected boolean isAvailable() {_		_		if (this.fileItem.isInMemory()) {_			return true__		}_		_		if (this.fileItem instanceof DiskFileItem) {_			return ((DiskFileItem) this.fileItem).getStoreLocation().exists()__		}_		_		return (this.fileItem.getSize() == this.size)__	};determine,whether,the,multipart,content,is,still,available,if,a,temporary,file,has,been,moved,the,content,is,no,longer,available;protected,boolean,is,available,if,this,file,item,is,in,memory,return,true,if,this,file,item,instanceof,disk,file,item,return,disk,file,item,this,file,item,get,store,location,exists,return,this,file,item,get,size,this,size
CommonsMultipartFile -> protected boolean isAvailable();1413848647;Determine whether the multipart content is still available._If a temporary file has been moved, the content is no longer available.;protected boolean isAvailable() {_		_		if (this.fileItem.isInMemory()) {_			return true__		}_		_		if (this.fileItem instanceof DiskFileItem) {_			return ((DiskFileItem) this.fileItem).getStoreLocation().exists()__		}_		_		return (this.fileItem.getSize() == this.size)__	};determine,whether,the,multipart,content,is,still,available,if,a,temporary,file,has,been,moved,the,content,is,no,longer,available;protected,boolean,is,available,if,this,file,item,is,in,memory,return,true,if,this,file,item,instanceof,disk,file,item,return,disk,file,item,this,file,item,get,store,location,exists,return,this,file,item,get,size,this,size
CommonsMultipartFile -> protected boolean isAvailable();1426267150;Determine whether the multipart content is still available._If a temporary file has been moved, the content is no longer available.;protected boolean isAvailable() {_		_		if (this.fileItem.isInMemory()) {_			return true__		}_		_		if (this.fileItem instanceof DiskFileItem) {_			return ((DiskFileItem) this.fileItem).getStoreLocation().exists()__		}_		_		return (this.fileItem.getSize() == this.size)__	};determine,whether,the,multipart,content,is,still,available,if,a,temporary,file,has,been,moved,the,content,is,no,longer,available;protected,boolean,is,available,if,this,file,item,is,in,memory,return,true,if,this,file,item,instanceof,disk,file,item,return,disk,file,item,this,file,item,get,store,location,exists,return,this,file,item,get,size,this,size
CommonsMultipartFile -> protected boolean isAvailable();1433453260;Determine whether the multipart content is still available._If a temporary file has been moved, the content is no longer available.;protected boolean isAvailable() {_		_		if (this.fileItem.isInMemory()) {_			return true__		}_		_		if (this.fileItem instanceof DiskFileItem) {_			return ((DiskFileItem) this.fileItem).getStoreLocation().exists()__		}_		_		return (this.fileItem.getSize() == this.size)__	};determine,whether,the,multipart,content,is,still,available,if,a,temporary,file,has,been,moved,the,content,is,no,longer,available;protected,boolean,is,available,if,this,file,item,is,in,memory,return,true,if,this,file,item,instanceof,disk,file,item,return,disk,file,item,this,file,item,get,store,location,exists,return,this,file,item,get,size,this,size
CommonsMultipartFile -> protected boolean isAvailable();1444681540;Determine whether the multipart content is still available._If a temporary file has been moved, the content is no longer available.;protected boolean isAvailable() {_		_		if (this.fileItem.isInMemory()) {_			return true__		}_		_		if (this.fileItem instanceof DiskFileItem) {_			return ((DiskFileItem) this.fileItem).getStoreLocation().exists()__		}_		_		return (this.fileItem.getSize() == this.size)__	};determine,whether,the,multipart,content,is,still,available,if,a,temporary,file,has,been,moved,the,content,is,no,longer,available;protected,boolean,is,available,if,this,file,item,is,in,memory,return,true,if,this,file,item,instanceof,disk,file,item,return,disk,file,item,this,file,item,get,store,location,exists,return,this,file,item,get,size,this,size
CommonsMultipartFile -> protected boolean isAvailable();1447195420;Determine whether the multipart content is still available._If a temporary file has been moved, the content is no longer available.;protected boolean isAvailable() {_		_		if (this.fileItem.isInMemory()) {_			return true__		}_		_		if (this.fileItem instanceof DiskFileItem) {_			return ((DiskFileItem) this.fileItem).getStoreLocation().exists()__		}_		_		return (this.fileItem.getSize() == this.size)__	};determine,whether,the,multipart,content,is,still,available,if,a,temporary,file,has,been,moved,the,content,is,no,longer,available;protected,boolean,is,available,if,this,file,item,is,in,memory,return,true,if,this,file,item,instanceof,disk,file,item,return,disk,file,item,this,file,item,get,store,location,exists,return,this,file,item,get,size,this,size
CommonsMultipartFile -> protected boolean isAvailable();1481321151;Determine whether the multipart content is still available._If a temporary file has been moved, the content is no longer available.;protected boolean isAvailable() {_		_		if (this.fileItem.isInMemory()) {_			return true__		}_		_		if (this.fileItem instanceof DiskFileItem) {_			return ((DiskFileItem) this.fileItem).getStoreLocation().exists()__		}_		_		return (this.fileItem.getSize() == this.size)__	};determine,whether,the,multipart,content,is,still,available,if,a,temporary,file,has,been,moved,the,content,is,no,longer,available;protected,boolean,is,available,if,this,file,item,is,in,memory,return,true,if,this,file,item,instanceof,disk,file,item,return,disk,file,item,this,file,item,get,store,location,exists,return,this,file,item,get,size,this,size
CommonsMultipartFile -> protected boolean isAvailable();1490349999;Determine whether the multipart content is still available._If a temporary file has been moved, the content is no longer available.;protected boolean isAvailable() {_		_		if (this.fileItem.isInMemory()) {_			return true__		}_		_		if (this.fileItem instanceof DiskFileItem) {_			return ((DiskFileItem) this.fileItem).getStoreLocation().exists()__		}_		_		return (this.fileItem.getSize() == this.size)__	};determine,whether,the,multipart,content,is,still,available,if,a,temporary,file,has,been,moved,the,content,is,no,longer,available;protected,boolean,is,available,if,this,file,item,is,in,memory,return,true,if,this,file,item,instanceof,disk,file,item,return,disk,file,item,this,file,item,get,store,location,exists,return,this,file,item,get,size,this,size
CommonsMultipartFile -> protected boolean isAvailable();1519588127;Determine whether the multipart content is still available._If a temporary file has been moved, the content is no longer available.;protected boolean isAvailable() {_		_		if (this.fileItem.isInMemory()) {_			return true__		}_		_		if (this.fileItem instanceof DiskFileItem) {_			return ((DiskFileItem) this.fileItem).getStoreLocation().exists()__		}_		_		return (this.fileItem.getSize() == this.size)__	};determine,whether,the,multipart,content,is,still,available,if,a,temporary,file,has,been,moved,the,content,is,no,longer,available;protected,boolean,is,available,if,this,file,item,is,in,memory,return,true,if,this,file,item,instanceof,disk,file,item,return,disk,file,item,this,file,item,get,store,location,exists,return,this,file,item,get,size,this,size
CommonsMultipartFile -> protected boolean isAvailable();1519732288;Determine whether the multipart content is still available._If a temporary file has been moved, the content is no longer available.;protected boolean isAvailable() {_		_		if (this.fileItem.isInMemory()) {_			return true__		}_		_		if (this.fileItem instanceof DiskFileItem) {_			return ((DiskFileItem) this.fileItem).getStoreLocation().exists()__		}_		_		return (this.fileItem.getSize() == this.size)__	};determine,whether,the,multipart,content,is,still,available,if,a,temporary,file,has,been,moved,the,content,is,no,longer,available;protected,boolean,is,available,if,this,file,item,is,in,memory,return,true,if,this,file,item,instanceof,disk,file,item,return,disk,file,item,this,file,item,get,store,location,exists,return,this,file,item,get,size,this,size
CommonsMultipartFile -> protected boolean isAvailable();1519772955;Determine whether the multipart content is still available._If a temporary file has been moved, the content is no longer available.;protected boolean isAvailable() {_		_		if (this.fileItem.isInMemory()) {_			return true__		}_		_		if (this.fileItem instanceof DiskFileItem) {_			return ((DiskFileItem) this.fileItem).getStoreLocation().exists()__		}_		_		return (this.fileItem.getSize() == this.size)__	};determine,whether,the,multipart,content,is,still,available,if,a,temporary,file,has,been,moved,the,content,is,no,longer,available;protected,boolean,is,available,if,this,file,item,is,in,memory,return,true,if,this,file,item,instanceof,disk,file,item,return,disk,file,item,this,file,item,get,store,location,exists,return,this,file,item,get,size,this,size
CommonsMultipartFile -> protected boolean isAvailable();1528929756;Determine whether the multipart content is still available._If a temporary file has been moved, the content is no longer available.;protected boolean isAvailable() {_		_		if (this.fileItem.isInMemory()) {_			return true__		}_		_		if (this.fileItem instanceof DiskFileItem) {_			return ((DiskFileItem) this.fileItem).getStoreLocation().exists()__		}_		_		return (this.fileItem.getSize() == this.size)__	};determine,whether,the,multipart,content,is,still,available,if,a,temporary,file,has,been,moved,the,content,is,no,longer,available;protected,boolean,is,available,if,this,file,item,is,in,memory,return,true,if,this,file,item,instanceof,disk,file,item,return,disk,file,item,this,file,item,get,store,location,exists,return,this,file,item,get,size,this,size
CommonsMultipartFile -> protected boolean isAvailable();1529361191;Determine whether the multipart content is still available._If a temporary file has been moved, the content is no longer available.;protected boolean isAvailable() {_		_		if (this.fileItem.isInMemory()) {_			return true__		}_		_		if (this.fileItem instanceof DiskFileItem) {_			return ((DiskFileItem) this.fileItem).getStoreLocation().exists()__		}_		_		return (this.fileItem.getSize() == this.size)__	};determine,whether,the,multipart,content,is,still,available,if,a,temporary,file,has,been,moved,the,content,is,no,longer,available;protected,boolean,is,available,if,this,file,item,is,in,memory,return,true,if,this,file,item,instanceof,disk,file,item,return,disk,file,item,this,file,item,get,store,location,exists,return,this,file,item,get,size,this,size
CommonsMultipartFile -> protected boolean isAvailable();1529948549;Determine whether the multipart content is still available._If a temporary file has been moved, the content is no longer available.;protected boolean isAvailable() {_		_		if (this.fileItem.isInMemory()) {_			return true__		}_		_		if (this.fileItem instanceof DiskFileItem) {_			return ((DiskFileItem) this.fileItem).getStoreLocation().exists()__		}_		_		return (this.fileItem.getSize() == this.size)__	};determine,whether,the,multipart,content,is,still,available,if,a,temporary,file,has,been,moved,the,content,is,no,longer,available;protected,boolean,is,available,if,this,file,item,is,in,memory,return,true,if,this,file,item,instanceof,disk,file,item,return,disk,file,item,this,file,item,get,store,location,exists,return,this,file,item,get,size,this,size
CommonsMultipartFile -> protected boolean isAvailable();1536962806;Determine whether the multipart content is still available._If a temporary file has been moved, the content is no longer available.;protected boolean isAvailable() {_		_		if (this.fileItem.isInMemory()) {_			return true__		}_		_		if (this.fileItem instanceof DiskFileItem) {_			return ((DiskFileItem) this.fileItem).getStoreLocation().exists()__		}_		_		return (this.fileItem.getSize() == this.size)__	};determine,whether,the,multipart,content,is,still,available,if,a,temporary,file,has,been,moved,the,content,is,no,longer,available;protected,boolean,is,available,if,this,file,item,is,in,memory,return,true,if,this,file,item,instanceof,disk,file,item,return,disk,file,item,this,file,item,get,store,location,exists,return,this,file,item,get,size,this,size
CommonsMultipartFile -> public CommonsMultipartFile(FileItem fileItem);1328020251;Create an instance wrapping the given FileItem._@param fileItem the FileItem to wrap;public CommonsMultipartFile(FileItem fileItem) {_		this.fileItem = fileItem__		this.size = this.fileItem.getSize()__	};create,an,instance,wrapping,the,given,file,item,param,file,item,the,file,item,to,wrap;public,commons,multipart,file,file,item,file,item,this,file,item,file,item,this,size,this,file,item,get,size
CommonsMultipartFile -> public CommonsMultipartFile(FileItem fileItem);1356735495;Create an instance wrapping the given FileItem._@param fileItem the FileItem to wrap;public CommonsMultipartFile(FileItem fileItem) {_		this.fileItem = fileItem__		this.size = this.fileItem.getSize()__	};create,an,instance,wrapping,the,given,file,item,param,file,item,the,file,item,to,wrap;public,commons,multipart,file,file,item,file,item,this,file,item,file,item,this,size,this,file,item,get,size
CommonsMultipartFile -> public CommonsMultipartFile(FileItem fileItem);1357119239;Create an instance wrapping the given FileItem._@param fileItem the FileItem to wrap;public CommonsMultipartFile(FileItem fileItem) {_		this.fileItem = fileItem__		this.size = this.fileItem.getSize()__	};create,an,instance,wrapping,the,given,file,item,param,file,item,the,file,item,to,wrap;public,commons,multipart,file,file,item,file,item,this,file,item,file,item,this,size,this,file,item,get,size
CommonsMultipartFile -> public CommonsMultipartFile(FileItem fileItem);1368482696;Create an instance wrapping the given FileItem._@param fileItem the FileItem to wrap;public CommonsMultipartFile(FileItem fileItem) {_		this.fileItem = fileItem__		this.size = this.fileItem.getSize()__	};create,an,instance,wrapping,the,given,file,item,param,file,item,the,file,item,to,wrap;public,commons,multipart,file,file,item,file,item,this,file,item,file,item,this,size,this,file,item,get,size
CommonsMultipartFile -> public CommonsMultipartFile(FileItem fileItem);1413848647;Create an instance wrapping the given FileItem._@param fileItem the FileItem to wrap;public CommonsMultipartFile(FileItem fileItem) {_		this.fileItem = fileItem__		this.size = this.fileItem.getSize()__	};create,an,instance,wrapping,the,given,file,item,param,file,item,the,file,item,to,wrap;public,commons,multipart,file,file,item,file,item,this,file,item,file,item,this,size,this,file,item,get,size
CommonsMultipartFile -> public CommonsMultipartFile(FileItem fileItem);1426267150;Create an instance wrapping the given FileItem._@param fileItem the FileItem to wrap;public CommonsMultipartFile(FileItem fileItem) {_		this.fileItem = fileItem__		this.size = this.fileItem.getSize()__	};create,an,instance,wrapping,the,given,file,item,param,file,item,the,file,item,to,wrap;public,commons,multipart,file,file,item,file,item,this,file,item,file,item,this,size,this,file,item,get,size
CommonsMultipartFile -> public CommonsMultipartFile(FileItem fileItem);1433453260;Create an instance wrapping the given FileItem._@param fileItem the FileItem to wrap;public CommonsMultipartFile(FileItem fileItem) {_		this.fileItem = fileItem__		this.size = this.fileItem.getSize()__	};create,an,instance,wrapping,the,given,file,item,param,file,item,the,file,item,to,wrap;public,commons,multipart,file,file,item,file,item,this,file,item,file,item,this,size,this,file,item,get,size
CommonsMultipartFile -> public CommonsMultipartFile(FileItem fileItem);1444681540;Create an instance wrapping the given FileItem._@param fileItem the FileItem to wrap;public CommonsMultipartFile(FileItem fileItem) {_		this.fileItem = fileItem__		this.size = this.fileItem.getSize()__	};create,an,instance,wrapping,the,given,file,item,param,file,item,the,file,item,to,wrap;public,commons,multipart,file,file,item,file,item,this,file,item,file,item,this,size,this,file,item,get,size
CommonsMultipartFile -> public CommonsMultipartFile(FileItem fileItem);1447195420;Create an instance wrapping the given FileItem._@param fileItem the FileItem to wrap;public CommonsMultipartFile(FileItem fileItem) {_		this.fileItem = fileItem__		this.size = this.fileItem.getSize()__	};create,an,instance,wrapping,the,given,file,item,param,file,item,the,file,item,to,wrap;public,commons,multipart,file,file,item,file,item,this,file,item,file,item,this,size,this,file,item,get,size
CommonsMultipartFile -> public CommonsMultipartFile(FileItem fileItem);1481321151;Create an instance wrapping the given FileItem._@param fileItem the FileItem to wrap;public CommonsMultipartFile(FileItem fileItem) {_		this.fileItem = fileItem__		this.size = this.fileItem.getSize()__	};create,an,instance,wrapping,the,given,file,item,param,file,item,the,file,item,to,wrap;public,commons,multipart,file,file,item,file,item,this,file,item,file,item,this,size,this,file,item,get,size
CommonsMultipartFile -> public CommonsMultipartFile(FileItem fileItem);1490349999;Create an instance wrapping the given FileItem._@param fileItem the FileItem to wrap;public CommonsMultipartFile(FileItem fileItem) {_		this.fileItem = fileItem__		this.size = this.fileItem.getSize()__	};create,an,instance,wrapping,the,given,file,item,param,file,item,the,file,item,to,wrap;public,commons,multipart,file,file,item,file,item,this,file,item,file,item,this,size,this,file,item,get,size
CommonsMultipartFile -> public CommonsMultipartFile(FileItem fileItem);1519588127;Create an instance wrapping the given FileItem._@param fileItem the FileItem to wrap;public CommonsMultipartFile(FileItem fileItem) {_		this.fileItem = fileItem__		this.size = this.fileItem.getSize()__	};create,an,instance,wrapping,the,given,file,item,param,file,item,the,file,item,to,wrap;public,commons,multipart,file,file,item,file,item,this,file,item,file,item,this,size,this,file,item,get,size
CommonsMultipartFile -> public CommonsMultipartFile(FileItem fileItem);1519732288;Create an instance wrapping the given FileItem._@param fileItem the FileItem to wrap;public CommonsMultipartFile(FileItem fileItem) {_		this.fileItem = fileItem__		this.size = this.fileItem.getSize()__	};create,an,instance,wrapping,the,given,file,item,param,file,item,the,file,item,to,wrap;public,commons,multipart,file,file,item,file,item,this,file,item,file,item,this,size,this,file,item,get,size
CommonsMultipartFile -> public CommonsMultipartFile(FileItem fileItem);1519772955;Create an instance wrapping the given FileItem._@param fileItem the FileItem to wrap;public CommonsMultipartFile(FileItem fileItem) {_		this.fileItem = fileItem__		this.size = this.fileItem.getSize()__	};create,an,instance,wrapping,the,given,file,item,param,file,item,the,file,item,to,wrap;public,commons,multipart,file,file,item,file,item,this,file,item,file,item,this,size,this,file,item,get,size
CommonsMultipartFile -> public CommonsMultipartFile(FileItem fileItem);1528929756;Create an instance wrapping the given FileItem._@param fileItem the FileItem to wrap;public CommonsMultipartFile(FileItem fileItem) {_		this.fileItem = fileItem__		this.size = this.fileItem.getSize()__	};create,an,instance,wrapping,the,given,file,item,param,file,item,the,file,item,to,wrap;public,commons,multipart,file,file,item,file,item,this,file,item,file,item,this,size,this,file,item,get,size
CommonsMultipartFile -> public CommonsMultipartFile(FileItem fileItem);1529361191;Create an instance wrapping the given FileItem._@param fileItem the FileItem to wrap;public CommonsMultipartFile(FileItem fileItem) {_		this.fileItem = fileItem__		this.size = this.fileItem.getSize()__	};create,an,instance,wrapping,the,given,file,item,param,file,item,the,file,item,to,wrap;public,commons,multipart,file,file,item,file,item,this,file,item,file,item,this,size,this,file,item,get,size
CommonsMultipartFile -> public CommonsMultipartFile(FileItem fileItem);1529948549;Create an instance wrapping the given FileItem._@param fileItem the FileItem to wrap;public CommonsMultipartFile(FileItem fileItem) {_		this.fileItem = fileItem__		this.size = this.fileItem.getSize()__	};create,an,instance,wrapping,the,given,file,item,param,file,item,the,file,item,to,wrap;public,commons,multipart,file,file,item,file,item,this,file,item,file,item,this,size,this,file,item,get,size
CommonsMultipartFile -> public CommonsMultipartFile(FileItem fileItem);1536962806;Create an instance wrapping the given FileItem._@param fileItem the FileItem to wrap;public CommonsMultipartFile(FileItem fileItem) {_		this.fileItem = fileItem__		this.size = this.fileItem.getSize()__	};create,an,instance,wrapping,the,given,file,item,param,file,item,the,file,item,to,wrap;public,commons,multipart,file,file,item,file,item,this,file,item,file,item,this,size,this,file,item,get,size
