# id;timestamp;commentText;codeText;commentWords;codeWords
SimpleHttpInvokerRequestExecutor -> protected void validateResponse(HttpInvokerClientConfiguration config, HttpURLConnection con) 			throws IOException;1328020251;Validate the given response as contained in the HttpURLConnection object,_throwing an exception if it does not correspond to a successful HTTP response._<p>Default implementation rejects any HTTP status code beyond 2xx, to avoid_parsing the response body and trying to deserialize from a corrupted stream._@param config the HTTP invoker configuration that specifies the target service_@param con the HttpURLConnection to validate_@throws IOException if validation failed_@see java.net.HttpURLConnection#getResponseCode();protected void validateResponse(HttpInvokerClientConfiguration config, HttpURLConnection con)_			throws IOException {__		if (con.getResponseCode() >= 300) {_			throw new IOException(_					"Did not receive successful HTTP response: status code = " + con.getResponseCode() +_					", status message = [" + con.getResponseMessage() + "]")__		}_	};validate,the,given,response,as,contained,in,the,http,urlconnection,object,throwing,an,exception,if,it,does,not,correspond,to,a,successful,http,response,p,default,implementation,rejects,any,http,status,code,beyond,2xx,to,avoid,parsing,the,response,body,and,trying,to,deserialize,from,a,corrupted,stream,param,config,the,http,invoker,configuration,that,specifies,the,target,service,param,con,the,http,urlconnection,to,validate,throws,ioexception,if,validation,failed,see,java,net,http,urlconnection,get,response,code;protected,void,validate,response,http,invoker,client,configuration,config,http,urlconnection,con,throws,ioexception,if,con,get,response,code,300,throw,new,ioexception,did,not,receive,successful,http,response,status,code,con,get,response,code,status,message,con,get,response,message
SimpleHttpInvokerRequestExecutor -> protected void validateResponse(HttpInvokerClientConfiguration config, HttpURLConnection con) 			throws IOException;1380921248;Validate the given response as contained in the HttpURLConnection object,_throwing an exception if it does not correspond to a successful HTTP response._<p>Default implementation rejects any HTTP status code beyond 2xx, to avoid_parsing the response body and trying to deserialize from a corrupted stream._@param config the HTTP invoker configuration that specifies the target service_@param con the HttpURLConnection to validate_@throws IOException if validation failed_@see java.net.HttpURLConnection#getResponseCode();protected void validateResponse(HttpInvokerClientConfiguration config, HttpURLConnection con)_			throws IOException {__		if (con.getResponseCode() >= 300) {_			throw new IOException(_					"Did not receive successful HTTP response: status code = " + con.getResponseCode() +_					", status message = [" + con.getResponseMessage() + "]")__		}_	};validate,the,given,response,as,contained,in,the,http,urlconnection,object,throwing,an,exception,if,it,does,not,correspond,to,a,successful,http,response,p,default,implementation,rejects,any,http,status,code,beyond,2xx,to,avoid,parsing,the,response,body,and,trying,to,deserialize,from,a,corrupted,stream,param,config,the,http,invoker,configuration,that,specifies,the,target,service,param,con,the,http,urlconnection,to,validate,throws,ioexception,if,validation,failed,see,java,net,http,urlconnection,get,response,code;protected,void,validate,response,http,invoker,client,configuration,config,http,urlconnection,con,throws,ioexception,if,con,get,response,code,300,throw,new,ioexception,did,not,receive,successful,http,response,status,code,con,get,response,code,status,message,con,get,response,message
SimpleHttpInvokerRequestExecutor -> protected void validateResponse(HttpInvokerClientConfiguration config, HttpURLConnection con) 			throws IOException;1411322034;Validate the given response as contained in the HttpURLConnection object,_throwing an exception if it does not correspond to a successful HTTP response._<p>Default implementation rejects any HTTP status code beyond 2xx, to avoid_parsing the response body and trying to deserialize from a corrupted stream._@param config the HTTP invoker configuration that specifies the target service_@param con the HttpURLConnection to validate_@throws IOException if validation failed_@see java.net.HttpURLConnection#getResponseCode();protected void validateResponse(HttpInvokerClientConfiguration config, HttpURLConnection con)_			throws IOException {__		if (con.getResponseCode() >= 300) {_			throw new IOException(_					"Did not receive successful HTTP response: status code = " + con.getResponseCode() +_					", status message = [" + con.getResponseMessage() + "]")__		}_	};validate,the,given,response,as,contained,in,the,http,urlconnection,object,throwing,an,exception,if,it,does,not,correspond,to,a,successful,http,response,p,default,implementation,rejects,any,http,status,code,beyond,2xx,to,avoid,parsing,the,response,body,and,trying,to,deserialize,from,a,corrupted,stream,param,config,the,http,invoker,configuration,that,specifies,the,target,service,param,con,the,http,urlconnection,to,validate,throws,ioexception,if,validation,failed,see,java,net,http,urlconnection,get,response,code;protected,void,validate,response,http,invoker,client,configuration,config,http,urlconnection,con,throws,ioexception,if,con,get,response,code,300,throw,new,ioexception,did,not,receive,successful,http,response,status,code,con,get,response,code,status,message,con,get,response,message
SimpleHttpInvokerRequestExecutor -> protected void validateResponse(HttpInvokerClientConfiguration config, HttpURLConnection con) 			throws IOException;1497970235;Validate the given response as contained in the HttpURLConnection object,_throwing an exception if it does not correspond to a successful HTTP response._<p>Default implementation rejects any HTTP status code beyond 2xx, to avoid_parsing the response body and trying to deserialize from a corrupted stream._@param config the HTTP invoker configuration that specifies the target service_@param con the HttpURLConnection to validate_@throws IOException if validation failed_@see java.net.HttpURLConnection#getResponseCode();protected void validateResponse(HttpInvokerClientConfiguration config, HttpURLConnection con)_			throws IOException {__		if (con.getResponseCode() >= 300) {_			throw new IOException(_					"Did not receive successful HTTP response: status code = " + con.getResponseCode() +_					", status message = [" + con.getResponseMessage() + "]")__		}_	};validate,the,given,response,as,contained,in,the,http,urlconnection,object,throwing,an,exception,if,it,does,not,correspond,to,a,successful,http,response,p,default,implementation,rejects,any,http,status,code,beyond,2xx,to,avoid,parsing,the,response,body,and,trying,to,deserialize,from,a,corrupted,stream,param,config,the,http,invoker,configuration,that,specifies,the,target,service,param,con,the,http,urlconnection,to,validate,throws,ioexception,if,validation,failed,see,java,net,http,urlconnection,get,response,code;protected,void,validate,response,http,invoker,client,configuration,config,http,urlconnection,con,throws,ioexception,if,con,get,response,code,300,throw,new,ioexception,did,not,receive,successful,http,response,status,code,con,get,response,code,status,message,con,get,response,message
SimpleHttpInvokerRequestExecutor -> protected void validateResponse(HttpInvokerClientConfiguration config, HttpURLConnection con) 			throws IOException;1516903831;Validate the given response as contained in the {@link HttpURLConnection} object,_throwing an exception if it does not correspond to a successful HTTP response._<p>Default implementation rejects any HTTP status code beyond 2xx, to avoid_parsing the response body and trying to deserialize from a corrupted stream._@param config the HTTP invoker configuration that specifies the target service_@param con the HttpURLConnection to validate_@throws IOException if validation failed_@see java.net.HttpURLConnection#getResponseCode();protected void validateResponse(HttpInvokerClientConfiguration config, HttpURLConnection con)_			throws IOException {__		if (con.getResponseCode() >= 300) {_			throw new IOException(_					"Did not receive successful HTTP response: status code = " + con.getResponseCode() +_					", status message = [" + con.getResponseMessage() + "]")__		}_	};validate,the,given,response,as,contained,in,the,link,http,urlconnection,object,throwing,an,exception,if,it,does,not,correspond,to,a,successful,http,response,p,default,implementation,rejects,any,http,status,code,beyond,2xx,to,avoid,parsing,the,response,body,and,trying,to,deserialize,from,a,corrupted,stream,param,config,the,http,invoker,configuration,that,specifies,the,target,service,param,con,the,http,urlconnection,to,validate,throws,ioexception,if,validation,failed,see,java,net,http,urlconnection,get,response,code;protected,void,validate,response,http,invoker,client,configuration,config,http,urlconnection,con,throws,ioexception,if,con,get,response,code,300,throw,new,ioexception,did,not,receive,successful,http,response,status,code,con,get,response,code,status,message,con,get,response,message
SimpleHttpInvokerRequestExecutor -> protected InputStream readResponseBody(HttpInvokerClientConfiguration config, HttpURLConnection con) 			throws IOException;1328020251;Extract the response body from the given executed remote invocation_request._<p>The default implementation simply reads the serialized invocation_from the HttpURLConnection's InputStream. If the response is recognized_as GZIP response, the InputStream will get wrapped in a GZIPInputStream._@param config the HTTP invoker configuration that specifies the target service_@param con the HttpURLConnection to read the response body from_@return an InputStream for the response body_@throws IOException if thrown by I/O methods_@see #isGzipResponse_@see java.util.zip.GZIPInputStream_@see java.net.HttpURLConnection#getInputStream()_@see java.net.HttpURLConnection#getHeaderField(int)_@see java.net.HttpURLConnection#getHeaderFieldKey(int);protected InputStream readResponseBody(HttpInvokerClientConfiguration config, HttpURLConnection con)_			throws IOException {__		if (isGzipResponse(con)) {_			_			return new GZIPInputStream(con.getInputStream())__		}_		else {_			_			return con.getInputStream()__		}_	};extract,the,response,body,from,the,given,executed,remote,invocation,request,p,the,default,implementation,simply,reads,the,serialized,invocation,from,the,http,urlconnection,s,input,stream,if,the,response,is,recognized,as,gzip,response,the,input,stream,will,get,wrapped,in,a,gzipinput,stream,param,config,the,http,invoker,configuration,that,specifies,the,target,service,param,con,the,http,urlconnection,to,read,the,response,body,from,return,an,input,stream,for,the,response,body,throws,ioexception,if,thrown,by,i,o,methods,see,is,gzip,response,see,java,util,zip,gzipinput,stream,see,java,net,http,urlconnection,get,input,stream,see,java,net,http,urlconnection,get,header,field,int,see,java,net,http,urlconnection,get,header,field,key,int;protected,input,stream,read,response,body,http,invoker,client,configuration,config,http,urlconnection,con,throws,ioexception,if,is,gzip,response,con,return,new,gzipinput,stream,con,get,input,stream,else,return,con,get,input,stream
SimpleHttpInvokerRequestExecutor -> protected InputStream readResponseBody(HttpInvokerClientConfiguration config, HttpURLConnection con) 			throws IOException;1380921248;Extract the response body from the given executed remote invocation_request._<p>The default implementation simply reads the serialized invocation_from the HttpURLConnection's InputStream. If the response is recognized_as GZIP response, the InputStream will get wrapped in a GZIPInputStream._@param config the HTTP invoker configuration that specifies the target service_@param con the HttpURLConnection to read the response body from_@return an InputStream for the response body_@throws IOException if thrown by I/O methods_@see #isGzipResponse_@see java.util.zip.GZIPInputStream_@see java.net.HttpURLConnection#getInputStream()_@see java.net.HttpURLConnection#getHeaderField(int)_@see java.net.HttpURLConnection#getHeaderFieldKey(int);protected InputStream readResponseBody(HttpInvokerClientConfiguration config, HttpURLConnection con)_			throws IOException {__		if (isGzipResponse(con)) {_			_			return new GZIPInputStream(con.getInputStream())__		}_		else {_			_			return con.getInputStream()__		}_	};extract,the,response,body,from,the,given,executed,remote,invocation,request,p,the,default,implementation,simply,reads,the,serialized,invocation,from,the,http,urlconnection,s,input,stream,if,the,response,is,recognized,as,gzip,response,the,input,stream,will,get,wrapped,in,a,gzipinput,stream,param,config,the,http,invoker,configuration,that,specifies,the,target,service,param,con,the,http,urlconnection,to,read,the,response,body,from,return,an,input,stream,for,the,response,body,throws,ioexception,if,thrown,by,i,o,methods,see,is,gzip,response,see,java,util,zip,gzipinput,stream,see,java,net,http,urlconnection,get,input,stream,see,java,net,http,urlconnection,get,header,field,int,see,java,net,http,urlconnection,get,header,field,key,int;protected,input,stream,read,response,body,http,invoker,client,configuration,config,http,urlconnection,con,throws,ioexception,if,is,gzip,response,con,return,new,gzipinput,stream,con,get,input,stream,else,return,con,get,input,stream
SimpleHttpInvokerRequestExecutor -> protected InputStream readResponseBody(HttpInvokerClientConfiguration config, HttpURLConnection con) 			throws IOException;1411322034;Extract the response body from the given executed remote invocation_request._<p>The default implementation simply reads the serialized invocation_from the HttpURLConnection's InputStream. If the response is recognized_as GZIP response, the InputStream will get wrapped in a GZIPInputStream._@param config the HTTP invoker configuration that specifies the target service_@param con the HttpURLConnection to read the response body from_@return an InputStream for the response body_@throws IOException if thrown by I/O methods_@see #isGzipResponse_@see java.util.zip.GZIPInputStream_@see java.net.HttpURLConnection#getInputStream()_@see java.net.HttpURLConnection#getHeaderField(int)_@see java.net.HttpURLConnection#getHeaderFieldKey(int);protected InputStream readResponseBody(HttpInvokerClientConfiguration config, HttpURLConnection con)_			throws IOException {__		if (isGzipResponse(con)) {_			_			return new GZIPInputStream(con.getInputStream())__		}_		else {_			_			return con.getInputStream()__		}_	};extract,the,response,body,from,the,given,executed,remote,invocation,request,p,the,default,implementation,simply,reads,the,serialized,invocation,from,the,http,urlconnection,s,input,stream,if,the,response,is,recognized,as,gzip,response,the,input,stream,will,get,wrapped,in,a,gzipinput,stream,param,config,the,http,invoker,configuration,that,specifies,the,target,service,param,con,the,http,urlconnection,to,read,the,response,body,from,return,an,input,stream,for,the,response,body,throws,ioexception,if,thrown,by,i,o,methods,see,is,gzip,response,see,java,util,zip,gzipinput,stream,see,java,net,http,urlconnection,get,input,stream,see,java,net,http,urlconnection,get,header,field,int,see,java,net,http,urlconnection,get,header,field,key,int;protected,input,stream,read,response,body,http,invoker,client,configuration,config,http,urlconnection,con,throws,ioexception,if,is,gzip,response,con,return,new,gzipinput,stream,con,get,input,stream,else,return,con,get,input,stream
SimpleHttpInvokerRequestExecutor -> protected InputStream readResponseBody(HttpInvokerClientConfiguration config, HttpURLConnection con) 			throws IOException;1497970235;Extract the response body from the given executed remote invocation_request._<p>The default implementation simply reads the serialized invocation_from the HttpURLConnection's InputStream. If the response is recognized_as GZIP response, the InputStream will get wrapped in a GZIPInputStream._@param config the HTTP invoker configuration that specifies the target service_@param con the HttpURLConnection to read the response body from_@return an InputStream for the response body_@throws IOException if thrown by I/O methods_@see #isGzipResponse_@see java.util.zip.GZIPInputStream_@see java.net.HttpURLConnection#getInputStream()_@see java.net.HttpURLConnection#getHeaderField(int)_@see java.net.HttpURLConnection#getHeaderFieldKey(int);protected InputStream readResponseBody(HttpInvokerClientConfiguration config, HttpURLConnection con)_			throws IOException {__		if (isGzipResponse(con)) {_			_			return new GZIPInputStream(con.getInputStream())__		}_		else {_			_			return con.getInputStream()__		}_	};extract,the,response,body,from,the,given,executed,remote,invocation,request,p,the,default,implementation,simply,reads,the,serialized,invocation,from,the,http,urlconnection,s,input,stream,if,the,response,is,recognized,as,gzip,response,the,input,stream,will,get,wrapped,in,a,gzipinput,stream,param,config,the,http,invoker,configuration,that,specifies,the,target,service,param,con,the,http,urlconnection,to,read,the,response,body,from,return,an,input,stream,for,the,response,body,throws,ioexception,if,thrown,by,i,o,methods,see,is,gzip,response,see,java,util,zip,gzipinput,stream,see,java,net,http,urlconnection,get,input,stream,see,java,net,http,urlconnection,get,header,field,int,see,java,net,http,urlconnection,get,header,field,key,int;protected,input,stream,read,response,body,http,invoker,client,configuration,config,http,urlconnection,con,throws,ioexception,if,is,gzip,response,con,return,new,gzipinput,stream,con,get,input,stream,else,return,con,get,input,stream
SimpleHttpInvokerRequestExecutor -> protected InputStream readResponseBody(HttpInvokerClientConfiguration config, HttpURLConnection con) 			throws IOException;1516903831;Extract the response body from the given executed remote invocation_request._<p>The default implementation simply reads the serialized invocation_from the HttpURLConnection's InputStream. If the response is recognized_as GZIP response, the InputStream will get wrapped in a GZIPInputStream._@param config the HTTP invoker configuration that specifies the target service_@param con the HttpURLConnection to read the response body from_@return an InputStream for the response body_@throws IOException if thrown by I/O methods_@see #isGzipResponse_@see java.util.zip.GZIPInputStream_@see java.net.HttpURLConnection#getInputStream()_@see java.net.HttpURLConnection#getHeaderField(int)_@see java.net.HttpURLConnection#getHeaderFieldKey(int);protected InputStream readResponseBody(HttpInvokerClientConfiguration config, HttpURLConnection con)_			throws IOException {__		if (isGzipResponse(con)) {_			_			return new GZIPInputStream(con.getInputStream())__		}_		else {_			_			return con.getInputStream()__		}_	};extract,the,response,body,from,the,given,executed,remote,invocation,request,p,the,default,implementation,simply,reads,the,serialized,invocation,from,the,http,urlconnection,s,input,stream,if,the,response,is,recognized,as,gzip,response,the,input,stream,will,get,wrapped,in,a,gzipinput,stream,param,config,the,http,invoker,configuration,that,specifies,the,target,service,param,con,the,http,urlconnection,to,read,the,response,body,from,return,an,input,stream,for,the,response,body,throws,ioexception,if,thrown,by,i,o,methods,see,is,gzip,response,see,java,util,zip,gzipinput,stream,see,java,net,http,urlconnection,get,input,stream,see,java,net,http,urlconnection,get,header,field,int,see,java,net,http,urlconnection,get,header,field,key,int;protected,input,stream,read,response,body,http,invoker,client,configuration,config,http,urlconnection,con,throws,ioexception,if,is,gzip,response,con,return,new,gzipinput,stream,con,get,input,stream,else,return,con,get,input,stream
SimpleHttpInvokerRequestExecutor -> protected void prepareConnection(HttpURLConnection connection, int contentLength) throws IOException;1328020251;Prepare the given HTTP connection._<p>The default implementation specifies POST as method,_"application/x-java-serialized-object" as "Content-Type" header,_and the given content length as "Content-Length" header._@param connection the HTTP connection to prepare_@param contentLength the length of the content to send_@throws IOException if thrown by HttpURLConnection methods_@see java.net.HttpURLConnection#setRequestMethod_@see java.net.HttpURLConnection#setRequestProperty;protected void prepareConnection(HttpURLConnection connection, int contentLength) throws IOException {_		if (this.connectTimeout >= 0) {_			connection.setConnectTimeout(this.connectTimeout)__		}_		if (this.readTimeout >= 0) {_			connection.setReadTimeout(this.readTimeout)__		}_		connection.setDoOutput(true)__		connection.setRequestMethod(HTTP_METHOD_POST)__		connection.setRequestProperty(HTTP_HEADER_CONTENT_TYPE, getContentType())__		connection.setRequestProperty(HTTP_HEADER_CONTENT_LENGTH, Integer.toString(contentLength))__		LocaleContext locale = LocaleContextHolder.getLocaleContext()__		if (locale != null) {_			connection.setRequestProperty(HTTP_HEADER_ACCEPT_LANGUAGE, StringUtils.toLanguageTag(locale.getLocale()))__		}_		if (isAcceptGzipEncoding()) {_			connection.setRequestProperty(HTTP_HEADER_ACCEPT_ENCODING, ENCODING_GZIP)__		}_	};prepare,the,given,http,connection,p,the,default,implementation,specifies,post,as,method,application,x,java,serialized,object,as,content,type,header,and,the,given,content,length,as,content,length,header,param,connection,the,http,connection,to,prepare,param,content,length,the,length,of,the,content,to,send,throws,ioexception,if,thrown,by,http,urlconnection,methods,see,java,net,http,urlconnection,set,request,method,see,java,net,http,urlconnection,set,request,property;protected,void,prepare,connection,http,urlconnection,connection,int,content,length,throws,ioexception,if,this,connect,timeout,0,connection,set,connect,timeout,this,connect,timeout,if,this,read,timeout,0,connection,set,read,timeout,this,read,timeout,connection,set,do,output,true,connection,set,request,method,connection,set,request,property,get,content,type,connection,set,request,property,integer,to,string,content,length,locale,context,locale,locale,context,holder,get,locale,context,if,locale,null,connection,set,request,property,string,utils,to,language,tag,locale,get,locale,if,is,accept,gzip,encoding,connection,set,request,property
SimpleHttpInvokerRequestExecutor -> protected void prepareConnection(HttpURLConnection connection, int contentLength) throws IOException;1380921248;Prepare the given HTTP connection._<p>The default implementation specifies POST as method,_"application/x-java-serialized-object" as "Content-Type" header,_and the given content length as "Content-Length" header._@param connection the HTTP connection to prepare_@param contentLength the length of the content to send_@throws IOException if thrown by HttpURLConnection methods_@see java.net.HttpURLConnection#setRequestMethod_@see java.net.HttpURLConnection#setRequestProperty;protected void prepareConnection(HttpURLConnection connection, int contentLength) throws IOException {_		if (this.connectTimeout >= 0) {_			connection.setConnectTimeout(this.connectTimeout)__		}_		if (this.readTimeout >= 0) {_			connection.setReadTimeout(this.readTimeout)__		}_		connection.setDoOutput(true)__		connection.setRequestMethod(HTTP_METHOD_POST)__		connection.setRequestProperty(HTTP_HEADER_CONTENT_TYPE, getContentType())__		connection.setRequestProperty(HTTP_HEADER_CONTENT_LENGTH, Integer.toString(contentLength))___		LocaleContext localeContext = LocaleContextHolder.getLocaleContext()__		if (localeContext != null) {_			Locale locale = localeContext.getLocale()__			if (locale != null) {_				connection.setRequestProperty(HTTP_HEADER_ACCEPT_LANGUAGE, StringUtils.toLanguageTag(locale))__			}_		}_		if (isAcceptGzipEncoding()) {_			connection.setRequestProperty(HTTP_HEADER_ACCEPT_ENCODING, ENCODING_GZIP)__		}_	};prepare,the,given,http,connection,p,the,default,implementation,specifies,post,as,method,application,x,java,serialized,object,as,content,type,header,and,the,given,content,length,as,content,length,header,param,connection,the,http,connection,to,prepare,param,content,length,the,length,of,the,content,to,send,throws,ioexception,if,thrown,by,http,urlconnection,methods,see,java,net,http,urlconnection,set,request,method,see,java,net,http,urlconnection,set,request,property;protected,void,prepare,connection,http,urlconnection,connection,int,content,length,throws,ioexception,if,this,connect,timeout,0,connection,set,connect,timeout,this,connect,timeout,if,this,read,timeout,0,connection,set,read,timeout,this,read,timeout,connection,set,do,output,true,connection,set,request,method,connection,set,request,property,get,content,type,connection,set,request,property,integer,to,string,content,length,locale,context,locale,context,locale,context,holder,get,locale,context,if,locale,context,null,locale,locale,locale,context,get,locale,if,locale,null,connection,set,request,property,string,utils,to,language,tag,locale,if,is,accept,gzip,encoding,connection,set,request,property
SimpleHttpInvokerRequestExecutor -> protected void prepareConnection(HttpURLConnection connection, int contentLength) throws IOException;1411322034;Prepare the given HTTP connection._<p>The default implementation specifies POST as method,_"application/x-java-serialized-object" as "Content-Type" header,_and the given content length as "Content-Length" header._@param connection the HTTP connection to prepare_@param contentLength the length of the content to send_@throws IOException if thrown by HttpURLConnection methods_@see java.net.HttpURLConnection#setRequestMethod_@see java.net.HttpURLConnection#setRequestProperty;protected void prepareConnection(HttpURLConnection connection, int contentLength) throws IOException {_		if (this.connectTimeout >= 0) {_			connection.setConnectTimeout(this.connectTimeout)__		}_		if (this.readTimeout >= 0) {_			connection.setReadTimeout(this.readTimeout)__		}_		connection.setDoOutput(true)__		connection.setRequestMethod(HTTP_METHOD_POST)__		connection.setRequestProperty(HTTP_HEADER_CONTENT_TYPE, getContentType())__		connection.setRequestProperty(HTTP_HEADER_CONTENT_LENGTH, Integer.toString(contentLength))___		LocaleContext localeContext = LocaleContextHolder.getLocaleContext()__		if (localeContext != null) {_			Locale locale = localeContext.getLocale()__			if (locale != null) {_				connection.setRequestProperty(HTTP_HEADER_ACCEPT_LANGUAGE, StringUtils.toLanguageTag(locale))__			}_		}_		if (isAcceptGzipEncoding()) {_			connection.setRequestProperty(HTTP_HEADER_ACCEPT_ENCODING, ENCODING_GZIP)__		}_	};prepare,the,given,http,connection,p,the,default,implementation,specifies,post,as,method,application,x,java,serialized,object,as,content,type,header,and,the,given,content,length,as,content,length,header,param,connection,the,http,connection,to,prepare,param,content,length,the,length,of,the,content,to,send,throws,ioexception,if,thrown,by,http,urlconnection,methods,see,java,net,http,urlconnection,set,request,method,see,java,net,http,urlconnection,set,request,property;protected,void,prepare,connection,http,urlconnection,connection,int,content,length,throws,ioexception,if,this,connect,timeout,0,connection,set,connect,timeout,this,connect,timeout,if,this,read,timeout,0,connection,set,read,timeout,this,read,timeout,connection,set,do,output,true,connection,set,request,method,connection,set,request,property,get,content,type,connection,set,request,property,integer,to,string,content,length,locale,context,locale,context,locale,context,holder,get,locale,context,if,locale,context,null,locale,locale,locale,context,get,locale,if,locale,null,connection,set,request,property,string,utils,to,language,tag,locale,if,is,accept,gzip,encoding,connection,set,request,property
SimpleHttpInvokerRequestExecutor -> protected void prepareConnection(HttpURLConnection connection, int contentLength) throws IOException;1497970235;Prepare the given HTTP connection._<p>The default implementation specifies POST as method,_"application/x-java-serialized-object" as "Content-Type" header,_and the given content length as "Content-Length" header._@param connection the HTTP connection to prepare_@param contentLength the length of the content to send_@throws IOException if thrown by HttpURLConnection methods_@see java.net.HttpURLConnection#setRequestMethod_@see java.net.HttpURLConnection#setRequestProperty;protected void prepareConnection(HttpURLConnection connection, int contentLength) throws IOException {_		if (this.connectTimeout >= 0) {_			connection.setConnectTimeout(this.connectTimeout)__		}_		if (this.readTimeout >= 0) {_			connection.setReadTimeout(this.readTimeout)__		}__		connection.setDoOutput(true)__		connection.setRequestMethod(HTTP_METHOD_POST)__		connection.setRequestProperty(HTTP_HEADER_CONTENT_TYPE, getContentType())__		connection.setRequestProperty(HTTP_HEADER_CONTENT_LENGTH, Integer.toString(contentLength))___		LocaleContext localeContext = LocaleContextHolder.getLocaleContext()__		if (localeContext != null) {_			Locale locale = localeContext.getLocale()__			if (locale != null) {_				connection.setRequestProperty(HTTP_HEADER_ACCEPT_LANGUAGE, StringUtils.toLanguageTag(locale))__			}_		}__		if (isAcceptGzipEncoding()) {_			connection.setRequestProperty(HTTP_HEADER_ACCEPT_ENCODING, ENCODING_GZIP)__		}_	};prepare,the,given,http,connection,p,the,default,implementation,specifies,post,as,method,application,x,java,serialized,object,as,content,type,header,and,the,given,content,length,as,content,length,header,param,connection,the,http,connection,to,prepare,param,content,length,the,length,of,the,content,to,send,throws,ioexception,if,thrown,by,http,urlconnection,methods,see,java,net,http,urlconnection,set,request,method,see,java,net,http,urlconnection,set,request,property;protected,void,prepare,connection,http,urlconnection,connection,int,content,length,throws,ioexception,if,this,connect,timeout,0,connection,set,connect,timeout,this,connect,timeout,if,this,read,timeout,0,connection,set,read,timeout,this,read,timeout,connection,set,do,output,true,connection,set,request,method,connection,set,request,property,get,content,type,connection,set,request,property,integer,to,string,content,length,locale,context,locale,context,locale,context,holder,get,locale,context,if,locale,context,null,locale,locale,locale,context,get,locale,if,locale,null,connection,set,request,property,string,utils,to,language,tag,locale,if,is,accept,gzip,encoding,connection,set,request,property
SimpleHttpInvokerRequestExecutor -> protected void prepareConnection(HttpURLConnection connection, int contentLength) throws IOException;1516903831;Prepare the given HTTP connection._<p>The default implementation specifies POST as method,_"application/x-java-serialized-object" as "Content-Type" header,_and the given content length as "Content-Length" header._@param connection the HTTP connection to prepare_@param contentLength the length of the content to send_@throws IOException if thrown by HttpURLConnection methods_@see java.net.HttpURLConnection#setRequestMethod_@see java.net.HttpURLConnection#setRequestProperty;protected void prepareConnection(HttpURLConnection connection, int contentLength) throws IOException {_		if (this.connectTimeout >= 0) {_			connection.setConnectTimeout(this.connectTimeout)__		}_		if (this.readTimeout >= 0) {_			connection.setReadTimeout(this.readTimeout)__		}__		connection.setDoOutput(true)__		connection.setRequestMethod(HTTP_METHOD_POST)__		connection.setRequestProperty(HTTP_HEADER_CONTENT_TYPE, getContentType())__		connection.setRequestProperty(HTTP_HEADER_CONTENT_LENGTH, Integer.toString(contentLength))___		LocaleContext localeContext = LocaleContextHolder.getLocaleContext()__		if (localeContext != null) {_			Locale locale = localeContext.getLocale()__			if (locale != null) {_				connection.setRequestProperty(HTTP_HEADER_ACCEPT_LANGUAGE, locale.toLanguageTag())__			}_		}__		if (isAcceptGzipEncoding()) {_			connection.setRequestProperty(HTTP_HEADER_ACCEPT_ENCODING, ENCODING_GZIP)__		}_	};prepare,the,given,http,connection,p,the,default,implementation,specifies,post,as,method,application,x,java,serialized,object,as,content,type,header,and,the,given,content,length,as,content,length,header,param,connection,the,http,connection,to,prepare,param,content,length,the,length,of,the,content,to,send,throws,ioexception,if,thrown,by,http,urlconnection,methods,see,java,net,http,urlconnection,set,request,method,see,java,net,http,urlconnection,set,request,property;protected,void,prepare,connection,http,urlconnection,connection,int,content,length,throws,ioexception,if,this,connect,timeout,0,connection,set,connect,timeout,this,connect,timeout,if,this,read,timeout,0,connection,set,read,timeout,this,read,timeout,connection,set,do,output,true,connection,set,request,method,connection,set,request,property,get,content,type,connection,set,request,property,integer,to,string,content,length,locale,context,locale,context,locale,context,holder,get,locale,context,if,locale,context,null,locale,locale,locale,context,get,locale,if,locale,null,connection,set,request,property,locale,to,language,tag,if,is,accept,gzip,encoding,connection,set,request,property
SimpleHttpInvokerRequestExecutor -> @Override 	protected RemoteInvocationResult doExecuteRequest( 			HttpInvokerClientConfiguration config, ByteArrayOutputStream baos) 			throws IOException, ClassNotFoundException;1328020251;Execute the given request through a standard J2SE HttpURLConnection._<p>This method implements the basic processing workflow:_The actual work happens in this class's template methods._@see #openConnection_@see #prepareConnection_@see #writeRequestBody_@see #validateResponse_@see #readResponseBody;@Override_	protected RemoteInvocationResult doExecuteRequest(_			HttpInvokerClientConfiguration config, ByteArrayOutputStream baos)_			throws IOException, ClassNotFoundException {__		HttpURLConnection con = openConnection(config)__		prepareConnection(con, baos.size())__		writeRequestBody(config, con, baos)__		validateResponse(config, con)__		InputStream responseBody = readResponseBody(config, con)___		return readRemoteInvocationResult(responseBody, config.getCodebaseUrl())__	};execute,the,given,request,through,a,standard,j2se,http,urlconnection,p,this,method,implements,the,basic,processing,workflow,the,actual,work,happens,in,this,class,s,template,methods,see,open,connection,see,prepare,connection,see,write,request,body,see,validate,response,see,read,response,body;override,protected,remote,invocation,result,do,execute,request,http,invoker,client,configuration,config,byte,array,output,stream,baos,throws,ioexception,class,not,found,exception,http,urlconnection,con,open,connection,config,prepare,connection,con,baos,size,write,request,body,config,con,baos,validate,response,config,con,input,stream,response,body,read,response,body,config,con,return,read,remote,invocation,result,response,body,config,get,codebase,url
SimpleHttpInvokerRequestExecutor -> @Override 	protected RemoteInvocationResult doExecuteRequest( 			HttpInvokerClientConfiguration config, ByteArrayOutputStream baos) 			throws IOException, ClassNotFoundException;1380921248;Execute the given request through a standard J2SE HttpURLConnection._<p>This method implements the basic processing workflow:_The actual work happens in this class's template methods._@see #openConnection_@see #prepareConnection_@see #writeRequestBody_@see #validateResponse_@see #readResponseBody;@Override_	protected RemoteInvocationResult doExecuteRequest(_			HttpInvokerClientConfiguration config, ByteArrayOutputStream baos)_			throws IOException, ClassNotFoundException {__		HttpURLConnection con = openConnection(config)__		prepareConnection(con, baos.size())__		writeRequestBody(config, con, baos)__		validateResponse(config, con)__		InputStream responseBody = readResponseBody(config, con)___		return readRemoteInvocationResult(responseBody, config.getCodebaseUrl())__	};execute,the,given,request,through,a,standard,j2se,http,urlconnection,p,this,method,implements,the,basic,processing,workflow,the,actual,work,happens,in,this,class,s,template,methods,see,open,connection,see,prepare,connection,see,write,request,body,see,validate,response,see,read,response,body;override,protected,remote,invocation,result,do,execute,request,http,invoker,client,configuration,config,byte,array,output,stream,baos,throws,ioexception,class,not,found,exception,http,urlconnection,con,open,connection,config,prepare,connection,con,baos,size,write,request,body,config,con,baos,validate,response,config,con,input,stream,response,body,read,response,body,config,con,return,read,remote,invocation,result,response,body,config,get,codebase,url
SimpleHttpInvokerRequestExecutor -> @Override 	protected RemoteInvocationResult doExecuteRequest( 			HttpInvokerClientConfiguration config, ByteArrayOutputStream baos) 			throws IOException, ClassNotFoundException;1411322034;Execute the given request through a standard J2SE HttpURLConnection._<p>This method implements the basic processing workflow:_The actual work happens in this class's template methods._@see #openConnection_@see #prepareConnection_@see #writeRequestBody_@see #validateResponse_@see #readResponseBody;@Override_	protected RemoteInvocationResult doExecuteRequest(_			HttpInvokerClientConfiguration config, ByteArrayOutputStream baos)_			throws IOException, ClassNotFoundException {__		HttpURLConnection con = openConnection(config)__		prepareConnection(con, baos.size())__		writeRequestBody(config, con, baos)__		validateResponse(config, con)__		InputStream responseBody = readResponseBody(config, con)___		return readRemoteInvocationResult(responseBody, config.getCodebaseUrl())__	};execute,the,given,request,through,a,standard,j2se,http,urlconnection,p,this,method,implements,the,basic,processing,workflow,the,actual,work,happens,in,this,class,s,template,methods,see,open,connection,see,prepare,connection,see,write,request,body,see,validate,response,see,read,response,body;override,protected,remote,invocation,result,do,execute,request,http,invoker,client,configuration,config,byte,array,output,stream,baos,throws,ioexception,class,not,found,exception,http,urlconnection,con,open,connection,config,prepare,connection,con,baos,size,write,request,body,config,con,baos,validate,response,config,con,input,stream,response,body,read,response,body,config,con,return,read,remote,invocation,result,response,body,config,get,codebase,url
SimpleHttpInvokerRequestExecutor -> @Override 	protected RemoteInvocationResult doExecuteRequest( 			HttpInvokerClientConfiguration config, ByteArrayOutputStream baos) 			throws IOException, ClassNotFoundException;1497970235;Execute the given request through a standard J2SE HttpURLConnection._<p>This method implements the basic processing workflow:_The actual work happens in this class's template methods._@see #openConnection_@see #prepareConnection_@see #writeRequestBody_@see #validateResponse_@see #readResponseBody;@Override_	protected RemoteInvocationResult doExecuteRequest(_			HttpInvokerClientConfiguration config, ByteArrayOutputStream baos)_			throws IOException, ClassNotFoundException {__		HttpURLConnection con = openConnection(config)__		prepareConnection(con, baos.size())__		writeRequestBody(config, con, baos)__		validateResponse(config, con)__		InputStream responseBody = readResponseBody(config, con)___		return readRemoteInvocationResult(responseBody, config.getCodebaseUrl())__	};execute,the,given,request,through,a,standard,j2se,http,urlconnection,p,this,method,implements,the,basic,processing,workflow,the,actual,work,happens,in,this,class,s,template,methods,see,open,connection,see,prepare,connection,see,write,request,body,see,validate,response,see,read,response,body;override,protected,remote,invocation,result,do,execute,request,http,invoker,client,configuration,config,byte,array,output,stream,baos,throws,ioexception,class,not,found,exception,http,urlconnection,con,open,connection,config,prepare,connection,con,baos,size,write,request,body,config,con,baos,validate,response,config,con,input,stream,response,body,read,response,body,config,con,return,read,remote,invocation,result,response,body,config,get,codebase,url
SimpleHttpInvokerRequestExecutor -> @Override 	protected RemoteInvocationResult doExecuteRequest( 			HttpInvokerClientConfiguration config, ByteArrayOutputStream baos) 			throws IOException, ClassNotFoundException;1516903831;Execute the given request through a standard {@link HttpURLConnection}._<p>This method implements the basic processing workflow:_The actual work happens in this class's template methods._@see #openConnection_@see #prepareConnection_@see #writeRequestBody_@see #validateResponse_@see #readResponseBody;@Override_	protected RemoteInvocationResult doExecuteRequest(_			HttpInvokerClientConfiguration config, ByteArrayOutputStream baos)_			throws IOException, ClassNotFoundException {__		HttpURLConnection con = openConnection(config)__		prepareConnection(con, baos.size())__		writeRequestBody(config, con, baos)__		validateResponse(config, con)__		InputStream responseBody = readResponseBody(config, con)___		return readRemoteInvocationResult(responseBody, config.getCodebaseUrl())__	};execute,the,given,request,through,a,standard,link,http,urlconnection,p,this,method,implements,the,basic,processing,workflow,the,actual,work,happens,in,this,class,s,template,methods,see,open,connection,see,prepare,connection,see,write,request,body,see,validate,response,see,read,response,body;override,protected,remote,invocation,result,do,execute,request,http,invoker,client,configuration,config,byte,array,output,stream,baos,throws,ioexception,class,not,found,exception,http,urlconnection,con,open,connection,config,prepare,connection,con,baos,size,write,request,body,config,con,baos,validate,response,config,con,input,stream,response,body,read,response,body,config,con,return,read,remote,invocation,result,response,body,config,get,codebase,url
SimpleHttpInvokerRequestExecutor -> public void setConnectTimeout(int connectTimeout);1328020251;Set the underlying URLConnection's connect timeout (in milliseconds)._A timeout value of 0 specifies an infinite timeout._<p>Default is the system's default timeout._@see URLConnection#setConnectTimeout(int);public void setConnectTimeout(int connectTimeout) {_		this.connectTimeout = connectTimeout__	};set,the,underlying,urlconnection,s,connect,timeout,in,milliseconds,a,timeout,value,of,0,specifies,an,infinite,timeout,p,default,is,the,system,s,default,timeout,see,urlconnection,set,connect,timeout,int;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
SimpleHttpInvokerRequestExecutor -> public void setConnectTimeout(int connectTimeout);1380921248;Set the underlying URLConnection's connect timeout (in milliseconds)._A timeout value of 0 specifies an infinite timeout._<p>Default is the system's default timeout._@see URLConnection#setConnectTimeout(int);public void setConnectTimeout(int connectTimeout) {_		this.connectTimeout = connectTimeout__	};set,the,underlying,urlconnection,s,connect,timeout,in,milliseconds,a,timeout,value,of,0,specifies,an,infinite,timeout,p,default,is,the,system,s,default,timeout,see,urlconnection,set,connect,timeout,int;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
SimpleHttpInvokerRequestExecutor -> public void setConnectTimeout(int connectTimeout);1411322034;Set the underlying URLConnection's connect timeout (in milliseconds)._A timeout value of 0 specifies an infinite timeout._<p>Default is the system's default timeout._@see URLConnection#setConnectTimeout(int);public void setConnectTimeout(int connectTimeout) {_		this.connectTimeout = connectTimeout__	};set,the,underlying,urlconnection,s,connect,timeout,in,milliseconds,a,timeout,value,of,0,specifies,an,infinite,timeout,p,default,is,the,system,s,default,timeout,see,urlconnection,set,connect,timeout,int;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
SimpleHttpInvokerRequestExecutor -> public void setConnectTimeout(int connectTimeout);1497970235;Set the underlying URLConnection's connect timeout (in milliseconds)._A timeout value of 0 specifies an infinite timeout._<p>Default is the system's default timeout._@see URLConnection#setConnectTimeout(int);public void setConnectTimeout(int connectTimeout) {_		this.connectTimeout = connectTimeout__	};set,the,underlying,urlconnection,s,connect,timeout,in,milliseconds,a,timeout,value,of,0,specifies,an,infinite,timeout,p,default,is,the,system,s,default,timeout,see,urlconnection,set,connect,timeout,int;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
SimpleHttpInvokerRequestExecutor -> public void setConnectTimeout(int connectTimeout);1516903831;Set the underlying URLConnection's connect timeout (in milliseconds)._A timeout value of 0 specifies an infinite timeout._<p>Default is the system's default timeout._@see URLConnection#setConnectTimeout(int);public void setConnectTimeout(int connectTimeout) {_		this.connectTimeout = connectTimeout__	};set,the,underlying,urlconnection,s,connect,timeout,in,milliseconds,a,timeout,value,of,0,specifies,an,infinite,timeout,p,default,is,the,system,s,default,timeout,see,urlconnection,set,connect,timeout,int;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
SimpleHttpInvokerRequestExecutor -> protected boolean isGzipResponse(HttpURLConnection con);1328020251;Determine whether the given response is a GZIP response._<p>Default implementation checks whether the HTTP "Content-Encoding"_header contains "gzip" (in any casing)._@param con the HttpURLConnection to check;protected boolean isGzipResponse(HttpURLConnection con) {_		String encodingHeader = con.getHeaderField(HTTP_HEADER_CONTENT_ENCODING)__		return (encodingHeader != null && encodingHeader.toLowerCase().contains(ENCODING_GZIP))__	};determine,whether,the,given,response,is,a,gzip,response,p,default,implementation,checks,whether,the,http,content,encoding,header,contains,gzip,in,any,casing,param,con,the,http,urlconnection,to,check;protected,boolean,is,gzip,response,http,urlconnection,con,string,encoding,header,con,get,header,field,return,encoding,header,null,encoding,header,to,lower,case,contains
SimpleHttpInvokerRequestExecutor -> protected boolean isGzipResponse(HttpURLConnection con);1380921248;Determine whether the given response is a GZIP response._<p>Default implementation checks whether the HTTP "Content-Encoding"_header contains "gzip" (in any casing)._@param con the HttpURLConnection to check;protected boolean isGzipResponse(HttpURLConnection con) {_		String encodingHeader = con.getHeaderField(HTTP_HEADER_CONTENT_ENCODING)__		return (encodingHeader != null && encodingHeader.toLowerCase().contains(ENCODING_GZIP))__	};determine,whether,the,given,response,is,a,gzip,response,p,default,implementation,checks,whether,the,http,content,encoding,header,contains,gzip,in,any,casing,param,con,the,http,urlconnection,to,check;protected,boolean,is,gzip,response,http,urlconnection,con,string,encoding,header,con,get,header,field,return,encoding,header,null,encoding,header,to,lower,case,contains
SimpleHttpInvokerRequestExecutor -> protected boolean isGzipResponse(HttpURLConnection con);1411322034;Determine whether the given response is a GZIP response._<p>Default implementation checks whether the HTTP "Content-Encoding"_header contains "gzip" (in any casing)._@param con the HttpURLConnection to check;protected boolean isGzipResponse(HttpURLConnection con) {_		String encodingHeader = con.getHeaderField(HTTP_HEADER_CONTENT_ENCODING)__		return (encodingHeader != null && encodingHeader.toLowerCase().contains(ENCODING_GZIP))__	};determine,whether,the,given,response,is,a,gzip,response,p,default,implementation,checks,whether,the,http,content,encoding,header,contains,gzip,in,any,casing,param,con,the,http,urlconnection,to,check;protected,boolean,is,gzip,response,http,urlconnection,con,string,encoding,header,con,get,header,field,return,encoding,header,null,encoding,header,to,lower,case,contains
SimpleHttpInvokerRequestExecutor -> protected boolean isGzipResponse(HttpURLConnection con);1497970235;Determine whether the given response is a GZIP response._<p>Default implementation checks whether the HTTP "Content-Encoding"_header contains "gzip" (in any casing)._@param con the HttpURLConnection to check;protected boolean isGzipResponse(HttpURLConnection con) {_		String encodingHeader = con.getHeaderField(HTTP_HEADER_CONTENT_ENCODING)__		return (encodingHeader != null && encodingHeader.toLowerCase().contains(ENCODING_GZIP))__	};determine,whether,the,given,response,is,a,gzip,response,p,default,implementation,checks,whether,the,http,content,encoding,header,contains,gzip,in,any,casing,param,con,the,http,urlconnection,to,check;protected,boolean,is,gzip,response,http,urlconnection,con,string,encoding,header,con,get,header,field,return,encoding,header,null,encoding,header,to,lower,case,contains
SimpleHttpInvokerRequestExecutor -> protected boolean isGzipResponse(HttpURLConnection con);1516903831;Determine whether the given response is a GZIP response._<p>Default implementation checks whether the HTTP "Content-Encoding"_header contains "gzip" (in any casing)._@param con the HttpURLConnection to check;protected boolean isGzipResponse(HttpURLConnection con) {_		String encodingHeader = con.getHeaderField(HTTP_HEADER_CONTENT_ENCODING)__		return (encodingHeader != null && encodingHeader.toLowerCase().contains(ENCODING_GZIP))__	};determine,whether,the,given,response,is,a,gzip,response,p,default,implementation,checks,whether,the,http,content,encoding,header,contains,gzip,in,any,casing,param,con,the,http,urlconnection,to,check;protected,boolean,is,gzip,response,http,urlconnection,con,string,encoding,header,con,get,header,field,return,encoding,header,null,encoding,header,to,lower,case,contains
SimpleHttpInvokerRequestExecutor -> public void setReadTimeout(int readTimeout);1328020251;Set the underlying URLConnection's read timeout (in milliseconds)._A timeout value of 0 specifies an infinite timeout._<p>Default is the system's default timeout._@see URLConnection#setReadTimeout(int);public void setReadTimeout(int readTimeout) {_		this.readTimeout = readTimeout__	};set,the,underlying,urlconnection,s,read,timeout,in,milliseconds,a,timeout,value,of,0,specifies,an,infinite,timeout,p,default,is,the,system,s,default,timeout,see,urlconnection,set,read,timeout,int;public,void,set,read,timeout,int,read,timeout,this,read,timeout,read,timeout
SimpleHttpInvokerRequestExecutor -> public void setReadTimeout(int readTimeout);1380921248;Set the underlying URLConnection's read timeout (in milliseconds)._A timeout value of 0 specifies an infinite timeout._<p>Default is the system's default timeout._@see URLConnection#setReadTimeout(int);public void setReadTimeout(int readTimeout) {_		this.readTimeout = readTimeout__	};set,the,underlying,urlconnection,s,read,timeout,in,milliseconds,a,timeout,value,of,0,specifies,an,infinite,timeout,p,default,is,the,system,s,default,timeout,see,urlconnection,set,read,timeout,int;public,void,set,read,timeout,int,read,timeout,this,read,timeout,read,timeout
SimpleHttpInvokerRequestExecutor -> public void setReadTimeout(int readTimeout);1411322034;Set the underlying URLConnection's read timeout (in milliseconds)._A timeout value of 0 specifies an infinite timeout._<p>Default is the system's default timeout._@see URLConnection#setReadTimeout(int);public void setReadTimeout(int readTimeout) {_		this.readTimeout = readTimeout__	};set,the,underlying,urlconnection,s,read,timeout,in,milliseconds,a,timeout,value,of,0,specifies,an,infinite,timeout,p,default,is,the,system,s,default,timeout,see,urlconnection,set,read,timeout,int;public,void,set,read,timeout,int,read,timeout,this,read,timeout,read,timeout
SimpleHttpInvokerRequestExecutor -> public void setReadTimeout(int readTimeout);1497970235;Set the underlying URLConnection's read timeout (in milliseconds)._A timeout value of 0 specifies an infinite timeout._<p>Default is the system's default timeout._@see URLConnection#setReadTimeout(int);public void setReadTimeout(int readTimeout) {_		this.readTimeout = readTimeout__	};set,the,underlying,urlconnection,s,read,timeout,in,milliseconds,a,timeout,value,of,0,specifies,an,infinite,timeout,p,default,is,the,system,s,default,timeout,see,urlconnection,set,read,timeout,int;public,void,set,read,timeout,int,read,timeout,this,read,timeout,read,timeout
SimpleHttpInvokerRequestExecutor -> public void setReadTimeout(int readTimeout);1516903831;Set the underlying URLConnection's read timeout (in milliseconds)._A timeout value of 0 specifies an infinite timeout._<p>Default is the system's default timeout._@see URLConnection#setReadTimeout(int);public void setReadTimeout(int readTimeout) {_		this.readTimeout = readTimeout__	};set,the,underlying,urlconnection,s,read,timeout,in,milliseconds,a,timeout,value,of,0,specifies,an,infinite,timeout,p,default,is,the,system,s,default,timeout,see,urlconnection,set,read,timeout,int;public,void,set,read,timeout,int,read,timeout,this,read,timeout,read,timeout
SimpleHttpInvokerRequestExecutor -> protected HttpURLConnection openConnection(HttpInvokerClientConfiguration config) throws IOException;1328020251;Open an HttpURLConnection for the given remote invocation request._@param config the HTTP invoker configuration that specifies the_target service_@return the HttpURLConnection for the given request_@throws IOException if thrown by I/O methods_@see java.net.URL#openConnection();protected HttpURLConnection openConnection(HttpInvokerClientConfiguration config) throws IOException {_		URLConnection con = new URL(config.getServiceUrl()).openConnection()__		if (!(con instanceof HttpURLConnection)) {_			throw new IOException("Service URL [" + config.getServiceUrl() + "] is not an HTTP URL")__		}_		return (HttpURLConnection) con__	};open,an,http,urlconnection,for,the,given,remote,invocation,request,param,config,the,http,invoker,configuration,that,specifies,the,target,service,return,the,http,urlconnection,for,the,given,request,throws,ioexception,if,thrown,by,i,o,methods,see,java,net,url,open,connection;protected,http,urlconnection,open,connection,http,invoker,client,configuration,config,throws,ioexception,urlconnection,con,new,url,config,get,service,url,open,connection,if,con,instanceof,http,urlconnection,throw,new,ioexception,service,url,config,get,service,url,is,not,an,http,url,return,http,urlconnection,con
SimpleHttpInvokerRequestExecutor -> protected HttpURLConnection openConnection(HttpInvokerClientConfiguration config) throws IOException;1380921248;Open an HttpURLConnection for the given remote invocation request._@param config the HTTP invoker configuration that specifies the_target service_@return the HttpURLConnection for the given request_@throws IOException if thrown by I/O methods_@see java.net.URL#openConnection();protected HttpURLConnection openConnection(HttpInvokerClientConfiguration config) throws IOException {_		URLConnection con = new URL(config.getServiceUrl()).openConnection()__		if (!(con instanceof HttpURLConnection)) {_			throw new IOException("Service URL [" + config.getServiceUrl() + "] is not an HTTP URL")__		}_		return (HttpURLConnection) con__	};open,an,http,urlconnection,for,the,given,remote,invocation,request,param,config,the,http,invoker,configuration,that,specifies,the,target,service,return,the,http,urlconnection,for,the,given,request,throws,ioexception,if,thrown,by,i,o,methods,see,java,net,url,open,connection;protected,http,urlconnection,open,connection,http,invoker,client,configuration,config,throws,ioexception,urlconnection,con,new,url,config,get,service,url,open,connection,if,con,instanceof,http,urlconnection,throw,new,ioexception,service,url,config,get,service,url,is,not,an,http,url,return,http,urlconnection,con
SimpleHttpInvokerRequestExecutor -> protected HttpURLConnection openConnection(HttpInvokerClientConfiguration config) throws IOException;1411322034;Open an HttpURLConnection for the given remote invocation request._@param config the HTTP invoker configuration that specifies the_target service_@return the HttpURLConnection for the given request_@throws IOException if thrown by I/O methods_@see java.net.URL#openConnection();protected HttpURLConnection openConnection(HttpInvokerClientConfiguration config) throws IOException {_		URLConnection con = new URL(config.getServiceUrl()).openConnection()__		if (!(con instanceof HttpURLConnection)) {_			throw new IOException("Service URL [" + config.getServiceUrl() + "] is not an HTTP URL")__		}_		return (HttpURLConnection) con__	};open,an,http,urlconnection,for,the,given,remote,invocation,request,param,config,the,http,invoker,configuration,that,specifies,the,target,service,return,the,http,urlconnection,for,the,given,request,throws,ioexception,if,thrown,by,i,o,methods,see,java,net,url,open,connection;protected,http,urlconnection,open,connection,http,invoker,client,configuration,config,throws,ioexception,urlconnection,con,new,url,config,get,service,url,open,connection,if,con,instanceof,http,urlconnection,throw,new,ioexception,service,url,config,get,service,url,is,not,an,http,url,return,http,urlconnection,con
SimpleHttpInvokerRequestExecutor -> protected HttpURLConnection openConnection(HttpInvokerClientConfiguration config) throws IOException;1497970235;Open an HttpURLConnection for the given remote invocation request._@param config the HTTP invoker configuration that specifies the_target service_@return the HttpURLConnection for the given request_@throws IOException if thrown by I/O methods_@see java.net.URL#openConnection();protected HttpURLConnection openConnection(HttpInvokerClientConfiguration config) throws IOException {_		URLConnection con = new URL(config.getServiceUrl()).openConnection()__		if (!(con instanceof HttpURLConnection)) {_			throw new IOException(_					"Service URL [" + config.getServiceUrl() + "] does not resolve to an HTTP connection")__		}_		return (HttpURLConnection) con__	};open,an,http,urlconnection,for,the,given,remote,invocation,request,param,config,the,http,invoker,configuration,that,specifies,the,target,service,return,the,http,urlconnection,for,the,given,request,throws,ioexception,if,thrown,by,i,o,methods,see,java,net,url,open,connection;protected,http,urlconnection,open,connection,http,invoker,client,configuration,config,throws,ioexception,urlconnection,con,new,url,config,get,service,url,open,connection,if,con,instanceof,http,urlconnection,throw,new,ioexception,service,url,config,get,service,url,does,not,resolve,to,an,http,connection,return,http,urlconnection,con
SimpleHttpInvokerRequestExecutor -> protected HttpURLConnection openConnection(HttpInvokerClientConfiguration config) throws IOException;1516903831;Open an {@link HttpURLConnection} for the given remote invocation request._@param config the HTTP invoker configuration that specifies the_target service_@return the HttpURLConnection for the given request_@throws IOException if thrown by I/O methods_@see java.net.URL#openConnection();protected HttpURLConnection openConnection(HttpInvokerClientConfiguration config) throws IOException {_		URLConnection con = new URL(config.getServiceUrl()).openConnection()__		if (!(con instanceof HttpURLConnection)) {_			throw new IOException(_					"Service URL [" + config.getServiceUrl() + "] does not resolve to an HTTP connection")__		}_		return (HttpURLConnection) con__	};open,an,link,http,urlconnection,for,the,given,remote,invocation,request,param,config,the,http,invoker,configuration,that,specifies,the,target,service,return,the,http,urlconnection,for,the,given,request,throws,ioexception,if,thrown,by,i,o,methods,see,java,net,url,open,connection;protected,http,urlconnection,open,connection,http,invoker,client,configuration,config,throws,ioexception,urlconnection,con,new,url,config,get,service,url,open,connection,if,con,instanceof,http,urlconnection,throw,new,ioexception,service,url,config,get,service,url,does,not,resolve,to,an,http,connection,return,http,urlconnection,con
SimpleHttpInvokerRequestExecutor -> protected void writeRequestBody( 			HttpInvokerClientConfiguration config, HttpURLConnection con, ByteArrayOutputStream baos) 			throws IOException;1328020251;Set the given serialized remote invocation as request body._<p>The default implementation simply write the serialized invocation to the_HttpURLConnection's OutputStream. This can be overridden, for example, to write_a specific encoding and potentially set appropriate HTTP request headers._@param config the HTTP invoker configuration that specifies the target service_@param con the HttpURLConnection to write the request body to_@param baos the ByteArrayOutputStream that contains the serialized_RemoteInvocation object_@throws IOException if thrown by I/O methods_@see java.net.HttpURLConnection#getOutputStream()_@see java.net.HttpURLConnection#setRequestProperty;protected void writeRequestBody(_			HttpInvokerClientConfiguration config, HttpURLConnection con, ByteArrayOutputStream baos)_			throws IOException {__		baos.writeTo(con.getOutputStream())__	};set,the,given,serialized,remote,invocation,as,request,body,p,the,default,implementation,simply,write,the,serialized,invocation,to,the,http,urlconnection,s,output,stream,this,can,be,overridden,for,example,to,write,a,specific,encoding,and,potentially,set,appropriate,http,request,headers,param,config,the,http,invoker,configuration,that,specifies,the,target,service,param,con,the,http,urlconnection,to,write,the,request,body,to,param,baos,the,byte,array,output,stream,that,contains,the,serialized,remote,invocation,object,throws,ioexception,if,thrown,by,i,o,methods,see,java,net,http,urlconnection,get,output,stream,see,java,net,http,urlconnection,set,request,property;protected,void,write,request,body,http,invoker,client,configuration,config,http,urlconnection,con,byte,array,output,stream,baos,throws,ioexception,baos,write,to,con,get,output,stream
SimpleHttpInvokerRequestExecutor -> protected void writeRequestBody( 			HttpInvokerClientConfiguration config, HttpURLConnection con, ByteArrayOutputStream baos) 			throws IOException;1380921248;Set the given serialized remote invocation as request body._<p>The default implementation simply write the serialized invocation to the_HttpURLConnection's OutputStream. This can be overridden, for example, to write_a specific encoding and potentially set appropriate HTTP request headers._@param config the HTTP invoker configuration that specifies the target service_@param con the HttpURLConnection to write the request body to_@param baos the ByteArrayOutputStream that contains the serialized_RemoteInvocation object_@throws IOException if thrown by I/O methods_@see java.net.HttpURLConnection#getOutputStream()_@see java.net.HttpURLConnection#setRequestProperty;protected void writeRequestBody(_			HttpInvokerClientConfiguration config, HttpURLConnection con, ByteArrayOutputStream baos)_			throws IOException {__		baos.writeTo(con.getOutputStream())__	};set,the,given,serialized,remote,invocation,as,request,body,p,the,default,implementation,simply,write,the,serialized,invocation,to,the,http,urlconnection,s,output,stream,this,can,be,overridden,for,example,to,write,a,specific,encoding,and,potentially,set,appropriate,http,request,headers,param,config,the,http,invoker,configuration,that,specifies,the,target,service,param,con,the,http,urlconnection,to,write,the,request,body,to,param,baos,the,byte,array,output,stream,that,contains,the,serialized,remote,invocation,object,throws,ioexception,if,thrown,by,i,o,methods,see,java,net,http,urlconnection,get,output,stream,see,java,net,http,urlconnection,set,request,property;protected,void,write,request,body,http,invoker,client,configuration,config,http,urlconnection,con,byte,array,output,stream,baos,throws,ioexception,baos,write,to,con,get,output,stream
SimpleHttpInvokerRequestExecutor -> protected void writeRequestBody( 			HttpInvokerClientConfiguration config, HttpURLConnection con, ByteArrayOutputStream baos) 			throws IOException;1411322034;Set the given serialized remote invocation as request body._<p>The default implementation simply write the serialized invocation to the_HttpURLConnection's OutputStream. This can be overridden, for example, to write_a specific encoding and potentially set appropriate HTTP request headers._@param config the HTTP invoker configuration that specifies the target service_@param con the HttpURLConnection to write the request body to_@param baos the ByteArrayOutputStream that contains the serialized_RemoteInvocation object_@throws IOException if thrown by I/O methods_@see java.net.HttpURLConnection#getOutputStream()_@see java.net.HttpURLConnection#setRequestProperty;protected void writeRequestBody(_			HttpInvokerClientConfiguration config, HttpURLConnection con, ByteArrayOutputStream baos)_			throws IOException {__		baos.writeTo(con.getOutputStream())__	};set,the,given,serialized,remote,invocation,as,request,body,p,the,default,implementation,simply,write,the,serialized,invocation,to,the,http,urlconnection,s,output,stream,this,can,be,overridden,for,example,to,write,a,specific,encoding,and,potentially,set,appropriate,http,request,headers,param,config,the,http,invoker,configuration,that,specifies,the,target,service,param,con,the,http,urlconnection,to,write,the,request,body,to,param,baos,the,byte,array,output,stream,that,contains,the,serialized,remote,invocation,object,throws,ioexception,if,thrown,by,i,o,methods,see,java,net,http,urlconnection,get,output,stream,see,java,net,http,urlconnection,set,request,property;protected,void,write,request,body,http,invoker,client,configuration,config,http,urlconnection,con,byte,array,output,stream,baos,throws,ioexception,baos,write,to,con,get,output,stream
SimpleHttpInvokerRequestExecutor -> protected void writeRequestBody( 			HttpInvokerClientConfiguration config, HttpURLConnection con, ByteArrayOutputStream baos) 			throws IOException;1497970235;Set the given serialized remote invocation as request body._<p>The default implementation simply write the serialized invocation to the_HttpURLConnection's OutputStream. This can be overridden, for example, to write_a specific encoding and potentially set appropriate HTTP request headers._@param config the HTTP invoker configuration that specifies the target service_@param con the HttpURLConnection to write the request body to_@param baos the ByteArrayOutputStream that contains the serialized_RemoteInvocation object_@throws IOException if thrown by I/O methods_@see java.net.HttpURLConnection#getOutputStream()_@see java.net.HttpURLConnection#setRequestProperty;protected void writeRequestBody(_			HttpInvokerClientConfiguration config, HttpURLConnection con, ByteArrayOutputStream baos)_			throws IOException {__		baos.writeTo(con.getOutputStream())__	};set,the,given,serialized,remote,invocation,as,request,body,p,the,default,implementation,simply,write,the,serialized,invocation,to,the,http,urlconnection,s,output,stream,this,can,be,overridden,for,example,to,write,a,specific,encoding,and,potentially,set,appropriate,http,request,headers,param,config,the,http,invoker,configuration,that,specifies,the,target,service,param,con,the,http,urlconnection,to,write,the,request,body,to,param,baos,the,byte,array,output,stream,that,contains,the,serialized,remote,invocation,object,throws,ioexception,if,thrown,by,i,o,methods,see,java,net,http,urlconnection,get,output,stream,see,java,net,http,urlconnection,set,request,property;protected,void,write,request,body,http,invoker,client,configuration,config,http,urlconnection,con,byte,array,output,stream,baos,throws,ioexception,baos,write,to,con,get,output,stream
SimpleHttpInvokerRequestExecutor -> protected void writeRequestBody( 			HttpInvokerClientConfiguration config, HttpURLConnection con, ByteArrayOutputStream baos) 			throws IOException;1516903831;Set the given serialized remote invocation as request body._<p>The default implementation simply write the serialized invocation to the_HttpURLConnection's OutputStream. This can be overridden, for example, to write_a specific encoding and potentially set appropriate HTTP request headers._@param config the HTTP invoker configuration that specifies the target service_@param con the HttpURLConnection to write the request body to_@param baos the ByteArrayOutputStream that contains the serialized_RemoteInvocation object_@throws IOException if thrown by I/O methods_@see java.net.HttpURLConnection#getOutputStream()_@see java.net.HttpURLConnection#setRequestProperty;protected void writeRequestBody(_			HttpInvokerClientConfiguration config, HttpURLConnection con, ByteArrayOutputStream baos)_			throws IOException {__		baos.writeTo(con.getOutputStream())__	};set,the,given,serialized,remote,invocation,as,request,body,p,the,default,implementation,simply,write,the,serialized,invocation,to,the,http,urlconnection,s,output,stream,this,can,be,overridden,for,example,to,write,a,specific,encoding,and,potentially,set,appropriate,http,request,headers,param,config,the,http,invoker,configuration,that,specifies,the,target,service,param,con,the,http,urlconnection,to,write,the,request,body,to,param,baos,the,byte,array,output,stream,that,contains,the,serialized,remote,invocation,object,throws,ioexception,if,thrown,by,i,o,methods,see,java,net,http,urlconnection,get,output,stream,see,java,net,http,urlconnection,set,request,property;protected,void,write,request,body,http,invoker,client,configuration,config,http,urlconnection,con,byte,array,output,stream,baos,throws,ioexception,baos,write,to,con,get,output,stream
