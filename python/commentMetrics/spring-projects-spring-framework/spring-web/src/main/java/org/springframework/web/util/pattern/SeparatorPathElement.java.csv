commented;modifiers;parameterAmount;loc;comment;code
true;public;2;19;/**  * Matching a separator is easy, basically the character at candidateIndex  * must be the separator.  */ ;/**  * Matching a separator is easy, basically the character at candidateIndex  * must be the separator.  */ @Override public boolean matches(int pathIndex, MatchingContext matchingContext) {     if (pathIndex < matchingContext.pathLength && matchingContext.isSeparator(pathIndex)) {         if (isNoMorePattern()) {             if (matchingContext.determineRemainingPath) {                 matchingContext.remainingPathIndex = pathIndex + 1.                 return true.             } else {                 return (pathIndex + 1 == matchingContext.pathLength).             }         } else {             pathIndex++.             return (this.next != null && this.next.matches(pathIndex, matchingContext)).         }     }     return false. }
false;public;0;4;;@Override public int getNormalizedLength() {     return 1. }
false;public;0;3;;public String toString() {     return "Separator(" + this.separator + ")". }
false;public;0;3;;public char[] getChars() {     return new char[] { this.separator }. }
