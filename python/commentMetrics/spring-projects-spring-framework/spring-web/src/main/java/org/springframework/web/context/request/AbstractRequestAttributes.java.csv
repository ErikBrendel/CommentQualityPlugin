# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractRequestAttributes -> public void requestCompleted();1328020251;Signal that the request has been completed._<p>Executes all request destruction callbacks and updates the_session attributes that have been accessed during request processing.;public void requestCompleted() {_		executeRequestDestructionCallbacks()__		updateAccessedSessionAttributes()__		this.requestActive = false__	};signal,that,the,request,has,been,completed,p,executes,all,request,destruction,callbacks,and,updates,the,session,attributes,that,have,been,accessed,during,request,processing;public,void,request,completed,execute,request,destruction,callbacks,update,accessed,session,attributes,this,request,active,false
AbstractRequestAttributes -> public void requestCompleted();1467730834;Signal that the request has been completed._<p>Executes all request destruction callbacks and updates the_session attributes that have been accessed during request processing.;public void requestCompleted() {_		executeRequestDestructionCallbacks()__		updateAccessedSessionAttributes()__		this.requestActive = false__	};signal,that,the,request,has,been,completed,p,executes,all,request,destruction,callbacks,and,updates,the,session,attributes,that,have,been,accessed,during,request,processing;public,void,request,completed,execute,request,destruction,callbacks,update,accessed,session,attributes,this,request,active,false
AbstractRequestAttributes -> public void requestCompleted();1530174524;Signal that the request has been completed._<p>Executes all request destruction callbacks and updates the_session attributes that have been accessed during request processing.;public void requestCompleted() {_		executeRequestDestructionCallbacks()__		updateAccessedSessionAttributes()__		this.requestActive = false__	};signal,that,the,request,has,been,completed,p,executes,all,request,destruction,callbacks,and,updates,the,session,attributes,that,have,been,accessed,during,request,processing;public,void,request,completed,execute,request,destruction,callbacks,update,accessed,session,attributes,this,request,active,false
AbstractRequestAttributes -> protected final boolean isRequestActive();1328020251;Determine whether the original request is still active._@see #requestCompleted();protected final boolean isRequestActive() {_		return this.requestActive__	};determine,whether,the,original,request,is,still,active,see,request,completed;protected,final,boolean,is,request,active,return,this,request,active
AbstractRequestAttributes -> protected final boolean isRequestActive();1467730834;Determine whether the original request is still active._@see #requestCompleted();protected final boolean isRequestActive() {_		return this.requestActive__	};determine,whether,the,original,request,is,still,active,see,request,completed;protected,final,boolean,is,request,active,return,this,request,active
AbstractRequestAttributes -> protected final boolean isRequestActive();1530174524;Determine whether the original request is still active._@see #requestCompleted();protected final boolean isRequestActive() {_		return this.requestActive__	};determine,whether,the,original,request,is,still,active,see,request,completed;protected,final,boolean,is,request,active,return,this,request,active
AbstractRequestAttributes -> protected final void registerRequestDestructionCallback(String name, Runnable callback);1328020251;Register the given callback as to be executed after request completion._@param name the name of the attribute to register the callback for_@param callback the callback to be executed for destruction;protected final void registerRequestDestructionCallback(String name, Runnable callback) {_		Assert.notNull(name, "Name must not be null")__		Assert.notNull(callback, "Callback must not be null")__		synchronized (this.requestDestructionCallbacks) {_			this.requestDestructionCallbacks.put(name, callback)__		}_	};register,the,given,callback,as,to,be,executed,after,request,completion,param,name,the,name,of,the,attribute,to,register,the,callback,for,param,callback,the,callback,to,be,executed,for,destruction;protected,final,void,register,request,destruction,callback,string,name,runnable,callback,assert,not,null,name,name,must,not,be,null,assert,not,null,callback,callback,must,not,be,null,synchronized,this,request,destruction,callbacks,this,request,destruction,callbacks,put,name,callback
AbstractRequestAttributes -> protected final void registerRequestDestructionCallback(String name, Runnable callback);1467730834;Register the given callback as to be executed after request completion._@param name the name of the attribute to register the callback for_@param callback the callback to be executed for destruction;protected final void registerRequestDestructionCallback(String name, Runnable callback) {_		Assert.notNull(name, "Name must not be null")__		Assert.notNull(callback, "Callback must not be null")__		synchronized (this.requestDestructionCallbacks) {_			this.requestDestructionCallbacks.put(name, callback)__		}_	};register,the,given,callback,as,to,be,executed,after,request,completion,param,name,the,name,of,the,attribute,to,register,the,callback,for,param,callback,the,callback,to,be,executed,for,destruction;protected,final,void,register,request,destruction,callback,string,name,runnable,callback,assert,not,null,name,name,must,not,be,null,assert,not,null,callback,callback,must,not,be,null,synchronized,this,request,destruction,callbacks,this,request,destruction,callbacks,put,name,callback
AbstractRequestAttributes -> protected final void registerRequestDestructionCallback(String name, Runnable callback);1530174524;Register the given callback as to be executed after request completion._@param name the name of the attribute to register the callback for_@param callback the callback to be executed for destruction;protected final void registerRequestDestructionCallback(String name, Runnable callback) {_		Assert.notNull(name, "Name must not be null")__		Assert.notNull(callback, "Callback must not be null")__		synchronized (this.requestDestructionCallbacks) {_			this.requestDestructionCallbacks.put(name, callback)__		}_	};register,the,given,callback,as,to,be,executed,after,request,completion,param,name,the,name,of,the,attribute,to,register,the,callback,for,param,callback,the,callback,to,be,executed,for,destruction;protected,final,void,register,request,destruction,callback,string,name,runnable,callback,assert,not,null,name,name,must,not,be,null,assert,not,null,callback,callback,must,not,be,null,synchronized,this,request,destruction,callbacks,this,request,destruction,callbacks,put,name,callback
AbstractRequestAttributes -> protected final void removeRequestDestructionCallback(String name);1328020251;Remove the request destruction callback for the specified attribute, if any._@param name the name of the attribute to remove the callback for;protected final void removeRequestDestructionCallback(String name) {_		Assert.notNull(name, "Name must not be null")__		synchronized (this.requestDestructionCallbacks) {_			this.requestDestructionCallbacks.remove(name)__		}_	};remove,the,request,destruction,callback,for,the,specified,attribute,if,any,param,name,the,name,of,the,attribute,to,remove,the,callback,for;protected,final,void,remove,request,destruction,callback,string,name,assert,not,null,name,name,must,not,be,null,synchronized,this,request,destruction,callbacks,this,request,destruction,callbacks,remove,name
AbstractRequestAttributes -> protected final void removeRequestDestructionCallback(String name);1467730834;Remove the request destruction callback for the specified attribute, if any._@param name the name of the attribute to remove the callback for;protected final void removeRequestDestructionCallback(String name) {_		Assert.notNull(name, "Name must not be null")__		synchronized (this.requestDestructionCallbacks) {_			this.requestDestructionCallbacks.remove(name)__		}_	};remove,the,request,destruction,callback,for,the,specified,attribute,if,any,param,name,the,name,of,the,attribute,to,remove,the,callback,for;protected,final,void,remove,request,destruction,callback,string,name,assert,not,null,name,name,must,not,be,null,synchronized,this,request,destruction,callbacks,this,request,destruction,callbacks,remove,name
AbstractRequestAttributes -> protected final void removeRequestDestructionCallback(String name);1530174524;Remove the request destruction callback for the specified attribute, if any._@param name the name of the attribute to remove the callback for;protected final void removeRequestDestructionCallback(String name) {_		Assert.notNull(name, "Name must not be null")__		synchronized (this.requestDestructionCallbacks) {_			this.requestDestructionCallbacks.remove(name)__		}_	};remove,the,request,destruction,callback,for,the,specified,attribute,if,any,param,name,the,name,of,the,attribute,to,remove,the,callback,for;protected,final,void,remove,request,destruction,callback,string,name,assert,not,null,name,name,must,not,be,null,synchronized,this,request,destruction,callbacks,this,request,destruction,callbacks,remove,name
AbstractRequestAttributes -> protected abstract void updateAccessedSessionAttributes()_;1328020251;Update all session attributes that have been accessed during request processing,_to expose their potentially updated state to the underlying session manager.;protected abstract void updateAccessedSessionAttributes()_;update,all,session,attributes,that,have,been,accessed,during,request,processing,to,expose,their,potentially,updated,state,to,the,underlying,session,manager;protected,abstract,void,update,accessed,session,attributes
AbstractRequestAttributes -> protected abstract void updateAccessedSessionAttributes()_;1467730834;Update all session attributes that have been accessed during request processing,_to expose their potentially updated state to the underlying session manager.;protected abstract void updateAccessedSessionAttributes()_;update,all,session,attributes,that,have,been,accessed,during,request,processing,to,expose,their,potentially,updated,state,to,the,underlying,session,manager;protected,abstract,void,update,accessed,session,attributes
AbstractRequestAttributes -> protected abstract void updateAccessedSessionAttributes()_;1530174524;Update all session attributes that have been accessed during request processing,_to expose their potentially updated state to the underlying session manager.;protected abstract void updateAccessedSessionAttributes()_;update,all,session,attributes,that,have,been,accessed,during,request,processing,to,expose,their,potentially,updated,state,to,the,underlying,session,manager;protected,abstract,void,update,accessed,session,attributes
AbstractRequestAttributes -> private void executeRequestDestructionCallbacks();1328020251;Execute all callbacks that have been registered for execution_after request completion.;private void executeRequestDestructionCallbacks() {_		synchronized (this.requestDestructionCallbacks) {_			for (Runnable runnable : this.requestDestructionCallbacks.values()) {_				runnable.run()__			}_			this.requestDestructionCallbacks.clear()__		}_	};execute,all,callbacks,that,have,been,registered,for,execution,after,request,completion;private,void,execute,request,destruction,callbacks,synchronized,this,request,destruction,callbacks,for,runnable,runnable,this,request,destruction,callbacks,values,runnable,run,this,request,destruction,callbacks,clear
AbstractRequestAttributes -> private void executeRequestDestructionCallbacks();1467730834;Execute all callbacks that have been registered for execution_after request completion.;private void executeRequestDestructionCallbacks() {_		synchronized (this.requestDestructionCallbacks) {_			for (Runnable runnable : this.requestDestructionCallbacks.values()) {_				runnable.run()__			}_			this.requestDestructionCallbacks.clear()__		}_	};execute,all,callbacks,that,have,been,registered,for,execution,after,request,completion;private,void,execute,request,destruction,callbacks,synchronized,this,request,destruction,callbacks,for,runnable,runnable,this,request,destruction,callbacks,values,runnable,run,this,request,destruction,callbacks,clear
AbstractRequestAttributes -> private void executeRequestDestructionCallbacks();1530174524;Execute all callbacks that have been registered for execution_after request completion.;private void executeRequestDestructionCallbacks() {_		synchronized (this.requestDestructionCallbacks) {_			for (Runnable runnable : this.requestDestructionCallbacks.values()) {_				runnable.run()__			}_			this.requestDestructionCallbacks.clear()__		}_	};execute,all,callbacks,that,have,been,registered,for,execution,after,request,completion;private,void,execute,request,destruction,callbacks,synchronized,this,request,destruction,callbacks,for,runnable,runnable,this,request,destruction,callbacks,values,runnable,run,this,request,destruction,callbacks,clear
