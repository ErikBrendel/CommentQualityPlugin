commented;modifiers;parameterAmount;loc;comment;code
true;public;1;3;/**  * Set the encoding to use for requests. This encoding will be passed into a  * {@link javax.servlet.http.HttpServletRequest#setCharacterEncoding} call.  * <p>Whether this encoding will override existing request encodings  * (and whether it will be applied as default response encoding as well)  * depends on the {@link #setForceEncoding "forceEncoding"} flag.  */ ;/**  * Set the encoding to use for requests. This encoding will be passed into a  * {@link javax.servlet.http.HttpServletRequest#setCharacterEncoding} call.  * <p>Whether this encoding will override existing request encodings  * (and whether it will be applied as default response encoding as well)  * depends on the {@link #setForceEncoding "forceEncoding"} flag.  */ public void setEncoding(@Nullable String encoding) {     this.encoding = encoding. }
true;public;0;4;/**  * Return the configured encoding for requests and/or responses.  * @since 4.3  */ ;/**  * Return the configured encoding for requests and/or responses.  * @since 4.3  */ @Nullable public String getEncoding() {     return this.encoding. }
true;public;1;4;/**  * Set whether the configured {@link #setEncoding encoding} of this filter  * is supposed to override existing request and response encodings.  * <p>Default is "false", i.e. do not modify the encoding if  * {@link javax.servlet.http.HttpServletRequest#getCharacterEncoding()}  * returns a non-null value. Switch this to "true" to enforce the specified  * encoding in any case, applying it as default response encoding as well.  * <p>This is the equivalent to setting both {@link #setForceRequestEncoding(boolean)}  * and {@link #setForceResponseEncoding(boolean)}.  * @see #setForceRequestEncoding(boolean)  * @see #setForceResponseEncoding(boolean)  */ ;/**  * Set whether the configured {@link #setEncoding encoding} of this filter  * is supposed to override existing request and response encodings.  * <p>Default is "false", i.e. do not modify the encoding if  * {@link javax.servlet.http.HttpServletRequest#getCharacterEncoding()}  * returns a non-null value. Switch this to "true" to enforce the specified  * encoding in any case, applying it as default response encoding as well.  * <p>This is the equivalent to setting both {@link #setForceRequestEncoding(boolean)}  * and {@link #setForceResponseEncoding(boolean)}.  * @see #setForceRequestEncoding(boolean)  * @see #setForceResponseEncoding(boolean)  */ public void setForceEncoding(boolean forceEncoding) {     this.forceRequestEncoding = forceEncoding.     this.forceResponseEncoding = forceEncoding. }
true;public;1;3;/**  * Set whether the configured {@link #setEncoding encoding} of this filter  * is supposed to override existing request encodings.  * <p>Default is "false", i.e. do not modify the encoding if  * {@link javax.servlet.http.HttpServletRequest#getCharacterEncoding()}  * returns a non-null value. Switch this to "true" to enforce the specified  * encoding in any case.  * @since 4.3  */ ;/**  * Set whether the configured {@link #setEncoding encoding} of this filter  * is supposed to override existing request encodings.  * <p>Default is "false", i.e. do not modify the encoding if  * {@link javax.servlet.http.HttpServletRequest#getCharacterEncoding()}  * returns a non-null value. Switch this to "true" to enforce the specified  * encoding in any case.  * @since 4.3  */ public void setForceRequestEncoding(boolean forceRequestEncoding) {     this.forceRequestEncoding = forceRequestEncoding. }
true;public;0;3;/**  * Return whether the encoding should be forced on requests.  * @since 4.3  */ ;/**  * Return whether the encoding should be forced on requests.  * @since 4.3  */ public boolean isForceRequestEncoding() {     return this.forceRequestEncoding. }
true;public;1;3;/**  * Set whether the configured {@link #setEncoding encoding} of this filter  * is supposed to override existing response encodings.  * <p>Default is "false", i.e. do not modify the encoding.  * Switch this to "true" to enforce the specified encoding  * for responses in any case.  * @since 4.3  */ ;/**  * Set whether the configured {@link #setEncoding encoding} of this filter  * is supposed to override existing response encodings.  * <p>Default is "false", i.e. do not modify the encoding.  * Switch this to "true" to enforce the specified encoding  * for responses in any case.  * @since 4.3  */ public void setForceResponseEncoding(boolean forceResponseEncoding) {     this.forceResponseEncoding = forceResponseEncoding. }
true;public;0;3;/**  * Return whether the encoding should be forced on responses.  * @since 4.3  */ ;/**  * Return whether the encoding should be forced on responses.  * @since 4.3  */ public boolean isForceResponseEncoding() {     return this.forceResponseEncoding. }
false;protected;3;16;;@Override protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain) throws ServletException, IOException {     String encoding = getEncoding().     if (encoding != null) {         if (isForceRequestEncoding() || request.getCharacterEncoding() == null) {             request.setCharacterEncoding(encoding).         }         if (isForceResponseEncoding()) {             response.setCharacterEncoding(encoding).         }     }     filterChain.doFilter(request, response). }
