# id;timestamp;commentText;codeText;commentWords;codeWords
ContentDisposition -> Builder -> Builder readDate(ZonedDateTime readDate)_;1497359868;Set the value of the {@literal read-date} parameter.;Builder readDate(ZonedDateTime readDate)_;set,the,value,of,the,literal,read,date,parameter;builder,read,date,zoned,date,time,read,date
ContentDisposition -> Builder -> Builder readDate(ZonedDateTime readDate)_;1498780456;Set the value of the {@literal read-date} parameter.;Builder readDate(ZonedDateTime readDate)_;set,the,value,of,the,literal,read,date,parameter;builder,read,date,zoned,date,time,read,date
ContentDisposition -> Builder -> Builder readDate(ZonedDateTime readDate)_;1500565799;Set the value of the {@literal read-date} parameter.;Builder readDate(ZonedDateTime readDate)_;set,the,value,of,the,literal,read,date,parameter;builder,read,date,zoned,date,time,read,date
ContentDisposition -> Builder -> Builder readDate(ZonedDateTime readDate)_;1508771649;Set the value of the {@literal read-date} parameter.;Builder readDate(ZonedDateTime readDate)_;set,the,value,of,the,literal,read,date,parameter;builder,read,date,zoned,date,time,read,date
ContentDisposition -> Builder -> Builder readDate(ZonedDateTime readDate)_;1508792954;Set the value of the {@literal read-date} parameter.;Builder readDate(ZonedDateTime readDate)_;set,the,value,of,the,literal,read,date,parameter;builder,read,date,zoned,date,time,read,date
ContentDisposition -> Builder -> Builder readDate(ZonedDateTime readDate)_;1519588127;Set the value of the {@literal read-date} parameter.;Builder readDate(ZonedDateTime readDate)_;set,the,value,of,the,literal,read,date,parameter;builder,read,date,zoned,date,time,read,date
ContentDisposition -> Builder -> Builder readDate(ZonedDateTime readDate)_;1530174524;Set the value of the {@literal read-date} parameter.;Builder readDate(ZonedDateTime readDate)_;set,the,value,of,the,literal,read,date,parameter;builder,read,date,zoned,date,time,read,date
ContentDisposition -> Builder -> Builder readDate(ZonedDateTime readDate)_;1530174524;Set the value of the {@literal read-date} parameter.;Builder readDate(ZonedDateTime readDate)_;set,the,value,of,the,literal,read,date,parameter;builder,read,date,zoned,date,time,read,date
ContentDisposition -> Builder -> Builder readDate(ZonedDateTime readDate)_;1530174524;Set the value of the {@literal read-date} parameter.;Builder readDate(ZonedDateTime readDate)_;set,the,value,of,the,literal,read,date,parameter;builder,read,date,zoned,date,time,read,date
ContentDisposition -> Builder -> Builder readDate(ZonedDateTime readDate)_;1530174524;Set the value of the {@literal read-date} parameter.;Builder readDate(ZonedDateTime readDate)_;set,the,value,of,the,literal,read,date,parameter;builder,read,date,zoned,date,time,read,date
ContentDisposition -> Builder -> Builder readDate(ZonedDateTime readDate)_;1530201727;Set the value of the {@literal read-date} parameter.;Builder readDate(ZonedDateTime readDate)_;set,the,value,of,the,literal,read,date,parameter;builder,read,date,zoned,date,time,read,date
ContentDisposition -> public Charset getCharset();1478563943;Return the charset defined in {@literal filename*} parameter, or {@code null} if not defined.;public Charset getCharset() {_		return this.charset__	};return,the,charset,defined,in,literal,filename,parameter,or,code,null,if,not,defined;public,charset,get,charset,return,this,charset
ContentDisposition -> public Charset getCharset();1485382770;Return the charset defined in {@literal filename*} parameter, or {@code null} if not defined.;public Charset getCharset() {_		return this.charset__	};return,the,charset,defined,in,literal,filename,parameter,or,code,null,if,not,defined;public,charset,get,charset,return,this,charset
ContentDisposition -> public Charset getCharset();1485810955;Return the charset defined in {@literal filename*} parameter, or {@code null} if not defined.;public Charset getCharset() {_		return this.charset__	};return,the,charset,defined,in,literal,filename,parameter,or,code,null,if,not,defined;public,charset,get,charset,return,this,charset
ContentDisposition -> @Nullable 	public String getType();1495868221;Return the disposition type, like for example {@literal inline}, {@literal attachment},_{@literal form-data}, or {@code null} if not defined.;@Nullable_	public String getType() {_		return this.type__	};return,the,disposition,type,like,for,example,literal,inline,literal,attachment,literal,form,data,or,code,null,if,not,defined;nullable,public,string,get,type,return,this,type
ContentDisposition -> @Nullable 	public String getType();1496259743;Return the disposition type, like for example {@literal inline}, {@literal attachment},_{@literal form-data}, or {@code null} if not defined.;@Nullable_	public String getType() {_		return this.type__	};return,the,disposition,type,like,for,example,literal,inline,literal,attachment,literal,form,data,or,code,null,if,not,defined;nullable,public,string,get,type,return,this,type
ContentDisposition -> @Nullable 	public String getType();1496837955;Return the disposition type, like for example {@literal inline}, {@literal attachment},_{@literal form-data}, or {@code null} if not defined.;@Nullable_	public String getType() {_		return this.type__	};return,the,disposition,type,like,for,example,literal,inline,literal,attachment,literal,form,data,or,code,null,if,not,defined;nullable,public,string,get,type,return,this,type
ContentDisposition -> @Nullable 	public String getType();1497359868;Return the disposition type, like for example {@literal inline}, {@literal attachment},_{@literal form-data}, or {@code null} if not defined.;@Nullable_	public String getType() {_		return this.type__	};return,the,disposition,type,like,for,example,literal,inline,literal,attachment,literal,form,data,or,code,null,if,not,defined;nullable,public,string,get,type,return,this,type
ContentDisposition -> @Nullable 	public String getType();1498780456;Return the disposition type, like for example {@literal inline}, {@literal attachment},_{@literal form-data}, or {@code null} if not defined.;@Nullable_	public String getType() {_		return this.type__	};return,the,disposition,type,like,for,example,literal,inline,literal,attachment,literal,form,data,or,code,null,if,not,defined;nullable,public,string,get,type,return,this,type
ContentDisposition -> @Nullable 	public String getType();1500565799;Return the disposition type, like for example {@literal inline}, {@literal attachment},_{@literal form-data}, or {@code null} if not defined.;@Nullable_	public String getType() {_		return this.type__	};return,the,disposition,type,like,for,example,literal,inline,literal,attachment,literal,form,data,or,code,null,if,not,defined;nullable,public,string,get,type,return,this,type
ContentDisposition -> @Nullable 	public String getType();1508771649;Return the disposition type, like for example {@literal inline}, {@literal attachment},_{@literal form-data}, or {@code null} if not defined.;@Nullable_	public String getType() {_		return this.type__	};return,the,disposition,type,like,for,example,literal,inline,literal,attachment,literal,form,data,or,code,null,if,not,defined;nullable,public,string,get,type,return,this,type
ContentDisposition -> @Nullable 	public String getType();1508792954;Return the disposition type, like for example {@literal inline}, {@literal attachment},_{@literal form-data}, or {@code null} if not defined.;@Nullable_	public String getType() {_		return this.type__	};return,the,disposition,type,like,for,example,literal,inline,literal,attachment,literal,form,data,or,code,null,if,not,defined;nullable,public,string,get,type,return,this,type
ContentDisposition -> @Nullable 	public String getType();1519588127;Return the disposition type, like for example {@literal inline}, {@literal attachment},_{@literal form-data}, or {@code null} if not defined.;@Nullable_	public String getType() {_		return this.type__	};return,the,disposition,type,like,for,example,literal,inline,literal,attachment,literal,form,data,or,code,null,if,not,defined;nullable,public,string,get,type,return,this,type
ContentDisposition -> @Nullable 	public String getType();1530174524;Return the disposition type, like for example {@literal inline}, {@literal attachment},_{@literal form-data}, or {@code null} if not defined.;@Nullable_	public String getType() {_		return this.type__	};return,the,disposition,type,like,for,example,literal,inline,literal,attachment,literal,form,data,or,code,null,if,not,defined;nullable,public,string,get,type,return,this,type
ContentDisposition -> @Nullable 	public String getType();1530174524;Return the disposition type, like for example {@literal inline}, {@literal attachment},_{@literal form-data}, or {@code null} if not defined.;@Nullable_	public String getType() {_		return this.type__	};return,the,disposition,type,like,for,example,literal,inline,literal,attachment,literal,form,data,or,code,null,if,not,defined;nullable,public,string,get,type,return,this,type
ContentDisposition -> @Nullable 	public String getType();1530174524;Return the disposition type, like for example {@literal inline}, {@literal attachment},_{@literal form-data}, or {@code null} if not defined.;@Nullable_	public String getType() {_		return this.type__	};return,the,disposition,type,like,for,example,literal,inline,literal,attachment,literal,form,data,or,code,null,if,not,defined;nullable,public,string,get,type,return,this,type
ContentDisposition -> @Nullable 	public String getType();1530174524;Return the disposition type, like for example {@literal inline}, {@literal attachment},_{@literal form-data}, or {@code null} if not defined.;@Nullable_	public String getType() {_		return this.type__	};return,the,disposition,type,like,for,example,literal,inline,literal,attachment,literal,form,data,or,code,null,if,not,defined;nullable,public,string,get,type,return,this,type
ContentDisposition -> @Nullable 	public String getType();1530201727;Return the disposition type, like for example {@literal inline}, {@literal attachment},_{@literal form-data}, or {@code null} if not defined.;@Nullable_	public String getType() {_		return this.type__	};return,the,disposition,type,like,for,example,literal,inline,literal,attachment,literal,form,data,or,code,null,if,not,defined;nullable,public,string,get,type,return,this,type
ContentDisposition -> public String getFilename();1478563943;Return the value of the {@literal filename} parameter (or the value of the_{@literal filename*} one decoded as defined in the RFC 5987), or {@code null} if not defined.;public String getFilename() {_		return this.filename__	};return,the,value,of,the,literal,filename,parameter,or,the,value,of,the,literal,filename,one,decoded,as,defined,in,the,rfc,5987,or,code,null,if,not,defined;public,string,get,filename,return,this,filename
ContentDisposition -> public String getFilename();1485382770;Return the value of the {@literal filename} parameter (or the value of the_{@literal filename*} one decoded as defined in the RFC 5987), or {@code null} if not defined.;public String getFilename() {_		return this.filename__	};return,the,value,of,the,literal,filename,parameter,or,the,value,of,the,literal,filename,one,decoded,as,defined,in,the,rfc,5987,or,code,null,if,not,defined;public,string,get,filename,return,this,filename
ContentDisposition -> public String getFilename();1485810955;Return the value of the {@literal filename} parameter (or the value of the_{@literal filename*} one decoded as defined in the RFC 5987), or {@code null} if not defined.;public String getFilename() {_		return this.filename__	};return,the,value,of,the,literal,filename,parameter,or,the,value,of,the,literal,filename,one,decoded,as,defined,in,the,rfc,5987,or,code,null,if,not,defined;public,string,get,filename,return,this,filename
ContentDisposition -> Builder -> Builder size(Long size)_;1478563943;Set the value of the {@literal size} parameter;Builder size(Long size)_;set,the,value,of,the,literal,size,parameter;builder,size,long,size
ContentDisposition -> Builder -> Builder size(Long size)_;1485382770;Set the value of the {@literal size} parameter;Builder size(Long size)_;set,the,value,of,the,literal,size,parameter;builder,size,long,size
ContentDisposition -> Builder -> Builder size(Long size)_;1485810955;Set the value of the {@literal size} parameter;Builder size(Long size)_;set,the,value,of,the,literal,size,parameter;builder,size,long,size
ContentDisposition -> Builder -> Builder size(Long size)_;1495868221;Set the value of the {@literal size} parameter;Builder size(Long size)_;set,the,value,of,the,literal,size,parameter;builder,size,long,size
ContentDisposition -> Builder -> Builder size(Long size)_;1496259743;Set the value of the {@literal size} parameter;Builder size(Long size)_;set,the,value,of,the,literal,size,parameter;builder,size,long,size
ContentDisposition -> Builder -> Builder size(Long size)_;1496837955;Set the value of the {@literal size} parameter;Builder size(Long size)_;set,the,value,of,the,literal,size,parameter;builder,size,long,size
ContentDisposition -> Builder -> Builder size(Long size)_;1497359868;Set the value of the {@literal size} parameter;Builder size(Long size)_;set,the,value,of,the,literal,size,parameter;builder,size,long,size
ContentDisposition -> Builder -> Builder size(Long size)_;1498780456;Set the value of the {@literal size} parameter;Builder size(Long size)_;set,the,value,of,the,literal,size,parameter;builder,size,long,size
ContentDisposition -> Builder -> Builder size(Long size)_;1500565799;Set the value of the {@literal size} parameter;Builder size(Long size)_;set,the,value,of,the,literal,size,parameter;builder,size,long,size
ContentDisposition -> Builder -> Builder size(Long size)_;1508771649;Set the value of the {@literal size} parameter;Builder size(Long size)_;set,the,value,of,the,literal,size,parameter;builder,size,long,size
ContentDisposition -> Builder -> Builder size(Long size)_;1508792954;Set the value of the {@literal size} parameter;Builder size(Long size)_;set,the,value,of,the,literal,size,parameter;builder,size,long,size
ContentDisposition -> Builder -> Builder size(Long size)_;1519588127;Set the value of the {@literal size} parameter;Builder size(Long size)_;set,the,value,of,the,literal,size,parameter;builder,size,long,size
ContentDisposition -> Builder -> Builder size(Long size)_;1530174524;Set the value of the {@literal size} parameter.;Builder size(Long size)_;set,the,value,of,the,literal,size,parameter;builder,size,long,size
ContentDisposition -> Builder -> Builder size(Long size)_;1530174524;Set the value of the {@literal size} parameter.;Builder size(Long size)_;set,the,value,of,the,literal,size,parameter;builder,size,long,size
ContentDisposition -> Builder -> Builder size(Long size)_;1530174524;Set the value of the {@literal size} parameter.;Builder size(Long size)_;set,the,value,of,the,literal,size,parameter;builder,size,long,size
ContentDisposition -> Builder -> Builder size(Long size)_;1530174524;Set the value of the {@literal size} parameter.;Builder size(Long size)_;set,the,value,of,the,literal,size,parameter;builder,size,long,size
ContentDisposition -> Builder -> Builder size(Long size)_;1530201727;Set the value of the {@literal size} parameter.;Builder size(Long size)_;set,the,value,of,the,literal,size,parameter;builder,size,long,size
ContentDisposition -> public static ContentDisposition empty();1478563943;@return an empty content disposition;public static ContentDisposition empty() {_		return new ContentDisposition(null, null, null, null, null)__	};return,an,empty,content,disposition;public,static,content,disposition,empty,return,new,content,disposition,null,null,null,null,null
ContentDisposition -> public static ContentDisposition empty();1485382770;Return an empty content disposition.;public static ContentDisposition empty() {_		return new ContentDisposition(null, null, null, null, null)__	};return,an,empty,content,disposition;public,static,content,disposition,empty,return,new,content,disposition,null,null,null,null,null
ContentDisposition -> public static ContentDisposition empty();1485810955;Return an empty content disposition.;public static ContentDisposition empty() {_		return new ContentDisposition(null, null, null, null, null)__	};return,an,empty,content,disposition;public,static,content,disposition,empty,return,new,content,disposition,null,null,null,null,null
ContentDisposition -> public static ContentDisposition empty();1495868221;Return an empty content disposition.;public static ContentDisposition empty() {_		return new ContentDisposition(null, null, null, null, null)__	};return,an,empty,content,disposition;public,static,content,disposition,empty,return,new,content,disposition,null,null,null,null,null
ContentDisposition -> public static ContentDisposition empty();1496259743;Return an empty content disposition.;public static ContentDisposition empty() {_		return new ContentDisposition(null, null, null, null, null)__	};return,an,empty,content,disposition;public,static,content,disposition,empty,return,new,content,disposition,null,null,null,null,null
ContentDisposition -> public static ContentDisposition empty();1496837955;Return an empty content disposition.;public static ContentDisposition empty() {_		return new ContentDisposition("", null, null, null, null)__	};return,an,empty,content,disposition;public,static,content,disposition,empty,return,new,content,disposition,null,null,null,null
ContentDisposition -> public static ContentDisposition empty();1497359868;Return an empty content disposition.;public static ContentDisposition empty() {_		return new ContentDisposition("", null, null, null, null, null, null, null)__	};return,an,empty,content,disposition;public,static,content,disposition,empty,return,new,content,disposition,null,null,null,null,null,null,null
ContentDisposition -> public static ContentDisposition empty();1498780456;Return an empty content disposition.;public static ContentDisposition empty() {_		return new ContentDisposition("", null, null, null, null, null, null, null)__	};return,an,empty,content,disposition;public,static,content,disposition,empty,return,new,content,disposition,null,null,null,null,null,null,null
ContentDisposition -> public static ContentDisposition empty();1500565799;Return an empty content disposition.;public static ContentDisposition empty() {_		return new ContentDisposition("", null, null, null, null, null, null, null)__	};return,an,empty,content,disposition;public,static,content,disposition,empty,return,new,content,disposition,null,null,null,null,null,null,null
ContentDisposition -> public static ContentDisposition empty();1508771649;Return an empty content disposition.;public static ContentDisposition empty() {_		return new ContentDisposition("", null, null, null, null, null, null, null)__	};return,an,empty,content,disposition;public,static,content,disposition,empty,return,new,content,disposition,null,null,null,null,null,null,null
ContentDisposition -> public static ContentDisposition empty();1508792954;Return an empty content disposition.;public static ContentDisposition empty() {_		return new ContentDisposition("", null, null, null, null, null, null, null)__	};return,an,empty,content,disposition;public,static,content,disposition,empty,return,new,content,disposition,null,null,null,null,null,null,null
ContentDisposition -> public static ContentDisposition empty();1519588127;Return an empty content disposition.;public static ContentDisposition empty() {_		return new ContentDisposition("", null, null, null, null, null, null, null)__	};return,an,empty,content,disposition;public,static,content,disposition,empty,return,new,content,disposition,null,null,null,null,null,null,null
ContentDisposition -> public static ContentDisposition empty();1530174524;Return an empty content disposition.;public static ContentDisposition empty() {_		return new ContentDisposition("", null, null, null, null, null, null, null)__	};return,an,empty,content,disposition;public,static,content,disposition,empty,return,new,content,disposition,null,null,null,null,null,null,null
ContentDisposition -> public static ContentDisposition empty();1530174524;Return an empty content disposition.;public static ContentDisposition empty() {_		return new ContentDisposition("", null, null, null, null, null, null, null)__	};return,an,empty,content,disposition;public,static,content,disposition,empty,return,new,content,disposition,null,null,null,null,null,null,null
ContentDisposition -> public static ContentDisposition empty();1530174524;Return an empty content disposition.;public static ContentDisposition empty() {_		return new ContentDisposition("", null, null, null, null, null, null, null)__	};return,an,empty,content,disposition;public,static,content,disposition,empty,return,new,content,disposition,null,null,null,null,null,null,null
ContentDisposition -> public static ContentDisposition empty();1530174524;Return an empty content disposition.;public static ContentDisposition empty() {_		return new ContentDisposition("", null, null, null, null, null, null, null)__	};return,an,empty,content,disposition;public,static,content,disposition,empty,return,new,content,disposition,null,null,null,null,null,null,null
ContentDisposition -> public static ContentDisposition empty();1530201727;Return an empty content disposition.;public static ContentDisposition empty() {_		return new ContentDisposition("", null, null, null, null, null, null, null)__	};return,an,empty,content,disposition;public,static,content,disposition,empty,return,new,content,disposition,null,null,null,null,null,null,null
ContentDisposition -> Builder -> Builder filename(String filename)_;1478563943;Set the value of the {@literal filename} parameter;Builder filename(String filename)_;set,the,value,of,the,literal,filename,parameter;builder,filename,string,filename
ContentDisposition -> Builder -> Builder filename(String filename)_;1485382770;Set the value of the {@literal filename} parameter;Builder filename(String filename)_;set,the,value,of,the,literal,filename,parameter;builder,filename,string,filename
ContentDisposition -> Builder -> Builder filename(String filename)_;1485810955;Set the value of the {@literal filename} parameter;Builder filename(String filename)_;set,the,value,of,the,literal,filename,parameter;builder,filename,string,filename
ContentDisposition -> Builder -> Builder filename(String filename)_;1495868221;Set the value of the {@literal filename} parameter;Builder filename(String filename)_;set,the,value,of,the,literal,filename,parameter;builder,filename,string,filename
ContentDisposition -> Builder -> Builder filename(String filename)_;1496259743;Set the value of the {@literal filename} parameter;Builder filename(String filename)_;set,the,value,of,the,literal,filename,parameter;builder,filename,string,filename
ContentDisposition -> Builder -> Builder filename(String filename)_;1496837955;Set the value of the {@literal filename} parameter;Builder filename(String filename)_;set,the,value,of,the,literal,filename,parameter;builder,filename,string,filename
ContentDisposition -> Builder -> Builder filename(String filename)_;1497359868;Set the value of the {@literal filename} parameter;Builder filename(String filename)_;set,the,value,of,the,literal,filename,parameter;builder,filename,string,filename
ContentDisposition -> Builder -> Builder filename(String filename)_;1498780456;Set the value of the {@literal filename} parameter;Builder filename(String filename)_;set,the,value,of,the,literal,filename,parameter;builder,filename,string,filename
ContentDisposition -> Builder -> Builder filename(String filename)_;1500565799;Set the value of the {@literal filename} parameter;Builder filename(String filename)_;set,the,value,of,the,literal,filename,parameter;builder,filename,string,filename
ContentDisposition -> Builder -> Builder filename(String filename)_;1508771649;Set the value of the {@literal filename} parameter;Builder filename(String filename)_;set,the,value,of,the,literal,filename,parameter;builder,filename,string,filename
ContentDisposition -> Builder -> Builder filename(String filename)_;1508792954;Set the value of the {@literal filename} parameter;Builder filename(String filename)_;set,the,value,of,the,literal,filename,parameter;builder,filename,string,filename
ContentDisposition -> Builder -> Builder filename(String filename)_;1519588127;Set the value of the {@literal filename} parameter;Builder filename(String filename)_;set,the,value,of,the,literal,filename,parameter;builder,filename,string,filename
ContentDisposition -> Builder -> Builder filename(String filename)_;1530174524;Set the value of the {@literal filename} parameter.;Builder filename(String filename)_;set,the,value,of,the,literal,filename,parameter;builder,filename,string,filename
ContentDisposition -> Builder -> Builder filename(String filename)_;1530174524;Set the value of the {@literal filename} parameter.;Builder filename(String filename)_;set,the,value,of,the,literal,filename,parameter;builder,filename,string,filename
ContentDisposition -> Builder -> Builder filename(String filename)_;1530174524;Set the value of the {@literal filename} parameter.;Builder filename(String filename)_;set,the,value,of,the,literal,filename,parameter;builder,filename,string,filename
ContentDisposition -> Builder -> Builder filename(String filename)_;1530174524;Set the value of the {@literal filename} parameter.;Builder filename(String filename)_;set,the,value,of,the,literal,filename,parameter;builder,filename,string,filename
ContentDisposition -> Builder -> Builder filename(String filename)_;1530201727;Set the value of the {@literal filename} parameter.;Builder filename(String filename)_;set,the,value,of,the,literal,filename,parameter;builder,filename,string,filename
ContentDisposition -> public static ContentDisposition parse(String contentDisposition);1478563943;Parse a {@literal Content-Disposition} header value as defined in RFC 2183._@param contentDisposition the {@literal Content-Disposition} header value_@return the parsed content disposition_@see #toString();public static ContentDisposition parse(String contentDisposition) {_		String[] parts = StringUtils.tokenizeToStringArray(contentDisposition, "_")__		Assert.isTrue(parts.length >= 1)__		String type = parts[0]__		String name = null__		String filename = null__		Charset charset = null__		Long size = null__		for (int i = 1_ i < parts.length_ i++) {_			String parameter = parts[i]__			int eqIndex = parameter.indexOf('=')__			if (eqIndex != -1) {_				String attribute = parameter.substring(0, eqIndex)__				String value = (parameter.startsWith("\"", eqIndex + 1) && parameter.endsWith("\"") ?_						parameter.substring(eqIndex + 2, parameter.length() - 1) :_						parameter.substring(eqIndex + 1, parameter.length()))__				if (attribute.equals("name") ) {_					name = value__				}_				else if (attribute.equals("filename*") ) {_					filename = decodeHeaderFieldParam(value)__					charset = Charset.forName(value.substring(0, value.indexOf("'")))__					Assert.isTrue(StandardCharsets.UTF_8.equals(charset) || StandardCharsets.ISO_8859_1.equals(charset),_							"Charset should be UTF-8 or ISO-8859-1")__				}_				else if (attribute.equals("filename") && (filename == null)) {_					filename = value__				}_				else if (attribute.equals("size") ) {_					size = Long.parseLong(value)__				}_			}_			else {_				throw new IllegalArgumentException("Invalid content disposition format")__			}_		}_		return new ContentDisposition(type, name, filename, charset, size)__	};parse,a,literal,content,disposition,header,value,as,defined,in,rfc,2183,param,content,disposition,the,literal,content,disposition,header,value,return,the,parsed,content,disposition,see,to,string;public,static,content,disposition,parse,string,content,disposition,string,parts,string,utils,tokenize,to,string,array,content,disposition,assert,is,true,parts,length,1,string,type,parts,0,string,name,null,string,filename,null,charset,charset,null,long,size,null,for,int,i,1,i,parts,length,i,string,parameter,parts,i,int,eq,index,parameter,index,of,if,eq,index,1,string,attribute,parameter,substring,0,eq,index,string,value,parameter,starts,with,eq,index,1,parameter,ends,with,parameter,substring,eq,index,2,parameter,length,1,parameter,substring,eq,index,1,parameter,length,if,attribute,equals,name,name,value,else,if,attribute,equals,filename,filename,decode,header,field,param,value,charset,charset,for,name,value,substring,0,value,index,of,assert,is,true,standard,charsets,equals,charset,standard,charsets,equals,charset,charset,should,be,utf,8,or,iso,8859,1,else,if,attribute,equals,filename,filename,null,filename,value,else,if,attribute,equals,size,size,long,parse,long,value,else,throw,new,illegal,argument,exception,invalid,content,disposition,format,return,new,content,disposition,type,name,filename,charset,size
ContentDisposition -> public static ContentDisposition parse(String contentDisposition);1485382770;Parse a {@literal Content-Disposition} header value as defined in RFC 2183._@param contentDisposition the {@literal Content-Disposition} header value_@return the parsed content disposition_@see #toString();public static ContentDisposition parse(String contentDisposition) {_		String[] parts = StringUtils.tokenizeToStringArray(contentDisposition, "_")__		Assert.isTrue(parts.length >= 1)__		String type = parts[0]__		String name = null__		String filename = null__		Charset charset = null__		Long size = null__		for (int i = 1_ i < parts.length_ i++) {_			String part = parts[i]__			int eqIndex = part.indexOf('=')__			if (eqIndex != -1) {_				String attribute = part.substring(0, eqIndex)__				String value = (part.startsWith("\"", eqIndex + 1) && part.endsWith("\"") ?_						part.substring(eqIndex + 2, part.length() - 1) :_						part.substring(eqIndex + 1, part.length()))__				if (attribute.equals("name") ) {_					name = value__				}_				else if (attribute.equals("filename*") ) {_					filename = decodeHeaderFieldParam(value)__					charset = Charset.forName(value.substring(0, value.indexOf("'")))__					Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_							"Charset should be UTF-8 or ISO-8859-1")__				}_				else if (attribute.equals("filename") && (filename == null)) {_					filename = value__				}_				else if (attribute.equals("size") ) {_					size = Long.parseLong(value)__				}_			}_			else {_				throw new IllegalArgumentException("Invalid content disposition format")__			}_		}_		return new ContentDisposition(type, name, filename, charset, size)__	};parse,a,literal,content,disposition,header,value,as,defined,in,rfc,2183,param,content,disposition,the,literal,content,disposition,header,value,return,the,parsed,content,disposition,see,to,string;public,static,content,disposition,parse,string,content,disposition,string,parts,string,utils,tokenize,to,string,array,content,disposition,assert,is,true,parts,length,1,string,type,parts,0,string,name,null,string,filename,null,charset,charset,null,long,size,null,for,int,i,1,i,parts,length,i,string,part,parts,i,int,eq,index,part,index,of,if,eq,index,1,string,attribute,part,substring,0,eq,index,string,value,part,starts,with,eq,index,1,part,ends,with,part,substring,eq,index,2,part,length,1,part,substring,eq,index,1,part,length,if,attribute,equals,name,name,value,else,if,attribute,equals,filename,filename,decode,header,field,param,value,charset,charset,for,name,value,substring,0,value,index,of,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,else,if,attribute,equals,filename,filename,null,filename,value,else,if,attribute,equals,size,size,long,parse,long,value,else,throw,new,illegal,argument,exception,invalid,content,disposition,format,return,new,content,disposition,type,name,filename,charset,size
ContentDisposition -> public static ContentDisposition parse(String contentDisposition);1485810955;Parse a {@literal Content-Disposition} header value as defined in RFC 2183._@param contentDisposition the {@literal Content-Disposition} header value_@return the parsed content disposition_@see #toString();public static ContentDisposition parse(String contentDisposition) {_		String[] parts = StringUtils.tokenizeToStringArray(contentDisposition, "_")__		Assert.isTrue(parts.length >= 1, "Content-Disposition header must not be empty")__		String type = parts[0]__		String name = null__		String filename = null__		Charset charset = null__		Long size = null__		for (int i = 1_ i < parts.length_ i++) {_			String part = parts[i]__			int eqIndex = part.indexOf('=')__			if (eqIndex != -1) {_				String attribute = part.substring(0, eqIndex)__				String value = (part.startsWith("\"", eqIndex + 1) && part.endsWith("\"") ?_						part.substring(eqIndex + 2, part.length() - 1) :_						part.substring(eqIndex + 1, part.length()))__				if (attribute.equals("name") ) {_					name = value__				}_				else if (attribute.equals("filename*") ) {_					filename = decodeHeaderFieldParam(value)__					charset = Charset.forName(value.substring(0, value.indexOf("'")))__					Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_							"Charset should be UTF-8 or ISO-8859-1")__				}_				else if (attribute.equals("filename") && (filename == null)) {_					filename = value__				}_				else if (attribute.equals("size") ) {_					size = Long.parseLong(value)__				}_			}_			else {_				throw new IllegalArgumentException("Invalid content disposition format")__			}_		}_		return new ContentDisposition(type, name, filename, charset, size)__	};parse,a,literal,content,disposition,header,value,as,defined,in,rfc,2183,param,content,disposition,the,literal,content,disposition,header,value,return,the,parsed,content,disposition,see,to,string;public,static,content,disposition,parse,string,content,disposition,string,parts,string,utils,tokenize,to,string,array,content,disposition,assert,is,true,parts,length,1,content,disposition,header,must,not,be,empty,string,type,parts,0,string,name,null,string,filename,null,charset,charset,null,long,size,null,for,int,i,1,i,parts,length,i,string,part,parts,i,int,eq,index,part,index,of,if,eq,index,1,string,attribute,part,substring,0,eq,index,string,value,part,starts,with,eq,index,1,part,ends,with,part,substring,eq,index,2,part,length,1,part,substring,eq,index,1,part,length,if,attribute,equals,name,name,value,else,if,attribute,equals,filename,filename,decode,header,field,param,value,charset,charset,for,name,value,substring,0,value,index,of,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,else,if,attribute,equals,filename,filename,null,filename,value,else,if,attribute,equals,size,size,long,parse,long,value,else,throw,new,illegal,argument,exception,invalid,content,disposition,format,return,new,content,disposition,type,name,filename,charset,size
ContentDisposition -> public static ContentDisposition parse(String contentDisposition);1495868221;Parse a {@literal Content-Disposition} header value as defined in RFC 2183._@param contentDisposition the {@literal Content-Disposition} header value_@return the parsed content disposition_@see #toString();public static ContentDisposition parse(String contentDisposition) {_		String[] parts = StringUtils.tokenizeToStringArray(contentDisposition, "_")__		Assert.isTrue(parts.length >= 1, "Content-Disposition header must not be empty")__		String type = parts[0]__		String name = null__		String filename = null__		Charset charset = null__		Long size = null__		for (int i = 1_ i < parts.length_ i++) {_			String part = parts[i]__			int eqIndex = part.indexOf('=')__			if (eqIndex != -1) {_				String attribute = part.substring(0, eqIndex)__				String value = (part.startsWith("\"", eqIndex + 1) && part.endsWith("\"") ?_						part.substring(eqIndex + 2, part.length() - 1) :_						part.substring(eqIndex + 1, part.length()))__				if (attribute.equals("name") ) {_					name = value__				}_				else if (attribute.equals("filename*") ) {_					filename = decodeHeaderFieldParam(value)__					charset = Charset.forName(value.substring(0, value.indexOf("'")))__					Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_							"Charset should be UTF-8 or ISO-8859-1")__				}_				else if (attribute.equals("filename") && (filename == null)) {_					filename = value__				}_				else if (attribute.equals("size") ) {_					size = Long.parseLong(value)__				}_			}_			else {_				throw new IllegalArgumentException("Invalid content disposition format")__			}_		}_		return new ContentDisposition(type, name, filename, charset, size)__	};parse,a,literal,content,disposition,header,value,as,defined,in,rfc,2183,param,content,disposition,the,literal,content,disposition,header,value,return,the,parsed,content,disposition,see,to,string;public,static,content,disposition,parse,string,content,disposition,string,parts,string,utils,tokenize,to,string,array,content,disposition,assert,is,true,parts,length,1,content,disposition,header,must,not,be,empty,string,type,parts,0,string,name,null,string,filename,null,charset,charset,null,long,size,null,for,int,i,1,i,parts,length,i,string,part,parts,i,int,eq,index,part,index,of,if,eq,index,1,string,attribute,part,substring,0,eq,index,string,value,part,starts,with,eq,index,1,part,ends,with,part,substring,eq,index,2,part,length,1,part,substring,eq,index,1,part,length,if,attribute,equals,name,name,value,else,if,attribute,equals,filename,filename,decode,header,field,param,value,charset,charset,for,name,value,substring,0,value,index,of,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,else,if,attribute,equals,filename,filename,null,filename,value,else,if,attribute,equals,size,size,long,parse,long,value,else,throw,new,illegal,argument,exception,invalid,content,disposition,format,return,new,content,disposition,type,name,filename,charset,size
ContentDisposition -> public static ContentDisposition parse(String contentDisposition);1496259743;Parse a {@literal Content-Disposition} header value as defined in RFC 2183._@param contentDisposition the {@literal Content-Disposition} header value_@return the parsed content disposition_@see #toString();public static ContentDisposition parse(String contentDisposition) {_		String[] parts = StringUtils.tokenizeToStringArray(contentDisposition, "_")__		Assert.isTrue(parts.length >= 1, "Content-Disposition header must not be empty")__		String type = parts[0]__		String name = null__		String filename = null__		Charset charset = null__		Long size = null__		for (int i = 1_ i < parts.length_ i++) {_			String part = parts[i]__			int eqIndex = part.indexOf('=')__			if (eqIndex != -1) {_				String attribute = part.substring(0, eqIndex)__				String value = (part.startsWith("\"", eqIndex + 1) && part.endsWith("\"") ?_						part.substring(eqIndex + 2, part.length() - 1) :_						part.substring(eqIndex + 1, part.length()))__				if (attribute.equals("name") ) {_					name = value__				}_				else if (attribute.equals("filename*") ) {_					filename = decodeHeaderFieldParam(value)__					charset = Charset.forName(value.substring(0, value.indexOf("'")))__					Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_							"Charset should be UTF-8 or ISO-8859-1")__				}_				else if (attribute.equals("filename") && (filename == null)) {_					filename = value__				}_				else if (attribute.equals("size") ) {_					size = Long.parseLong(value)__				}_			}_			else {_				throw new IllegalArgumentException("Invalid content disposition format")__			}_		}_		return new ContentDisposition(type, name, filename, charset, size)__	};parse,a,literal,content,disposition,header,value,as,defined,in,rfc,2183,param,content,disposition,the,literal,content,disposition,header,value,return,the,parsed,content,disposition,see,to,string;public,static,content,disposition,parse,string,content,disposition,string,parts,string,utils,tokenize,to,string,array,content,disposition,assert,is,true,parts,length,1,content,disposition,header,must,not,be,empty,string,type,parts,0,string,name,null,string,filename,null,charset,charset,null,long,size,null,for,int,i,1,i,parts,length,i,string,part,parts,i,int,eq,index,part,index,of,if,eq,index,1,string,attribute,part,substring,0,eq,index,string,value,part,starts,with,eq,index,1,part,ends,with,part,substring,eq,index,2,part,length,1,part,substring,eq,index,1,part,length,if,attribute,equals,name,name,value,else,if,attribute,equals,filename,filename,decode,header,field,param,value,charset,charset,for,name,value,substring,0,value,index,of,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,else,if,attribute,equals,filename,filename,null,filename,value,else,if,attribute,equals,size,size,long,parse,long,value,else,throw,new,illegal,argument,exception,invalid,content,disposition,format,return,new,content,disposition,type,name,filename,charset,size
ContentDisposition -> public static ContentDisposition parse(String contentDisposition);1496837955;Parse a {@literal Content-Disposition} header value as defined in RFC 2183._@param contentDisposition the {@literal Content-Disposition} header value_@return the parsed content disposition_@see #toString();public static ContentDisposition parse(String contentDisposition) {_		String[] parts = StringUtils.tokenizeToStringArray(contentDisposition, "_")__		Assert.isTrue(parts.length >= 1, "Content-Disposition header must not be empty")__		String type = parts[0]__		String name = null__		String filename = null__		Charset charset = null__		Long size = null__		for (int i = 1_ i < parts.length_ i++) {_			String part = parts[i]__			int eqIndex = part.indexOf('=')__			if (eqIndex != -1) {_				String attribute = part.substring(0, eqIndex)__				String value = (part.startsWith("\"", eqIndex + 1) && part.endsWith("\"") ?_						part.substring(eqIndex + 2, part.length() - 1) :_						part.substring(eqIndex + 1, part.length()))__				if (attribute.equals("name") ) {_					name = value__				}_				else if (attribute.equals("filename*") ) {_					filename = decodeHeaderFieldParam(value)__					charset = Charset.forName(value.substring(0, value.indexOf("'")))__					Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_							"Charset should be UTF-8 or ISO-8859-1")__				}_				else if (attribute.equals("filename") && (filename == null)) {_					filename = value__				}_				else if (attribute.equals("size") ) {_					size = Long.parseLong(value)__				}_			}_			else {_				throw new IllegalArgumentException("Invalid content disposition format")__			}_		}_		return new ContentDisposition(type, name, filename, charset, size)__	};parse,a,literal,content,disposition,header,value,as,defined,in,rfc,2183,param,content,disposition,the,literal,content,disposition,header,value,return,the,parsed,content,disposition,see,to,string;public,static,content,disposition,parse,string,content,disposition,string,parts,string,utils,tokenize,to,string,array,content,disposition,assert,is,true,parts,length,1,content,disposition,header,must,not,be,empty,string,type,parts,0,string,name,null,string,filename,null,charset,charset,null,long,size,null,for,int,i,1,i,parts,length,i,string,part,parts,i,int,eq,index,part,index,of,if,eq,index,1,string,attribute,part,substring,0,eq,index,string,value,part,starts,with,eq,index,1,part,ends,with,part,substring,eq,index,2,part,length,1,part,substring,eq,index,1,part,length,if,attribute,equals,name,name,value,else,if,attribute,equals,filename,filename,decode,header,field,param,value,charset,charset,for,name,value,substring,0,value,index,of,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,else,if,attribute,equals,filename,filename,null,filename,value,else,if,attribute,equals,size,size,long,parse,long,value,else,throw,new,illegal,argument,exception,invalid,content,disposition,format,return,new,content,disposition,type,name,filename,charset,size
ContentDisposition -> public static ContentDisposition parse(String contentDisposition);1497359868;Parse a {@literal Content-Disposition} header value as defined in RFC 2183.__@param contentDisposition the {@literal Content-Disposition} header value_@return the parsed content disposition_@see #toString();public static ContentDisposition parse(String contentDisposition) {_		String[] parts = StringUtils.tokenizeToStringArray(contentDisposition, "_")__		Assert.isTrue(parts.length >= 1, "Content-Disposition header must not be empty")__		String type = parts[0]__		String name = null__		String filename = null__		Charset charset = null__		Long size = null__		ZonedDateTime creationDate = null__		ZonedDateTime modificationDate = null__		ZonedDateTime readDate = null__		for (int i = 1_ i < parts.length_ i++) {_			String part = parts[i]__			int eqIndex = part.indexOf('=')__			if (eqIndex != -1) {_				String attribute = part.substring(0, eqIndex)__				String value = (part.startsWith("\"", eqIndex + 1) && part.endsWith("\"") ?_						part.substring(eqIndex + 2, part.length() - 1) :_						part.substring(eqIndex + 1, part.length()))__				if (attribute.equals("name") ) {_					name = value__				}_				else if (attribute.equals("filename*") ) {_					filename = decodeHeaderFieldParam(value)__					charset = Charset.forName(value.substring(0, value.indexOf("'")))__					Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_							"Charset should be UTF-8 or ISO-8859-1")__				}_				else if (attribute.equals("filename") && (filename == null)) {_					filename = value__				}_				else if (attribute.equals("size") ) {_					size = Long.parseLong(value)__				}_				else if (attribute.equals("creation-date")) {_					try {_						creationDate = ZonedDateTime.parse(value, RFC_1123_DATE_TIME)__					}_					catch (DateTimeParseException ex) {_						_					}_				}_				else if (attribute.equals("modification-date")) {_					try {_						modificationDate = ZonedDateTime.parse(value, RFC_1123_DATE_TIME)__					}_					catch (DateTimeParseException ex) {_						_					}_				}_				else if (attribute.equals("read-date")) {_					try {_						readDate = ZonedDateTime.parse(value, RFC_1123_DATE_TIME)__					}_					catch (DateTimeParseException ex) {_						_					}_				}_			}_			else {_				throw new IllegalArgumentException("Invalid content disposition format")__			}_		}_		return new ContentDisposition(type, name, filename, charset, size, creationDate, modificationDate, readDate)__	};parse,a,literal,content,disposition,header,value,as,defined,in,rfc,2183,param,content,disposition,the,literal,content,disposition,header,value,return,the,parsed,content,disposition,see,to,string;public,static,content,disposition,parse,string,content,disposition,string,parts,string,utils,tokenize,to,string,array,content,disposition,assert,is,true,parts,length,1,content,disposition,header,must,not,be,empty,string,type,parts,0,string,name,null,string,filename,null,charset,charset,null,long,size,null,zoned,date,time,creation,date,null,zoned,date,time,modification,date,null,zoned,date,time,read,date,null,for,int,i,1,i,parts,length,i,string,part,parts,i,int,eq,index,part,index,of,if,eq,index,1,string,attribute,part,substring,0,eq,index,string,value,part,starts,with,eq,index,1,part,ends,with,part,substring,eq,index,2,part,length,1,part,substring,eq,index,1,part,length,if,attribute,equals,name,name,value,else,if,attribute,equals,filename,filename,decode,header,field,param,value,charset,charset,for,name,value,substring,0,value,index,of,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,else,if,attribute,equals,filename,filename,null,filename,value,else,if,attribute,equals,size,size,long,parse,long,value,else,if,attribute,equals,creation,date,try,creation,date,zoned,date,time,parse,value,catch,date,time,parse,exception,ex,else,if,attribute,equals,modification,date,try,modification,date,zoned,date,time,parse,value,catch,date,time,parse,exception,ex,else,if,attribute,equals,read,date,try,read,date,zoned,date,time,parse,value,catch,date,time,parse,exception,ex,else,throw,new,illegal,argument,exception,invalid,content,disposition,format,return,new,content,disposition,type,name,filename,charset,size,creation,date,modification,date,read,date
ContentDisposition -> public static ContentDisposition parse(String contentDisposition);1498780456;Parse a {@literal Content-Disposition} header value as defined in RFC 2183.__@param contentDisposition the {@literal Content-Disposition} header value_@return the parsed content disposition_@see #toString();public static ContentDisposition parse(String contentDisposition) {_		String[] parts = StringUtils.tokenizeToStringArray(contentDisposition, "_")__		Assert.isTrue(parts.length >= 1, "Content-Disposition header must not be empty")__		String type = parts[0]__		String name = null__		String filename = null__		Charset charset = null__		Long size = null__		ZonedDateTime creationDate = null__		ZonedDateTime modificationDate = null__		ZonedDateTime readDate = null__		for (int i = 1_ i < parts.length_ i++) {_			String part = parts[i]__			int eqIndex = part.indexOf('=')__			if (eqIndex != -1) {_				String attribute = part.substring(0, eqIndex)__				String value = (part.startsWith("\"", eqIndex + 1) && part.endsWith("\"") ?_						part.substring(eqIndex + 2, part.length() - 1) :_						part.substring(eqIndex + 1, part.length()))__				if (attribute.equals("name") ) {_					name = value__				}_				else if (attribute.equals("filename*") ) {_					filename = decodeHeaderFieldParam(value)__					charset = Charset.forName(value.substring(0, value.indexOf("'")))__					Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_							"Charset should be UTF-8 or ISO-8859-1")__				}_				else if (attribute.equals("filename") && (filename == null)) {_					filename = value__				}_				else if (attribute.equals("size") ) {_					size = Long.parseLong(value)__				}_				else if (attribute.equals("creation-date")) {_					try {_						creationDate = ZonedDateTime.parse(value, RFC_1123_DATE_TIME)__					}_					catch (DateTimeParseException ex) {_						_					}_				}_				else if (attribute.equals("modification-date")) {_					try {_						modificationDate = ZonedDateTime.parse(value, RFC_1123_DATE_TIME)__					}_					catch (DateTimeParseException ex) {_						_					}_				}_				else if (attribute.equals("read-date")) {_					try {_						readDate = ZonedDateTime.parse(value, RFC_1123_DATE_TIME)__					}_					catch (DateTimeParseException ex) {_						_					}_				}_			}_			else {_				throw new IllegalArgumentException("Invalid content disposition format")__			}_		}_		return new ContentDisposition(type, name, filename, charset, size, creationDate, modificationDate, readDate)__	};parse,a,literal,content,disposition,header,value,as,defined,in,rfc,2183,param,content,disposition,the,literal,content,disposition,header,value,return,the,parsed,content,disposition,see,to,string;public,static,content,disposition,parse,string,content,disposition,string,parts,string,utils,tokenize,to,string,array,content,disposition,assert,is,true,parts,length,1,content,disposition,header,must,not,be,empty,string,type,parts,0,string,name,null,string,filename,null,charset,charset,null,long,size,null,zoned,date,time,creation,date,null,zoned,date,time,modification,date,null,zoned,date,time,read,date,null,for,int,i,1,i,parts,length,i,string,part,parts,i,int,eq,index,part,index,of,if,eq,index,1,string,attribute,part,substring,0,eq,index,string,value,part,starts,with,eq,index,1,part,ends,with,part,substring,eq,index,2,part,length,1,part,substring,eq,index,1,part,length,if,attribute,equals,name,name,value,else,if,attribute,equals,filename,filename,decode,header,field,param,value,charset,charset,for,name,value,substring,0,value,index,of,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,else,if,attribute,equals,filename,filename,null,filename,value,else,if,attribute,equals,size,size,long,parse,long,value,else,if,attribute,equals,creation,date,try,creation,date,zoned,date,time,parse,value,catch,date,time,parse,exception,ex,else,if,attribute,equals,modification,date,try,modification,date,zoned,date,time,parse,value,catch,date,time,parse,exception,ex,else,if,attribute,equals,read,date,try,read,date,zoned,date,time,parse,value,catch,date,time,parse,exception,ex,else,throw,new,illegal,argument,exception,invalid,content,disposition,format,return,new,content,disposition,type,name,filename,charset,size,creation,date,modification,date,read,date
ContentDisposition -> public static ContentDisposition parse(String contentDisposition);1500565799;Parse a {@literal Content-Disposition} header value as defined in RFC 2183.__@param contentDisposition the {@literal Content-Disposition} header value_@return the parsed content disposition_@see #toString();public static ContentDisposition parse(String contentDisposition) {_		String[] parts = StringUtils.tokenizeToStringArray(contentDisposition, "_")__		Assert.isTrue(parts.length >= 1, "Content-Disposition header must not be empty")__		String type = parts[0]__		String name = null__		String filename = null__		Charset charset = null__		Long size = null__		ZonedDateTime creationDate = null__		ZonedDateTime modificationDate = null__		ZonedDateTime readDate = null__		for (int i = 1_ i < parts.length_ i++) {_			String part = parts[i]__			int eqIndex = part.indexOf('=')__			if (eqIndex != -1) {_				String attribute = part.substring(0, eqIndex)__				String value = (part.startsWith("\"", eqIndex + 1) && part.endsWith("\"") ?_						part.substring(eqIndex + 2, part.length() - 1) :_						part.substring(eqIndex + 1, part.length()))__				if (attribute.equals("name") ) {_					name = value__				}_				else if (attribute.equals("filename*") ) {_					filename = decodeHeaderFieldParam(value)__					charset = Charset.forName(value.substring(0, value.indexOf("'")))__					Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_							"Charset should be UTF-8 or ISO-8859-1")__				}_				else if (attribute.equals("filename") && (filename == null)) {_					filename = value__				}_				else if (attribute.equals("size") ) {_					size = Long.parseLong(value)__				}_				else if (attribute.equals("creation-date")) {_					try {_						creationDate = ZonedDateTime.parse(value, RFC_1123_DATE_TIME)__					}_					catch (DateTimeParseException ex) {_						_					}_				}_				else if (attribute.equals("modification-date")) {_					try {_						modificationDate = ZonedDateTime.parse(value, RFC_1123_DATE_TIME)__					}_					catch (DateTimeParseException ex) {_						_					}_				}_				else if (attribute.equals("read-date")) {_					try {_						readDate = ZonedDateTime.parse(value, RFC_1123_DATE_TIME)__					}_					catch (DateTimeParseException ex) {_						_					}_				}_			}_			else {_				throw new IllegalArgumentException("Invalid content disposition format")__			}_		}_		return new ContentDisposition(type, name, filename, charset, size, creationDate, modificationDate, readDate)__	};parse,a,literal,content,disposition,header,value,as,defined,in,rfc,2183,param,content,disposition,the,literal,content,disposition,header,value,return,the,parsed,content,disposition,see,to,string;public,static,content,disposition,parse,string,content,disposition,string,parts,string,utils,tokenize,to,string,array,content,disposition,assert,is,true,parts,length,1,content,disposition,header,must,not,be,empty,string,type,parts,0,string,name,null,string,filename,null,charset,charset,null,long,size,null,zoned,date,time,creation,date,null,zoned,date,time,modification,date,null,zoned,date,time,read,date,null,for,int,i,1,i,parts,length,i,string,part,parts,i,int,eq,index,part,index,of,if,eq,index,1,string,attribute,part,substring,0,eq,index,string,value,part,starts,with,eq,index,1,part,ends,with,part,substring,eq,index,2,part,length,1,part,substring,eq,index,1,part,length,if,attribute,equals,name,name,value,else,if,attribute,equals,filename,filename,decode,header,field,param,value,charset,charset,for,name,value,substring,0,value,index,of,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,else,if,attribute,equals,filename,filename,null,filename,value,else,if,attribute,equals,size,size,long,parse,long,value,else,if,attribute,equals,creation,date,try,creation,date,zoned,date,time,parse,value,catch,date,time,parse,exception,ex,else,if,attribute,equals,modification,date,try,modification,date,zoned,date,time,parse,value,catch,date,time,parse,exception,ex,else,if,attribute,equals,read,date,try,read,date,zoned,date,time,parse,value,catch,date,time,parse,exception,ex,else,throw,new,illegal,argument,exception,invalid,content,disposition,format,return,new,content,disposition,type,name,filename,charset,size,creation,date,modification,date,read,date
ContentDisposition -> public static ContentDisposition parse(String contentDisposition);1508771649;Parse a {@literal Content-Disposition} header value as defined in RFC 2183._@param contentDisposition the {@literal Content-Disposition} header value_@return the parsed content disposition_@see #toString();public static ContentDisposition parse(String contentDisposition) {_		String[] parts = StringUtils.tokenizeToStringArray(contentDisposition, "_")__		Assert.isTrue(parts.length >= 1, "Content-Disposition header must not be empty")__		String type = parts[0]__		String name = null__		String filename = null__		Charset charset = null__		Long size = null__		ZonedDateTime creationDate = null__		ZonedDateTime modificationDate = null__		ZonedDateTime readDate = null__		for (int i = 1_ i < parts.length_ i++) {_			String part = parts[i]__			int eqIndex = part.indexOf('=')__			if (eqIndex != -1) {_				String attribute = part.substring(0, eqIndex)__				String value = (part.startsWith("\"", eqIndex + 1) && part.endsWith("\"") ?_						part.substring(eqIndex + 2, part.length() - 1) :_						part.substring(eqIndex + 1, part.length()))__				if (attribute.equals("name") ) {_					name = value__				}_				else if (attribute.equals("filename*") ) {_					filename = decodeHeaderFieldParam(value)__					charset = Charset.forName(value.substring(0, value.indexOf("'")))__					Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_							"Charset should be UTF-8 or ISO-8859-1")__				}_				else if (attribute.equals("filename") && (filename == null)) {_					filename = value__				}_				else if (attribute.equals("size") ) {_					size = Long.parseLong(value)__				}_				else if (attribute.equals("creation-date")) {_					try {_						creationDate = ZonedDateTime.parse(value, RFC_1123_DATE_TIME)__					}_					catch (DateTimeParseException ex) {_						_					}_				}_				else if (attribute.equals("modification-date")) {_					try {_						modificationDate = ZonedDateTime.parse(value, RFC_1123_DATE_TIME)__					}_					catch (DateTimeParseException ex) {_						_					}_				}_				else if (attribute.equals("read-date")) {_					try {_						readDate = ZonedDateTime.parse(value, RFC_1123_DATE_TIME)__					}_					catch (DateTimeParseException ex) {_						_					}_				}_			}_			else {_				throw new IllegalArgumentException("Invalid content disposition format")__			}_		}_		return new ContentDisposition(type, name, filename, charset, size, creationDate, modificationDate, readDate)__	};parse,a,literal,content,disposition,header,value,as,defined,in,rfc,2183,param,content,disposition,the,literal,content,disposition,header,value,return,the,parsed,content,disposition,see,to,string;public,static,content,disposition,parse,string,content,disposition,string,parts,string,utils,tokenize,to,string,array,content,disposition,assert,is,true,parts,length,1,content,disposition,header,must,not,be,empty,string,type,parts,0,string,name,null,string,filename,null,charset,charset,null,long,size,null,zoned,date,time,creation,date,null,zoned,date,time,modification,date,null,zoned,date,time,read,date,null,for,int,i,1,i,parts,length,i,string,part,parts,i,int,eq,index,part,index,of,if,eq,index,1,string,attribute,part,substring,0,eq,index,string,value,part,starts,with,eq,index,1,part,ends,with,part,substring,eq,index,2,part,length,1,part,substring,eq,index,1,part,length,if,attribute,equals,name,name,value,else,if,attribute,equals,filename,filename,decode,header,field,param,value,charset,charset,for,name,value,substring,0,value,index,of,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,else,if,attribute,equals,filename,filename,null,filename,value,else,if,attribute,equals,size,size,long,parse,long,value,else,if,attribute,equals,creation,date,try,creation,date,zoned,date,time,parse,value,catch,date,time,parse,exception,ex,else,if,attribute,equals,modification,date,try,modification,date,zoned,date,time,parse,value,catch,date,time,parse,exception,ex,else,if,attribute,equals,read,date,try,read,date,zoned,date,time,parse,value,catch,date,time,parse,exception,ex,else,throw,new,illegal,argument,exception,invalid,content,disposition,format,return,new,content,disposition,type,name,filename,charset,size,creation,date,modification,date,read,date
ContentDisposition -> public static ContentDisposition parse(String contentDisposition);1508792954;Parse a {@literal Content-Disposition} header value as defined in RFC 2183._@param contentDisposition the {@literal Content-Disposition} header value_@return the parsed content disposition_@see #toString();public static ContentDisposition parse(String contentDisposition) {_		List<String> parts = tokenize(contentDisposition)__		String type = parts.get(0)__		String name = null__		String filename = null__		Charset charset = null__		Long size = null__		ZonedDateTime creationDate = null__		ZonedDateTime modificationDate = null__		ZonedDateTime readDate = null__		for (int i = 1_ i < parts.size()_ i++) {_			String part = parts.get(i)__			int eqIndex = part.indexOf('=')__			if (eqIndex != -1) {_				String attribute = part.substring(0, eqIndex)__				String value = (part.startsWith("\"", eqIndex + 1) && part.endsWith("\"") ?_						part.substring(eqIndex + 2, part.length() - 1) :_						part.substring(eqIndex + 1, part.length()))__				if (attribute.equals("name") ) {_					name = value__				}_				else if (attribute.equals("filename*") ) {_					filename = decodeHeaderFieldParam(value)__					charset = Charset.forName(value.substring(0, value.indexOf("'")))__					Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_							"Charset should be UTF-8 or ISO-8859-1")__				}_				else if (attribute.equals("filename") && (filename == null)) {_					filename = value__				}_				else if (attribute.equals("size") ) {_					size = Long.parseLong(value)__				}_				else if (attribute.equals("creation-date")) {_					try {_						creationDate = ZonedDateTime.parse(value, RFC_1123_DATE_TIME)__					}_					catch (DateTimeParseException ex) {_						_					}_				}_				else if (attribute.equals("modification-date")) {_					try {_						modificationDate = ZonedDateTime.parse(value, RFC_1123_DATE_TIME)__					}_					catch (DateTimeParseException ex) {_						_					}_				}_				else if (attribute.equals("read-date")) {_					try {_						readDate = ZonedDateTime.parse(value, RFC_1123_DATE_TIME)__					}_					catch (DateTimeParseException ex) {_						_					}_				}_			}_			else {_				throw new IllegalArgumentException("Invalid content disposition format")__			}_		}_		return new ContentDisposition(type, name, filename, charset, size, creationDate, modificationDate, readDate)__	};parse,a,literal,content,disposition,header,value,as,defined,in,rfc,2183,param,content,disposition,the,literal,content,disposition,header,value,return,the,parsed,content,disposition,see,to,string;public,static,content,disposition,parse,string,content,disposition,list,string,parts,tokenize,content,disposition,string,type,parts,get,0,string,name,null,string,filename,null,charset,charset,null,long,size,null,zoned,date,time,creation,date,null,zoned,date,time,modification,date,null,zoned,date,time,read,date,null,for,int,i,1,i,parts,size,i,string,part,parts,get,i,int,eq,index,part,index,of,if,eq,index,1,string,attribute,part,substring,0,eq,index,string,value,part,starts,with,eq,index,1,part,ends,with,part,substring,eq,index,2,part,length,1,part,substring,eq,index,1,part,length,if,attribute,equals,name,name,value,else,if,attribute,equals,filename,filename,decode,header,field,param,value,charset,charset,for,name,value,substring,0,value,index,of,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,else,if,attribute,equals,filename,filename,null,filename,value,else,if,attribute,equals,size,size,long,parse,long,value,else,if,attribute,equals,creation,date,try,creation,date,zoned,date,time,parse,value,catch,date,time,parse,exception,ex,else,if,attribute,equals,modification,date,try,modification,date,zoned,date,time,parse,value,catch,date,time,parse,exception,ex,else,if,attribute,equals,read,date,try,read,date,zoned,date,time,parse,value,catch,date,time,parse,exception,ex,else,throw,new,illegal,argument,exception,invalid,content,disposition,format,return,new,content,disposition,type,name,filename,charset,size,creation,date,modification,date,read,date
ContentDisposition -> public static ContentDisposition parse(String contentDisposition);1519588127;Parse a {@literal Content-Disposition} header value as defined in RFC 2183._@param contentDisposition the {@literal Content-Disposition} header value_@return the parsed content disposition_@see #toString();public static ContentDisposition parse(String contentDisposition) {_		List<String> parts = tokenize(contentDisposition)__		String type = parts.get(0)__		String name = null__		String filename = null__		Charset charset = null__		Long size = null__		ZonedDateTime creationDate = null__		ZonedDateTime modificationDate = null__		ZonedDateTime readDate = null__		for (int i = 1_ i < parts.size()_ i++) {_			String part = parts.get(i)__			int eqIndex = part.indexOf('=')__			if (eqIndex != -1) {_				String attribute = part.substring(0, eqIndex)__				String value = (part.startsWith("\"", eqIndex + 1) && part.endsWith("\"") ?_						part.substring(eqIndex + 2, part.length() - 1) :_						part.substring(eqIndex + 1, part.length()))__				if (attribute.equals("name") ) {_					name = value__				}_				else if (attribute.equals("filename*") ) {_					filename = decodeHeaderFieldParam(value)__					charset = Charset.forName(value.substring(0, value.indexOf('\'')))__					Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_							"Charset should be UTF-8 or ISO-8859-1")__				}_				else if (attribute.equals("filename") && (filename == null)) {_					filename = value__				}_				else if (attribute.equals("size") ) {_					size = Long.parseLong(value)__				}_				else if (attribute.equals("creation-date")) {_					try {_						creationDate = ZonedDateTime.parse(value, RFC_1123_DATE_TIME)__					}_					catch (DateTimeParseException ex) {_						_					}_				}_				else if (attribute.equals("modification-date")) {_					try {_						modificationDate = ZonedDateTime.parse(value, RFC_1123_DATE_TIME)__					}_					catch (DateTimeParseException ex) {_						_					}_				}_				else if (attribute.equals("read-date")) {_					try {_						readDate = ZonedDateTime.parse(value, RFC_1123_DATE_TIME)__					}_					catch (DateTimeParseException ex) {_						_					}_				}_			}_			else {_				throw new IllegalArgumentException("Invalid content disposition format")__			}_		}_		return new ContentDisposition(type, name, filename, charset, size, creationDate, modificationDate, readDate)__	};parse,a,literal,content,disposition,header,value,as,defined,in,rfc,2183,param,content,disposition,the,literal,content,disposition,header,value,return,the,parsed,content,disposition,see,to,string;public,static,content,disposition,parse,string,content,disposition,list,string,parts,tokenize,content,disposition,string,type,parts,get,0,string,name,null,string,filename,null,charset,charset,null,long,size,null,zoned,date,time,creation,date,null,zoned,date,time,modification,date,null,zoned,date,time,read,date,null,for,int,i,1,i,parts,size,i,string,part,parts,get,i,int,eq,index,part,index,of,if,eq,index,1,string,attribute,part,substring,0,eq,index,string,value,part,starts,with,eq,index,1,part,ends,with,part,substring,eq,index,2,part,length,1,part,substring,eq,index,1,part,length,if,attribute,equals,name,name,value,else,if,attribute,equals,filename,filename,decode,header,field,param,value,charset,charset,for,name,value,substring,0,value,index,of,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,else,if,attribute,equals,filename,filename,null,filename,value,else,if,attribute,equals,size,size,long,parse,long,value,else,if,attribute,equals,creation,date,try,creation,date,zoned,date,time,parse,value,catch,date,time,parse,exception,ex,else,if,attribute,equals,modification,date,try,modification,date,zoned,date,time,parse,value,catch,date,time,parse,exception,ex,else,if,attribute,equals,read,date,try,read,date,zoned,date,time,parse,value,catch,date,time,parse,exception,ex,else,throw,new,illegal,argument,exception,invalid,content,disposition,format,return,new,content,disposition,type,name,filename,charset,size,creation,date,modification,date,read,date
ContentDisposition -> public static ContentDisposition parse(String contentDisposition);1530174524;Parse a {@literal Content-Disposition} header value as defined in RFC 2183._@param contentDisposition the {@literal Content-Disposition} header value_@return the parsed content disposition_@see #toString();public static ContentDisposition parse(String contentDisposition) {_		List<String> parts = tokenize(contentDisposition)__		String type = parts.get(0)__		String name = null__		String filename = null__		Charset charset = null__		Long size = null__		ZonedDateTime creationDate = null__		ZonedDateTime modificationDate = null__		ZonedDateTime readDate = null__		for (int i = 1_ i < parts.size()_ i++) {_			String part = parts.get(i)__			int eqIndex = part.indexOf('=')__			if (eqIndex != -1) {_				String attribute = part.substring(0, eqIndex)__				String value = (part.startsWith("\"", eqIndex + 1) && part.endsWith("\"") ?_						part.substring(eqIndex + 2, part.length() - 1) :_						part.substring(eqIndex + 1, part.length()))__				if (attribute.equals("name") ) {_					name = value__				}_				else if (attribute.equals("filename*") ) {_					filename = decodeHeaderFieldParam(value)__					charset = Charset.forName(value.substring(0, value.indexOf('\'')))__					Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_							"Charset should be UTF-8 or ISO-8859-1")__				}_				else if (attribute.equals("filename") && (filename == null)) {_					filename = value__				}_				else if (attribute.equals("size") ) {_					size = Long.parseLong(value)__				}_				else if (attribute.equals("creation-date")) {_					try {_						creationDate = ZonedDateTime.parse(value, RFC_1123_DATE_TIME)__					}_					catch (DateTimeParseException ex) {_						_					}_				}_				else if (attribute.equals("modification-date")) {_					try {_						modificationDate = ZonedDateTime.parse(value, RFC_1123_DATE_TIME)__					}_					catch (DateTimeParseException ex) {_						_					}_				}_				else if (attribute.equals("read-date")) {_					try {_						readDate = ZonedDateTime.parse(value, RFC_1123_DATE_TIME)__					}_					catch (DateTimeParseException ex) {_						_					}_				}_			}_			else {_				throw new IllegalArgumentException("Invalid content disposition format")__			}_		}_		return new ContentDisposition(type, name, filename, charset, size, creationDate, modificationDate, readDate)__	};parse,a,literal,content,disposition,header,value,as,defined,in,rfc,2183,param,content,disposition,the,literal,content,disposition,header,value,return,the,parsed,content,disposition,see,to,string;public,static,content,disposition,parse,string,content,disposition,list,string,parts,tokenize,content,disposition,string,type,parts,get,0,string,name,null,string,filename,null,charset,charset,null,long,size,null,zoned,date,time,creation,date,null,zoned,date,time,modification,date,null,zoned,date,time,read,date,null,for,int,i,1,i,parts,size,i,string,part,parts,get,i,int,eq,index,part,index,of,if,eq,index,1,string,attribute,part,substring,0,eq,index,string,value,part,starts,with,eq,index,1,part,ends,with,part,substring,eq,index,2,part,length,1,part,substring,eq,index,1,part,length,if,attribute,equals,name,name,value,else,if,attribute,equals,filename,filename,decode,header,field,param,value,charset,charset,for,name,value,substring,0,value,index,of,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,else,if,attribute,equals,filename,filename,null,filename,value,else,if,attribute,equals,size,size,long,parse,long,value,else,if,attribute,equals,creation,date,try,creation,date,zoned,date,time,parse,value,catch,date,time,parse,exception,ex,else,if,attribute,equals,modification,date,try,modification,date,zoned,date,time,parse,value,catch,date,time,parse,exception,ex,else,if,attribute,equals,read,date,try,read,date,zoned,date,time,parse,value,catch,date,time,parse,exception,ex,else,throw,new,illegal,argument,exception,invalid,content,disposition,format,return,new,content,disposition,type,name,filename,charset,size,creation,date,modification,date,read,date
ContentDisposition -> public static ContentDisposition parse(String contentDisposition);1530174524;Parse a {@literal Content-Disposition} header value as defined in RFC 2183._@param contentDisposition the {@literal Content-Disposition} header value_@return the parsed content disposition_@see #toString();public static ContentDisposition parse(String contentDisposition) {_		List<String> parts = tokenize(contentDisposition)__		String type = parts.get(0)__		String name = null__		String filename = null__		Charset charset = null__		Long size = null__		ZonedDateTime creationDate = null__		ZonedDateTime modificationDate = null__		ZonedDateTime readDate = null__		for (int i = 1_ i < parts.size()_ i++) {_			String part = parts.get(i)__			int eqIndex = part.indexOf('=')__			if (eqIndex != -1) {_				String attribute = part.substring(0, eqIndex)__				String value = (part.startsWith("\"", eqIndex + 1) && part.endsWith("\"") ?_						part.substring(eqIndex + 2, part.length() - 1) :_						part.substring(eqIndex + 1, part.length()))__				if (attribute.equals("name") ) {_					name = value__				}_				else if (attribute.equals("filename*") ) {_					filename = decodeHeaderFieldParam(value)__					charset = Charset.forName(value.substring(0, value.indexOf('\'')))__					Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_							"Charset should be UTF-8 or ISO-8859-1")__				}_				else if (attribute.equals("filename") && (filename == null)) {_					filename = value__				}_				else if (attribute.equals("size") ) {_					size = Long.parseLong(value)__				}_				else if (attribute.equals("creation-date")) {_					try {_						creationDate = ZonedDateTime.parse(value, RFC_1123_DATE_TIME)__					}_					catch (DateTimeParseException ex) {_						_					}_				}_				else if (attribute.equals("modification-date")) {_					try {_						modificationDate = ZonedDateTime.parse(value, RFC_1123_DATE_TIME)__					}_					catch (DateTimeParseException ex) {_						_					}_				}_				else if (attribute.equals("read-date")) {_					try {_						readDate = ZonedDateTime.parse(value, RFC_1123_DATE_TIME)__					}_					catch (DateTimeParseException ex) {_						_					}_				}_			}_			else {_				throw new IllegalArgumentException("Invalid content disposition format")__			}_		}_		return new ContentDisposition(type, name, filename, charset, size, creationDate, modificationDate, readDate)__	};parse,a,literal,content,disposition,header,value,as,defined,in,rfc,2183,param,content,disposition,the,literal,content,disposition,header,value,return,the,parsed,content,disposition,see,to,string;public,static,content,disposition,parse,string,content,disposition,list,string,parts,tokenize,content,disposition,string,type,parts,get,0,string,name,null,string,filename,null,charset,charset,null,long,size,null,zoned,date,time,creation,date,null,zoned,date,time,modification,date,null,zoned,date,time,read,date,null,for,int,i,1,i,parts,size,i,string,part,parts,get,i,int,eq,index,part,index,of,if,eq,index,1,string,attribute,part,substring,0,eq,index,string,value,part,starts,with,eq,index,1,part,ends,with,part,substring,eq,index,2,part,length,1,part,substring,eq,index,1,part,length,if,attribute,equals,name,name,value,else,if,attribute,equals,filename,filename,decode,header,field,param,value,charset,charset,for,name,value,substring,0,value,index,of,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,else,if,attribute,equals,filename,filename,null,filename,value,else,if,attribute,equals,size,size,long,parse,long,value,else,if,attribute,equals,creation,date,try,creation,date,zoned,date,time,parse,value,catch,date,time,parse,exception,ex,else,if,attribute,equals,modification,date,try,modification,date,zoned,date,time,parse,value,catch,date,time,parse,exception,ex,else,if,attribute,equals,read,date,try,read,date,zoned,date,time,parse,value,catch,date,time,parse,exception,ex,else,throw,new,illegal,argument,exception,invalid,content,disposition,format,return,new,content,disposition,type,name,filename,charset,size,creation,date,modification,date,read,date
ContentDisposition -> public static ContentDisposition parse(String contentDisposition);1530174524;Parse a {@literal Content-Disposition} header value as defined in RFC 2183._@param contentDisposition the {@literal Content-Disposition} header value_@return the parsed content disposition_@see #toString();public static ContentDisposition parse(String contentDisposition) {_		List<String> parts = tokenize(contentDisposition)__		String type = parts.get(0)__		String name = null__		String filename = null__		Charset charset = null__		Long size = null__		ZonedDateTime creationDate = null__		ZonedDateTime modificationDate = null__		ZonedDateTime readDate = null__		for (int i = 1_ i < parts.size()_ i++) {_			String part = parts.get(i)__			int eqIndex = part.indexOf('=')__			if (eqIndex != -1) {_				String attribute = part.substring(0, eqIndex)__				String value = (part.startsWith("\"", eqIndex + 1) && part.endsWith("\"") ?_						part.substring(eqIndex + 2, part.length() - 1) :_						part.substring(eqIndex + 1, part.length()))__				if (attribute.equals("name") ) {_					name = value__				}_				else if (attribute.equals("filename*") ) {_					filename = decodeHeaderFieldParam(value)__					charset = Charset.forName(value.substring(0, value.indexOf('\'')))__					Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_							"Charset should be UTF-8 or ISO-8859-1")__				}_				else if (attribute.equals("filename") && (filename == null)) {_					filename = value__				}_				else if (attribute.equals("size") ) {_					size = Long.parseLong(value)__				}_				else if (attribute.equals("creation-date")) {_					try {_						creationDate = ZonedDateTime.parse(value, RFC_1123_DATE_TIME)__					}_					catch (DateTimeParseException ex) {_						_					}_				}_				else if (attribute.equals("modification-date")) {_					try {_						modificationDate = ZonedDateTime.parse(value, RFC_1123_DATE_TIME)__					}_					catch (DateTimeParseException ex) {_						_					}_				}_				else if (attribute.equals("read-date")) {_					try {_						readDate = ZonedDateTime.parse(value, RFC_1123_DATE_TIME)__					}_					catch (DateTimeParseException ex) {_						_					}_				}_			}_			else {_				throw new IllegalArgumentException("Invalid content disposition format")__			}_		}_		return new ContentDisposition(type, name, filename, charset, size, creationDate, modificationDate, readDate)__	};parse,a,literal,content,disposition,header,value,as,defined,in,rfc,2183,param,content,disposition,the,literal,content,disposition,header,value,return,the,parsed,content,disposition,see,to,string;public,static,content,disposition,parse,string,content,disposition,list,string,parts,tokenize,content,disposition,string,type,parts,get,0,string,name,null,string,filename,null,charset,charset,null,long,size,null,zoned,date,time,creation,date,null,zoned,date,time,modification,date,null,zoned,date,time,read,date,null,for,int,i,1,i,parts,size,i,string,part,parts,get,i,int,eq,index,part,index,of,if,eq,index,1,string,attribute,part,substring,0,eq,index,string,value,part,starts,with,eq,index,1,part,ends,with,part,substring,eq,index,2,part,length,1,part,substring,eq,index,1,part,length,if,attribute,equals,name,name,value,else,if,attribute,equals,filename,filename,decode,header,field,param,value,charset,charset,for,name,value,substring,0,value,index,of,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,else,if,attribute,equals,filename,filename,null,filename,value,else,if,attribute,equals,size,size,long,parse,long,value,else,if,attribute,equals,creation,date,try,creation,date,zoned,date,time,parse,value,catch,date,time,parse,exception,ex,else,if,attribute,equals,modification,date,try,modification,date,zoned,date,time,parse,value,catch,date,time,parse,exception,ex,else,if,attribute,equals,read,date,try,read,date,zoned,date,time,parse,value,catch,date,time,parse,exception,ex,else,throw,new,illegal,argument,exception,invalid,content,disposition,format,return,new,content,disposition,type,name,filename,charset,size,creation,date,modification,date,read,date
ContentDisposition -> public static ContentDisposition parse(String contentDisposition);1530174524;Parse a {@literal Content-Disposition} header value as defined in RFC 2183._@param contentDisposition the {@literal Content-Disposition} header value_@return the parsed content disposition_@see #toString();public static ContentDisposition parse(String contentDisposition) {_		List<String> parts = tokenize(contentDisposition)__		String type = parts.get(0)__		String name = null__		String filename = null__		Charset charset = null__		Long size = null__		ZonedDateTime creationDate = null__		ZonedDateTime modificationDate = null__		ZonedDateTime readDate = null__		for (int i = 1_ i < parts.size()_ i++) {_			String part = parts.get(i)__			int eqIndex = part.indexOf('=')__			if (eqIndex != -1) {_				String attribute = part.substring(0, eqIndex)__				String value = (part.startsWith("\"", eqIndex + 1) && part.endsWith("\"") ?_						part.substring(eqIndex + 2, part.length() - 1) :_						part.substring(eqIndex + 1, part.length()))__				if (attribute.equals("name") ) {_					name = value__				}_				else if (attribute.equals("filename*") ) {_					filename = decodeHeaderFieldParam(value)__					charset = Charset.forName(value.substring(0, value.indexOf('\'')))__					Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_							"Charset should be UTF-8 or ISO-8859-1")__				}_				else if (attribute.equals("filename") && (filename == null)) {_					filename = value__				}_				else if (attribute.equals("size") ) {_					size = Long.parseLong(value)__				}_				else if (attribute.equals("creation-date")) {_					try {_						creationDate = ZonedDateTime.parse(value, RFC_1123_DATE_TIME)__					}_					catch (DateTimeParseException ex) {_						_					}_				}_				else if (attribute.equals("modification-date")) {_					try {_						modificationDate = ZonedDateTime.parse(value, RFC_1123_DATE_TIME)__					}_					catch (DateTimeParseException ex) {_						_					}_				}_				else if (attribute.equals("read-date")) {_					try {_						readDate = ZonedDateTime.parse(value, RFC_1123_DATE_TIME)__					}_					catch (DateTimeParseException ex) {_						_					}_				}_			}_			else {_				throw new IllegalArgumentException("Invalid content disposition format")__			}_		}_		return new ContentDisposition(type, name, filename, charset, size, creationDate, modificationDate, readDate)__	};parse,a,literal,content,disposition,header,value,as,defined,in,rfc,2183,param,content,disposition,the,literal,content,disposition,header,value,return,the,parsed,content,disposition,see,to,string;public,static,content,disposition,parse,string,content,disposition,list,string,parts,tokenize,content,disposition,string,type,parts,get,0,string,name,null,string,filename,null,charset,charset,null,long,size,null,zoned,date,time,creation,date,null,zoned,date,time,modification,date,null,zoned,date,time,read,date,null,for,int,i,1,i,parts,size,i,string,part,parts,get,i,int,eq,index,part,index,of,if,eq,index,1,string,attribute,part,substring,0,eq,index,string,value,part,starts,with,eq,index,1,part,ends,with,part,substring,eq,index,2,part,length,1,part,substring,eq,index,1,part,length,if,attribute,equals,name,name,value,else,if,attribute,equals,filename,filename,decode,header,field,param,value,charset,charset,for,name,value,substring,0,value,index,of,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,else,if,attribute,equals,filename,filename,null,filename,value,else,if,attribute,equals,size,size,long,parse,long,value,else,if,attribute,equals,creation,date,try,creation,date,zoned,date,time,parse,value,catch,date,time,parse,exception,ex,else,if,attribute,equals,modification,date,try,modification,date,zoned,date,time,parse,value,catch,date,time,parse,exception,ex,else,if,attribute,equals,read,date,try,read,date,zoned,date,time,parse,value,catch,date,time,parse,exception,ex,else,throw,new,illegal,argument,exception,invalid,content,disposition,format,return,new,content,disposition,type,name,filename,charset,size,creation,date,modification,date,read,date
ContentDisposition -> public static ContentDisposition parse(String contentDisposition);1530201727;Parse a {@literal Content-Disposition} header value as defined in RFC 2183._@param contentDisposition the {@literal Content-Disposition} header value_@return the parsed content disposition_@see #toString();public static ContentDisposition parse(String contentDisposition) {_		List<String> parts = tokenize(contentDisposition)__		String type = parts.get(0)__		String name = null__		String filename = null__		Charset charset = null__		Long size = null__		ZonedDateTime creationDate = null__		ZonedDateTime modificationDate = null__		ZonedDateTime readDate = null__		for (int i = 1_ i < parts.size()_ i++) {_			String part = parts.get(i)__			int eqIndex = part.indexOf('=')__			if (eqIndex != -1) {_				String attribute = part.substring(0, eqIndex)__				String value = (part.startsWith("\"", eqIndex + 1) && part.endsWith("\"") ?_						part.substring(eqIndex + 2, part.length() - 1) :_						part.substring(eqIndex + 1, part.length()))__				if (attribute.equals("name") ) {_					name = value__				}_				else if (attribute.equals("filename*") ) {_					filename = decodeHeaderFieldParam(value)__					charset = Charset.forName(value.substring(0, value.indexOf('\'')))__					Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_							"Charset should be UTF-8 or ISO-8859-1")__				}_				else if (attribute.equals("filename") && (filename == null)) {_					filename = value__				}_				else if (attribute.equals("size") ) {_					size = Long.parseLong(value)__				}_				else if (attribute.equals("creation-date")) {_					try {_						creationDate = ZonedDateTime.parse(value, RFC_1123_DATE_TIME)__					}_					catch (DateTimeParseException ex) {_						_					}_				}_				else if (attribute.equals("modification-date")) {_					try {_						modificationDate = ZonedDateTime.parse(value, RFC_1123_DATE_TIME)__					}_					catch (DateTimeParseException ex) {_						_					}_				}_				else if (attribute.equals("read-date")) {_					try {_						readDate = ZonedDateTime.parse(value, RFC_1123_DATE_TIME)__					}_					catch (DateTimeParseException ex) {_						_					}_				}_			}_			else {_				throw new IllegalArgumentException("Invalid content disposition format")__			}_		}_		return new ContentDisposition(type, name, filename, charset, size, creationDate, modificationDate, readDate)__	};parse,a,literal,content,disposition,header,value,as,defined,in,rfc,2183,param,content,disposition,the,literal,content,disposition,header,value,return,the,parsed,content,disposition,see,to,string;public,static,content,disposition,parse,string,content,disposition,list,string,parts,tokenize,content,disposition,string,type,parts,get,0,string,name,null,string,filename,null,charset,charset,null,long,size,null,zoned,date,time,creation,date,null,zoned,date,time,modification,date,null,zoned,date,time,read,date,null,for,int,i,1,i,parts,size,i,string,part,parts,get,i,int,eq,index,part,index,of,if,eq,index,1,string,attribute,part,substring,0,eq,index,string,value,part,starts,with,eq,index,1,part,ends,with,part,substring,eq,index,2,part,length,1,part,substring,eq,index,1,part,length,if,attribute,equals,name,name,value,else,if,attribute,equals,filename,filename,decode,header,field,param,value,charset,charset,for,name,value,substring,0,value,index,of,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,else,if,attribute,equals,filename,filename,null,filename,value,else,if,attribute,equals,size,size,long,parse,long,value,else,if,attribute,equals,creation,date,try,creation,date,zoned,date,time,parse,value,catch,date,time,parse,exception,ex,else,if,attribute,equals,modification,date,try,modification,date,zoned,date,time,parse,value,catch,date,time,parse,exception,ex,else,if,attribute,equals,read,date,try,read,date,zoned,date,time,parse,value,catch,date,time,parse,exception,ex,else,throw,new,illegal,argument,exception,invalid,content,disposition,format,return,new,content,disposition,type,name,filename,charset,size,creation,date,modification,date,read,date
ContentDisposition -> Builder -> ContentDisposition build()_;1478563943;Build the content disposition;ContentDisposition build()_;build,the,content,disposition;content,disposition,build
ContentDisposition -> Builder -> ContentDisposition build()_;1485382770;Build the content disposition;ContentDisposition build()_;build,the,content,disposition;content,disposition,build
ContentDisposition -> Builder -> ContentDisposition build()_;1485810955;Build the content disposition;ContentDisposition build()_;build,the,content,disposition;content,disposition,build
ContentDisposition -> Builder -> ContentDisposition build()_;1495868221;Build the content disposition;ContentDisposition build()_;build,the,content,disposition;content,disposition,build
ContentDisposition -> Builder -> ContentDisposition build()_;1496259743;Build the content disposition;ContentDisposition build()_;build,the,content,disposition;content,disposition,build
ContentDisposition -> Builder -> ContentDisposition build()_;1496837955;Build the content disposition;ContentDisposition build()_;build,the,content,disposition;content,disposition,build
ContentDisposition -> Builder -> ContentDisposition build()_;1497359868;Build the content disposition;ContentDisposition build()_;build,the,content,disposition;content,disposition,build
ContentDisposition -> Builder -> ContentDisposition build()_;1498780456;Build the content disposition;ContentDisposition build()_;build,the,content,disposition;content,disposition,build
ContentDisposition -> Builder -> ContentDisposition build()_;1500565799;Build the content disposition;ContentDisposition build()_;build,the,content,disposition;content,disposition,build
ContentDisposition -> Builder -> ContentDisposition build()_;1508771649;Build the content disposition;ContentDisposition build()_;build,the,content,disposition;content,disposition,build
ContentDisposition -> Builder -> ContentDisposition build()_;1508792954;Build the content disposition;ContentDisposition build()_;build,the,content,disposition;content,disposition,build
ContentDisposition -> Builder -> ContentDisposition build()_;1519588127;Build the content disposition;ContentDisposition build()_;build,the,content,disposition;content,disposition,build
ContentDisposition -> Builder -> ContentDisposition build()_;1530174524;Build the content disposition.;ContentDisposition build()_;build,the,content,disposition;content,disposition,build
ContentDisposition -> Builder -> ContentDisposition build()_;1530174524;Build the content disposition.;ContentDisposition build()_;build,the,content,disposition;content,disposition,build
ContentDisposition -> Builder -> ContentDisposition build()_;1530174524;Build the content disposition.;ContentDisposition build()_;build,the,content,disposition;content,disposition,build
ContentDisposition -> Builder -> ContentDisposition build()_;1530174524;Build the content disposition.;ContentDisposition build()_;build,the,content,disposition;content,disposition,build
ContentDisposition -> Builder -> ContentDisposition build()_;1530201727;Build the content disposition.;ContentDisposition build()_;build,the,content,disposition;content,disposition,build
ContentDisposition -> @Nullable 	public ZonedDateTime getCreationDate();1497359868;Return the value of the {@literal creation-date} parameter, or {@code null} if not defined.;@Nullable_	public ZonedDateTime getCreationDate() {_		return this.creationDate__	};return,the,value,of,the,literal,creation,date,parameter,or,code,null,if,not,defined;nullable,public,zoned,date,time,get,creation,date,return,this,creation,date
ContentDisposition -> @Nullable 	public ZonedDateTime getCreationDate();1498780456;Return the value of the {@literal creation-date} parameter, or {@code null} if not defined.;@Nullable_	public ZonedDateTime getCreationDate() {_		return this.creationDate__	};return,the,value,of,the,literal,creation,date,parameter,or,code,null,if,not,defined;nullable,public,zoned,date,time,get,creation,date,return,this,creation,date
ContentDisposition -> @Nullable 	public ZonedDateTime getCreationDate();1500565799;Return the value of the {@literal creation-date} parameter, or {@code null} if not defined.;@Nullable_	public ZonedDateTime getCreationDate() {_		return this.creationDate__	};return,the,value,of,the,literal,creation,date,parameter,or,code,null,if,not,defined;nullable,public,zoned,date,time,get,creation,date,return,this,creation,date
ContentDisposition -> @Nullable 	public ZonedDateTime getCreationDate();1508771649;Return the value of the {@literal creation-date} parameter, or {@code null} if not defined.;@Nullable_	public ZonedDateTime getCreationDate() {_		return this.creationDate__	};return,the,value,of,the,literal,creation,date,parameter,or,code,null,if,not,defined;nullable,public,zoned,date,time,get,creation,date,return,this,creation,date
ContentDisposition -> @Nullable 	public ZonedDateTime getCreationDate();1508792954;Return the value of the {@literal creation-date} parameter, or {@code null} if not defined.;@Nullable_	public ZonedDateTime getCreationDate() {_		return this.creationDate__	};return,the,value,of,the,literal,creation,date,parameter,or,code,null,if,not,defined;nullable,public,zoned,date,time,get,creation,date,return,this,creation,date
ContentDisposition -> @Nullable 	public ZonedDateTime getCreationDate();1519588127;Return the value of the {@literal creation-date} parameter, or {@code null} if not defined.;@Nullable_	public ZonedDateTime getCreationDate() {_		return this.creationDate__	};return,the,value,of,the,literal,creation,date,parameter,or,code,null,if,not,defined;nullable,public,zoned,date,time,get,creation,date,return,this,creation,date
ContentDisposition -> @Nullable 	public ZonedDateTime getCreationDate();1530174524;Return the value of the {@literal creation-date} parameter, or {@code null} if not defined.;@Nullable_	public ZonedDateTime getCreationDate() {_		return this.creationDate__	};return,the,value,of,the,literal,creation,date,parameter,or,code,null,if,not,defined;nullable,public,zoned,date,time,get,creation,date,return,this,creation,date
ContentDisposition -> @Nullable 	public ZonedDateTime getCreationDate();1530174524;Return the value of the {@literal creation-date} parameter, or {@code null} if not defined.;@Nullable_	public ZonedDateTime getCreationDate() {_		return this.creationDate__	};return,the,value,of,the,literal,creation,date,parameter,or,code,null,if,not,defined;nullable,public,zoned,date,time,get,creation,date,return,this,creation,date
ContentDisposition -> @Nullable 	public ZonedDateTime getCreationDate();1530174524;Return the value of the {@literal creation-date} parameter, or {@code null} if not defined.;@Nullable_	public ZonedDateTime getCreationDate() {_		return this.creationDate__	};return,the,value,of,the,literal,creation,date,parameter,or,code,null,if,not,defined;nullable,public,zoned,date,time,get,creation,date,return,this,creation,date
ContentDisposition -> @Nullable 	public ZonedDateTime getCreationDate();1530174524;Return the value of the {@literal creation-date} parameter, or {@code null} if not defined.;@Nullable_	public ZonedDateTime getCreationDate() {_		return this.creationDate__	};return,the,value,of,the,literal,creation,date,parameter,or,code,null,if,not,defined;nullable,public,zoned,date,time,get,creation,date,return,this,creation,date
ContentDisposition -> @Nullable 	public ZonedDateTime getCreationDate();1530201727;Return the value of the {@literal creation-date} parameter, or {@code null} if not defined.;@Nullable_	public ZonedDateTime getCreationDate() {_		return this.creationDate__	};return,the,value,of,the,literal,creation,date,parameter,or,code,null,if,not,defined;nullable,public,zoned,date,time,get,creation,date,return,this,creation,date
ContentDisposition -> @Nullable 	public String getName();1495868221;Return the value of the {@literal name} parameter, or {@code null} if not defined.;@Nullable_	public String getName() {_		return this.name__	};return,the,value,of,the,literal,name,parameter,or,code,null,if,not,defined;nullable,public,string,get,name,return,this,name
ContentDisposition -> @Nullable 	public String getName();1496259743;Return the value of the {@literal name} parameter, or {@code null} if not defined.;@Nullable_	public String getName() {_		return this.name__	};return,the,value,of,the,literal,name,parameter,or,code,null,if,not,defined;nullable,public,string,get,name,return,this,name
ContentDisposition -> @Nullable 	public String getName();1496837955;Return the value of the {@literal name} parameter, or {@code null} if not defined.;@Nullable_	public String getName() {_		return this.name__	};return,the,value,of,the,literal,name,parameter,or,code,null,if,not,defined;nullable,public,string,get,name,return,this,name
ContentDisposition -> @Nullable 	public String getName();1497359868;Return the value of the {@literal name} parameter, or {@code null} if not defined.;@Nullable_	public String getName() {_		return this.name__	};return,the,value,of,the,literal,name,parameter,or,code,null,if,not,defined;nullable,public,string,get,name,return,this,name
ContentDisposition -> @Nullable 	public String getName();1498780456;Return the value of the {@literal name} parameter, or {@code null} if not defined.;@Nullable_	public String getName() {_		return this.name__	};return,the,value,of,the,literal,name,parameter,or,code,null,if,not,defined;nullable,public,string,get,name,return,this,name
ContentDisposition -> @Nullable 	public String getName();1500565799;Return the value of the {@literal name} parameter, or {@code null} if not defined.;@Nullable_	public String getName() {_		return this.name__	};return,the,value,of,the,literal,name,parameter,or,code,null,if,not,defined;nullable,public,string,get,name,return,this,name
ContentDisposition -> @Nullable 	public String getName();1508771649;Return the value of the {@literal name} parameter, or {@code null} if not defined.;@Nullable_	public String getName() {_		return this.name__	};return,the,value,of,the,literal,name,parameter,or,code,null,if,not,defined;nullable,public,string,get,name,return,this,name
ContentDisposition -> @Nullable 	public String getName();1508792954;Return the value of the {@literal name} parameter, or {@code null} if not defined.;@Nullable_	public String getName() {_		return this.name__	};return,the,value,of,the,literal,name,parameter,or,code,null,if,not,defined;nullable,public,string,get,name,return,this,name
ContentDisposition -> @Nullable 	public String getName();1519588127;Return the value of the {@literal name} parameter, or {@code null} if not defined.;@Nullable_	public String getName() {_		return this.name__	};return,the,value,of,the,literal,name,parameter,or,code,null,if,not,defined;nullable,public,string,get,name,return,this,name
ContentDisposition -> @Nullable 	public String getName();1530174524;Return the value of the {@literal name} parameter, or {@code null} if not defined.;@Nullable_	public String getName() {_		return this.name__	};return,the,value,of,the,literal,name,parameter,or,code,null,if,not,defined;nullable,public,string,get,name,return,this,name
ContentDisposition -> @Nullable 	public String getName();1530174524;Return the value of the {@literal name} parameter, or {@code null} if not defined.;@Nullable_	public String getName() {_		return this.name__	};return,the,value,of,the,literal,name,parameter,or,code,null,if,not,defined;nullable,public,string,get,name,return,this,name
ContentDisposition -> @Nullable 	public String getName();1530174524;Return the value of the {@literal name} parameter, or {@code null} if not defined.;@Nullable_	public String getName() {_		return this.name__	};return,the,value,of,the,literal,name,parameter,or,code,null,if,not,defined;nullable,public,string,get,name,return,this,name
ContentDisposition -> @Nullable 	public String getName();1530174524;Return the value of the {@literal name} parameter, or {@code null} if not defined.;@Nullable_	public String getName() {_		return this.name__	};return,the,value,of,the,literal,name,parameter,or,code,null,if,not,defined;nullable,public,string,get,name,return,this,name
ContentDisposition -> @Nullable 	public String getName();1530201727;Return the value of the {@literal name} parameter, or {@code null} if not defined.;@Nullable_	public String getName() {_		return this.name__	};return,the,value,of,the,literal,name,parameter,or,code,null,if,not,defined;nullable,public,string,get,name,return,this,name
ContentDisposition -> @Nullable 	public ZonedDateTime getModificationDate();1497359868;Return the value of the {@literal modification-date} parameter, or {@code null} if not defined.;@Nullable_	public ZonedDateTime getModificationDate() {_		return this.modificationDate__	};return,the,value,of,the,literal,modification,date,parameter,or,code,null,if,not,defined;nullable,public,zoned,date,time,get,modification,date,return,this,modification,date
ContentDisposition -> @Nullable 	public ZonedDateTime getModificationDate();1498780456;Return the value of the {@literal modification-date} parameter, or {@code null} if not defined.;@Nullable_	public ZonedDateTime getModificationDate() {_		return this.modificationDate__	};return,the,value,of,the,literal,modification,date,parameter,or,code,null,if,not,defined;nullable,public,zoned,date,time,get,modification,date,return,this,modification,date
ContentDisposition -> @Nullable 	public ZonedDateTime getModificationDate();1500565799;Return the value of the {@literal modification-date} parameter, or {@code null} if not defined.;@Nullable_	public ZonedDateTime getModificationDate() {_		return this.modificationDate__	};return,the,value,of,the,literal,modification,date,parameter,or,code,null,if,not,defined;nullable,public,zoned,date,time,get,modification,date,return,this,modification,date
ContentDisposition -> @Nullable 	public ZonedDateTime getModificationDate();1508771649;Return the value of the {@literal modification-date} parameter, or {@code null} if not defined.;@Nullable_	public ZonedDateTime getModificationDate() {_		return this.modificationDate__	};return,the,value,of,the,literal,modification,date,parameter,or,code,null,if,not,defined;nullable,public,zoned,date,time,get,modification,date,return,this,modification,date
ContentDisposition -> @Nullable 	public ZonedDateTime getModificationDate();1508792954;Return the value of the {@literal modification-date} parameter, or {@code null} if not defined.;@Nullable_	public ZonedDateTime getModificationDate() {_		return this.modificationDate__	};return,the,value,of,the,literal,modification,date,parameter,or,code,null,if,not,defined;nullable,public,zoned,date,time,get,modification,date,return,this,modification,date
ContentDisposition -> @Nullable 	public ZonedDateTime getModificationDate();1519588127;Return the value of the {@literal modification-date} parameter, or {@code null} if not defined.;@Nullable_	public ZonedDateTime getModificationDate() {_		return this.modificationDate__	};return,the,value,of,the,literal,modification,date,parameter,or,code,null,if,not,defined;nullable,public,zoned,date,time,get,modification,date,return,this,modification,date
ContentDisposition -> @Nullable 	public ZonedDateTime getModificationDate();1530174524;Return the value of the {@literal modification-date} parameter, or {@code null} if not defined.;@Nullable_	public ZonedDateTime getModificationDate() {_		return this.modificationDate__	};return,the,value,of,the,literal,modification,date,parameter,or,code,null,if,not,defined;nullable,public,zoned,date,time,get,modification,date,return,this,modification,date
ContentDisposition -> @Nullable 	public ZonedDateTime getModificationDate();1530174524;Return the value of the {@literal modification-date} parameter, or {@code null} if not defined.;@Nullable_	public ZonedDateTime getModificationDate() {_		return this.modificationDate__	};return,the,value,of,the,literal,modification,date,parameter,or,code,null,if,not,defined;nullable,public,zoned,date,time,get,modification,date,return,this,modification,date
ContentDisposition -> @Nullable 	public ZonedDateTime getModificationDate();1530174524;Return the value of the {@literal modification-date} parameter, or {@code null} if not defined.;@Nullable_	public ZonedDateTime getModificationDate() {_		return this.modificationDate__	};return,the,value,of,the,literal,modification,date,parameter,or,code,null,if,not,defined;nullable,public,zoned,date,time,get,modification,date,return,this,modification,date
ContentDisposition -> @Nullable 	public ZonedDateTime getModificationDate();1530174524;Return the value of the {@literal modification-date} parameter, or {@code null} if not defined.;@Nullable_	public ZonedDateTime getModificationDate() {_		return this.modificationDate__	};return,the,value,of,the,literal,modification,date,parameter,or,code,null,if,not,defined;nullable,public,zoned,date,time,get,modification,date,return,this,modification,date
ContentDisposition -> @Nullable 	public ZonedDateTime getModificationDate();1530201727;Return the value of the {@literal modification-date} parameter, or {@code null} if not defined.;@Nullable_	public ZonedDateTime getModificationDate() {_		return this.modificationDate__	};return,the,value,of,the,literal,modification,date,parameter,or,code,null,if,not,defined;nullable,public,zoned,date,time,get,modification,date,return,this,modification,date
ContentDisposition -> Builder -> Builder filename(String filename, Charset charset)_;1478563943;Set the value of the {@literal filename*} that will be encoded as defined in_the RFC 5987. Only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported.;Builder filename(String filename, Charset charset)_;set,the,value,of,the,literal,filename,that,will,be,encoded,as,defined,in,the,rfc,5987,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported;builder,filename,string,filename,charset,charset
ContentDisposition -> Builder -> Builder filename(String filename, Charset charset)_;1485382770;Set the value of the {@literal filename*} that will be encoded as defined in_the RFC 5987. Only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported.;Builder filename(String filename, Charset charset)_;set,the,value,of,the,literal,filename,that,will,be,encoded,as,defined,in,the,rfc,5987,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported;builder,filename,string,filename,charset,charset
ContentDisposition -> Builder -> Builder filename(String filename, Charset charset)_;1485810955;Set the value of the {@literal filename*} that will be encoded as defined in_the RFC 5987. Only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported.;Builder filename(String filename, Charset charset)_;set,the,value,of,the,literal,filename,that,will,be,encoded,as,defined,in,the,rfc,5987,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported;builder,filename,string,filename,charset,charset
ContentDisposition -> Builder -> Builder filename(String filename, Charset charset)_;1495868221;Set the value of the {@literal filename*} that will be encoded as defined in_the RFC 5987. Only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported.;Builder filename(String filename, Charset charset)_;set,the,value,of,the,literal,filename,that,will,be,encoded,as,defined,in,the,rfc,5987,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported;builder,filename,string,filename,charset,charset
ContentDisposition -> Builder -> Builder filename(String filename, Charset charset)_;1496259743;Set the value of the {@literal filename*} that will be encoded as defined in_the RFC 5987. Only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported.;Builder filename(String filename, Charset charset)_;set,the,value,of,the,literal,filename,that,will,be,encoded,as,defined,in,the,rfc,5987,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported;builder,filename,string,filename,charset,charset
ContentDisposition -> Builder -> Builder filename(String filename, Charset charset)_;1496837955;Set the value of the {@literal filename*} that will be encoded as defined in_the RFC 5987. Only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported.;Builder filename(String filename, Charset charset)_;set,the,value,of,the,literal,filename,that,will,be,encoded,as,defined,in,the,rfc,5987,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported;builder,filename,string,filename,charset,charset
ContentDisposition -> Builder -> Builder filename(String filename, Charset charset)_;1497359868;Set the value of the {@literal filename*} that will be encoded as defined in_the RFC 5987. Only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported.;Builder filename(String filename, Charset charset)_;set,the,value,of,the,literal,filename,that,will,be,encoded,as,defined,in,the,rfc,5987,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported;builder,filename,string,filename,charset,charset
ContentDisposition -> Builder -> Builder filename(String filename, Charset charset)_;1498780456;Set the value of the {@literal filename*} that will be encoded as defined in_the RFC 5987. Only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported.;Builder filename(String filename, Charset charset)_;set,the,value,of,the,literal,filename,that,will,be,encoded,as,defined,in,the,rfc,5987,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported;builder,filename,string,filename,charset,charset
ContentDisposition -> Builder -> Builder filename(String filename, Charset charset)_;1500565799;Set the value of the {@literal filename*} that will be encoded as_defined in the RFC 5987. Only the US-ASCII, UTF-8 and ISO-8859-1_charsets are supported._<p><strong>Note:</strong> Do not use this for a_{@code "multipart/form-data"} requests as per_<a link="https://tools.ietf.org/html/rfc7578#section-4.2">RFC 7578, Section 4.2</a>_and also RFC 5987 itself mentions it does not apply to multipart_requests.;Builder filename(String filename, Charset charset)_;set,the,value,of,the,literal,filename,that,will,be,encoded,as,defined,in,the,rfc,5987,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,p,strong,note,strong,do,not,use,this,for,a,code,multipart,form,data,requests,as,per,a,link,https,tools,ietf,org,html,rfc7578,section,4,2,rfc,7578,section,4,2,a,and,also,rfc,5987,itself,mentions,it,does,not,apply,to,multipart,requests;builder,filename,string,filename,charset,charset
ContentDisposition -> Builder -> Builder filename(String filename, Charset charset)_;1508771649;Set the value of the {@literal filename*} that will be encoded as_defined in the RFC 5987. Only the US-ASCII, UTF-8 and ISO-8859-1_charsets are supported._<p><strong>Note:</strong> Do not use this for a_{@code "multipart/form-data"} requests as per_<a link="https://tools.ietf.org/html/rfc7578#section-4.2">RFC 7578, Section 4.2</a>_and also RFC 5987 itself mentions it does not apply to multipart_requests.;Builder filename(String filename, Charset charset)_;set,the,value,of,the,literal,filename,that,will,be,encoded,as,defined,in,the,rfc,5987,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,p,strong,note,strong,do,not,use,this,for,a,code,multipart,form,data,requests,as,per,a,link,https,tools,ietf,org,html,rfc7578,section,4,2,rfc,7578,section,4,2,a,and,also,rfc,5987,itself,mentions,it,does,not,apply,to,multipart,requests;builder,filename,string,filename,charset,charset
ContentDisposition -> Builder -> Builder filename(String filename, Charset charset)_;1508792954;Set the value of the {@literal filename*} that will be encoded as_defined in the RFC 5987. Only the US-ASCII, UTF-8 and ISO-8859-1_charsets are supported._<p><strong>Note:</strong> Do not use this for a_{@code "multipart/form-data"} requests as per_<a link="https://tools.ietf.org/html/rfc7578#section-4.2">RFC 7578, Section 4.2</a>_and also RFC 5987 itself mentions it does not apply to multipart_requests.;Builder filename(String filename, Charset charset)_;set,the,value,of,the,literal,filename,that,will,be,encoded,as,defined,in,the,rfc,5987,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,p,strong,note,strong,do,not,use,this,for,a,code,multipart,form,data,requests,as,per,a,link,https,tools,ietf,org,html,rfc7578,section,4,2,rfc,7578,section,4,2,a,and,also,rfc,5987,itself,mentions,it,does,not,apply,to,multipart,requests;builder,filename,string,filename,charset,charset
ContentDisposition -> Builder -> Builder filename(String filename, Charset charset)_;1519588127;Set the value of the {@literal filename*} that will be encoded as_defined in the RFC 5987. Only the US-ASCII, UTF-8 and ISO-8859-1_charsets are supported._<p><strong>Note:</strong> Do not use this for a_{@code "multipart/form-data"} requests as per_<a link="https://tools.ietf.org/html/rfc7578#section-4.2">RFC 7578, Section 4.2</a>_and also RFC 5987 itself mentions it does not apply to multipart_requests.;Builder filename(String filename, Charset charset)_;set,the,value,of,the,literal,filename,that,will,be,encoded,as,defined,in,the,rfc,5987,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,p,strong,note,strong,do,not,use,this,for,a,code,multipart,form,data,requests,as,per,a,link,https,tools,ietf,org,html,rfc7578,section,4,2,rfc,7578,section,4,2,a,and,also,rfc,5987,itself,mentions,it,does,not,apply,to,multipart,requests;builder,filename,string,filename,charset,charset
ContentDisposition -> Builder -> Builder filename(String filename, Charset charset)_;1530174524;Set the value of the {@literal filename*} that will be encoded as_defined in the RFC 5987. Only the US-ASCII, UTF-8 and ISO-8859-1_charsets are supported._<p><strong>Note:</strong> Do not use this for a_{@code "multipart/form-data"} requests as per_<a link="https://tools.ietf.org/html/rfc7578#section-4.2">RFC 7578, Section 4.2</a>_and also RFC 5987 itself mentions it does not apply to multipart_requests.;Builder filename(String filename, Charset charset)_;set,the,value,of,the,literal,filename,that,will,be,encoded,as,defined,in,the,rfc,5987,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,p,strong,note,strong,do,not,use,this,for,a,code,multipart,form,data,requests,as,per,a,link,https,tools,ietf,org,html,rfc7578,section,4,2,rfc,7578,section,4,2,a,and,also,rfc,5987,itself,mentions,it,does,not,apply,to,multipart,requests;builder,filename,string,filename,charset,charset
ContentDisposition -> Builder -> Builder filename(String filename, Charset charset)_;1530174524;Set the value of the {@literal filename*} that will be encoded as_defined in the RFC 5987. Only the US-ASCII, UTF-8 and ISO-8859-1_charsets are supported._<p><strong>Note:</strong> Do not use this for a_{@code "multipart/form-data"} requests as per_<a link="https://tools.ietf.org/html/rfc7578#section-4.2">RFC 7578, Section 4.2</a>_and also RFC 5987 itself mentions it does not apply to multipart_requests.;Builder filename(String filename, Charset charset)_;set,the,value,of,the,literal,filename,that,will,be,encoded,as,defined,in,the,rfc,5987,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,p,strong,note,strong,do,not,use,this,for,a,code,multipart,form,data,requests,as,per,a,link,https,tools,ietf,org,html,rfc7578,section,4,2,rfc,7578,section,4,2,a,and,also,rfc,5987,itself,mentions,it,does,not,apply,to,multipart,requests;builder,filename,string,filename,charset,charset
ContentDisposition -> Builder -> Builder filename(String filename, Charset charset)_;1530174524;Set the value of the {@literal filename*} that will be encoded as_defined in the RFC 5987. Only the US-ASCII, UTF-8 and ISO-8859-1_charsets are supported._<p><strong>Note:</strong> Do not use this for a_{@code "multipart/form-data"} requests as per_<a link="https://tools.ietf.org/html/rfc7578#section-4.2">RFC 7578, Section 4.2</a>_and also RFC 5987 itself mentions it does not apply to multipart_requests.;Builder filename(String filename, Charset charset)_;set,the,value,of,the,literal,filename,that,will,be,encoded,as,defined,in,the,rfc,5987,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,p,strong,note,strong,do,not,use,this,for,a,code,multipart,form,data,requests,as,per,a,link,https,tools,ietf,org,html,rfc7578,section,4,2,rfc,7578,section,4,2,a,and,also,rfc,5987,itself,mentions,it,does,not,apply,to,multipart,requests;builder,filename,string,filename,charset,charset
ContentDisposition -> Builder -> Builder filename(String filename, Charset charset)_;1530174524;Set the value of the {@literal filename*} that will be encoded as_defined in the RFC 5987. Only the US-ASCII, UTF-8 and ISO-8859-1_charsets are supported._<p><strong>Note:</strong> Do not use this for a_{@code "multipart/form-data"} requests as per_<a link="https://tools.ietf.org/html/rfc7578#section-4.2">RFC 7578, Section 4.2</a>_and also RFC 5987 itself mentions it does not apply to multipart_requests.;Builder filename(String filename, Charset charset)_;set,the,value,of,the,literal,filename,that,will,be,encoded,as,defined,in,the,rfc,5987,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,p,strong,note,strong,do,not,use,this,for,a,code,multipart,form,data,requests,as,per,a,link,https,tools,ietf,org,html,rfc7578,section,4,2,rfc,7578,section,4,2,a,and,also,rfc,5987,itself,mentions,it,does,not,apply,to,multipart,requests;builder,filename,string,filename,charset,charset
ContentDisposition -> Builder -> Builder filename(String filename, Charset charset)_;1530201727;Set the value of the {@literal filename*} that will be encoded as_defined in the RFC 5987. Only the US-ASCII, UTF-8 and ISO-8859-1_charsets are supported._<p><strong>Note:</strong> Do not use this for a_{@code "multipart/form-data"} requests as per_<a link="https://tools.ietf.org/html/rfc7578#section-4.2">RFC 7578, Section 4.2</a>_and also RFC 5987 itself mentions it does not apply to multipart_requests.;Builder filename(String filename, Charset charset)_;set,the,value,of,the,literal,filename,that,will,be,encoded,as,defined,in,the,rfc,5987,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,p,strong,note,strong,do,not,use,this,for,a,code,multipart,form,data,requests,as,per,a,link,https,tools,ietf,org,html,rfc7578,section,4,2,rfc,7578,section,4,2,a,and,also,rfc,5987,itself,mentions,it,does,not,apply,to,multipart,requests;builder,filename,string,filename,charset,charset
ContentDisposition -> @Nullable 	public String getFilename();1495868221;Return the value of the {@literal filename} parameter (or the value of the_{@literal filename*} one decoded as defined in the RFC 5987), or {@code null} if not defined.;@Nullable_	public String getFilename() {_		return this.filename__	};return,the,value,of,the,literal,filename,parameter,or,the,value,of,the,literal,filename,one,decoded,as,defined,in,the,rfc,5987,or,code,null,if,not,defined;nullable,public,string,get,filename,return,this,filename
ContentDisposition -> @Nullable 	public String getFilename();1496259743;Return the value of the {@literal filename} parameter (or the value of the_{@literal filename*} one decoded as defined in the RFC 5987), or {@code null} if not defined.;@Nullable_	public String getFilename() {_		return this.filename__	};return,the,value,of,the,literal,filename,parameter,or,the,value,of,the,literal,filename,one,decoded,as,defined,in,the,rfc,5987,or,code,null,if,not,defined;nullable,public,string,get,filename,return,this,filename
ContentDisposition -> @Nullable 	public String getFilename();1496837955;Return the value of the {@literal filename} parameter (or the value of the_{@literal filename*} one decoded as defined in the RFC 5987), or {@code null} if not defined.;@Nullable_	public String getFilename() {_		return this.filename__	};return,the,value,of,the,literal,filename,parameter,or,the,value,of,the,literal,filename,one,decoded,as,defined,in,the,rfc,5987,or,code,null,if,not,defined;nullable,public,string,get,filename,return,this,filename
ContentDisposition -> @Nullable 	public String getFilename();1497359868;Return the value of the {@literal filename} parameter (or the value of the_{@literal filename*} one decoded as defined in the RFC 5987), or {@code null} if not defined.;@Nullable_	public String getFilename() {_		return this.filename__	};return,the,value,of,the,literal,filename,parameter,or,the,value,of,the,literal,filename,one,decoded,as,defined,in,the,rfc,5987,or,code,null,if,not,defined;nullable,public,string,get,filename,return,this,filename
ContentDisposition -> @Nullable 	public String getFilename();1498780456;Return the value of the {@literal filename} parameter (or the value of the_{@literal filename*} one decoded as defined in the RFC 5987), or {@code null} if not defined.;@Nullable_	public String getFilename() {_		return this.filename__	};return,the,value,of,the,literal,filename,parameter,or,the,value,of,the,literal,filename,one,decoded,as,defined,in,the,rfc,5987,or,code,null,if,not,defined;nullable,public,string,get,filename,return,this,filename
ContentDisposition -> @Nullable 	public String getFilename();1500565799;Return the value of the {@literal filename} parameter (or the value of the_{@literal filename*} one decoded as defined in the RFC 5987), or {@code null} if not defined.;@Nullable_	public String getFilename() {_		return this.filename__	};return,the,value,of,the,literal,filename,parameter,or,the,value,of,the,literal,filename,one,decoded,as,defined,in,the,rfc,5987,or,code,null,if,not,defined;nullable,public,string,get,filename,return,this,filename
ContentDisposition -> @Nullable 	public String getFilename();1508771649;Return the value of the {@literal filename} parameter (or the value of the_{@literal filename*} one decoded as defined in the RFC 5987), or {@code null} if not defined.;@Nullable_	public String getFilename() {_		return this.filename__	};return,the,value,of,the,literal,filename,parameter,or,the,value,of,the,literal,filename,one,decoded,as,defined,in,the,rfc,5987,or,code,null,if,not,defined;nullable,public,string,get,filename,return,this,filename
ContentDisposition -> @Nullable 	public String getFilename();1508792954;Return the value of the {@literal filename} parameter (or the value of the_{@literal filename*} one decoded as defined in the RFC 5987), or {@code null} if not defined.;@Nullable_	public String getFilename() {_		return this.filename__	};return,the,value,of,the,literal,filename,parameter,or,the,value,of,the,literal,filename,one,decoded,as,defined,in,the,rfc,5987,or,code,null,if,not,defined;nullable,public,string,get,filename,return,this,filename
ContentDisposition -> @Nullable 	public String getFilename();1519588127;Return the value of the {@literal filename} parameter (or the value of the_{@literal filename*} one decoded as defined in the RFC 5987), or {@code null} if not defined.;@Nullable_	public String getFilename() {_		return this.filename__	};return,the,value,of,the,literal,filename,parameter,or,the,value,of,the,literal,filename,one,decoded,as,defined,in,the,rfc,5987,or,code,null,if,not,defined;nullable,public,string,get,filename,return,this,filename
ContentDisposition -> @Nullable 	public String getFilename();1530174524;Return the value of the {@literal filename} parameter (or the value of the_{@literal filename*} one decoded as defined in the RFC 5987), or {@code null} if not defined.;@Nullable_	public String getFilename() {_		return this.filename__	};return,the,value,of,the,literal,filename,parameter,or,the,value,of,the,literal,filename,one,decoded,as,defined,in,the,rfc,5987,or,code,null,if,not,defined;nullable,public,string,get,filename,return,this,filename
ContentDisposition -> @Nullable 	public String getFilename();1530174524;Return the value of the {@literal filename} parameter (or the value of the_{@literal filename*} one decoded as defined in the RFC 5987), or {@code null} if not defined.;@Nullable_	public String getFilename() {_		return this.filename__	};return,the,value,of,the,literal,filename,parameter,or,the,value,of,the,literal,filename,one,decoded,as,defined,in,the,rfc,5987,or,code,null,if,not,defined;nullable,public,string,get,filename,return,this,filename
ContentDisposition -> @Nullable 	public String getFilename();1530174524;Return the value of the {@literal filename} parameter (or the value of the_{@literal filename*} one decoded as defined in the RFC 5987), or {@code null} if not defined.;@Nullable_	public String getFilename() {_		return this.filename__	};return,the,value,of,the,literal,filename,parameter,or,the,value,of,the,literal,filename,one,decoded,as,defined,in,the,rfc,5987,or,code,null,if,not,defined;nullable,public,string,get,filename,return,this,filename
ContentDisposition -> @Nullable 	public String getFilename();1530174524;Return the value of the {@literal filename} parameter (or the value of the_{@literal filename*} one decoded as defined in the RFC 5987), or {@code null} if not defined.;@Nullable_	public String getFilename() {_		return this.filename__	};return,the,value,of,the,literal,filename,parameter,or,the,value,of,the,literal,filename,one,decoded,as,defined,in,the,rfc,5987,or,code,null,if,not,defined;nullable,public,string,get,filename,return,this,filename
ContentDisposition -> @Nullable 	public String getFilename();1530201727;Return the value of the {@literal filename} parameter (or the value of the_{@literal filename*} one decoded as defined in the RFC 5987), or {@code null} if not defined.;@Nullable_	public String getFilename() {_		return this.filename__	};return,the,value,of,the,literal,filename,parameter,or,the,value,of,the,literal,filename,one,decoded,as,defined,in,the,rfc,5987,or,code,null,if,not,defined;nullable,public,string,get,filename,return,this,filename
ContentDisposition -> private ContentDisposition(@Nullable String type, @Nullable String name, @Nullable String filename, 			@Nullable Charset charset, @Nullable Long size, @Nullable ZonedDateTime creationDate, 			@Nullable ZonedDateTime modificationDate, @Nullable ZonedDateTime readDate);1498780456;Private constructor. See static factory methods in this class.;private ContentDisposition(@Nullable String type, @Nullable String name, @Nullable String filename,_			@Nullable Charset charset, @Nullable Long size, @Nullable ZonedDateTime creationDate,_			@Nullable ZonedDateTime modificationDate, @Nullable ZonedDateTime readDate) {__		this.type = type__		this.name = name__		this.filename = filename__		this.charset = charset__		this.size = size__		this.creationDate = creationDate__		this.modificationDate = modificationDate__		this.readDate = readDate__	};private,constructor,see,static,factory,methods,in,this,class;private,content,disposition,nullable,string,type,nullable,string,name,nullable,string,filename,nullable,charset,charset,nullable,long,size,nullable,zoned,date,time,creation,date,nullable,zoned,date,time,modification,date,nullable,zoned,date,time,read,date,this,type,type,this,name,name,this,filename,filename,this,charset,charset,this,size,size,this,creation,date,creation,date,this,modification,date,modification,date,this,read,date,read,date
ContentDisposition -> private ContentDisposition(@Nullable String type, @Nullable String name, @Nullable String filename, 			@Nullable Charset charset, @Nullable Long size, @Nullable ZonedDateTime creationDate, 			@Nullable ZonedDateTime modificationDate, @Nullable ZonedDateTime readDate);1500565799;Private constructor. See static factory methods in this class.;private ContentDisposition(@Nullable String type, @Nullable String name, @Nullable String filename,_			@Nullable Charset charset, @Nullable Long size, @Nullable ZonedDateTime creationDate,_			@Nullable ZonedDateTime modificationDate, @Nullable ZonedDateTime readDate) {__		this.type = type__		this.name = name__		this.filename = filename__		this.charset = charset__		this.size = size__		this.creationDate = creationDate__		this.modificationDate = modificationDate__		this.readDate = readDate__	};private,constructor,see,static,factory,methods,in,this,class;private,content,disposition,nullable,string,type,nullable,string,name,nullable,string,filename,nullable,charset,charset,nullable,long,size,nullable,zoned,date,time,creation,date,nullable,zoned,date,time,modification,date,nullable,zoned,date,time,read,date,this,type,type,this,name,name,this,filename,filename,this,charset,charset,this,size,size,this,creation,date,creation,date,this,modification,date,modification,date,this,read,date,read,date
ContentDisposition -> private ContentDisposition(@Nullable String type, @Nullable String name, @Nullable String filename, 			@Nullable Charset charset, @Nullable Long size, @Nullable ZonedDateTime creationDate, 			@Nullable ZonedDateTime modificationDate, @Nullable ZonedDateTime readDate);1508771649;Private constructor. See static factory methods in this class.;private ContentDisposition(@Nullable String type, @Nullable String name, @Nullable String filename,_			@Nullable Charset charset, @Nullable Long size, @Nullable ZonedDateTime creationDate,_			@Nullable ZonedDateTime modificationDate, @Nullable ZonedDateTime readDate) {__		this.type = type__		this.name = name__		this.filename = filename__		this.charset = charset__		this.size = size__		this.creationDate = creationDate__		this.modificationDate = modificationDate__		this.readDate = readDate__	};private,constructor,see,static,factory,methods,in,this,class;private,content,disposition,nullable,string,type,nullable,string,name,nullable,string,filename,nullable,charset,charset,nullable,long,size,nullable,zoned,date,time,creation,date,nullable,zoned,date,time,modification,date,nullable,zoned,date,time,read,date,this,type,type,this,name,name,this,filename,filename,this,charset,charset,this,size,size,this,creation,date,creation,date,this,modification,date,modification,date,this,read,date,read,date
ContentDisposition -> private ContentDisposition(@Nullable String type, @Nullable String name, @Nullable String filename, 			@Nullable Charset charset, @Nullable Long size, @Nullable ZonedDateTime creationDate, 			@Nullable ZonedDateTime modificationDate, @Nullable ZonedDateTime readDate);1508792954;Private constructor. See static factory methods in this class.;private ContentDisposition(@Nullable String type, @Nullable String name, @Nullable String filename,_			@Nullable Charset charset, @Nullable Long size, @Nullable ZonedDateTime creationDate,_			@Nullable ZonedDateTime modificationDate, @Nullable ZonedDateTime readDate) {__		this.type = type__		this.name = name__		this.filename = filename__		this.charset = charset__		this.size = size__		this.creationDate = creationDate__		this.modificationDate = modificationDate__		this.readDate = readDate__	};private,constructor,see,static,factory,methods,in,this,class;private,content,disposition,nullable,string,type,nullable,string,name,nullable,string,filename,nullable,charset,charset,nullable,long,size,nullable,zoned,date,time,creation,date,nullable,zoned,date,time,modification,date,nullable,zoned,date,time,read,date,this,type,type,this,name,name,this,filename,filename,this,charset,charset,this,size,size,this,creation,date,creation,date,this,modification,date,modification,date,this,read,date,read,date
ContentDisposition -> private ContentDisposition(@Nullable String type, @Nullable String name, @Nullable String filename, 			@Nullable Charset charset, @Nullable Long size, @Nullable ZonedDateTime creationDate, 			@Nullable ZonedDateTime modificationDate, @Nullable ZonedDateTime readDate);1519588127;Private constructor. See static factory methods in this class.;private ContentDisposition(@Nullable String type, @Nullable String name, @Nullable String filename,_			@Nullable Charset charset, @Nullable Long size, @Nullable ZonedDateTime creationDate,_			@Nullable ZonedDateTime modificationDate, @Nullable ZonedDateTime readDate) {__		this.type = type__		this.name = name__		this.filename = filename__		this.charset = charset__		this.size = size__		this.creationDate = creationDate__		this.modificationDate = modificationDate__		this.readDate = readDate__	};private,constructor,see,static,factory,methods,in,this,class;private,content,disposition,nullable,string,type,nullable,string,name,nullable,string,filename,nullable,charset,charset,nullable,long,size,nullable,zoned,date,time,creation,date,nullable,zoned,date,time,modification,date,nullable,zoned,date,time,read,date,this,type,type,this,name,name,this,filename,filename,this,charset,charset,this,size,size,this,creation,date,creation,date,this,modification,date,modification,date,this,read,date,read,date
ContentDisposition -> private ContentDisposition(@Nullable String type, @Nullable String name, @Nullable String filename, 			@Nullable Charset charset, @Nullable Long size, @Nullable ZonedDateTime creationDate, 			@Nullable ZonedDateTime modificationDate, @Nullable ZonedDateTime readDate);1530174524;Private constructor. See static factory methods in this class.;private ContentDisposition(@Nullable String type, @Nullable String name, @Nullable String filename,_			@Nullable Charset charset, @Nullable Long size, @Nullable ZonedDateTime creationDate,_			@Nullable ZonedDateTime modificationDate, @Nullable ZonedDateTime readDate) {__		this.type = type__		this.name = name__		this.filename = filename__		this.charset = charset__		this.size = size__		this.creationDate = creationDate__		this.modificationDate = modificationDate__		this.readDate = readDate__	};private,constructor,see,static,factory,methods,in,this,class;private,content,disposition,nullable,string,type,nullable,string,name,nullable,string,filename,nullable,charset,charset,nullable,long,size,nullable,zoned,date,time,creation,date,nullable,zoned,date,time,modification,date,nullable,zoned,date,time,read,date,this,type,type,this,name,name,this,filename,filename,this,charset,charset,this,size,size,this,creation,date,creation,date,this,modification,date,modification,date,this,read,date,read,date
ContentDisposition -> private ContentDisposition(@Nullable String type, @Nullable String name, @Nullable String filename, 			@Nullable Charset charset, @Nullable Long size, @Nullable ZonedDateTime creationDate, 			@Nullable ZonedDateTime modificationDate, @Nullable ZonedDateTime readDate);1530174524;Private constructor. See static factory methods in this class.;private ContentDisposition(@Nullable String type, @Nullable String name, @Nullable String filename,_			@Nullable Charset charset, @Nullable Long size, @Nullable ZonedDateTime creationDate,_			@Nullable ZonedDateTime modificationDate, @Nullable ZonedDateTime readDate) {__		this.type = type__		this.name = name__		this.filename = filename__		this.charset = charset__		this.size = size__		this.creationDate = creationDate__		this.modificationDate = modificationDate__		this.readDate = readDate__	};private,constructor,see,static,factory,methods,in,this,class;private,content,disposition,nullable,string,type,nullable,string,name,nullable,string,filename,nullable,charset,charset,nullable,long,size,nullable,zoned,date,time,creation,date,nullable,zoned,date,time,modification,date,nullable,zoned,date,time,read,date,this,type,type,this,name,name,this,filename,filename,this,charset,charset,this,size,size,this,creation,date,creation,date,this,modification,date,modification,date,this,read,date,read,date
ContentDisposition -> private ContentDisposition(@Nullable String type, @Nullable String name, @Nullable String filename, 			@Nullable Charset charset, @Nullable Long size, @Nullable ZonedDateTime creationDate, 			@Nullable ZonedDateTime modificationDate, @Nullable ZonedDateTime readDate);1530174524;Private constructor. See static factory methods in this class.;private ContentDisposition(@Nullable String type, @Nullable String name, @Nullable String filename,_			@Nullable Charset charset, @Nullable Long size, @Nullable ZonedDateTime creationDate,_			@Nullable ZonedDateTime modificationDate, @Nullable ZonedDateTime readDate) {__		this.type = type__		this.name = name__		this.filename = filename__		this.charset = charset__		this.size = size__		this.creationDate = creationDate__		this.modificationDate = modificationDate__		this.readDate = readDate__	};private,constructor,see,static,factory,methods,in,this,class;private,content,disposition,nullable,string,type,nullable,string,name,nullable,string,filename,nullable,charset,charset,nullable,long,size,nullable,zoned,date,time,creation,date,nullable,zoned,date,time,modification,date,nullable,zoned,date,time,read,date,this,type,type,this,name,name,this,filename,filename,this,charset,charset,this,size,size,this,creation,date,creation,date,this,modification,date,modification,date,this,read,date,read,date
ContentDisposition -> private ContentDisposition(@Nullable String type, @Nullable String name, @Nullable String filename, 			@Nullable Charset charset, @Nullable Long size, @Nullable ZonedDateTime creationDate, 			@Nullable ZonedDateTime modificationDate, @Nullable ZonedDateTime readDate);1530174524;Private constructor. See static factory methods in this class.;private ContentDisposition(@Nullable String type, @Nullable String name, @Nullable String filename,_			@Nullable Charset charset, @Nullable Long size, @Nullable ZonedDateTime creationDate,_			@Nullable ZonedDateTime modificationDate, @Nullable ZonedDateTime readDate) {__		this.type = type__		this.name = name__		this.filename = filename__		this.charset = charset__		this.size = size__		this.creationDate = creationDate__		this.modificationDate = modificationDate__		this.readDate = readDate__	};private,constructor,see,static,factory,methods,in,this,class;private,content,disposition,nullable,string,type,nullable,string,name,nullable,string,filename,nullable,charset,charset,nullable,long,size,nullable,zoned,date,time,creation,date,nullable,zoned,date,time,modification,date,nullable,zoned,date,time,read,date,this,type,type,this,name,name,this,filename,filename,this,charset,charset,this,size,size,this,creation,date,creation,date,this,modification,date,modification,date,this,read,date,read,date
ContentDisposition -> private ContentDisposition(@Nullable String type, @Nullable String name, @Nullable String filename, 			@Nullable Charset charset, @Nullable Long size, @Nullable ZonedDateTime creationDate, 			@Nullable ZonedDateTime modificationDate, @Nullable ZonedDateTime readDate);1530201727;Private constructor. See static factory methods in this class.;private ContentDisposition(@Nullable String type, @Nullable String name, @Nullable String filename,_			@Nullable Charset charset, @Nullable Long size, @Nullable ZonedDateTime creationDate,_			@Nullable ZonedDateTime modificationDate, @Nullable ZonedDateTime readDate) {__		this.type = type__		this.name = name__		this.filename = filename__		this.charset = charset__		this.size = size__		this.creationDate = creationDate__		this.modificationDate = modificationDate__		this.readDate = readDate__	};private,constructor,see,static,factory,methods,in,this,class;private,content,disposition,nullable,string,type,nullable,string,name,nullable,string,filename,nullable,charset,charset,nullable,long,size,nullable,zoned,date,time,creation,date,nullable,zoned,date,time,modification,date,nullable,zoned,date,time,read,date,this,type,type,this,name,name,this,filename,filename,this,charset,charset,this,size,size,this,creation,date,creation,date,this,modification,date,modification,date,this,read,date,read,date
ContentDisposition -> @Nullable 	public Charset getCharset();1495868221;Return the charset defined in {@literal filename*} parameter, or {@code null} if not defined.;@Nullable_	public Charset getCharset() {_		return this.charset__	};return,the,charset,defined,in,literal,filename,parameter,or,code,null,if,not,defined;nullable,public,charset,get,charset,return,this,charset
ContentDisposition -> @Nullable 	public Charset getCharset();1496259743;Return the charset defined in {@literal filename*} parameter, or {@code null} if not defined.;@Nullable_	public Charset getCharset() {_		return this.charset__	};return,the,charset,defined,in,literal,filename,parameter,or,code,null,if,not,defined;nullable,public,charset,get,charset,return,this,charset
ContentDisposition -> @Nullable 	public Charset getCharset();1496837955;Return the charset defined in {@literal filename*} parameter, or {@code null} if not defined.;@Nullable_	public Charset getCharset() {_		return this.charset__	};return,the,charset,defined,in,literal,filename,parameter,or,code,null,if,not,defined;nullable,public,charset,get,charset,return,this,charset
ContentDisposition -> @Nullable 	public Charset getCharset();1497359868;Return the charset defined in {@literal filename*} parameter, or {@code null} if not defined.;@Nullable_	public Charset getCharset() {_		return this.charset__	};return,the,charset,defined,in,literal,filename,parameter,or,code,null,if,not,defined;nullable,public,charset,get,charset,return,this,charset
ContentDisposition -> @Nullable 	public Charset getCharset();1498780456;Return the charset defined in {@literal filename*} parameter, or {@code null} if not defined.;@Nullable_	public Charset getCharset() {_		return this.charset__	};return,the,charset,defined,in,literal,filename,parameter,or,code,null,if,not,defined;nullable,public,charset,get,charset,return,this,charset
ContentDisposition -> @Nullable 	public Charset getCharset();1500565799;Return the charset defined in {@literal filename*} parameter, or {@code null} if not defined.;@Nullable_	public Charset getCharset() {_		return this.charset__	};return,the,charset,defined,in,literal,filename,parameter,or,code,null,if,not,defined;nullable,public,charset,get,charset,return,this,charset
ContentDisposition -> @Nullable 	public Charset getCharset();1508771649;Return the charset defined in {@literal filename*} parameter, or {@code null} if not defined.;@Nullable_	public Charset getCharset() {_		return this.charset__	};return,the,charset,defined,in,literal,filename,parameter,or,code,null,if,not,defined;nullable,public,charset,get,charset,return,this,charset
ContentDisposition -> @Nullable 	public Charset getCharset();1508792954;Return the charset defined in {@literal filename*} parameter, or {@code null} if not defined.;@Nullable_	public Charset getCharset() {_		return this.charset__	};return,the,charset,defined,in,literal,filename,parameter,or,code,null,if,not,defined;nullable,public,charset,get,charset,return,this,charset
ContentDisposition -> @Nullable 	public Charset getCharset();1519588127;Return the charset defined in {@literal filename*} parameter, or {@code null} if not defined.;@Nullable_	public Charset getCharset() {_		return this.charset__	};return,the,charset,defined,in,literal,filename,parameter,or,code,null,if,not,defined;nullable,public,charset,get,charset,return,this,charset
ContentDisposition -> @Nullable 	public Charset getCharset();1530174524;Return the charset defined in {@literal filename*} parameter, or {@code null} if not defined.;@Nullable_	public Charset getCharset() {_		return this.charset__	};return,the,charset,defined,in,literal,filename,parameter,or,code,null,if,not,defined;nullable,public,charset,get,charset,return,this,charset
ContentDisposition -> @Nullable 	public Charset getCharset();1530174524;Return the charset defined in {@literal filename*} parameter, or {@code null} if not defined.;@Nullable_	public Charset getCharset() {_		return this.charset__	};return,the,charset,defined,in,literal,filename,parameter,or,code,null,if,not,defined;nullable,public,charset,get,charset,return,this,charset
ContentDisposition -> @Nullable 	public Charset getCharset();1530174524;Return the charset defined in {@literal filename*} parameter, or {@code null} if not defined.;@Nullable_	public Charset getCharset() {_		return this.charset__	};return,the,charset,defined,in,literal,filename,parameter,or,code,null,if,not,defined;nullable,public,charset,get,charset,return,this,charset
ContentDisposition -> @Nullable 	public Charset getCharset();1530174524;Return the charset defined in {@literal filename*} parameter, or {@code null} if not defined.;@Nullable_	public Charset getCharset() {_		return this.charset__	};return,the,charset,defined,in,literal,filename,parameter,or,code,null,if,not,defined;nullable,public,charset,get,charset,return,this,charset
ContentDisposition -> @Nullable 	public Charset getCharset();1530201727;Return the charset defined in {@literal filename*} parameter, or {@code null} if not defined.;@Nullable_	public Charset getCharset() {_		return this.charset__	};return,the,charset,defined,in,literal,filename,parameter,or,code,null,if,not,defined;nullable,public,charset,get,charset,return,this,charset
ContentDisposition -> private ContentDisposition(String type, String name, String filename, Charset charset, Long size);1478563943;Create a {@code ContentDisposition} instance with the specified disposition type_and {@litteral name}, {@litteral filename} (encoded with the specified {@link Charset}_if any) and {@litteral size} parameter values.;private ContentDisposition(String type, String name, String filename, Charset charset, Long size) {_		this.type = type__		this.name = name__		this.filename = filename__		this.charset = charset__		this.size = size__	};create,a,code,content,disposition,instance,with,the,specified,disposition,type,and,litteral,name,litteral,filename,encoded,with,the,specified,link,charset,if,any,and,litteral,size,parameter,values;private,content,disposition,string,type,string,name,string,filename,charset,charset,long,size,this,type,type,this,name,name,this,filename,filename,this,charset,charset,this,size,size
ContentDisposition -> private ContentDisposition(String type, String name, String filename, Charset charset, Long size);1485382770;Private constructor. See static factory methods in this class.;private ContentDisposition(String type, String name, String filename, Charset charset, Long size) {_		this.type = type__		this.name = name__		this.filename = filename__		this.charset = charset__		this.size = size__	};private,constructor,see,static,factory,methods,in,this,class;private,content,disposition,string,type,string,name,string,filename,charset,charset,long,size,this,type,type,this,name,name,this,filename,filename,this,charset,charset,this,size,size
ContentDisposition -> private ContentDisposition(String type, String name, String filename, Charset charset, Long size);1485810955;Private constructor. See static factory methods in this class.;private ContentDisposition(String type, String name, String filename, Charset charset, Long size) {_		this.type = type__		this.name = name__		this.filename = filename__		this.charset = charset__		this.size = size__	};private,constructor,see,static,factory,methods,in,this,class;private,content,disposition,string,type,string,name,string,filename,charset,charset,long,size,this,type,type,this,name,name,this,filename,filename,this,charset,charset,this,size,size
ContentDisposition -> private ContentDisposition(String type, String name, String filename, Charset charset, Long size);1495868221;Private constructor. See static factory methods in this class.;private ContentDisposition(String type, String name, String filename, Charset charset, Long size) {_		this.type = type__		this.name = name__		this.filename = filename__		this.charset = charset__		this.size = size__	};private,constructor,see,static,factory,methods,in,this,class;private,content,disposition,string,type,string,name,string,filename,charset,charset,long,size,this,type,type,this,name,name,this,filename,filename,this,charset,charset,this,size,size
ContentDisposition -> private static String encodeHeaderFieldParam(String input, Charset charset);1478563943;Encode the given header field param as describe in RFC 5987._@param input the header field param_@param charset the charset of the header field param string,_only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported_@return the encoded header field param_@see <a href="https://tools.ietf.org/html/rfc5987">RFC 5987</a>;private static String encodeHeaderFieldParam(String input, Charset charset) {_		Assert.notNull(input, "Input String should not be null")__		Assert.notNull(charset, "Charset should not be null")__		if (StandardCharsets.US_ASCII.equals(charset)) {_			return input__		}_		Assert.isTrue(StandardCharsets.UTF_8.equals(charset) || StandardCharsets.ISO_8859_1.equals(charset),_				"Charset should be UTF-8 or ISO-8859-1")__		byte[] source = input.getBytes(charset)__		int len = source.length__		StringBuilder sb = new StringBuilder(len << 1)__		sb.append(charset.name())__		sb.append("''")__		for (byte b : source) {_			if (isRFC5987AttrChar(b)) {_				sb.append((char) b)__			}_			else {_				sb.append('%')__				char hex1 = Character.toUpperCase(Character.forDigit((b >> 4) & 0xF, 16))__				char hex2 = Character.toUpperCase(Character.forDigit(b & 0xF, 16))__				sb.append(hex1)__				sb.append(hex2)__			}_		}_		return sb.toString()__	};encode,the,given,header,field,param,as,describe,in,rfc,5987,param,input,the,header,field,param,param,charset,the,charset,of,the,header,field,param,string,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,return,the,encoded,header,field,param,see,a,href,https,tools,ietf,org,html,rfc5987,rfc,5987,a;private,static,string,encode,header,field,param,string,input,charset,charset,assert,not,null,input,input,string,should,not,be,null,assert,not,null,charset,charset,should,not,be,null,if,standard,charsets,equals,charset,return,input,assert,is,true,standard,charsets,equals,charset,standard,charsets,equals,charset,charset,should,be,utf,8,or,iso,8859,1,byte,source,input,get,bytes,charset,int,len,source,length,string,builder,sb,new,string,builder,len,1,sb,append,charset,name,sb,append,for,byte,b,source,if,is,rfc5987attr,char,b,sb,append,char,b,else,sb,append,char,hex1,character,to,upper,case,character,for,digit,b,4,0x,f,16,char,hex2,character,to,upper,case,character,for,digit,b,0x,f,16,sb,append,hex1,sb,append,hex2,return,sb,to,string
ContentDisposition -> private static String encodeHeaderFieldParam(String input, Charset charset);1485382770;Encode the given header field param as describe in RFC 5987._@param input the header field param_@param charset the charset of the header field param string,_only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported_@return the encoded header field param_@see <a href="https://tools.ietf.org/html/rfc5987">RFC 5987</a>;private static String encodeHeaderFieldParam(String input, Charset charset) {_		Assert.notNull(input, "Input String should not be null")__		Assert.notNull(charset, "Charset should not be null")__		if (StandardCharsets.US_ASCII.equals(charset)) {_			return input__		}_		Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_				"Charset should be UTF-8 or ISO-8859-1")__		byte[] source = input.getBytes(charset)__		int len = source.length__		StringBuilder sb = new StringBuilder(len << 1)__		sb.append(charset.name())__		sb.append("''")__		for (byte b : source) {_			if (isRFC5987AttrChar(b)) {_				sb.append((char) b)__			}_			else {_				sb.append('%')__				char hex1 = Character.toUpperCase(Character.forDigit((b >> 4) & 0xF, 16))__				char hex2 = Character.toUpperCase(Character.forDigit(b & 0xF, 16))__				sb.append(hex1)__				sb.append(hex2)__			}_		}_		return sb.toString()__	};encode,the,given,header,field,param,as,describe,in,rfc,5987,param,input,the,header,field,param,param,charset,the,charset,of,the,header,field,param,string,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,return,the,encoded,header,field,param,see,a,href,https,tools,ietf,org,html,rfc5987,rfc,5987,a;private,static,string,encode,header,field,param,string,input,charset,charset,assert,not,null,input,input,string,should,not,be,null,assert,not,null,charset,charset,should,not,be,null,if,standard,charsets,equals,charset,return,input,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,byte,source,input,get,bytes,charset,int,len,source,length,string,builder,sb,new,string,builder,len,1,sb,append,charset,name,sb,append,for,byte,b,source,if,is,rfc5987attr,char,b,sb,append,char,b,else,sb,append,char,hex1,character,to,upper,case,character,for,digit,b,4,0x,f,16,char,hex2,character,to,upper,case,character,for,digit,b,0x,f,16,sb,append,hex1,sb,append,hex2,return,sb,to,string
ContentDisposition -> private static String encodeHeaderFieldParam(String input, Charset charset);1485810955;Encode the given header field param as describe in RFC 5987._@param input the header field param_@param charset the charset of the header field param string,_only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported_@return the encoded header field param_@see <a href="https://tools.ietf.org/html/rfc5987">RFC 5987</a>;private static String encodeHeaderFieldParam(String input, Charset charset) {_		Assert.notNull(input, "Input String should not be null")__		Assert.notNull(charset, "Charset should not be null")__		if (StandardCharsets.US_ASCII.equals(charset)) {_			return input__		}_		Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_				"Charset should be UTF-8 or ISO-8859-1")__		byte[] source = input.getBytes(charset)__		int len = source.length__		StringBuilder sb = new StringBuilder(len << 1)__		sb.append(charset.name())__		sb.append("''")__		for (byte b : source) {_			if (isRFC5987AttrChar(b)) {_				sb.append((char) b)__			}_			else {_				sb.append('%')__				char hex1 = Character.toUpperCase(Character.forDigit((b >> 4) & 0xF, 16))__				char hex2 = Character.toUpperCase(Character.forDigit(b & 0xF, 16))__				sb.append(hex1)__				sb.append(hex2)__			}_		}_		return sb.toString()__	};encode,the,given,header,field,param,as,describe,in,rfc,5987,param,input,the,header,field,param,param,charset,the,charset,of,the,header,field,param,string,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,return,the,encoded,header,field,param,see,a,href,https,tools,ietf,org,html,rfc5987,rfc,5987,a;private,static,string,encode,header,field,param,string,input,charset,charset,assert,not,null,input,input,string,should,not,be,null,assert,not,null,charset,charset,should,not,be,null,if,standard,charsets,equals,charset,return,input,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,byte,source,input,get,bytes,charset,int,len,source,length,string,builder,sb,new,string,builder,len,1,sb,append,charset,name,sb,append,for,byte,b,source,if,is,rfc5987attr,char,b,sb,append,char,b,else,sb,append,char,hex1,character,to,upper,case,character,for,digit,b,4,0x,f,16,char,hex2,character,to,upper,case,character,for,digit,b,0x,f,16,sb,append,hex1,sb,append,hex2,return,sb,to,string
ContentDisposition -> private static String encodeHeaderFieldParam(String input, Charset charset);1495868221;Encode the given header field param as describe in RFC 5987._@param input the header field param_@param charset the charset of the header field param string,_only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported_@return the encoded header field param_@see <a href="https://tools.ietf.org/html/rfc5987">RFC 5987</a>;private static String encodeHeaderFieldParam(String input, Charset charset) {_		Assert.notNull(input, "Input String should not be null")__		Assert.notNull(charset, "Charset should not be null")__		if (StandardCharsets.US_ASCII.equals(charset)) {_			return input__		}_		Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_				"Charset should be UTF-8 or ISO-8859-1")__		byte[] source = input.getBytes(charset)__		int len = source.length__		StringBuilder sb = new StringBuilder(len << 1)__		sb.append(charset.name())__		sb.append("''")__		for (byte b : source) {_			if (isRFC5987AttrChar(b)) {_				sb.append((char) b)__			}_			else {_				sb.append('%')__				char hex1 = Character.toUpperCase(Character.forDigit((b >> 4) & 0xF, 16))__				char hex2 = Character.toUpperCase(Character.forDigit(b & 0xF, 16))__				sb.append(hex1)__				sb.append(hex2)__			}_		}_		return sb.toString()__	};encode,the,given,header,field,param,as,describe,in,rfc,5987,param,input,the,header,field,param,param,charset,the,charset,of,the,header,field,param,string,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,return,the,encoded,header,field,param,see,a,href,https,tools,ietf,org,html,rfc5987,rfc,5987,a;private,static,string,encode,header,field,param,string,input,charset,charset,assert,not,null,input,input,string,should,not,be,null,assert,not,null,charset,charset,should,not,be,null,if,standard,charsets,equals,charset,return,input,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,byte,source,input,get,bytes,charset,int,len,source,length,string,builder,sb,new,string,builder,len,1,sb,append,charset,name,sb,append,for,byte,b,source,if,is,rfc5987attr,char,b,sb,append,char,b,else,sb,append,char,hex1,character,to,upper,case,character,for,digit,b,4,0x,f,16,char,hex2,character,to,upper,case,character,for,digit,b,0x,f,16,sb,append,hex1,sb,append,hex2,return,sb,to,string
ContentDisposition -> private static String encodeHeaderFieldParam(String input, Charset charset);1496259743;Encode the given header field param as describe in RFC 5987._@param input the header field param_@param charset the charset of the header field param string,_only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported_@return the encoded header field param_@see <a href="https://tools.ietf.org/html/rfc5987">RFC 5987</a>;private static String encodeHeaderFieldParam(String input, Charset charset) {_		Assert.notNull(input, "Input String should not be null")__		Assert.notNull(charset, "Charset should not be null")__		if (StandardCharsets.US_ASCII.equals(charset)) {_			return input__		}_		Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_				"Charset should be UTF-8 or ISO-8859-1")__		byte[] source = input.getBytes(charset)__		int len = source.length__		StringBuilder sb = new StringBuilder(len << 1)__		sb.append(charset.name())__		sb.append("''")__		for (byte b : source) {_			if (isRFC5987AttrChar(b)) {_				sb.append((char) b)__			}_			else {_				sb.append('%')__				char hex1 = Character.toUpperCase(Character.forDigit((b >> 4) & 0xF, 16))__				char hex2 = Character.toUpperCase(Character.forDigit(b & 0xF, 16))__				sb.append(hex1)__				sb.append(hex2)__			}_		}_		return sb.toString()__	};encode,the,given,header,field,param,as,describe,in,rfc,5987,param,input,the,header,field,param,param,charset,the,charset,of,the,header,field,param,string,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,return,the,encoded,header,field,param,see,a,href,https,tools,ietf,org,html,rfc5987,rfc,5987,a;private,static,string,encode,header,field,param,string,input,charset,charset,assert,not,null,input,input,string,should,not,be,null,assert,not,null,charset,charset,should,not,be,null,if,standard,charsets,equals,charset,return,input,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,byte,source,input,get,bytes,charset,int,len,source,length,string,builder,sb,new,string,builder,len,1,sb,append,charset,name,sb,append,for,byte,b,source,if,is,rfc5987attr,char,b,sb,append,char,b,else,sb,append,char,hex1,character,to,upper,case,character,for,digit,b,4,0x,f,16,char,hex2,character,to,upper,case,character,for,digit,b,0x,f,16,sb,append,hex1,sb,append,hex2,return,sb,to,string
ContentDisposition -> private static String encodeHeaderFieldParam(String input, Charset charset);1496837955;Encode the given header field param as describe in RFC 5987._@param input the header field param_@param charset the charset of the header field param string,_only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported_@return the encoded header field param_@see <a href="https://tools.ietf.org/html/rfc5987">RFC 5987</a>;private static String encodeHeaderFieldParam(String input, Charset charset) {_		Assert.notNull(input, "Input String should not be null")__		Assert.notNull(charset, "Charset should not be null")__		if (StandardCharsets.US_ASCII.equals(charset)) {_			return input__		}_		Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_				"Charset should be UTF-8 or ISO-8859-1")__		byte[] source = input.getBytes(charset)__		int len = source.length__		StringBuilder sb = new StringBuilder(len << 1)__		sb.append(charset.name())__		sb.append("''")__		for (byte b : source) {_			if (isRFC5987AttrChar(b)) {_				sb.append((char) b)__			}_			else {_				sb.append('%')__				char hex1 = Character.toUpperCase(Character.forDigit((b >> 4) & 0xF, 16))__				char hex2 = Character.toUpperCase(Character.forDigit(b & 0xF, 16))__				sb.append(hex1)__				sb.append(hex2)__			}_		}_		return sb.toString()__	};encode,the,given,header,field,param,as,describe,in,rfc,5987,param,input,the,header,field,param,param,charset,the,charset,of,the,header,field,param,string,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,return,the,encoded,header,field,param,see,a,href,https,tools,ietf,org,html,rfc5987,rfc,5987,a;private,static,string,encode,header,field,param,string,input,charset,charset,assert,not,null,input,input,string,should,not,be,null,assert,not,null,charset,charset,should,not,be,null,if,standard,charsets,equals,charset,return,input,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,byte,source,input,get,bytes,charset,int,len,source,length,string,builder,sb,new,string,builder,len,1,sb,append,charset,name,sb,append,for,byte,b,source,if,is,rfc5987attr,char,b,sb,append,char,b,else,sb,append,char,hex1,character,to,upper,case,character,for,digit,b,4,0x,f,16,char,hex2,character,to,upper,case,character,for,digit,b,0x,f,16,sb,append,hex1,sb,append,hex2,return,sb,to,string
ContentDisposition -> private static String encodeHeaderFieldParam(String input, Charset charset);1497359868;Encode the given header field param as describe in RFC 5987._@param input the header field param_@param charset the charset of the header field param string,_only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported_@return the encoded header field param_@see <a href="https://tools.ietf.org/html/rfc5987">RFC 5987</a>;private static String encodeHeaderFieldParam(String input, Charset charset) {_		Assert.notNull(input, "Input String should not be null")__		Assert.notNull(charset, "Charset should not be null")__		if (StandardCharsets.US_ASCII.equals(charset)) {_			return input__		}_		Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_				"Charset should be UTF-8 or ISO-8859-1")__		byte[] source = input.getBytes(charset)__		int len = source.length__		StringBuilder sb = new StringBuilder(len << 1)__		sb.append(charset.name())__		sb.append("''")__		for (byte b : source) {_			if (isRFC5987AttrChar(b)) {_				sb.append((char) b)__			}_			else {_				sb.append('%')__				char hex1 = Character.toUpperCase(Character.forDigit((b >> 4) & 0xF, 16))__				char hex2 = Character.toUpperCase(Character.forDigit(b & 0xF, 16))__				sb.append(hex1)__				sb.append(hex2)__			}_		}_		return sb.toString()__	};encode,the,given,header,field,param,as,describe,in,rfc,5987,param,input,the,header,field,param,param,charset,the,charset,of,the,header,field,param,string,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,return,the,encoded,header,field,param,see,a,href,https,tools,ietf,org,html,rfc5987,rfc,5987,a;private,static,string,encode,header,field,param,string,input,charset,charset,assert,not,null,input,input,string,should,not,be,null,assert,not,null,charset,charset,should,not,be,null,if,standard,charsets,equals,charset,return,input,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,byte,source,input,get,bytes,charset,int,len,source,length,string,builder,sb,new,string,builder,len,1,sb,append,charset,name,sb,append,for,byte,b,source,if,is,rfc5987attr,char,b,sb,append,char,b,else,sb,append,char,hex1,character,to,upper,case,character,for,digit,b,4,0x,f,16,char,hex2,character,to,upper,case,character,for,digit,b,0x,f,16,sb,append,hex1,sb,append,hex2,return,sb,to,string
ContentDisposition -> private static String encodeHeaderFieldParam(String input, Charset charset);1498780456;Encode the given header field param as describe in RFC 5987._@param input the header field param_@param charset the charset of the header field param string,_only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported_@return the encoded header field param_@see <a href="https://tools.ietf.org/html/rfc5987">RFC 5987</a>;private static String encodeHeaderFieldParam(String input, Charset charset) {_		Assert.notNull(input, "Input String should not be null")__		Assert.notNull(charset, "Charset should not be null")__		if (StandardCharsets.US_ASCII.equals(charset)) {_			return input__		}_		Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_				"Charset should be UTF-8 or ISO-8859-1")__		byte[] source = input.getBytes(charset)__		int len = source.length__		StringBuilder sb = new StringBuilder(len << 1)__		sb.append(charset.name())__		sb.append("''")__		for (byte b : source) {_			if (isRFC5987AttrChar(b)) {_				sb.append((char) b)__			}_			else {_				sb.append('%')__				char hex1 = Character.toUpperCase(Character.forDigit((b >> 4) & 0xF, 16))__				char hex2 = Character.toUpperCase(Character.forDigit(b & 0xF, 16))__				sb.append(hex1)__				sb.append(hex2)__			}_		}_		return sb.toString()__	};encode,the,given,header,field,param,as,describe,in,rfc,5987,param,input,the,header,field,param,param,charset,the,charset,of,the,header,field,param,string,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,return,the,encoded,header,field,param,see,a,href,https,tools,ietf,org,html,rfc5987,rfc,5987,a;private,static,string,encode,header,field,param,string,input,charset,charset,assert,not,null,input,input,string,should,not,be,null,assert,not,null,charset,charset,should,not,be,null,if,standard,charsets,equals,charset,return,input,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,byte,source,input,get,bytes,charset,int,len,source,length,string,builder,sb,new,string,builder,len,1,sb,append,charset,name,sb,append,for,byte,b,source,if,is,rfc5987attr,char,b,sb,append,char,b,else,sb,append,char,hex1,character,to,upper,case,character,for,digit,b,4,0x,f,16,char,hex2,character,to,upper,case,character,for,digit,b,0x,f,16,sb,append,hex1,sb,append,hex2,return,sb,to,string
ContentDisposition -> private static String encodeHeaderFieldParam(String input, Charset charset);1500565799;Encode the given header field param as describe in RFC 5987._@param input the header field param_@param charset the charset of the header field param string,_only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported_@return the encoded header field param_@see <a href="https://tools.ietf.org/html/rfc5987">RFC 5987</a>;private static String encodeHeaderFieldParam(String input, Charset charset) {_		Assert.notNull(input, "Input String should not be null")__		Assert.notNull(charset, "Charset should not be null")__		if (StandardCharsets.US_ASCII.equals(charset)) {_			return input__		}_		Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_				"Charset should be UTF-8 or ISO-8859-1")__		byte[] source = input.getBytes(charset)__		int len = source.length__		StringBuilder sb = new StringBuilder(len << 1)__		sb.append(charset.name())__		sb.append("''")__		for (byte b : source) {_			if (isRFC5987AttrChar(b)) {_				sb.append((char) b)__			}_			else {_				sb.append('%')__				char hex1 = Character.toUpperCase(Character.forDigit((b >> 4) & 0xF, 16))__				char hex2 = Character.toUpperCase(Character.forDigit(b & 0xF, 16))__				sb.append(hex1)__				sb.append(hex2)__			}_		}_		return sb.toString()__	};encode,the,given,header,field,param,as,describe,in,rfc,5987,param,input,the,header,field,param,param,charset,the,charset,of,the,header,field,param,string,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,return,the,encoded,header,field,param,see,a,href,https,tools,ietf,org,html,rfc5987,rfc,5987,a;private,static,string,encode,header,field,param,string,input,charset,charset,assert,not,null,input,input,string,should,not,be,null,assert,not,null,charset,charset,should,not,be,null,if,standard,charsets,equals,charset,return,input,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,byte,source,input,get,bytes,charset,int,len,source,length,string,builder,sb,new,string,builder,len,1,sb,append,charset,name,sb,append,for,byte,b,source,if,is,rfc5987attr,char,b,sb,append,char,b,else,sb,append,char,hex1,character,to,upper,case,character,for,digit,b,4,0x,f,16,char,hex2,character,to,upper,case,character,for,digit,b,0x,f,16,sb,append,hex1,sb,append,hex2,return,sb,to,string
ContentDisposition -> private static String encodeHeaderFieldParam(String input, Charset charset);1508771649;Encode the given header field param as describe in RFC 5987._@param input the header field param_@param charset the charset of the header field param string,_only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported_@return the encoded header field param_@see <a href="https://tools.ietf.org/html/rfc5987">RFC 5987</a>;private static String encodeHeaderFieldParam(String input, Charset charset) {_		Assert.notNull(input, "Input String should not be null")__		Assert.notNull(charset, "Charset should not be null")__		if (StandardCharsets.US_ASCII.equals(charset)) {_			return input__		}_		Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_				"Charset should be UTF-8 or ISO-8859-1")__		byte[] source = input.getBytes(charset)__		int len = source.length__		StringBuilder sb = new StringBuilder(len << 1)__		sb.append(charset.name())__		sb.append("''")__		for (byte b : source) {_			if (isRFC5987AttrChar(b)) {_				sb.append((char) b)__			}_			else {_				sb.append('%')__				char hex1 = Character.toUpperCase(Character.forDigit((b >> 4) & 0xF, 16))__				char hex2 = Character.toUpperCase(Character.forDigit(b & 0xF, 16))__				sb.append(hex1)__				sb.append(hex2)__			}_		}_		return sb.toString()__	};encode,the,given,header,field,param,as,describe,in,rfc,5987,param,input,the,header,field,param,param,charset,the,charset,of,the,header,field,param,string,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,return,the,encoded,header,field,param,see,a,href,https,tools,ietf,org,html,rfc5987,rfc,5987,a;private,static,string,encode,header,field,param,string,input,charset,charset,assert,not,null,input,input,string,should,not,be,null,assert,not,null,charset,charset,should,not,be,null,if,standard,charsets,equals,charset,return,input,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,byte,source,input,get,bytes,charset,int,len,source,length,string,builder,sb,new,string,builder,len,1,sb,append,charset,name,sb,append,for,byte,b,source,if,is,rfc5987attr,char,b,sb,append,char,b,else,sb,append,char,hex1,character,to,upper,case,character,for,digit,b,4,0x,f,16,char,hex2,character,to,upper,case,character,for,digit,b,0x,f,16,sb,append,hex1,sb,append,hex2,return,sb,to,string
ContentDisposition -> private static String encodeHeaderFieldParam(String input, Charset charset);1508792954;Encode the given header field param as describe in RFC 5987._@param input the header field param_@param charset the charset of the header field param string,_only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported_@return the encoded header field param_@see <a href="https://tools.ietf.org/html/rfc5987">RFC 5987</a>;private static String encodeHeaderFieldParam(String input, Charset charset) {_		Assert.notNull(input, "Input String should not be null")__		Assert.notNull(charset, "Charset should not be null")__		if (StandardCharsets.US_ASCII.equals(charset)) {_			return input__		}_		Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_				"Charset should be UTF-8 or ISO-8859-1")__		byte[] source = input.getBytes(charset)__		int len = source.length__		StringBuilder sb = new StringBuilder(len << 1)__		sb.append(charset.name())__		sb.append("''")__		for (byte b : source) {_			if (isRFC5987AttrChar(b)) {_				sb.append((char) b)__			}_			else {_				sb.append('%')__				char hex1 = Character.toUpperCase(Character.forDigit((b >> 4) & 0xF, 16))__				char hex2 = Character.toUpperCase(Character.forDigit(b & 0xF, 16))__				sb.append(hex1)__				sb.append(hex2)__			}_		}_		return sb.toString()__	};encode,the,given,header,field,param,as,describe,in,rfc,5987,param,input,the,header,field,param,param,charset,the,charset,of,the,header,field,param,string,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,return,the,encoded,header,field,param,see,a,href,https,tools,ietf,org,html,rfc5987,rfc,5987,a;private,static,string,encode,header,field,param,string,input,charset,charset,assert,not,null,input,input,string,should,not,be,null,assert,not,null,charset,charset,should,not,be,null,if,standard,charsets,equals,charset,return,input,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,byte,source,input,get,bytes,charset,int,len,source,length,string,builder,sb,new,string,builder,len,1,sb,append,charset,name,sb,append,for,byte,b,source,if,is,rfc5987attr,char,b,sb,append,char,b,else,sb,append,char,hex1,character,to,upper,case,character,for,digit,b,4,0x,f,16,char,hex2,character,to,upper,case,character,for,digit,b,0x,f,16,sb,append,hex1,sb,append,hex2,return,sb,to,string
ContentDisposition -> private static String encodeHeaderFieldParam(String input, Charset charset);1519588127;Encode the given header field param as describe in RFC 5987._@param input the header field param_@param charset the charset of the header field param string,_only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported_@return the encoded header field param_@see <a href="https://tools.ietf.org/html/rfc5987">RFC 5987</a>;private static String encodeHeaderFieldParam(String input, Charset charset) {_		Assert.notNull(input, "Input String should not be null")__		Assert.notNull(charset, "Charset should not be null")__		if (StandardCharsets.US_ASCII.equals(charset)) {_			return input__		}_		Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_				"Charset should be UTF-8 or ISO-8859-1")__		byte[] source = input.getBytes(charset)__		int len = source.length__		StringBuilder sb = new StringBuilder(len << 1)__		sb.append(charset.name())__		sb.append("''")__		for (byte b : source) {_			if (isRFC5987AttrChar(b)) {_				sb.append((char) b)__			}_			else {_				sb.append('%')__				char hex1 = Character.toUpperCase(Character.forDigit((b >> 4) & 0xF, 16))__				char hex2 = Character.toUpperCase(Character.forDigit(b & 0xF, 16))__				sb.append(hex1)__				sb.append(hex2)__			}_		}_		return sb.toString()__	};encode,the,given,header,field,param,as,describe,in,rfc,5987,param,input,the,header,field,param,param,charset,the,charset,of,the,header,field,param,string,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,return,the,encoded,header,field,param,see,a,href,https,tools,ietf,org,html,rfc5987,rfc,5987,a;private,static,string,encode,header,field,param,string,input,charset,charset,assert,not,null,input,input,string,should,not,be,null,assert,not,null,charset,charset,should,not,be,null,if,standard,charsets,equals,charset,return,input,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,byte,source,input,get,bytes,charset,int,len,source,length,string,builder,sb,new,string,builder,len,1,sb,append,charset,name,sb,append,for,byte,b,source,if,is,rfc5987attr,char,b,sb,append,char,b,else,sb,append,char,hex1,character,to,upper,case,character,for,digit,b,4,0x,f,16,char,hex2,character,to,upper,case,character,for,digit,b,0x,f,16,sb,append,hex1,sb,append,hex2,return,sb,to,string
ContentDisposition -> private static String encodeHeaderFieldParam(String input, Charset charset);1530174524;Encode the given header field param as describe in RFC 5987._@param input the header field param_@param charset the charset of the header field param string,_only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported_@return the encoded header field param_@see <a href="https://tools.ietf.org/html/rfc5987">RFC 5987</a>;private static String encodeHeaderFieldParam(String input, Charset charset) {_		Assert.notNull(input, "Input String should not be null")__		Assert.notNull(charset, "Charset should not be null")__		if (StandardCharsets.US_ASCII.equals(charset)) {_			return input__		}_		Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_				"Charset should be UTF-8 or ISO-8859-1")__		byte[] source = input.getBytes(charset)__		int len = source.length__		StringBuilder sb = new StringBuilder(len << 1)__		sb.append(charset.name())__		sb.append("''")__		for (byte b : source) {_			if (isRFC5987AttrChar(b)) {_				sb.append((char) b)__			}_			else {_				sb.append('%')__				char hex1 = Character.toUpperCase(Character.forDigit((b >> 4) & 0xF, 16))__				char hex2 = Character.toUpperCase(Character.forDigit(b & 0xF, 16))__				sb.append(hex1)__				sb.append(hex2)__			}_		}_		return sb.toString()__	};encode,the,given,header,field,param,as,describe,in,rfc,5987,param,input,the,header,field,param,param,charset,the,charset,of,the,header,field,param,string,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,return,the,encoded,header,field,param,see,a,href,https,tools,ietf,org,html,rfc5987,rfc,5987,a;private,static,string,encode,header,field,param,string,input,charset,charset,assert,not,null,input,input,string,should,not,be,null,assert,not,null,charset,charset,should,not,be,null,if,standard,charsets,equals,charset,return,input,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,byte,source,input,get,bytes,charset,int,len,source,length,string,builder,sb,new,string,builder,len,1,sb,append,charset,name,sb,append,for,byte,b,source,if,is,rfc5987attr,char,b,sb,append,char,b,else,sb,append,char,hex1,character,to,upper,case,character,for,digit,b,4,0x,f,16,char,hex2,character,to,upper,case,character,for,digit,b,0x,f,16,sb,append,hex1,sb,append,hex2,return,sb,to,string
ContentDisposition -> private static String encodeHeaderFieldParam(String input, Charset charset);1530174524;Encode the given header field param as describe in RFC 5987._@param input the header field param_@param charset the charset of the header field param string,_only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported_@return the encoded header field param_@see <a href="https://tools.ietf.org/html/rfc5987">RFC 5987</a>;private static String encodeHeaderFieldParam(String input, Charset charset) {_		Assert.notNull(input, "Input String should not be null")__		Assert.notNull(charset, "Charset should not be null")__		if (StandardCharsets.US_ASCII.equals(charset)) {_			return input__		}_		Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_				"Charset should be UTF-8 or ISO-8859-1")__		byte[] source = input.getBytes(charset)__		int len = source.length__		StringBuilder sb = new StringBuilder(len << 1)__		sb.append(charset.name())__		sb.append("''")__		for (byte b : source) {_			if (isRFC5987AttrChar(b)) {_				sb.append((char) b)__			}_			else {_				sb.append('%')__				char hex1 = Character.toUpperCase(Character.forDigit((b >> 4) & 0xF, 16))__				char hex2 = Character.toUpperCase(Character.forDigit(b & 0xF, 16))__				sb.append(hex1)__				sb.append(hex2)__			}_		}_		return sb.toString()__	};encode,the,given,header,field,param,as,describe,in,rfc,5987,param,input,the,header,field,param,param,charset,the,charset,of,the,header,field,param,string,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,return,the,encoded,header,field,param,see,a,href,https,tools,ietf,org,html,rfc5987,rfc,5987,a;private,static,string,encode,header,field,param,string,input,charset,charset,assert,not,null,input,input,string,should,not,be,null,assert,not,null,charset,charset,should,not,be,null,if,standard,charsets,equals,charset,return,input,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,byte,source,input,get,bytes,charset,int,len,source,length,string,builder,sb,new,string,builder,len,1,sb,append,charset,name,sb,append,for,byte,b,source,if,is,rfc5987attr,char,b,sb,append,char,b,else,sb,append,char,hex1,character,to,upper,case,character,for,digit,b,4,0x,f,16,char,hex2,character,to,upper,case,character,for,digit,b,0x,f,16,sb,append,hex1,sb,append,hex2,return,sb,to,string
ContentDisposition -> private static String encodeHeaderFieldParam(String input, Charset charset);1530174524;Encode the given header field param as describe in RFC 5987._@param input the header field param_@param charset the charset of the header field param string,_only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported_@return the encoded header field param_@see <a href="https://tools.ietf.org/html/rfc5987">RFC 5987</a>;private static String encodeHeaderFieldParam(String input, Charset charset) {_		Assert.notNull(input, "Input String should not be null")__		Assert.notNull(charset, "Charset should not be null")__		if (StandardCharsets.US_ASCII.equals(charset)) {_			return input__		}_		Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_				"Charset should be UTF-8 or ISO-8859-1")__		byte[] source = input.getBytes(charset)__		int len = source.length__		StringBuilder sb = new StringBuilder(len << 1)__		sb.append(charset.name())__		sb.append("''")__		for (byte b : source) {_			if (isRFC5987AttrChar(b)) {_				sb.append((char) b)__			}_			else {_				sb.append('%')__				char hex1 = Character.toUpperCase(Character.forDigit((b >> 4) & 0xF, 16))__				char hex2 = Character.toUpperCase(Character.forDigit(b & 0xF, 16))__				sb.append(hex1)__				sb.append(hex2)__			}_		}_		return sb.toString()__	};encode,the,given,header,field,param,as,describe,in,rfc,5987,param,input,the,header,field,param,param,charset,the,charset,of,the,header,field,param,string,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,return,the,encoded,header,field,param,see,a,href,https,tools,ietf,org,html,rfc5987,rfc,5987,a;private,static,string,encode,header,field,param,string,input,charset,charset,assert,not,null,input,input,string,should,not,be,null,assert,not,null,charset,charset,should,not,be,null,if,standard,charsets,equals,charset,return,input,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,byte,source,input,get,bytes,charset,int,len,source,length,string,builder,sb,new,string,builder,len,1,sb,append,charset,name,sb,append,for,byte,b,source,if,is,rfc5987attr,char,b,sb,append,char,b,else,sb,append,char,hex1,character,to,upper,case,character,for,digit,b,4,0x,f,16,char,hex2,character,to,upper,case,character,for,digit,b,0x,f,16,sb,append,hex1,sb,append,hex2,return,sb,to,string
ContentDisposition -> private static String encodeHeaderFieldParam(String input, Charset charset);1530174524;Encode the given header field param as describe in RFC 5987._@param input the header field param_@param charset the charset of the header field param string,_only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported_@return the encoded header field param_@see <a href="https://tools.ietf.org/html/rfc5987">RFC 5987</a>;private static String encodeHeaderFieldParam(String input, Charset charset) {_		Assert.notNull(input, "Input String should not be null")__		Assert.notNull(charset, "Charset should not be null")__		if (StandardCharsets.US_ASCII.equals(charset)) {_			return input__		}_		Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_				"Charset should be UTF-8 or ISO-8859-1")__		byte[] source = input.getBytes(charset)__		int len = source.length__		StringBuilder sb = new StringBuilder(len << 1)__		sb.append(charset.name())__		sb.append("''")__		for (byte b : source) {_			if (isRFC5987AttrChar(b)) {_				sb.append((char) b)__			}_			else {_				sb.append('%')__				char hex1 = Character.toUpperCase(Character.forDigit((b >> 4) & 0xF, 16))__				char hex2 = Character.toUpperCase(Character.forDigit(b & 0xF, 16))__				sb.append(hex1)__				sb.append(hex2)__			}_		}_		return sb.toString()__	};encode,the,given,header,field,param,as,describe,in,rfc,5987,param,input,the,header,field,param,param,charset,the,charset,of,the,header,field,param,string,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,return,the,encoded,header,field,param,see,a,href,https,tools,ietf,org,html,rfc5987,rfc,5987,a;private,static,string,encode,header,field,param,string,input,charset,charset,assert,not,null,input,input,string,should,not,be,null,assert,not,null,charset,charset,should,not,be,null,if,standard,charsets,equals,charset,return,input,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,byte,source,input,get,bytes,charset,int,len,source,length,string,builder,sb,new,string,builder,len,1,sb,append,charset,name,sb,append,for,byte,b,source,if,is,rfc5987attr,char,b,sb,append,char,b,else,sb,append,char,hex1,character,to,upper,case,character,for,digit,b,4,0x,f,16,char,hex2,character,to,upper,case,character,for,digit,b,0x,f,16,sb,append,hex1,sb,append,hex2,return,sb,to,string
ContentDisposition -> private static String encodeHeaderFieldParam(String input, Charset charset);1530201727;Encode the given header field param as describe in RFC 5987._@param input the header field param_@param charset the charset of the header field param string,_only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported_@return the encoded header field param_@see <a href="https://tools.ietf.org/html/rfc5987">RFC 5987</a>;private static String encodeHeaderFieldParam(String input, Charset charset) {_		Assert.notNull(input, "Input String should not be null")__		Assert.notNull(charset, "Charset should not be null")__		if (StandardCharsets.US_ASCII.equals(charset)) {_			return input__		}_		Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_				"Charset should be UTF-8 or ISO-8859-1")__		byte[] source = input.getBytes(charset)__		int len = source.length__		StringBuilder sb = new StringBuilder(len << 1)__		sb.append(charset.name())__		sb.append("''")__		for (byte b : source) {_			if (isRFC5987AttrChar(b)) {_				sb.append((char) b)__			}_			else {_				sb.append('%')__				char hex1 = Character.toUpperCase(Character.forDigit((b >> 4) & 0xF, 16))__				char hex2 = Character.toUpperCase(Character.forDigit(b & 0xF, 16))__				sb.append(hex1)__				sb.append(hex2)__			}_		}_		return sb.toString()__	};encode,the,given,header,field,param,as,describe,in,rfc,5987,param,input,the,header,field,param,param,charset,the,charset,of,the,header,field,param,string,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,return,the,encoded,header,field,param,see,a,href,https,tools,ietf,org,html,rfc5987,rfc,5987,a;private,static,string,encode,header,field,param,string,input,charset,charset,assert,not,null,input,input,string,should,not,be,null,assert,not,null,charset,charset,should,not,be,null,if,standard,charsets,equals,charset,return,input,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,byte,source,input,get,bytes,charset,int,len,source,length,string,builder,sb,new,string,builder,len,1,sb,append,charset,name,sb,append,for,byte,b,source,if,is,rfc5987attr,char,b,sb,append,char,b,else,sb,append,char,hex1,character,to,upper,case,character,for,digit,b,4,0x,f,16,char,hex2,character,to,upper,case,character,for,digit,b,0x,f,16,sb,append,hex1,sb,append,hex2,return,sb,to,string
ContentDisposition -> @Nullable 	public ZonedDateTime getReadDate();1497359868;Return the value of the {@literal read-date} parameter, or {@code null} if not defined.;@Nullable_	public ZonedDateTime getReadDate() {_		return this.readDate__	};return,the,value,of,the,literal,read,date,parameter,or,code,null,if,not,defined;nullable,public,zoned,date,time,get,read,date,return,this,read,date
ContentDisposition -> @Nullable 	public ZonedDateTime getReadDate();1498780456;Return the value of the {@literal read-date} parameter, or {@code null} if not defined.;@Nullable_	public ZonedDateTime getReadDate() {_		return this.readDate__	};return,the,value,of,the,literal,read,date,parameter,or,code,null,if,not,defined;nullable,public,zoned,date,time,get,read,date,return,this,read,date
ContentDisposition -> @Nullable 	public ZonedDateTime getReadDate();1500565799;Return the value of the {@literal read-date} parameter, or {@code null} if not defined.;@Nullable_	public ZonedDateTime getReadDate() {_		return this.readDate__	};return,the,value,of,the,literal,read,date,parameter,or,code,null,if,not,defined;nullable,public,zoned,date,time,get,read,date,return,this,read,date
ContentDisposition -> @Nullable 	public ZonedDateTime getReadDate();1508771649;Return the value of the {@literal read-date} parameter, or {@code null} if not defined.;@Nullable_	public ZonedDateTime getReadDate() {_		return this.readDate__	};return,the,value,of,the,literal,read,date,parameter,or,code,null,if,not,defined;nullable,public,zoned,date,time,get,read,date,return,this,read,date
ContentDisposition -> @Nullable 	public ZonedDateTime getReadDate();1508792954;Return the value of the {@literal read-date} parameter, or {@code null} if not defined.;@Nullable_	public ZonedDateTime getReadDate() {_		return this.readDate__	};return,the,value,of,the,literal,read,date,parameter,or,code,null,if,not,defined;nullable,public,zoned,date,time,get,read,date,return,this,read,date
ContentDisposition -> @Nullable 	public ZonedDateTime getReadDate();1519588127;Return the value of the {@literal read-date} parameter, or {@code null} if not defined.;@Nullable_	public ZonedDateTime getReadDate() {_		return this.readDate__	};return,the,value,of,the,literal,read,date,parameter,or,code,null,if,not,defined;nullable,public,zoned,date,time,get,read,date,return,this,read,date
ContentDisposition -> @Nullable 	public ZonedDateTime getReadDate();1530174524;Return the value of the {@literal read-date} parameter, or {@code null} if not defined.;@Nullable_	public ZonedDateTime getReadDate() {_		return this.readDate__	};return,the,value,of,the,literal,read,date,parameter,or,code,null,if,not,defined;nullable,public,zoned,date,time,get,read,date,return,this,read,date
ContentDisposition -> @Nullable 	public ZonedDateTime getReadDate();1530174524;Return the value of the {@literal read-date} parameter, or {@code null} if not defined.;@Nullable_	public ZonedDateTime getReadDate() {_		return this.readDate__	};return,the,value,of,the,literal,read,date,parameter,or,code,null,if,not,defined;nullable,public,zoned,date,time,get,read,date,return,this,read,date
ContentDisposition -> @Nullable 	public ZonedDateTime getReadDate();1530174524;Return the value of the {@literal read-date} parameter, or {@code null} if not defined.;@Nullable_	public ZonedDateTime getReadDate() {_		return this.readDate__	};return,the,value,of,the,literal,read,date,parameter,or,code,null,if,not,defined;nullable,public,zoned,date,time,get,read,date,return,this,read,date
ContentDisposition -> @Nullable 	public ZonedDateTime getReadDate();1530174524;Return the value of the {@literal read-date} parameter, or {@code null} if not defined.;@Nullable_	public ZonedDateTime getReadDate() {_		return this.readDate__	};return,the,value,of,the,literal,read,date,parameter,or,code,null,if,not,defined;nullable,public,zoned,date,time,get,read,date,return,this,read,date
ContentDisposition -> @Nullable 	public ZonedDateTime getReadDate();1530201727;Return the value of the {@literal read-date} parameter, or {@code null} if not defined.;@Nullable_	public ZonedDateTime getReadDate() {_		return this.readDate__	};return,the,value,of,the,literal,read,date,parameter,or,code,null,if,not,defined;nullable,public,zoned,date,time,get,read,date,return,this,read,date
ContentDisposition -> @Override 	public String toString();1478563943;Return the header value for this content disposition as defined in RFC 2183._@see #parse(String);@Override_	public String toString() {_		StringBuilder builder = new StringBuilder(this.type)__		if (this.name != null) {_			builder.append("_ name=\"")__			builder.append(this.name).append('\"')__		}_		if (this.filename != null) {_			if(this.charset == null || StandardCharsets.US_ASCII.equals(this.charset)) {_				builder.append("_ filename=\"")__				builder.append(this.filename).append('\"')__			}_			else {_				builder.append("_ filename*=")__				builder.append(encodeHeaderFieldParam(this.filename, this.charset))__			}_		}_		if (this.size != null) {_			builder.append("_ size=")__			builder.append(this.size)__		}_		return builder.toString()__	};return,the,header,value,for,this,content,disposition,as,defined,in,rfc,2183,see,parse,string;override,public,string,to,string,string,builder,builder,new,string,builder,this,type,if,this,name,null,builder,append,name,builder,append,this,name,append,if,this,filename,null,if,this,charset,null,standard,charsets,equals,this,charset,builder,append,filename,builder,append,this,filename,append,else,builder,append,filename,builder,append,encode,header,field,param,this,filename,this,charset,if,this,size,null,builder,append,size,builder,append,this,size,return,builder,to,string
ContentDisposition -> @Override 	public String toString();1485382770;Return the header value for this content disposition as defined in RFC 2183._@see #parse(String);@Override_	public String toString() {_		StringBuilder builder = new StringBuilder(this.type)__		if (this.name != null) {_			builder.append("_ name=\"")__			builder.append(this.name).append('\"')__		}_		if (this.filename != null) {_			if(this.charset == null || StandardCharsets.US_ASCII.equals(this.charset)) {_				builder.append("_ filename=\"")__				builder.append(this.filename).append('\"')__			}_			else {_				builder.append("_ filename*=")__				builder.append(encodeHeaderFieldParam(this.filename, this.charset))__			}_		}_		if (this.size != null) {_			builder.append("_ size=")__			builder.append(this.size)__		}_		return builder.toString()__	};return,the,header,value,for,this,content,disposition,as,defined,in,rfc,2183,see,parse,string;override,public,string,to,string,string,builder,builder,new,string,builder,this,type,if,this,name,null,builder,append,name,builder,append,this,name,append,if,this,filename,null,if,this,charset,null,standard,charsets,equals,this,charset,builder,append,filename,builder,append,this,filename,append,else,builder,append,filename,builder,append,encode,header,field,param,this,filename,this,charset,if,this,size,null,builder,append,size,builder,append,this,size,return,builder,to,string
ContentDisposition -> @Override 	public String toString();1485810955;Return the header value for this content disposition as defined in RFC 2183._@see #parse(String);@Override_	public String toString() {_		StringBuilder builder = new StringBuilder(this.type)__		if (this.name != null) {_			builder.append("_ name=\"")__			builder.append(this.name).append('\"')__		}_		if (this.filename != null) {_			if(this.charset == null || StandardCharsets.US_ASCII.equals(this.charset)) {_				builder.append("_ filename=\"")__				builder.append(this.filename).append('\"')__			}_			else {_				builder.append("_ filename*=")__				builder.append(encodeHeaderFieldParam(this.filename, this.charset))__			}_		}_		if (this.size != null) {_			builder.append("_ size=")__			builder.append(this.size)__		}_		return builder.toString()__	};return,the,header,value,for,this,content,disposition,as,defined,in,rfc,2183,see,parse,string;override,public,string,to,string,string,builder,builder,new,string,builder,this,type,if,this,name,null,builder,append,name,builder,append,this,name,append,if,this,filename,null,if,this,charset,null,standard,charsets,equals,this,charset,builder,append,filename,builder,append,this,filename,append,else,builder,append,filename,builder,append,encode,header,field,param,this,filename,this,charset,if,this,size,null,builder,append,size,builder,append,this,size,return,builder,to,string
ContentDisposition -> @Override 	public String toString();1495868221;Return the header value for this content disposition as defined in RFC 2183._@see #parse(String);@Override_	public String toString() {_		StringBuilder builder = new StringBuilder(this.type)__		if (this.name != null) {_			builder.append("_ name=\"")__			builder.append(this.name).append('\"')__		}_		if (this.filename != null) {_			if(this.charset == null || StandardCharsets.US_ASCII.equals(this.charset)) {_				builder.append("_ filename=\"")__				builder.append(this.filename).append('\"')__			}_			else {_				builder.append("_ filename*=")__				builder.append(encodeHeaderFieldParam(this.filename, this.charset))__			}_		}_		if (this.size != null) {_			builder.append("_ size=")__			builder.append(this.size)__		}_		return builder.toString()__	};return,the,header,value,for,this,content,disposition,as,defined,in,rfc,2183,see,parse,string;override,public,string,to,string,string,builder,builder,new,string,builder,this,type,if,this,name,null,builder,append,name,builder,append,this,name,append,if,this,filename,null,if,this,charset,null,standard,charsets,equals,this,charset,builder,append,filename,builder,append,this,filename,append,else,builder,append,filename,builder,append,encode,header,field,param,this,filename,this,charset,if,this,size,null,builder,append,size,builder,append,this,size,return,builder,to,string
ContentDisposition -> @Override 	public String toString();1496259743;Return the header value for this content disposition as defined in RFC 2183._@see #parse(String);@Override_	public String toString() {_		StringBuilder builder = new StringBuilder(this.type)__		if (this.name != null) {_			builder.append("_ name=\"")__			builder.append(this.name).append('\"')__		}_		if (this.filename != null) {_			if(this.charset == null || StandardCharsets.US_ASCII.equals(this.charset)) {_				builder.append("_ filename=\"")__				builder.append(this.filename).append('\"')__			}_			else {_				builder.append("_ filename*=")__				builder.append(encodeHeaderFieldParam(this.filename, this.charset))__			}_		}_		if (this.size != null) {_			builder.append("_ size=")__			builder.append(this.size)__		}_		return builder.toString()__	};return,the,header,value,for,this,content,disposition,as,defined,in,rfc,2183,see,parse,string;override,public,string,to,string,string,builder,builder,new,string,builder,this,type,if,this,name,null,builder,append,name,builder,append,this,name,append,if,this,filename,null,if,this,charset,null,standard,charsets,equals,this,charset,builder,append,filename,builder,append,this,filename,append,else,builder,append,filename,builder,append,encode,header,field,param,this,filename,this,charset,if,this,size,null,builder,append,size,builder,append,this,size,return,builder,to,string
ContentDisposition -> @Override 	public String toString();1496837955;Return the header value for this content disposition as defined in RFC 2183._@see #parse(String);@Override_	public String toString() {_		StringBuilder sb = new StringBuilder()__		if (this.type != null) {_			sb.append(this.type)__		}_		if (this.name != null) {_			sb.append("_ name=\"")__			sb.append(this.name).append('\"')__		}_		if (this.filename != null) {_			if(this.charset == null || StandardCharsets.US_ASCII.equals(this.charset)) {_				sb.append("_ filename=\"")__				sb.append(this.filename).append('\"')__			}_			else {_				sb.append("_ filename*=")__				sb.append(encodeHeaderFieldParam(this.filename, this.charset))__			}_		}_		if (this.size != null) {_			sb.append("_ size=")__			sb.append(this.size)__		}_		return sb.toString()__	};return,the,header,value,for,this,content,disposition,as,defined,in,rfc,2183,see,parse,string;override,public,string,to,string,string,builder,sb,new,string,builder,if,this,type,null,sb,append,this,type,if,this,name,null,sb,append,name,sb,append,this,name,append,if,this,filename,null,if,this,charset,null,standard,charsets,equals,this,charset,sb,append,filename,sb,append,this,filename,append,else,sb,append,filename,sb,append,encode,header,field,param,this,filename,this,charset,if,this,size,null,sb,append,size,sb,append,this,size,return,sb,to,string
ContentDisposition -> @Override 	public String toString();1497359868;Return the header value for this content disposition as defined in RFC 2183._@see #parse(String);@Override_	public String toString() {_		StringBuilder sb = new StringBuilder()__		if (this.type != null) {_			sb.append(this.type)__		}_		if (this.name != null) {_			sb.append("_ name=\"")__			sb.append(this.name).append('\"')__		}_		if (this.filename != null) {_			if(this.charset == null || StandardCharsets.US_ASCII.equals(this.charset)) {_				sb.append("_ filename=\"")__				sb.append(this.filename).append('\"')__			}_			else {_				sb.append("_ filename*=")__				sb.append(encodeHeaderFieldParam(this.filename, this.charset))__			}_		}_		if (this.size != null) {_			sb.append("_ size=")__			sb.append(this.size)__		}_		if (this.creationDate != null) {_			sb.append("_ creation-date=\"")__			sb.append(RFC_1123_DATE_TIME.format(this.creationDate))__			sb.append('\"')__		}_		if (this.modificationDate != null) {_			sb.append("_ modification-date=\"")__			sb.append(RFC_1123_DATE_TIME.format(this.modificationDate))__			sb.append('\"')__		}_		if (this.readDate != null) {_			sb.append("_ read-date=\"")__			sb.append(RFC_1123_DATE_TIME.format(this.readDate))__			sb.append('\"')__		}_		return sb.toString()__	};return,the,header,value,for,this,content,disposition,as,defined,in,rfc,2183,see,parse,string;override,public,string,to,string,string,builder,sb,new,string,builder,if,this,type,null,sb,append,this,type,if,this,name,null,sb,append,name,sb,append,this,name,append,if,this,filename,null,if,this,charset,null,standard,charsets,equals,this,charset,sb,append,filename,sb,append,this,filename,append,else,sb,append,filename,sb,append,encode,header,field,param,this,filename,this,charset,if,this,size,null,sb,append,size,sb,append,this,size,if,this,creation,date,null,sb,append,creation,date,sb,append,format,this,creation,date,sb,append,if,this,modification,date,null,sb,append,modification,date,sb,append,format,this,modification,date,sb,append,if,this,read,date,null,sb,append,read,date,sb,append,format,this,read,date,sb,append,return,sb,to,string
ContentDisposition -> @Override 	public String toString();1498780456;Return the header value for this content disposition as defined in RFC 2183._@see #parse(String);@Override_	public String toString() {_		StringBuilder sb = new StringBuilder()__		if (this.type != null) {_			sb.append(this.type)__		}_		if (this.name != null) {_			sb.append("_ name=\"")__			sb.append(this.name).append('\"')__		}_		if (this.filename != null) {_			if(this.charset == null || StandardCharsets.US_ASCII.equals(this.charset)) {_				sb.append("_ filename=\"")__				sb.append(this.filename).append('\"')__			}_			else {_				sb.append("_ filename*=")__				sb.append(encodeHeaderFieldParam(this.filename, this.charset))__			}_		}_		if (this.size != null) {_			sb.append("_ size=")__			sb.append(this.size)__		}_		if (this.creationDate != null) {_			sb.append("_ creation-date=\"")__			sb.append(RFC_1123_DATE_TIME.format(this.creationDate))__			sb.append('\"')__		}_		if (this.modificationDate != null) {_			sb.append("_ modification-date=\"")__			sb.append(RFC_1123_DATE_TIME.format(this.modificationDate))__			sb.append('\"')__		}_		if (this.readDate != null) {_			sb.append("_ read-date=\"")__			sb.append(RFC_1123_DATE_TIME.format(this.readDate))__			sb.append('\"')__		}_		return sb.toString()__	};return,the,header,value,for,this,content,disposition,as,defined,in,rfc,2183,see,parse,string;override,public,string,to,string,string,builder,sb,new,string,builder,if,this,type,null,sb,append,this,type,if,this,name,null,sb,append,name,sb,append,this,name,append,if,this,filename,null,if,this,charset,null,standard,charsets,equals,this,charset,sb,append,filename,sb,append,this,filename,append,else,sb,append,filename,sb,append,encode,header,field,param,this,filename,this,charset,if,this,size,null,sb,append,size,sb,append,this,size,if,this,creation,date,null,sb,append,creation,date,sb,append,format,this,creation,date,sb,append,if,this,modification,date,null,sb,append,modification,date,sb,append,format,this,modification,date,sb,append,if,this,read,date,null,sb,append,read,date,sb,append,format,this,read,date,sb,append,return,sb,to,string
ContentDisposition -> @Override 	public String toString();1500565799;Return the header value for this content disposition as defined in RFC 2183._@see #parse(String);@Override_	public String toString() {_		StringBuilder sb = new StringBuilder()__		if (this.type != null) {_			sb.append(this.type)__		}_		if (this.name != null) {_			sb.append("_ name=\"")__			sb.append(this.name).append('\"')__		}_		if (this.filename != null) {_			if(this.charset == null || StandardCharsets.US_ASCII.equals(this.charset)) {_				sb.append("_ filename=\"")__				sb.append(this.filename).append('\"')__			}_			else {_				sb.append("_ filename*=")__				sb.append(encodeHeaderFieldParam(this.filename, this.charset))__			}_		}_		if (this.size != null) {_			sb.append("_ size=")__			sb.append(this.size)__		}_		if (this.creationDate != null) {_			sb.append("_ creation-date=\"")__			sb.append(RFC_1123_DATE_TIME.format(this.creationDate))__			sb.append('\"')__		}_		if (this.modificationDate != null) {_			sb.append("_ modification-date=\"")__			sb.append(RFC_1123_DATE_TIME.format(this.modificationDate))__			sb.append('\"')__		}_		if (this.readDate != null) {_			sb.append("_ read-date=\"")__			sb.append(RFC_1123_DATE_TIME.format(this.readDate))__			sb.append('\"')__		}_		return sb.toString()__	};return,the,header,value,for,this,content,disposition,as,defined,in,rfc,2183,see,parse,string;override,public,string,to,string,string,builder,sb,new,string,builder,if,this,type,null,sb,append,this,type,if,this,name,null,sb,append,name,sb,append,this,name,append,if,this,filename,null,if,this,charset,null,standard,charsets,equals,this,charset,sb,append,filename,sb,append,this,filename,append,else,sb,append,filename,sb,append,encode,header,field,param,this,filename,this,charset,if,this,size,null,sb,append,size,sb,append,this,size,if,this,creation,date,null,sb,append,creation,date,sb,append,format,this,creation,date,sb,append,if,this,modification,date,null,sb,append,modification,date,sb,append,format,this,modification,date,sb,append,if,this,read,date,null,sb,append,read,date,sb,append,format,this,read,date,sb,append,return,sb,to,string
ContentDisposition -> @Override 	public String toString();1508771649;Return the header value for this content disposition as defined in RFC 2183._@see #parse(String);@Override_	public String toString() {_		StringBuilder sb = new StringBuilder()__		if (this.type != null) {_			sb.append(this.type)__		}_		if (this.name != null) {_			sb.append("_ name=\"")__			sb.append(this.name).append('\"')__		}_		if (this.filename != null) {_			if(this.charset == null || StandardCharsets.US_ASCII.equals(this.charset)) {_				sb.append("_ filename=\"")__				sb.append(this.filename).append('\"')__			}_			else {_				sb.append("_ filename*=")__				sb.append(encodeHeaderFieldParam(this.filename, this.charset))__			}_		}_		if (this.size != null) {_			sb.append("_ size=")__			sb.append(this.size)__		}_		if (this.creationDate != null) {_			sb.append("_ creation-date=\"")__			sb.append(RFC_1123_DATE_TIME.format(this.creationDate))__			sb.append('\"')__		}_		if (this.modificationDate != null) {_			sb.append("_ modification-date=\"")__			sb.append(RFC_1123_DATE_TIME.format(this.modificationDate))__			sb.append('\"')__		}_		if (this.readDate != null) {_			sb.append("_ read-date=\"")__			sb.append(RFC_1123_DATE_TIME.format(this.readDate))__			sb.append('\"')__		}_		return sb.toString()__	};return,the,header,value,for,this,content,disposition,as,defined,in,rfc,2183,see,parse,string;override,public,string,to,string,string,builder,sb,new,string,builder,if,this,type,null,sb,append,this,type,if,this,name,null,sb,append,name,sb,append,this,name,append,if,this,filename,null,if,this,charset,null,standard,charsets,equals,this,charset,sb,append,filename,sb,append,this,filename,append,else,sb,append,filename,sb,append,encode,header,field,param,this,filename,this,charset,if,this,size,null,sb,append,size,sb,append,this,size,if,this,creation,date,null,sb,append,creation,date,sb,append,format,this,creation,date,sb,append,if,this,modification,date,null,sb,append,modification,date,sb,append,format,this,modification,date,sb,append,if,this,read,date,null,sb,append,read,date,sb,append,format,this,read,date,sb,append,return,sb,to,string
ContentDisposition -> @Override 	public String toString();1508792954;Return the header value for this content disposition as defined in RFC 2183._@see #parse(String);@Override_	public String toString() {_		StringBuilder sb = new StringBuilder()__		if (this.type != null) {_			sb.append(this.type)__		}_		if (this.name != null) {_			sb.append("_ name=\"")__			sb.append(this.name).append('\"')__		}_		if (this.filename != null) {_			if(this.charset == null || StandardCharsets.US_ASCII.equals(this.charset)) {_				sb.append("_ filename=\"")__				sb.append(this.filename).append('\"')__			}_			else {_				sb.append("_ filename*=")__				sb.append(encodeHeaderFieldParam(this.filename, this.charset))__			}_		}_		if (this.size != null) {_			sb.append("_ size=")__			sb.append(this.size)__		}_		if (this.creationDate != null) {_			sb.append("_ creation-date=\"")__			sb.append(RFC_1123_DATE_TIME.format(this.creationDate))__			sb.append('\"')__		}_		if (this.modificationDate != null) {_			sb.append("_ modification-date=\"")__			sb.append(RFC_1123_DATE_TIME.format(this.modificationDate))__			sb.append('\"')__		}_		if (this.readDate != null) {_			sb.append("_ read-date=\"")__			sb.append(RFC_1123_DATE_TIME.format(this.readDate))__			sb.append('\"')__		}_		return sb.toString()__	};return,the,header,value,for,this,content,disposition,as,defined,in,rfc,2183,see,parse,string;override,public,string,to,string,string,builder,sb,new,string,builder,if,this,type,null,sb,append,this,type,if,this,name,null,sb,append,name,sb,append,this,name,append,if,this,filename,null,if,this,charset,null,standard,charsets,equals,this,charset,sb,append,filename,sb,append,this,filename,append,else,sb,append,filename,sb,append,encode,header,field,param,this,filename,this,charset,if,this,size,null,sb,append,size,sb,append,this,size,if,this,creation,date,null,sb,append,creation,date,sb,append,format,this,creation,date,sb,append,if,this,modification,date,null,sb,append,modification,date,sb,append,format,this,modification,date,sb,append,if,this,read,date,null,sb,append,read,date,sb,append,format,this,read,date,sb,append,return,sb,to,string
ContentDisposition -> @Override 	public String toString();1519588127;Return the header value for this content disposition as defined in RFC 2183._@see #parse(String);@Override_	public String toString() {_		StringBuilder sb = new StringBuilder()__		if (this.type != null) {_			sb.append(this.type)__		}_		if (this.name != null) {_			sb.append("_ name=\"")__			sb.append(this.name).append('\"')__		}_		if (this.filename != null) {_			if(this.charset == null || StandardCharsets.US_ASCII.equals(this.charset)) {_				sb.append("_ filename=\"")__				sb.append(this.filename).append('\"')__			}_			else {_				sb.append("_ filename*=")__				sb.append(encodeHeaderFieldParam(this.filename, this.charset))__			}_		}_		if (this.size != null) {_			sb.append("_ size=")__			sb.append(this.size)__		}_		if (this.creationDate != null) {_			sb.append("_ creation-date=\"")__			sb.append(RFC_1123_DATE_TIME.format(this.creationDate))__			sb.append('\"')__		}_		if (this.modificationDate != null) {_			sb.append("_ modification-date=\"")__			sb.append(RFC_1123_DATE_TIME.format(this.modificationDate))__			sb.append('\"')__		}_		if (this.readDate != null) {_			sb.append("_ read-date=\"")__			sb.append(RFC_1123_DATE_TIME.format(this.readDate))__			sb.append('\"')__		}_		return sb.toString()__	};return,the,header,value,for,this,content,disposition,as,defined,in,rfc,2183,see,parse,string;override,public,string,to,string,string,builder,sb,new,string,builder,if,this,type,null,sb,append,this,type,if,this,name,null,sb,append,name,sb,append,this,name,append,if,this,filename,null,if,this,charset,null,standard,charsets,equals,this,charset,sb,append,filename,sb,append,this,filename,append,else,sb,append,filename,sb,append,encode,header,field,param,this,filename,this,charset,if,this,size,null,sb,append,size,sb,append,this,size,if,this,creation,date,null,sb,append,creation,date,sb,append,format,this,creation,date,sb,append,if,this,modification,date,null,sb,append,modification,date,sb,append,format,this,modification,date,sb,append,if,this,read,date,null,sb,append,read,date,sb,append,format,this,read,date,sb,append,return,sb,to,string
ContentDisposition -> @Override 	public String toString();1530174524;Return the header value for this content disposition as defined in RFC 2183._@see #parse(String);@Override_	public String toString() {_		StringBuilder sb = new StringBuilder()__		if (this.type != null) {_			sb.append(this.type)__		}_		if (this.name != null) {_			sb.append("_ name=\"")__			sb.append(this.name).append('\"')__		}_		if (this.filename != null) {_			if(this.charset == null || StandardCharsets.US_ASCII.equals(this.charset)) {_				sb.append("_ filename=\"")__				sb.append(this.filename).append('\"')__			}_			else {_				sb.append("_ filename*=")__				sb.append(encodeHeaderFieldParam(this.filename, this.charset))__			}_		}_		if (this.size != null) {_			sb.append("_ size=")__			sb.append(this.size)__		}_		if (this.creationDate != null) {_			sb.append("_ creation-date=\"")__			sb.append(RFC_1123_DATE_TIME.format(this.creationDate))__			sb.append('\"')__		}_		if (this.modificationDate != null) {_			sb.append("_ modification-date=\"")__			sb.append(RFC_1123_DATE_TIME.format(this.modificationDate))__			sb.append('\"')__		}_		if (this.readDate != null) {_			sb.append("_ read-date=\"")__			sb.append(RFC_1123_DATE_TIME.format(this.readDate))__			sb.append('\"')__		}_		return sb.toString()__	};return,the,header,value,for,this,content,disposition,as,defined,in,rfc,2183,see,parse,string;override,public,string,to,string,string,builder,sb,new,string,builder,if,this,type,null,sb,append,this,type,if,this,name,null,sb,append,name,sb,append,this,name,append,if,this,filename,null,if,this,charset,null,standard,charsets,equals,this,charset,sb,append,filename,sb,append,this,filename,append,else,sb,append,filename,sb,append,encode,header,field,param,this,filename,this,charset,if,this,size,null,sb,append,size,sb,append,this,size,if,this,creation,date,null,sb,append,creation,date,sb,append,format,this,creation,date,sb,append,if,this,modification,date,null,sb,append,modification,date,sb,append,format,this,modification,date,sb,append,if,this,read,date,null,sb,append,read,date,sb,append,format,this,read,date,sb,append,return,sb,to,string
ContentDisposition -> @Override 	public String toString();1530174524;Return the header value for this content disposition as defined in RFC 2183._@see #parse(String);@Override_	public String toString() {_		StringBuilder sb = new StringBuilder()__		if (this.type != null) {_			sb.append(this.type)__		}_		if (this.name != null) {_			sb.append("_ name=\"")__			sb.append(this.name).append('\"')__		}_		if (this.filename != null) {_			if(this.charset == null || StandardCharsets.US_ASCII.equals(this.charset)) {_				sb.append("_ filename=\"")__				sb.append(this.filename).append('\"')__			}_			else {_				sb.append("_ filename*=")__				sb.append(encodeHeaderFieldParam(this.filename, this.charset))__			}_		}_		if (this.size != null) {_			sb.append("_ size=")__			sb.append(this.size)__		}_		if (this.creationDate != null) {_			sb.append("_ creation-date=\"")__			sb.append(RFC_1123_DATE_TIME.format(this.creationDate))__			sb.append('\"')__		}_		if (this.modificationDate != null) {_			sb.append("_ modification-date=\"")__			sb.append(RFC_1123_DATE_TIME.format(this.modificationDate))__			sb.append('\"')__		}_		if (this.readDate != null) {_			sb.append("_ read-date=\"")__			sb.append(RFC_1123_DATE_TIME.format(this.readDate))__			sb.append('\"')__		}_		return sb.toString()__	};return,the,header,value,for,this,content,disposition,as,defined,in,rfc,2183,see,parse,string;override,public,string,to,string,string,builder,sb,new,string,builder,if,this,type,null,sb,append,this,type,if,this,name,null,sb,append,name,sb,append,this,name,append,if,this,filename,null,if,this,charset,null,standard,charsets,equals,this,charset,sb,append,filename,sb,append,this,filename,append,else,sb,append,filename,sb,append,encode,header,field,param,this,filename,this,charset,if,this,size,null,sb,append,size,sb,append,this,size,if,this,creation,date,null,sb,append,creation,date,sb,append,format,this,creation,date,sb,append,if,this,modification,date,null,sb,append,modification,date,sb,append,format,this,modification,date,sb,append,if,this,read,date,null,sb,append,read,date,sb,append,format,this,read,date,sb,append,return,sb,to,string
ContentDisposition -> @Override 	public String toString();1530174524;Return the header value for this content disposition as defined in RFC 2183._@see #parse(String);@Override_	public String toString() {_		StringBuilder sb = new StringBuilder()__		if (this.type != null) {_			sb.append(this.type)__		}_		if (this.name != null) {_			sb.append("_ name=\"")__			sb.append(this.name).append('\"')__		}_		if (this.filename != null) {_			if(this.charset == null || StandardCharsets.US_ASCII.equals(this.charset)) {_				sb.append("_ filename=\"")__				sb.append(this.filename).append('\"')__			}_			else {_				sb.append("_ filename*=")__				sb.append(encodeHeaderFieldParam(this.filename, this.charset))__			}_		}_		if (this.size != null) {_			sb.append("_ size=")__			sb.append(this.size)__		}_		if (this.creationDate != null) {_			sb.append("_ creation-date=\"")__			sb.append(RFC_1123_DATE_TIME.format(this.creationDate))__			sb.append('\"')__		}_		if (this.modificationDate != null) {_			sb.append("_ modification-date=\"")__			sb.append(RFC_1123_DATE_TIME.format(this.modificationDate))__			sb.append('\"')__		}_		if (this.readDate != null) {_			sb.append("_ read-date=\"")__			sb.append(RFC_1123_DATE_TIME.format(this.readDate))__			sb.append('\"')__		}_		return sb.toString()__	};return,the,header,value,for,this,content,disposition,as,defined,in,rfc,2183,see,parse,string;override,public,string,to,string,string,builder,sb,new,string,builder,if,this,type,null,sb,append,this,type,if,this,name,null,sb,append,name,sb,append,this,name,append,if,this,filename,null,if,this,charset,null,standard,charsets,equals,this,charset,sb,append,filename,sb,append,this,filename,append,else,sb,append,filename,sb,append,encode,header,field,param,this,filename,this,charset,if,this,size,null,sb,append,size,sb,append,this,size,if,this,creation,date,null,sb,append,creation,date,sb,append,format,this,creation,date,sb,append,if,this,modification,date,null,sb,append,modification,date,sb,append,format,this,modification,date,sb,append,if,this,read,date,null,sb,append,read,date,sb,append,format,this,read,date,sb,append,return,sb,to,string
ContentDisposition -> @Override 	public String toString();1530174524;Return the header value for this content disposition as defined in RFC 2183._@see #parse(String);@Override_	public String toString() {_		StringBuilder sb = new StringBuilder()__		if (this.type != null) {_			sb.append(this.type)__		}_		if (this.name != null) {_			sb.append("_ name=\"")__			sb.append(this.name).append('\"')__		}_		if (this.filename != null) {_			if(this.charset == null || StandardCharsets.US_ASCII.equals(this.charset)) {_				sb.append("_ filename=\"")__				sb.append(this.filename).append('\"')__			}_			else {_				sb.append("_ filename*=")__				sb.append(encodeHeaderFieldParam(this.filename, this.charset))__			}_		}_		if (this.size != null) {_			sb.append("_ size=")__			sb.append(this.size)__		}_		if (this.creationDate != null) {_			sb.append("_ creation-date=\"")__			sb.append(RFC_1123_DATE_TIME.format(this.creationDate))__			sb.append('\"')__		}_		if (this.modificationDate != null) {_			sb.append("_ modification-date=\"")__			sb.append(RFC_1123_DATE_TIME.format(this.modificationDate))__			sb.append('\"')__		}_		if (this.readDate != null) {_			sb.append("_ read-date=\"")__			sb.append(RFC_1123_DATE_TIME.format(this.readDate))__			sb.append('\"')__		}_		return sb.toString()__	};return,the,header,value,for,this,content,disposition,as,defined,in,rfc,2183,see,parse,string;override,public,string,to,string,string,builder,sb,new,string,builder,if,this,type,null,sb,append,this,type,if,this,name,null,sb,append,name,sb,append,this,name,append,if,this,filename,null,if,this,charset,null,standard,charsets,equals,this,charset,sb,append,filename,sb,append,this,filename,append,else,sb,append,filename,sb,append,encode,header,field,param,this,filename,this,charset,if,this,size,null,sb,append,size,sb,append,this,size,if,this,creation,date,null,sb,append,creation,date,sb,append,format,this,creation,date,sb,append,if,this,modification,date,null,sb,append,modification,date,sb,append,format,this,modification,date,sb,append,if,this,read,date,null,sb,append,read,date,sb,append,format,this,read,date,sb,append,return,sb,to,string
ContentDisposition -> @Override 	public String toString();1530201727;Return the header value for this content disposition as defined in RFC 2183._@see #parse(String);@Override_	public String toString() {_		StringBuilder sb = new StringBuilder()__		if (this.type != null) {_			sb.append(this.type)__		}_		if (this.name != null) {_			sb.append("_ name=\"")__			sb.append(this.name).append('\"')__		}_		if (this.filename != null) {_			if (this.charset == null || StandardCharsets.US_ASCII.equals(this.charset)) {_				sb.append("_ filename=\"")__				sb.append(this.filename).append('\"')__			}_			else {_				sb.append("_ filename*=")__				sb.append(encodeHeaderFieldParam(this.filename, this.charset))__			}_		}_		if (this.size != null) {_			sb.append("_ size=")__			sb.append(this.size)__		}_		if (this.creationDate != null) {_			sb.append("_ creation-date=\"")__			sb.append(RFC_1123_DATE_TIME.format(this.creationDate))__			sb.append('\"')__		}_		if (this.modificationDate != null) {_			sb.append("_ modification-date=\"")__			sb.append(RFC_1123_DATE_TIME.format(this.modificationDate))__			sb.append('\"')__		}_		if (this.readDate != null) {_			sb.append("_ read-date=\"")__			sb.append(RFC_1123_DATE_TIME.format(this.readDate))__			sb.append('\"')__		}_		return sb.toString()__	};return,the,header,value,for,this,content,disposition,as,defined,in,rfc,2183,see,parse,string;override,public,string,to,string,string,builder,sb,new,string,builder,if,this,type,null,sb,append,this,type,if,this,name,null,sb,append,name,sb,append,this,name,append,if,this,filename,null,if,this,charset,null,standard,charsets,equals,this,charset,sb,append,filename,sb,append,this,filename,append,else,sb,append,filename,sb,append,encode,header,field,param,this,filename,this,charset,if,this,size,null,sb,append,size,sb,append,this,size,if,this,creation,date,null,sb,append,creation,date,sb,append,format,this,creation,date,sb,append,if,this,modification,date,null,sb,append,modification,date,sb,append,format,this,modification,date,sb,append,if,this,read,date,null,sb,append,read,date,sb,append,format,this,read,date,sb,append,return,sb,to,string
ContentDisposition -> Builder -> Builder name(String name)_;1478563943;Set the value of the {@literal name} parameter;Builder name(String name)_;set,the,value,of,the,literal,name,parameter;builder,name,string,name
ContentDisposition -> Builder -> Builder name(String name)_;1485382770;Set the value of the {@literal name} parameter;Builder name(String name)_;set,the,value,of,the,literal,name,parameter;builder,name,string,name
ContentDisposition -> Builder -> Builder name(String name)_;1485810955;Set the value of the {@literal name} parameter;Builder name(String name)_;set,the,value,of,the,literal,name,parameter;builder,name,string,name
ContentDisposition -> Builder -> Builder name(String name)_;1495868221;Set the value of the {@literal name} parameter;Builder name(String name)_;set,the,value,of,the,literal,name,parameter;builder,name,string,name
ContentDisposition -> Builder -> Builder name(String name)_;1496259743;Set the value of the {@literal name} parameter;Builder name(String name)_;set,the,value,of,the,literal,name,parameter;builder,name,string,name
ContentDisposition -> Builder -> Builder name(String name)_;1496837955;Set the value of the {@literal name} parameter;Builder name(String name)_;set,the,value,of,the,literal,name,parameter;builder,name,string,name
ContentDisposition -> Builder -> Builder name(String name)_;1497359868;Set the value of the {@literal name} parameter;Builder name(String name)_;set,the,value,of,the,literal,name,parameter;builder,name,string,name
ContentDisposition -> Builder -> Builder name(String name)_;1498780456;Set the value of the {@literal name} parameter;Builder name(String name)_;set,the,value,of,the,literal,name,parameter;builder,name,string,name
ContentDisposition -> Builder -> Builder name(String name)_;1500565799;Set the value of the {@literal name} parameter;Builder name(String name)_;set,the,value,of,the,literal,name,parameter;builder,name,string,name
ContentDisposition -> Builder -> Builder name(String name)_;1508771649;Set the value of the {@literal name} parameter;Builder name(String name)_;set,the,value,of,the,literal,name,parameter;builder,name,string,name
ContentDisposition -> Builder -> Builder name(String name)_;1508792954;Set the value of the {@literal name} parameter;Builder name(String name)_;set,the,value,of,the,literal,name,parameter;builder,name,string,name
ContentDisposition -> Builder -> Builder name(String name)_;1519588127;Set the value of the {@literal name} parameter;Builder name(String name)_;set,the,value,of,the,literal,name,parameter;builder,name,string,name
ContentDisposition -> Builder -> Builder name(String name)_;1530174524;Set the value of the {@literal name} parameter.;Builder name(String name)_;set,the,value,of,the,literal,name,parameter;builder,name,string,name
ContentDisposition -> Builder -> Builder name(String name)_;1530174524;Set the value of the {@literal name} parameter.;Builder name(String name)_;set,the,value,of,the,literal,name,parameter;builder,name,string,name
ContentDisposition -> Builder -> Builder name(String name)_;1530174524;Set the value of the {@literal name} parameter.;Builder name(String name)_;set,the,value,of,the,literal,name,parameter;builder,name,string,name
ContentDisposition -> Builder -> Builder name(String name)_;1530174524;Set the value of the {@literal name} parameter.;Builder name(String name)_;set,the,value,of,the,literal,name,parameter;builder,name,string,name
ContentDisposition -> Builder -> Builder name(String name)_;1530201727;Set the value of the {@literal name} parameter.;Builder name(String name)_;set,the,value,of,the,literal,name,parameter;builder,name,string,name
ContentDisposition -> @Nullable 	public Long getSize();1495868221;Return the value of the {@literal size} parameter, or {@code null} if not defined.;@Nullable_	public Long getSize() {_		return this.size__	};return,the,value,of,the,literal,size,parameter,or,code,null,if,not,defined;nullable,public,long,get,size,return,this,size
ContentDisposition -> @Nullable 	public Long getSize();1496259743;Return the value of the {@literal size} parameter, or {@code null} if not defined.;@Nullable_	public Long getSize() {_		return this.size__	};return,the,value,of,the,literal,size,parameter,or,code,null,if,not,defined;nullable,public,long,get,size,return,this,size
ContentDisposition -> @Nullable 	public Long getSize();1496837955;Return the value of the {@literal size} parameter, or {@code null} if not defined.;@Nullable_	public Long getSize() {_		return this.size__	};return,the,value,of,the,literal,size,parameter,or,code,null,if,not,defined;nullable,public,long,get,size,return,this,size
ContentDisposition -> @Nullable 	public Long getSize();1497359868;Return the value of the {@literal size} parameter, or {@code null} if not defined.;@Nullable_	public Long getSize() {_		return this.size__	};return,the,value,of,the,literal,size,parameter,or,code,null,if,not,defined;nullable,public,long,get,size,return,this,size
ContentDisposition -> @Nullable 	public Long getSize();1498780456;Return the value of the {@literal size} parameter, or {@code null} if not defined.;@Nullable_	public Long getSize() {_		return this.size__	};return,the,value,of,the,literal,size,parameter,or,code,null,if,not,defined;nullable,public,long,get,size,return,this,size
ContentDisposition -> @Nullable 	public Long getSize();1500565799;Return the value of the {@literal size} parameter, or {@code null} if not defined.;@Nullable_	public Long getSize() {_		return this.size__	};return,the,value,of,the,literal,size,parameter,or,code,null,if,not,defined;nullable,public,long,get,size,return,this,size
ContentDisposition -> @Nullable 	public Long getSize();1508771649;Return the value of the {@literal size} parameter, or {@code null} if not defined.;@Nullable_	public Long getSize() {_		return this.size__	};return,the,value,of,the,literal,size,parameter,or,code,null,if,not,defined;nullable,public,long,get,size,return,this,size
ContentDisposition -> @Nullable 	public Long getSize();1508792954;Return the value of the {@literal size} parameter, or {@code null} if not defined.;@Nullable_	public Long getSize() {_		return this.size__	};return,the,value,of,the,literal,size,parameter,or,code,null,if,not,defined;nullable,public,long,get,size,return,this,size
ContentDisposition -> @Nullable 	public Long getSize();1519588127;Return the value of the {@literal size} parameter, or {@code null} if not defined.;@Nullable_	public Long getSize() {_		return this.size__	};return,the,value,of,the,literal,size,parameter,or,code,null,if,not,defined;nullable,public,long,get,size,return,this,size
ContentDisposition -> @Nullable 	public Long getSize();1530174524;Return the value of the {@literal size} parameter, or {@code null} if not defined.;@Nullable_	public Long getSize() {_		return this.size__	};return,the,value,of,the,literal,size,parameter,or,code,null,if,not,defined;nullable,public,long,get,size,return,this,size
ContentDisposition -> @Nullable 	public Long getSize();1530174524;Return the value of the {@literal size} parameter, or {@code null} if not defined.;@Nullable_	public Long getSize() {_		return this.size__	};return,the,value,of,the,literal,size,parameter,or,code,null,if,not,defined;nullable,public,long,get,size,return,this,size
ContentDisposition -> @Nullable 	public Long getSize();1530174524;Return the value of the {@literal size} parameter, or {@code null} if not defined.;@Nullable_	public Long getSize() {_		return this.size__	};return,the,value,of,the,literal,size,parameter,or,code,null,if,not,defined;nullable,public,long,get,size,return,this,size
ContentDisposition -> @Nullable 	public Long getSize();1530174524;Return the value of the {@literal size} parameter, or {@code null} if not defined.;@Nullable_	public Long getSize() {_		return this.size__	};return,the,value,of,the,literal,size,parameter,or,code,null,if,not,defined;nullable,public,long,get,size,return,this,size
ContentDisposition -> @Nullable 	public Long getSize();1530201727;Return the value of the {@literal size} parameter, or {@code null} if not defined.;@Nullable_	public Long getSize() {_		return this.size__	};return,the,value,of,the,literal,size,parameter,or,code,null,if,not,defined;nullable,public,long,get,size,return,this,size
ContentDisposition -> public Long getSize();1478563943;Return the value of the {@literal size} parameter, or {@code null} if not defined.;public Long getSize() {_		return this.size__	};return,the,value,of,the,literal,size,parameter,or,code,null,if,not,defined;public,long,get,size,return,this,size
ContentDisposition -> public Long getSize();1485382770;Return the value of the {@literal size} parameter, or {@code null} if not defined.;public Long getSize() {_		return this.size__	};return,the,value,of,the,literal,size,parameter,or,code,null,if,not,defined;public,long,get,size,return,this,size
ContentDisposition -> public Long getSize();1485810955;Return the value of the {@literal size} parameter, or {@code null} if not defined.;public Long getSize() {_		return this.size__	};return,the,value,of,the,literal,size,parameter,or,code,null,if,not,defined;public,long,get,size,return,this,size
ContentDisposition -> public static Builder builder(String type);1478563943;Return a builder for a {@code ContentDisposition}._@param type the disposition type like for example {@literal inline}, {@literal attachment},_or {@literal form-data}_@return a content disposition builder;public static Builder builder(String type) {_		return new BuilderImpl(type)__	};return,a,builder,for,a,code,content,disposition,param,type,the,disposition,type,like,for,example,literal,inline,literal,attachment,or,literal,form,data,return,a,content,disposition,builder;public,static,builder,builder,string,type,return,new,builder,impl,type
ContentDisposition -> public static Builder builder(String type);1485382770;Return a builder for a {@code ContentDisposition}._@param type the disposition type like for example {@literal inline},_{@literal attachment}, or {@literal form-data}_@return the builder;public static Builder builder(String type) {_		return new BuilderImpl(type)__	};return,a,builder,for,a,code,content,disposition,param,type,the,disposition,type,like,for,example,literal,inline,literal,attachment,or,literal,form,data,return,the,builder;public,static,builder,builder,string,type,return,new,builder,impl,type
ContentDisposition -> public static Builder builder(String type);1485810955;Return a builder for a {@code ContentDisposition}._@param type the disposition type like for example {@literal inline},_{@literal attachment}, or {@literal form-data}_@return the builder;public static Builder builder(String type) {_		return new BuilderImpl(type)__	};return,a,builder,for,a,code,content,disposition,param,type,the,disposition,type,like,for,example,literal,inline,literal,attachment,or,literal,form,data,return,the,builder;public,static,builder,builder,string,type,return,new,builder,impl,type
ContentDisposition -> public static Builder builder(String type);1495868221;Return a builder for a {@code ContentDisposition}._@param type the disposition type like for example {@literal inline},_{@literal attachment}, or {@literal form-data}_@return the builder;public static Builder builder(String type) {_		return new BuilderImpl(type)__	};return,a,builder,for,a,code,content,disposition,param,type,the,disposition,type,like,for,example,literal,inline,literal,attachment,or,literal,form,data,return,the,builder;public,static,builder,builder,string,type,return,new,builder,impl,type
ContentDisposition -> public static Builder builder(String type);1496259743;Return a builder for a {@code ContentDisposition}._@param type the disposition type like for example {@literal inline},_{@literal attachment}, or {@literal form-data}_@return the builder;public static Builder builder(String type) {_		return new BuilderImpl(type)__	};return,a,builder,for,a,code,content,disposition,param,type,the,disposition,type,like,for,example,literal,inline,literal,attachment,or,literal,form,data,return,the,builder;public,static,builder,builder,string,type,return,new,builder,impl,type
ContentDisposition -> public static Builder builder(String type);1496837955;Return a builder for a {@code ContentDisposition}._@param type the disposition type like for example {@literal inline},_{@literal attachment}, or {@literal form-data}_@return the builder;public static Builder builder(String type) {_		return new BuilderImpl(type)__	};return,a,builder,for,a,code,content,disposition,param,type,the,disposition,type,like,for,example,literal,inline,literal,attachment,or,literal,form,data,return,the,builder;public,static,builder,builder,string,type,return,new,builder,impl,type
ContentDisposition -> public static Builder builder(String type);1497359868;Return a builder for a {@code ContentDisposition}._@param type the disposition type like for example {@literal inline},_{@literal attachment}, or {@literal form-data}_@return the builder;public static Builder builder(String type) {_		return new BuilderImpl(type)__	};return,a,builder,for,a,code,content,disposition,param,type,the,disposition,type,like,for,example,literal,inline,literal,attachment,or,literal,form,data,return,the,builder;public,static,builder,builder,string,type,return,new,builder,impl,type
ContentDisposition -> public static Builder builder(String type);1498780456;Return a builder for a {@code ContentDisposition}._@param type the disposition type like for example {@literal inline},_{@literal attachment}, or {@literal form-data}_@return the builder;public static Builder builder(String type) {_		return new BuilderImpl(type)__	};return,a,builder,for,a,code,content,disposition,param,type,the,disposition,type,like,for,example,literal,inline,literal,attachment,or,literal,form,data,return,the,builder;public,static,builder,builder,string,type,return,new,builder,impl,type
ContentDisposition -> public static Builder builder(String type);1500565799;Return a builder for a {@code ContentDisposition}._@param type the disposition type like for example {@literal inline},_{@literal attachment}, or {@literal form-data}_@return the builder;public static Builder builder(String type) {_		return new BuilderImpl(type)__	};return,a,builder,for,a,code,content,disposition,param,type,the,disposition,type,like,for,example,literal,inline,literal,attachment,or,literal,form,data,return,the,builder;public,static,builder,builder,string,type,return,new,builder,impl,type
ContentDisposition -> public static Builder builder(String type);1508771649;Return a builder for a {@code ContentDisposition}._@param type the disposition type like for example {@literal inline},_{@literal attachment}, or {@literal form-data}_@return the builder;public static Builder builder(String type) {_		return new BuilderImpl(type)__	};return,a,builder,for,a,code,content,disposition,param,type,the,disposition,type,like,for,example,literal,inline,literal,attachment,or,literal,form,data,return,the,builder;public,static,builder,builder,string,type,return,new,builder,impl,type
ContentDisposition -> public static Builder builder(String type);1508792954;Return a builder for a {@code ContentDisposition}._@param type the disposition type like for example {@literal inline},_{@literal attachment}, or {@literal form-data}_@return the builder;public static Builder builder(String type) {_		return new BuilderImpl(type)__	};return,a,builder,for,a,code,content,disposition,param,type,the,disposition,type,like,for,example,literal,inline,literal,attachment,or,literal,form,data,return,the,builder;public,static,builder,builder,string,type,return,new,builder,impl,type
ContentDisposition -> public static Builder builder(String type);1519588127;Return a builder for a {@code ContentDisposition}._@param type the disposition type like for example {@literal inline},_{@literal attachment}, or {@literal form-data}_@return the builder;public static Builder builder(String type) {_		return new BuilderImpl(type)__	};return,a,builder,for,a,code,content,disposition,param,type,the,disposition,type,like,for,example,literal,inline,literal,attachment,or,literal,form,data,return,the,builder;public,static,builder,builder,string,type,return,new,builder,impl,type
ContentDisposition -> public static Builder builder(String type);1530174524;Return a builder for a {@code ContentDisposition}._@param type the disposition type like for example {@literal inline},_{@literal attachment}, or {@literal form-data}_@return the builder;public static Builder builder(String type) {_		return new BuilderImpl(type)__	};return,a,builder,for,a,code,content,disposition,param,type,the,disposition,type,like,for,example,literal,inline,literal,attachment,or,literal,form,data,return,the,builder;public,static,builder,builder,string,type,return,new,builder,impl,type
ContentDisposition -> public static Builder builder(String type);1530174524;Return a builder for a {@code ContentDisposition}._@param type the disposition type like for example {@literal inline},_{@literal attachment}, or {@literal form-data}_@return the builder;public static Builder builder(String type) {_		return new BuilderImpl(type)__	};return,a,builder,for,a,code,content,disposition,param,type,the,disposition,type,like,for,example,literal,inline,literal,attachment,or,literal,form,data,return,the,builder;public,static,builder,builder,string,type,return,new,builder,impl,type
ContentDisposition -> public static Builder builder(String type);1530174524;Return a builder for a {@code ContentDisposition}._@param type the disposition type like for example {@literal inline},_{@literal attachment}, or {@literal form-data}_@return the builder;public static Builder builder(String type) {_		return new BuilderImpl(type)__	};return,a,builder,for,a,code,content,disposition,param,type,the,disposition,type,like,for,example,literal,inline,literal,attachment,or,literal,form,data,return,the,builder;public,static,builder,builder,string,type,return,new,builder,impl,type
ContentDisposition -> public static Builder builder(String type);1530174524;Return a builder for a {@code ContentDisposition}._@param type the disposition type like for example {@literal inline},_{@literal attachment}, or {@literal form-data}_@return the builder;public static Builder builder(String type) {_		return new BuilderImpl(type)__	};return,a,builder,for,a,code,content,disposition,param,type,the,disposition,type,like,for,example,literal,inline,literal,attachment,or,literal,form,data,return,the,builder;public,static,builder,builder,string,type,return,new,builder,impl,type
ContentDisposition -> public static Builder builder(String type);1530201727;Return a builder for a {@code ContentDisposition}._@param type the disposition type like for example {@literal inline},_{@literal attachment}, or {@literal form-data}_@return the builder;public static Builder builder(String type) {_		return new BuilderImpl(type)__	};return,a,builder,for,a,code,content,disposition,param,type,the,disposition,type,like,for,example,literal,inline,literal,attachment,or,literal,form,data,return,the,builder;public,static,builder,builder,string,type,return,new,builder,impl,type
ContentDisposition -> public String getType();1478563943;Return the disposition type, like for example {@literal inline}, {@literal attachment},_{@literal form-data}, or {@code null} if not defined.;public String getType() {_		return this.type__	};return,the,disposition,type,like,for,example,literal,inline,literal,attachment,literal,form,data,or,code,null,if,not,defined;public,string,get,type,return,this,type
ContentDisposition -> public String getType();1485382770;Return the disposition type, like for example {@literal inline}, {@literal attachment},_{@literal form-data}, or {@code null} if not defined.;public String getType() {_		return this.type__	};return,the,disposition,type,like,for,example,literal,inline,literal,attachment,literal,form,data,or,code,null,if,not,defined;public,string,get,type,return,this,type
ContentDisposition -> public String getType();1485810955;Return the disposition type, like for example {@literal inline}, {@literal attachment},_{@literal form-data}, or {@code null} if not defined.;public String getType() {_		return this.type__	};return,the,disposition,type,like,for,example,literal,inline,literal,attachment,literal,form,data,or,code,null,if,not,defined;public,string,get,type,return,this,type
ContentDisposition -> public String getName();1478563943;Return the value of the {@literal name} parameter, or {@code null} if not defined.;public String getName() {_		return this.name__	};return,the,value,of,the,literal,name,parameter,or,code,null,if,not,defined;public,string,get,name,return,this,name
ContentDisposition -> public String getName();1485382770;Return the value of the {@literal name} parameter, or {@code null} if not defined.;public String getName() {_		return this.name__	};return,the,value,of,the,literal,name,parameter,or,code,null,if,not,defined;public,string,get,name,return,this,name
ContentDisposition -> public String getName();1485810955;Return the value of the {@literal name} parameter, or {@code null} if not defined.;public String getName() {_		return this.name__	};return,the,value,of,the,literal,name,parameter,or,code,null,if,not,defined;public,string,get,name,return,this,name
ContentDisposition -> private static String decodeHeaderFieldParam(String input);1478563943;Decode the given header field param as describe in RFC 5987._<p>Only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported._@param input the header field param_@return the encoded header field param_@see <a href="https://tools.ietf.org/html/rfc5987">RFC 5987</a>;private static String decodeHeaderFieldParam(String input) {_		Assert.notNull(input, "Input String should not be null")__		int firstQuoteIndex = input.indexOf("'")__		int secondQuoteIndex = input.indexOf("'", firstQuoteIndex + 1)__		_		if (firstQuoteIndex == -1 || secondQuoteIndex == -1) {_			return input__		}_		Charset charset = Charset.forName(input.substring(0, firstQuoteIndex))__		Assert.isTrue(StandardCharsets.UTF_8.equals(charset) || StandardCharsets.ISO_8859_1.equals(charset),_				"Charset should be UTF-8 or ISO-8859-1")__		byte[] value = input.substring(secondQuoteIndex + 1, input.length()).getBytes(charset)__		ByteArrayOutputStream bos = new ByteArrayOutputStream()__		int index = 0__		while (index < value.length) {_			byte b = value[index]__			if (isRFC5987AttrChar(b)) {_				bos.write((char) b)__				index++__			}_			else if (b == '%') {_				char[] array = { (char)value[index + 1], (char)value[index + 2]}__				bos.write(Integer.parseInt(String.valueOf(array), 16))__				index+=3__			}_			else {_				throw new IllegalArgumentException("Invalid header field parameter format (as defined in RFC 5987)")__			}_		}_		return new String(bos.toByteArray(), charset)__	};decode,the,given,header,field,param,as,describe,in,rfc,5987,p,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,param,input,the,header,field,param,return,the,encoded,header,field,param,see,a,href,https,tools,ietf,org,html,rfc5987,rfc,5987,a;private,static,string,decode,header,field,param,string,input,assert,not,null,input,input,string,should,not,be,null,int,first,quote,index,input,index,of,int,second,quote,index,input,index,of,first,quote,index,1,if,first,quote,index,1,second,quote,index,1,return,input,charset,charset,charset,for,name,input,substring,0,first,quote,index,assert,is,true,standard,charsets,equals,charset,standard,charsets,equals,charset,charset,should,be,utf,8,or,iso,8859,1,byte,value,input,substring,second,quote,index,1,input,length,get,bytes,charset,byte,array,output,stream,bos,new,byte,array,output,stream,int,index,0,while,index,value,length,byte,b,value,index,if,is,rfc5987attr,char,b,bos,write,char,b,index,else,if,b,char,array,char,value,index,1,char,value,index,2,bos,write,integer,parse,int,string,value,of,array,16,index,3,else,throw,new,illegal,argument,exception,invalid,header,field,parameter,format,as,defined,in,rfc,5987,return,new,string,bos,to,byte,array,charset
ContentDisposition -> private static String decodeHeaderFieldParam(String input);1485382770;Decode the given header field param as describe in RFC 5987._<p>Only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported._@param input the header field param_@return the encoded header field param_@see <a href="https://tools.ietf.org/html/rfc5987">RFC 5987</a>;private static String decodeHeaderFieldParam(String input) {_		Assert.notNull(input, "Input String should not be null")__		int firstQuoteIndex = input.indexOf("'")__		int secondQuoteIndex = input.indexOf("'", firstQuoteIndex + 1)__		_		if (firstQuoteIndex == -1 || secondQuoteIndex == -1) {_			return input__		}_		Charset charset = Charset.forName(input.substring(0, firstQuoteIndex))__		Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_				"Charset should be UTF-8 or ISO-8859-1")__		byte[] value = input.substring(secondQuoteIndex + 1, input.length()).getBytes(charset)__		ByteArrayOutputStream bos = new ByteArrayOutputStream()__		int index = 0__		while (index < value.length) {_			byte b = value[index]__			if (isRFC5987AttrChar(b)) {_				bos.write((char) b)__				index++__			}_			else if (b == '%') {_				char[] array = { (char)value[index + 1], (char)value[index + 2]}__				bos.write(Integer.parseInt(String.valueOf(array), 16))__				index+=3__			}_			else {_				throw new IllegalArgumentException("Invalid header field parameter format (as defined in RFC 5987)")__			}_		}_		return new String(bos.toByteArray(), charset)__	};decode,the,given,header,field,param,as,describe,in,rfc,5987,p,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,param,input,the,header,field,param,return,the,encoded,header,field,param,see,a,href,https,tools,ietf,org,html,rfc5987,rfc,5987,a;private,static,string,decode,header,field,param,string,input,assert,not,null,input,input,string,should,not,be,null,int,first,quote,index,input,index,of,int,second,quote,index,input,index,of,first,quote,index,1,if,first,quote,index,1,second,quote,index,1,return,input,charset,charset,charset,for,name,input,substring,0,first,quote,index,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,byte,value,input,substring,second,quote,index,1,input,length,get,bytes,charset,byte,array,output,stream,bos,new,byte,array,output,stream,int,index,0,while,index,value,length,byte,b,value,index,if,is,rfc5987attr,char,b,bos,write,char,b,index,else,if,b,char,array,char,value,index,1,char,value,index,2,bos,write,integer,parse,int,string,value,of,array,16,index,3,else,throw,new,illegal,argument,exception,invalid,header,field,parameter,format,as,defined,in,rfc,5987,return,new,string,bos,to,byte,array,charset
ContentDisposition -> private static String decodeHeaderFieldParam(String input);1485810955;Decode the given header field param as describe in RFC 5987._<p>Only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported._@param input the header field param_@return the encoded header field param_@see <a href="https://tools.ietf.org/html/rfc5987">RFC 5987</a>;private static String decodeHeaderFieldParam(String input) {_		Assert.notNull(input, "Input String should not be null")__		int firstQuoteIndex = input.indexOf("'")__		int secondQuoteIndex = input.indexOf("'", firstQuoteIndex + 1)__		_		if (firstQuoteIndex == -1 || secondQuoteIndex == -1) {_			return input__		}_		Charset charset = Charset.forName(input.substring(0, firstQuoteIndex))__		Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_				"Charset should be UTF-8 or ISO-8859-1")__		byte[] value = input.substring(secondQuoteIndex + 1, input.length()).getBytes(charset)__		ByteArrayOutputStream bos = new ByteArrayOutputStream()__		int index = 0__		while (index < value.length) {_			byte b = value[index]__			if (isRFC5987AttrChar(b)) {_				bos.write((char) b)__				index++__			}_			else if (b == '%') {_				char[] array = { (char)value[index + 1], (char)value[index + 2]}__				bos.write(Integer.parseInt(String.valueOf(array), 16))__				index+=3__			}_			else {_				throw new IllegalArgumentException("Invalid header field parameter format (as defined in RFC 5987)")__			}_		}_		return new String(bos.toByteArray(), charset)__	};decode,the,given,header,field,param,as,describe,in,rfc,5987,p,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,param,input,the,header,field,param,return,the,encoded,header,field,param,see,a,href,https,tools,ietf,org,html,rfc5987,rfc,5987,a;private,static,string,decode,header,field,param,string,input,assert,not,null,input,input,string,should,not,be,null,int,first,quote,index,input,index,of,int,second,quote,index,input,index,of,first,quote,index,1,if,first,quote,index,1,second,quote,index,1,return,input,charset,charset,charset,for,name,input,substring,0,first,quote,index,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,byte,value,input,substring,second,quote,index,1,input,length,get,bytes,charset,byte,array,output,stream,bos,new,byte,array,output,stream,int,index,0,while,index,value,length,byte,b,value,index,if,is,rfc5987attr,char,b,bos,write,char,b,index,else,if,b,char,array,char,value,index,1,char,value,index,2,bos,write,integer,parse,int,string,value,of,array,16,index,3,else,throw,new,illegal,argument,exception,invalid,header,field,parameter,format,as,defined,in,rfc,5987,return,new,string,bos,to,byte,array,charset
ContentDisposition -> private static String decodeHeaderFieldParam(String input);1495868221;Decode the given header field param as describe in RFC 5987._<p>Only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported._@param input the header field param_@return the encoded header field param_@see <a href="https://tools.ietf.org/html/rfc5987">RFC 5987</a>;private static String decodeHeaderFieldParam(String input) {_		Assert.notNull(input, "Input String should not be null")__		int firstQuoteIndex = input.indexOf("'")__		int secondQuoteIndex = input.indexOf("'", firstQuoteIndex + 1)__		_		if (firstQuoteIndex == -1 || secondQuoteIndex == -1) {_			return input__		}_		Charset charset = Charset.forName(input.substring(0, firstQuoteIndex))__		Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_				"Charset should be UTF-8 or ISO-8859-1")__		byte[] value = input.substring(secondQuoteIndex + 1, input.length()).getBytes(charset)__		ByteArrayOutputStream bos = new ByteArrayOutputStream()__		int index = 0__		while (index < value.length) {_			byte b = value[index]__			if (isRFC5987AttrChar(b)) {_				bos.write((char) b)__				index++__			}_			else if (b == '%') {_				char[] array = { (char)value[index + 1], (char)value[index + 2]}__				bos.write(Integer.parseInt(String.valueOf(array), 16))__				index+=3__			}_			else {_				throw new IllegalArgumentException("Invalid header field parameter format (as defined in RFC 5987)")__			}_		}_		return new String(bos.toByteArray(), charset)__	};decode,the,given,header,field,param,as,describe,in,rfc,5987,p,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,param,input,the,header,field,param,return,the,encoded,header,field,param,see,a,href,https,tools,ietf,org,html,rfc5987,rfc,5987,a;private,static,string,decode,header,field,param,string,input,assert,not,null,input,input,string,should,not,be,null,int,first,quote,index,input,index,of,int,second,quote,index,input,index,of,first,quote,index,1,if,first,quote,index,1,second,quote,index,1,return,input,charset,charset,charset,for,name,input,substring,0,first,quote,index,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,byte,value,input,substring,second,quote,index,1,input,length,get,bytes,charset,byte,array,output,stream,bos,new,byte,array,output,stream,int,index,0,while,index,value,length,byte,b,value,index,if,is,rfc5987attr,char,b,bos,write,char,b,index,else,if,b,char,array,char,value,index,1,char,value,index,2,bos,write,integer,parse,int,string,value,of,array,16,index,3,else,throw,new,illegal,argument,exception,invalid,header,field,parameter,format,as,defined,in,rfc,5987,return,new,string,bos,to,byte,array,charset
ContentDisposition -> private static String decodeHeaderFieldParam(String input);1496259743;Decode the given header field param as describe in RFC 5987._<p>Only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported._@param input the header field param_@return the encoded header field param_@see <a href="https://tools.ietf.org/html/rfc5987">RFC 5987</a>;private static String decodeHeaderFieldParam(String input) {_		Assert.notNull(input, "Input String should not be null")__		int firstQuoteIndex = input.indexOf("'")__		int secondQuoteIndex = input.indexOf("'", firstQuoteIndex + 1)__		_		if (firstQuoteIndex == -1 || secondQuoteIndex == -1) {_			return input__		}_		Charset charset = Charset.forName(input.substring(0, firstQuoteIndex))__		Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_				"Charset should be UTF-8 or ISO-8859-1")__		byte[] value = input.substring(secondQuoteIndex + 1, input.length()).getBytes(charset)__		ByteArrayOutputStream bos = new ByteArrayOutputStream()__		int index = 0__		while (index < value.length) {_			byte b = value[index]__			if (isRFC5987AttrChar(b)) {_				bos.write((char) b)__				index++__			}_			else if (b == '%') {_				char[] array = { (char)value[index + 1], (char)value[index + 2]}__				bos.write(Integer.parseInt(String.valueOf(array), 16))__				index+=3__			}_			else {_				throw new IllegalArgumentException("Invalid header field parameter format (as defined in RFC 5987)")__			}_		}_		return new String(bos.toByteArray(), charset)__	};decode,the,given,header,field,param,as,describe,in,rfc,5987,p,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,param,input,the,header,field,param,return,the,encoded,header,field,param,see,a,href,https,tools,ietf,org,html,rfc5987,rfc,5987,a;private,static,string,decode,header,field,param,string,input,assert,not,null,input,input,string,should,not,be,null,int,first,quote,index,input,index,of,int,second,quote,index,input,index,of,first,quote,index,1,if,first,quote,index,1,second,quote,index,1,return,input,charset,charset,charset,for,name,input,substring,0,first,quote,index,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,byte,value,input,substring,second,quote,index,1,input,length,get,bytes,charset,byte,array,output,stream,bos,new,byte,array,output,stream,int,index,0,while,index,value,length,byte,b,value,index,if,is,rfc5987attr,char,b,bos,write,char,b,index,else,if,b,char,array,char,value,index,1,char,value,index,2,bos,write,integer,parse,int,string,value,of,array,16,index,3,else,throw,new,illegal,argument,exception,invalid,header,field,parameter,format,as,defined,in,rfc,5987,return,new,string,bos,to,byte,array,charset
ContentDisposition -> private static String decodeHeaderFieldParam(String input);1496837955;Decode the given header field param as describe in RFC 5987._<p>Only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported._@param input the header field param_@return the encoded header field param_@see <a href="https://tools.ietf.org/html/rfc5987">RFC 5987</a>;private static String decodeHeaderFieldParam(String input) {_		Assert.notNull(input, "Input String should not be null")__		int firstQuoteIndex = input.indexOf("'")__		int secondQuoteIndex = input.indexOf("'", firstQuoteIndex + 1)__		_		if (firstQuoteIndex == -1 || secondQuoteIndex == -1) {_			return input__		}_		Charset charset = Charset.forName(input.substring(0, firstQuoteIndex))__		Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_				"Charset should be UTF-8 or ISO-8859-1")__		byte[] value = input.substring(secondQuoteIndex + 1, input.length()).getBytes(charset)__		ByteArrayOutputStream bos = new ByteArrayOutputStream()__		int index = 0__		while (index < value.length) {_			byte b = value[index]__			if (isRFC5987AttrChar(b)) {_				bos.write((char) b)__				index++__			}_			else if (b == '%') {_				char[] array = { (char)value[index + 1], (char)value[index + 2]}__				bos.write(Integer.parseInt(String.valueOf(array), 16))__				index+=3__			}_			else {_				throw new IllegalArgumentException("Invalid header field parameter format (as defined in RFC 5987)")__			}_		}_		return new String(bos.toByteArray(), charset)__	};decode,the,given,header,field,param,as,describe,in,rfc,5987,p,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,param,input,the,header,field,param,return,the,encoded,header,field,param,see,a,href,https,tools,ietf,org,html,rfc5987,rfc,5987,a;private,static,string,decode,header,field,param,string,input,assert,not,null,input,input,string,should,not,be,null,int,first,quote,index,input,index,of,int,second,quote,index,input,index,of,first,quote,index,1,if,first,quote,index,1,second,quote,index,1,return,input,charset,charset,charset,for,name,input,substring,0,first,quote,index,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,byte,value,input,substring,second,quote,index,1,input,length,get,bytes,charset,byte,array,output,stream,bos,new,byte,array,output,stream,int,index,0,while,index,value,length,byte,b,value,index,if,is,rfc5987attr,char,b,bos,write,char,b,index,else,if,b,char,array,char,value,index,1,char,value,index,2,bos,write,integer,parse,int,string,value,of,array,16,index,3,else,throw,new,illegal,argument,exception,invalid,header,field,parameter,format,as,defined,in,rfc,5987,return,new,string,bos,to,byte,array,charset
ContentDisposition -> private static String decodeHeaderFieldParam(String input);1497359868;Decode the given header field param as describe in RFC 5987._<p>Only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported._@param input the header field param_@return the encoded header field param_@see <a href="https://tools.ietf.org/html/rfc5987">RFC 5987</a>;private static String decodeHeaderFieldParam(String input) {_		Assert.notNull(input, "Input String should not be null")__		int firstQuoteIndex = input.indexOf("'")__		int secondQuoteIndex = input.indexOf("'", firstQuoteIndex + 1)__		_		if (firstQuoteIndex == -1 || secondQuoteIndex == -1) {_			return input__		}_		Charset charset = Charset.forName(input.substring(0, firstQuoteIndex))__		Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_				"Charset should be UTF-8 or ISO-8859-1")__		byte[] value = input.substring(secondQuoteIndex + 1, input.length()).getBytes(charset)__		ByteArrayOutputStream bos = new ByteArrayOutputStream()__		int index = 0__		while (index < value.length) {_			byte b = value[index]__			if (isRFC5987AttrChar(b)) {_				bos.write((char) b)__				index++__			}_			else if (b == '%') {_				char[] array = { (char)value[index + 1], (char)value[index + 2]}__				bos.write(Integer.parseInt(String.valueOf(array), 16))__				index+=3__			}_			else {_				throw new IllegalArgumentException("Invalid header field parameter format (as defined in RFC 5987)")__			}_		}_		return new String(bos.toByteArray(), charset)__	};decode,the,given,header,field,param,as,describe,in,rfc,5987,p,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,param,input,the,header,field,param,return,the,encoded,header,field,param,see,a,href,https,tools,ietf,org,html,rfc5987,rfc,5987,a;private,static,string,decode,header,field,param,string,input,assert,not,null,input,input,string,should,not,be,null,int,first,quote,index,input,index,of,int,second,quote,index,input,index,of,first,quote,index,1,if,first,quote,index,1,second,quote,index,1,return,input,charset,charset,charset,for,name,input,substring,0,first,quote,index,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,byte,value,input,substring,second,quote,index,1,input,length,get,bytes,charset,byte,array,output,stream,bos,new,byte,array,output,stream,int,index,0,while,index,value,length,byte,b,value,index,if,is,rfc5987attr,char,b,bos,write,char,b,index,else,if,b,char,array,char,value,index,1,char,value,index,2,bos,write,integer,parse,int,string,value,of,array,16,index,3,else,throw,new,illegal,argument,exception,invalid,header,field,parameter,format,as,defined,in,rfc,5987,return,new,string,bos,to,byte,array,charset
ContentDisposition -> private static String decodeHeaderFieldParam(String input);1498780456;Decode the given header field param as describe in RFC 5987._<p>Only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported._@param input the header field param_@return the encoded header field param_@see <a href="https://tools.ietf.org/html/rfc5987">RFC 5987</a>;private static String decodeHeaderFieldParam(String input) {_		Assert.notNull(input, "Input String should not be null")__		int firstQuoteIndex = input.indexOf("'")__		int secondQuoteIndex = input.indexOf("'", firstQuoteIndex + 1)__		_		if (firstQuoteIndex == -1 || secondQuoteIndex == -1) {_			return input__		}_		Charset charset = Charset.forName(input.substring(0, firstQuoteIndex))__		Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_				"Charset should be UTF-8 or ISO-8859-1")__		byte[] value = input.substring(secondQuoteIndex + 1, input.length()).getBytes(charset)__		ByteArrayOutputStream bos = new ByteArrayOutputStream()__		int index = 0__		while (index < value.length) {_			byte b = value[index]__			if (isRFC5987AttrChar(b)) {_				bos.write((char) b)__				index++__			}_			else if (b == '%') {_				char[] array = { (char)value[index + 1], (char)value[index + 2]}__				bos.write(Integer.parseInt(String.valueOf(array), 16))__				index+=3__			}_			else {_				throw new IllegalArgumentException("Invalid header field parameter format (as defined in RFC 5987)")__			}_		}_		return new String(bos.toByteArray(), charset)__	};decode,the,given,header,field,param,as,describe,in,rfc,5987,p,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,param,input,the,header,field,param,return,the,encoded,header,field,param,see,a,href,https,tools,ietf,org,html,rfc5987,rfc,5987,a;private,static,string,decode,header,field,param,string,input,assert,not,null,input,input,string,should,not,be,null,int,first,quote,index,input,index,of,int,second,quote,index,input,index,of,first,quote,index,1,if,first,quote,index,1,second,quote,index,1,return,input,charset,charset,charset,for,name,input,substring,0,first,quote,index,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,byte,value,input,substring,second,quote,index,1,input,length,get,bytes,charset,byte,array,output,stream,bos,new,byte,array,output,stream,int,index,0,while,index,value,length,byte,b,value,index,if,is,rfc5987attr,char,b,bos,write,char,b,index,else,if,b,char,array,char,value,index,1,char,value,index,2,bos,write,integer,parse,int,string,value,of,array,16,index,3,else,throw,new,illegal,argument,exception,invalid,header,field,parameter,format,as,defined,in,rfc,5987,return,new,string,bos,to,byte,array,charset
ContentDisposition -> private static String decodeHeaderFieldParam(String input);1500565799;Decode the given header field param as describe in RFC 5987._<p>Only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported._@param input the header field param_@return the encoded header field param_@see <a href="https://tools.ietf.org/html/rfc5987">RFC 5987</a>;private static String decodeHeaderFieldParam(String input) {_		Assert.notNull(input, "Input String should not be null")__		int firstQuoteIndex = input.indexOf("'")__		int secondQuoteIndex = input.indexOf("'", firstQuoteIndex + 1)__		_		if (firstQuoteIndex == -1 || secondQuoteIndex == -1) {_			return input__		}_		Charset charset = Charset.forName(input.substring(0, firstQuoteIndex))__		Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_				"Charset should be UTF-8 or ISO-8859-1")__		byte[] value = input.substring(secondQuoteIndex + 1, input.length()).getBytes(charset)__		ByteArrayOutputStream bos = new ByteArrayOutputStream()__		int index = 0__		while (index < value.length) {_			byte b = value[index]__			if (isRFC5987AttrChar(b)) {_				bos.write((char) b)__				index++__			}_			else if (b == '%') {_				char[] array = { (char)value[index + 1], (char)value[index + 2]}__				bos.write(Integer.parseInt(String.valueOf(array), 16))__				index+=3__			}_			else {_				throw new IllegalArgumentException("Invalid header field parameter format (as defined in RFC 5987)")__			}_		}_		return new String(bos.toByteArray(), charset)__	};decode,the,given,header,field,param,as,describe,in,rfc,5987,p,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,param,input,the,header,field,param,return,the,encoded,header,field,param,see,a,href,https,tools,ietf,org,html,rfc5987,rfc,5987,a;private,static,string,decode,header,field,param,string,input,assert,not,null,input,input,string,should,not,be,null,int,first,quote,index,input,index,of,int,second,quote,index,input,index,of,first,quote,index,1,if,first,quote,index,1,second,quote,index,1,return,input,charset,charset,charset,for,name,input,substring,0,first,quote,index,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,byte,value,input,substring,second,quote,index,1,input,length,get,bytes,charset,byte,array,output,stream,bos,new,byte,array,output,stream,int,index,0,while,index,value,length,byte,b,value,index,if,is,rfc5987attr,char,b,bos,write,char,b,index,else,if,b,char,array,char,value,index,1,char,value,index,2,bos,write,integer,parse,int,string,value,of,array,16,index,3,else,throw,new,illegal,argument,exception,invalid,header,field,parameter,format,as,defined,in,rfc,5987,return,new,string,bos,to,byte,array,charset
ContentDisposition -> private static String decodeHeaderFieldParam(String input);1508771649;Decode the given header field param as describe in RFC 5987._<p>Only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported._@param input the header field param_@return the encoded header field param_@see <a href="https://tools.ietf.org/html/rfc5987">RFC 5987</a>;private static String decodeHeaderFieldParam(String input) {_		Assert.notNull(input, "Input String should not be null")__		int firstQuoteIndex = input.indexOf("'")__		int secondQuoteIndex = input.indexOf("'", firstQuoteIndex + 1)__		_		if (firstQuoteIndex == -1 || secondQuoteIndex == -1) {_			return input__		}_		Charset charset = Charset.forName(input.substring(0, firstQuoteIndex))__		Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_				"Charset should be UTF-8 or ISO-8859-1")__		byte[] value = input.substring(secondQuoteIndex + 1, input.length()).getBytes(charset)__		ByteArrayOutputStream bos = new ByteArrayOutputStream()__		int index = 0__		while (index < value.length) {_			byte b = value[index]__			if (isRFC5987AttrChar(b)) {_				bos.write((char) b)__				index++__			}_			else if (b == '%') {_				char[] array = { (char)value[index + 1], (char)value[index + 2]}__				bos.write(Integer.parseInt(String.valueOf(array), 16))__				index+=3__			}_			else {_				throw new IllegalArgumentException("Invalid header field parameter format (as defined in RFC 5987)")__			}_		}_		return new String(bos.toByteArray(), charset)__	};decode,the,given,header,field,param,as,describe,in,rfc,5987,p,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,param,input,the,header,field,param,return,the,encoded,header,field,param,see,a,href,https,tools,ietf,org,html,rfc5987,rfc,5987,a;private,static,string,decode,header,field,param,string,input,assert,not,null,input,input,string,should,not,be,null,int,first,quote,index,input,index,of,int,second,quote,index,input,index,of,first,quote,index,1,if,first,quote,index,1,second,quote,index,1,return,input,charset,charset,charset,for,name,input,substring,0,first,quote,index,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,byte,value,input,substring,second,quote,index,1,input,length,get,bytes,charset,byte,array,output,stream,bos,new,byte,array,output,stream,int,index,0,while,index,value,length,byte,b,value,index,if,is,rfc5987attr,char,b,bos,write,char,b,index,else,if,b,char,array,char,value,index,1,char,value,index,2,bos,write,integer,parse,int,string,value,of,array,16,index,3,else,throw,new,illegal,argument,exception,invalid,header,field,parameter,format,as,defined,in,rfc,5987,return,new,string,bos,to,byte,array,charset
ContentDisposition -> private static String decodeHeaderFieldParam(String input);1508792954;Decode the given header field param as describe in RFC 5987._<p>Only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported._@param input the header field param_@return the encoded header field param_@see <a href="https://tools.ietf.org/html/rfc5987">RFC 5987</a>;private static String decodeHeaderFieldParam(String input) {_		Assert.notNull(input, "Input String should not be null")__		int firstQuoteIndex = input.indexOf("'")__		int secondQuoteIndex = input.indexOf("'", firstQuoteIndex + 1)__		_		if (firstQuoteIndex == -1 || secondQuoteIndex == -1) {_			return input__		}_		Charset charset = Charset.forName(input.substring(0, firstQuoteIndex))__		Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_				"Charset should be UTF-8 or ISO-8859-1")__		byte[] value = input.substring(secondQuoteIndex + 1, input.length()).getBytes(charset)__		ByteArrayOutputStream bos = new ByteArrayOutputStream()__		int index = 0__		while (index < value.length) {_			byte b = value[index]__			if (isRFC5987AttrChar(b)) {_				bos.write((char) b)__				index++__			}_			else if (b == '%') {_				char[] array = { (char)value[index + 1], (char)value[index + 2]}__				bos.write(Integer.parseInt(String.valueOf(array), 16))__				index+=3__			}_			else {_				throw new IllegalArgumentException("Invalid header field parameter format (as defined in RFC 5987)")__			}_		}_		return new String(bos.toByteArray(), charset)__	};decode,the,given,header,field,param,as,describe,in,rfc,5987,p,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,param,input,the,header,field,param,return,the,encoded,header,field,param,see,a,href,https,tools,ietf,org,html,rfc5987,rfc,5987,a;private,static,string,decode,header,field,param,string,input,assert,not,null,input,input,string,should,not,be,null,int,first,quote,index,input,index,of,int,second,quote,index,input,index,of,first,quote,index,1,if,first,quote,index,1,second,quote,index,1,return,input,charset,charset,charset,for,name,input,substring,0,first,quote,index,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,byte,value,input,substring,second,quote,index,1,input,length,get,bytes,charset,byte,array,output,stream,bos,new,byte,array,output,stream,int,index,0,while,index,value,length,byte,b,value,index,if,is,rfc5987attr,char,b,bos,write,char,b,index,else,if,b,char,array,char,value,index,1,char,value,index,2,bos,write,integer,parse,int,string,value,of,array,16,index,3,else,throw,new,illegal,argument,exception,invalid,header,field,parameter,format,as,defined,in,rfc,5987,return,new,string,bos,to,byte,array,charset
ContentDisposition -> private static String decodeHeaderFieldParam(String input);1519588127;Decode the given header field param as describe in RFC 5987._<p>Only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported._@param input the header field param_@return the encoded header field param_@see <a href="https://tools.ietf.org/html/rfc5987">RFC 5987</a>;private static String decodeHeaderFieldParam(String input) {_		Assert.notNull(input, "Input String should not be null")__		int firstQuoteIndex = input.indexOf('\'')__		int secondQuoteIndex = input.indexOf('\'', firstQuoteIndex + 1)__		_		if (firstQuoteIndex == -1 || secondQuoteIndex == -1) {_			return input__		}_		Charset charset = Charset.forName(input.substring(0, firstQuoteIndex))__		Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_				"Charset should be UTF-8 or ISO-8859-1")__		byte[] value = input.substring(secondQuoteIndex + 1, input.length()).getBytes(charset)__		ByteArrayOutputStream bos = new ByteArrayOutputStream()__		int index = 0__		while (index < value.length) {_			byte b = value[index]__			if (isRFC5987AttrChar(b)) {_				bos.write((char) b)__				index++__			}_			else if (b == '%') {_				char[] array = { (char)value[index + 1], (char)value[index + 2]}__				bos.write(Integer.parseInt(String.valueOf(array), 16))__				index+=3__			}_			else {_				throw new IllegalArgumentException("Invalid header field parameter format (as defined in RFC 5987)")__			}_		}_		return new String(bos.toByteArray(), charset)__	};decode,the,given,header,field,param,as,describe,in,rfc,5987,p,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,param,input,the,header,field,param,return,the,encoded,header,field,param,see,a,href,https,tools,ietf,org,html,rfc5987,rfc,5987,a;private,static,string,decode,header,field,param,string,input,assert,not,null,input,input,string,should,not,be,null,int,first,quote,index,input,index,of,int,second,quote,index,input,index,of,first,quote,index,1,if,first,quote,index,1,second,quote,index,1,return,input,charset,charset,charset,for,name,input,substring,0,first,quote,index,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,byte,value,input,substring,second,quote,index,1,input,length,get,bytes,charset,byte,array,output,stream,bos,new,byte,array,output,stream,int,index,0,while,index,value,length,byte,b,value,index,if,is,rfc5987attr,char,b,bos,write,char,b,index,else,if,b,char,array,char,value,index,1,char,value,index,2,bos,write,integer,parse,int,string,value,of,array,16,index,3,else,throw,new,illegal,argument,exception,invalid,header,field,parameter,format,as,defined,in,rfc,5987,return,new,string,bos,to,byte,array,charset
ContentDisposition -> private static String decodeHeaderFieldParam(String input);1530174524;Decode the given header field param as describe in RFC 5987._<p>Only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported._@param input the header field param_@return the encoded header field param_@see <a href="https://tools.ietf.org/html/rfc5987">RFC 5987</a>;private static String decodeHeaderFieldParam(String input) {_		Assert.notNull(input, "Input String should not be null")__		int firstQuoteIndex = input.indexOf('\'')__		int secondQuoteIndex = input.indexOf('\'', firstQuoteIndex + 1)__		_		if (firstQuoteIndex == -1 || secondQuoteIndex == -1) {_			return input__		}_		Charset charset = Charset.forName(input.substring(0, firstQuoteIndex))__		Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_				"Charset should be UTF-8 or ISO-8859-1")__		byte[] value = input.substring(secondQuoteIndex + 1, input.length()).getBytes(charset)__		ByteArrayOutputStream bos = new ByteArrayOutputStream()__		int index = 0__		while (index < value.length) {_			byte b = value[index]__			if (isRFC5987AttrChar(b)) {_				bos.write((char) b)__				index++__			}_			else if (b == '%') {_				char[] array = { (char)value[index + 1], (char)value[index + 2]}__				bos.write(Integer.parseInt(String.valueOf(array), 16))__				index+=3__			}_			else {_				throw new IllegalArgumentException("Invalid header field parameter format (as defined in RFC 5987)")__			}_		}_		return new String(bos.toByteArray(), charset)__	};decode,the,given,header,field,param,as,describe,in,rfc,5987,p,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,param,input,the,header,field,param,return,the,encoded,header,field,param,see,a,href,https,tools,ietf,org,html,rfc5987,rfc,5987,a;private,static,string,decode,header,field,param,string,input,assert,not,null,input,input,string,should,not,be,null,int,first,quote,index,input,index,of,int,second,quote,index,input,index,of,first,quote,index,1,if,first,quote,index,1,second,quote,index,1,return,input,charset,charset,charset,for,name,input,substring,0,first,quote,index,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,byte,value,input,substring,second,quote,index,1,input,length,get,bytes,charset,byte,array,output,stream,bos,new,byte,array,output,stream,int,index,0,while,index,value,length,byte,b,value,index,if,is,rfc5987attr,char,b,bos,write,char,b,index,else,if,b,char,array,char,value,index,1,char,value,index,2,bos,write,integer,parse,int,string,value,of,array,16,index,3,else,throw,new,illegal,argument,exception,invalid,header,field,parameter,format,as,defined,in,rfc,5987,return,new,string,bos,to,byte,array,charset
ContentDisposition -> private static String decodeHeaderFieldParam(String input);1530174524;Decode the given header field param as describe in RFC 5987._<p>Only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported._@param input the header field param_@return the encoded header field param_@see <a href="https://tools.ietf.org/html/rfc5987">RFC 5987</a>;private static String decodeHeaderFieldParam(String input) {_		Assert.notNull(input, "Input String should not be null")__		int firstQuoteIndex = input.indexOf('\'')__		int secondQuoteIndex = input.indexOf('\'', firstQuoteIndex + 1)__		_		if (firstQuoteIndex == -1 || secondQuoteIndex == -1) {_			return input__		}_		Charset charset = Charset.forName(input.substring(0, firstQuoteIndex))__		Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_				"Charset should be UTF-8 or ISO-8859-1")__		byte[] value = input.substring(secondQuoteIndex + 1, input.length()).getBytes(charset)__		ByteArrayOutputStream bos = new ByteArrayOutputStream()__		int index = 0__		while (index < value.length) {_			byte b = value[index]__			if (isRFC5987AttrChar(b)) {_				bos.write((char) b)__				index++__			}_			else if (b == '%') {_				char[] array = { (char)value[index + 1], (char)value[index + 2]}__				bos.write(Integer.parseInt(String.valueOf(array), 16))__				index+=3__			}_			else {_				throw new IllegalArgumentException("Invalid header field parameter format (as defined in RFC 5987)")__			}_		}_		return new String(bos.toByteArray(), charset)__	};decode,the,given,header,field,param,as,describe,in,rfc,5987,p,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,param,input,the,header,field,param,return,the,encoded,header,field,param,see,a,href,https,tools,ietf,org,html,rfc5987,rfc,5987,a;private,static,string,decode,header,field,param,string,input,assert,not,null,input,input,string,should,not,be,null,int,first,quote,index,input,index,of,int,second,quote,index,input,index,of,first,quote,index,1,if,first,quote,index,1,second,quote,index,1,return,input,charset,charset,charset,for,name,input,substring,0,first,quote,index,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,byte,value,input,substring,second,quote,index,1,input,length,get,bytes,charset,byte,array,output,stream,bos,new,byte,array,output,stream,int,index,0,while,index,value,length,byte,b,value,index,if,is,rfc5987attr,char,b,bos,write,char,b,index,else,if,b,char,array,char,value,index,1,char,value,index,2,bos,write,integer,parse,int,string,value,of,array,16,index,3,else,throw,new,illegal,argument,exception,invalid,header,field,parameter,format,as,defined,in,rfc,5987,return,new,string,bos,to,byte,array,charset
ContentDisposition -> private static String decodeHeaderFieldParam(String input);1530174524;Decode the given header field param as describe in RFC 5987._<p>Only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported._@param input the header field param_@return the encoded header field param_@see <a href="https://tools.ietf.org/html/rfc5987">RFC 5987</a>;private static String decodeHeaderFieldParam(String input) {_		Assert.notNull(input, "Input String should not be null")__		int firstQuoteIndex = input.indexOf('\'')__		int secondQuoteIndex = input.indexOf('\'', firstQuoteIndex + 1)__		_		if (firstQuoteIndex == -1 || secondQuoteIndex == -1) {_			return input__		}_		Charset charset = Charset.forName(input.substring(0, firstQuoteIndex))__		Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_				"Charset should be UTF-8 or ISO-8859-1")__		byte[] value = input.substring(secondQuoteIndex + 1, input.length()).getBytes(charset)__		ByteArrayOutputStream bos = new ByteArrayOutputStream()__		int index = 0__		while (index < value.length) {_			byte b = value[index]__			if (isRFC5987AttrChar(b)) {_				bos.write((char) b)__				index++__			}_			else if (b == '%') {_				char[] array = { (char)value[index + 1], (char)value[index + 2]}__				bos.write(Integer.parseInt(String.valueOf(array), 16))__				index+=3__			}_			else {_				throw new IllegalArgumentException("Invalid header field parameter format (as defined in RFC 5987)")__			}_		}_		return new String(bos.toByteArray(), charset)__	};decode,the,given,header,field,param,as,describe,in,rfc,5987,p,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,param,input,the,header,field,param,return,the,encoded,header,field,param,see,a,href,https,tools,ietf,org,html,rfc5987,rfc,5987,a;private,static,string,decode,header,field,param,string,input,assert,not,null,input,input,string,should,not,be,null,int,first,quote,index,input,index,of,int,second,quote,index,input,index,of,first,quote,index,1,if,first,quote,index,1,second,quote,index,1,return,input,charset,charset,charset,for,name,input,substring,0,first,quote,index,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,byte,value,input,substring,second,quote,index,1,input,length,get,bytes,charset,byte,array,output,stream,bos,new,byte,array,output,stream,int,index,0,while,index,value,length,byte,b,value,index,if,is,rfc5987attr,char,b,bos,write,char,b,index,else,if,b,char,array,char,value,index,1,char,value,index,2,bos,write,integer,parse,int,string,value,of,array,16,index,3,else,throw,new,illegal,argument,exception,invalid,header,field,parameter,format,as,defined,in,rfc,5987,return,new,string,bos,to,byte,array,charset
ContentDisposition -> private static String decodeHeaderFieldParam(String input);1530174524;Decode the given header field param as describe in RFC 5987._<p>Only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported._@param input the header field param_@return the encoded header field param_@see <a href="https://tools.ietf.org/html/rfc5987">RFC 5987</a>;private static String decodeHeaderFieldParam(String input) {_		Assert.notNull(input, "Input String should not be null")__		int firstQuoteIndex = input.indexOf('\'')__		int secondQuoteIndex = input.indexOf('\'', firstQuoteIndex + 1)__		_		if (firstQuoteIndex == -1 || secondQuoteIndex == -1) {_			return input__		}_		Charset charset = Charset.forName(input.substring(0, firstQuoteIndex))__		Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_				"Charset should be UTF-8 or ISO-8859-1")__		byte[] value = input.substring(secondQuoteIndex + 1, input.length()).getBytes(charset)__		ByteArrayOutputStream bos = new ByteArrayOutputStream()__		int index = 0__		while (index < value.length) {_			byte b = value[index]__			if (isRFC5987AttrChar(b)) {_				bos.write((char) b)__				index++__			}_			else if (b == '%') {_				char[] array = { (char)value[index + 1], (char)value[index + 2]}__				bos.write(Integer.parseInt(String.valueOf(array), 16))__				index+=3__			}_			else {_				throw new IllegalArgumentException("Invalid header field parameter format (as defined in RFC 5987)")__			}_		}_		return new String(bos.toByteArray(), charset)__	};decode,the,given,header,field,param,as,describe,in,rfc,5987,p,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,param,input,the,header,field,param,return,the,encoded,header,field,param,see,a,href,https,tools,ietf,org,html,rfc5987,rfc,5987,a;private,static,string,decode,header,field,param,string,input,assert,not,null,input,input,string,should,not,be,null,int,first,quote,index,input,index,of,int,second,quote,index,input,index,of,first,quote,index,1,if,first,quote,index,1,second,quote,index,1,return,input,charset,charset,charset,for,name,input,substring,0,first,quote,index,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,byte,value,input,substring,second,quote,index,1,input,length,get,bytes,charset,byte,array,output,stream,bos,new,byte,array,output,stream,int,index,0,while,index,value,length,byte,b,value,index,if,is,rfc5987attr,char,b,bos,write,char,b,index,else,if,b,char,array,char,value,index,1,char,value,index,2,bos,write,integer,parse,int,string,value,of,array,16,index,3,else,throw,new,illegal,argument,exception,invalid,header,field,parameter,format,as,defined,in,rfc,5987,return,new,string,bos,to,byte,array,charset
ContentDisposition -> private static String decodeHeaderFieldParam(String input);1530201727;Decode the given header field param as describe in RFC 5987._<p>Only the US-ASCII, UTF-8 and ISO-8859-1 charsets are supported._@param input the header field param_@return the encoded header field param_@see <a href="https://tools.ietf.org/html/rfc5987">RFC 5987</a>;private static String decodeHeaderFieldParam(String input) {_		Assert.notNull(input, "Input String should not be null")__		int firstQuoteIndex = input.indexOf('\'')__		int secondQuoteIndex = input.indexOf('\'', firstQuoteIndex + 1)__		_		if (firstQuoteIndex == -1 || secondQuoteIndex == -1) {_			return input__		}_		Charset charset = Charset.forName(input.substring(0, firstQuoteIndex))__		Assert.isTrue(UTF_8.equals(charset) || ISO_8859_1.equals(charset),_				"Charset should be UTF-8 or ISO-8859-1")__		byte[] value = input.substring(secondQuoteIndex + 1, input.length()).getBytes(charset)__		ByteArrayOutputStream bos = new ByteArrayOutputStream()__		int index = 0__		while (index < value.length) {_			byte b = value[index]__			if (isRFC5987AttrChar(b)) {_				bos.write((char) b)__				index++__			}_			else if (b == '%') {_				char[] array = { (char)value[index + 1], (char)value[index + 2]}__				bos.write(Integer.parseInt(String.valueOf(array), 16))__				index+=3__			}_			else {_				throw new IllegalArgumentException("Invalid header field parameter format (as defined in RFC 5987)")__			}_		}_		return new String(bos.toByteArray(), charset)__	};decode,the,given,header,field,param,as,describe,in,rfc,5987,p,only,the,us,ascii,utf,8,and,iso,8859,1,charsets,are,supported,param,input,the,header,field,param,return,the,encoded,header,field,param,see,a,href,https,tools,ietf,org,html,rfc5987,rfc,5987,a;private,static,string,decode,header,field,param,string,input,assert,not,null,input,input,string,should,not,be,null,int,first,quote,index,input,index,of,int,second,quote,index,input,index,of,first,quote,index,1,if,first,quote,index,1,second,quote,index,1,return,input,charset,charset,charset,for,name,input,substring,0,first,quote,index,assert,is,true,equals,charset,equals,charset,charset,should,be,utf,8,or,iso,8859,1,byte,value,input,substring,second,quote,index,1,input,length,get,bytes,charset,byte,array,output,stream,bos,new,byte,array,output,stream,int,index,0,while,index,value,length,byte,b,value,index,if,is,rfc5987attr,char,b,bos,write,char,b,index,else,if,b,char,array,char,value,index,1,char,value,index,2,bos,write,integer,parse,int,string,value,of,array,16,index,3,else,throw,new,illegal,argument,exception,invalid,header,field,parameter,format,as,defined,in,rfc,5987,return,new,string,bos,to,byte,array,charset
ContentDisposition -> Builder -> Builder modificationDate(ZonedDateTime modificationDate)_;1497359868;Set the value of the {@literal modification-date} parameter.;Builder modificationDate(ZonedDateTime modificationDate)_;set,the,value,of,the,literal,modification,date,parameter;builder,modification,date,zoned,date,time,modification,date
ContentDisposition -> Builder -> Builder modificationDate(ZonedDateTime modificationDate)_;1498780456;Set the value of the {@literal modification-date} parameter.;Builder modificationDate(ZonedDateTime modificationDate)_;set,the,value,of,the,literal,modification,date,parameter;builder,modification,date,zoned,date,time,modification,date
ContentDisposition -> Builder -> Builder modificationDate(ZonedDateTime modificationDate)_;1500565799;Set the value of the {@literal modification-date} parameter.;Builder modificationDate(ZonedDateTime modificationDate)_;set,the,value,of,the,literal,modification,date,parameter;builder,modification,date,zoned,date,time,modification,date
ContentDisposition -> Builder -> Builder modificationDate(ZonedDateTime modificationDate)_;1508771649;Set the value of the {@literal modification-date} parameter.;Builder modificationDate(ZonedDateTime modificationDate)_;set,the,value,of,the,literal,modification,date,parameter;builder,modification,date,zoned,date,time,modification,date
ContentDisposition -> Builder -> Builder modificationDate(ZonedDateTime modificationDate)_;1508792954;Set the value of the {@literal modification-date} parameter.;Builder modificationDate(ZonedDateTime modificationDate)_;set,the,value,of,the,literal,modification,date,parameter;builder,modification,date,zoned,date,time,modification,date
ContentDisposition -> Builder -> Builder modificationDate(ZonedDateTime modificationDate)_;1519588127;Set the value of the {@literal modification-date} parameter.;Builder modificationDate(ZonedDateTime modificationDate)_;set,the,value,of,the,literal,modification,date,parameter;builder,modification,date,zoned,date,time,modification,date
ContentDisposition -> Builder -> Builder modificationDate(ZonedDateTime modificationDate)_;1530174524;Set the value of the {@literal modification-date} parameter.;Builder modificationDate(ZonedDateTime modificationDate)_;set,the,value,of,the,literal,modification,date,parameter;builder,modification,date,zoned,date,time,modification,date
ContentDisposition -> Builder -> Builder modificationDate(ZonedDateTime modificationDate)_;1530174524;Set the value of the {@literal modification-date} parameter.;Builder modificationDate(ZonedDateTime modificationDate)_;set,the,value,of,the,literal,modification,date,parameter;builder,modification,date,zoned,date,time,modification,date
ContentDisposition -> Builder -> Builder modificationDate(ZonedDateTime modificationDate)_;1530174524;Set the value of the {@literal modification-date} parameter.;Builder modificationDate(ZonedDateTime modificationDate)_;set,the,value,of,the,literal,modification,date,parameter;builder,modification,date,zoned,date,time,modification,date
ContentDisposition -> Builder -> Builder modificationDate(ZonedDateTime modificationDate)_;1530174524;Set the value of the {@literal modification-date} parameter.;Builder modificationDate(ZonedDateTime modificationDate)_;set,the,value,of,the,literal,modification,date,parameter;builder,modification,date,zoned,date,time,modification,date
ContentDisposition -> Builder -> Builder modificationDate(ZonedDateTime modificationDate)_;1530201727;Set the value of the {@literal modification-date} parameter.;Builder modificationDate(ZonedDateTime modificationDate)_;set,the,value,of,the,literal,modification,date,parameter;builder,modification,date,zoned,date,time,modification,date
ContentDisposition -> Builder -> Builder creationDate(ZonedDateTime creationDate)_;1497359868;Set the value of the {@literal creation-date} parameter.;Builder creationDate(ZonedDateTime creationDate)_;set,the,value,of,the,literal,creation,date,parameter;builder,creation,date,zoned,date,time,creation,date
ContentDisposition -> Builder -> Builder creationDate(ZonedDateTime creationDate)_;1498780456;Set the value of the {@literal creation-date} parameter.;Builder creationDate(ZonedDateTime creationDate)_;set,the,value,of,the,literal,creation,date,parameter;builder,creation,date,zoned,date,time,creation,date
ContentDisposition -> Builder -> Builder creationDate(ZonedDateTime creationDate)_;1500565799;Set the value of the {@literal creation-date} parameter.;Builder creationDate(ZonedDateTime creationDate)_;set,the,value,of,the,literal,creation,date,parameter;builder,creation,date,zoned,date,time,creation,date
ContentDisposition -> Builder -> Builder creationDate(ZonedDateTime creationDate)_;1508771649;Set the value of the {@literal creation-date} parameter.;Builder creationDate(ZonedDateTime creationDate)_;set,the,value,of,the,literal,creation,date,parameter;builder,creation,date,zoned,date,time,creation,date
ContentDisposition -> Builder -> Builder creationDate(ZonedDateTime creationDate)_;1508792954;Set the value of the {@literal creation-date} parameter.;Builder creationDate(ZonedDateTime creationDate)_;set,the,value,of,the,literal,creation,date,parameter;builder,creation,date,zoned,date,time,creation,date
ContentDisposition -> Builder -> Builder creationDate(ZonedDateTime creationDate)_;1519588127;Set the value of the {@literal creation-date} parameter.;Builder creationDate(ZonedDateTime creationDate)_;set,the,value,of,the,literal,creation,date,parameter;builder,creation,date,zoned,date,time,creation,date
ContentDisposition -> Builder -> Builder creationDate(ZonedDateTime creationDate)_;1530174524;Set the value of the {@literal creation-date} parameter.;Builder creationDate(ZonedDateTime creationDate)_;set,the,value,of,the,literal,creation,date,parameter;builder,creation,date,zoned,date,time,creation,date
ContentDisposition -> Builder -> Builder creationDate(ZonedDateTime creationDate)_;1530174524;Set the value of the {@literal creation-date} parameter.;Builder creationDate(ZonedDateTime creationDate)_;set,the,value,of,the,literal,creation,date,parameter;builder,creation,date,zoned,date,time,creation,date
ContentDisposition -> Builder -> Builder creationDate(ZonedDateTime creationDate)_;1530174524;Set the value of the {@literal creation-date} parameter.;Builder creationDate(ZonedDateTime creationDate)_;set,the,value,of,the,literal,creation,date,parameter;builder,creation,date,zoned,date,time,creation,date
ContentDisposition -> Builder -> Builder creationDate(ZonedDateTime creationDate)_;1530174524;Set the value of the {@literal creation-date} parameter.;Builder creationDate(ZonedDateTime creationDate)_;set,the,value,of,the,literal,creation,date,parameter;builder,creation,date,zoned,date,time,creation,date
ContentDisposition -> Builder -> Builder creationDate(ZonedDateTime creationDate)_;1530201727;Set the value of the {@literal creation-date} parameter.;Builder creationDate(ZonedDateTime creationDate)_;set,the,value,of,the,literal,creation,date,parameter;builder,creation,date,zoned,date,time,creation,date
