# id;timestamp;commentText;codeText;commentWords;codeWords
DefaultResponseErrorHandler -> protected void handleError(ClientHttpResponse response, HttpStatus statusCode) throws IOException;1505897698;Handle the error in the given response with the given resolved status code._<p>This default implementation throws a {@link HttpClientErrorException} if the response status code_is {@link org.springframework.http.HttpStatus.Series#CLIENT_ERROR}, a {@link HttpServerErrorException}_if it is {@link org.springframework.http.HttpStatus.Series#SERVER_ERROR},_and a {@link RestClientException} in other cases._@since 5.0;protected void handleError(ClientHttpResponse response, HttpStatus statusCode) throws IOException {_		switch (statusCode.series()) {_			case CLIENT_ERROR:_				throw new HttpClientErrorException(statusCode, response.getStatusText(),_						response.getHeaders(), getResponseBody(response), getCharset(response))__			case SERVER_ERROR:_				throw new HttpServerErrorException(statusCode, response.getStatusText(),_						response.getHeaders(), getResponseBody(response), getCharset(response))__			default:_				throw new UnknownHttpStatusCodeException(statusCode.value(), response.getStatusText(),_						response.getHeaders(), getResponseBody(response), getCharset(response))__		}_	};handle,the,error,in,the,given,response,with,the,given,resolved,status,code,p,this,default,implementation,throws,a,link,http,client,error,exception,if,the,response,status,code,is,link,org,springframework,http,http,status,series,a,link,http,server,error,exception,if,it,is,link,org,springframework,http,http,status,series,and,a,link,rest,client,exception,in,other,cases,since,5,0;protected,void,handle,error,client,http,response,response,http,status,status,code,throws,ioexception,switch,status,code,series,case,throw,new,http,client,error,exception,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,case,throw,new,http,server,error,exception,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,default,throw,new,unknown,http,status,code,exception,status,code,value,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response
DefaultResponseErrorHandler -> protected void handleError(ClientHttpResponse response, HttpStatus statusCode) throws IOException;1508853089;Handle the error in the given response with the given resolved status code._<p>This default implementation throws a {@link HttpClientErrorException} if the response status code_is {@link org.springframework.http.HttpStatus.Series#CLIENT_ERROR}, a {@link HttpServerErrorException}_if it is {@link org.springframework.http.HttpStatus.Series#SERVER_ERROR},_and a {@link RestClientException} in other cases._@since 5.0;protected void handleError(ClientHttpResponse response, HttpStatus statusCode) throws IOException {_		switch (statusCode.series()) {_			case CLIENT_ERROR:_				throw new HttpClientErrorException(statusCode, response.getStatusText(),_						response.getHeaders(), getResponseBody(response), getCharset(response))__			case SERVER_ERROR:_				throw new HttpServerErrorException(statusCode, response.getStatusText(),_						response.getHeaders(), getResponseBody(response), getCharset(response))__			default:_				throw new UnknownHttpStatusCodeException(statusCode.value(), response.getStatusText(),_						response.getHeaders(), getResponseBody(response), getCharset(response))__		}_	};handle,the,error,in,the,given,response,with,the,given,resolved,status,code,p,this,default,implementation,throws,a,link,http,client,error,exception,if,the,response,status,code,is,link,org,springframework,http,http,status,series,a,link,http,server,error,exception,if,it,is,link,org,springframework,http,http,status,series,and,a,link,rest,client,exception,in,other,cases,since,5,0;protected,void,handle,error,client,http,response,response,http,status,status,code,throws,ioexception,switch,status,code,series,case,throw,new,http,client,error,exception,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,case,throw,new,http,server,error,exception,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,default,throw,new,unknown,http,status,code,exception,status,code,value,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response
DefaultResponseErrorHandler -> protected void handleError(ClientHttpResponse response, HttpStatus statusCode) throws IOException;1533554950;Handle the error in the given response with the given resolved status code._<p>This default implementation throws a {@link HttpClientErrorException} if the response status code_is {@link org.springframework.http.HttpStatus.Series#CLIENT_ERROR}, a {@link HttpServerErrorException}_if it is {@link org.springframework.http.HttpStatus.Series#SERVER_ERROR},_and a {@link RestClientException} in other cases._@since 5.0;protected void handleError(ClientHttpResponse response, HttpStatus statusCode) throws IOException {_		switch (statusCode.series()) {_			case CLIENT_ERROR:_				handleClientError(response, statusCode)__				return__			case SERVER_ERROR:_				handleServerError(response, statusCode)__				return__			default:_				throw new UnknownHttpStatusCodeException(statusCode.value(), response.getStatusText(),_						response.getHeaders(), getResponseBody(response), getCharset(response))__		}_	};handle,the,error,in,the,given,response,with,the,given,resolved,status,code,p,this,default,implementation,throws,a,link,http,client,error,exception,if,the,response,status,code,is,link,org,springframework,http,http,status,series,a,link,http,server,error,exception,if,it,is,link,org,springframework,http,http,status,series,and,a,link,rest,client,exception,in,other,cases,since,5,0;protected,void,handle,error,client,http,response,response,http,status,status,code,throws,ioexception,switch,status,code,series,case,handle,client,error,response,status,code,return,case,handle,server,error,response,status,code,return,default,throw,new,unknown,http,status,code,exception,status,code,value,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response
DefaultResponseErrorHandler -> protected void handleError(ClientHttpResponse response, HttpStatus statusCode) throws IOException;1533554950;Handle the error in the given response with the given resolved status code._<p>This default implementation throws a {@link HttpClientErrorException} if the response status code_is {@link org.springframework.http.HttpStatus.Series#CLIENT_ERROR}, a {@link HttpServerErrorException}_if it is {@link org.springframework.http.HttpStatus.Series#SERVER_ERROR},_and a {@link RestClientException} in other cases._@since 5.0;protected void handleError(ClientHttpResponse response, HttpStatus statusCode) throws IOException {__		String statusText = response.getStatusText()__		HttpHeaders headers = response.getHeaders()__		byte[] body = getResponseBody(response)__		Charset charset = getCharset(response)___		switch (statusCode.series()) {_			case CLIENT_ERROR:_				handleClientError(statusCode, statusText, headers, body, charset)__				return__			case SERVER_ERROR:_				handleServerError(statusCode, statusText, headers, body, charset)__				return__			default:_				throw new UnknownHttpStatusCodeException(statusCode.value(), statusText, headers, body, charset)__		}_	};handle,the,error,in,the,given,response,with,the,given,resolved,status,code,p,this,default,implementation,throws,a,link,http,client,error,exception,if,the,response,status,code,is,link,org,springframework,http,http,status,series,a,link,http,server,error,exception,if,it,is,link,org,springframework,http,http,status,series,and,a,link,rest,client,exception,in,other,cases,since,5,0;protected,void,handle,error,client,http,response,response,http,status,status,code,throws,ioexception,string,status,text,response,get,status,text,http,headers,headers,response,get,headers,byte,body,get,response,body,response,charset,charset,get,charset,response,switch,status,code,series,case,handle,client,error,status,code,status,text,headers,body,charset,return,case,handle,server,error,status,code,status,text,headers,body,charset,return,default,throw,new,unknown,http,status,code,exception,status,code,value,status,text,headers,body,charset
DefaultResponseErrorHandler -> protected void handleError(ClientHttpResponse response, HttpStatus statusCode) throws IOException;1533573240;Handle the error in the given response with the given resolved status code._<p>This default implementation throws a {@link HttpClientErrorException} if the response status code_is {@link org.springframework.http.HttpStatus.Series#CLIENT_ERROR}, a {@link HttpServerErrorException}_if it is {@link org.springframework.http.HttpStatus.Series#SERVER_ERROR},_and a {@link RestClientException} in other cases._@since 5.0;protected void handleError(ClientHttpResponse response, HttpStatus statusCode) throws IOException {_		String statusText = response.getStatusText()__		HttpHeaders headers = response.getHeaders()__		byte[] body = getResponseBody(response)__		Charset charset = getCharset(response)___		switch (statusCode.series()) {_			case CLIENT_ERROR:_				handleClientError(statusCode, statusText, headers, body, charset)__				return__			case SERVER_ERROR:_				handleServerError(statusCode, statusText, headers, body, charset)__				return__			default:_				throw new UnknownHttpStatusCodeException(statusCode.value(), statusText, headers, body, charset)__		}_	};handle,the,error,in,the,given,response,with,the,given,resolved,status,code,p,this,default,implementation,throws,a,link,http,client,error,exception,if,the,response,status,code,is,link,org,springframework,http,http,status,series,a,link,http,server,error,exception,if,it,is,link,org,springframework,http,http,status,series,and,a,link,rest,client,exception,in,other,cases,since,5,0;protected,void,handle,error,client,http,response,response,http,status,status,code,throws,ioexception,string,status,text,response,get,status,text,http,headers,headers,response,get,headers,byte,body,get,response,body,response,charset,charset,get,charset,response,switch,status,code,series,case,handle,client,error,status,code,status,text,headers,body,charset,return,case,handle,server,error,status,code,status,text,headers,body,charset,return,default,throw,new,unknown,http,status,code,exception,status,code,value,status,text,headers,body,charset
DefaultResponseErrorHandler -> protected void handleError(ClientHttpResponse response, HttpStatus statusCode) throws IOException;1533731648;Handle the error in the given response with the given resolved status code._<p>This default implementation throws a {@link HttpClientErrorException} if the response status code_is {@link org.springframework.http.HttpStatus.Series#CLIENT_ERROR}, a {@link HttpServerErrorException}_if it is {@link org.springframework.http.HttpStatus.Series#SERVER_ERROR},_and a {@link RestClientException} in other cases._@since 5.0;protected void handleError(ClientHttpResponse response, HttpStatus statusCode) throws IOException {_		String statusText = response.getStatusText()__		HttpHeaders headers = response.getHeaders()__		byte[] body = getResponseBody(response)__		Charset charset = getCharset(response)__		switch (statusCode.series()) {_			case CLIENT_ERROR:_				throw HttpClientErrorException.create(statusCode, statusText, headers, body, charset)__			case SERVER_ERROR:_				throw HttpServerErrorException.create(statusCode, statusText, headers, body, charset)__			default:_				throw new UnknownHttpStatusCodeException(statusCode.value(), statusText, headers, body, charset)__		}_	};handle,the,error,in,the,given,response,with,the,given,resolved,status,code,p,this,default,implementation,throws,a,link,http,client,error,exception,if,the,response,status,code,is,link,org,springframework,http,http,status,series,a,link,http,server,error,exception,if,it,is,link,org,springframework,http,http,status,series,and,a,link,rest,client,exception,in,other,cases,since,5,0;protected,void,handle,error,client,http,response,response,http,status,status,code,throws,ioexception,string,status,text,response,get,status,text,http,headers,headers,response,get,headers,byte,body,get,response,body,response,charset,charset,get,charset,response,switch,status,code,series,case,throw,http,client,error,exception,create,status,code,status,text,headers,body,charset,case,throw,http,server,error,exception,create,status,code,status,text,headers,body,charset,default,throw,new,unknown,http,status,code,exception,status,code,value,status,text,headers,body,charset
DefaultResponseErrorHandler -> protected void handleError(ClientHttpResponse response, HttpStatus statusCode) throws IOException;1534438291;Handle the error in the given response with the given resolved status code._<p>This default implementation throws a {@link HttpClientErrorException} if the response status code_is {@link org.springframework.http.HttpStatus.Series#CLIENT_ERROR}, a {@link HttpServerErrorException}_if it is {@link org.springframework.http.HttpStatus.Series#SERVER_ERROR},_and a {@link RestClientException} in other cases._@since 5.0;protected void handleError(ClientHttpResponse response, HttpStatus statusCode) throws IOException {_		String statusText = response.getStatusText()__		HttpHeaders headers = response.getHeaders()__		byte[] body = getResponseBody(response)__		Charset charset = getCharset(response)__		switch (statusCode.series()) {_			case CLIENT_ERROR:_				throw HttpClientErrorException.create(statusCode, statusText, headers, body, charset)__			case SERVER_ERROR:_				throw HttpServerErrorException.create(statusCode, statusText, headers, body, charset)__			default:_				throw new UnknownHttpStatusCodeException(statusCode.value(), statusText, headers, body, charset)__		}_	};handle,the,error,in,the,given,response,with,the,given,resolved,status,code,p,this,default,implementation,throws,a,link,http,client,error,exception,if,the,response,status,code,is,link,org,springframework,http,http,status,series,a,link,http,server,error,exception,if,it,is,link,org,springframework,http,http,status,series,and,a,link,rest,client,exception,in,other,cases,since,5,0;protected,void,handle,error,client,http,response,response,http,status,status,code,throws,ioexception,string,status,text,response,get,status,text,http,headers,headers,response,get,headers,byte,body,get,response,body,response,charset,charset,get,charset,response,switch,status,code,series,case,throw,http,client,error,exception,create,status,code,status,text,headers,body,charset,case,throw,http,server,error,exception,create,status,code,status,text,headers,body,charset,default,throw,new,unknown,http,status,code,exception,status,code,value,status,text,headers,body,charset
DefaultResponseErrorHandler -> protected void handleError(ClientHttpResponse response, HttpStatus statusCode) throws IOException;1542977750;Handle the error in the given response with the given resolved status code._<p>This default implementation throws a {@link HttpClientErrorException} if the response status code_is {@link org.springframework.http.HttpStatus.Series#CLIENT_ERROR}, a {@link HttpServerErrorException}_if it is {@link org.springframework.http.HttpStatus.Series#SERVER_ERROR},_and a {@link RestClientException} in other cases._@since 5.0;protected void handleError(ClientHttpResponse response, HttpStatus statusCode) throws IOException {_		String statusText = response.getStatusText()__		HttpHeaders headers = response.getHeaders()__		byte[] body = getResponseBody(response)__		Charset charset = getCharset(response)__		switch (statusCode.series()) {_			case CLIENT_ERROR:_				throw HttpClientErrorException.create(statusCode, statusText, headers, body, charset)__			case SERVER_ERROR:_				throw HttpServerErrorException.create(statusCode, statusText, headers, body, charset)__			default:_				throw new UnknownHttpStatusCodeException(statusCode.value(), statusText, headers, body, charset)__		}_	};handle,the,error,in,the,given,response,with,the,given,resolved,status,code,p,this,default,implementation,throws,a,link,http,client,error,exception,if,the,response,status,code,is,link,org,springframework,http,http,status,series,a,link,http,server,error,exception,if,it,is,link,org,springframework,http,http,status,series,and,a,link,rest,client,exception,in,other,cases,since,5,0;protected,void,handle,error,client,http,response,response,http,status,status,code,throws,ioexception,string,status,text,response,get,status,text,http,headers,headers,response,get,headers,byte,body,get,response,body,response,charset,charset,get,charset,response,switch,status,code,series,case,throw,http,client,error,exception,create,status,code,status,text,headers,body,charset,case,throw,http,server,error,exception,create,status,code,status,text,headers,body,charset,default,throw,new,unknown,http,status,code,exception,status,code,value,status,text,headers,body,charset
DefaultResponseErrorHandler -> protected void handleError(ClientHttpResponse response, HttpStatus statusCode) throws IOException;1542997667;Handle the error in the given response with the given resolved status code._<p>The default implementation throws an {@link HttpClientErrorException}_if the status code is {@link HttpStatus.Series#CLIENT_ERROR}, an_{@link HttpServerErrorException} if it is {@link HttpStatus.Series#SERVER_ERROR},_and an {@link UnknownHttpStatusCodeException} in other cases._@since 5.0_@see HttpClientErrorException#create_@see HttpServerErrorException#create;protected void handleError(ClientHttpResponse response, HttpStatus statusCode) throws IOException {_		String statusText = response.getStatusText()__		HttpHeaders headers = response.getHeaders()__		byte[] body = getResponseBody(response)__		Charset charset = getCharset(response)__		switch (statusCode.series()) {_			case CLIENT_ERROR:_				throw HttpClientErrorException.create(statusCode, statusText, headers, body, charset)__			case SERVER_ERROR:_				throw HttpServerErrorException.create(statusCode, statusText, headers, body, charset)__			default:_				throw new UnknownHttpStatusCodeException(statusCode.value(), statusText, headers, body, charset)__		}_	};handle,the,error,in,the,given,response,with,the,given,resolved,status,code,p,the,default,implementation,throws,an,link,http,client,error,exception,if,the,status,code,is,link,http,status,series,an,link,http,server,error,exception,if,it,is,link,http,status,series,and,an,link,unknown,http,status,code,exception,in,other,cases,since,5,0,see,http,client,error,exception,create,see,http,server,error,exception,create;protected,void,handle,error,client,http,response,response,http,status,status,code,throws,ioexception,string,status,text,response,get,status,text,http,headers,headers,response,get,headers,byte,body,get,response,body,response,charset,charset,get,charset,response,switch,status,code,series,case,throw,http,client,error,exception,create,status,code,status,text,headers,body,charset,case,throw,http,server,error,exception,create,status,code,status,text,headers,body,charset,default,throw,new,unknown,http,status,code,exception,status,code,value,status,text,headers,body,charset
DefaultResponseErrorHandler -> @Nullable 	protected Charset getCharset(ClientHttpResponse response);1495868221;Determine the charset of the response (for inclusion in a status exception)._@param response the response to inspect_@return the associated charset, or {@code null} if none_@since 4.3.8;@Nullable_	protected Charset getCharset(ClientHttpResponse response) {_		HttpHeaders headers = response.getHeaders()__		MediaType contentType = headers.getContentType()__		return (contentType != null ? contentType.getCharset() : null)__	};determine,the,charset,of,the,response,for,inclusion,in,a,status,exception,param,response,the,response,to,inspect,return,the,associated,charset,or,code,null,if,none,since,4,3,8;nullable,protected,charset,get,charset,client,http,response,response,http,headers,headers,response,get,headers,media,type,content,type,headers,get,content,type,return,content,type,null,content,type,get,charset,null
DefaultResponseErrorHandler -> @Nullable 	protected Charset getCharset(ClientHttpResponse response);1505897698;Determine the charset of the response (for inclusion in a status exception)._@param response the response to inspect_@return the associated charset, or {@code null} if none_@since 4.3.8;@Nullable_	protected Charset getCharset(ClientHttpResponse response) {_		HttpHeaders headers = response.getHeaders()__		MediaType contentType = headers.getContentType()__		return (contentType != null ? contentType.getCharset() : null)__	};determine,the,charset,of,the,response,for,inclusion,in,a,status,exception,param,response,the,response,to,inspect,return,the,associated,charset,or,code,null,if,none,since,4,3,8;nullable,protected,charset,get,charset,client,http,response,response,http,headers,headers,response,get,headers,media,type,content,type,headers,get,content,type,return,content,type,null,content,type,get,charset,null
DefaultResponseErrorHandler -> @Nullable 	protected Charset getCharset(ClientHttpResponse response);1508853089;Determine the charset of the response (for inclusion in a status exception)._@param response the response to inspect_@return the associated charset, or {@code null} if none_@since 4.3.8;@Nullable_	protected Charset getCharset(ClientHttpResponse response) {_		HttpHeaders headers = response.getHeaders()__		MediaType contentType = headers.getContentType()__		return (contentType != null ? contentType.getCharset() : null)__	};determine,the,charset,of,the,response,for,inclusion,in,a,status,exception,param,response,the,response,to,inspect,return,the,associated,charset,or,code,null,if,none,since,4,3,8;nullable,protected,charset,get,charset,client,http,response,response,http,headers,headers,response,get,headers,media,type,content,type,headers,get,content,type,return,content,type,null,content,type,get,charset,null
DefaultResponseErrorHandler -> @Nullable 	protected Charset getCharset(ClientHttpResponse response);1533554950;Determine the charset of the response (for inclusion in a status exception)._@param response the response to inspect_@return the associated charset, or {@code null} if none_@since 4.3.8;@Nullable_	protected Charset getCharset(ClientHttpResponse response) {_		HttpHeaders headers = response.getHeaders()__		MediaType contentType = headers.getContentType()__		return (contentType != null ? contentType.getCharset() : null)__	};determine,the,charset,of,the,response,for,inclusion,in,a,status,exception,param,response,the,response,to,inspect,return,the,associated,charset,or,code,null,if,none,since,4,3,8;nullable,protected,charset,get,charset,client,http,response,response,http,headers,headers,response,get,headers,media,type,content,type,headers,get,content,type,return,content,type,null,content,type,get,charset,null
DefaultResponseErrorHandler -> @Nullable 	protected Charset getCharset(ClientHttpResponse response);1533554950;Determine the charset of the response (for inclusion in a status exception)._@param response the response to inspect_@return the associated charset, or {@code null} if none_@since 4.3.8;@Nullable_	protected Charset getCharset(ClientHttpResponse response) {_		HttpHeaders headers = response.getHeaders()__		MediaType contentType = headers.getContentType()__		return (contentType != null ? contentType.getCharset() : null)__	};determine,the,charset,of,the,response,for,inclusion,in,a,status,exception,param,response,the,response,to,inspect,return,the,associated,charset,or,code,null,if,none,since,4,3,8;nullable,protected,charset,get,charset,client,http,response,response,http,headers,headers,response,get,headers,media,type,content,type,headers,get,content,type,return,content,type,null,content,type,get,charset,null
DefaultResponseErrorHandler -> @Nullable 	protected Charset getCharset(ClientHttpResponse response);1533573240;Determine the charset of the response (for inclusion in a status exception)._@param response the response to inspect_@return the associated charset, or {@code null} if none_@since 4.3.8;@Nullable_	protected Charset getCharset(ClientHttpResponse response) {_		HttpHeaders headers = response.getHeaders()__		MediaType contentType = headers.getContentType()__		return (contentType != null ? contentType.getCharset() : null)__	};determine,the,charset,of,the,response,for,inclusion,in,a,status,exception,param,response,the,response,to,inspect,return,the,associated,charset,or,code,null,if,none,since,4,3,8;nullable,protected,charset,get,charset,client,http,response,response,http,headers,headers,response,get,headers,media,type,content,type,headers,get,content,type,return,content,type,null,content,type,get,charset,null
DefaultResponseErrorHandler -> @Nullable 	protected Charset getCharset(ClientHttpResponse response);1533731648;Determine the charset of the response (for inclusion in a status exception)._@param response the response to inspect_@return the associated charset, or {@code null} if none_@since 4.3.8;@Nullable_	protected Charset getCharset(ClientHttpResponse response) {_		HttpHeaders headers = response.getHeaders()__		MediaType contentType = headers.getContentType()__		return (contentType != null ? contentType.getCharset() : null)__	};determine,the,charset,of,the,response,for,inclusion,in,a,status,exception,param,response,the,response,to,inspect,return,the,associated,charset,or,code,null,if,none,since,4,3,8;nullable,protected,charset,get,charset,client,http,response,response,http,headers,headers,response,get,headers,media,type,content,type,headers,get,content,type,return,content,type,null,content,type,get,charset,null
DefaultResponseErrorHandler -> @Nullable 	protected Charset getCharset(ClientHttpResponse response);1534438291;Determine the charset of the response (for inclusion in a status exception)._@param response the response to inspect_@return the associated charset, or {@code null} if none_@since 4.3.8;@Nullable_	protected Charset getCharset(ClientHttpResponse response) {_		HttpHeaders headers = response.getHeaders()__		MediaType contentType = headers.getContentType()__		return (contentType != null ? contentType.getCharset() : null)__	};determine,the,charset,of,the,response,for,inclusion,in,a,status,exception,param,response,the,response,to,inspect,return,the,associated,charset,or,code,null,if,none,since,4,3,8;nullable,protected,charset,get,charset,client,http,response,response,http,headers,headers,response,get,headers,media,type,content,type,headers,get,content,type,return,content,type,null,content,type,get,charset,null
DefaultResponseErrorHandler -> @Nullable 	protected Charset getCharset(ClientHttpResponse response);1542977750;Determine the charset of the response (for inclusion in a status exception)._@param response the response to inspect_@return the associated charset, or {@code null} if none_@since 4.3.8;@Nullable_	protected Charset getCharset(ClientHttpResponse response) {_		HttpHeaders headers = response.getHeaders()__		MediaType contentType = headers.getContentType()__		return (contentType != null ? contentType.getCharset() : null)__	};determine,the,charset,of,the,response,for,inclusion,in,a,status,exception,param,response,the,response,to,inspect,return,the,associated,charset,or,code,null,if,none,since,4,3,8;nullable,protected,charset,get,charset,client,http,response,response,http,headers,headers,response,get,headers,media,type,content,type,headers,get,content,type,return,content,type,null,content,type,get,charset,null
DefaultResponseErrorHandler -> @Nullable 	protected Charset getCharset(ClientHttpResponse response);1542997667;Determine the charset of the response (for inclusion in a status exception)._@param response the response to inspect_@return the associated charset, or {@code null} if none_@since 4.3.8;@Nullable_	protected Charset getCharset(ClientHttpResponse response) {_		HttpHeaders headers = response.getHeaders()__		MediaType contentType = headers.getContentType()__		return (contentType != null ? contentType.getCharset() : null)__	};determine,the,charset,of,the,response,for,inclusion,in,a,status,exception,param,response,the,response,to,inspect,return,the,associated,charset,or,code,null,if,none,since,4,3,8;nullable,protected,charset,get,charset,client,http,response,response,http,headers,headers,response,get,headers,media,type,content,type,headers,get,content,type,return,content,type,null,content,type,get,charset,null
DefaultResponseErrorHandler -> protected byte[] getResponseBody(ClientHttpResponse response);1489687033;Read the body of the given response (for inclusion in a status exception)._@param response the response to inspect_@return the response body as a byte array,_or an empty byte array if the body could not be read_@since 4.3.8;protected byte[] getResponseBody(ClientHttpResponse response) {_		try {_			return FileCopyUtils.copyToByteArray(response.getBody())__		}_		catch (IOException ex) {_			_		}_		return new byte[0]__	};read,the,body,of,the,given,response,for,inclusion,in,a,status,exception,param,response,the,response,to,inspect,return,the,response,body,as,a,byte,array,or,an,empty,byte,array,if,the,body,could,not,be,read,since,4,3,8;protected,byte,get,response,body,client,http,response,response,try,return,file,copy,utils,copy,to,byte,array,response,get,body,catch,ioexception,ex,return,new,byte,0
DefaultResponseErrorHandler -> protected byte[] getResponseBody(ClientHttpResponse response);1495868221;Read the body of the given response (for inclusion in a status exception)._@param response the response to inspect_@return the response body as a byte array,_or an empty byte array if the body could not be read_@since 4.3.8;protected byte[] getResponseBody(ClientHttpResponse response) {_		try {_			return FileCopyUtils.copyToByteArray(response.getBody())__		}_		catch (IOException ex) {_			_		}_		return new byte[0]__	};read,the,body,of,the,given,response,for,inclusion,in,a,status,exception,param,response,the,response,to,inspect,return,the,response,body,as,a,byte,array,or,an,empty,byte,array,if,the,body,could,not,be,read,since,4,3,8;protected,byte,get,response,body,client,http,response,response,try,return,file,copy,utils,copy,to,byte,array,response,get,body,catch,ioexception,ex,return,new,byte,0
DefaultResponseErrorHandler -> protected byte[] getResponseBody(ClientHttpResponse response);1505897698;Read the body of the given response (for inclusion in a status exception)._@param response the response to inspect_@return the response body as a byte array,_or an empty byte array if the body could not be read_@since 4.3.8;protected byte[] getResponseBody(ClientHttpResponse response) {_		try {_			return FileCopyUtils.copyToByteArray(response.getBody())__		}_		catch (IOException ex) {_			_		}_		return new byte[0]__	};read,the,body,of,the,given,response,for,inclusion,in,a,status,exception,param,response,the,response,to,inspect,return,the,response,body,as,a,byte,array,or,an,empty,byte,array,if,the,body,could,not,be,read,since,4,3,8;protected,byte,get,response,body,client,http,response,response,try,return,file,copy,utils,copy,to,byte,array,response,get,body,catch,ioexception,ex,return,new,byte,0
DefaultResponseErrorHandler -> protected byte[] getResponseBody(ClientHttpResponse response);1508853089;Read the body of the given response (for inclusion in a status exception)._@param response the response to inspect_@return the response body as a byte array,_or an empty byte array if the body could not be read_@since 4.3.8;protected byte[] getResponseBody(ClientHttpResponse response) {_		try {_			return FileCopyUtils.copyToByteArray(response.getBody())__		}_		catch (IOException ex) {_			_		}_		return new byte[0]__	};read,the,body,of,the,given,response,for,inclusion,in,a,status,exception,param,response,the,response,to,inspect,return,the,response,body,as,a,byte,array,or,an,empty,byte,array,if,the,body,could,not,be,read,since,4,3,8;protected,byte,get,response,body,client,http,response,response,try,return,file,copy,utils,copy,to,byte,array,response,get,body,catch,ioexception,ex,return,new,byte,0
DefaultResponseErrorHandler -> protected byte[] getResponseBody(ClientHttpResponse response);1533554950;Read the body of the given response (for inclusion in a status exception)._@param response the response to inspect_@return the response body as a byte array,_or an empty byte array if the body could not be read_@since 4.3.8;protected byte[] getResponseBody(ClientHttpResponse response) {_		try {_			return FileCopyUtils.copyToByteArray(response.getBody())__		}_		catch (IOException ex) {_			_		}_		return new byte[0]__	};read,the,body,of,the,given,response,for,inclusion,in,a,status,exception,param,response,the,response,to,inspect,return,the,response,body,as,a,byte,array,or,an,empty,byte,array,if,the,body,could,not,be,read,since,4,3,8;protected,byte,get,response,body,client,http,response,response,try,return,file,copy,utils,copy,to,byte,array,response,get,body,catch,ioexception,ex,return,new,byte,0
DefaultResponseErrorHandler -> protected byte[] getResponseBody(ClientHttpResponse response);1533554950;Read the body of the given response (for inclusion in a status exception)._@param response the response to inspect_@return the response body as a byte array,_or an empty byte array if the body could not be read_@since 4.3.8;protected byte[] getResponseBody(ClientHttpResponse response) {_		try {_			return FileCopyUtils.copyToByteArray(response.getBody())__		}_		catch (IOException ex) {_			_		}_		return new byte[0]__	};read,the,body,of,the,given,response,for,inclusion,in,a,status,exception,param,response,the,response,to,inspect,return,the,response,body,as,a,byte,array,or,an,empty,byte,array,if,the,body,could,not,be,read,since,4,3,8;protected,byte,get,response,body,client,http,response,response,try,return,file,copy,utils,copy,to,byte,array,response,get,body,catch,ioexception,ex,return,new,byte,0
DefaultResponseErrorHandler -> protected byte[] getResponseBody(ClientHttpResponse response);1533573240;Read the body of the given response (for inclusion in a status exception)._@param response the response to inspect_@return the response body as a byte array,_or an empty byte array if the body could not be read_@since 4.3.8;protected byte[] getResponseBody(ClientHttpResponse response) {_		try {_			return FileCopyUtils.copyToByteArray(response.getBody())__		}_		catch (IOException ex) {_			_		}_		return new byte[0]__	};read,the,body,of,the,given,response,for,inclusion,in,a,status,exception,param,response,the,response,to,inspect,return,the,response,body,as,a,byte,array,or,an,empty,byte,array,if,the,body,could,not,be,read,since,4,3,8;protected,byte,get,response,body,client,http,response,response,try,return,file,copy,utils,copy,to,byte,array,response,get,body,catch,ioexception,ex,return,new,byte,0
DefaultResponseErrorHandler -> protected byte[] getResponseBody(ClientHttpResponse response);1533731648;Read the body of the given response (for inclusion in a status exception)._@param response the response to inspect_@return the response body as a byte array,_or an empty byte array if the body could not be read_@since 4.3.8;protected byte[] getResponseBody(ClientHttpResponse response) {_		try {_			return FileCopyUtils.copyToByteArray(response.getBody())__		}_		catch (IOException ex) {_			_		}_		return new byte[0]__	};read,the,body,of,the,given,response,for,inclusion,in,a,status,exception,param,response,the,response,to,inspect,return,the,response,body,as,a,byte,array,or,an,empty,byte,array,if,the,body,could,not,be,read,since,4,3,8;protected,byte,get,response,body,client,http,response,response,try,return,file,copy,utils,copy,to,byte,array,response,get,body,catch,ioexception,ex,return,new,byte,0
DefaultResponseErrorHandler -> protected byte[] getResponseBody(ClientHttpResponse response);1534438291;Read the body of the given response (for inclusion in a status exception)._@param response the response to inspect_@return the response body as a byte array,_or an empty byte array if the body could not be read_@since 4.3.8;protected byte[] getResponseBody(ClientHttpResponse response) {_		try {_			return FileCopyUtils.copyToByteArray(response.getBody())__		}_		catch (IOException ex) {_			_		}_		return new byte[0]__	};read,the,body,of,the,given,response,for,inclusion,in,a,status,exception,param,response,the,response,to,inspect,return,the,response,body,as,a,byte,array,or,an,empty,byte,array,if,the,body,could,not,be,read,since,4,3,8;protected,byte,get,response,body,client,http,response,response,try,return,file,copy,utils,copy,to,byte,array,response,get,body,catch,ioexception,ex,return,new,byte,0
DefaultResponseErrorHandler -> protected byte[] getResponseBody(ClientHttpResponse response);1542977750;Read the body of the given response (for inclusion in a status exception)._@param response the response to inspect_@return the response body as a byte array,_or an empty byte array if the body could not be read_@since 4.3.8;protected byte[] getResponseBody(ClientHttpResponse response) {_		try {_			return FileCopyUtils.copyToByteArray(response.getBody())__		}_		catch (IOException ex) {_			_		}_		return new byte[0]__	};read,the,body,of,the,given,response,for,inclusion,in,a,status,exception,param,response,the,response,to,inspect,return,the,response,body,as,a,byte,array,or,an,empty,byte,array,if,the,body,could,not,be,read,since,4,3,8;protected,byte,get,response,body,client,http,response,response,try,return,file,copy,utils,copy,to,byte,array,response,get,body,catch,ioexception,ex,return,new,byte,0
DefaultResponseErrorHandler -> protected byte[] getResponseBody(ClientHttpResponse response);1542997667;Read the body of the given response (for inclusion in a status exception)._@param response the response to inspect_@return the response body as a byte array,_or an empty byte array if the body could not be read_@since 4.3.8;protected byte[] getResponseBody(ClientHttpResponse response) {_		try {_			return FileCopyUtils.copyToByteArray(response.getBody())__		}_		catch (IOException ex) {_			_		}_		return new byte[0]__	};read,the,body,of,the,given,response,for,inclusion,in,a,status,exception,param,response,the,response,to,inspect,return,the,response,body,as,a,byte,array,or,an,empty,byte,array,if,the,body,could,not,be,read,since,4,3,8;protected,byte,get,response,body,client,http,response,response,try,return,file,copy,utils,copy,to,byte,array,response,get,body,catch,ioexception,ex,return,new,byte,0
DefaultResponseErrorHandler -> public void handleError(ClientHttpResponse response) throws IOException;1328020251;This default implementation throws a {@link HttpClientErrorException} if the response status code_is {@link org.springframework.http.HttpStatus.Series#CLIENT_ERROR}, a {@link HttpServerErrorException}_if it is {@link org.springframework.http.HttpStatus.Series#SERVER_ERROR},_and a {@link RestClientException} in other cases.;public void handleError(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = response.getStatusCode()__		MediaType contentType = response.getHeaders().getContentType()__		Charset charset = contentType != null ? contentType.getCharSet() : null__		byte[] body = getResponseBody(response)__		switch (statusCode.series()) {_			case CLIENT_ERROR:_				throw new HttpClientErrorException(statusCode, response.getStatusText(), body, charset)__			case SERVER_ERROR:_				throw new HttpServerErrorException(statusCode, response.getStatusText(), body, charset)__			default:_				throw new RestClientException("Unknown status code [" + statusCode + "]")__		}_	};this,default,implementation,throws,a,link,http,client,error,exception,if,the,response,status,code,is,link,org,springframework,http,http,status,series,a,link,http,server,error,exception,if,it,is,link,org,springframework,http,http,status,series,and,a,link,rest,client,exception,in,other,cases;public,void,handle,error,client,http,response,response,throws,ioexception,http,status,status,code,response,get,status,code,media,type,content,type,response,get,headers,get,content,type,charset,charset,content,type,null,content,type,get,char,set,null,byte,body,get,response,body,response,switch,status,code,series,case,throw,new,http,client,error,exception,status,code,response,get,status,text,body,charset,case,throw,new,http,server,error,exception,status,code,response,get,status,text,body,charset,default,throw,new,rest,client,exception,unknown,status,code,status,code
DefaultResponseErrorHandler -> public void handleError(ClientHttpResponse response) throws IOException;1338561606;This default implementation throws a {@link HttpClientErrorException} if the response status code_is {@link org.springframework.http.HttpStatus.Series#CLIENT_ERROR}, a {@link HttpServerErrorException}_if it is {@link org.springframework.http.HttpStatus.Series#SERVER_ERROR},_and a {@link RestClientException} in other cases.;public void handleError(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = response.getStatusCode()__		HttpHeaders headers = response.getHeaders()__		MediaType contentType = headers.getContentType()__		Charset charset = contentType != null ? contentType.getCharSet() : null__		byte[] body = getResponseBody(response)__		switch (statusCode.series()) {_			case CLIENT_ERROR:_				throw new HttpClientErrorException(statusCode, response.getStatusText(), headers, body, charset)__			case SERVER_ERROR:_				throw new HttpServerErrorException(statusCode, response.getStatusText(), headers, body, charset)__			default:_				throw new RestClientException("Unknown status code [" + statusCode + "]")__		}_	};this,default,implementation,throws,a,link,http,client,error,exception,if,the,response,status,code,is,link,org,springframework,http,http,status,series,a,link,http,server,error,exception,if,it,is,link,org,springframework,http,http,status,series,and,a,link,rest,client,exception,in,other,cases;public,void,handle,error,client,http,response,response,throws,ioexception,http,status,status,code,response,get,status,code,http,headers,headers,response,get,headers,media,type,content,type,headers,get,content,type,charset,charset,content,type,null,content,type,get,char,set,null,byte,body,get,response,body,response,switch,status,code,series,case,throw,new,http,client,error,exception,status,code,response,get,status,text,headers,body,charset,case,throw,new,http,server,error,exception,status,code,response,get,status,text,headers,body,charset,default,throw,new,rest,client,exception,unknown,status,code,status,code
DefaultResponseErrorHandler -> public void handleError(ClientHttpResponse response) throws IOException;1339590436;This default implementation throws a {@link HttpClientErrorException} if the response status code_is {@link org.springframework.http.HttpStatus.Series#CLIENT_ERROR}, a {@link HttpServerErrorException}_if it is {@link org.springframework.http.HttpStatus.Series#SERVER_ERROR},_and a {@link RestClientException} in other cases.;public void handleError(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = getStatusCode(response)__		HttpHeaders headers = response.getHeaders()__		MediaType contentType = headers.getContentType()__		Charset charset = contentType != null ? contentType.getCharSet() : null__		byte[] body = getResponseBody(response)__		switch (statusCode.series()) {_			case CLIENT_ERROR:_				throw new HttpClientErrorException(statusCode, response.getStatusText(), headers, body, charset)__			case SERVER_ERROR:_				throw new HttpServerErrorException(statusCode, response.getStatusText(), headers, body, charset)__			default:_				throw new RestClientException("Unknown status code [" + statusCode + "]")__		}_	};this,default,implementation,throws,a,link,http,client,error,exception,if,the,response,status,code,is,link,org,springframework,http,http,status,series,a,link,http,server,error,exception,if,it,is,link,org,springframework,http,http,status,series,and,a,link,rest,client,exception,in,other,cases;public,void,handle,error,client,http,response,response,throws,ioexception,http,status,status,code,get,status,code,response,http,headers,headers,response,get,headers,media,type,content,type,headers,get,content,type,charset,charset,content,type,null,content,type,get,char,set,null,byte,body,get,response,body,response,switch,status,code,series,case,throw,new,http,client,error,exception,status,code,response,get,status,text,headers,body,charset,case,throw,new,http,server,error,exception,status,code,response,get,status,text,headers,body,charset,default,throw,new,rest,client,exception,unknown,status,code,status,code
DefaultResponseErrorHandler -> public void handleError(ClientHttpResponse response) throws IOException;1351878444;This default implementation throws a {@link HttpClientErrorException} if the response status code_is {@link org.springframework.http.HttpStatus.Series#CLIENT_ERROR}, a {@link HttpServerErrorException}_if it is {@link org.springframework.http.HttpStatus.Series#SERVER_ERROR},_and a {@link RestClientException} in other cases.;public void handleError(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = getHttpStatusCode(response)__		switch (statusCode.series()) {_			case CLIENT_ERROR:_				throw new HttpClientErrorException(statusCode, response.getStatusText(),_						response.getHeaders(), getResponseBody(response), getCharset(response))__			case SERVER_ERROR:_				throw new HttpServerErrorException(statusCode, response.getStatusText(),_						response.getHeaders(), getResponseBody(response), getCharset(response))__			default:_				throw new RestClientException("Unknown status code [" + statusCode + "]")__		}_	};this,default,implementation,throws,a,link,http,client,error,exception,if,the,response,status,code,is,link,org,springframework,http,http,status,series,a,link,http,server,error,exception,if,it,is,link,org,springframework,http,http,status,series,and,a,link,rest,client,exception,in,other,cases;public,void,handle,error,client,http,response,response,throws,ioexception,http,status,status,code,get,http,status,code,response,switch,status,code,series,case,throw,new,http,client,error,exception,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,case,throw,new,http,server,error,exception,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,default,throw,new,rest,client,exception,unknown,status,code,status,code
DefaultResponseErrorHandler -> public void handleError(ClientHttpResponse response) throws IOException;1357119239;This default implementation throws a {@link HttpClientErrorException} if the response status code_is {@link org.springframework.http.HttpStatus.Series#CLIENT_ERROR}, a {@link HttpServerErrorException}_if it is {@link org.springframework.http.HttpStatus.Series#SERVER_ERROR},_and a {@link RestClientException} in other cases.;public void handleError(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = getHttpStatusCode(response)__		switch (statusCode.series()) {_			case CLIENT_ERROR:_				throw new HttpClientErrorException(statusCode, response.getStatusText(),_						response.getHeaders(), getResponseBody(response), getCharset(response))__			case SERVER_ERROR:_				throw new HttpServerErrorException(statusCode, response.getStatusText(),_						response.getHeaders(), getResponseBody(response), getCharset(response))__			default:_				throw new RestClientException("Unknown status code [" + statusCode + "]")__		}_	};this,default,implementation,throws,a,link,http,client,error,exception,if,the,response,status,code,is,link,org,springframework,http,http,status,series,a,link,http,server,error,exception,if,it,is,link,org,springframework,http,http,status,series,and,a,link,rest,client,exception,in,other,cases;public,void,handle,error,client,http,response,response,throws,ioexception,http,status,status,code,get,http,status,code,response,switch,status,code,series,case,throw,new,http,client,error,exception,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,case,throw,new,http,server,error,exception,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,default,throw,new,rest,client,exception,unknown,status,code,status,code
DefaultResponseErrorHandler -> @Override 	public boolean hasError(ClientHttpResponse response) throws IOException;1356735495;Delegates to {@link #hasError(HttpStatus)} with the response status code.;@Override_	public boolean hasError(ClientHttpResponse response) throws IOException {_		return hasError(getHttpStatusCode(response))__	};delegates,to,link,has,error,http,status,with,the,response,status,code;override,public,boolean,has,error,client,http,response,response,throws,ioexception,return,has,error,get,http,status,code,response
DefaultResponseErrorHandler -> @Override 	public boolean hasError(ClientHttpResponse response) throws IOException;1368482696;Delegates to {@link #hasError(HttpStatus)} with the response status code.;@Override_	public boolean hasError(ClientHttpResponse response) throws IOException {_		return hasError(getHttpStatusCode(response))__	};delegates,to,link,has,error,http,status,with,the,response,status,code;override,public,boolean,has,error,client,http,response,response,throws,ioexception,return,has,error,get,http,status,code,response
DefaultResponseErrorHandler -> @Override 	public boolean hasError(ClientHttpResponse response) throws IOException;1460644739;Delegates to {@link #hasError(HttpStatus)} with the response status code.;@Override_	public boolean hasError(ClientHttpResponse response) throws IOException {_		return hasError(getHttpStatusCode(response))__	};delegates,to,link,has,error,http,status,with,the,response,status,code;override,public,boolean,has,error,client,http,response,response,throws,ioexception,return,has,error,get,http,status,code,response
DefaultResponseErrorHandler -> @Override 	public boolean hasError(ClientHttpResponse response) throws IOException;1489687033;Delegates to {@link #hasError(HttpStatus)} with the response status code.;@Override_	public boolean hasError(ClientHttpResponse response) throws IOException {_		return hasError(getHttpStatusCode(response))__	};delegates,to,link,has,error,http,status,with,the,response,status,code;override,public,boolean,has,error,client,http,response,response,throws,ioexception,return,has,error,get,http,status,code,response
DefaultResponseErrorHandler -> @Override 	public boolean hasError(ClientHttpResponse response) throws IOException;1495868221;Delegates to {@link #hasError(HttpStatus)} with the response status code.;@Override_	public boolean hasError(ClientHttpResponse response) throws IOException {_		return hasError(getHttpStatusCode(response))__	};delegates,to,link,has,error,http,status,with,the,response,status,code;override,public,boolean,has,error,client,http,response,response,throws,ioexception,return,has,error,get,http,status,code,response
DefaultResponseErrorHandler -> @Override 	public boolean hasError(ClientHttpResponse response) throws IOException;1505897698;Delegates to {@link #hasError(HttpStatus)} with the response status code.;@Override_	public boolean hasError(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = HttpStatus.resolve(response.getRawStatusCode())__		return (statusCode != null && hasError(statusCode))__	};delegates,to,link,has,error,http,status,with,the,response,status,code;override,public,boolean,has,error,client,http,response,response,throws,ioexception,http,status,status,code,http,status,resolve,response,get,raw,status,code,return,status,code,null,has,error,status,code
DefaultResponseErrorHandler -> @Override 	public boolean hasError(ClientHttpResponse response) throws IOException;1508853089;Delegates to {@link #hasError(HttpStatus)} with the response status code.;@Override_	public boolean hasError(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = HttpStatus.resolve(response.getRawStatusCode())__		return (statusCode != null && hasError(statusCode))__	};delegates,to,link,has,error,http,status,with,the,response,status,code;override,public,boolean,has,error,client,http,response,response,throws,ioexception,http,status,status,code,http,status,resolve,response,get,raw,status,code,return,status,code,null,has,error,status,code
DefaultResponseErrorHandler -> @Override 	public boolean hasError(ClientHttpResponse response) throws IOException;1533554950;Delegates to {@link #hasError(HttpStatus)} with the response status code.;@Override_	public boolean hasError(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = HttpStatus.resolve(response.getRawStatusCode())__		return (statusCode != null && hasError(statusCode))__	};delegates,to,link,has,error,http,status,with,the,response,status,code;override,public,boolean,has,error,client,http,response,response,throws,ioexception,http,status,status,code,http,status,resolve,response,get,raw,status,code,return,status,code,null,has,error,status,code
DefaultResponseErrorHandler -> @Override 	public boolean hasError(ClientHttpResponse response) throws IOException;1533554950;Delegates to {@link #hasError(HttpStatus)} with the response status code.;@Override_	public boolean hasError(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = HttpStatus.resolve(response.getRawStatusCode())__		return (statusCode != null && hasError(statusCode))__	};delegates,to,link,has,error,http,status,with,the,response,status,code;override,public,boolean,has,error,client,http,response,response,throws,ioexception,http,status,status,code,http,status,resolve,response,get,raw,status,code,return,status,code,null,has,error,status,code
DefaultResponseErrorHandler -> @Override 	public boolean hasError(ClientHttpResponse response) throws IOException;1533573240;Delegates to {@link #hasError(HttpStatus)} with the response status code.;@Override_	public boolean hasError(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = HttpStatus.resolve(response.getRawStatusCode())__		return (statusCode != null && hasError(statusCode))__	};delegates,to,link,has,error,http,status,with,the,response,status,code;override,public,boolean,has,error,client,http,response,response,throws,ioexception,http,status,status,code,http,status,resolve,response,get,raw,status,code,return,status,code,null,has,error,status,code
DefaultResponseErrorHandler -> @Override 	public boolean hasError(ClientHttpResponse response) throws IOException;1533731648;Delegates to {@link #hasError(HttpStatus)} with the response status code.;@Override_	public boolean hasError(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = HttpStatus.resolve(response.getRawStatusCode())__		return (statusCode != null && hasError(statusCode))__	};delegates,to,link,has,error,http,status,with,the,response,status,code;override,public,boolean,has,error,client,http,response,response,throws,ioexception,http,status,status,code,http,status,resolve,response,get,raw,status,code,return,status,code,null,has,error,status,code
DefaultResponseErrorHandler -> @Override 	public boolean hasError(ClientHttpResponse response) throws IOException;1534438291;Delegates to {@link #hasError(HttpStatus)} with the response status code.;@Override_	public boolean hasError(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = HttpStatus.resolve(response.getRawStatusCode())__		return (statusCode != null && hasError(statusCode))__	};delegates,to,link,has,error,http,status,with,the,response,status,code;override,public,boolean,has,error,client,http,response,response,throws,ioexception,http,status,status,code,http,status,resolve,response,get,raw,status,code,return,status,code,null,has,error,status,code
DefaultResponseErrorHandler -> @Override 	public boolean hasError(ClientHttpResponse response) throws IOException;1542977750;Delegates to {@link #hasError(HttpStatus)} with the response status code.;@Override_	public boolean hasError(ClientHttpResponse response) throws IOException {_		int rawStatusCode = response.getRawStatusCode()__		HttpStatus statusCode = HttpStatus.resolve(rawStatusCode)__		return (statusCode != null ? hasError(statusCode) : hasError(rawStatusCode))__	};delegates,to,link,has,error,http,status,with,the,response,status,code;override,public,boolean,has,error,client,http,response,response,throws,ioexception,int,raw,status,code,response,get,raw,status,code,http,status,status,code,http,status,resolve,raw,status,code,return,status,code,null,has,error,status,code,has,error,raw,status,code
DefaultResponseErrorHandler -> @Override 	public boolean hasError(ClientHttpResponse response) throws IOException;1542997667;Delegates to {@link #hasError(HttpStatus)} (for a standard status enum value) or_{@link #hasError(int)} (for an unknown status code) with the response status code._@see ClientHttpResponse#getRawStatusCode()_@see #hasError(HttpStatus)_@see #hasError(int);@Override_	public boolean hasError(ClientHttpResponse response) throws IOException {_		int rawStatusCode = response.getRawStatusCode()__		HttpStatus statusCode = HttpStatus.resolve(rawStatusCode)__		return (statusCode != null ? hasError(statusCode) : hasError(rawStatusCode))__	};delegates,to,link,has,error,http,status,for,a,standard,status,enum,value,or,link,has,error,int,for,an,unknown,status,code,with,the,response,status,code,see,client,http,response,get,raw,status,code,see,has,error,http,status,see,has,error,int;override,public,boolean,has,error,client,http,response,response,throws,ioexception,int,raw,status,code,response,get,raw,status,code,http,status,status,code,http,status,resolve,raw,status,code,return,status,code,null,has,error,status,code,has,error,raw,status,code
DefaultResponseErrorHandler -> protected boolean hasError(int unknownStatusCode);1542977750;Template method called from {@link #hasError(ClientHttpResponse)}._<p>The default implementation checks if the given status code is_{@code HttpStatus.Series#CLIENT_ERROR CLIENT_ERROR} or_{@code HttpStatus.Series#SERVER_ERROR SERVER_ERROR}._Can be overridden in subclasses._@param unknownStatusCode the HTTP status code as raw value_@return {@code true} if the response has an error_ {@code false} otherwise_@since 4.3.21;protected boolean hasError(int unknownStatusCode) {_		HttpStatus.Series series = HttpStatus.Series.resolve(unknownStatusCode)__		return (series == HttpStatus.Series.CLIENT_ERROR || series == HttpStatus.Series.SERVER_ERROR)__	};template,method,called,from,link,has,error,client,http,response,p,the,default,implementation,checks,if,the,given,status,code,is,code,http,status,series,or,code,http,status,series,can,be,overridden,in,subclasses,param,unknown,status,code,the,http,status,code,as,raw,value,return,code,true,if,the,response,has,an,error,code,false,otherwise,since,4,3,21;protected,boolean,has,error,int,unknown,status,code,http,status,series,series,http,status,series,resolve,unknown,status,code,return,series,http,status,series,series,http,status,series
DefaultResponseErrorHandler -> protected boolean hasError(int unknownStatusCode);1542997667;Template method called from {@link #hasError(ClientHttpResponse)}._<p>The default implementation checks if the given status code is_{@code HttpStatus.Series#CLIENT_ERROR CLIENT_ERROR} or_{@code HttpStatus.Series#SERVER_ERROR SERVER_ERROR}._Can be overridden in subclasses._@param unknownStatusCode the HTTP status code as raw value_@return {@code true} if the response indicates an error_ {@code false} otherwise_@since 4.3.21_@see HttpStatus.Series#CLIENT_ERROR_@see HttpStatus.Series#SERVER_ERROR;protected boolean hasError(int unknownStatusCode) {_		HttpStatus.Series series = HttpStatus.Series.resolve(unknownStatusCode)__		return (series == HttpStatus.Series.CLIENT_ERROR || series == HttpStatus.Series.SERVER_ERROR)__	};template,method,called,from,link,has,error,client,http,response,p,the,default,implementation,checks,if,the,given,status,code,is,code,http,status,series,or,code,http,status,series,can,be,overridden,in,subclasses,param,unknown,status,code,the,http,status,code,as,raw,value,return,code,true,if,the,response,indicates,an,error,code,false,otherwise,since,4,3,21,see,http,status,series,see,http,status,series;protected,boolean,has,error,int,unknown,status,code,http,status,series,series,http,status,series,resolve,unknown,status,code,return,series,http,status,series,series,http,status,series
DefaultResponseErrorHandler -> protected HttpStatus getHttpStatusCode(ClientHttpResponse response) throws IOException;1489687033;Determine the HTTP status of the given response._@param response the response to inspect_@return the associated HTTP status_@throws IOException in case of I/O errors_@throws UnknownHttpStatusCodeException in case of an unknown status code_that cannot be represented with the {@link HttpStatus} enum_@since 4.3.8;protected HttpStatus getHttpStatusCode(ClientHttpResponse response) throws IOException {_		try {_			return response.getStatusCode()__		}_		catch (IllegalArgumentException ex) {_			throw new UnknownHttpStatusCodeException(response.getRawStatusCode(), response.getStatusText(),_					response.getHeaders(), getResponseBody(response), getCharset(response))__		}_	};determine,the,http,status,of,the,given,response,param,response,the,response,to,inspect,return,the,associated,http,status,throws,ioexception,in,case,of,i,o,errors,throws,unknown,http,status,code,exception,in,case,of,an,unknown,status,code,that,cannot,be,represented,with,the,link,http,status,enum,since,4,3,8;protected,http,status,get,http,status,code,client,http,response,response,throws,ioexception,try,return,response,get,status,code,catch,illegal,argument,exception,ex,throw,new,unknown,http,status,code,exception,response,get,raw,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response
DefaultResponseErrorHandler -> protected HttpStatus getHttpStatusCode(ClientHttpResponse response) throws IOException;1495868221;Determine the HTTP status of the given response._@param response the response to inspect_@return the associated HTTP status_@throws IOException in case of I/O errors_@throws UnknownHttpStatusCodeException in case of an unknown status code_that cannot be represented with the {@link HttpStatus} enum_@since 4.3.8;protected HttpStatus getHttpStatusCode(ClientHttpResponse response) throws IOException {_		try {_			return response.getStatusCode()__		}_		catch (IllegalArgumentException ex) {_			throw new UnknownHttpStatusCodeException(response.getRawStatusCode(), response.getStatusText(),_					response.getHeaders(), getResponseBody(response), getCharset(response))__		}_	};determine,the,http,status,of,the,given,response,param,response,the,response,to,inspect,return,the,associated,http,status,throws,ioexception,in,case,of,i,o,errors,throws,unknown,http,status,code,exception,in,case,of,an,unknown,status,code,that,cannot,be,represented,with,the,link,http,status,enum,since,4,3,8;protected,http,status,get,http,status,code,client,http,response,response,throws,ioexception,try,return,response,get,status,code,catch,illegal,argument,exception,ex,throw,new,unknown,http,status,code,exception,response,get,raw,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response
DefaultResponseErrorHandler -> @Deprecated 	protected HttpStatus getHttpStatusCode(ClientHttpResponse response) throws IOException;1505897698;Determine the HTTP status of the given response._@param response the response to inspect_@return the associated HTTP status_@throws IOException in case of I/O errors_@throws UnknownHttpStatusCodeException in case of an unknown status code_that cannot be represented with the {@link HttpStatus} enum_@since 4.3.8_@deprecated as of 5.0, in favor of {@link #handleError(ClientHttpResponse, HttpStatus)};@Deprecated_	protected HttpStatus getHttpStatusCode(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = HttpStatus.resolve(response.getRawStatusCode())__		if (statusCode == null) {_			throw new UnknownHttpStatusCodeException(response.getRawStatusCode(), response.getStatusText(),_					response.getHeaders(), getResponseBody(response), getCharset(response))__		}_		return statusCode__	};determine,the,http,status,of,the,given,response,param,response,the,response,to,inspect,return,the,associated,http,status,throws,ioexception,in,case,of,i,o,errors,throws,unknown,http,status,code,exception,in,case,of,an,unknown,status,code,that,cannot,be,represented,with,the,link,http,status,enum,since,4,3,8,deprecated,as,of,5,0,in,favor,of,link,handle,error,client,http,response,http,status;deprecated,protected,http,status,get,http,status,code,client,http,response,response,throws,ioexception,http,status,status,code,http,status,resolve,response,get,raw,status,code,if,status,code,null,throw,new,unknown,http,status,code,exception,response,get,raw,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,return,status,code
DefaultResponseErrorHandler -> @Deprecated 	protected HttpStatus getHttpStatusCode(ClientHttpResponse response) throws IOException;1508853089;Determine the HTTP status of the given response._@param response the response to inspect_@return the associated HTTP status_@throws IOException in case of I/O errors_@throws UnknownHttpStatusCodeException in case of an unknown status code_that cannot be represented with the {@link HttpStatus} enum_@since 4.3.8_@deprecated as of 5.0, in favor of {@link #handleError(ClientHttpResponse, HttpStatus)};@Deprecated_	protected HttpStatus getHttpStatusCode(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = HttpStatus.resolve(response.getRawStatusCode())__		if (statusCode == null) {_			throw new UnknownHttpStatusCodeException(response.getRawStatusCode(), response.getStatusText(),_					response.getHeaders(), getResponseBody(response), getCharset(response))__		}_		return statusCode__	};determine,the,http,status,of,the,given,response,param,response,the,response,to,inspect,return,the,associated,http,status,throws,ioexception,in,case,of,i,o,errors,throws,unknown,http,status,code,exception,in,case,of,an,unknown,status,code,that,cannot,be,represented,with,the,link,http,status,enum,since,4,3,8,deprecated,as,of,5,0,in,favor,of,link,handle,error,client,http,response,http,status;deprecated,protected,http,status,get,http,status,code,client,http,response,response,throws,ioexception,http,status,status,code,http,status,resolve,response,get,raw,status,code,if,status,code,null,throw,new,unknown,http,status,code,exception,response,get,raw,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,return,status,code
DefaultResponseErrorHandler -> @Deprecated 	protected HttpStatus getHttpStatusCode(ClientHttpResponse response) throws IOException;1533554950;Determine the HTTP status of the given response._@param response the response to inspect_@return the associated HTTP status_@throws IOException in case of I/O errors_@throws UnknownHttpStatusCodeException in case of an unknown status code_that cannot be represented with the {@link HttpStatus} enum_@since 4.3.8_@deprecated as of 5.0, in favor of {@link #handleError(ClientHttpResponse, HttpStatus)};@Deprecated_	protected HttpStatus getHttpStatusCode(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = HttpStatus.resolve(response.getRawStatusCode())__		if (statusCode == null) {_			throw new UnknownHttpStatusCodeException(response.getRawStatusCode(), response.getStatusText(),_					response.getHeaders(), getResponseBody(response), getCharset(response))__		}_		return statusCode__	};determine,the,http,status,of,the,given,response,param,response,the,response,to,inspect,return,the,associated,http,status,throws,ioexception,in,case,of,i,o,errors,throws,unknown,http,status,code,exception,in,case,of,an,unknown,status,code,that,cannot,be,represented,with,the,link,http,status,enum,since,4,3,8,deprecated,as,of,5,0,in,favor,of,link,handle,error,client,http,response,http,status;deprecated,protected,http,status,get,http,status,code,client,http,response,response,throws,ioexception,http,status,status,code,http,status,resolve,response,get,raw,status,code,if,status,code,null,throw,new,unknown,http,status,code,exception,response,get,raw,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,return,status,code
DefaultResponseErrorHandler -> @Deprecated 	protected HttpStatus getHttpStatusCode(ClientHttpResponse response) throws IOException;1533554950;Determine the HTTP status of the given response._@param response the response to inspect_@return the associated HTTP status_@throws IOException in case of I/O errors_@throws UnknownHttpStatusCodeException in case of an unknown status code_that cannot be represented with the {@link HttpStatus} enum_@since 4.3.8_@deprecated as of 5.0, in favor of {@link #handleError(ClientHttpResponse, HttpStatus)};@Deprecated_	protected HttpStatus getHttpStatusCode(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = HttpStatus.resolve(response.getRawStatusCode())__		if (statusCode == null) {_			throw new UnknownHttpStatusCodeException(response.getRawStatusCode(), response.getStatusText(),_					response.getHeaders(), getResponseBody(response), getCharset(response))__		}_		return statusCode__	};determine,the,http,status,of,the,given,response,param,response,the,response,to,inspect,return,the,associated,http,status,throws,ioexception,in,case,of,i,o,errors,throws,unknown,http,status,code,exception,in,case,of,an,unknown,status,code,that,cannot,be,represented,with,the,link,http,status,enum,since,4,3,8,deprecated,as,of,5,0,in,favor,of,link,handle,error,client,http,response,http,status;deprecated,protected,http,status,get,http,status,code,client,http,response,response,throws,ioexception,http,status,status,code,http,status,resolve,response,get,raw,status,code,if,status,code,null,throw,new,unknown,http,status,code,exception,response,get,raw,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,return,status,code
DefaultResponseErrorHandler -> @Deprecated 	protected HttpStatus getHttpStatusCode(ClientHttpResponse response) throws IOException;1533573240;Determine the HTTP status of the given response._@param response the response to inspect_@return the associated HTTP status_@throws IOException in case of I/O errors_@throws UnknownHttpStatusCodeException in case of an unknown status code_that cannot be represented with the {@link HttpStatus} enum_@since 4.3.8_@deprecated as of 5.0, in favor of {@link #handleError(ClientHttpResponse, HttpStatus)};@Deprecated_	protected HttpStatus getHttpStatusCode(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = HttpStatus.resolve(response.getRawStatusCode())__		if (statusCode == null) {_			throw new UnknownHttpStatusCodeException(response.getRawStatusCode(), response.getStatusText(),_					response.getHeaders(), getResponseBody(response), getCharset(response))__		}_		return statusCode__	};determine,the,http,status,of,the,given,response,param,response,the,response,to,inspect,return,the,associated,http,status,throws,ioexception,in,case,of,i,o,errors,throws,unknown,http,status,code,exception,in,case,of,an,unknown,status,code,that,cannot,be,represented,with,the,link,http,status,enum,since,4,3,8,deprecated,as,of,5,0,in,favor,of,link,handle,error,client,http,response,http,status;deprecated,protected,http,status,get,http,status,code,client,http,response,response,throws,ioexception,http,status,status,code,http,status,resolve,response,get,raw,status,code,if,status,code,null,throw,new,unknown,http,status,code,exception,response,get,raw,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,return,status,code
DefaultResponseErrorHandler -> @Deprecated 	protected HttpStatus getHttpStatusCode(ClientHttpResponse response) throws IOException;1533731648;Determine the HTTP status of the given response._@param response the response to inspect_@return the associated HTTP status_@throws IOException in case of I/O errors_@throws UnknownHttpStatusCodeException in case of an unknown status code_that cannot be represented with the {@link HttpStatus} enum_@since 4.3.8_@deprecated as of 5.0, in favor of {@link #handleError(ClientHttpResponse, HttpStatus)};@Deprecated_	protected HttpStatus getHttpStatusCode(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = HttpStatus.resolve(response.getRawStatusCode())__		if (statusCode == null) {_			throw new UnknownHttpStatusCodeException(response.getRawStatusCode(), response.getStatusText(),_					response.getHeaders(), getResponseBody(response), getCharset(response))__		}_		return statusCode__	};determine,the,http,status,of,the,given,response,param,response,the,response,to,inspect,return,the,associated,http,status,throws,ioexception,in,case,of,i,o,errors,throws,unknown,http,status,code,exception,in,case,of,an,unknown,status,code,that,cannot,be,represented,with,the,link,http,status,enum,since,4,3,8,deprecated,as,of,5,0,in,favor,of,link,handle,error,client,http,response,http,status;deprecated,protected,http,status,get,http,status,code,client,http,response,response,throws,ioexception,http,status,status,code,http,status,resolve,response,get,raw,status,code,if,status,code,null,throw,new,unknown,http,status,code,exception,response,get,raw,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,return,status,code
DefaultResponseErrorHandler -> @Deprecated 	protected HttpStatus getHttpStatusCode(ClientHttpResponse response) throws IOException;1534438291;Determine the HTTP status of the given response._@param response the response to inspect_@return the associated HTTP status_@throws IOException in case of I/O errors_@throws UnknownHttpStatusCodeException in case of an unknown status code_that cannot be represented with the {@link HttpStatus} enum_@since 4.3.8_@deprecated as of 5.0, in favor of {@link #handleError(ClientHttpResponse, HttpStatus)};@Deprecated_	protected HttpStatus getHttpStatusCode(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = HttpStatus.resolve(response.getRawStatusCode())__		if (statusCode == null) {_			throw new UnknownHttpStatusCodeException(response.getRawStatusCode(), response.getStatusText(),_					response.getHeaders(), getResponseBody(response), getCharset(response))__		}_		return statusCode__	};determine,the,http,status,of,the,given,response,param,response,the,response,to,inspect,return,the,associated,http,status,throws,ioexception,in,case,of,i,o,errors,throws,unknown,http,status,code,exception,in,case,of,an,unknown,status,code,that,cannot,be,represented,with,the,link,http,status,enum,since,4,3,8,deprecated,as,of,5,0,in,favor,of,link,handle,error,client,http,response,http,status;deprecated,protected,http,status,get,http,status,code,client,http,response,response,throws,ioexception,http,status,status,code,http,status,resolve,response,get,raw,status,code,if,status,code,null,throw,new,unknown,http,status,code,exception,response,get,raw,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,return,status,code
DefaultResponseErrorHandler -> @Deprecated 	protected HttpStatus getHttpStatusCode(ClientHttpResponse response) throws IOException;1542977750;Determine the HTTP status of the given response._@param response the response to inspect_@return the associated HTTP status_@throws IOException in case of I/O errors_@throws UnknownHttpStatusCodeException in case of an unknown status code_that cannot be represented with the {@link HttpStatus} enum_@since 4.3.8_@deprecated as of 5.0, in favor of {@link #handleError(ClientHttpResponse, HttpStatus)};@Deprecated_	protected HttpStatus getHttpStatusCode(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = HttpStatus.resolve(response.getRawStatusCode())__		if (statusCode == null) {_			throw new UnknownHttpStatusCodeException(response.getRawStatusCode(), response.getStatusText(),_					response.getHeaders(), getResponseBody(response), getCharset(response))__		}_		return statusCode__	};determine,the,http,status,of,the,given,response,param,response,the,response,to,inspect,return,the,associated,http,status,throws,ioexception,in,case,of,i,o,errors,throws,unknown,http,status,code,exception,in,case,of,an,unknown,status,code,that,cannot,be,represented,with,the,link,http,status,enum,since,4,3,8,deprecated,as,of,5,0,in,favor,of,link,handle,error,client,http,response,http,status;deprecated,protected,http,status,get,http,status,code,client,http,response,response,throws,ioexception,http,status,status,code,http,status,resolve,response,get,raw,status,code,if,status,code,null,throw,new,unknown,http,status,code,exception,response,get,raw,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,return,status,code
DefaultResponseErrorHandler -> @Deprecated 	protected HttpStatus getHttpStatusCode(ClientHttpResponse response) throws IOException;1542997667;Determine the HTTP status of the given response._@param response the response to inspect_@return the associated HTTP status_@throws IOException in case of I/O errors_@throws UnknownHttpStatusCodeException in case of an unknown status code_that cannot be represented with the {@link HttpStatus} enum_@since 4.3.8_@deprecated as of 5.0, in favor of {@link #handleError(ClientHttpResponse, HttpStatus)};@Deprecated_	protected HttpStatus getHttpStatusCode(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = HttpStatus.resolve(response.getRawStatusCode())__		if (statusCode == null) {_			throw new UnknownHttpStatusCodeException(response.getRawStatusCode(), response.getStatusText(),_					response.getHeaders(), getResponseBody(response), getCharset(response))__		}_		return statusCode__	};determine,the,http,status,of,the,given,response,param,response,the,response,to,inspect,return,the,associated,http,status,throws,ioexception,in,case,of,i,o,errors,throws,unknown,http,status,code,exception,in,case,of,an,unknown,status,code,that,cannot,be,represented,with,the,link,http,status,enum,since,4,3,8,deprecated,as,of,5,0,in,favor,of,link,handle,error,client,http,response,http,status;deprecated,protected,http,status,get,http,status,code,client,http,response,response,throws,ioexception,http,status,status,code,http,status,resolve,response,get,raw,status,code,if,status,code,null,throw,new,unknown,http,status,code,exception,response,get,raw,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,return,status,code
DefaultResponseErrorHandler -> public boolean hasError(ClientHttpResponse response) throws IOException;1328020251;Delegates to {@link #hasError(HttpStatus)} with the response status code.;public boolean hasError(ClientHttpResponse response) throws IOException {_		return hasError(response.getStatusCode())__	};delegates,to,link,has,error,http,status,with,the,response,status,code;public,boolean,has,error,client,http,response,response,throws,ioexception,return,has,error,response,get,status,code
DefaultResponseErrorHandler -> public boolean hasError(ClientHttpResponse response) throws IOException;1338561606;Delegates to {@link #hasError(HttpStatus)} with the response status code.;public boolean hasError(ClientHttpResponse response) throws IOException {_		return hasError(response.getStatusCode())__	};delegates,to,link,has,error,http,status,with,the,response,status,code;public,boolean,has,error,client,http,response,response,throws,ioexception,return,has,error,response,get,status,code
DefaultResponseErrorHandler -> public boolean hasError(ClientHttpResponse response) throws IOException;1339590436;Delegates to {@link #hasError(HttpStatus)} with the response status code.;public boolean hasError(ClientHttpResponse response) throws IOException {_		return hasError(getStatusCode(response))__	};delegates,to,link,has,error,http,status,with,the,response,status,code;public,boolean,has,error,client,http,response,response,throws,ioexception,return,has,error,get,status,code,response
DefaultResponseErrorHandler -> public boolean hasError(ClientHttpResponse response) throws IOException;1351878444;Delegates to {@link #hasError(HttpStatus)} with the response status code.;public boolean hasError(ClientHttpResponse response) throws IOException {_		return hasError(getHttpStatusCode(response))__	};delegates,to,link,has,error,http,status,with,the,response,status,code;public,boolean,has,error,client,http,response,response,throws,ioexception,return,has,error,get,http,status,code,response
DefaultResponseErrorHandler -> public boolean hasError(ClientHttpResponse response) throws IOException;1357119239;Delegates to {@link #hasError(HttpStatus)} with the response status code.;public boolean hasError(ClientHttpResponse response) throws IOException {_		return hasError(getHttpStatusCode(response))__	};delegates,to,link,has,error,http,status,with,the,response,status,code;public,boolean,has,error,client,http,response,response,throws,ioexception,return,has,error,get,http,status,code,response
DefaultResponseErrorHandler -> protected boolean hasError(HttpStatus statusCode);1328020251;Template method called from {@link #hasError(ClientHttpResponse)}._<p>The default implementation checks if the given status code is_{@link org.springframework.http.HttpStatus.Series#CLIENT_ERROR CLIENT_ERROR}_or {@link org.springframework.http.HttpStatus.Series#SERVER_ERROR SERVER_ERROR}._Can be overridden in subclasses._@param statusCode the HTTP status code_@return <code>true</code> if the response has an error_ <code>false</code> otherwise;protected boolean hasError(HttpStatus statusCode) {_		return (statusCode.series() == HttpStatus.Series.CLIENT_ERROR ||_				statusCode.series() == HttpStatus.Series.SERVER_ERROR)__	};template,method,called,from,link,has,error,client,http,response,p,the,default,implementation,checks,if,the,given,status,code,is,link,org,springframework,http,http,status,series,or,link,org,springframework,http,http,status,series,can,be,overridden,in,subclasses,param,status,code,the,http,status,code,return,code,true,code,if,the,response,has,an,error,code,false,code,otherwise;protected,boolean,has,error,http,status,status,code,return,status,code,series,http,status,series,status,code,series,http,status,series
DefaultResponseErrorHandler -> protected boolean hasError(HttpStatus statusCode);1338561606;Template method called from {@link #hasError(ClientHttpResponse)}._<p>The default implementation checks if the given status code is_{@link org.springframework.http.HttpStatus.Series#CLIENT_ERROR CLIENT_ERROR}_or {@link org.springframework.http.HttpStatus.Series#SERVER_ERROR SERVER_ERROR}._Can be overridden in subclasses._@param statusCode the HTTP status code_@return <code>true</code> if the response has an error_ <code>false</code> otherwise;protected boolean hasError(HttpStatus statusCode) {_		return (statusCode.series() == HttpStatus.Series.CLIENT_ERROR ||_				statusCode.series() == HttpStatus.Series.SERVER_ERROR)__	};template,method,called,from,link,has,error,client,http,response,p,the,default,implementation,checks,if,the,given,status,code,is,link,org,springframework,http,http,status,series,or,link,org,springframework,http,http,status,series,can,be,overridden,in,subclasses,param,status,code,the,http,status,code,return,code,true,code,if,the,response,has,an,error,code,false,code,otherwise;protected,boolean,has,error,http,status,status,code,return,status,code,series,http,status,series,status,code,series,http,status,series
DefaultResponseErrorHandler -> protected boolean hasError(HttpStatus statusCode);1339590436;Template method called from {@link #hasError(ClientHttpResponse)}._<p>The default implementation checks if the given status code is_{@link org.springframework.http.HttpStatus.Series#CLIENT_ERROR CLIENT_ERROR}_or {@link org.springframework.http.HttpStatus.Series#SERVER_ERROR SERVER_ERROR}._Can be overridden in subclasses._@param statusCode the HTTP status code_@return <code>true</code> if the response has an error_ <code>false</code> otherwise;protected boolean hasError(HttpStatus statusCode) {_		return (statusCode.series() == HttpStatus.Series.CLIENT_ERROR ||_				statusCode.series() == HttpStatus.Series.SERVER_ERROR)__	};template,method,called,from,link,has,error,client,http,response,p,the,default,implementation,checks,if,the,given,status,code,is,link,org,springframework,http,http,status,series,or,link,org,springframework,http,http,status,series,can,be,overridden,in,subclasses,param,status,code,the,http,status,code,return,code,true,code,if,the,response,has,an,error,code,false,code,otherwise;protected,boolean,has,error,http,status,status,code,return,status,code,series,http,status,series,status,code,series,http,status,series
DefaultResponseErrorHandler -> protected boolean hasError(HttpStatus statusCode);1351878444;Template method called from {@link #hasError(ClientHttpResponse)}._<p>The default implementation checks if the given status code is_{@link org.springframework.http.HttpStatus.Series#CLIENT_ERROR CLIENT_ERROR}_or {@link org.springframework.http.HttpStatus.Series#SERVER_ERROR SERVER_ERROR}._Can be overridden in subclasses._@param statusCode the HTTP status code_@return <code>true</code> if the response has an error_ <code>false</code> otherwise;protected boolean hasError(HttpStatus statusCode) {_		return (statusCode.series() == HttpStatus.Series.CLIENT_ERROR ||_				statusCode.series() == HttpStatus.Series.SERVER_ERROR)__	};template,method,called,from,link,has,error,client,http,response,p,the,default,implementation,checks,if,the,given,status,code,is,link,org,springframework,http,http,status,series,or,link,org,springframework,http,http,status,series,can,be,overridden,in,subclasses,param,status,code,the,http,status,code,return,code,true,code,if,the,response,has,an,error,code,false,code,otherwise;protected,boolean,has,error,http,status,status,code,return,status,code,series,http,status,series,status,code,series,http,status,series
DefaultResponseErrorHandler -> protected boolean hasError(HttpStatus statusCode);1356735495;Template method called from {@link #hasError(ClientHttpResponse)}._<p>The default implementation checks if the given status code is_{@link org.springframework.http.HttpStatus.Series#CLIENT_ERROR CLIENT_ERROR}_or {@link org.springframework.http.HttpStatus.Series#SERVER_ERROR SERVER_ERROR}._Can be overridden in subclasses._@param statusCode the HTTP status code_@return {@code true} if the response has an error_ {@code false} otherwise;protected boolean hasError(HttpStatus statusCode) {_		return (statusCode.series() == HttpStatus.Series.CLIENT_ERROR ||_				statusCode.series() == HttpStatus.Series.SERVER_ERROR)__	};template,method,called,from,link,has,error,client,http,response,p,the,default,implementation,checks,if,the,given,status,code,is,link,org,springframework,http,http,status,series,or,link,org,springframework,http,http,status,series,can,be,overridden,in,subclasses,param,status,code,the,http,status,code,return,code,true,if,the,response,has,an,error,code,false,otherwise;protected,boolean,has,error,http,status,status,code,return,status,code,series,http,status,series,status,code,series,http,status,series
DefaultResponseErrorHandler -> protected boolean hasError(HttpStatus statusCode);1357119239;Template method called from {@link #hasError(ClientHttpResponse)}._<p>The default implementation checks if the given status code is_{@link org.springframework.http.HttpStatus.Series#CLIENT_ERROR CLIENT_ERROR}_or {@link org.springframework.http.HttpStatus.Series#SERVER_ERROR SERVER_ERROR}._Can be overridden in subclasses._@param statusCode the HTTP status code_@return {@code true} if the response has an error_ {@code false} otherwise;protected boolean hasError(HttpStatus statusCode) {_		return (statusCode.series() == HttpStatus.Series.CLIENT_ERROR ||_				statusCode.series() == HttpStatus.Series.SERVER_ERROR)__	};template,method,called,from,link,has,error,client,http,response,p,the,default,implementation,checks,if,the,given,status,code,is,link,org,springframework,http,http,status,series,or,link,org,springframework,http,http,status,series,can,be,overridden,in,subclasses,param,status,code,the,http,status,code,return,code,true,if,the,response,has,an,error,code,false,otherwise;protected,boolean,has,error,http,status,status,code,return,status,code,series,http,status,series,status,code,series,http,status,series
DefaultResponseErrorHandler -> protected boolean hasError(HttpStatus statusCode);1368482696;Template method called from {@link #hasError(ClientHttpResponse)}._<p>The default implementation checks if the given status code is_{@link org.springframework.http.HttpStatus.Series#CLIENT_ERROR CLIENT_ERROR}_or {@link org.springframework.http.HttpStatus.Series#SERVER_ERROR SERVER_ERROR}._Can be overridden in subclasses._@param statusCode the HTTP status code_@return {@code true} if the response has an error_ {@code false} otherwise;protected boolean hasError(HttpStatus statusCode) {_		return (statusCode.series() == HttpStatus.Series.CLIENT_ERROR ||_				statusCode.series() == HttpStatus.Series.SERVER_ERROR)__	};template,method,called,from,link,has,error,client,http,response,p,the,default,implementation,checks,if,the,given,status,code,is,link,org,springframework,http,http,status,series,or,link,org,springframework,http,http,status,series,can,be,overridden,in,subclasses,param,status,code,the,http,status,code,return,code,true,if,the,response,has,an,error,code,false,otherwise;protected,boolean,has,error,http,status,status,code,return,status,code,series,http,status,series,status,code,series,http,status,series
DefaultResponseErrorHandler -> protected boolean hasError(HttpStatus statusCode);1460644739;Template method called from {@link #hasError(ClientHttpResponse)}._<p>The default implementation checks if the given status code is_{@link org.springframework.http.HttpStatus.Series#CLIENT_ERROR CLIENT_ERROR}_or {@link org.springframework.http.HttpStatus.Series#SERVER_ERROR SERVER_ERROR}._Can be overridden in subclasses._@param statusCode the HTTP status code_@return {@code true} if the response has an error_ {@code false} otherwise;protected boolean hasError(HttpStatus statusCode) {_		return (statusCode.series() == HttpStatus.Series.CLIENT_ERROR ||_				statusCode.series() == HttpStatus.Series.SERVER_ERROR)__	};template,method,called,from,link,has,error,client,http,response,p,the,default,implementation,checks,if,the,given,status,code,is,link,org,springframework,http,http,status,series,or,link,org,springframework,http,http,status,series,can,be,overridden,in,subclasses,param,status,code,the,http,status,code,return,code,true,if,the,response,has,an,error,code,false,otherwise;protected,boolean,has,error,http,status,status,code,return,status,code,series,http,status,series,status,code,series,http,status,series
DefaultResponseErrorHandler -> protected boolean hasError(HttpStatus statusCode);1489687033;Template method called from {@link #hasError(ClientHttpResponse)}._<p>The default implementation checks if the given status code is_{@link org.springframework.http.HttpStatus.Series#CLIENT_ERROR CLIENT_ERROR}_or {@link org.springframework.http.HttpStatus.Series#SERVER_ERROR SERVER_ERROR}._Can be overridden in subclasses._@param statusCode the HTTP status code_@return {@code true} if the response has an error_ {@code false} otherwise_@see #getHttpStatusCode(ClientHttpResponse);protected boolean hasError(HttpStatus statusCode) {_		return (statusCode.series() == HttpStatus.Series.CLIENT_ERROR ||_				statusCode.series() == HttpStatus.Series.SERVER_ERROR)__	};template,method,called,from,link,has,error,client,http,response,p,the,default,implementation,checks,if,the,given,status,code,is,link,org,springframework,http,http,status,series,or,link,org,springframework,http,http,status,series,can,be,overridden,in,subclasses,param,status,code,the,http,status,code,return,code,true,if,the,response,has,an,error,code,false,otherwise,see,get,http,status,code,client,http,response;protected,boolean,has,error,http,status,status,code,return,status,code,series,http,status,series,status,code,series,http,status,series
DefaultResponseErrorHandler -> protected boolean hasError(HttpStatus statusCode);1495868221;Template method called from {@link #hasError(ClientHttpResponse)}._<p>The default implementation checks if the given status code is_{@link org.springframework.http.HttpStatus.Series#CLIENT_ERROR CLIENT_ERROR}_or {@link org.springframework.http.HttpStatus.Series#SERVER_ERROR SERVER_ERROR}._Can be overridden in subclasses._@param statusCode the HTTP status code_@return {@code true} if the response has an error_ {@code false} otherwise_@see #getHttpStatusCode(ClientHttpResponse);protected boolean hasError(HttpStatus statusCode) {_		return (statusCode.series() == HttpStatus.Series.CLIENT_ERROR ||_				statusCode.series() == HttpStatus.Series.SERVER_ERROR)__	};template,method,called,from,link,has,error,client,http,response,p,the,default,implementation,checks,if,the,given,status,code,is,link,org,springframework,http,http,status,series,or,link,org,springframework,http,http,status,series,can,be,overridden,in,subclasses,param,status,code,the,http,status,code,return,code,true,if,the,response,has,an,error,code,false,otherwise,see,get,http,status,code,client,http,response;protected,boolean,has,error,http,status,status,code,return,status,code,series,http,status,series,status,code,series,http,status,series
DefaultResponseErrorHandler -> protected boolean hasError(HttpStatus statusCode);1505897698;Template method called from {@link #hasError(ClientHttpResponse)}._<p>The default implementation checks if the given status code is_{@link HttpStatus.Series#CLIENT_ERROR CLIENT_ERROR} or_{@link HttpStatus.Series#SERVER_ERROR SERVER_ERROR}._Can be overridden in subclasses._@param statusCode the HTTP status code_@return {@code true} if the response has an error_ {@code false} otherwise;protected boolean hasError(HttpStatus statusCode) {_		return (statusCode.series() == HttpStatus.Series.CLIENT_ERROR ||_				statusCode.series() == HttpStatus.Series.SERVER_ERROR)__	};template,method,called,from,link,has,error,client,http,response,p,the,default,implementation,checks,if,the,given,status,code,is,link,http,status,series,or,link,http,status,series,can,be,overridden,in,subclasses,param,status,code,the,http,status,code,return,code,true,if,the,response,has,an,error,code,false,otherwise;protected,boolean,has,error,http,status,status,code,return,status,code,series,http,status,series,status,code,series,http,status,series
DefaultResponseErrorHandler -> protected boolean hasError(HttpStatus statusCode);1508853089;Template method called from {@link #hasError(ClientHttpResponse)}._<p>The default implementation checks if the given status code is_{@link HttpStatus.Series#CLIENT_ERROR CLIENT_ERROR} or_{@link HttpStatus.Series#SERVER_ERROR SERVER_ERROR}._Can be overridden in subclasses._@param statusCode the HTTP status code_@return {@code true} if the response has an error_ {@code false} otherwise;protected boolean hasError(HttpStatus statusCode) {_		return (statusCode.series() == HttpStatus.Series.CLIENT_ERROR ||_				statusCode.series() == HttpStatus.Series.SERVER_ERROR)__	};template,method,called,from,link,has,error,client,http,response,p,the,default,implementation,checks,if,the,given,status,code,is,link,http,status,series,or,link,http,status,series,can,be,overridden,in,subclasses,param,status,code,the,http,status,code,return,code,true,if,the,response,has,an,error,code,false,otherwise;protected,boolean,has,error,http,status,status,code,return,status,code,series,http,status,series,status,code,series,http,status,series
DefaultResponseErrorHandler -> protected boolean hasError(HttpStatus statusCode);1533554950;Template method called from {@link #hasError(ClientHttpResponse)}._<p>The default implementation checks if the given status code is_{@link HttpStatus.Series#CLIENT_ERROR CLIENT_ERROR} or_{@link HttpStatus.Series#SERVER_ERROR SERVER_ERROR}._Can be overridden in subclasses._@param statusCode the HTTP status code_@return {@code true} if the response has an error_ {@code false} otherwise;protected boolean hasError(HttpStatus statusCode) {_		return (statusCode.series() == HttpStatus.Series.CLIENT_ERROR ||_				statusCode.series() == HttpStatus.Series.SERVER_ERROR)__	};template,method,called,from,link,has,error,client,http,response,p,the,default,implementation,checks,if,the,given,status,code,is,link,http,status,series,or,link,http,status,series,can,be,overridden,in,subclasses,param,status,code,the,http,status,code,return,code,true,if,the,response,has,an,error,code,false,otherwise;protected,boolean,has,error,http,status,status,code,return,status,code,series,http,status,series,status,code,series,http,status,series
DefaultResponseErrorHandler -> protected boolean hasError(HttpStatus statusCode);1533554950;Template method called from {@link #hasError(ClientHttpResponse)}._<p>The default implementation checks if the given status code is_{@link HttpStatus.Series#CLIENT_ERROR CLIENT_ERROR} or_{@link HttpStatus.Series#SERVER_ERROR SERVER_ERROR}._Can be overridden in subclasses._@param statusCode the HTTP status code_@return {@code true} if the response has an error_ {@code false} otherwise;protected boolean hasError(HttpStatus statusCode) {_		return (statusCode.series() == HttpStatus.Series.CLIENT_ERROR ||_				statusCode.series() == HttpStatus.Series.SERVER_ERROR)__	};template,method,called,from,link,has,error,client,http,response,p,the,default,implementation,checks,if,the,given,status,code,is,link,http,status,series,or,link,http,status,series,can,be,overridden,in,subclasses,param,status,code,the,http,status,code,return,code,true,if,the,response,has,an,error,code,false,otherwise;protected,boolean,has,error,http,status,status,code,return,status,code,series,http,status,series,status,code,series,http,status,series
DefaultResponseErrorHandler -> protected boolean hasError(HttpStatus statusCode);1533573240;Template method called from {@link #hasError(ClientHttpResponse)}._<p>The default implementation checks if the given status code is_{@link HttpStatus.Series#CLIENT_ERROR CLIENT_ERROR} or_{@link HttpStatus.Series#SERVER_ERROR SERVER_ERROR}._Can be overridden in subclasses._@param statusCode the HTTP status code_@return {@code true} if the response has an error_ {@code false} otherwise;protected boolean hasError(HttpStatus statusCode) {_		return (statusCode.series() == HttpStatus.Series.CLIENT_ERROR ||_				statusCode.series() == HttpStatus.Series.SERVER_ERROR)__	};template,method,called,from,link,has,error,client,http,response,p,the,default,implementation,checks,if,the,given,status,code,is,link,http,status,series,or,link,http,status,series,can,be,overridden,in,subclasses,param,status,code,the,http,status,code,return,code,true,if,the,response,has,an,error,code,false,otherwise;protected,boolean,has,error,http,status,status,code,return,status,code,series,http,status,series,status,code,series,http,status,series
DefaultResponseErrorHandler -> protected boolean hasError(HttpStatus statusCode);1533731648;Template method called from {@link #hasError(ClientHttpResponse)}._<p>The default implementation checks if the given status code is_{@link HttpStatus.Series#CLIENT_ERROR CLIENT_ERROR} or_{@link HttpStatus.Series#SERVER_ERROR SERVER_ERROR}._Can be overridden in subclasses._@param statusCode the HTTP status code_@return {@code true} if the response has an error_ {@code false} otherwise;protected boolean hasError(HttpStatus statusCode) {_		return (statusCode.series() == HttpStatus.Series.CLIENT_ERROR ||_				statusCode.series() == HttpStatus.Series.SERVER_ERROR)__	};template,method,called,from,link,has,error,client,http,response,p,the,default,implementation,checks,if,the,given,status,code,is,link,http,status,series,or,link,http,status,series,can,be,overridden,in,subclasses,param,status,code,the,http,status,code,return,code,true,if,the,response,has,an,error,code,false,otherwise;protected,boolean,has,error,http,status,status,code,return,status,code,series,http,status,series,status,code,series,http,status,series
DefaultResponseErrorHandler -> protected boolean hasError(HttpStatus statusCode);1534438291;Template method called from {@link #hasError(ClientHttpResponse)}._<p>The default implementation checks if the given status code is_{@code HttpStatus.Series#CLIENT_ERROR CLIENT_ERROR} or_{@code HttpStatus.Series#SERVER_ERROR SERVER_ERROR}._Can be overridden in subclasses._@param statusCode the HTTP status code_@return {@code true} if the response has an error_ {@code false} otherwise;protected boolean hasError(HttpStatus statusCode) {_		return (statusCode.series() == HttpStatus.Series.CLIENT_ERROR ||_				statusCode.series() == HttpStatus.Series.SERVER_ERROR)__	};template,method,called,from,link,has,error,client,http,response,p,the,default,implementation,checks,if,the,given,status,code,is,code,http,status,series,or,code,http,status,series,can,be,overridden,in,subclasses,param,status,code,the,http,status,code,return,code,true,if,the,response,has,an,error,code,false,otherwise;protected,boolean,has,error,http,status,status,code,return,status,code,series,http,status,series,status,code,series,http,status,series
DefaultResponseErrorHandler -> protected boolean hasError(HttpStatus statusCode);1542977750;Template method called from {@link #hasError(ClientHttpResponse)}._<p>The default implementation checks if the given status code is_{@code HttpStatus.Series#CLIENT_ERROR CLIENT_ERROR} or_{@code HttpStatus.Series#SERVER_ERROR SERVER_ERROR}._Can be overridden in subclasses._@param statusCode the HTTP status code as enum value_@return {@code true} if the response has an error_ {@code false} otherwise;protected boolean hasError(HttpStatus statusCode) {_		return (statusCode.series() == HttpStatus.Series.CLIENT_ERROR ||_				statusCode.series() == HttpStatus.Series.SERVER_ERROR)__	};template,method,called,from,link,has,error,client,http,response,p,the,default,implementation,checks,if,the,given,status,code,is,code,http,status,series,or,code,http,status,series,can,be,overridden,in,subclasses,param,status,code,the,http,status,code,as,enum,value,return,code,true,if,the,response,has,an,error,code,false,otherwise;protected,boolean,has,error,http,status,status,code,return,status,code,series,http,status,series,status,code,series,http,status,series
DefaultResponseErrorHandler -> protected boolean hasError(HttpStatus statusCode);1542997667;Template method called from {@link #hasError(ClientHttpResponse)}._<p>The default implementation checks {@link HttpStatus#isError()}._Can be overridden in subclasses._@param statusCode the HTTP status code as enum value_@return {@code true} if the response indicates an error_ {@code false} otherwise_@see HttpStatus#isError();protected boolean hasError(HttpStatus statusCode) {_		return statusCode.isError()__	};template,method,called,from,link,has,error,client,http,response,p,the,default,implementation,checks,link,http,status,is,error,can,be,overridden,in,subclasses,param,status,code,the,http,status,code,as,enum,value,return,code,true,if,the,response,indicates,an,error,code,false,otherwise,see,http,status,is,error;protected,boolean,has,error,http,status,status,code,return,status,code,is,error
DefaultResponseErrorHandler -> @Override 	public void handleError(ClientHttpResponse response) throws IOException;1356735495;This default implementation throws a {@link HttpClientErrorException} if the response status code_is {@link org.springframework.http.HttpStatus.Series#CLIENT_ERROR}, a {@link HttpServerErrorException}_if it is {@link org.springframework.http.HttpStatus.Series#SERVER_ERROR},_and a {@link RestClientException} in other cases.;@Override_	public void handleError(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = getHttpStatusCode(response)__		switch (statusCode.series()) {_			case CLIENT_ERROR:_				throw new HttpClientErrorException(statusCode, response.getStatusText(),_						response.getHeaders(), getResponseBody(response), getCharset(response))__			case SERVER_ERROR:_				throw new HttpServerErrorException(statusCode, response.getStatusText(),_						response.getHeaders(), getResponseBody(response), getCharset(response))__			default:_				throw new RestClientException("Unknown status code [" + statusCode + "]")__		}_	};this,default,implementation,throws,a,link,http,client,error,exception,if,the,response,status,code,is,link,org,springframework,http,http,status,series,a,link,http,server,error,exception,if,it,is,link,org,springframework,http,http,status,series,and,a,link,rest,client,exception,in,other,cases;override,public,void,handle,error,client,http,response,response,throws,ioexception,http,status,status,code,get,http,status,code,response,switch,status,code,series,case,throw,new,http,client,error,exception,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,case,throw,new,http,server,error,exception,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,default,throw,new,rest,client,exception,unknown,status,code,status,code
DefaultResponseErrorHandler -> @Override 	public void handleError(ClientHttpResponse response) throws IOException;1368482696;This default implementation throws a {@link HttpClientErrorException} if the response status code_is {@link org.springframework.http.HttpStatus.Series#CLIENT_ERROR}, a {@link HttpServerErrorException}_if it is {@link org.springframework.http.HttpStatus.Series#SERVER_ERROR},_and a {@link RestClientException} in other cases.;@Override_	public void handleError(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = getHttpStatusCode(response)__		switch (statusCode.series()) {_			case CLIENT_ERROR:_				throw new HttpClientErrorException(statusCode, response.getStatusText(),_						response.getHeaders(), getResponseBody(response), getCharset(response))__			case SERVER_ERROR:_				throw new HttpServerErrorException(statusCode, response.getStatusText(),_						response.getHeaders(), getResponseBody(response), getCharset(response))__			default:_				throw new RestClientException("Unknown status code [" + statusCode + "]")__		}_	};this,default,implementation,throws,a,link,http,client,error,exception,if,the,response,status,code,is,link,org,springframework,http,http,status,series,a,link,http,server,error,exception,if,it,is,link,org,springframework,http,http,status,series,and,a,link,rest,client,exception,in,other,cases;override,public,void,handle,error,client,http,response,response,throws,ioexception,http,status,status,code,get,http,status,code,response,switch,status,code,series,case,throw,new,http,client,error,exception,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,case,throw,new,http,server,error,exception,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,default,throw,new,rest,client,exception,unknown,status,code,status,code
DefaultResponseErrorHandler -> @Override 	public void handleError(ClientHttpResponse response) throws IOException;1460644739;This default implementation throws a {@link HttpClientErrorException} if the response status code_is {@link org.springframework.http.HttpStatus.Series#CLIENT_ERROR}, a {@link HttpServerErrorException}_if it is {@link org.springframework.http.HttpStatus.Series#SERVER_ERROR},_and a {@link RestClientException} in other cases.;@Override_	public void handleError(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = getHttpStatusCode(response)__		switch (statusCode.series()) {_			case CLIENT_ERROR:_				throw new HttpClientErrorException(statusCode, response.getStatusText(),_						response.getHeaders(), getResponseBody(response), getCharset(response))__			case SERVER_ERROR:_				throw new HttpServerErrorException(statusCode, response.getStatusText(),_						response.getHeaders(), getResponseBody(response), getCharset(response))__			default:_				throw new RestClientException("Unknown status code [" + statusCode + "]")__		}_	};this,default,implementation,throws,a,link,http,client,error,exception,if,the,response,status,code,is,link,org,springframework,http,http,status,series,a,link,http,server,error,exception,if,it,is,link,org,springframework,http,http,status,series,and,a,link,rest,client,exception,in,other,cases;override,public,void,handle,error,client,http,response,response,throws,ioexception,http,status,status,code,get,http,status,code,response,switch,status,code,series,case,throw,new,http,client,error,exception,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,case,throw,new,http,server,error,exception,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,default,throw,new,rest,client,exception,unknown,status,code,status,code
DefaultResponseErrorHandler -> @Override 	public void handleError(ClientHttpResponse response) throws IOException;1489687033;This default implementation throws a {@link HttpClientErrorException} if the response status code_is {@link org.springframework.http.HttpStatus.Series#CLIENT_ERROR}, a {@link HttpServerErrorException}_if it is {@link org.springframework.http.HttpStatus.Series#SERVER_ERROR},_and a {@link RestClientException} in other cases.;@Override_	public void handleError(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = getHttpStatusCode(response)__		switch (statusCode.series()) {_			case CLIENT_ERROR:_				throw new HttpClientErrorException(statusCode, response.getStatusText(),_						response.getHeaders(), getResponseBody(response), getCharset(response))__			case SERVER_ERROR:_				throw new HttpServerErrorException(statusCode, response.getStatusText(),_						response.getHeaders(), getResponseBody(response), getCharset(response))__			default:_				throw new RestClientException("Unknown status code [" + statusCode + "]")__		}_	};this,default,implementation,throws,a,link,http,client,error,exception,if,the,response,status,code,is,link,org,springframework,http,http,status,series,a,link,http,server,error,exception,if,it,is,link,org,springframework,http,http,status,series,and,a,link,rest,client,exception,in,other,cases;override,public,void,handle,error,client,http,response,response,throws,ioexception,http,status,status,code,get,http,status,code,response,switch,status,code,series,case,throw,new,http,client,error,exception,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,case,throw,new,http,server,error,exception,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,default,throw,new,rest,client,exception,unknown,status,code,status,code
DefaultResponseErrorHandler -> @Override 	public void handleError(ClientHttpResponse response) throws IOException;1495868221;This default implementation throws a {@link HttpClientErrorException} if the response status code_is {@link org.springframework.http.HttpStatus.Series#CLIENT_ERROR}, a {@link HttpServerErrorException}_if it is {@link org.springframework.http.HttpStatus.Series#SERVER_ERROR},_and a {@link RestClientException} in other cases.;@Override_	public void handleError(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = getHttpStatusCode(response)__		switch (statusCode.series()) {_			case CLIENT_ERROR:_				throw new HttpClientErrorException(statusCode, response.getStatusText(),_						response.getHeaders(), getResponseBody(response), getCharset(response))__			case SERVER_ERROR:_				throw new HttpServerErrorException(statusCode, response.getStatusText(),_						response.getHeaders(), getResponseBody(response), getCharset(response))__			default:_				throw new RestClientException("Unknown status code [" + statusCode + "]")__		}_	};this,default,implementation,throws,a,link,http,client,error,exception,if,the,response,status,code,is,link,org,springframework,http,http,status,series,a,link,http,server,error,exception,if,it,is,link,org,springframework,http,http,status,series,and,a,link,rest,client,exception,in,other,cases;override,public,void,handle,error,client,http,response,response,throws,ioexception,http,status,status,code,get,http,status,code,response,switch,status,code,series,case,throw,new,http,client,error,exception,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,case,throw,new,http,server,error,exception,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,default,throw,new,rest,client,exception,unknown,status,code,status,code
DefaultResponseErrorHandler -> @Override 	public void handleError(ClientHttpResponse response) throws IOException;1505897698;Delegates to {@link #handleError(ClientHttpResponse, HttpStatus)} with the response status code.;@Override_	public void handleError(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = HttpStatus.resolve(response.getRawStatusCode())__		if (statusCode == null) {_			throw new UnknownHttpStatusCodeException(response.getRawStatusCode(), response.getStatusText(),_					response.getHeaders(), getResponseBody(response), getCharset(response))__		}_		handleError(response, statusCode)__	};delegates,to,link,handle,error,client,http,response,http,status,with,the,response,status,code;override,public,void,handle,error,client,http,response,response,throws,ioexception,http,status,status,code,http,status,resolve,response,get,raw,status,code,if,status,code,null,throw,new,unknown,http,status,code,exception,response,get,raw,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,handle,error,response,status,code
DefaultResponseErrorHandler -> @Override 	public void handleError(ClientHttpResponse response) throws IOException;1508853089;Delegates to {@link #handleError(ClientHttpResponse, HttpStatus)} with the response status code.;@Override_	public void handleError(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = HttpStatus.resolve(response.getRawStatusCode())__		if (statusCode == null) {_			throw new UnknownHttpStatusCodeException(response.getRawStatusCode(), response.getStatusText(),_					response.getHeaders(), getResponseBody(response), getCharset(response))__		}_		handleError(response, statusCode)__	};delegates,to,link,handle,error,client,http,response,http,status,with,the,response,status,code;override,public,void,handle,error,client,http,response,response,throws,ioexception,http,status,status,code,http,status,resolve,response,get,raw,status,code,if,status,code,null,throw,new,unknown,http,status,code,exception,response,get,raw,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,handle,error,response,status,code
DefaultResponseErrorHandler -> @Override 	public void handleError(ClientHttpResponse response) throws IOException;1533554950;Delegates to {@link #handleError(ClientHttpResponse, HttpStatus)} with the response status code.;@Override_	public void handleError(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = HttpStatus.resolve(response.getRawStatusCode())__		if (statusCode == null) {_			throw new UnknownHttpStatusCodeException(response.getRawStatusCode(), response.getStatusText(),_					response.getHeaders(), getResponseBody(response), getCharset(response))__		}_		handleError(response, statusCode)__	};delegates,to,link,handle,error,client,http,response,http,status,with,the,response,status,code;override,public,void,handle,error,client,http,response,response,throws,ioexception,http,status,status,code,http,status,resolve,response,get,raw,status,code,if,status,code,null,throw,new,unknown,http,status,code,exception,response,get,raw,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,handle,error,response,status,code
DefaultResponseErrorHandler -> @Override 	public void handleError(ClientHttpResponse response) throws IOException;1533554950;Delegates to {@link #handleError(ClientHttpResponse, HttpStatus)} with the response status code.;@Override_	public void handleError(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = HttpStatus.resolve(response.getRawStatusCode())__		if (statusCode == null) {_			throw new UnknownHttpStatusCodeException(response.getRawStatusCode(), response.getStatusText(),_					response.getHeaders(), getResponseBody(response), getCharset(response))__		}_		handleError(response, statusCode)__	};delegates,to,link,handle,error,client,http,response,http,status,with,the,response,status,code;override,public,void,handle,error,client,http,response,response,throws,ioexception,http,status,status,code,http,status,resolve,response,get,raw,status,code,if,status,code,null,throw,new,unknown,http,status,code,exception,response,get,raw,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,handle,error,response,status,code
DefaultResponseErrorHandler -> @Override 	public void handleError(ClientHttpResponse response) throws IOException;1533573240;Delegates to {@link #handleError(ClientHttpResponse, HttpStatus)} with the response status code.;@Override_	public void handleError(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = HttpStatus.resolve(response.getRawStatusCode())__		if (statusCode == null) {_			throw new UnknownHttpStatusCodeException(response.getRawStatusCode(), response.getStatusText(),_					response.getHeaders(), getResponseBody(response), getCharset(response))__		}_		handleError(response, statusCode)__	};delegates,to,link,handle,error,client,http,response,http,status,with,the,response,status,code;override,public,void,handle,error,client,http,response,response,throws,ioexception,http,status,status,code,http,status,resolve,response,get,raw,status,code,if,status,code,null,throw,new,unknown,http,status,code,exception,response,get,raw,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,handle,error,response,status,code
DefaultResponseErrorHandler -> @Override 	public void handleError(ClientHttpResponse response) throws IOException;1533731648;Delegates to {@link #handleError(ClientHttpResponse, HttpStatus)} with the response status code.;@Override_	public void handleError(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = HttpStatus.resolve(response.getRawStatusCode())__		if (statusCode == null) {_			throw new UnknownHttpStatusCodeException(response.getRawStatusCode(), response.getStatusText(),_					response.getHeaders(), getResponseBody(response), getCharset(response))__		}_		handleError(response, statusCode)__	};delegates,to,link,handle,error,client,http,response,http,status,with,the,response,status,code;override,public,void,handle,error,client,http,response,response,throws,ioexception,http,status,status,code,http,status,resolve,response,get,raw,status,code,if,status,code,null,throw,new,unknown,http,status,code,exception,response,get,raw,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,handle,error,response,status,code
DefaultResponseErrorHandler -> @Override 	public void handleError(ClientHttpResponse response) throws IOException;1534438291;Delegates to {@link #handleError(ClientHttpResponse, HttpStatus)} with the response status code.;@Override_	public void handleError(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = HttpStatus.resolve(response.getRawStatusCode())__		if (statusCode == null) {_			throw new UnknownHttpStatusCodeException(response.getRawStatusCode(), response.getStatusText(),_					response.getHeaders(), getResponseBody(response), getCharset(response))__		}_		handleError(response, statusCode)__	};delegates,to,link,handle,error,client,http,response,http,status,with,the,response,status,code;override,public,void,handle,error,client,http,response,response,throws,ioexception,http,status,status,code,http,status,resolve,response,get,raw,status,code,if,status,code,null,throw,new,unknown,http,status,code,exception,response,get,raw,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,handle,error,response,status,code
DefaultResponseErrorHandler -> @Override 	public void handleError(ClientHttpResponse response) throws IOException;1542977750;Delegates to {@link #handleError(ClientHttpResponse, HttpStatus)} with the response status code.;@Override_	public void handleError(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = HttpStatus.resolve(response.getRawStatusCode())__		if (statusCode == null) {_			throw new UnknownHttpStatusCodeException(response.getRawStatusCode(), response.getStatusText(),_					response.getHeaders(), getResponseBody(response), getCharset(response))__		}_		handleError(response, statusCode)__	};delegates,to,link,handle,error,client,http,response,http,status,with,the,response,status,code;override,public,void,handle,error,client,http,response,response,throws,ioexception,http,status,status,code,http,status,resolve,response,get,raw,status,code,if,status,code,null,throw,new,unknown,http,status,code,exception,response,get,raw,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,handle,error,response,status,code
DefaultResponseErrorHandler -> @Override 	public void handleError(ClientHttpResponse response) throws IOException;1542997667;Delegates to {@link #handleError(ClientHttpResponse, HttpStatus)} with the_response status code._@throws UnknownHttpStatusCodeException in case of an unresolvable status code_@see #handleError(ClientHttpResponse, HttpStatus);@Override_	public void handleError(ClientHttpResponse response) throws IOException {_		HttpStatus statusCode = HttpStatus.resolve(response.getRawStatusCode())__		if (statusCode == null) {_			throw new UnknownHttpStatusCodeException(response.getRawStatusCode(), response.getStatusText(),_					response.getHeaders(), getResponseBody(response), getCharset(response))__		}_		handleError(response, statusCode)__	};delegates,to,link,handle,error,client,http,response,http,status,with,the,response,status,code,throws,unknown,http,status,code,exception,in,case,of,an,unresolvable,status,code,see,handle,error,client,http,response,http,status;override,public,void,handle,error,client,http,response,response,throws,ioexception,http,status,status,code,http,status,resolve,response,get,raw,status,code,if,status,code,null,throw,new,unknown,http,status,code,exception,response,get,raw,status,code,response,get,status,text,response,get,headers,get,response,body,response,get,charset,response,handle,error,response,status,code
