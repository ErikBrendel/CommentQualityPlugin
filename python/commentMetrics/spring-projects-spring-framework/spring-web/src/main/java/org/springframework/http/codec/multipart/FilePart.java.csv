commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * Return the original filename in the client's filesystem.  */ ;/**  * Return the original filename in the client's filesystem.  */ String filename().
true;default;1;3;/**  * Convenience method to copy the content of the file in this part to the  * given destination file. If the destination file already exists, it will  * be truncated first.  * <p>The default implementation delegates to {@link #transferTo(Path)}.  * @param dest the target file  * @return completion {@code Mono} with the result of the file transfer,  * possibly {@link IllegalStateException} if the part isn't a file  * @see #transferTo(Path)  */ ;/**  * Convenience method to copy the content of the file in this part to the  * given destination file. If the destination file already exists, it will  * be truncated first.  * <p>The default implementation delegates to {@link #transferTo(Path)}.  * @param dest the target file  * @return completion {@code Mono} with the result of the file transfer,  * possibly {@link IllegalStateException} if the part isn't a file  * @see #transferTo(Path)  */ default Mono<Void> transferTo(File dest) {     return transferTo(dest.toPath()). }
true;;1;1;/**  * Convenience method to copy the content of the file in this part to the  * given destination file. If the destination file already exists, it will  * be truncated first.  * @param dest the target file  * @return completion {@code Mono} with the result of the file transfer,  * possibly {@link IllegalStateException} if the part isn't a file  * @since 5.1  * @see #transferTo(File)  */ ;/**  * Convenience method to copy the content of the file in this part to the  * given destination file. If the destination file already exists, it will  * be truncated first.  * @param dest the target file  * @return completion {@code Mono} with the result of the file transfer,  * possibly {@link IllegalStateException} if the part isn't a file  * @since 5.1  * @see #transferTo(File)  */ Mono<Void> transferTo(Path dest).
