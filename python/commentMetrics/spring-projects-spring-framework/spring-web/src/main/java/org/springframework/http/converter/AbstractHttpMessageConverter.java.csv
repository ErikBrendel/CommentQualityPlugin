# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractHttpMessageConverter -> protected abstract void writeInternal(T t, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1328020251;Abstract template method that writes the actual body. Invoked from {@link #write}._@param t the object to write to the output message_@param outputMessage the message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;protected abstract void writeInternal(T t, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;abstract,template,method,that,writes,the,actual,body,invoked,from,link,write,param,t,the,object,to,write,to,the,output,message,param,output,message,the,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;protected,abstract,void,write,internal,t,t,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
AbstractHttpMessageConverter -> protected abstract void writeInternal(T t, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1354627794;Abstract template method that writes the actual body. Invoked from {@link #write}._@param t the object to write to the output message_@param outputMessage the message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;protected abstract void writeInternal(T t, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;abstract,template,method,that,writes,the,actual,body,invoked,from,link,write,param,t,the,object,to,write,to,the,output,message,param,output,message,the,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;protected,abstract,void,write,internal,t,t,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
AbstractHttpMessageConverter -> protected abstract void writeInternal(T t, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1356735495;Abstract template method that writes the actual body. Invoked from {@link #write}._@param t the object to write to the output message_@param outputMessage the message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;protected abstract void writeInternal(T t, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;abstract,template,method,that,writes,the,actual,body,invoked,from,link,write,param,t,the,object,to,write,to,the,output,message,param,output,message,the,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;protected,abstract,void,write,internal,t,t,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
AbstractHttpMessageConverter -> protected abstract void writeInternal(T t, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1357119239;Abstract template method that writes the actual body. Invoked from {@link #write}._@param t the object to write to the output message_@param outputMessage the message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;protected abstract void writeInternal(T t, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;abstract,template,method,that,writes,the,actual,body,invoked,from,link,write,param,t,the,object,to,write,to,the,output,message,param,output,message,the,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;protected,abstract,void,write,internal,t,t,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
AbstractHttpMessageConverter -> protected abstract void writeInternal(T t, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1368482696;Abstract template method that writes the actual body. Invoked from {@link #write}._@param t the object to write to the output message_@param outputMessage the message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;protected abstract void writeInternal(T t, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;abstract,template,method,that,writes,the,actual,body,invoked,from,link,write,param,t,the,object,to,write,to,the,output,message,param,output,message,the,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;protected,abstract,void,write,internal,t,t,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
AbstractHttpMessageConverter -> protected abstract void writeInternal(T t, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1374115410;Abstract template method that writes the actual body. Invoked from {@link #write}._@param t the object to write to the output message_@param outputMessage the message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;protected abstract void writeInternal(T t, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;abstract,template,method,that,writes,the,actual,body,invoked,from,link,write,param,t,the,object,to,write,to,the,output,message,param,output,message,the,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;protected,abstract,void,write,internal,t,t,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
AbstractHttpMessageConverter -> protected abstract void writeInternal(T t, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1375461043;Abstract template method that writes the actual body. Invoked from {@link #write}._@param t the object to write to the output message_@param outputMessage the message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;protected abstract void writeInternal(T t, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;abstract,template,method,that,writes,the,actual,body,invoked,from,link,write,param,t,the,object,to,write,to,the,output,message,param,output,message,the,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;protected,abstract,void,write,internal,t,t,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
AbstractHttpMessageConverter -> protected abstract void writeInternal(T t, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1397767187;Abstract template method that writes the actual body. Invoked from {@link #write}._@param t the object to write to the output message_@param outputMessage the HTTP output message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;protected abstract void writeInternal(T t, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;abstract,template,method,that,writes,the,actual,body,invoked,from,link,write,param,t,the,object,to,write,to,the,output,message,param,output,message,the,http,output,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;protected,abstract,void,write,internal,t,t,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
AbstractHttpMessageConverter -> protected abstract void writeInternal(T t, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1428949885;Abstract template method that writes the actual body. Invoked from {@link #write}._@param t the object to write to the output message_@param outputMessage the HTTP output message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;protected abstract void writeInternal(T t, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;abstract,template,method,that,writes,the,actual,body,invoked,from,link,write,param,t,the,object,to,write,to,the,output,message,param,output,message,the,http,output,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;protected,abstract,void,write,internal,t,t,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
AbstractHttpMessageConverter -> protected abstract void writeInternal(T t, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1434985545;Abstract template method that writes the actual body. Invoked from {@link #write}._@param t the object to write to the output message_@param outputMessage the HTTP output message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;protected abstract void writeInternal(T t, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;abstract,template,method,that,writes,the,actual,body,invoked,from,link,write,param,t,the,object,to,write,to,the,output,message,param,output,message,the,http,output,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;protected,abstract,void,write,internal,t,t,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
AbstractHttpMessageConverter -> protected abstract void writeInternal(T t, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1438251419;Abstract template method that writes the actual body. Invoked from {@link #write}._@param t the object to write to the output message_@param outputMessage the HTTP output message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;protected abstract void writeInternal(T t, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;abstract,template,method,that,writes,the,actual,body,invoked,from,link,write,param,t,the,object,to,write,to,the,output,message,param,output,message,the,http,output,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;protected,abstract,void,write,internal,t,t,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
AbstractHttpMessageConverter -> protected abstract void writeInternal(T t, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1444408470;Abstract template method that writes the actual body. Invoked from {@link #write}._@param t the object to write to the output message_@param outputMessage the HTTP output message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;protected abstract void writeInternal(T t, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;abstract,template,method,that,writes,the,actual,body,invoked,from,link,write,param,t,the,object,to,write,to,the,output,message,param,output,message,the,http,output,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;protected,abstract,void,write,internal,t,t,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
AbstractHttpMessageConverter -> protected abstract void writeInternal(T t, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1455225853;Abstract template method that writes the actual body. Invoked from {@link #write}._@param t the object to write to the output message_@param outputMessage the HTTP output message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;protected abstract void writeInternal(T t, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;abstract,template,method,that,writes,the,actual,body,invoked,from,link,write,param,t,the,object,to,write,to,the,output,message,param,output,message,the,http,output,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;protected,abstract,void,write,internal,t,t,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
AbstractHttpMessageConverter -> protected abstract void writeInternal(T t, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1456785272;Abstract template method that writes the actual body. Invoked from {@link #write}._@param t the object to write to the output message_@param outputMessage the HTTP output message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;protected abstract void writeInternal(T t, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;abstract,template,method,that,writes,the,actual,body,invoked,from,link,write,param,t,the,object,to,write,to,the,output,message,param,output,message,the,http,output,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;protected,abstract,void,write,internal,t,t,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
AbstractHttpMessageConverter -> protected abstract void writeInternal(T t, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1458754769;Abstract template method that writes the actual body. Invoked from {@link #write}._@param t the object to write to the output message_@param outputMessage the HTTP output message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;protected abstract void writeInternal(T t, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;abstract,template,method,that,writes,the,actual,body,invoked,from,link,write,param,t,the,object,to,write,to,the,output,message,param,output,message,the,http,output,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;protected,abstract,void,write,internal,t,t,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
AbstractHttpMessageConverter -> protected abstract void writeInternal(T t, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1460565262;Abstract template method that writes the actual body. Invoked from {@link #write}._@param t the object to write to the output message_@param outputMessage the HTTP output message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;protected abstract void writeInternal(T t, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;abstract,template,method,that,writes,the,actual,body,invoked,from,link,write,param,t,the,object,to,write,to,the,output,message,param,output,message,the,http,output,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;protected,abstract,void,write,internal,t,t,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
AbstractHttpMessageConverter -> protected abstract void writeInternal(T t, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1460644739;Abstract template method that writes the actual body. Invoked from {@link #write}._@param t the object to write to the output message_@param outputMessage the HTTP output message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;protected abstract void writeInternal(T t, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;abstract,template,method,that,writes,the,actual,body,invoked,from,link,write,param,t,the,object,to,write,to,the,output,message,param,output,message,the,http,output,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;protected,abstract,void,write,internal,t,t,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
AbstractHttpMessageConverter -> protected abstract void writeInternal(T t, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1465387124;Abstract template method that writes the actual body. Invoked from {@link #write}._@param t the object to write to the output message_@param outputMessage the HTTP output message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;protected abstract void writeInternal(T t, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;abstract,template,method,that,writes,the,actual,body,invoked,from,link,write,param,t,the,object,to,write,to,the,output,message,param,output,message,the,http,output,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;protected,abstract,void,write,internal,t,t,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
AbstractHttpMessageConverter -> protected abstract void writeInternal(T t, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1467730834;Abstract template method that writes the actual body. Invoked from {@link #write}._@param t the object to write to the output message_@param outputMessage the HTTP output message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;protected abstract void writeInternal(T t, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;abstract,template,method,that,writes,the,actual,body,invoked,from,link,write,param,t,the,object,to,write,to,the,output,message,param,output,message,the,http,output,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;protected,abstract,void,write,internal,t,t,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
AbstractHttpMessageConverter -> protected abstract void writeInternal(T t, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1486062070;Abstract template method that writes the actual body. Invoked from {@link #write}._@param t the object to write to the output message_@param outputMessage the HTTP output message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;protected abstract void writeInternal(T t, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;abstract,template,method,that,writes,the,actual,body,invoked,from,link,write,param,t,the,object,to,write,to,the,output,message,param,output,message,the,http,output,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;protected,abstract,void,write,internal,t,t,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
AbstractHttpMessageConverter -> protected abstract void writeInternal(T t, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1495868221;Abstract template method that writes the actual body. Invoked from {@link #write}._@param t the object to write to the output message_@param outputMessage the HTTP output message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;protected abstract void writeInternal(T t, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;abstract,template,method,that,writes,the,actual,body,invoked,from,link,write,param,t,the,object,to,write,to,the,output,message,param,output,message,the,http,output,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;protected,abstract,void,write,internal,t,t,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
AbstractHttpMessageConverter -> protected abstract void writeInternal(T t, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1496242568;Abstract template method that writes the actual body. Invoked from {@link #write}._@param t the object to write to the output message_@param outputMessage the HTTP output message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;protected abstract void writeInternal(T t, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;abstract,template,method,that,writes,the,actual,body,invoked,from,link,write,param,t,the,object,to,write,to,the,output,message,param,output,message,the,http,output,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;protected,abstract,void,write,internal,t,t,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
AbstractHttpMessageConverter -> protected abstract void writeInternal(T t, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1496259743;Abstract template method that writes the actual body. Invoked from {@link #write}._@param t the object to write to the output message_@param outputMessage the HTTP output message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;protected abstract void writeInternal(T t, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;abstract,template,method,that,writes,the,actual,body,invoked,from,link,write,param,t,the,object,to,write,to,the,output,message,param,output,message,the,http,output,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;protected,abstract,void,write,internal,t,t,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
AbstractHttpMessageConverter -> protected abstract void writeInternal(T t, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1496837955;Abstract template method that writes the actual body. Invoked from {@link #write}._@param t the object to write to the output message_@param outputMessage the HTTP output message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;protected abstract void writeInternal(T t, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;abstract,template,method,that,writes,the,actual,body,invoked,from,link,write,param,t,the,object,to,write,to,the,output,message,param,output,message,the,http,output,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;protected,abstract,void,write,internal,t,t,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
AbstractHttpMessageConverter -> protected abstract void writeInternal(T t, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1500448076;Abstract template method that writes the actual body. Invoked from {@link #write}._@param t the object to write to the output message_@param outputMessage the HTTP output message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;protected abstract void writeInternal(T t, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;abstract,template,method,that,writes,the,actual,body,invoked,from,link,write,param,t,the,object,to,write,to,the,output,message,param,output,message,the,http,output,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;protected,abstract,void,write,internal,t,t,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
AbstractHttpMessageConverter -> protected abstract void writeInternal(T t, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1500457438;Abstract template method that writes the actual body. Invoked from {@link #write}._@param t the object to write to the output message_@param outputMessage the HTTP output message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;protected abstract void writeInternal(T t, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;abstract,template,method,that,writes,the,actual,body,invoked,from,link,write,param,t,the,object,to,write,to,the,output,message,param,output,message,the,http,output,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;protected,abstract,void,write,internal,t,t,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
AbstractHttpMessageConverter -> protected abstract void writeInternal(T t, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1520890308;Abstract template method that writes the actual body. Invoked from {@link #write}._@param t the object to write to the output message_@param outputMessage the HTTP output message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;protected abstract void writeInternal(T t, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;abstract,template,method,that,writes,the,actual,body,invoked,from,link,write,param,t,the,object,to,write,to,the,output,message,param,output,message,the,http,output,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;protected,abstract,void,write,internal,t,t,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
AbstractHttpMessageConverter -> protected abstract void writeInternal(T t, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1530174524;Abstract template method that writes the actual body. Invoked from {@link #write}._@param t the object to write to the output message_@param outputMessage the HTTP output message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;protected abstract void writeInternal(T t, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;abstract,template,method,that,writes,the,actual,body,invoked,from,link,write,param,t,the,object,to,write,to,the,output,message,param,output,message,the,http,output,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;protected,abstract,void,write,internal,t,t,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
AbstractHttpMessageConverter -> protected abstract void writeInternal(T t, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1530563849;Abstract template method that writes the actual body. Invoked from {@link #write}._@param t the object to write to the output message_@param outputMessage the HTTP output message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;protected abstract void writeInternal(T t, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;abstract,template,method,that,writes,the,actual,body,invoked,from,link,write,param,t,the,object,to,write,to,the,output,message,param,output,message,the,http,output,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;protected,abstract,void,write,internal,t,t,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
AbstractHttpMessageConverter -> protected abstract void writeInternal(T t, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1530975243;Abstract template method that writes the actual body. Invoked from {@link #write}._@param t the object to write to the output message_@param outputMessage the HTTP output message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;protected abstract void writeInternal(T t, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;abstract,template,method,that,writes,the,actual,body,invoked,from,link,write,param,t,the,object,to,write,to,the,output,message,param,output,message,the,http,output,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;protected,abstract,void,write,internal,t,t,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
AbstractHttpMessageConverter -> protected abstract void writeInternal(T t, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1531942370;Abstract template method that writes the actual body. Invoked from {@link #write}._@param t the object to write to the output message_@param outputMessage the HTTP output message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;protected abstract void writeInternal(T t, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;abstract,template,method,that,writes,the,actual,body,invoked,from,link,write,param,t,the,object,to,write,to,the,output,message,param,output,message,the,http,output,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;protected,abstract,void,write,internal,t,t,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
AbstractHttpMessageConverter -> protected abstract void writeInternal(T t, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1546457570;Abstract template method that writes the actual body. Invoked from {@link #write}._@param t the object to write to the output message_@param outputMessage the HTTP output message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;protected abstract void writeInternal(T t, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;abstract,template,method,that,writes,the,actual,body,invoked,from,link,write,param,t,the,object,to,write,to,the,output,message,param,output,message,the,http,output,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;protected,abstract,void,write,internal,t,t,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
AbstractHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType);1496242568;This implementation checks if the given class is_{@linkplain #supports(Class) supported}, and if the_{@linkplain #getSupportedMediaTypes() supported} media types_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType) {_		return supports(clazz) && canWrite(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,write,class,clazz,nullable,media,type,media,type,return,supports,clazz,can,write,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType);1496259743;This implementation checks if the given class is_{@linkplain #supports(Class) supported}, and if the_{@linkplain #getSupportedMediaTypes() supported} media types_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType) {_		return supports(clazz) && canWrite(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,write,class,clazz,nullable,media,type,media,type,return,supports,clazz,can,write,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType);1496837955;This implementation checks if the given class is_{@linkplain #supports(Class) supported}, and if the_{@linkplain #getSupportedMediaTypes() supported} media types_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType) {_		return supports(clazz) && canWrite(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,write,class,clazz,nullable,media,type,media,type,return,supports,clazz,can,write,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType);1500448076;This implementation checks if the given class is_{@linkplain #supports(Class) supported}, and if the_{@linkplain #getSupportedMediaTypes() supported} media types_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType) {_		return supports(clazz) && canWrite(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,write,class,clazz,nullable,media,type,media,type,return,supports,clazz,can,write,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType);1500457438;This implementation checks if the given class is_{@linkplain #supports(Class) supported}, and if the_{@linkplain #getSupportedMediaTypes() supported} media types_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType) {_		return supports(clazz) && canWrite(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,write,class,clazz,nullable,media,type,media,type,return,supports,clazz,can,write,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType);1520890308;This implementation checks if the given class is_{@linkplain #supports(Class) supported}, and if the_{@linkplain #getSupportedMediaTypes() supported} media types_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType) {_		return supports(clazz) && canWrite(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,write,class,clazz,nullable,media,type,media,type,return,supports,clazz,can,write,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType);1530174524;This implementation checks if the given class is_{@linkplain #supports(Class) supported}, and if the_{@linkplain #getSupportedMediaTypes() supported} media types_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType) {_		return supports(clazz) && canWrite(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,write,class,clazz,nullable,media,type,media,type,return,supports,clazz,can,write,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType);1530563849;This implementation checks if the given class is_{@linkplain #supports(Class) supported}, and if the_{@linkplain #getSupportedMediaTypes() supported} media types_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType) {_		return supports(clazz) && canWrite(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,write,class,clazz,nullable,media,type,media,type,return,supports,clazz,can,write,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType);1530975243;This implementation checks if the given class is_{@linkplain #supports(Class) supported}, and if the_{@linkplain #getSupportedMediaTypes() supported} media types_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType) {_		return supports(clazz) && canWrite(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,write,class,clazz,nullable,media,type,media,type,return,supports,clazz,can,write,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType);1531942370;This implementation checks if the given class is_{@linkplain #supports(Class) supported}, and if the_{@linkplain #getSupportedMediaTypes() supported} media types_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType) {_		return supports(clazz) && canWrite(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,write,class,clazz,nullable,media,type,media,type,return,supports,clazz,can,write,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType);1546457570;This implementation checks if the given class is_{@linkplain #supports(Class) supported}, and if the_{@linkplain #getSupportedMediaTypes() supported} media types_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType) {_		return supports(clazz) && canWrite(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,write,class,clazz,nullable,media,type,media,type,return,supports,clazz,can,write,media,type
AbstractHttpMessageConverter -> public void setDefaultCharset(@Nullable Charset defaultCharset);1500448076;Set the default character set, if any._@since 4.3;public void setDefaultCharset(@Nullable Charset defaultCharset) {_		this.defaultCharset = defaultCharset__	};set,the,default,character,set,if,any,since,4,3;public,void,set,default,charset,nullable,charset,default,charset,this,default,charset,default,charset
AbstractHttpMessageConverter -> public void setDefaultCharset(@Nullable Charset defaultCharset);1500457438;Set the default character set, if any._@since 4.3;public void setDefaultCharset(@Nullable Charset defaultCharset) {_		this.defaultCharset = defaultCharset__	};set,the,default,character,set,if,any,since,4,3;public,void,set,default,charset,nullable,charset,default,charset,this,default,charset,default,charset
AbstractHttpMessageConverter -> public void setDefaultCharset(@Nullable Charset defaultCharset);1520890308;Set the default character set, if any._@since 4.3;public void setDefaultCharset(@Nullable Charset defaultCharset) {_		this.defaultCharset = defaultCharset__	};set,the,default,character,set,if,any,since,4,3;public,void,set,default,charset,nullable,charset,default,charset,this,default,charset,default,charset
AbstractHttpMessageConverter -> public void setDefaultCharset(@Nullable Charset defaultCharset);1530174524;Set the default character set, if any._@since 4.3;public void setDefaultCharset(@Nullable Charset defaultCharset) {_		this.defaultCharset = defaultCharset__	};set,the,default,character,set,if,any,since,4,3;public,void,set,default,charset,nullable,charset,default,charset,this,default,charset,default,charset
AbstractHttpMessageConverter -> public void setDefaultCharset(@Nullable Charset defaultCharset);1530563849;Set the default character set, if any._@since 4.3;public void setDefaultCharset(@Nullable Charset defaultCharset) {_		this.defaultCharset = defaultCharset__	};set,the,default,character,set,if,any,since,4,3;public,void,set,default,charset,nullable,charset,default,charset,this,default,charset,default,charset
AbstractHttpMessageConverter -> public void setDefaultCharset(@Nullable Charset defaultCharset);1530975243;Set the default character set, if any._@since 4.3;public void setDefaultCharset(@Nullable Charset defaultCharset) {_		this.defaultCharset = defaultCharset__	};set,the,default,character,set,if,any,since,4,3;public,void,set,default,charset,nullable,charset,default,charset,this,default,charset,default,charset
AbstractHttpMessageConverter -> public void setDefaultCharset(@Nullable Charset defaultCharset);1531942370;Set the default character set, if any._@since 4.3;public void setDefaultCharset(@Nullable Charset defaultCharset) {_		this.defaultCharset = defaultCharset__	};set,the,default,character,set,if,any,since,4,3;public,void,set,default,charset,nullable,charset,default,charset,this,default,charset,default,charset
AbstractHttpMessageConverter -> public void setDefaultCharset(@Nullable Charset defaultCharset);1546457570;Set the default character set, if any._@since 4.3;public void setDefaultCharset(@Nullable Charset defaultCharset) {_		this.defaultCharset = defaultCharset__	};set,the,default,character,set,if,any,since,4,3;public,void,set,default,charset,nullable,charset,default,charset,this,default,charset,default,charset
AbstractHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1356735495;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canWrite(mediaType)__		};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,write,class,clazz,media,type,media,type,return,supports,clazz,can,write,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1368482696;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canWrite(mediaType)__		};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,write,class,clazz,media,type,media,type,return,supports,clazz,can,write,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1374115410;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canWrite(mediaType)__		};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,write,class,clazz,media,type,media,type,return,supports,clazz,can,write,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1375461043;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canWrite(mediaType)__		};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,write,class,clazz,media,type,media,type,return,supports,clazz,can,write,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1397767187;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canWrite(mediaType)__		};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,write,class,clazz,media,type,media,type,return,supports,clazz,can,write,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1428949885;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canWrite(mediaType)__		};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,write,class,clazz,media,type,media,type,return,supports,clazz,can,write,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1434985545;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canWrite(mediaType)__		};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,write,class,clazz,media,type,media,type,return,supports,clazz,can,write,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1438251419;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canWrite(mediaType)__		};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,write,class,clazz,media,type,media,type,return,supports,clazz,can,write,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1444408470;This implementation checks if the given class is_{@linkplain #supports(Class) supported}, and if the_{@linkplain #getSupportedMediaTypes() supported} media types_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canWrite(mediaType)__		};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,write,class,clazz,media,type,media,type,return,supports,clazz,can,write,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1455225853;This implementation checks if the given class is_{@linkplain #supports(Class) supported}, and if the_{@linkplain #getSupportedMediaTypes() supported} media types_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canWrite(mediaType)__		};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,write,class,clazz,media,type,media,type,return,supports,clazz,can,write,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1456785272;This implementation checks if the given class is_{@linkplain #supports(Class) supported}, and if the_{@linkplain #getSupportedMediaTypes() supported} media types_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canWrite(mediaType)__		};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,write,class,clazz,media,type,media,type,return,supports,clazz,can,write,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1458754769;This implementation checks if the given class is_{@linkplain #supports(Class) supported}, and if the_{@linkplain #getSupportedMediaTypes() supported} media types_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canWrite(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,write,class,clazz,media,type,media,type,return,supports,clazz,can,write,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1460565262;This implementation checks if the given class is_{@linkplain #supports(Class) supported}, and if the_{@linkplain #getSupportedMediaTypes() supported} media types_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canWrite(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,write,class,clazz,media,type,media,type,return,supports,clazz,can,write,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1460644739;This implementation checks if the given class is_{@linkplain #supports(Class) supported}, and if the_{@linkplain #getSupportedMediaTypes() supported} media types_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canWrite(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,write,class,clazz,media,type,media,type,return,supports,clazz,can,write,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1465387124;This implementation checks if the given class is_{@linkplain #supports(Class) supported}, and if the_{@linkplain #getSupportedMediaTypes() supported} media types_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canWrite(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,write,class,clazz,media,type,media,type,return,supports,clazz,can,write,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1467730834;This implementation checks if the given class is_{@linkplain #supports(Class) supported}, and if the_{@linkplain #getSupportedMediaTypes() supported} media types_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canWrite(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,write,class,clazz,media,type,media,type,return,supports,clazz,can,write,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1486062070;This implementation checks if the given class is_{@linkplain #supports(Class) supported}, and if the_{@linkplain #getSupportedMediaTypes() supported} media types_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canWrite(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,write,class,clazz,media,type,media,type,return,supports,clazz,can,write,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1495868221;This implementation checks if the given class is_{@linkplain #supports(Class) supported}, and if the_{@linkplain #getSupportedMediaTypes() supported} media types_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canWrite(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,write,class,clazz,media,type,media,type,return,supports,clazz,can,write,media,type
AbstractHttpMessageConverter -> protected boolean canRead(MediaType mediaType);1328020251;Returns true if any of the {@linkplain #setSupportedMediaTypes(List) supported media types}_include the given media type._@param mediaType the media type to read, can be {@code null} if not specified._Typically the value of a {@code Content-Type} header._@return {@code true} if the supported media types include the media type,_or if the media type is {@code null};protected boolean canRead(MediaType mediaType) {_		if (mediaType == null) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.includes(mediaType)) {_				return true__			}_		}_		return false__	};returns,true,if,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,include,the,given,media,type,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,the,supported,media,types,include,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,read,media,type,media,type,if,media,type,null,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,includes,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canRead(MediaType mediaType);1354627794;Returns true if any of the {@linkplain #setSupportedMediaTypes(List) supported media types}_include the given media type._@param mediaType the media type to read, can be {@code null} if not specified._Typically the value of a {@code Content-Type} header._@return {@code true} if the supported media types include the media type,_or if the media type is {@code null};protected boolean canRead(MediaType mediaType) {_		if (mediaType == null) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.includes(mediaType)) {_				return true__			}_		}_		return false__	};returns,true,if,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,include,the,given,media,type,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,the,supported,media,types,include,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,read,media,type,media,type,if,media,type,null,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,includes,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canRead(MediaType mediaType);1356735495;Returns true if any of the {@linkplain #setSupportedMediaTypes(List) supported media types}_include the given media type._@param mediaType the media type to read, can be {@code null} if not specified._Typically the value of a {@code Content-Type} header._@return {@code true} if the supported media types include the media type,_or if the media type is {@code null};protected boolean canRead(MediaType mediaType) {_		if (mediaType == null) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.includes(mediaType)) {_				return true__			}_		}_		return false__	};returns,true,if,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,include,the,given,media,type,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,the,supported,media,types,include,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,read,media,type,media,type,if,media,type,null,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,includes,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canRead(MediaType mediaType);1357119239;Returns true if any of the {@linkplain #setSupportedMediaTypes(List) supported media types}_include the given media type._@param mediaType the media type to read, can be {@code null} if not specified._Typically the value of a {@code Content-Type} header._@return {@code true} if the supported media types include the media type,_or if the media type is {@code null};protected boolean canRead(MediaType mediaType) {_		if (mediaType == null) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.includes(mediaType)) {_				return true__			}_		}_		return false__	};returns,true,if,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,include,the,given,media,type,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,the,supported,media,types,include,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,read,media,type,media,type,if,media,type,null,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,includes,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canRead(MediaType mediaType);1368482696;Returns true if any of the {@linkplain #setSupportedMediaTypes(List) supported media types}_include the given media type._@param mediaType the media type to read, can be {@code null} if not specified._Typically the value of a {@code Content-Type} header._@return {@code true} if the supported media types include the media type,_or if the media type is {@code null};protected boolean canRead(MediaType mediaType) {_		if (mediaType == null) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.includes(mediaType)) {_				return true__			}_		}_		return false__	};returns,true,if,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,include,the,given,media,type,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,the,supported,media,types,include,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,read,media,type,media,type,if,media,type,null,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,includes,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canRead(MediaType mediaType);1374115410;Returns true if any of the {@linkplain #setSupportedMediaTypes(List) supported media types}_include the given media type._@param mediaType the media type to read, can be {@code null} if not specified._Typically the value of a {@code Content-Type} header._@return {@code true} if the supported media types include the media type,_or if the media type is {@code null};protected boolean canRead(MediaType mediaType) {_		if (mediaType == null) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.includes(mediaType)) {_				return true__			}_		}_		return false__	};returns,true,if,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,include,the,given,media,type,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,the,supported,media,types,include,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,read,media,type,media,type,if,media,type,null,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,includes,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canRead(MediaType mediaType);1375461043;Returns true if any of the {@linkplain #setSupportedMediaTypes(List) supported media types}_include the given media type._@param mediaType the media type to read, can be {@code null} if not specified._Typically the value of a {@code Content-Type} header._@return {@code true} if the supported media types include the media type,_or if the media type is {@code null};protected boolean canRead(MediaType mediaType) {_		if (mediaType == null) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.includes(mediaType)) {_				return true__			}_		}_		return false__	};returns,true,if,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,include,the,given,media,type,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,the,supported,media,types,include,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,read,media,type,media,type,if,media,type,null,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,includes,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canRead(MediaType mediaType);1397767187;Returns true if any of the {@linkplain #setSupportedMediaTypes(List) supported media types}_include the given media type._@param mediaType the media type to read, can be {@code null} if not specified._Typically the value of a {@code Content-Type} header._@return {@code true} if the supported media types include the media type,_or if the media type is {@code null};protected boolean canRead(MediaType mediaType) {_		if (mediaType == null) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.includes(mediaType)) {_				return true__			}_		}_		return false__	};returns,true,if,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,include,the,given,media,type,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,the,supported,media,types,include,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,read,media,type,media,type,if,media,type,null,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,includes,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canRead(MediaType mediaType);1428949885;Returns true if any of the {@linkplain #setSupportedMediaTypes(List) supported media types}_include the given media type._@param mediaType the media type to read, can be {@code null} if not specified._Typically the value of a {@code Content-Type} header._@return {@code true} if the supported media types include the media type,_or if the media type is {@code null};protected boolean canRead(MediaType mediaType) {_		if (mediaType == null) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.includes(mediaType)) {_				return true__			}_		}_		return false__	};returns,true,if,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,include,the,given,media,type,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,the,supported,media,types,include,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,read,media,type,media,type,if,media,type,null,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,includes,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canRead(MediaType mediaType);1434985545;Returns true if any of the {@linkplain #setSupportedMediaTypes(List) supported media types}_include the given media type._@param mediaType the media type to read, can be {@code null} if not specified._Typically the value of a {@code Content-Type} header._@return {@code true} if the supported media types include the media type,_or if the media type is {@code null};protected boolean canRead(MediaType mediaType) {_		if (mediaType == null) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.includes(mediaType)) {_				return true__			}_		}_		return false__	};returns,true,if,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,include,the,given,media,type,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,the,supported,media,types,include,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,read,media,type,media,type,if,media,type,null,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,includes,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canRead(MediaType mediaType);1438251419;Returns true if any of the {@linkplain #setSupportedMediaTypes(List) supported media types}_include the given media type._@param mediaType the media type to read, can be {@code null} if not specified._Typically the value of a {@code Content-Type} header._@return {@code true} if the supported media types include the media type,_or if the media type is {@code null};protected boolean canRead(MediaType mediaType) {_		if (mediaType == null) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.includes(mediaType)) {_				return true__			}_		}_		return false__	};returns,true,if,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,include,the,given,media,type,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,the,supported,media,types,include,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,read,media,type,media,type,if,media,type,null,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,includes,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canRead(MediaType mediaType);1444408470;Returns true if any of the {@linkplain #setSupportedMediaTypes(List)_supported} media types {@link MediaType#includes(MediaType) include} the_given media type._@param mediaType the media type to read, can be {@code null} if not specified._Typically the value of a {@code Content-Type} header._@return {@code true} if the supported media types include the media type,_or if the media type is {@code null};protected boolean canRead(MediaType mediaType) {_		if (mediaType == null) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.includes(mediaType)) {_				return true__			}_		}_		return false__	};returns,true,if,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,link,media,type,includes,media,type,include,the,given,media,type,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,the,supported,media,types,include,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,read,media,type,media,type,if,media,type,null,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,includes,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canRead(MediaType mediaType);1455225853;Returns true if any of the {@linkplain #setSupportedMediaTypes(List)_supported} media types {@link MediaType#includes(MediaType) include} the_given media type._@param mediaType the media type to read, can be {@code null} if not specified._Typically the value of a {@code Content-Type} header._@return {@code true} if the supported media types include the media type,_or if the media type is {@code null};protected boolean canRead(MediaType mediaType) {_		if (mediaType == null) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.includes(mediaType)) {_				return true__			}_		}_		return false__	};returns,true,if,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,link,media,type,includes,media,type,include,the,given,media,type,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,the,supported,media,types,include,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,read,media,type,media,type,if,media,type,null,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,includes,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canRead(MediaType mediaType);1456785272;Returns true if any of the {@linkplain #setSupportedMediaTypes(List)_supported} media types {@link MediaType#includes(MediaType) include} the_given media type._@param mediaType the media type to read, can be {@code null} if not specified._Typically the value of a {@code Content-Type} header._@return {@code true} if the supported media types include the media type,_or if the media type is {@code null};protected boolean canRead(MediaType mediaType) {_		if (mediaType == null) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.includes(mediaType)) {_				return true__			}_		}_		return false__	};returns,true,if,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,link,media,type,includes,media,type,include,the,given,media,type,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,the,supported,media,types,include,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,read,media,type,media,type,if,media,type,null,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,includes,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canRead(MediaType mediaType);1458754769;Returns true if any of the {@linkplain #setSupportedMediaTypes(List)_supported} media types {@link MediaType#includes(MediaType) include} the_given media type._@param mediaType the media type to read, can be {@code null} if not specified._Typically the value of a {@code Content-Type} header._@return {@code true} if the supported media types include the media type,_or if the media type is {@code null};protected boolean canRead(MediaType mediaType) {_		if (mediaType == null) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.includes(mediaType)) {_				return true__			}_		}_		return false__	};returns,true,if,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,link,media,type,includes,media,type,include,the,given,media,type,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,the,supported,media,types,include,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,read,media,type,media,type,if,media,type,null,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,includes,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canRead(MediaType mediaType);1460565262;Returns {@code true} if any of the {@linkplain #setSupportedMediaTypes(List)_supported} media types {@link MediaType#includes(MediaType) include} the_given media type._@param mediaType the media type to read, can be {@code null} if not specified._Typically the value of a {@code Content-Type} header._@return {@code true} if the supported media types include the media type,_or if the media type is {@code null};protected boolean canRead(MediaType mediaType) {_		if (mediaType == null) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.includes(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,link,media,type,includes,media,type,include,the,given,media,type,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,the,supported,media,types,include,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,read,media,type,media,type,if,media,type,null,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,includes,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canRead(MediaType mediaType);1460644739;Returns {@code true} if any of the {@linkplain #setSupportedMediaTypes(List)_supported} media types {@link MediaType#includes(MediaType) include} the_given media type._@param mediaType the media type to read, can be {@code null} if not specified._Typically the value of a {@code Content-Type} header._@return {@code true} if the supported media types include the media type,_or if the media type is {@code null};protected boolean canRead(MediaType mediaType) {_		if (mediaType == null) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.includes(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,link,media,type,includes,media,type,include,the,given,media,type,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,the,supported,media,types,include,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,read,media,type,media,type,if,media,type,null,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,includes,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canRead(MediaType mediaType);1465387124;Returns {@code true} if any of the {@linkplain #setSupportedMediaTypes(List)_supported} media types {@link MediaType#includes(MediaType) include} the_given media type._@param mediaType the media type to read, can be {@code null} if not specified._Typically the value of a {@code Content-Type} header._@return {@code true} if the supported media types include the media type,_or if the media type is {@code null};protected boolean canRead(MediaType mediaType) {_		if (mediaType == null) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.includes(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,link,media,type,includes,media,type,include,the,given,media,type,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,the,supported,media,types,include,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,read,media,type,media,type,if,media,type,null,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,includes,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canRead(MediaType mediaType);1467730834;Returns {@code true} if any of the {@linkplain #setSupportedMediaTypes(List)_supported} media types {@link MediaType#includes(MediaType) include} the_given media type._@param mediaType the media type to read, can be {@code null} if not specified._Typically the value of a {@code Content-Type} header._@return {@code true} if the supported media types include the media type,_or if the media type is {@code null};protected boolean canRead(MediaType mediaType) {_		if (mediaType == null) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.includes(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,link,media,type,includes,media,type,include,the,given,media,type,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,the,supported,media,types,include,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,read,media,type,media,type,if,media,type,null,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,includes,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canRead(MediaType mediaType);1486062070;Returns {@code true} if any of the {@linkplain #setSupportedMediaTypes(List)_supported} media types {@link MediaType#includes(MediaType) include} the_given media type._@param mediaType the media type to read, can be {@code null} if not specified._Typically the value of a {@code Content-Type} header._@return {@code true} if the supported media types include the media type,_or if the media type is {@code null};protected boolean canRead(MediaType mediaType) {_		if (mediaType == null) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.includes(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,link,media,type,includes,media,type,include,the,given,media,type,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,the,supported,media,types,include,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,read,media,type,media,type,if,media,type,null,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,includes,media,type,return,true,return,false
AbstractHttpMessageConverter -> public boolean canWrite(Class<?> clazz, MediaType mediaType);1328020251;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canWrite(mediaType)__		};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;public,boolean,can,write,class,clazz,media,type,media,type,return,supports,clazz,can,write,media,type
AbstractHttpMessageConverter -> public boolean canWrite(Class<?> clazz, MediaType mediaType);1354627794;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canWrite(mediaType)__		};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;public,boolean,can,write,class,clazz,media,type,media,type,return,supports,clazz,can,write,media,type
AbstractHttpMessageConverter -> public boolean canWrite(Class<?> clazz, MediaType mediaType);1357119239;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canWrite(mediaType)__		};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;public,boolean,can,write,class,clazz,media,type,media,type,return,supports,clazz,can,write,media,type
AbstractHttpMessageConverter -> @Override 	public final void write(final T t, @Nullable MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException;1496242568;This implementation sets the default headers by calling {@link #addDefaultHeaders},_and then calls {@link #writeInternal}.;@Override_	public final void write(final T t, @Nullable MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException {__		final HttpHeaders headers = outputMessage.getHeaders()__		addDefaultHeaders(headers, t, contentType)___		if (outputMessage instanceof StreamingHttpOutputMessage) {_			StreamingHttpOutputMessage streamingOutputMessage =_					(StreamingHttpOutputMessage) outputMessage__			streamingOutputMessage.setBody(new StreamingHttpOutputMessage.Body() {_				@Override_				public void writeTo(final OutputStream outputStream) throws IOException {_					writeInternal(t, new HttpOutputMessage() {_						@Override_						public OutputStream getBody() throws IOException {_							return outputStream__						}_						@Override_						public HttpHeaders getHeaders() {_							return headers__						}_					})__				}_			})__		}_		else {_			writeInternal(t, outputMessage)__			outputMessage.getBody().flush()__		}_	};this,implementation,sets,the,default,headers,by,calling,link,add,default,headers,and,then,calls,link,write,internal;override,public,final,void,write,final,t,t,nullable,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception,final,http,headers,headers,output,message,get,headers,add,default,headers,headers,t,content,type,if,output,message,instanceof,streaming,http,output,message,streaming,http,output,message,streaming,output,message,streaming,http,output,message,output,message,streaming,output,message,set,body,new,streaming,http,output,message,body,override,public,void,write,to,final,output,stream,output,stream,throws,ioexception,write,internal,t,new,http,output,message,override,public,output,stream,get,body,throws,ioexception,return,output,stream,override,public,http,headers,get,headers,return,headers,else,write,internal,t,output,message,output,message,get,body,flush
AbstractHttpMessageConverter -> @Override 	public final void write(final T t, @Nullable MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException;1496259743;This implementation sets the default headers by calling {@link #addDefaultHeaders},_and then calls {@link #writeInternal}.;@Override_	public final void write(final T t, @Nullable MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException {__		final HttpHeaders headers = outputMessage.getHeaders()__		addDefaultHeaders(headers, t, contentType)___		if (outputMessage instanceof StreamingHttpOutputMessage) {_			StreamingHttpOutputMessage streamingOutputMessage =_					(StreamingHttpOutputMessage) outputMessage__			streamingOutputMessage.setBody(new StreamingHttpOutputMessage.Body() {_				@Override_				public void writeTo(final OutputStream outputStream) throws IOException {_					writeInternal(t, new HttpOutputMessage() {_						@Override_						public OutputStream getBody() throws IOException {_							return outputStream__						}_						@Override_						public HttpHeaders getHeaders() {_							return headers__						}_					})__				}_			})__		}_		else {_			writeInternal(t, outputMessage)__			outputMessage.getBody().flush()__		}_	};this,implementation,sets,the,default,headers,by,calling,link,add,default,headers,and,then,calls,link,write,internal;override,public,final,void,write,final,t,t,nullable,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception,final,http,headers,headers,output,message,get,headers,add,default,headers,headers,t,content,type,if,output,message,instanceof,streaming,http,output,message,streaming,http,output,message,streaming,output,message,streaming,http,output,message,output,message,streaming,output,message,set,body,new,streaming,http,output,message,body,override,public,void,write,to,final,output,stream,output,stream,throws,ioexception,write,internal,t,new,http,output,message,override,public,output,stream,get,body,throws,ioexception,return,output,stream,override,public,http,headers,get,headers,return,headers,else,write,internal,t,output,message,output,message,get,body,flush
AbstractHttpMessageConverter -> @Override 	public final void write(final T t, @Nullable MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException;1496837955;This implementation sets the default headers by calling {@link #addDefaultHeaders},_and then calls {@link #writeInternal}.;@Override_	public final void write(final T t, @Nullable MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException {__		final HttpHeaders headers = outputMessage.getHeaders()__		addDefaultHeaders(headers, t, contentType)___		if (outputMessage instanceof StreamingHttpOutputMessage) {_			StreamingHttpOutputMessage streamingOutputMessage =_					(StreamingHttpOutputMessage) outputMessage__			streamingOutputMessage.setBody(new StreamingHttpOutputMessage.Body() {_				@Override_				public void writeTo(final OutputStream outputStream) throws IOException {_					writeInternal(t, new HttpOutputMessage() {_						@Override_						public OutputStream getBody() throws IOException {_							return outputStream__						}_						@Override_						public HttpHeaders getHeaders() {_							return headers__						}_					})__				}_			})__		}_		else {_			writeInternal(t, outputMessage)__			outputMessage.getBody().flush()__		}_	};this,implementation,sets,the,default,headers,by,calling,link,add,default,headers,and,then,calls,link,write,internal;override,public,final,void,write,final,t,t,nullable,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception,final,http,headers,headers,output,message,get,headers,add,default,headers,headers,t,content,type,if,output,message,instanceof,streaming,http,output,message,streaming,http,output,message,streaming,output,message,streaming,http,output,message,output,message,streaming,output,message,set,body,new,streaming,http,output,message,body,override,public,void,write,to,final,output,stream,output,stream,throws,ioexception,write,internal,t,new,http,output,message,override,public,output,stream,get,body,throws,ioexception,return,output,stream,override,public,http,headers,get,headers,return,headers,else,write,internal,t,output,message,output,message,get,body,flush
AbstractHttpMessageConverter -> @Override 	public final void write(final T t, @Nullable MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException;1500448076;This implementation sets the default headers by calling {@link #addDefaultHeaders},_and then calls {@link #writeInternal}.;@Override_	public final void write(final T t, @Nullable MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException {__		final HttpHeaders headers = outputMessage.getHeaders()__		addDefaultHeaders(headers, t, contentType)___		if (outputMessage instanceof StreamingHttpOutputMessage) {_			StreamingHttpOutputMessage streamingOutputMessage =_					(StreamingHttpOutputMessage) outputMessage__			streamingOutputMessage.setBody(new StreamingHttpOutputMessage.Body() {_				@Override_				public void writeTo(final OutputStream outputStream) throws IOException {_					writeInternal(t, new HttpOutputMessage() {_						@Override_						public OutputStream getBody() throws IOException {_							return outputStream__						}_						@Override_						public HttpHeaders getHeaders() {_							return headers__						}_					})__				}_			})__		}_		else {_			writeInternal(t, outputMessage)__			outputMessage.getBody().flush()__		}_	};this,implementation,sets,the,default,headers,by,calling,link,add,default,headers,and,then,calls,link,write,internal;override,public,final,void,write,final,t,t,nullable,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception,final,http,headers,headers,output,message,get,headers,add,default,headers,headers,t,content,type,if,output,message,instanceof,streaming,http,output,message,streaming,http,output,message,streaming,output,message,streaming,http,output,message,output,message,streaming,output,message,set,body,new,streaming,http,output,message,body,override,public,void,write,to,final,output,stream,output,stream,throws,ioexception,write,internal,t,new,http,output,message,override,public,output,stream,get,body,throws,ioexception,return,output,stream,override,public,http,headers,get,headers,return,headers,else,write,internal,t,output,message,output,message,get,body,flush
AbstractHttpMessageConverter -> @Override 	public final void write(final T t, @Nullable MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException;1500457438;This implementation sets the default headers by calling {@link #addDefaultHeaders},_and then calls {@link #writeInternal}.;@Override_	public final void write(final T t, @Nullable MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException {__		final HttpHeaders headers = outputMessage.getHeaders()__		addDefaultHeaders(headers, t, contentType)___		if (outputMessage instanceof StreamingHttpOutputMessage) {_			StreamingHttpOutputMessage streamingOutputMessage =_					(StreamingHttpOutputMessage) outputMessage__			streamingOutputMessage.setBody(new StreamingHttpOutputMessage.Body() {_				@Override_				public void writeTo(final OutputStream outputStream) throws IOException {_					writeInternal(t, new HttpOutputMessage() {_						@Override_						public OutputStream getBody() throws IOException {_							return outputStream__						}_						@Override_						public HttpHeaders getHeaders() {_							return headers__						}_					})__				}_			})__		}_		else {_			writeInternal(t, outputMessage)__			outputMessage.getBody().flush()__		}_	};this,implementation,sets,the,default,headers,by,calling,link,add,default,headers,and,then,calls,link,write,internal;override,public,final,void,write,final,t,t,nullable,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception,final,http,headers,headers,output,message,get,headers,add,default,headers,headers,t,content,type,if,output,message,instanceof,streaming,http,output,message,streaming,http,output,message,streaming,output,message,streaming,http,output,message,output,message,streaming,output,message,set,body,new,streaming,http,output,message,body,override,public,void,write,to,final,output,stream,output,stream,throws,ioexception,write,internal,t,new,http,output,message,override,public,output,stream,get,body,throws,ioexception,return,output,stream,override,public,http,headers,get,headers,return,headers,else,write,internal,t,output,message,output,message,get,body,flush
AbstractHttpMessageConverter -> @Override 	public final void write(final T t, @Nullable MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException;1520890308;This implementation sets the default headers by calling {@link #addDefaultHeaders},_and then calls {@link #writeInternal}.;@Override_	public final void write(final T t, @Nullable MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException {__		final HttpHeaders headers = outputMessage.getHeaders()__		addDefaultHeaders(headers, t, contentType)___		if (outputMessage instanceof StreamingHttpOutputMessage) {_			StreamingHttpOutputMessage streamingOutputMessage = (StreamingHttpOutputMessage) outputMessage__			streamingOutputMessage.setBody(outputStream -> writeInternal(t, new HttpOutputMessage() {_				@Override_				public OutputStream getBody() {_					return outputStream__				}_				@Override_				public HttpHeaders getHeaders() {_					return headers__				}_			}))__		}_		else {_			writeInternal(t, outputMessage)__			outputMessage.getBody().flush()__		}_	};this,implementation,sets,the,default,headers,by,calling,link,add,default,headers,and,then,calls,link,write,internal;override,public,final,void,write,final,t,t,nullable,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception,final,http,headers,headers,output,message,get,headers,add,default,headers,headers,t,content,type,if,output,message,instanceof,streaming,http,output,message,streaming,http,output,message,streaming,output,message,streaming,http,output,message,output,message,streaming,output,message,set,body,output,stream,write,internal,t,new,http,output,message,override,public,output,stream,get,body,return,output,stream,override,public,http,headers,get,headers,return,headers,else,write,internal,t,output,message,output,message,get,body,flush
AbstractHttpMessageConverter -> @Override 	public final void write(final T t, @Nullable MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException;1530174524;This implementation sets the default headers by calling {@link #addDefaultHeaders},_and then calls {@link #writeInternal}.;@Override_	public final void write(final T t, @Nullable MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException {__		final HttpHeaders headers = outputMessage.getHeaders()__		addDefaultHeaders(headers, t, contentType)___		if (outputMessage instanceof StreamingHttpOutputMessage) {_			StreamingHttpOutputMessage streamingOutputMessage = (StreamingHttpOutputMessage) outputMessage__			streamingOutputMessage.setBody(outputStream -> writeInternal(t, new HttpOutputMessage() {_				@Override_				public OutputStream getBody() {_					return outputStream__				}_				@Override_				public HttpHeaders getHeaders() {_					return headers__				}_			}))__		}_		else {_			writeInternal(t, outputMessage)__			outputMessage.getBody().flush()__		}_	};this,implementation,sets,the,default,headers,by,calling,link,add,default,headers,and,then,calls,link,write,internal;override,public,final,void,write,final,t,t,nullable,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception,final,http,headers,headers,output,message,get,headers,add,default,headers,headers,t,content,type,if,output,message,instanceof,streaming,http,output,message,streaming,http,output,message,streaming,output,message,streaming,http,output,message,output,message,streaming,output,message,set,body,output,stream,write,internal,t,new,http,output,message,override,public,output,stream,get,body,return,output,stream,override,public,http,headers,get,headers,return,headers,else,write,internal,t,output,message,output,message,get,body,flush
AbstractHttpMessageConverter -> @Override 	public final void write(final T t, @Nullable MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException;1530563849;This implementation sets the default headers by calling {@link #addDefaultHeaders},_and then calls {@link #writeInternal}.;@Override_	public final void write(final T t, @Nullable MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException {__		final HttpHeaders headers = outputMessage.getHeaders()__		addDefaultHeaders(headers, t, contentType)___		if (outputMessage instanceof StreamingHttpOutputMessage) {_			StreamingHttpOutputMessage streamingOutputMessage = (StreamingHttpOutputMessage) outputMessage__			streamingOutputMessage.setBody(outputStream -> writeInternal(t, new HttpOutputMessage() {_				@Override_				public OutputStream getBody() {_					return outputStream__				}_				@Override_				public HttpHeaders getHeaders() {_					return headers__				}_			}))__		}_		else {_			writeInternal(t, outputMessage)__			outputMessage.getBody().flush()__		}_	};this,implementation,sets,the,default,headers,by,calling,link,add,default,headers,and,then,calls,link,write,internal;override,public,final,void,write,final,t,t,nullable,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception,final,http,headers,headers,output,message,get,headers,add,default,headers,headers,t,content,type,if,output,message,instanceof,streaming,http,output,message,streaming,http,output,message,streaming,output,message,streaming,http,output,message,output,message,streaming,output,message,set,body,output,stream,write,internal,t,new,http,output,message,override,public,output,stream,get,body,return,output,stream,override,public,http,headers,get,headers,return,headers,else,write,internal,t,output,message,output,message,get,body,flush
AbstractHttpMessageConverter -> @Override 	public final void write(final T t, @Nullable MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException;1530975243;This implementation sets the default headers by calling {@link #addDefaultHeaders},_and then calls {@link #writeInternal}.;@Override_	public final void write(final T t, @Nullable MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException {__		final HttpHeaders headers = outputMessage.getHeaders()__		addDefaultHeaders(headers, t, contentType)___		if (outputMessage instanceof StreamingHttpOutputMessage) {_			StreamingHttpOutputMessage streamingOutputMessage = (StreamingHttpOutputMessage) outputMessage__			streamingOutputMessage.setBody(outputStream -> writeInternal(t, new HttpOutputMessage() {_				@Override_				public OutputStream getBody() {_					return outputStream__				}_				@Override_				public HttpHeaders getHeaders() {_					return headers__				}_			}))__		}_		else {_			writeInternal(t, outputMessage)__			outputMessage.getBody().flush()__		}_	};this,implementation,sets,the,default,headers,by,calling,link,add,default,headers,and,then,calls,link,write,internal;override,public,final,void,write,final,t,t,nullable,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception,final,http,headers,headers,output,message,get,headers,add,default,headers,headers,t,content,type,if,output,message,instanceof,streaming,http,output,message,streaming,http,output,message,streaming,output,message,streaming,http,output,message,output,message,streaming,output,message,set,body,output,stream,write,internal,t,new,http,output,message,override,public,output,stream,get,body,return,output,stream,override,public,http,headers,get,headers,return,headers,else,write,internal,t,output,message,output,message,get,body,flush
AbstractHttpMessageConverter -> @Override 	public final void write(final T t, @Nullable MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException;1531942370;This implementation sets the default headers by calling {@link #addDefaultHeaders},_and then calls {@link #writeInternal}.;@Override_	public final void write(final T t, @Nullable MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException {__		final HttpHeaders headers = outputMessage.getHeaders()__		addDefaultHeaders(headers, t, contentType)___		if (outputMessage instanceof StreamingHttpOutputMessage) {_			StreamingHttpOutputMessage streamingOutputMessage = (StreamingHttpOutputMessage) outputMessage__			streamingOutputMessage.setBody(outputStream -> writeInternal(t, new HttpOutputMessage() {_				@Override_				public OutputStream getBody() {_					return outputStream__				}_				@Override_				public HttpHeaders getHeaders() {_					return headers__				}_			}))__		}_		else {_			writeInternal(t, outputMessage)__			outputMessage.getBody().flush()__		}_	};this,implementation,sets,the,default,headers,by,calling,link,add,default,headers,and,then,calls,link,write,internal;override,public,final,void,write,final,t,t,nullable,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception,final,http,headers,headers,output,message,get,headers,add,default,headers,headers,t,content,type,if,output,message,instanceof,streaming,http,output,message,streaming,http,output,message,streaming,output,message,streaming,http,output,message,output,message,streaming,output,message,set,body,output,stream,write,internal,t,new,http,output,message,override,public,output,stream,get,body,return,output,stream,override,public,http,headers,get,headers,return,headers,else,write,internal,t,output,message,output,message,get,body,flush
AbstractHttpMessageConverter -> @Override 	public final void write(final T t, @Nullable MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException;1546457570;This implementation sets the default headers by calling {@link #addDefaultHeaders},_and then calls {@link #writeInternal}.;@Override_	public final void write(final T t, @Nullable MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException {__		final HttpHeaders headers = outputMessage.getHeaders()__		addDefaultHeaders(headers, t, contentType)___		if (outputMessage instanceof StreamingHttpOutputMessage) {_			StreamingHttpOutputMessage streamingOutputMessage = (StreamingHttpOutputMessage) outputMessage__			streamingOutputMessage.setBody(outputStream -> writeInternal(t, new HttpOutputMessage() {_				@Override_				public OutputStream getBody() {_					return outputStream__				}_				@Override_				public HttpHeaders getHeaders() {_					return headers__				}_			}))__		}_		else {_			writeInternal(t, outputMessage)__			outputMessage.getBody().flush()__		}_	};this,implementation,sets,the,default,headers,by,calling,link,add,default,headers,and,then,calls,link,write,internal;override,public,final,void,write,final,t,t,nullable,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception,final,http,headers,headers,output,message,get,headers,add,default,headers,headers,t,content,type,if,output,message,instanceof,streaming,http,output,message,streaming,http,output,message,streaming,output,message,streaming,http,output,message,output,message,streaming,output,message,set,body,output,stream,write,internal,t,new,http,output,message,override,public,output,stream,get,body,return,output,stream,override,public,http,headers,get,headers,return,headers,else,write,internal,t,output,message,output,message,get,body,flush
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter();1328020251;Construct an {@code AbstractHttpMessageConverter} with no supported media types._@see #setSupportedMediaTypes;protected AbstractHttpMessageConverter() {_	};construct,an,code,abstract,http,message,converter,with,no,supported,media,types,see,set,supported,media,types;protected,abstract,http,message,converter
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter();1354627794;Construct an {@code AbstractHttpMessageConverter} with no supported media types._@see #setSupportedMediaTypes;protected AbstractHttpMessageConverter() {_	};construct,an,code,abstract,http,message,converter,with,no,supported,media,types,see,set,supported,media,types;protected,abstract,http,message,converter
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter();1356735495;Construct an {@code AbstractHttpMessageConverter} with no supported media types._@see #setSupportedMediaTypes;protected AbstractHttpMessageConverter() {_	};construct,an,code,abstract,http,message,converter,with,no,supported,media,types,see,set,supported,media,types;protected,abstract,http,message,converter
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter();1357119239;Construct an {@code AbstractHttpMessageConverter} with no supported media types._@see #setSupportedMediaTypes;protected AbstractHttpMessageConverter() {_	};construct,an,code,abstract,http,message,converter,with,no,supported,media,types,see,set,supported,media,types;protected,abstract,http,message,converter
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter();1368482696;Construct an {@code AbstractHttpMessageConverter} with no supported media types._@see #setSupportedMediaTypes;protected AbstractHttpMessageConverter() {_	};construct,an,code,abstract,http,message,converter,with,no,supported,media,types,see,set,supported,media,types;protected,abstract,http,message,converter
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter();1374115410;Construct an {@code AbstractHttpMessageConverter} with no supported media types._@see #setSupportedMediaTypes;protected AbstractHttpMessageConverter() {_	};construct,an,code,abstract,http,message,converter,with,no,supported,media,types,see,set,supported,media,types;protected,abstract,http,message,converter
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter();1375461043;Construct an {@code AbstractHttpMessageConverter} with no supported media types._@see #setSupportedMediaTypes;protected AbstractHttpMessageConverter() {_	};construct,an,code,abstract,http,message,converter,with,no,supported,media,types,see,set,supported,media,types;protected,abstract,http,message,converter
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter();1397767187;Construct an {@code AbstractHttpMessageConverter} with no supported media types._@see #setSupportedMediaTypes;protected AbstractHttpMessageConverter() {_	};construct,an,code,abstract,http,message,converter,with,no,supported,media,types,see,set,supported,media,types;protected,abstract,http,message,converter
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter();1428949885;Construct an {@code AbstractHttpMessageConverter} with no supported media types._@see #setSupportedMediaTypes;protected AbstractHttpMessageConverter() {_	};construct,an,code,abstract,http,message,converter,with,no,supported,media,types,see,set,supported,media,types;protected,abstract,http,message,converter
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter();1434985545;Construct an {@code AbstractHttpMessageConverter} with no supported media types._@see #setSupportedMediaTypes;protected AbstractHttpMessageConverter() {_	};construct,an,code,abstract,http,message,converter,with,no,supported,media,types,see,set,supported,media,types;protected,abstract,http,message,converter
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter();1438251419;Construct an {@code AbstractHttpMessageConverter} with no supported media types._@see #setSupportedMediaTypes;protected AbstractHttpMessageConverter() {_	};construct,an,code,abstract,http,message,converter,with,no,supported,media,types,see,set,supported,media,types;protected,abstract,http,message,converter
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter();1444408470;Construct an {@code AbstractHttpMessageConverter} with no supported media types._@see #setSupportedMediaTypes;protected AbstractHttpMessageConverter() {_	};construct,an,code,abstract,http,message,converter,with,no,supported,media,types,see,set,supported,media,types;protected,abstract,http,message,converter
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter();1455225853;Construct an {@code AbstractHttpMessageConverter} with no supported media types._@see #setSupportedMediaTypes;protected AbstractHttpMessageConverter() {_	};construct,an,code,abstract,http,message,converter,with,no,supported,media,types,see,set,supported,media,types;protected,abstract,http,message,converter
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter();1456785272;Construct an {@code AbstractHttpMessageConverter} with no supported media types._@see #setSupportedMediaTypes;protected AbstractHttpMessageConverter() {_	};construct,an,code,abstract,http,message,converter,with,no,supported,media,types,see,set,supported,media,types;protected,abstract,http,message,converter
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter();1458754769;Construct an {@code AbstractHttpMessageConverter} with no supported media types._@see #setSupportedMediaTypes;protected AbstractHttpMessageConverter() {_	};construct,an,code,abstract,http,message,converter,with,no,supported,media,types,see,set,supported,media,types;protected,abstract,http,message,converter
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter();1460565262;Construct an {@code AbstractHttpMessageConverter} with no supported media types._@see #setSupportedMediaTypes;protected AbstractHttpMessageConverter() {_	};construct,an,code,abstract,http,message,converter,with,no,supported,media,types,see,set,supported,media,types;protected,abstract,http,message,converter
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter();1460644739;Construct an {@code AbstractHttpMessageConverter} with no supported media types._@see #setSupportedMediaTypes;protected AbstractHttpMessageConverter() {_	};construct,an,code,abstract,http,message,converter,with,no,supported,media,types,see,set,supported,media,types;protected,abstract,http,message,converter
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter();1465387124;Construct an {@code AbstractHttpMessageConverter} with no supported media types._@see #setSupportedMediaTypes;protected AbstractHttpMessageConverter() {_	};construct,an,code,abstract,http,message,converter,with,no,supported,media,types,see,set,supported,media,types;protected,abstract,http,message,converter
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter();1467730834;Construct an {@code AbstractHttpMessageConverter} with no supported media types._@see #setSupportedMediaTypes;protected AbstractHttpMessageConverter() {_	};construct,an,code,abstract,http,message,converter,with,no,supported,media,types,see,set,supported,media,types;protected,abstract,http,message,converter
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter();1486062070;Construct an {@code AbstractHttpMessageConverter} with no supported media types._@see #setSupportedMediaTypes;protected AbstractHttpMessageConverter() {_	};construct,an,code,abstract,http,message,converter,with,no,supported,media,types,see,set,supported,media,types;protected,abstract,http,message,converter
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter();1495868221;Construct an {@code AbstractHttpMessageConverter} with no supported media types._@see #setSupportedMediaTypes;protected AbstractHttpMessageConverter() {_	};construct,an,code,abstract,http,message,converter,with,no,supported,media,types,see,set,supported,media,types;protected,abstract,http,message,converter
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter();1496242568;Construct an {@code AbstractHttpMessageConverter} with no supported media types._@see #setSupportedMediaTypes;protected AbstractHttpMessageConverter() {_	};construct,an,code,abstract,http,message,converter,with,no,supported,media,types,see,set,supported,media,types;protected,abstract,http,message,converter
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter();1496259743;Construct an {@code AbstractHttpMessageConverter} with no supported media types._@see #setSupportedMediaTypes;protected AbstractHttpMessageConverter() {_	};construct,an,code,abstract,http,message,converter,with,no,supported,media,types,see,set,supported,media,types;protected,abstract,http,message,converter
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter();1496837955;Construct an {@code AbstractHttpMessageConverter} with no supported media types._@see #setSupportedMediaTypes;protected AbstractHttpMessageConverter() {_	};construct,an,code,abstract,http,message,converter,with,no,supported,media,types,see,set,supported,media,types;protected,abstract,http,message,converter
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter();1500448076;Construct an {@code AbstractHttpMessageConverter} with no supported media types._@see #setSupportedMediaTypes;protected AbstractHttpMessageConverter() {_	};construct,an,code,abstract,http,message,converter,with,no,supported,media,types,see,set,supported,media,types;protected,abstract,http,message,converter
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter();1500457438;Construct an {@code AbstractHttpMessageConverter} with no supported media types._@see #setSupportedMediaTypes;protected AbstractHttpMessageConverter() {_	};construct,an,code,abstract,http,message,converter,with,no,supported,media,types,see,set,supported,media,types;protected,abstract,http,message,converter
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter();1520890308;Construct an {@code AbstractHttpMessageConverter} with no supported media types._@see #setSupportedMediaTypes;protected AbstractHttpMessageConverter() {_	};construct,an,code,abstract,http,message,converter,with,no,supported,media,types,see,set,supported,media,types;protected,abstract,http,message,converter
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter();1530174524;Construct an {@code AbstractHttpMessageConverter} with no supported media types._@see #setSupportedMediaTypes;protected AbstractHttpMessageConverter() {_	};construct,an,code,abstract,http,message,converter,with,no,supported,media,types,see,set,supported,media,types;protected,abstract,http,message,converter
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter();1530563849;Construct an {@code AbstractHttpMessageConverter} with no supported media types._@see #setSupportedMediaTypes;protected AbstractHttpMessageConverter() {_	};construct,an,code,abstract,http,message,converter,with,no,supported,media,types,see,set,supported,media,types;protected,abstract,http,message,converter
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter();1530975243;Construct an {@code AbstractHttpMessageConverter} with no supported media types._@see #setSupportedMediaTypes;protected AbstractHttpMessageConverter() {_	};construct,an,code,abstract,http,message,converter,with,no,supported,media,types,see,set,supported,media,types;protected,abstract,http,message,converter
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter();1531942370;Construct an {@code AbstractHttpMessageConverter} with no supported media types._@see #setSupportedMediaTypes;protected AbstractHttpMessageConverter() {_	};construct,an,code,abstract,http,message,converter,with,no,supported,media,types,see,set,supported,media,types;protected,abstract,http,message,converter
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter();1546457570;Construct an {@code AbstractHttpMessageConverter} with no supported media types._@see #setSupportedMediaTypes;protected AbstractHttpMessageConverter() {_	};construct,an,code,abstract,http,message,converter,with,no,supported,media,types,see,set,supported,media,types;protected,abstract,http,message,converter
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes);1460565262;Construct an {@code AbstractHttpMessageConverter} with a default charset and_multiple supported media types._@param defaultCharset the default character set_@param supportedMediaTypes the supported media types_@since 4.3;protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes) {_		this.defaultCharset = defaultCharset__		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,a,default,charset,and,multiple,supported,media,types,param,default,charset,the,default,character,set,param,supported,media,types,the,supported,media,types,since,4,3;protected,abstract,http,message,converter,charset,default,charset,media,type,supported,media,types,this,default,charset,default,charset,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes);1460644739;Construct an {@code AbstractHttpMessageConverter} with a default charset and_multiple supported media types._@param defaultCharset the default character set_@param supportedMediaTypes the supported media types_@since 4.3;protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes) {_		this.defaultCharset = defaultCharset__		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,a,default,charset,and,multiple,supported,media,types,param,default,charset,the,default,character,set,param,supported,media,types,the,supported,media,types,since,4,3;protected,abstract,http,message,converter,charset,default,charset,media,type,supported,media,types,this,default,charset,default,charset,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes);1465387124;Construct an {@code AbstractHttpMessageConverter} with a default charset and_multiple supported media types._@param defaultCharset the default character set_@param supportedMediaTypes the supported media types_@since 4.3;protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes) {_		this.defaultCharset = defaultCharset__		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,a,default,charset,and,multiple,supported,media,types,param,default,charset,the,default,character,set,param,supported,media,types,the,supported,media,types,since,4,3;protected,abstract,http,message,converter,charset,default,charset,media,type,supported,media,types,this,default,charset,default,charset,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes);1467730834;Construct an {@code AbstractHttpMessageConverter} with a default charset and_multiple supported media types._@param defaultCharset the default character set_@param supportedMediaTypes the supported media types_@since 4.3;protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes) {_		this.defaultCharset = defaultCharset__		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,a,default,charset,and,multiple,supported,media,types,param,default,charset,the,default,character,set,param,supported,media,types,the,supported,media,types,since,4,3;protected,abstract,http,message,converter,charset,default,charset,media,type,supported,media,types,this,default,charset,default,charset,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes);1486062070;Construct an {@code AbstractHttpMessageConverter} with a default charset and_multiple supported media types._@param defaultCharset the default character set_@param supportedMediaTypes the supported media types_@since 4.3;protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes) {_		this.defaultCharset = defaultCharset__		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,a,default,charset,and,multiple,supported,media,types,param,default,charset,the,default,character,set,param,supported,media,types,the,supported,media,types,since,4,3;protected,abstract,http,message,converter,charset,default,charset,media,type,supported,media,types,this,default,charset,default,charset,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes);1495868221;Construct an {@code AbstractHttpMessageConverter} with a default charset and_multiple supported media types._@param defaultCharset the default character set_@param supportedMediaTypes the supported media types_@since 4.3;protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes) {_		this.defaultCharset = defaultCharset__		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,a,default,charset,and,multiple,supported,media,types,param,default,charset,the,default,character,set,param,supported,media,types,the,supported,media,types,since,4,3;protected,abstract,http,message,converter,charset,default,charset,media,type,supported,media,types,this,default,charset,default,charset,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes);1496242568;Construct an {@code AbstractHttpMessageConverter} with a default charset and_multiple supported media types._@param defaultCharset the default character set_@param supportedMediaTypes the supported media types_@since 4.3;protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes) {_		this.defaultCharset = defaultCharset__		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,a,default,charset,and,multiple,supported,media,types,param,default,charset,the,default,character,set,param,supported,media,types,the,supported,media,types,since,4,3;protected,abstract,http,message,converter,charset,default,charset,media,type,supported,media,types,this,default,charset,default,charset,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes);1496259743;Construct an {@code AbstractHttpMessageConverter} with a default charset and_multiple supported media types._@param defaultCharset the default character set_@param supportedMediaTypes the supported media types_@since 4.3;protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes) {_		this.defaultCharset = defaultCharset__		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,a,default,charset,and,multiple,supported,media,types,param,default,charset,the,default,character,set,param,supported,media,types,the,supported,media,types,since,4,3;protected,abstract,http,message,converter,charset,default,charset,media,type,supported,media,types,this,default,charset,default,charset,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes);1496837955;Construct an {@code AbstractHttpMessageConverter} with a default charset and_multiple supported media types._@param defaultCharset the default character set_@param supportedMediaTypes the supported media types_@since 4.3;protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes) {_		this.defaultCharset = defaultCharset__		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,a,default,charset,and,multiple,supported,media,types,param,default,charset,the,default,character,set,param,supported,media,types,the,supported,media,types,since,4,3;protected,abstract,http,message,converter,charset,default,charset,media,type,supported,media,types,this,default,charset,default,charset,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes);1500448076;Construct an {@code AbstractHttpMessageConverter} with a default charset and_multiple supported media types._@param defaultCharset the default character set_@param supportedMediaTypes the supported media types_@since 4.3;protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes) {_		this.defaultCharset = defaultCharset__		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,a,default,charset,and,multiple,supported,media,types,param,default,charset,the,default,character,set,param,supported,media,types,the,supported,media,types,since,4,3;protected,abstract,http,message,converter,charset,default,charset,media,type,supported,media,types,this,default,charset,default,charset,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes);1500457438;Construct an {@code AbstractHttpMessageConverter} with a default charset and_multiple supported media types._@param defaultCharset the default character set_@param supportedMediaTypes the supported media types_@since 4.3;protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes) {_		this.defaultCharset = defaultCharset__		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,a,default,charset,and,multiple,supported,media,types,param,default,charset,the,default,character,set,param,supported,media,types,the,supported,media,types,since,4,3;protected,abstract,http,message,converter,charset,default,charset,media,type,supported,media,types,this,default,charset,default,charset,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes);1520890308;Construct an {@code AbstractHttpMessageConverter} with a default charset and_multiple supported media types._@param defaultCharset the default character set_@param supportedMediaTypes the supported media types_@since 4.3;protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes) {_		this.defaultCharset = defaultCharset__		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,a,default,charset,and,multiple,supported,media,types,param,default,charset,the,default,character,set,param,supported,media,types,the,supported,media,types,since,4,3;protected,abstract,http,message,converter,charset,default,charset,media,type,supported,media,types,this,default,charset,default,charset,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes);1530174524;Construct an {@code AbstractHttpMessageConverter} with a default charset and_multiple supported media types._@param defaultCharset the default character set_@param supportedMediaTypes the supported media types_@since 4.3;protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes) {_		this.defaultCharset = defaultCharset__		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,a,default,charset,and,multiple,supported,media,types,param,default,charset,the,default,character,set,param,supported,media,types,the,supported,media,types,since,4,3;protected,abstract,http,message,converter,charset,default,charset,media,type,supported,media,types,this,default,charset,default,charset,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes);1530563849;Construct an {@code AbstractHttpMessageConverter} with a default charset and_multiple supported media types._@param defaultCharset the default character set_@param supportedMediaTypes the supported media types_@since 4.3;protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes) {_		this.defaultCharset = defaultCharset__		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,a,default,charset,and,multiple,supported,media,types,param,default,charset,the,default,character,set,param,supported,media,types,the,supported,media,types,since,4,3;protected,abstract,http,message,converter,charset,default,charset,media,type,supported,media,types,this,default,charset,default,charset,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes);1530975243;Construct an {@code AbstractHttpMessageConverter} with a default charset and_multiple supported media types._@param defaultCharset the default character set_@param supportedMediaTypes the supported media types_@since 4.3;protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes) {_		this.defaultCharset = defaultCharset__		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,a,default,charset,and,multiple,supported,media,types,param,default,charset,the,default,character,set,param,supported,media,types,the,supported,media,types,since,4,3;protected,abstract,http,message,converter,charset,default,charset,media,type,supported,media,types,this,default,charset,default,charset,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes);1531942370;Construct an {@code AbstractHttpMessageConverter} with a default charset and_multiple supported media types._@param defaultCharset the default character set_@param supportedMediaTypes the supported media types_@since 4.3;protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes) {_		this.defaultCharset = defaultCharset__		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,a,default,charset,and,multiple,supported,media,types,param,default,charset,the,default,character,set,param,supported,media,types,the,supported,media,types,since,4,3;protected,abstract,http,message,converter,charset,default,charset,media,type,supported,media,types,this,default,charset,default,charset,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes);1546457570;Construct an {@code AbstractHttpMessageConverter} with a default charset and_multiple supported media types._@param defaultCharset the default character set_@param supportedMediaTypes the supported media types_@since 4.3;protected AbstractHttpMessageConverter(Charset defaultCharset, MediaType... supportedMediaTypes) {_		this.defaultCharset = defaultCharset__		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,a,default,charset,and,multiple,supported,media,types,param,default,charset,the,default,character,set,param,supported,media,types,the,supported,media,types,since,4,3;protected,abstract,http,message,converter,charset,default,charset,media,type,supported,media,types,this,default,charset,default,charset,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected boolean canRead(@Nullable MediaType mediaType);1495868221;Returns {@code true} if any of the {@linkplain #setSupportedMediaTypes(List)_supported} media types {@link MediaType#includes(MediaType) include} the_given media type._@param mediaType the media type to read, can be {@code null} if not specified._Typically the value of a {@code Content-Type} header._@return {@code true} if the supported media types include the media type,_or if the media type is {@code null};protected boolean canRead(@Nullable MediaType mediaType) {_		if (mediaType == null) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.includes(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,link,media,type,includes,media,type,include,the,given,media,type,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,the,supported,media,types,include,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,read,nullable,media,type,media,type,if,media,type,null,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,includes,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canRead(@Nullable MediaType mediaType);1496242568;Returns {@code true} if any of the {@linkplain #setSupportedMediaTypes(List)_supported} media types {@link MediaType#includes(MediaType) include} the_given media type._@param mediaType the media type to read, can be {@code null} if not specified._Typically the value of a {@code Content-Type} header._@return {@code true} if the supported media types include the media type,_or if the media type is {@code null};protected boolean canRead(@Nullable MediaType mediaType) {_		if (mediaType == null) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.includes(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,link,media,type,includes,media,type,include,the,given,media,type,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,the,supported,media,types,include,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,read,nullable,media,type,media,type,if,media,type,null,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,includes,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canRead(@Nullable MediaType mediaType);1496259743;Returns {@code true} if any of the {@linkplain #setSupportedMediaTypes(List)_supported} media types {@link MediaType#includes(MediaType) include} the_given media type._@param mediaType the media type to read, can be {@code null} if not specified._Typically the value of a {@code Content-Type} header._@return {@code true} if the supported media types include the media type,_or if the media type is {@code null};protected boolean canRead(@Nullable MediaType mediaType) {_		if (mediaType == null) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.includes(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,link,media,type,includes,media,type,include,the,given,media,type,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,the,supported,media,types,include,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,read,nullable,media,type,media,type,if,media,type,null,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,includes,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canRead(@Nullable MediaType mediaType);1496837955;Returns {@code true} if any of the {@linkplain #setSupportedMediaTypes(List)_supported} media types {@link MediaType#includes(MediaType) include} the_given media type._@param mediaType the media type to read, can be {@code null} if not specified._Typically the value of a {@code Content-Type} header._@return {@code true} if the supported media types include the media type,_or if the media type is {@code null};protected boolean canRead(@Nullable MediaType mediaType) {_		if (mediaType == null) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.includes(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,link,media,type,includes,media,type,include,the,given,media,type,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,the,supported,media,types,include,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,read,nullable,media,type,media,type,if,media,type,null,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,includes,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canRead(@Nullable MediaType mediaType);1500448076;Returns {@code true} if any of the {@linkplain #setSupportedMediaTypes(List)_supported} media types {@link MediaType#includes(MediaType) include} the_given media type._@param mediaType the media type to read, can be {@code null} if not specified._Typically the value of a {@code Content-Type} header._@return {@code true} if the supported media types include the media type,_or if the media type is {@code null};protected boolean canRead(@Nullable MediaType mediaType) {_		if (mediaType == null) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.includes(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,link,media,type,includes,media,type,include,the,given,media,type,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,the,supported,media,types,include,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,read,nullable,media,type,media,type,if,media,type,null,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,includes,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canRead(@Nullable MediaType mediaType);1500457438;Returns {@code true} if any of the {@linkplain #setSupportedMediaTypes(List)_supported} media types {@link MediaType#includes(MediaType) include} the_given media type._@param mediaType the media type to read, can be {@code null} if not specified._Typically the value of a {@code Content-Type} header._@return {@code true} if the supported media types include the media type,_or if the media type is {@code null};protected boolean canRead(@Nullable MediaType mediaType) {_		if (mediaType == null) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.includes(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,link,media,type,includes,media,type,include,the,given,media,type,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,the,supported,media,types,include,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,read,nullable,media,type,media,type,if,media,type,null,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,includes,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canRead(@Nullable MediaType mediaType);1520890308;Returns {@code true} if any of the {@linkplain #setSupportedMediaTypes(List)_supported} media types {@link MediaType#includes(MediaType) include} the_given media type._@param mediaType the media type to read, can be {@code null} if not specified._Typically the value of a {@code Content-Type} header._@return {@code true} if the supported media types include the media type,_or if the media type is {@code null};protected boolean canRead(@Nullable MediaType mediaType) {_		if (mediaType == null) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.includes(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,link,media,type,includes,media,type,include,the,given,media,type,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,the,supported,media,types,include,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,read,nullable,media,type,media,type,if,media,type,null,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,includes,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canRead(@Nullable MediaType mediaType);1530174524;Returns {@code true} if any of the {@linkplain #setSupportedMediaTypes(List)_supported} media types {@link MediaType#includes(MediaType) include} the_given media type._@param mediaType the media type to read, can be {@code null} if not specified._Typically the value of a {@code Content-Type} header._@return {@code true} if the supported media types include the media type,_or if the media type is {@code null};protected boolean canRead(@Nullable MediaType mediaType) {_		if (mediaType == null) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.includes(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,link,media,type,includes,media,type,include,the,given,media,type,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,the,supported,media,types,include,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,read,nullable,media,type,media,type,if,media,type,null,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,includes,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canRead(@Nullable MediaType mediaType);1530563849;Returns {@code true} if any of the {@linkplain #setSupportedMediaTypes(List)_supported} media types {@link MediaType#includes(MediaType) include} the_given media type._@param mediaType the media type to read, can be {@code null} if not specified._Typically the value of a {@code Content-Type} header._@return {@code true} if the supported media types include the media type,_or if the media type is {@code null};protected boolean canRead(@Nullable MediaType mediaType) {_		if (mediaType == null) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.includes(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,link,media,type,includes,media,type,include,the,given,media,type,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,the,supported,media,types,include,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,read,nullable,media,type,media,type,if,media,type,null,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,includes,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canRead(@Nullable MediaType mediaType);1530975243;Returns {@code true} if any of the {@linkplain #setSupportedMediaTypes(List)_supported} media types {@link MediaType#includes(MediaType) include} the_given media type._@param mediaType the media type to read, can be {@code null} if not specified._Typically the value of a {@code Content-Type} header._@return {@code true} if the supported media types include the media type,_or if the media type is {@code null};protected boolean canRead(@Nullable MediaType mediaType) {_		if (mediaType == null) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.includes(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,link,media,type,includes,media,type,include,the,given,media,type,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,the,supported,media,types,include,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,read,nullable,media,type,media,type,if,media,type,null,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,includes,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canRead(@Nullable MediaType mediaType);1531942370;Returns {@code true} if any of the {@linkplain #setSupportedMediaTypes(List)_supported} media types {@link MediaType#includes(MediaType) include} the_given media type._@param mediaType the media type to read, can be {@code null} if not specified._Typically the value of a {@code Content-Type} header._@return {@code true} if the supported media types include the media type,_or if the media type is {@code null};protected boolean canRead(@Nullable MediaType mediaType) {_		if (mediaType == null) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.includes(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,link,media,type,includes,media,type,include,the,given,media,type,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,the,supported,media,types,include,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,read,nullable,media,type,media,type,if,media,type,null,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,includes,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canRead(@Nullable MediaType mediaType);1546457570;Returns {@code true} if any of the {@linkplain #setSupportedMediaTypes(List)_supported} media types {@link MediaType#includes(MediaType) include} the_given media type._@param mediaType the media type to read, can be {@code null} if not specified._Typically the value of a {@code Content-Type} header._@return {@code true} if the supported media types include the media type,_or if the media type is {@code null};protected boolean canRead(@Nullable MediaType mediaType) {_		if (mediaType == null) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.includes(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,link,media,type,includes,media,type,include,the,given,media,type,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,the,supported,media,types,include,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,read,nullable,media,type,media,type,if,media,type,null,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,includes,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected abstract boolean supports(Class<?> clazz)_;1328020251;Indicates whether the given class is supported by this converter._@param clazz the class to test for support_@return <code>true</code> if supported_ <code>false</code> otherwise;protected abstract boolean supports(Class<?> clazz)_;indicates,whether,the,given,class,is,supported,by,this,converter,param,clazz,the,class,to,test,for,support,return,code,true,code,if,supported,code,false,code,otherwise;protected,abstract,boolean,supports,class,clazz
AbstractHttpMessageConverter -> protected abstract boolean supports(Class<?> clazz)_;1354627794;Indicates whether the given class is supported by this converter._@param clazz the class to test for support_@return <code>true</code> if supported_ <code>false</code> otherwise;protected abstract boolean supports(Class<?> clazz)_;indicates,whether,the,given,class,is,supported,by,this,converter,param,clazz,the,class,to,test,for,support,return,code,true,code,if,supported,code,false,code,otherwise;protected,abstract,boolean,supports,class,clazz
AbstractHttpMessageConverter -> protected abstract boolean supports(Class<?> clazz)_;1356735495;Indicates whether the given class is supported by this converter._@param clazz the class to test for support_@return {@code true} if supported_ {@code false} otherwise;protected abstract boolean supports(Class<?> clazz)_;indicates,whether,the,given,class,is,supported,by,this,converter,param,clazz,the,class,to,test,for,support,return,code,true,if,supported,code,false,otherwise;protected,abstract,boolean,supports,class,clazz
AbstractHttpMessageConverter -> protected abstract boolean supports(Class<?> clazz)_;1357119239;Indicates whether the given class is supported by this converter._@param clazz the class to test for support_@return {@code true} if supported_ {@code false} otherwise;protected abstract boolean supports(Class<?> clazz)_;indicates,whether,the,given,class,is,supported,by,this,converter,param,clazz,the,class,to,test,for,support,return,code,true,if,supported,code,false,otherwise;protected,abstract,boolean,supports,class,clazz
AbstractHttpMessageConverter -> protected abstract boolean supports(Class<?> clazz)_;1368482696;Indicates whether the given class is supported by this converter._@param clazz the class to test for support_@return {@code true} if supported_ {@code false} otherwise;protected abstract boolean supports(Class<?> clazz)_;indicates,whether,the,given,class,is,supported,by,this,converter,param,clazz,the,class,to,test,for,support,return,code,true,if,supported,code,false,otherwise;protected,abstract,boolean,supports,class,clazz
AbstractHttpMessageConverter -> protected abstract boolean supports(Class<?> clazz)_;1374115410;Indicates whether the given class is supported by this converter._@param clazz the class to test for support_@return {@code true} if supported_ {@code false} otherwise;protected abstract boolean supports(Class<?> clazz)_;indicates,whether,the,given,class,is,supported,by,this,converter,param,clazz,the,class,to,test,for,support,return,code,true,if,supported,code,false,otherwise;protected,abstract,boolean,supports,class,clazz
AbstractHttpMessageConverter -> protected abstract boolean supports(Class<?> clazz)_;1375461043;Indicates whether the given class is supported by this converter._@param clazz the class to test for support_@return {@code true} if supported_ {@code false} otherwise;protected abstract boolean supports(Class<?> clazz)_;indicates,whether,the,given,class,is,supported,by,this,converter,param,clazz,the,class,to,test,for,support,return,code,true,if,supported,code,false,otherwise;protected,abstract,boolean,supports,class,clazz
AbstractHttpMessageConverter -> protected abstract boolean supports(Class<?> clazz)_;1397767187;Indicates whether the given class is supported by this converter._@param clazz the class to test for support_@return {@code true} if supported_ {@code false} otherwise;protected abstract boolean supports(Class<?> clazz)_;indicates,whether,the,given,class,is,supported,by,this,converter,param,clazz,the,class,to,test,for,support,return,code,true,if,supported,code,false,otherwise;protected,abstract,boolean,supports,class,clazz
AbstractHttpMessageConverter -> protected abstract boolean supports(Class<?> clazz)_;1428949885;Indicates whether the given class is supported by this converter._@param clazz the class to test for support_@return {@code true} if supported_ {@code false} otherwise;protected abstract boolean supports(Class<?> clazz)_;indicates,whether,the,given,class,is,supported,by,this,converter,param,clazz,the,class,to,test,for,support,return,code,true,if,supported,code,false,otherwise;protected,abstract,boolean,supports,class,clazz
AbstractHttpMessageConverter -> protected abstract boolean supports(Class<?> clazz)_;1434985545;Indicates whether the given class is supported by this converter._@param clazz the class to test for support_@return {@code true} if supported_ {@code false} otherwise;protected abstract boolean supports(Class<?> clazz)_;indicates,whether,the,given,class,is,supported,by,this,converter,param,clazz,the,class,to,test,for,support,return,code,true,if,supported,code,false,otherwise;protected,abstract,boolean,supports,class,clazz
AbstractHttpMessageConverter -> protected abstract boolean supports(Class<?> clazz)_;1438251419;Indicates whether the given class is supported by this converter._@param clazz the class to test for support_@return {@code true} if supported_ {@code false} otherwise;protected abstract boolean supports(Class<?> clazz)_;indicates,whether,the,given,class,is,supported,by,this,converter,param,clazz,the,class,to,test,for,support,return,code,true,if,supported,code,false,otherwise;protected,abstract,boolean,supports,class,clazz
AbstractHttpMessageConverter -> protected abstract boolean supports(Class<?> clazz)_;1444408470;Indicates whether the given class is supported by this converter._@param clazz the class to test for support_@return {@code true} if supported_ {@code false} otherwise;protected abstract boolean supports(Class<?> clazz)_;indicates,whether,the,given,class,is,supported,by,this,converter,param,clazz,the,class,to,test,for,support,return,code,true,if,supported,code,false,otherwise;protected,abstract,boolean,supports,class,clazz
AbstractHttpMessageConverter -> protected abstract boolean supports(Class<?> clazz)_;1455225853;Indicates whether the given class is supported by this converter._@param clazz the class to test for support_@return {@code true} if supported_ {@code false} otherwise;protected abstract boolean supports(Class<?> clazz)_;indicates,whether,the,given,class,is,supported,by,this,converter,param,clazz,the,class,to,test,for,support,return,code,true,if,supported,code,false,otherwise;protected,abstract,boolean,supports,class,clazz
AbstractHttpMessageConverter -> protected abstract boolean supports(Class<?> clazz)_;1456785272;Indicates whether the given class is supported by this converter._@param clazz the class to test for support_@return {@code true} if supported_ {@code false} otherwise;protected abstract boolean supports(Class<?> clazz)_;indicates,whether,the,given,class,is,supported,by,this,converter,param,clazz,the,class,to,test,for,support,return,code,true,if,supported,code,false,otherwise;protected,abstract,boolean,supports,class,clazz
AbstractHttpMessageConverter -> protected abstract boolean supports(Class<?> clazz)_;1458754769;Indicates whether the given class is supported by this converter._@param clazz the class to test for support_@return {@code true} if supported_ {@code false} otherwise;protected abstract boolean supports(Class<?> clazz)_;indicates,whether,the,given,class,is,supported,by,this,converter,param,clazz,the,class,to,test,for,support,return,code,true,if,supported,code,false,otherwise;protected,abstract,boolean,supports,class,clazz
AbstractHttpMessageConverter -> protected abstract boolean supports(Class<?> clazz)_;1460565262;Indicates whether the given class is supported by this converter._@param clazz the class to test for support_@return {@code true} if supported_ {@code false} otherwise;protected abstract boolean supports(Class<?> clazz)_;indicates,whether,the,given,class,is,supported,by,this,converter,param,clazz,the,class,to,test,for,support,return,code,true,if,supported,code,false,otherwise;protected,abstract,boolean,supports,class,clazz
AbstractHttpMessageConverter -> protected abstract boolean supports(Class<?> clazz)_;1460644739;Indicates whether the given class is supported by this converter._@param clazz the class to test for support_@return {@code true} if supported_ {@code false} otherwise;protected abstract boolean supports(Class<?> clazz)_;indicates,whether,the,given,class,is,supported,by,this,converter,param,clazz,the,class,to,test,for,support,return,code,true,if,supported,code,false,otherwise;protected,abstract,boolean,supports,class,clazz
AbstractHttpMessageConverter -> protected abstract boolean supports(Class<?> clazz)_;1465387124;Indicates whether the given class is supported by this converter._@param clazz the class to test for support_@return {@code true} if supported_ {@code false} otherwise;protected abstract boolean supports(Class<?> clazz)_;indicates,whether,the,given,class,is,supported,by,this,converter,param,clazz,the,class,to,test,for,support,return,code,true,if,supported,code,false,otherwise;protected,abstract,boolean,supports,class,clazz
AbstractHttpMessageConverter -> protected abstract boolean supports(Class<?> clazz)_;1467730834;Indicates whether the given class is supported by this converter._@param clazz the class to test for support_@return {@code true} if supported_ {@code false} otherwise;protected abstract boolean supports(Class<?> clazz)_;indicates,whether,the,given,class,is,supported,by,this,converter,param,clazz,the,class,to,test,for,support,return,code,true,if,supported,code,false,otherwise;protected,abstract,boolean,supports,class,clazz
AbstractHttpMessageConverter -> protected abstract boolean supports(Class<?> clazz)_;1486062070;Indicates whether the given class is supported by this converter._@param clazz the class to test for support_@return {@code true} if supported_ {@code false} otherwise;protected abstract boolean supports(Class<?> clazz)_;indicates,whether,the,given,class,is,supported,by,this,converter,param,clazz,the,class,to,test,for,support,return,code,true,if,supported,code,false,otherwise;protected,abstract,boolean,supports,class,clazz
AbstractHttpMessageConverter -> protected abstract boolean supports(Class<?> clazz)_;1495868221;Indicates whether the given class is supported by this converter._@param clazz the class to test for support_@return {@code true} if supported_ {@code false} otherwise;protected abstract boolean supports(Class<?> clazz)_;indicates,whether,the,given,class,is,supported,by,this,converter,param,clazz,the,class,to,test,for,support,return,code,true,if,supported,code,false,otherwise;protected,abstract,boolean,supports,class,clazz
AbstractHttpMessageConverter -> protected abstract boolean supports(Class<?> clazz)_;1496242568;Indicates whether the given class is supported by this converter._@param clazz the class to test for support_@return {@code true} if supported_ {@code false} otherwise;protected abstract boolean supports(Class<?> clazz)_;indicates,whether,the,given,class,is,supported,by,this,converter,param,clazz,the,class,to,test,for,support,return,code,true,if,supported,code,false,otherwise;protected,abstract,boolean,supports,class,clazz
AbstractHttpMessageConverter -> protected abstract boolean supports(Class<?> clazz)_;1496259743;Indicates whether the given class is supported by this converter._@param clazz the class to test for support_@return {@code true} if supported_ {@code false} otherwise;protected abstract boolean supports(Class<?> clazz)_;indicates,whether,the,given,class,is,supported,by,this,converter,param,clazz,the,class,to,test,for,support,return,code,true,if,supported,code,false,otherwise;protected,abstract,boolean,supports,class,clazz
AbstractHttpMessageConverter -> protected abstract boolean supports(Class<?> clazz)_;1496837955;Indicates whether the given class is supported by this converter._@param clazz the class to test for support_@return {@code true} if supported_ {@code false} otherwise;protected abstract boolean supports(Class<?> clazz)_;indicates,whether,the,given,class,is,supported,by,this,converter,param,clazz,the,class,to,test,for,support,return,code,true,if,supported,code,false,otherwise;protected,abstract,boolean,supports,class,clazz
AbstractHttpMessageConverter -> protected abstract boolean supports(Class<?> clazz)_;1500448076;Indicates whether the given class is supported by this converter._@param clazz the class to test for support_@return {@code true} if supported_ {@code false} otherwise;protected abstract boolean supports(Class<?> clazz)_;indicates,whether,the,given,class,is,supported,by,this,converter,param,clazz,the,class,to,test,for,support,return,code,true,if,supported,code,false,otherwise;protected,abstract,boolean,supports,class,clazz
AbstractHttpMessageConverter -> protected abstract boolean supports(Class<?> clazz)_;1500457438;Indicates whether the given class is supported by this converter._@param clazz the class to test for support_@return {@code true} if supported_ {@code false} otherwise;protected abstract boolean supports(Class<?> clazz)_;indicates,whether,the,given,class,is,supported,by,this,converter,param,clazz,the,class,to,test,for,support,return,code,true,if,supported,code,false,otherwise;protected,abstract,boolean,supports,class,clazz
AbstractHttpMessageConverter -> protected abstract boolean supports(Class<?> clazz)_;1520890308;Indicates whether the given class is supported by this converter._@param clazz the class to test for support_@return {@code true} if supported_ {@code false} otherwise;protected abstract boolean supports(Class<?> clazz)_;indicates,whether,the,given,class,is,supported,by,this,converter,param,clazz,the,class,to,test,for,support,return,code,true,if,supported,code,false,otherwise;protected,abstract,boolean,supports,class,clazz
AbstractHttpMessageConverter -> protected abstract boolean supports(Class<?> clazz)_;1530174524;Indicates whether the given class is supported by this converter._@param clazz the class to test for support_@return {@code true} if supported_ {@code false} otherwise;protected abstract boolean supports(Class<?> clazz)_;indicates,whether,the,given,class,is,supported,by,this,converter,param,clazz,the,class,to,test,for,support,return,code,true,if,supported,code,false,otherwise;protected,abstract,boolean,supports,class,clazz
AbstractHttpMessageConverter -> protected abstract boolean supports(Class<?> clazz)_;1530563849;Indicates whether the given class is supported by this converter._@param clazz the class to test for support_@return {@code true} if supported_ {@code false} otherwise;protected abstract boolean supports(Class<?> clazz)_;indicates,whether,the,given,class,is,supported,by,this,converter,param,clazz,the,class,to,test,for,support,return,code,true,if,supported,code,false,otherwise;protected,abstract,boolean,supports,class,clazz
AbstractHttpMessageConverter -> protected abstract boolean supports(Class<?> clazz)_;1530975243;Indicates whether the given class is supported by this converter._@param clazz the class to test for support_@return {@code true} if supported_ {@code false} otherwise;protected abstract boolean supports(Class<?> clazz)_;indicates,whether,the,given,class,is,supported,by,this,converter,param,clazz,the,class,to,test,for,support,return,code,true,if,supported,code,false,otherwise;protected,abstract,boolean,supports,class,clazz
AbstractHttpMessageConverter -> protected abstract boolean supports(Class<?> clazz)_;1531942370;Indicates whether the given class is supported by this converter._@param clazz the class to test for support_@return {@code true} if supported_ {@code false} otherwise;protected abstract boolean supports(Class<?> clazz)_;indicates,whether,the,given,class,is,supported,by,this,converter,param,clazz,the,class,to,test,for,support,return,code,true,if,supported,code,false,otherwise;protected,abstract,boolean,supports,class,clazz
AbstractHttpMessageConverter -> protected abstract boolean supports(Class<?> clazz)_;1546457570;Indicates whether the given class is supported by this converter._@param clazz the class to test for support_@return {@code true} if supported_ {@code false} otherwise;protected abstract boolean supports(Class<?> clazz)_;indicates,whether,the,given,class,is,supported,by,this,converter,param,clazz,the,class,to,test,for,support,return,code,true,if,supported,code,false,otherwise;protected,abstract,boolean,supports,class,clazz
AbstractHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType);1496242568;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType) {_		return supports(clazz) && canRead(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,read,class,clazz,nullable,media,type,media,type,return,supports,clazz,can,read,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType);1496259743;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType) {_		return supports(clazz) && canRead(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,read,class,clazz,nullable,media,type,media,type,return,supports,clazz,can,read,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType);1496837955;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType) {_		return supports(clazz) && canRead(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,read,class,clazz,nullable,media,type,media,type,return,supports,clazz,can,read,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType);1500448076;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType) {_		return supports(clazz) && canRead(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,read,class,clazz,nullable,media,type,media,type,return,supports,clazz,can,read,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType);1500457438;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType) {_		return supports(clazz) && canRead(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,read,class,clazz,nullable,media,type,media,type,return,supports,clazz,can,read,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType);1520890308;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType) {_		return supports(clazz) && canRead(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,read,class,clazz,nullable,media,type,media,type,return,supports,clazz,can,read,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType);1530174524;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType) {_		return supports(clazz) && canRead(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,read,class,clazz,nullable,media,type,media,type,return,supports,clazz,can,read,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType);1530563849;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType) {_		return supports(clazz) && canRead(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,read,class,clazz,nullable,media,type,media,type,return,supports,clazz,can,read,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType);1530975243;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType) {_		return supports(clazz) && canRead(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,read,class,clazz,nullable,media,type,media,type,return,supports,clazz,can,read,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType);1531942370;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType) {_		return supports(clazz) && canRead(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,read,class,clazz,nullable,media,type,media,type,return,supports,clazz,can,read,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType);1546457570;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType) {_		return supports(clazz) && canRead(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,read,class,clazz,nullable,media,type,media,type,return,supports,clazz,can,read,media,type
AbstractHttpMessageConverter -> @Override 	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException;1356735495;This implementation simple delegates to {@link #readInternal(Class, HttpInputMessage)}._Future implementations might add some default behavior, however.;@Override_	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException {_		return readInternal(clazz, inputMessage)__	};this,implementation,simple,delegates,to,link,read,internal,class,http,input,message,future,implementations,might,add,some,default,behavior,however;override,public,final,t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,return,read,internal,clazz,input,message
AbstractHttpMessageConverter -> @Override 	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException;1368482696;This implementation simple delegates to {@link #readInternal(Class, HttpInputMessage)}._Future implementations might add some default behavior, however.;@Override_	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException {_		return readInternal(clazz, inputMessage)__	};this,implementation,simple,delegates,to,link,read,internal,class,http,input,message,future,implementations,might,add,some,default,behavior,however;override,public,final,t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,return,read,internal,clazz,input,message
AbstractHttpMessageConverter -> @Override 	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException;1374115410;This implementation simple delegates to {@link #readInternal(Class, HttpInputMessage)}._Future implementations might add some default behavior, however.;@Override_	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException {_		return readInternal(clazz, inputMessage)__	};this,implementation,simple,delegates,to,link,read,internal,class,http,input,message,future,implementations,might,add,some,default,behavior,however;override,public,final,t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,return,read,internal,clazz,input,message
AbstractHttpMessageConverter -> @Override 	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException;1375461043;This implementation simple delegates to {@link #readInternal(Class, HttpInputMessage)}._Future implementations might add some default behavior, however.;@Override_	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException {_		return readInternal(clazz, inputMessage)__	};this,implementation,simple,delegates,to,link,read,internal,class,http,input,message,future,implementations,might,add,some,default,behavior,however;override,public,final,t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,return,read,internal,clazz,input,message
AbstractHttpMessageConverter -> @Override 	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException;1397767187;This implementation simple delegates to {@link #readInternal(Class, HttpInputMessage)}._Future implementations might add some default behavior, however.;@Override_	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException {_		return readInternal(clazz, inputMessage)__	};this,implementation,simple,delegates,to,link,read,internal,class,http,input,message,future,implementations,might,add,some,default,behavior,however;override,public,final,t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,return,read,internal,clazz,input,message
AbstractHttpMessageConverter -> @Override 	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException;1428949885;This implementation simple delegates to {@link #readInternal(Class, HttpInputMessage)}._Future implementations might add some default behavior, however.;@Override_	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException {_		return readInternal(clazz, inputMessage)__	};this,implementation,simple,delegates,to,link,read,internal,class,http,input,message,future,implementations,might,add,some,default,behavior,however;override,public,final,t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,return,read,internal,clazz,input,message
AbstractHttpMessageConverter -> @Override 	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException;1434985545;This implementation simple delegates to {@link #readInternal(Class, HttpInputMessage)}._Future implementations might add some default behavior, however.;@Override_	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException {_		return readInternal(clazz, inputMessage)__	};this,implementation,simple,delegates,to,link,read,internal,class,http,input,message,future,implementations,might,add,some,default,behavior,however;override,public,final,t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,return,read,internal,clazz,input,message
AbstractHttpMessageConverter -> @Override 	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException;1438251419;This implementation simple delegates to {@link #readInternal(Class, HttpInputMessage)}._Future implementations might add some default behavior, however.;@Override_	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException {_		return readInternal(clazz, inputMessage)__	};this,implementation,simple,delegates,to,link,read,internal,class,http,input,message,future,implementations,might,add,some,default,behavior,however;override,public,final,t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,return,read,internal,clazz,input,message
AbstractHttpMessageConverter -> @Override 	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException;1444408470;This implementation simple delegates to {@link #readInternal(Class, HttpInputMessage)}._Future implementations might add some default behavior, however.;@Override_	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException {_		return readInternal(clazz, inputMessage)__	};this,implementation,simple,delegates,to,link,read,internal,class,http,input,message,future,implementations,might,add,some,default,behavior,however;override,public,final,t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,return,read,internal,clazz,input,message
AbstractHttpMessageConverter -> @Override 	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException;1455225853;This implementation simple delegates to {@link #readInternal(Class, HttpInputMessage)}._Future implementations might add some default behavior, however.;@Override_	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException {_		return readInternal(clazz, inputMessage)__	};this,implementation,simple,delegates,to,link,read,internal,class,http,input,message,future,implementations,might,add,some,default,behavior,however;override,public,final,t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,return,read,internal,clazz,input,message
AbstractHttpMessageConverter -> @Override 	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException;1456785272;This implementation simple delegates to {@link #readInternal(Class, HttpInputMessage)}._Future implementations might add some default behavior, however.;@Override_	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException {_		return readInternal(clazz, inputMessage)__	};this,implementation,simple,delegates,to,link,read,internal,class,http,input,message,future,implementations,might,add,some,default,behavior,however;override,public,final,t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,return,read,internal,clazz,input,message
AbstractHttpMessageConverter -> @Override 	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException;1458754769;This implementation simple delegates to {@link #readInternal(Class, HttpInputMessage)}._Future implementations might add some default behavior, however.;@Override_	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException {_		return readInternal(clazz, inputMessage)__	};this,implementation,simple,delegates,to,link,read,internal,class,http,input,message,future,implementations,might,add,some,default,behavior,however;override,public,final,t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,return,read,internal,clazz,input,message
AbstractHttpMessageConverter -> @Override 	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException;1460565262;This implementation simple delegates to {@link #readInternal(Class, HttpInputMessage)}._Future implementations might add some default behavior, however.;@Override_	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException {_		return readInternal(clazz, inputMessage)__	};this,implementation,simple,delegates,to,link,read,internal,class,http,input,message,future,implementations,might,add,some,default,behavior,however;override,public,final,t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,return,read,internal,clazz,input,message
AbstractHttpMessageConverter -> @Override 	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException;1460644739;This implementation simple delegates to {@link #readInternal(Class, HttpInputMessage)}._Future implementations might add some default behavior, however.;@Override_	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException {_		return readInternal(clazz, inputMessage)__	};this,implementation,simple,delegates,to,link,read,internal,class,http,input,message,future,implementations,might,add,some,default,behavior,however;override,public,final,t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,return,read,internal,clazz,input,message
AbstractHttpMessageConverter -> @Override 	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException;1465387124;This implementation simple delegates to {@link #readInternal(Class, HttpInputMessage)}._Future implementations might add some default behavior, however.;@Override_	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException {_		return readInternal(clazz, inputMessage)__	};this,implementation,simple,delegates,to,link,read,internal,class,http,input,message,future,implementations,might,add,some,default,behavior,however;override,public,final,t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,return,read,internal,clazz,input,message
AbstractHttpMessageConverter -> @Override 	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException;1467730834;This implementation simple delegates to {@link #readInternal(Class, HttpInputMessage)}._Future implementations might add some default behavior, however.;@Override_	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException {_		return readInternal(clazz, inputMessage)__	};this,implementation,simple,delegates,to,link,read,internal,class,http,input,message,future,implementations,might,add,some,default,behavior,however;override,public,final,t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,return,read,internal,clazz,input,message
AbstractHttpMessageConverter -> @Override 	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException;1486062070;This implementation simple delegates to {@link #readInternal(Class, HttpInputMessage)}._Future implementations might add some default behavior, however.;@Override_	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException {_		return readInternal(clazz, inputMessage)__	};this,implementation,simple,delegates,to,link,read,internal,class,http,input,message,future,implementations,might,add,some,default,behavior,however;override,public,final,t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,return,read,internal,clazz,input,message
AbstractHttpMessageConverter -> @Override 	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException;1495868221;This implementation simple delegates to {@link #readInternal(Class, HttpInputMessage)}._Future implementations might add some default behavior, however.;@Override_	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException {_		return readInternal(clazz, inputMessage)__	};this,implementation,simple,delegates,to,link,read,internal,class,http,input,message,future,implementations,might,add,some,default,behavior,however;override,public,final,t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,return,read,internal,clazz,input,message
AbstractHttpMessageConverter -> @Override 	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException;1496242568;This implementation simple delegates to {@link #readInternal(Class, HttpInputMessage)}._Future implementations might add some default behavior, however.;@Override_	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException {_		return readInternal(clazz, inputMessage)__	};this,implementation,simple,delegates,to,link,read,internal,class,http,input,message,future,implementations,might,add,some,default,behavior,however;override,public,final,t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,return,read,internal,clazz,input,message
AbstractHttpMessageConverter -> @Override 	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException;1496837955;This implementation simple delegates to {@link #readInternal(Class, HttpInputMessage)}._Future implementations might add some default behavior, however.;@Override_	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException {_		return readInternal(clazz, inputMessage)__	};this,implementation,simple,delegates,to,link,read,internal,class,http,input,message,future,implementations,might,add,some,default,behavior,however;override,public,final,t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,return,read,internal,clazz,input,message
AbstractHttpMessageConverter -> @Override 	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException;1500448076;This implementation simple delegates to {@link #readInternal(Class, HttpInputMessage)}._Future implementations might add some default behavior, however.;@Override_	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException {_		return readInternal(clazz, inputMessage)__	};this,implementation,simple,delegates,to,link,read,internal,class,http,input,message,future,implementations,might,add,some,default,behavior,however;override,public,final,t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,return,read,internal,clazz,input,message
AbstractHttpMessageConverter -> @Override 	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException;1500457438;This implementation simple delegates to {@link #readInternal(Class, HttpInputMessage)}._Future implementations might add some default behavior, however.;@Override_	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException {_		return readInternal(clazz, inputMessage)__	};this,implementation,simple,delegates,to,link,read,internal,class,http,input,message,future,implementations,might,add,some,default,behavior,however;override,public,final,t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,return,read,internal,clazz,input,message
AbstractHttpMessageConverter -> @Override 	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException;1520890308;This implementation simple delegates to {@link #readInternal(Class, HttpInputMessage)}._Future implementations might add some default behavior, however.;@Override_	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException {_		return readInternal(clazz, inputMessage)__	};this,implementation,simple,delegates,to,link,read,internal,class,http,input,message,future,implementations,might,add,some,default,behavior,however;override,public,final,t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,return,read,internal,clazz,input,message
AbstractHttpMessageConverter -> @Override 	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException;1530174524;This implementation simple delegates to {@link #readInternal(Class, HttpInputMessage)}._Future implementations might add some default behavior, however.;@Override_	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException {_		return readInternal(clazz, inputMessage)__	};this,implementation,simple,delegates,to,link,read,internal,class,http,input,message,future,implementations,might,add,some,default,behavior,however;override,public,final,t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,return,read,internal,clazz,input,message
AbstractHttpMessageConverter -> public Charset getDefaultCharset();1460565262;Return the default character set, if any._@since 4.3;public Charset getDefaultCharset() {_		return this.defaultCharset__	};return,the,default,character,set,if,any,since,4,3;public,charset,get,default,charset,return,this,default,charset
AbstractHttpMessageConverter -> public Charset getDefaultCharset();1460644739;Return the default character set, if any._@since 4.3;public Charset getDefaultCharset() {_		return this.defaultCharset__	};return,the,default,character,set,if,any,since,4,3;public,charset,get,default,charset,return,this,default,charset
AbstractHttpMessageConverter -> public Charset getDefaultCharset();1465387124;Return the default character set, if any._@since 4.3;public Charset getDefaultCharset() {_		return this.defaultCharset__	};return,the,default,character,set,if,any,since,4,3;public,charset,get,default,charset,return,this,default,charset
AbstractHttpMessageConverter -> public Charset getDefaultCharset();1467730834;Return the default character set, if any._@since 4.3;public Charset getDefaultCharset() {_		return this.defaultCharset__	};return,the,default,character,set,if,any,since,4,3;public,charset,get,default,charset,return,this,default,charset
AbstractHttpMessageConverter -> public Charset getDefaultCharset();1486062070;Return the default character set, if any._@since 4.3;public Charset getDefaultCharset() {_		return this.defaultCharset__	};return,the,default,character,set,if,any,since,4,3;public,charset,get,default,charset,return,this,default,charset
AbstractHttpMessageConverter -> @Override 	public final void write(final T t, MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException;1374115410;This implementation delegates to {@link #getDefaultContentType(Object)} if a content_type was not provided, calls {@link #getContentLength}, and sets the corresponding headers_on the output message. It then calls {@link #writeInternal}.;@Override_	public final void write(final T t, MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException {__		final HttpHeaders headers = outputMessage.getHeaders()__		if (headers.getContentType() == null) {_			if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) {_				contentType = getDefaultContentType(t)__			}_			if (contentType != null) {_				headers.setContentType(contentType)__			}_		}_		if (headers.getContentLength() == -1) {_			Long contentLength = getContentLength(t, headers.getContentType())__			if (contentLength != null) {_				headers.setContentLength(contentLength)__			}_		}_		if (outputMessage instanceof StreamingHttpOutputMessage) {_			StreamingHttpOutputMessage streamingOutputMessage =_					(StreamingHttpOutputMessage) outputMessage___			streamingOutputMessage.setBody(new StreamingHttpOutputMessage.Body() {_				@Override_				public void writeTo(final OutputStream outputStream) throws IOException {_					writeInternal(t, new HttpOutputMessage() {_						@Override_						public OutputStream getBody() throws IOException {_							return outputStream__						}__						@Override_						public HttpHeaders getHeaders() {_							return headers__						}__						@Override_						public Cookies getCookies() {_							return null__						}_					})__				}_			})__		}_		else {_			writeInternal(t, outputMessage)__			outputMessage.getBody().flush()__		}_	};this,implementation,delegates,to,link,get,default,content,type,object,if,a,content,type,was,not,provided,calls,link,get,content,length,and,sets,the,corresponding,headers,on,the,output,message,it,then,calls,link,write,internal;override,public,final,void,write,final,t,t,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception,final,http,headers,headers,output,message,get,headers,if,headers,get,content,type,null,if,content,type,null,content,type,is,wildcard,type,content,type,is,wildcard,subtype,content,type,get,default,content,type,t,if,content,type,null,headers,set,content,type,content,type,if,headers,get,content,length,1,long,content,length,get,content,length,t,headers,get,content,type,if,content,length,null,headers,set,content,length,content,length,if,output,message,instanceof,streaming,http,output,message,streaming,http,output,message,streaming,output,message,streaming,http,output,message,output,message,streaming,output,message,set,body,new,streaming,http,output,message,body,override,public,void,write,to,final,output,stream,output,stream,throws,ioexception,write,internal,t,new,http,output,message,override,public,output,stream,get,body,throws,ioexception,return,output,stream,override,public,http,headers,get,headers,return,headers,override,public,cookies,get,cookies,return,null,else,write,internal,t,output,message,output,message,get,body,flush
AbstractHttpMessageConverter -> @Override 	public final void write(final T t, MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException;1375461043;This implementation delegates to {@link #getDefaultContentType(Object)} if a content_type was not provided, calls {@link #getContentLength}, and sets the corresponding headers_on the output message. It then calls {@link #writeInternal}.;@Override_	public final void write(final T t, MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException {__		final HttpHeaders headers = outputMessage.getHeaders()__		if (headers.getContentType() == null) {_			if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) {_				contentType = getDefaultContentType(t)__			}_			if (contentType != null) {_				headers.setContentType(contentType)__			}_		}_		if (headers.getContentLength() == -1) {_			Long contentLength = getContentLength(t, headers.getContentType())__			if (contentLength != null) {_				headers.setContentLength(contentLength)__			}_		}_		if (outputMessage instanceof StreamingHttpOutputMessage) {_			StreamingHttpOutputMessage streamingOutputMessage =_					(StreamingHttpOutputMessage) outputMessage___			streamingOutputMessage.setBody(new StreamingHttpOutputMessage.Body() {_				@Override_				public void writeTo(final OutputStream outputStream) throws IOException {_					writeInternal(t, new HttpOutputMessage() {_						@Override_						public OutputStream getBody() throws IOException {_							return outputStream__						}__						@Override_						public HttpHeaders getHeaders() {_							return headers__						}_					})__				}_			})__		}_		else {_			writeInternal(t, outputMessage)__			outputMessage.getBody().flush()__		}_	};this,implementation,delegates,to,link,get,default,content,type,object,if,a,content,type,was,not,provided,calls,link,get,content,length,and,sets,the,corresponding,headers,on,the,output,message,it,then,calls,link,write,internal;override,public,final,void,write,final,t,t,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception,final,http,headers,headers,output,message,get,headers,if,headers,get,content,type,null,if,content,type,null,content,type,is,wildcard,type,content,type,is,wildcard,subtype,content,type,get,default,content,type,t,if,content,type,null,headers,set,content,type,content,type,if,headers,get,content,length,1,long,content,length,get,content,length,t,headers,get,content,type,if,content,length,null,headers,set,content,length,content,length,if,output,message,instanceof,streaming,http,output,message,streaming,http,output,message,streaming,output,message,streaming,http,output,message,output,message,streaming,output,message,set,body,new,streaming,http,output,message,body,override,public,void,write,to,final,output,stream,output,stream,throws,ioexception,write,internal,t,new,http,output,message,override,public,output,stream,get,body,throws,ioexception,return,output,stream,override,public,http,headers,get,headers,return,headers,else,write,internal,t,output,message,output,message,get,body,flush
AbstractHttpMessageConverter -> @Override 	public final void write(final T t, MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException;1397767187;This implementation delegates to {@link #getDefaultContentType(Object)} if a content_type was not provided, calls {@link #getContentLength}, and sets the corresponding headers_on the output message. It then calls {@link #writeInternal}.;@Override_	public final void write(final T t, MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException {__		final HttpHeaders headers = outputMessage.getHeaders()__		if (headers.getContentType() == null) {_			MediaType contentTypeToUse = contentType__			if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) {_				contentTypeToUse = getDefaultContentType(t)__			}_			if (contentTypeToUse != null) {_				headers.setContentType(contentTypeToUse)__			}_		}_		if (headers.getContentLength() == -1) {_			Long contentLength = getContentLength(t, headers.getContentType())__			if (contentLength != null) {_				headers.setContentLength(contentLength)__			}_		}__		if (outputMessage instanceof StreamingHttpOutputMessage) {_			StreamingHttpOutputMessage streamingOutputMessage =_					(StreamingHttpOutputMessage) outputMessage__			streamingOutputMessage.setBody(new StreamingHttpOutputMessage.Body() {_				@Override_				public void writeTo(final OutputStream outputStream) throws IOException {_					writeInternal(t, new HttpOutputMessage() {_						@Override_						public OutputStream getBody() throws IOException {_							return outputStream__						}_						@Override_						public HttpHeaders getHeaders() {_							return headers__						}_					})__				}_			})__		}_		else {_			writeInternal(t, outputMessage)__			outputMessage.getBody().flush()__		}_	};this,implementation,delegates,to,link,get,default,content,type,object,if,a,content,type,was,not,provided,calls,link,get,content,length,and,sets,the,corresponding,headers,on,the,output,message,it,then,calls,link,write,internal;override,public,final,void,write,final,t,t,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception,final,http,headers,headers,output,message,get,headers,if,headers,get,content,type,null,media,type,content,type,to,use,content,type,if,content,type,null,content,type,is,wildcard,type,content,type,is,wildcard,subtype,content,type,to,use,get,default,content,type,t,if,content,type,to,use,null,headers,set,content,type,content,type,to,use,if,headers,get,content,length,1,long,content,length,get,content,length,t,headers,get,content,type,if,content,length,null,headers,set,content,length,content,length,if,output,message,instanceof,streaming,http,output,message,streaming,http,output,message,streaming,output,message,streaming,http,output,message,output,message,streaming,output,message,set,body,new,streaming,http,output,message,body,override,public,void,write,to,final,output,stream,output,stream,throws,ioexception,write,internal,t,new,http,output,message,override,public,output,stream,get,body,throws,ioexception,return,output,stream,override,public,http,headers,get,headers,return,headers,else,write,internal,t,output,message,output,message,get,body,flush
AbstractHttpMessageConverter -> @Override 	public final void write(final T t, MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException;1428949885;This implementation delegates to {@link #getDefaultContentType(Object)} if a content_type was not provided, calls {@link #getContentLength}, and sets the corresponding headers_on the output message. It then calls {@link #writeInternal}.;@Override_	public final void write(final T t, MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException {__		final HttpHeaders headers = outputMessage.getHeaders()__		if (headers.getContentType() == null) {_			MediaType contentTypeToUse = contentType__			if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) {_				contentTypeToUse = getDefaultContentType(t)__			}_			else if (MediaType.APPLICATION_OCTET_STREAM.equals(contentType)) {_				MediaType type = getDefaultContentType(t)__				contentTypeToUse = (type != null ? type : contentTypeToUse)__			}_			if (contentTypeToUse != null) {_				headers.setContentType(contentTypeToUse)__			}_		}_		if (headers.getContentLength() == -1) {_			Long contentLength = getContentLength(t, headers.getContentType())__			if (contentLength != null) {_				headers.setContentLength(contentLength)__			}_		}__		if (outputMessage instanceof StreamingHttpOutputMessage) {_			StreamingHttpOutputMessage streamingOutputMessage =_					(StreamingHttpOutputMessage) outputMessage__			streamingOutputMessage.setBody(new StreamingHttpOutputMessage.Body() {_				@Override_				public void writeTo(final OutputStream outputStream) throws IOException {_					writeInternal(t, new HttpOutputMessage() {_						@Override_						public OutputStream getBody() throws IOException {_							return outputStream__						}_						@Override_						public HttpHeaders getHeaders() {_							return headers__						}_					})__				}_			})__		}_		else {_			writeInternal(t, outputMessage)__			outputMessage.getBody().flush()__		}_	};this,implementation,delegates,to,link,get,default,content,type,object,if,a,content,type,was,not,provided,calls,link,get,content,length,and,sets,the,corresponding,headers,on,the,output,message,it,then,calls,link,write,internal;override,public,final,void,write,final,t,t,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception,final,http,headers,headers,output,message,get,headers,if,headers,get,content,type,null,media,type,content,type,to,use,content,type,if,content,type,null,content,type,is,wildcard,type,content,type,is,wildcard,subtype,content,type,to,use,get,default,content,type,t,else,if,media,type,equals,content,type,media,type,type,get,default,content,type,t,content,type,to,use,type,null,type,content,type,to,use,if,content,type,to,use,null,headers,set,content,type,content,type,to,use,if,headers,get,content,length,1,long,content,length,get,content,length,t,headers,get,content,type,if,content,length,null,headers,set,content,length,content,length,if,output,message,instanceof,streaming,http,output,message,streaming,http,output,message,streaming,output,message,streaming,http,output,message,output,message,streaming,output,message,set,body,new,streaming,http,output,message,body,override,public,void,write,to,final,output,stream,output,stream,throws,ioexception,write,internal,t,new,http,output,message,override,public,output,stream,get,body,throws,ioexception,return,output,stream,override,public,http,headers,get,headers,return,headers,else,write,internal,t,output,message,output,message,get,body,flush
AbstractHttpMessageConverter -> @Override 	public final void write(final T t, MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException;1434985545;This implementation sets the default headers by calling {@link #addDefaultHeaders},_and then calls {@link #writeInternal}.;@Override_	public final void write(final T t, MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException {__		final HttpHeaders headers = outputMessage.getHeaders()__		addDefaultHeaders(headers, t, contentType)___		if (outputMessage instanceof StreamingHttpOutputMessage) {_			StreamingHttpOutputMessage streamingOutputMessage =_					(StreamingHttpOutputMessage) outputMessage__			streamingOutputMessage.setBody(new StreamingHttpOutputMessage.Body() {_				@Override_				public void writeTo(final OutputStream outputStream) throws IOException {_					writeInternal(t, new HttpOutputMessage() {_						@Override_						public OutputStream getBody() throws IOException {_							return outputStream__						}_						@Override_						public HttpHeaders getHeaders() {_							return headers__						}_					})__				}_			})__		}_		else {_			writeInternal(t, outputMessage)__			outputMessage.getBody().flush()__		}_	};this,implementation,sets,the,default,headers,by,calling,link,add,default,headers,and,then,calls,link,write,internal;override,public,final,void,write,final,t,t,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception,final,http,headers,headers,output,message,get,headers,add,default,headers,headers,t,content,type,if,output,message,instanceof,streaming,http,output,message,streaming,http,output,message,streaming,output,message,streaming,http,output,message,output,message,streaming,output,message,set,body,new,streaming,http,output,message,body,override,public,void,write,to,final,output,stream,output,stream,throws,ioexception,write,internal,t,new,http,output,message,override,public,output,stream,get,body,throws,ioexception,return,output,stream,override,public,http,headers,get,headers,return,headers,else,write,internal,t,output,message,output,message,get,body,flush
AbstractHttpMessageConverter -> @Override 	public final void write(final T t, MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException;1438251419;This implementation sets the default headers by calling {@link #addDefaultHeaders},_and then calls {@link #writeInternal}.;@Override_	public final void write(final T t, MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException {__		final HttpHeaders headers = outputMessage.getHeaders()__		addDefaultHeaders(headers, t, contentType)___		if (outputMessage instanceof StreamingHttpOutputMessage) {_			StreamingHttpOutputMessage streamingOutputMessage =_					(StreamingHttpOutputMessage) outputMessage__			streamingOutputMessage.setBody(new StreamingHttpOutputMessage.Body() {_				@Override_				public void writeTo(final OutputStream outputStream) throws IOException {_					writeInternal(t, new HttpOutputMessage() {_						@Override_						public OutputStream getBody() throws IOException {_							return outputStream__						}_						@Override_						public HttpHeaders getHeaders() {_							return headers__						}_					})__				}_			})__		}_		else {_			writeInternal(t, outputMessage)__			outputMessage.getBody().flush()__		}_	};this,implementation,sets,the,default,headers,by,calling,link,add,default,headers,and,then,calls,link,write,internal;override,public,final,void,write,final,t,t,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception,final,http,headers,headers,output,message,get,headers,add,default,headers,headers,t,content,type,if,output,message,instanceof,streaming,http,output,message,streaming,http,output,message,streaming,output,message,streaming,http,output,message,output,message,streaming,output,message,set,body,new,streaming,http,output,message,body,override,public,void,write,to,final,output,stream,output,stream,throws,ioexception,write,internal,t,new,http,output,message,override,public,output,stream,get,body,throws,ioexception,return,output,stream,override,public,http,headers,get,headers,return,headers,else,write,internal,t,output,message,output,message,get,body,flush
AbstractHttpMessageConverter -> @Override 	public final void write(final T t, MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException;1444408470;This implementation sets the default headers by calling {@link #addDefaultHeaders},_and then calls {@link #writeInternal}.;@Override_	public final void write(final T t, MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException {__		final HttpHeaders headers = outputMessage.getHeaders()__		addDefaultHeaders(headers, t, contentType)___		if (outputMessage instanceof StreamingHttpOutputMessage) {_			StreamingHttpOutputMessage streamingOutputMessage =_					(StreamingHttpOutputMessage) outputMessage__			streamingOutputMessage.setBody(new StreamingHttpOutputMessage.Body() {_				@Override_				public void writeTo(final OutputStream outputStream) throws IOException {_					writeInternal(t, new HttpOutputMessage() {_						@Override_						public OutputStream getBody() throws IOException {_							return outputStream__						}_						@Override_						public HttpHeaders getHeaders() {_							return headers__						}_					})__				}_			})__		}_		else {_			writeInternal(t, outputMessage)__			outputMessage.getBody().flush()__		}_	};this,implementation,sets,the,default,headers,by,calling,link,add,default,headers,and,then,calls,link,write,internal;override,public,final,void,write,final,t,t,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception,final,http,headers,headers,output,message,get,headers,add,default,headers,headers,t,content,type,if,output,message,instanceof,streaming,http,output,message,streaming,http,output,message,streaming,output,message,streaming,http,output,message,output,message,streaming,output,message,set,body,new,streaming,http,output,message,body,override,public,void,write,to,final,output,stream,output,stream,throws,ioexception,write,internal,t,new,http,output,message,override,public,output,stream,get,body,throws,ioexception,return,output,stream,override,public,http,headers,get,headers,return,headers,else,write,internal,t,output,message,output,message,get,body,flush
AbstractHttpMessageConverter -> @Override 	public final void write(final T t, MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException;1455225853;This implementation sets the default headers by calling {@link #addDefaultHeaders},_and then calls {@link #writeInternal}.;@Override_	public final void write(final T t, MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException {__		final HttpHeaders headers = outputMessage.getHeaders()__		addDefaultHeaders(headers, t, contentType)___		if (outputMessage instanceof StreamingHttpOutputMessage) {_			StreamingHttpOutputMessage streamingOutputMessage =_					(StreamingHttpOutputMessage) outputMessage__			streamingOutputMessage.setBody(new StreamingHttpOutputMessage.Body() {_				@Override_				public void writeTo(final OutputStream outputStream) throws IOException {_					writeInternal(t, new HttpOutputMessage() {_						@Override_						public OutputStream getBody() throws IOException {_							return outputStream__						}_						@Override_						public HttpHeaders getHeaders() {_							return headers__						}_					})__				}_			})__		}_		else {_			writeInternal(t, outputMessage)__			outputMessage.getBody().flush()__		}_	};this,implementation,sets,the,default,headers,by,calling,link,add,default,headers,and,then,calls,link,write,internal;override,public,final,void,write,final,t,t,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception,final,http,headers,headers,output,message,get,headers,add,default,headers,headers,t,content,type,if,output,message,instanceof,streaming,http,output,message,streaming,http,output,message,streaming,output,message,streaming,http,output,message,output,message,streaming,output,message,set,body,new,streaming,http,output,message,body,override,public,void,write,to,final,output,stream,output,stream,throws,ioexception,write,internal,t,new,http,output,message,override,public,output,stream,get,body,throws,ioexception,return,output,stream,override,public,http,headers,get,headers,return,headers,else,write,internal,t,output,message,output,message,get,body,flush
AbstractHttpMessageConverter -> @Override 	public final void write(final T t, MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException;1456785272;This implementation sets the default headers by calling {@link #addDefaultHeaders},_and then calls {@link #writeInternal}.;@Override_	public final void write(final T t, MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException {__		final HttpHeaders headers = outputMessage.getHeaders()__		addDefaultHeaders(headers, t, contentType)___		if (outputMessage instanceof StreamingHttpOutputMessage) {_			StreamingHttpOutputMessage streamingOutputMessage =_					(StreamingHttpOutputMessage) outputMessage__			streamingOutputMessage.setBody(new StreamingHttpOutputMessage.Body() {_				@Override_				public void writeTo(final OutputStream outputStream) throws IOException {_					writeInternal(t, new HttpOutputMessage() {_						@Override_						public OutputStream getBody() throws IOException {_							return outputStream__						}_						@Override_						public HttpHeaders getHeaders() {_							return headers__						}_					})__				}_			})__		}_		else {_			writeInternal(t, outputMessage)__			outputMessage.getBody().flush()__		}_	};this,implementation,sets,the,default,headers,by,calling,link,add,default,headers,and,then,calls,link,write,internal;override,public,final,void,write,final,t,t,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception,final,http,headers,headers,output,message,get,headers,add,default,headers,headers,t,content,type,if,output,message,instanceof,streaming,http,output,message,streaming,http,output,message,streaming,output,message,streaming,http,output,message,output,message,streaming,output,message,set,body,new,streaming,http,output,message,body,override,public,void,write,to,final,output,stream,output,stream,throws,ioexception,write,internal,t,new,http,output,message,override,public,output,stream,get,body,throws,ioexception,return,output,stream,override,public,http,headers,get,headers,return,headers,else,write,internal,t,output,message,output,message,get,body,flush
AbstractHttpMessageConverter -> @Override 	public final void write(final T t, MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException;1458754769;This implementation sets the default headers by calling {@link #addDefaultHeaders},_and then calls {@link #writeInternal}.;@Override_	public final void write(final T t, MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException {__		final HttpHeaders headers = outputMessage.getHeaders()__		addDefaultHeaders(headers, t, contentType)___		if (outputMessage instanceof StreamingHttpOutputMessage) {_			StreamingHttpOutputMessage streamingOutputMessage =_					(StreamingHttpOutputMessage) outputMessage__			streamingOutputMessage.setBody(new StreamingHttpOutputMessage.Body() {_				@Override_				public void writeTo(final OutputStream outputStream) throws IOException {_					writeInternal(t, new HttpOutputMessage() {_						@Override_						public OutputStream getBody() throws IOException {_							return outputStream__						}_						@Override_						public HttpHeaders getHeaders() {_							return headers__						}_					})__				}_			})__		}_		else {_			writeInternal(t, outputMessage)__			outputMessage.getBody().flush()__		}_	};this,implementation,sets,the,default,headers,by,calling,link,add,default,headers,and,then,calls,link,write,internal;override,public,final,void,write,final,t,t,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception,final,http,headers,headers,output,message,get,headers,add,default,headers,headers,t,content,type,if,output,message,instanceof,streaming,http,output,message,streaming,http,output,message,streaming,output,message,streaming,http,output,message,output,message,streaming,output,message,set,body,new,streaming,http,output,message,body,override,public,void,write,to,final,output,stream,output,stream,throws,ioexception,write,internal,t,new,http,output,message,override,public,output,stream,get,body,throws,ioexception,return,output,stream,override,public,http,headers,get,headers,return,headers,else,write,internal,t,output,message,output,message,get,body,flush
AbstractHttpMessageConverter -> @Override 	public final void write(final T t, MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException;1460565262;This implementation sets the default headers by calling {@link #addDefaultHeaders},_and then calls {@link #writeInternal}.;@Override_	public final void write(final T t, MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException {__		final HttpHeaders headers = outputMessage.getHeaders()__		addDefaultHeaders(headers, t, contentType)___		if (outputMessage instanceof StreamingHttpOutputMessage) {_			StreamingHttpOutputMessage streamingOutputMessage =_					(StreamingHttpOutputMessage) outputMessage__			streamingOutputMessage.setBody(new StreamingHttpOutputMessage.Body() {_				@Override_				public void writeTo(final OutputStream outputStream) throws IOException {_					writeInternal(t, new HttpOutputMessage() {_						@Override_						public OutputStream getBody() throws IOException {_							return outputStream__						}_						@Override_						public HttpHeaders getHeaders() {_							return headers__						}_					})__				}_			})__		}_		else {_			writeInternal(t, outputMessage)__			outputMessage.getBody().flush()__		}_	};this,implementation,sets,the,default,headers,by,calling,link,add,default,headers,and,then,calls,link,write,internal;override,public,final,void,write,final,t,t,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception,final,http,headers,headers,output,message,get,headers,add,default,headers,headers,t,content,type,if,output,message,instanceof,streaming,http,output,message,streaming,http,output,message,streaming,output,message,streaming,http,output,message,output,message,streaming,output,message,set,body,new,streaming,http,output,message,body,override,public,void,write,to,final,output,stream,output,stream,throws,ioexception,write,internal,t,new,http,output,message,override,public,output,stream,get,body,throws,ioexception,return,output,stream,override,public,http,headers,get,headers,return,headers,else,write,internal,t,output,message,output,message,get,body,flush
AbstractHttpMessageConverter -> @Override 	public final void write(final T t, MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException;1460644739;This implementation sets the default headers by calling {@link #addDefaultHeaders},_and then calls {@link #writeInternal}.;@Override_	public final void write(final T t, MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException {__		final HttpHeaders headers = outputMessage.getHeaders()__		addDefaultHeaders(headers, t, contentType)___		if (outputMessage instanceof StreamingHttpOutputMessage) {_			StreamingHttpOutputMessage streamingOutputMessage =_					(StreamingHttpOutputMessage) outputMessage__			streamingOutputMessage.setBody(new StreamingHttpOutputMessage.Body() {_				@Override_				public void writeTo(final OutputStream outputStream) throws IOException {_					writeInternal(t, new HttpOutputMessage() {_						@Override_						public OutputStream getBody() throws IOException {_							return outputStream__						}_						@Override_						public HttpHeaders getHeaders() {_							return headers__						}_					})__				}_			})__		}_		else {_			writeInternal(t, outputMessage)__			outputMessage.getBody().flush()__		}_	};this,implementation,sets,the,default,headers,by,calling,link,add,default,headers,and,then,calls,link,write,internal;override,public,final,void,write,final,t,t,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception,final,http,headers,headers,output,message,get,headers,add,default,headers,headers,t,content,type,if,output,message,instanceof,streaming,http,output,message,streaming,http,output,message,streaming,output,message,streaming,http,output,message,output,message,streaming,output,message,set,body,new,streaming,http,output,message,body,override,public,void,write,to,final,output,stream,output,stream,throws,ioexception,write,internal,t,new,http,output,message,override,public,output,stream,get,body,throws,ioexception,return,output,stream,override,public,http,headers,get,headers,return,headers,else,write,internal,t,output,message,output,message,get,body,flush
AbstractHttpMessageConverter -> @Override 	public final void write(final T t, MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException;1465387124;This implementation sets the default headers by calling {@link #addDefaultHeaders},_and then calls {@link #writeInternal}.;@Override_	public final void write(final T t, MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException {__		final HttpHeaders headers = outputMessage.getHeaders()__		addDefaultHeaders(headers, t, contentType)___		if (outputMessage instanceof StreamingHttpOutputMessage) {_			StreamingHttpOutputMessage streamingOutputMessage =_					(StreamingHttpOutputMessage) outputMessage__			streamingOutputMessage.setBody(new StreamingHttpOutputMessage.Body() {_				@Override_				public void writeTo(final OutputStream outputStream) throws IOException {_					writeInternal(t, new HttpOutputMessage() {_						@Override_						public OutputStream getBody() throws IOException {_							return outputStream__						}_						@Override_						public HttpHeaders getHeaders() {_							return headers__						}_					})__				}_			})__		}_		else {_			writeInternal(t, outputMessage)__			outputMessage.getBody().flush()__		}_	};this,implementation,sets,the,default,headers,by,calling,link,add,default,headers,and,then,calls,link,write,internal;override,public,final,void,write,final,t,t,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception,final,http,headers,headers,output,message,get,headers,add,default,headers,headers,t,content,type,if,output,message,instanceof,streaming,http,output,message,streaming,http,output,message,streaming,output,message,streaming,http,output,message,output,message,streaming,output,message,set,body,new,streaming,http,output,message,body,override,public,void,write,to,final,output,stream,output,stream,throws,ioexception,write,internal,t,new,http,output,message,override,public,output,stream,get,body,throws,ioexception,return,output,stream,override,public,http,headers,get,headers,return,headers,else,write,internal,t,output,message,output,message,get,body,flush
AbstractHttpMessageConverter -> @Override 	public final void write(final T t, MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException;1467730834;This implementation sets the default headers by calling {@link #addDefaultHeaders},_and then calls {@link #writeInternal}.;@Override_	public final void write(final T t, MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException {__		final HttpHeaders headers = outputMessage.getHeaders()__		addDefaultHeaders(headers, t, contentType)___		if (outputMessage instanceof StreamingHttpOutputMessage) {_			StreamingHttpOutputMessage streamingOutputMessage =_					(StreamingHttpOutputMessage) outputMessage__			streamingOutputMessage.setBody(new StreamingHttpOutputMessage.Body() {_				@Override_				public void writeTo(final OutputStream outputStream) throws IOException {_					writeInternal(t, new HttpOutputMessage() {_						@Override_						public OutputStream getBody() throws IOException {_							return outputStream__						}_						@Override_						public HttpHeaders getHeaders() {_							return headers__						}_					})__				}_			})__		}_		else {_			writeInternal(t, outputMessage)__			outputMessage.getBody().flush()__		}_	};this,implementation,sets,the,default,headers,by,calling,link,add,default,headers,and,then,calls,link,write,internal;override,public,final,void,write,final,t,t,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception,final,http,headers,headers,output,message,get,headers,add,default,headers,headers,t,content,type,if,output,message,instanceof,streaming,http,output,message,streaming,http,output,message,streaming,output,message,streaming,http,output,message,output,message,streaming,output,message,set,body,new,streaming,http,output,message,body,override,public,void,write,to,final,output,stream,output,stream,throws,ioexception,write,internal,t,new,http,output,message,override,public,output,stream,get,body,throws,ioexception,return,output,stream,override,public,http,headers,get,headers,return,headers,else,write,internal,t,output,message,output,message,get,body,flush
AbstractHttpMessageConverter -> @Override 	public final void write(final T t, MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException;1486062070;This implementation sets the default headers by calling {@link #addDefaultHeaders},_and then calls {@link #writeInternal}.;@Override_	public final void write(final T t, MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException {__		final HttpHeaders headers = outputMessage.getHeaders()__		addDefaultHeaders(headers, t, contentType)___		if (outputMessage instanceof StreamingHttpOutputMessage) {_			StreamingHttpOutputMessage streamingOutputMessage =_					(StreamingHttpOutputMessage) outputMessage__			streamingOutputMessage.setBody(new StreamingHttpOutputMessage.Body() {_				@Override_				public void writeTo(final OutputStream outputStream) throws IOException {_					writeInternal(t, new HttpOutputMessage() {_						@Override_						public OutputStream getBody() throws IOException {_							return outputStream__						}_						@Override_						public HttpHeaders getHeaders() {_							return headers__						}_					})__				}_			})__		}_		else {_			writeInternal(t, outputMessage)__			outputMessage.getBody().flush()__		}_	};this,implementation,sets,the,default,headers,by,calling,link,add,default,headers,and,then,calls,link,write,internal;override,public,final,void,write,final,t,t,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception,final,http,headers,headers,output,message,get,headers,add,default,headers,headers,t,content,type,if,output,message,instanceof,streaming,http,output,message,streaming,http,output,message,streaming,output,message,streaming,http,output,message,output,message,streaming,output,message,set,body,new,streaming,http,output,message,body,override,public,void,write,to,final,output,stream,output,stream,throws,ioexception,write,internal,t,new,http,output,message,override,public,output,stream,get,body,throws,ioexception,return,output,stream,override,public,http,headers,get,headers,return,headers,else,write,internal,t,output,message,output,message,get,body,flush
AbstractHttpMessageConverter -> @Override 	public final void write(final T t, MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException;1495868221;This implementation sets the default headers by calling {@link #addDefaultHeaders},_and then calls {@link #writeInternal}.;@Override_	public final void write(final T t, MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException {__		final HttpHeaders headers = outputMessage.getHeaders()__		addDefaultHeaders(headers, t, contentType)___		if (outputMessage instanceof StreamingHttpOutputMessage) {_			StreamingHttpOutputMessage streamingOutputMessage =_					(StreamingHttpOutputMessage) outputMessage__			streamingOutputMessage.setBody(new StreamingHttpOutputMessage.Body() {_				@Override_				public void writeTo(final OutputStream outputStream) throws IOException {_					writeInternal(t, new HttpOutputMessage() {_						@Override_						public OutputStream getBody() throws IOException {_							return outputStream__						}_						@Override_						public HttpHeaders getHeaders() {_							return headers__						}_					})__				}_			})__		}_		else {_			writeInternal(t, outputMessage)__			outputMessage.getBody().flush()__		}_	};this,implementation,sets,the,default,headers,by,calling,link,add,default,headers,and,then,calls,link,write,internal;override,public,final,void,write,final,t,t,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception,final,http,headers,headers,output,message,get,headers,add,default,headers,headers,t,content,type,if,output,message,instanceof,streaming,http,output,message,streaming,http,output,message,streaming,output,message,streaming,http,output,message,output,message,streaming,output,message,set,body,new,streaming,http,output,message,body,override,public,void,write,to,final,output,stream,output,stream,throws,ioexception,write,internal,t,new,http,output,message,override,public,output,stream,get,body,throws,ioexception,return,output,stream,override,public,http,headers,get,headers,return,headers,else,write,internal,t,output,message,output,message,get,body,flush
AbstractHttpMessageConverter -> public boolean canRead(Class<?> clazz, MediaType mediaType);1328020251;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canRead(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;public,boolean,can,read,class,clazz,media,type,media,type,return,supports,clazz,can,read,media,type
AbstractHttpMessageConverter -> public boolean canRead(Class<?> clazz, MediaType mediaType);1354627794;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canRead(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;public,boolean,can,read,class,clazz,media,type,media,type,return,supports,clazz,can,read,media,type
AbstractHttpMessageConverter -> public boolean canRead(Class<?> clazz, MediaType mediaType);1357119239;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canRead(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;public,boolean,can,read,class,clazz,media,type,media,type,return,supports,clazz,can,read,media,type
AbstractHttpMessageConverter -> public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException;1328020251;This implementation simple delegates to {@link #readInternal(Class, HttpInputMessage)}._Future implementations might add some default behavior, however.;public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException {_		return readInternal(clazz, inputMessage)__	};this,implementation,simple,delegates,to,link,read,internal,class,http,input,message,future,implementations,might,add,some,default,behavior,however;public,final,t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,return,read,internal,clazz,input,message
AbstractHttpMessageConverter -> public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException;1354627794;This implementation simple delegates to {@link #readInternal(Class, HttpInputMessage)}._Future implementations might add some default behavior, however.;public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException {_		return readInternal(clazz, inputMessage)__	};this,implementation,simple,delegates,to,link,read,internal,class,http,input,message,future,implementations,might,add,some,default,behavior,however;public,final,t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,return,read,internal,clazz,input,message
AbstractHttpMessageConverter -> public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException;1357119239;This implementation simple delegates to {@link #readInternal(Class, HttpInputMessage)}._Future implementations might add some default behavior, however.;public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException {_		return readInternal(clazz, inputMessage)__	};this,implementation,simple,delegates,to,link,read,internal,class,http,input,message,future,implementations,might,add,some,default,behavior,however;public,final,t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,return,read,internal,clazz,input,message
AbstractHttpMessageConverter -> @Override 	public final void write(T t, MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException;1356735495;This implementation delegates to {@link #getDefaultContentType(Object)} if a content_type was not provided, calls {@link #getContentLength}, and sets the corresponding headers_on the output message. It then calls {@link #writeInternal}.;@Override_	public final void write(T t, MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException {__		HttpHeaders headers = outputMessage.getHeaders()__		if (headers.getContentType() == null) {_			if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) {_				contentType = getDefaultContentType(t)__			}_			if (contentType != null) {_				headers.setContentType(contentType)__			}_		}_		if (headers.getContentLength() == -1) {_			Long contentLength = getContentLength(t, headers.getContentType())__			if (contentLength != null) {_				headers.setContentLength(contentLength)__			}_		}_		writeInternal(t, outputMessage)__		outputMessage.getBody().flush()__	};this,implementation,delegates,to,link,get,default,content,type,object,if,a,content,type,was,not,provided,calls,link,get,content,length,and,sets,the,corresponding,headers,on,the,output,message,it,then,calls,link,write,internal;override,public,final,void,write,t,t,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception,http,headers,headers,output,message,get,headers,if,headers,get,content,type,null,if,content,type,null,content,type,is,wildcard,type,content,type,is,wildcard,subtype,content,type,get,default,content,type,t,if,content,type,null,headers,set,content,type,content,type,if,headers,get,content,length,1,long,content,length,get,content,length,t,headers,get,content,type,if,content,length,null,headers,set,content,length,content,length,write,internal,t,output,message,output,message,get,body,flush
AbstractHttpMessageConverter -> @Override 	public final void write(T t, MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException;1368482696;This implementation delegates to {@link #getDefaultContentType(Object)} if a content_type was not provided, calls {@link #getContentLength}, and sets the corresponding headers_on the output message. It then calls {@link #writeInternal}.;@Override_	public final void write(T t, MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException {__		HttpHeaders headers = outputMessage.getHeaders()__		if (headers.getContentType() == null) {_			if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) {_				contentType = getDefaultContentType(t)__			}_			if (contentType != null) {_				headers.setContentType(contentType)__			}_		}_		if (headers.getContentLength() == -1) {_			Long contentLength = getContentLength(t, headers.getContentType())__			if (contentLength != null) {_				headers.setContentLength(contentLength)__			}_		}_		writeInternal(t, outputMessage)__		outputMessage.getBody().flush()__	};this,implementation,delegates,to,link,get,default,content,type,object,if,a,content,type,was,not,provided,calls,link,get,content,length,and,sets,the,corresponding,headers,on,the,output,message,it,then,calls,link,write,internal;override,public,final,void,write,t,t,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception,http,headers,headers,output,message,get,headers,if,headers,get,content,type,null,if,content,type,null,content,type,is,wildcard,type,content,type,is,wildcard,subtype,content,type,get,default,content,type,t,if,content,type,null,headers,set,content,type,content,type,if,headers,get,content,length,1,long,content,length,get,content,length,t,headers,get,content,type,if,content,length,null,headers,set,content,length,content,length,write,internal,t,output,message,output,message,get,body,flush
AbstractHttpMessageConverter -> @Nullable 	public Charset getDefaultCharset();1495868221;Return the default character set, if any._@since 4.3;@Nullable_	public Charset getDefaultCharset() {_		return this.defaultCharset__	};return,the,default,character,set,if,any,since,4,3;nullable,public,charset,get,default,charset,return,this,default,charset
AbstractHttpMessageConverter -> @Nullable 	public Charset getDefaultCharset();1496242568;Return the default character set, if any._@since 4.3;@Nullable_	public Charset getDefaultCharset() {_		return this.defaultCharset__	};return,the,default,character,set,if,any,since,4,3;nullable,public,charset,get,default,charset,return,this,default,charset
AbstractHttpMessageConverter -> @Nullable 	public Charset getDefaultCharset();1496259743;Return the default character set, if any._@since 4.3;@Nullable_	public Charset getDefaultCharset() {_		return this.defaultCharset__	};return,the,default,character,set,if,any,since,4,3;nullable,public,charset,get,default,charset,return,this,default,charset
AbstractHttpMessageConverter -> @Nullable 	public Charset getDefaultCharset();1496837955;Return the default character set, if any._@since 4.3;@Nullable_	public Charset getDefaultCharset() {_		return this.defaultCharset__	};return,the,default,character,set,if,any,since,4,3;nullable,public,charset,get,default,charset,return,this,default,charset
AbstractHttpMessageConverter -> @Nullable 	public Charset getDefaultCharset();1500448076;Return the default character set, if any._@since 4.3;@Nullable_	public Charset getDefaultCharset() {_		return this.defaultCharset__	};return,the,default,character,set,if,any,since,4,3;nullable,public,charset,get,default,charset,return,this,default,charset
AbstractHttpMessageConverter -> @Nullable 	public Charset getDefaultCharset();1500457438;Return the default character set, if any._@since 4.3;@Nullable_	public Charset getDefaultCharset() {_		return this.defaultCharset__	};return,the,default,character,set,if,any,since,4,3;nullable,public,charset,get,default,charset,return,this,default,charset
AbstractHttpMessageConverter -> @Nullable 	public Charset getDefaultCharset();1520890308;Return the default character set, if any._@since 4.3;@Nullable_	public Charset getDefaultCharset() {_		return this.defaultCharset__	};return,the,default,character,set,if,any,since,4,3;nullable,public,charset,get,default,charset,return,this,default,charset
AbstractHttpMessageConverter -> @Nullable 	public Charset getDefaultCharset();1530174524;Return the default character set, if any._@since 4.3;@Nullable_	public Charset getDefaultCharset() {_		return this.defaultCharset__	};return,the,default,character,set,if,any,since,4,3;nullable,public,charset,get,default,charset,return,this,default,charset
AbstractHttpMessageConverter -> @Nullable 	public Charset getDefaultCharset();1530563849;Return the default character set, if any._@since 4.3;@Nullable_	public Charset getDefaultCharset() {_		return this.defaultCharset__	};return,the,default,character,set,if,any,since,4,3;nullable,public,charset,get,default,charset,return,this,default,charset
AbstractHttpMessageConverter -> @Nullable 	public Charset getDefaultCharset();1530975243;Return the default character set, if any._@since 4.3;@Nullable_	public Charset getDefaultCharset() {_		return this.defaultCharset__	};return,the,default,character,set,if,any,since,4,3;nullable,public,charset,get,default,charset,return,this,default,charset
AbstractHttpMessageConverter -> @Nullable 	public Charset getDefaultCharset();1531942370;Return the default character set, if any._@since 4.3;@Nullable_	public Charset getDefaultCharset() {_		return this.defaultCharset__	};return,the,default,character,set,if,any,since,4,3;nullable,public,charset,get,default,charset,return,this,default,charset
AbstractHttpMessageConverter -> @Nullable 	public Charset getDefaultCharset();1546457570;Return the default character set, if any._@since 4.3;@Nullable_	public Charset getDefaultCharset() {_		return this.defaultCharset__	};return,the,default,character,set,if,any,since,4,3;nullable,public,charset,get,default,charset,return,this,default,charset
AbstractHttpMessageConverter -> public void setDefaultCharset(Charset defaultCharset);1456785272;Set the default character set if any.;public void setDefaultCharset(Charset defaultCharset) {_		this.defaultCharset = defaultCharset__	};set,the,default,character,set,if,any;public,void,set,default,charset,charset,default,charset,this,default,charset,default,charset
AbstractHttpMessageConverter -> public void setDefaultCharset(Charset defaultCharset);1458754769;Set the default character set if any.;public void setDefaultCharset(Charset defaultCharset) {_		this.defaultCharset = defaultCharset__	};set,the,default,character,set,if,any;public,void,set,default,charset,charset,default,charset,this,default,charset,default,charset
AbstractHttpMessageConverter -> public void setDefaultCharset(Charset defaultCharset);1460565262;Set the default character set, if any._@since 4.3;public void setDefaultCharset(Charset defaultCharset) {_		this.defaultCharset = defaultCharset__	};set,the,default,character,set,if,any,since,4,3;public,void,set,default,charset,charset,default,charset,this,default,charset,default,charset
AbstractHttpMessageConverter -> public void setDefaultCharset(Charset defaultCharset);1460644739;Set the default character set, if any._@since 4.3;public void setDefaultCharset(Charset defaultCharset) {_		this.defaultCharset = defaultCharset__	};set,the,default,character,set,if,any,since,4,3;public,void,set,default,charset,charset,default,charset,this,default,charset,default,charset
AbstractHttpMessageConverter -> public void setDefaultCharset(Charset defaultCharset);1465387124;Set the default character set, if any._@since 4.3;public void setDefaultCharset(Charset defaultCharset) {_		this.defaultCharset = defaultCharset__	};set,the,default,character,set,if,any,since,4,3;public,void,set,default,charset,charset,default,charset,this,default,charset,default,charset
AbstractHttpMessageConverter -> public void setDefaultCharset(Charset defaultCharset);1467730834;Set the default character set, if any._@since 4.3;public void setDefaultCharset(Charset defaultCharset) {_		this.defaultCharset = defaultCharset__	};set,the,default,character,set,if,any,since,4,3;public,void,set,default,charset,charset,default,charset,this,default,charset,default,charset
AbstractHttpMessageConverter -> public void setDefaultCharset(Charset defaultCharset);1486062070;Set the default character set, if any._@since 4.3;public void setDefaultCharset(Charset defaultCharset) {_		this.defaultCharset = defaultCharset__	};set,the,default,character,set,if,any,since,4,3;public,void,set,default,charset,charset,default,charset,this,default,charset,default,charset
AbstractHttpMessageConverter -> public void setDefaultCharset(Charset defaultCharset);1495868221;Set the default character set, if any._@since 4.3;public void setDefaultCharset(Charset defaultCharset) {_		this.defaultCharset = defaultCharset__	};set,the,default,character,set,if,any,since,4,3;public,void,set,default,charset,charset,default,charset,this,default,charset,default,charset
AbstractHttpMessageConverter -> public void setDefaultCharset(Charset defaultCharset);1496242568;Set the default character set, if any._@since 4.3;public void setDefaultCharset(Charset defaultCharset) {_		this.defaultCharset = defaultCharset__	};set,the,default,character,set,if,any,since,4,3;public,void,set,default,charset,charset,default,charset,this,default,charset,default,charset
AbstractHttpMessageConverter -> public void setDefaultCharset(Charset defaultCharset);1496259743;Set the default character set, if any._@since 4.3;public void setDefaultCharset(Charset defaultCharset) {_		this.defaultCharset = defaultCharset__	};set,the,default,character,set,if,any,since,4,3;public,void,set,default,charset,charset,default,charset,this,default,charset,default,charset
AbstractHttpMessageConverter -> public void setDefaultCharset(Charset defaultCharset);1496837955;Set the default character set, if any._@since 4.3;public void setDefaultCharset(Charset defaultCharset) {_		this.defaultCharset = defaultCharset__	};set,the,default,character,set,if,any,since,4,3;public,void,set,default,charset,charset,default,charset,this,default,charset,default,charset
AbstractHttpMessageConverter -> protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1328020251;Abstract template method that reads the actualy object. Invoked from {@link #read}._@param clazz the type of object to return_@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;abstract,template,method,that,reads,the,actualy,object,invoked,from,link,read,param,clazz,the,type,of,object,to,return,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;protected,abstract,t,read,internal,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
AbstractHttpMessageConverter -> protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1354627794;Abstract template method that reads the actual object. Invoked from {@link #read}._@param clazz the type of object to return_@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;abstract,template,method,that,reads,the,actual,object,invoked,from,link,read,param,clazz,the,type,of,object,to,return,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;protected,abstract,t,read,internal,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
AbstractHttpMessageConverter -> protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1356735495;Abstract template method that reads the actual object. Invoked from {@link #read}._@param clazz the type of object to return_@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;abstract,template,method,that,reads,the,actual,object,invoked,from,link,read,param,clazz,the,type,of,object,to,return,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;protected,abstract,t,read,internal,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
AbstractHttpMessageConverter -> protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1357119239;Abstract template method that reads the actual object. Invoked from {@link #read}._@param clazz the type of object to return_@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;abstract,template,method,that,reads,the,actual,object,invoked,from,link,read,param,clazz,the,type,of,object,to,return,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;protected,abstract,t,read,internal,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
AbstractHttpMessageConverter -> protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1368482696;Abstract template method that reads the actual object. Invoked from {@link #read}._@param clazz the type of object to return_@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;abstract,template,method,that,reads,the,actual,object,invoked,from,link,read,param,clazz,the,type,of,object,to,return,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;protected,abstract,t,read,internal,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
AbstractHttpMessageConverter -> protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1374115410;Abstract template method that reads the actual object. Invoked from {@link #read}._@param clazz the type of object to return_@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;abstract,template,method,that,reads,the,actual,object,invoked,from,link,read,param,clazz,the,type,of,object,to,return,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;protected,abstract,t,read,internal,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
AbstractHttpMessageConverter -> protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1375461043;Abstract template method that reads the actual object. Invoked from {@link #read}._@param clazz the type of object to return_@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;abstract,template,method,that,reads,the,actual,object,invoked,from,link,read,param,clazz,the,type,of,object,to,return,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;protected,abstract,t,read,internal,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
AbstractHttpMessageConverter -> protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1397767187;Abstract template method that reads the actual object. Invoked from {@link #read}._@param clazz the type of object to return_@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;abstract,template,method,that,reads,the,actual,object,invoked,from,link,read,param,clazz,the,type,of,object,to,return,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;protected,abstract,t,read,internal,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
AbstractHttpMessageConverter -> protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1428949885;Abstract template method that reads the actual object. Invoked from {@link #read}._@param clazz the type of object to return_@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;abstract,template,method,that,reads,the,actual,object,invoked,from,link,read,param,clazz,the,type,of,object,to,return,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;protected,abstract,t,read,internal,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
AbstractHttpMessageConverter -> protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1434985545;Abstract template method that reads the actual object. Invoked from {@link #read}._@param clazz the type of object to return_@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;abstract,template,method,that,reads,the,actual,object,invoked,from,link,read,param,clazz,the,type,of,object,to,return,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;protected,abstract,t,read,internal,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
AbstractHttpMessageConverter -> protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1438251419;Abstract template method that reads the actual object. Invoked from {@link #read}._@param clazz the type of object to return_@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;abstract,template,method,that,reads,the,actual,object,invoked,from,link,read,param,clazz,the,type,of,object,to,return,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;protected,abstract,t,read,internal,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
AbstractHttpMessageConverter -> protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1444408470;Abstract template method that reads the actual object. Invoked from {@link #read}._@param clazz the type of object to return_@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;abstract,template,method,that,reads,the,actual,object,invoked,from,link,read,param,clazz,the,type,of,object,to,return,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;protected,abstract,t,read,internal,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
AbstractHttpMessageConverter -> protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1455225853;Abstract template method that reads the actual object. Invoked from {@link #read}._@param clazz the type of object to return_@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;abstract,template,method,that,reads,the,actual,object,invoked,from,link,read,param,clazz,the,type,of,object,to,return,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;protected,abstract,t,read,internal,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
AbstractHttpMessageConverter -> protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1456785272;Abstract template method that reads the actual object. Invoked from {@link #read}._@param clazz the type of object to return_@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;abstract,template,method,that,reads,the,actual,object,invoked,from,link,read,param,clazz,the,type,of,object,to,return,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;protected,abstract,t,read,internal,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
AbstractHttpMessageConverter -> protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1458754769;Abstract template method that reads the actual object. Invoked from {@link #read}._@param clazz the type of object to return_@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;abstract,template,method,that,reads,the,actual,object,invoked,from,link,read,param,clazz,the,type,of,object,to,return,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;protected,abstract,t,read,internal,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
AbstractHttpMessageConverter -> protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1460565262;Abstract template method that reads the actual object. Invoked from {@link #read}._@param clazz the type of object to return_@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;abstract,template,method,that,reads,the,actual,object,invoked,from,link,read,param,clazz,the,type,of,object,to,return,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;protected,abstract,t,read,internal,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
AbstractHttpMessageConverter -> protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1460644739;Abstract template method that reads the actual object. Invoked from {@link #read}._@param clazz the type of object to return_@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;abstract,template,method,that,reads,the,actual,object,invoked,from,link,read,param,clazz,the,type,of,object,to,return,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;protected,abstract,t,read,internal,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
AbstractHttpMessageConverter -> protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1465387124;Abstract template method that reads the actual object. Invoked from {@link #read}._@param clazz the type of object to return_@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;abstract,template,method,that,reads,the,actual,object,invoked,from,link,read,param,clazz,the,type,of,object,to,return,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;protected,abstract,t,read,internal,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
AbstractHttpMessageConverter -> protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1467730834;Abstract template method that reads the actual object. Invoked from {@link #read}._@param clazz the type of object to return_@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;abstract,template,method,that,reads,the,actual,object,invoked,from,link,read,param,clazz,the,type,of,object,to,return,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;protected,abstract,t,read,internal,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
AbstractHttpMessageConverter -> protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1486062070;Abstract template method that reads the actual object. Invoked from {@link #read}._@param clazz the type of object to return_@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;abstract,template,method,that,reads,the,actual,object,invoked,from,link,read,param,clazz,the,type,of,object,to,return,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;protected,abstract,t,read,internal,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
AbstractHttpMessageConverter -> protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1495868221;Abstract template method that reads the actual object. Invoked from {@link #read}._@param clazz the type of object to return_@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;abstract,template,method,that,reads,the,actual,object,invoked,from,link,read,param,clazz,the,type,of,object,to,return,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;protected,abstract,t,read,internal,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
AbstractHttpMessageConverter -> protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1496242568;Abstract template method that reads the actual object. Invoked from {@link #read}._@param clazz the type of object to return_@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;abstract,template,method,that,reads,the,actual,object,invoked,from,link,read,param,clazz,the,type,of,object,to,return,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;protected,abstract,t,read,internal,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
AbstractHttpMessageConverter -> protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1496259743;Abstract template method that reads the actual object. Invoked from {@link #read}._@param clazz the type of object to return_@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;abstract,template,method,that,reads,the,actual,object,invoked,from,link,read,param,clazz,the,type,of,object,to,return,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;protected,abstract,t,read,internal,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
AbstractHttpMessageConverter -> protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1496837955;Abstract template method that reads the actual object. Invoked from {@link #read}._@param clazz the type of object to return_@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;abstract,template,method,that,reads,the,actual,object,invoked,from,link,read,param,clazz,the,type,of,object,to,return,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;protected,abstract,t,read,internal,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
AbstractHttpMessageConverter -> protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1500448076;Abstract template method that reads the actual object. Invoked from {@link #read}._@param clazz the type of object to return_@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;abstract,template,method,that,reads,the,actual,object,invoked,from,link,read,param,clazz,the,type,of,object,to,return,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;protected,abstract,t,read,internal,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
AbstractHttpMessageConverter -> protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1500457438;Abstract template method that reads the actual object. Invoked from {@link #read}._@param clazz the type of object to return_@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;abstract,template,method,that,reads,the,actual,object,invoked,from,link,read,param,clazz,the,type,of,object,to,return,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;protected,abstract,t,read,internal,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
AbstractHttpMessageConverter -> protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1520890308;Abstract template method that reads the actual object. Invoked from {@link #read}._@param clazz the type of object to return_@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;abstract,template,method,that,reads,the,actual,object,invoked,from,link,read,param,clazz,the,type,of,object,to,return,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;protected,abstract,t,read,internal,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
AbstractHttpMessageConverter -> protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1530174524;Abstract template method that reads the actual object. Invoked from {@link #read}._@param clazz the type of object to return_@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;abstract,template,method,that,reads,the,actual,object,invoked,from,link,read,param,clazz,the,type,of,object,to,return,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;protected,abstract,t,read,internal,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
AbstractHttpMessageConverter -> protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1530563849;Abstract template method that reads the actual object. Invoked from {@link #read}._@param clazz the type of object to return_@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;abstract,template,method,that,reads,the,actual,object,invoked,from,link,read,param,clazz,the,type,of,object,to,return,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;protected,abstract,t,read,internal,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
AbstractHttpMessageConverter -> protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1530975243;Abstract template method that reads the actual object. Invoked from {@link #read}._@param clazz the type of object to return_@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;abstract,template,method,that,reads,the,actual,object,invoked,from,link,read,param,clazz,the,type,of,object,to,return,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;protected,abstract,t,read,internal,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
AbstractHttpMessageConverter -> protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1531942370;Abstract template method that reads the actual object. Invoked from {@link #read}._@param clazz the type of object to return_@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;abstract,template,method,that,reads,the,actual,object,invoked,from,link,read,param,clazz,the,type,of,object,to,return,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;protected,abstract,t,read,internal,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
AbstractHttpMessageConverter -> protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1546457570;Abstract template method that reads the actual object. Invoked from {@link #read}._@param clazz the type of object to return_@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;protected abstract T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;abstract,template,method,that,reads,the,actual,object,invoked,from,link,read,param,clazz,the,type,of,object,to,return,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;protected,abstract,t,read,internal,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
AbstractHttpMessageConverter -> protected void addDefaultHeaders(HttpHeaders headers, T t, @Nullable MediaType contentType) throws IOException;1496242568;Add default headers to the output message._<p>This implementation delegates to {@link #getDefaultContentType(Object)} if a_content type was not provided, set if necessary the default character set, calls_{@link #getContentLength}, and sets the corresponding headers._@since 4.2;protected void addDefaultHeaders(HttpHeaders headers, T t, @Nullable MediaType contentType) throws IOException{_		if (headers.getContentType() == null) {_			MediaType contentTypeToUse = contentType__			if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) {_				contentTypeToUse = getDefaultContentType(t)__			}_			else if (MediaType.APPLICATION_OCTET_STREAM.equals(contentType)) {_				MediaType mediaType = getDefaultContentType(t)__				contentTypeToUse = (mediaType != null ? mediaType : contentTypeToUse)__			}_			if (contentTypeToUse != null) {_				if (contentTypeToUse.getCharset() == null) {_					Charset defaultCharset = getDefaultCharset()__					if (defaultCharset != null) {_						contentTypeToUse = new MediaType(contentTypeToUse, defaultCharset)__					}_				}_				headers.setContentType(contentTypeToUse)__			}_		}_		if (headers.getContentLength() < 0 && !headers.containsKey(HttpHeaders.TRANSFER_ENCODING)) {_			Long contentLength = getContentLength(t, headers.getContentType())__			if (contentLength != null) {_				headers.setContentLength(contentLength)__			}_		}_	};add,default,headers,to,the,output,message,p,this,implementation,delegates,to,link,get,default,content,type,object,if,a,content,type,was,not,provided,set,if,necessary,the,default,character,set,calls,link,get,content,length,and,sets,the,corresponding,headers,since,4,2;protected,void,add,default,headers,http,headers,headers,t,t,nullable,media,type,content,type,throws,ioexception,if,headers,get,content,type,null,media,type,content,type,to,use,content,type,if,content,type,null,content,type,is,wildcard,type,content,type,is,wildcard,subtype,content,type,to,use,get,default,content,type,t,else,if,media,type,equals,content,type,media,type,media,type,get,default,content,type,t,content,type,to,use,media,type,null,media,type,content,type,to,use,if,content,type,to,use,null,if,content,type,to,use,get,charset,null,charset,default,charset,get,default,charset,if,default,charset,null,content,type,to,use,new,media,type,content,type,to,use,default,charset,headers,set,content,type,content,type,to,use,if,headers,get,content,length,0,headers,contains,key,http,headers,long,content,length,get,content,length,t,headers,get,content,type,if,content,length,null,headers,set,content,length,content,length
AbstractHttpMessageConverter -> protected void addDefaultHeaders(HttpHeaders headers, T t, @Nullable MediaType contentType) throws IOException;1496259743;Add default headers to the output message._<p>This implementation delegates to {@link #getDefaultContentType(Object)} if a_content type was not provided, set if necessary the default character set, calls_{@link #getContentLength}, and sets the corresponding headers._@since 4.2;protected void addDefaultHeaders(HttpHeaders headers, T t, @Nullable MediaType contentType) throws IOException{_		if (headers.getContentType() == null) {_			MediaType contentTypeToUse = contentType__			if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) {_				contentTypeToUse = getDefaultContentType(t)__			}_			else if (MediaType.APPLICATION_OCTET_STREAM.equals(contentType)) {_				MediaType mediaType = getDefaultContentType(t)__				contentTypeToUse = (mediaType != null ? mediaType : contentTypeToUse)__			}_			if (contentTypeToUse != null) {_				if (contentTypeToUse.getCharset() == null) {_					Charset defaultCharset = getDefaultCharset()__					if (defaultCharset != null) {_						contentTypeToUse = new MediaType(contentTypeToUse, defaultCharset)__					}_				}_				headers.setContentType(contentTypeToUse)__			}_		}_		if (headers.getContentLength() < 0 && !headers.containsKey(HttpHeaders.TRANSFER_ENCODING)) {_			Long contentLength = getContentLength(t, headers.getContentType())__			if (contentLength != null) {_				headers.setContentLength(contentLength)__			}_		}_	};add,default,headers,to,the,output,message,p,this,implementation,delegates,to,link,get,default,content,type,object,if,a,content,type,was,not,provided,set,if,necessary,the,default,character,set,calls,link,get,content,length,and,sets,the,corresponding,headers,since,4,2;protected,void,add,default,headers,http,headers,headers,t,t,nullable,media,type,content,type,throws,ioexception,if,headers,get,content,type,null,media,type,content,type,to,use,content,type,if,content,type,null,content,type,is,wildcard,type,content,type,is,wildcard,subtype,content,type,to,use,get,default,content,type,t,else,if,media,type,equals,content,type,media,type,media,type,get,default,content,type,t,content,type,to,use,media,type,null,media,type,content,type,to,use,if,content,type,to,use,null,if,content,type,to,use,get,charset,null,charset,default,charset,get,default,charset,if,default,charset,null,content,type,to,use,new,media,type,content,type,to,use,default,charset,headers,set,content,type,content,type,to,use,if,headers,get,content,length,0,headers,contains,key,http,headers,long,content,length,get,content,length,t,headers,get,content,type,if,content,length,null,headers,set,content,length,content,length
AbstractHttpMessageConverter -> protected void addDefaultHeaders(HttpHeaders headers, T t, @Nullable MediaType contentType) throws IOException;1496837955;Add default headers to the output message._<p>This implementation delegates to {@link #getDefaultContentType(Object)} if a_content type was not provided, set if necessary the default character set, calls_{@link #getContentLength}, and sets the corresponding headers._@since 4.2;protected void addDefaultHeaders(HttpHeaders headers, T t, @Nullable MediaType contentType) throws IOException{_		if (headers.getContentType() == null) {_			MediaType contentTypeToUse = contentType__			if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) {_				contentTypeToUse = getDefaultContentType(t)__			}_			else if (MediaType.APPLICATION_OCTET_STREAM.equals(contentType)) {_				MediaType mediaType = getDefaultContentType(t)__				contentTypeToUse = (mediaType != null ? mediaType : contentTypeToUse)__			}_			if (contentTypeToUse != null) {_				if (contentTypeToUse.getCharset() == null) {_					Charset defaultCharset = getDefaultCharset()__					if (defaultCharset != null) {_						contentTypeToUse = new MediaType(contentTypeToUse, defaultCharset)__					}_				}_				headers.setContentType(contentTypeToUse)__			}_		}_		if (headers.getContentLength() < 0 && !headers.containsKey(HttpHeaders.TRANSFER_ENCODING)) {_			Long contentLength = getContentLength(t, headers.getContentType())__			if (contentLength != null) {_				headers.setContentLength(contentLength)__			}_		}_	};add,default,headers,to,the,output,message,p,this,implementation,delegates,to,link,get,default,content,type,object,if,a,content,type,was,not,provided,set,if,necessary,the,default,character,set,calls,link,get,content,length,and,sets,the,corresponding,headers,since,4,2;protected,void,add,default,headers,http,headers,headers,t,t,nullable,media,type,content,type,throws,ioexception,if,headers,get,content,type,null,media,type,content,type,to,use,content,type,if,content,type,null,content,type,is,wildcard,type,content,type,is,wildcard,subtype,content,type,to,use,get,default,content,type,t,else,if,media,type,equals,content,type,media,type,media,type,get,default,content,type,t,content,type,to,use,media,type,null,media,type,content,type,to,use,if,content,type,to,use,null,if,content,type,to,use,get,charset,null,charset,default,charset,get,default,charset,if,default,charset,null,content,type,to,use,new,media,type,content,type,to,use,default,charset,headers,set,content,type,content,type,to,use,if,headers,get,content,length,0,headers,contains,key,http,headers,long,content,length,get,content,length,t,headers,get,content,type,if,content,length,null,headers,set,content,length,content,length
AbstractHttpMessageConverter -> protected void addDefaultHeaders(HttpHeaders headers, T t, @Nullable MediaType contentType) throws IOException;1500448076;Add default headers to the output message._<p>This implementation delegates to {@link #getDefaultContentType(Object)} if a_content type was not provided, set if necessary the default character set, calls_{@link #getContentLength}, and sets the corresponding headers._@since 4.2;protected void addDefaultHeaders(HttpHeaders headers, T t, @Nullable MediaType contentType) throws IOException{_		if (headers.getContentType() == null) {_			MediaType contentTypeToUse = contentType__			if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) {_				contentTypeToUse = getDefaultContentType(t)__			}_			else if (MediaType.APPLICATION_OCTET_STREAM.equals(contentType)) {_				MediaType mediaType = getDefaultContentType(t)__				contentTypeToUse = (mediaType != null ? mediaType : contentTypeToUse)__			}_			if (contentTypeToUse != null) {_				if (contentTypeToUse.getCharset() == null) {_					Charset defaultCharset = getDefaultCharset()__					if (defaultCharset != null) {_						contentTypeToUse = new MediaType(contentTypeToUse, defaultCharset)__					}_				}_				headers.setContentType(contentTypeToUse)__			}_		}_		if (headers.getContentLength() < 0 && !headers.containsKey(HttpHeaders.TRANSFER_ENCODING)) {_			Long contentLength = getContentLength(t, headers.getContentType())__			if (contentLength != null) {_				headers.setContentLength(contentLength)__			}_		}_	};add,default,headers,to,the,output,message,p,this,implementation,delegates,to,link,get,default,content,type,object,if,a,content,type,was,not,provided,set,if,necessary,the,default,character,set,calls,link,get,content,length,and,sets,the,corresponding,headers,since,4,2;protected,void,add,default,headers,http,headers,headers,t,t,nullable,media,type,content,type,throws,ioexception,if,headers,get,content,type,null,media,type,content,type,to,use,content,type,if,content,type,null,content,type,is,wildcard,type,content,type,is,wildcard,subtype,content,type,to,use,get,default,content,type,t,else,if,media,type,equals,content,type,media,type,media,type,get,default,content,type,t,content,type,to,use,media,type,null,media,type,content,type,to,use,if,content,type,to,use,null,if,content,type,to,use,get,charset,null,charset,default,charset,get,default,charset,if,default,charset,null,content,type,to,use,new,media,type,content,type,to,use,default,charset,headers,set,content,type,content,type,to,use,if,headers,get,content,length,0,headers,contains,key,http,headers,long,content,length,get,content,length,t,headers,get,content,type,if,content,length,null,headers,set,content,length,content,length
AbstractHttpMessageConverter -> protected void addDefaultHeaders(HttpHeaders headers, T t, @Nullable MediaType contentType) throws IOException;1500457438;Add default headers to the output message._<p>This implementation delegates to {@link #getDefaultContentType(Object)} if a_content type was not provided, set if necessary the default character set, calls_{@link #getContentLength}, and sets the corresponding headers._@since 4.2;protected void addDefaultHeaders(HttpHeaders headers, T t, @Nullable MediaType contentType) throws IOException{_		if (headers.getContentType() == null) {_			MediaType contentTypeToUse = contentType__			if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) {_				contentTypeToUse = getDefaultContentType(t)__			}_			else if (MediaType.APPLICATION_OCTET_STREAM.equals(contentType)) {_				MediaType mediaType = getDefaultContentType(t)__				contentTypeToUse = (mediaType != null ? mediaType : contentTypeToUse)__			}_			if (contentTypeToUse != null) {_				if (contentTypeToUse.getCharset() == null) {_					Charset defaultCharset = getDefaultCharset()__					if (defaultCharset != null) {_						contentTypeToUse = new MediaType(contentTypeToUse, defaultCharset)__					}_				}_				headers.setContentType(contentTypeToUse)__			}_		}_		if (headers.getContentLength() < 0 && !headers.containsKey(HttpHeaders.TRANSFER_ENCODING)) {_			Long contentLength = getContentLength(t, headers.getContentType())__			if (contentLength != null) {_				headers.setContentLength(contentLength)__			}_		}_	};add,default,headers,to,the,output,message,p,this,implementation,delegates,to,link,get,default,content,type,object,if,a,content,type,was,not,provided,set,if,necessary,the,default,character,set,calls,link,get,content,length,and,sets,the,corresponding,headers,since,4,2;protected,void,add,default,headers,http,headers,headers,t,t,nullable,media,type,content,type,throws,ioexception,if,headers,get,content,type,null,media,type,content,type,to,use,content,type,if,content,type,null,content,type,is,wildcard,type,content,type,is,wildcard,subtype,content,type,to,use,get,default,content,type,t,else,if,media,type,equals,content,type,media,type,media,type,get,default,content,type,t,content,type,to,use,media,type,null,media,type,content,type,to,use,if,content,type,to,use,null,if,content,type,to,use,get,charset,null,charset,default,charset,get,default,charset,if,default,charset,null,content,type,to,use,new,media,type,content,type,to,use,default,charset,headers,set,content,type,content,type,to,use,if,headers,get,content,length,0,headers,contains,key,http,headers,long,content,length,get,content,length,t,headers,get,content,type,if,content,length,null,headers,set,content,length,content,length
AbstractHttpMessageConverter -> protected void addDefaultHeaders(HttpHeaders headers, T t, @Nullable MediaType contentType) throws IOException;1520890308;Add default headers to the output message._<p>This implementation delegates to {@link #getDefaultContentType(Object)} if a_content type was not provided, set if necessary the default character set, calls_{@link #getContentLength}, and sets the corresponding headers._@since 4.2;protected void addDefaultHeaders(HttpHeaders headers, T t, @Nullable MediaType contentType) throws IOException{_		if (headers.getContentType() == null) {_			MediaType contentTypeToUse = contentType__			if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) {_				contentTypeToUse = getDefaultContentType(t)__			}_			else if (MediaType.APPLICATION_OCTET_STREAM.equals(contentType)) {_				MediaType mediaType = getDefaultContentType(t)__				contentTypeToUse = (mediaType != null ? mediaType : contentTypeToUse)__			}_			if (contentTypeToUse != null) {_				if (contentTypeToUse.getCharset() == null) {_					Charset defaultCharset = getDefaultCharset()__					if (defaultCharset != null) {_						contentTypeToUse = new MediaType(contentTypeToUse, defaultCharset)__					}_				}_				headers.setContentType(contentTypeToUse)__			}_		}_		if (headers.getContentLength() < 0 && !headers.containsKey(HttpHeaders.TRANSFER_ENCODING)) {_			Long contentLength = getContentLength(t, headers.getContentType())__			if (contentLength != null) {_				headers.setContentLength(contentLength)__			}_		}_	};add,default,headers,to,the,output,message,p,this,implementation,delegates,to,link,get,default,content,type,object,if,a,content,type,was,not,provided,set,if,necessary,the,default,character,set,calls,link,get,content,length,and,sets,the,corresponding,headers,since,4,2;protected,void,add,default,headers,http,headers,headers,t,t,nullable,media,type,content,type,throws,ioexception,if,headers,get,content,type,null,media,type,content,type,to,use,content,type,if,content,type,null,content,type,is,wildcard,type,content,type,is,wildcard,subtype,content,type,to,use,get,default,content,type,t,else,if,media,type,equals,content,type,media,type,media,type,get,default,content,type,t,content,type,to,use,media,type,null,media,type,content,type,to,use,if,content,type,to,use,null,if,content,type,to,use,get,charset,null,charset,default,charset,get,default,charset,if,default,charset,null,content,type,to,use,new,media,type,content,type,to,use,default,charset,headers,set,content,type,content,type,to,use,if,headers,get,content,length,0,headers,contains,key,http,headers,long,content,length,get,content,length,t,headers,get,content,type,if,content,length,null,headers,set,content,length,content,length
AbstractHttpMessageConverter -> protected void addDefaultHeaders(HttpHeaders headers, T t, @Nullable MediaType contentType) throws IOException;1530174524;Add default headers to the output message._<p>This implementation delegates to {@link #getDefaultContentType(Object)} if a_content type was not provided, set if necessary the default character set, calls_{@link #getContentLength}, and sets the corresponding headers._@since 4.2;protected void addDefaultHeaders(HttpHeaders headers, T t, @Nullable MediaType contentType) throws IOException{_		if (headers.getContentType() == null) {_			MediaType contentTypeToUse = contentType__			if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) {_				contentTypeToUse = getDefaultContentType(t)__			}_			else if (MediaType.APPLICATION_OCTET_STREAM.equals(contentType)) {_				MediaType mediaType = getDefaultContentType(t)__				contentTypeToUse = (mediaType != null ? mediaType : contentTypeToUse)__			}_			if (contentTypeToUse != null) {_				if (contentTypeToUse.getCharset() == null) {_					Charset defaultCharset = getDefaultCharset()__					if (defaultCharset != null) {_						contentTypeToUse = new MediaType(contentTypeToUse, defaultCharset)__					}_				}_				headers.setContentType(contentTypeToUse)__			}_		}_		if (headers.getContentLength() < 0 && !headers.containsKey(HttpHeaders.TRANSFER_ENCODING)) {_			Long contentLength = getContentLength(t, headers.getContentType())__			if (contentLength != null) {_				headers.setContentLength(contentLength)__			}_		}_	};add,default,headers,to,the,output,message,p,this,implementation,delegates,to,link,get,default,content,type,object,if,a,content,type,was,not,provided,set,if,necessary,the,default,character,set,calls,link,get,content,length,and,sets,the,corresponding,headers,since,4,2;protected,void,add,default,headers,http,headers,headers,t,t,nullable,media,type,content,type,throws,ioexception,if,headers,get,content,type,null,media,type,content,type,to,use,content,type,if,content,type,null,content,type,is,wildcard,type,content,type,is,wildcard,subtype,content,type,to,use,get,default,content,type,t,else,if,media,type,equals,content,type,media,type,media,type,get,default,content,type,t,content,type,to,use,media,type,null,media,type,content,type,to,use,if,content,type,to,use,null,if,content,type,to,use,get,charset,null,charset,default,charset,get,default,charset,if,default,charset,null,content,type,to,use,new,media,type,content,type,to,use,default,charset,headers,set,content,type,content,type,to,use,if,headers,get,content,length,0,headers,contains,key,http,headers,long,content,length,get,content,length,t,headers,get,content,type,if,content,length,null,headers,set,content,length,content,length
AbstractHttpMessageConverter -> protected void addDefaultHeaders(HttpHeaders headers, T t, @Nullable MediaType contentType) throws IOException;1530563849;Add default headers to the output message._<p>This implementation delegates to {@link #getDefaultContentType(Object)} if a_content type was not provided, set if necessary the default character set, calls_{@link #getContentLength}, and sets the corresponding headers._@since 4.2;protected void addDefaultHeaders(HttpHeaders headers, T t, @Nullable MediaType contentType) throws IOException {_		if (headers.getContentType() == null) {_			MediaType contentTypeToUse = contentType__			if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) {_				contentTypeToUse = getDefaultContentType(t)__			}_			else if (MediaType.APPLICATION_OCTET_STREAM.equals(contentType)) {_				MediaType mediaType = getDefaultContentType(t)__				contentTypeToUse = (mediaType != null ? mediaType : contentTypeToUse)__			}_			if (contentTypeToUse != null) {_				if (contentTypeToUse.getCharset() == null) {_					Charset defaultCharset = getDefaultCharset()__					if (defaultCharset != null) {_						contentTypeToUse = new MediaType(contentTypeToUse, defaultCharset)__					}_				}_				headers.setContentType(contentTypeToUse)__			}_		}_		if (headers.getContentLength() < 0 && !headers.containsKey(HttpHeaders.TRANSFER_ENCODING)) {_			Long contentLength = getContentLength(t, headers.getContentType())__			if (contentLength != null) {_				headers.setContentLength(contentLength)__			}_		}_	};add,default,headers,to,the,output,message,p,this,implementation,delegates,to,link,get,default,content,type,object,if,a,content,type,was,not,provided,set,if,necessary,the,default,character,set,calls,link,get,content,length,and,sets,the,corresponding,headers,since,4,2;protected,void,add,default,headers,http,headers,headers,t,t,nullable,media,type,content,type,throws,ioexception,if,headers,get,content,type,null,media,type,content,type,to,use,content,type,if,content,type,null,content,type,is,wildcard,type,content,type,is,wildcard,subtype,content,type,to,use,get,default,content,type,t,else,if,media,type,equals,content,type,media,type,media,type,get,default,content,type,t,content,type,to,use,media,type,null,media,type,content,type,to,use,if,content,type,to,use,null,if,content,type,to,use,get,charset,null,charset,default,charset,get,default,charset,if,default,charset,null,content,type,to,use,new,media,type,content,type,to,use,default,charset,headers,set,content,type,content,type,to,use,if,headers,get,content,length,0,headers,contains,key,http,headers,long,content,length,get,content,length,t,headers,get,content,type,if,content,length,null,headers,set,content,length,content,length
AbstractHttpMessageConverter -> protected void addDefaultHeaders(HttpHeaders headers, T t, @Nullable MediaType contentType) throws IOException;1530975243;Add default headers to the output message._<p>This implementation delegates to {@link #getDefaultContentType(Object)} if a_content type was not provided, set if necessary the default character set, calls_{@link #getContentLength}, and sets the corresponding headers._@since 4.2;protected void addDefaultHeaders(HttpHeaders headers, T t, @Nullable MediaType contentType) throws IOException {_		if (headers.getContentType() == null) {_			MediaType contentTypeToUse = contentType__			if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) {_				contentTypeToUse = getDefaultContentType(t)__			}_			else if (MediaType.APPLICATION_OCTET_STREAM.equals(contentType)) {_				MediaType mediaType = getDefaultContentType(t)__				contentTypeToUse = (mediaType != null ? mediaType : contentTypeToUse)__			}_			if (contentTypeToUse != null) {_				if (contentTypeToUse.getCharset() == null) {_					Charset defaultCharset = getDefaultCharset()__					if (defaultCharset != null) {_						contentTypeToUse = new MediaType(contentTypeToUse, defaultCharset)__					}_				}_				headers.setContentType(contentTypeToUse)__			}_		}_		if (headers.getContentLength() < 0 && !headers.containsKey(HttpHeaders.TRANSFER_ENCODING)) {_			Long contentLength = getContentLength(t, headers.getContentType())__			if (contentLength != null) {_				headers.setContentLength(contentLength)__			}_		}_	};add,default,headers,to,the,output,message,p,this,implementation,delegates,to,link,get,default,content,type,object,if,a,content,type,was,not,provided,set,if,necessary,the,default,character,set,calls,link,get,content,length,and,sets,the,corresponding,headers,since,4,2;protected,void,add,default,headers,http,headers,headers,t,t,nullable,media,type,content,type,throws,ioexception,if,headers,get,content,type,null,media,type,content,type,to,use,content,type,if,content,type,null,content,type,is,wildcard,type,content,type,is,wildcard,subtype,content,type,to,use,get,default,content,type,t,else,if,media,type,equals,content,type,media,type,media,type,get,default,content,type,t,content,type,to,use,media,type,null,media,type,content,type,to,use,if,content,type,to,use,null,if,content,type,to,use,get,charset,null,charset,default,charset,get,default,charset,if,default,charset,null,content,type,to,use,new,media,type,content,type,to,use,default,charset,headers,set,content,type,content,type,to,use,if,headers,get,content,length,0,headers,contains,key,http,headers,long,content,length,get,content,length,t,headers,get,content,type,if,content,length,null,headers,set,content,length,content,length
AbstractHttpMessageConverter -> protected void addDefaultHeaders(HttpHeaders headers, T t, @Nullable MediaType contentType) throws IOException;1531942370;Add default headers to the output message._<p>This implementation delegates to {@link #getDefaultContentType(Object)} if a_content type was not provided, set if necessary the default character set, calls_{@link #getContentLength}, and sets the corresponding headers._@since 4.2;protected void addDefaultHeaders(HttpHeaders headers, T t, @Nullable MediaType contentType) throws IOException {_		if (headers.getContentType() == null) {_			MediaType contentTypeToUse = contentType__			if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) {_				contentTypeToUse = getDefaultContentType(t)__			}_			else if (MediaType.APPLICATION_OCTET_STREAM.equals(contentType)) {_				MediaType mediaType = getDefaultContentType(t)__				contentTypeToUse = (mediaType != null ? mediaType : contentTypeToUse)__			}_			if (contentTypeToUse != null) {_				if (contentTypeToUse.getCharset() == null) {_					Charset defaultCharset = getDefaultCharset()__					if (defaultCharset != null) {_						contentTypeToUse = new MediaType(contentTypeToUse, defaultCharset)__					}_				}_				headers.setContentType(contentTypeToUse)__			}_		}_		if (headers.getContentLength() < 0 && !headers.containsKey(HttpHeaders.TRANSFER_ENCODING)) {_			Long contentLength = getContentLength(t, headers.getContentType())__			if (contentLength != null) {_				headers.setContentLength(contentLength)__			}_		}_	};add,default,headers,to,the,output,message,p,this,implementation,delegates,to,link,get,default,content,type,object,if,a,content,type,was,not,provided,set,if,necessary,the,default,character,set,calls,link,get,content,length,and,sets,the,corresponding,headers,since,4,2;protected,void,add,default,headers,http,headers,headers,t,t,nullable,media,type,content,type,throws,ioexception,if,headers,get,content,type,null,media,type,content,type,to,use,content,type,if,content,type,null,content,type,is,wildcard,type,content,type,is,wildcard,subtype,content,type,to,use,get,default,content,type,t,else,if,media,type,equals,content,type,media,type,media,type,get,default,content,type,t,content,type,to,use,media,type,null,media,type,content,type,to,use,if,content,type,to,use,null,if,content,type,to,use,get,charset,null,charset,default,charset,get,default,charset,if,default,charset,null,content,type,to,use,new,media,type,content,type,to,use,default,charset,headers,set,content,type,content,type,to,use,if,headers,get,content,length,0,headers,contains,key,http,headers,long,content,length,get,content,length,t,headers,get,content,type,if,content,length,null,headers,set,content,length,content,length
AbstractHttpMessageConverter -> protected void addDefaultHeaders(HttpHeaders headers, T t, @Nullable MediaType contentType) throws IOException;1546457570;Add default headers to the output message._<p>This implementation delegates to {@link #getDefaultContentType(Object)} if a_content type was not provided, set if necessary the default character set, calls_{@link #getContentLength}, and sets the corresponding headers._@since 4.2;protected void addDefaultHeaders(HttpHeaders headers, T t, @Nullable MediaType contentType) throws IOException {_		if (headers.getContentType() == null) {_			MediaType contentTypeToUse = contentType__			if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) {_				contentTypeToUse = getDefaultContentType(t)__			}_			else if (MediaType.APPLICATION_OCTET_STREAM.equals(contentType)) {_				MediaType mediaType = getDefaultContentType(t)__				contentTypeToUse = (mediaType != null ? mediaType : contentTypeToUse)__			}_			if (contentTypeToUse != null) {_				if (contentTypeToUse.getCharset() == null) {_					Charset defaultCharset = getDefaultCharset()__					if (defaultCharset != null) {_						contentTypeToUse = new MediaType(contentTypeToUse, defaultCharset)__					}_				}_				headers.setContentType(contentTypeToUse)__			}_		}_		if (headers.getContentLength() < 0 && !headers.containsKey(HttpHeaders.TRANSFER_ENCODING)) {_			Long contentLength = getContentLength(t, headers.getContentType())__			if (contentLength != null) {_				headers.setContentLength(contentLength)__			}_		}_	};add,default,headers,to,the,output,message,p,this,implementation,delegates,to,link,get,default,content,type,object,if,a,content,type,was,not,provided,set,if,necessary,the,default,character,set,calls,link,get,content,length,and,sets,the,corresponding,headers,since,4,2;protected,void,add,default,headers,http,headers,headers,t,t,nullable,media,type,content,type,throws,ioexception,if,headers,get,content,type,null,media,type,content,type,to,use,content,type,if,content,type,null,content,type,is,wildcard,type,content,type,is,wildcard,subtype,content,type,to,use,get,default,content,type,t,else,if,media,type,equals,content,type,media,type,media,type,get,default,content,type,t,content,type,to,use,media,type,null,media,type,content,type,to,use,if,content,type,to,use,null,if,content,type,to,use,get,charset,null,charset,default,charset,get,default,charset,if,default,charset,null,content,type,to,use,new,media,type,content,type,to,use,default,charset,headers,set,content,type,content,type,to,use,if,headers,get,content,length,0,headers,contains,key,http,headers,long,content,length,get,content,length,t,headers,get,content,type,if,content,length,null,headers,set,content,length,content,length
AbstractHttpMessageConverter -> protected boolean canWrite(MediaType mediaType);1328020251;Returns {@code true} if the given media type includes any of the_{@linkplain #setSupportedMediaTypes(List) supported media types}._@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@return {@code true} if the supported media types are compatible with the media type,_or if the media type is {@code null};protected boolean canWrite(MediaType mediaType) {_		if (mediaType == null || MediaType.ALL.equals(mediaType)) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.isCompatibleWith(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,given,media,type,includes,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,the,supported,media,types,are,compatible,with,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,write,media,type,media,type,if,media,type,null,media,type,all,equals,media,type,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,is,compatible,with,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canWrite(MediaType mediaType);1354627794;Returns {@code true} if the given media type includes any of the_{@linkplain #setSupportedMediaTypes(List) supported media types}._@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@return {@code true} if the supported media types are compatible with the media type,_or if the media type is {@code null};protected boolean canWrite(MediaType mediaType) {_		if (mediaType == null || MediaType.ALL.equals(mediaType)) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.isCompatibleWith(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,given,media,type,includes,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,the,supported,media,types,are,compatible,with,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,write,media,type,media,type,if,media,type,null,media,type,all,equals,media,type,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,is,compatible,with,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canWrite(MediaType mediaType);1356735495;Returns {@code true} if the given media type includes any of the_{@linkplain #setSupportedMediaTypes(List) supported media types}._@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@return {@code true} if the supported media types are compatible with the media type,_or if the media type is {@code null};protected boolean canWrite(MediaType mediaType) {_		if (mediaType == null || MediaType.ALL.equals(mediaType)) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.isCompatibleWith(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,given,media,type,includes,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,the,supported,media,types,are,compatible,with,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,write,media,type,media,type,if,media,type,null,media,type,all,equals,media,type,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,is,compatible,with,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canWrite(MediaType mediaType);1357119239;Returns {@code true} if the given media type includes any of the_{@linkplain #setSupportedMediaTypes(List) supported media types}._@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@return {@code true} if the supported media types are compatible with the media type,_or if the media type is {@code null};protected boolean canWrite(MediaType mediaType) {_		if (mediaType == null || MediaType.ALL.equals(mediaType)) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.isCompatibleWith(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,given,media,type,includes,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,the,supported,media,types,are,compatible,with,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,write,media,type,media,type,if,media,type,null,media,type,all,equals,media,type,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,is,compatible,with,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canWrite(MediaType mediaType);1368482696;Returns {@code true} if the given media type includes any of the_{@linkplain #setSupportedMediaTypes(List) supported media types}._@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@return {@code true} if the supported media types are compatible with the media type,_or if the media type is {@code null};protected boolean canWrite(MediaType mediaType) {_		if (mediaType == null || MediaType.ALL.equals(mediaType)) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.isCompatibleWith(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,given,media,type,includes,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,the,supported,media,types,are,compatible,with,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,write,media,type,media,type,if,media,type,null,media,type,all,equals,media,type,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,is,compatible,with,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canWrite(MediaType mediaType);1374115410;Returns {@code true} if the given media type includes any of the_{@linkplain #setSupportedMediaTypes(List) supported media types}._@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@return {@code true} if the supported media types are compatible with the media type,_or if the media type is {@code null};protected boolean canWrite(MediaType mediaType) {_		if (mediaType == null || MediaType.ALL.equals(mediaType)) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.isCompatibleWith(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,given,media,type,includes,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,the,supported,media,types,are,compatible,with,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,write,media,type,media,type,if,media,type,null,media,type,all,equals,media,type,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,is,compatible,with,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canWrite(MediaType mediaType);1375461043;Returns {@code true} if the given media type includes any of the_{@linkplain #setSupportedMediaTypes(List) supported media types}._@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@return {@code true} if the supported media types are compatible with the media type,_or if the media type is {@code null};protected boolean canWrite(MediaType mediaType) {_		if (mediaType == null || MediaType.ALL.equals(mediaType)) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.isCompatibleWith(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,given,media,type,includes,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,the,supported,media,types,are,compatible,with,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,write,media,type,media,type,if,media,type,null,media,type,all,equals,media,type,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,is,compatible,with,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canWrite(MediaType mediaType);1397767187;Returns {@code true} if the given media type includes any of the_{@linkplain #setSupportedMediaTypes(List) supported media types}._@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@return {@code true} if the supported media types are compatible with the media type,_or if the media type is {@code null};protected boolean canWrite(MediaType mediaType) {_		if (mediaType == null || MediaType.ALL.equals(mediaType)) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.isCompatibleWith(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,given,media,type,includes,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,the,supported,media,types,are,compatible,with,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,write,media,type,media,type,if,media,type,null,media,type,all,equals,media,type,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,is,compatible,with,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canWrite(MediaType mediaType);1428949885;Returns {@code true} if the given media type includes any of the_{@linkplain #setSupportedMediaTypes(List) supported media types}._@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@return {@code true} if the supported media types are compatible with the media type,_or if the media type is {@code null};protected boolean canWrite(MediaType mediaType) {_		if (mediaType == null || MediaType.ALL.equals(mediaType)) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.isCompatibleWith(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,given,media,type,includes,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,the,supported,media,types,are,compatible,with,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,write,media,type,media,type,if,media,type,null,media,type,all,equals,media,type,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,is,compatible,with,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canWrite(MediaType mediaType);1434985545;Returns {@code true} if the given media type includes any of the_{@linkplain #setSupportedMediaTypes(List) supported media types}._@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@return {@code true} if the supported media types are compatible with the media type,_or if the media type is {@code null};protected boolean canWrite(MediaType mediaType) {_		if (mediaType == null || MediaType.ALL.equals(mediaType)) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.isCompatibleWith(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,given,media,type,includes,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,the,supported,media,types,are,compatible,with,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,write,media,type,media,type,if,media,type,null,media,type,all,equals,media,type,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,is,compatible,with,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canWrite(MediaType mediaType);1438251419;Returns {@code true} if the given media type includes any of the_{@linkplain #setSupportedMediaTypes(List) supported media types}._@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@return {@code true} if the supported media types are compatible with the media type,_or if the media type is {@code null};protected boolean canWrite(MediaType mediaType) {_		if (mediaType == null || MediaType.ALL.equals(mediaType)) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.isCompatibleWith(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,given,media,type,includes,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,the,supported,media,types,are,compatible,with,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,write,media,type,media,type,if,media,type,null,media,type,all,equals,media,type,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,is,compatible,with,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canWrite(MediaType mediaType);1444408470;Returns {@code true} if the given media type includes any of the_{@linkplain #setSupportedMediaTypes(List) supported media types}._@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@return {@code true} if the supported media types are compatible with the media type,_or if the media type is {@code null};protected boolean canWrite(MediaType mediaType) {_		if (mediaType == null || MediaType.ALL.equals(mediaType)) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.isCompatibleWith(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,given,media,type,includes,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,the,supported,media,types,are,compatible,with,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,write,media,type,media,type,if,media,type,null,media,type,all,equals,media,type,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,is,compatible,with,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canWrite(MediaType mediaType);1455225853;Returns {@code true} if the given media type includes any of the_{@linkplain #setSupportedMediaTypes(List) supported media types}._@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@return {@code true} if the supported media types are compatible with the media type,_or if the media type is {@code null};protected boolean canWrite(MediaType mediaType) {_		if (mediaType == null || MediaType.ALL.equals(mediaType)) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.isCompatibleWith(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,given,media,type,includes,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,the,supported,media,types,are,compatible,with,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,write,media,type,media,type,if,media,type,null,media,type,all,equals,media,type,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,is,compatible,with,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canWrite(MediaType mediaType);1456785272;Returns {@code true} if the given media type includes any of the_{@linkplain #setSupportedMediaTypes(List) supported media types}._@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@return {@code true} if the supported media types are compatible with the media type,_or if the media type is {@code null};protected boolean canWrite(MediaType mediaType) {_		if (mediaType == null || MediaType.ALL.equals(mediaType)) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.isCompatibleWith(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,given,media,type,includes,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,the,supported,media,types,are,compatible,with,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,write,media,type,media,type,if,media,type,null,media,type,all,equals,media,type,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,is,compatible,with,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canWrite(MediaType mediaType);1458754769;Returns {@code true} if the given media type includes any of the_{@linkplain #setSupportedMediaTypes(List) supported media types}._@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@return {@code true} if the supported media types are compatible with the media type,_or if the media type is {@code null};protected boolean canWrite(MediaType mediaType) {_		if (mediaType == null || MediaType.ALL.equals(mediaType)) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.isCompatibleWith(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,given,media,type,includes,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,the,supported,media,types,are,compatible,with,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,write,media,type,media,type,if,media,type,null,media,type,all,equals,media,type,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,is,compatible,with,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canWrite(MediaType mediaType);1460565262;Returns {@code true} if the given media type includes any of the_{@linkplain #setSupportedMediaTypes(List) supported media types}._@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@return {@code true} if the supported media types are compatible with the media type,_or if the media type is {@code null};protected boolean canWrite(MediaType mediaType) {_		if (mediaType == null || MediaType.ALL.equals(mediaType)) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.isCompatibleWith(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,given,media,type,includes,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,the,supported,media,types,are,compatible,with,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,write,media,type,media,type,if,media,type,null,media,type,all,equals,media,type,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,is,compatible,with,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canWrite(MediaType mediaType);1460644739;Returns {@code true} if the given media type includes any of the_{@linkplain #setSupportedMediaTypes(List) supported media types}._@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@return {@code true} if the supported media types are compatible with the media type,_or if the media type is {@code null};protected boolean canWrite(MediaType mediaType) {_		if (mediaType == null || MediaType.ALL.equals(mediaType)) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.isCompatibleWith(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,given,media,type,includes,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,the,supported,media,types,are,compatible,with,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,write,media,type,media,type,if,media,type,null,media,type,all,equals,media,type,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,is,compatible,with,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canWrite(MediaType mediaType);1465387124;Returns {@code true} if the given media type includes any of the_{@linkplain #setSupportedMediaTypes(List) supported media types}._@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@return {@code true} if the supported media types are compatible with the media type,_or if the media type is {@code null};protected boolean canWrite(MediaType mediaType) {_		if (mediaType == null || MediaType.ALL.equals(mediaType)) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.isCompatibleWith(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,given,media,type,includes,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,the,supported,media,types,are,compatible,with,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,write,media,type,media,type,if,media,type,null,media,type,all,equals,media,type,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,is,compatible,with,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canWrite(MediaType mediaType);1467730834;Returns {@code true} if the given media type includes any of the_{@linkplain #setSupportedMediaTypes(List) supported media types}._@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@return {@code true} if the supported media types are compatible with the media type,_or if the media type is {@code null};protected boolean canWrite(MediaType mediaType) {_		if (mediaType == null || MediaType.ALL.equals(mediaType)) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.isCompatibleWith(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,given,media,type,includes,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,the,supported,media,types,are,compatible,with,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,write,media,type,media,type,if,media,type,null,media,type,all,equals,media,type,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,is,compatible,with,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canWrite(MediaType mediaType);1486062070;Returns {@code true} if the given media type includes any of the_{@linkplain #setSupportedMediaTypes(List) supported media types}._@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@return {@code true} if the supported media types are compatible with the media type,_or if the media type is {@code null};protected boolean canWrite(MediaType mediaType) {_		if (mediaType == null || MediaType.ALL.equals(mediaType)) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.isCompatibleWith(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,given,media,type,includes,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,the,supported,media,types,are,compatible,with,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,write,media,type,media,type,if,media,type,null,media,type,all,equals,media,type,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,is,compatible,with,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected MediaType getDefaultContentType(T t) throws IOException;1328020251;Returns the default content type for the given type. Called when {@link #write}_is invoked without a specified content type parameter._<p>By default, this returns the first element of the_{@link #setSupportedMediaTypes(List) supportedMediaTypes} property, if any._Can be overridden in subclasses._@param t the type to return the content type for_@return the content type, or <code>null</code> if not known;protected MediaType getDefaultContentType(T t) throws IOException {_		List<MediaType> mediaTypes = getSupportedMediaTypes()__		return (!mediaTypes.isEmpty() ? mediaTypes.get(0) : null)__	};returns,the,default,content,type,for,the,given,type,called,when,link,write,is,invoked,without,a,specified,content,type,parameter,p,by,default,this,returns,the,first,element,of,the,link,set,supported,media,types,list,supported,media,types,property,if,any,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,type,for,return,the,content,type,or,code,null,code,if,not,known;protected,media,type,get,default,content,type,t,t,throws,ioexception,list,media,type,media,types,get,supported,media,types,return,media,types,is,empty,media,types,get,0,null
AbstractHttpMessageConverter -> protected MediaType getDefaultContentType(T t) throws IOException;1354627794;Returns the default content type for the given type. Called when {@link #write}_is invoked without a specified content type parameter._<p>By default, this returns the first element of the_{@link #setSupportedMediaTypes(List) supportedMediaTypes} property, if any._Can be overridden in subclasses._@param t the type to return the content type for_@return the content type, or <code>null</code> if not known;protected MediaType getDefaultContentType(T t) throws IOException {_		List<MediaType> mediaTypes = getSupportedMediaTypes()__		return (!mediaTypes.isEmpty() ? mediaTypes.get(0) : null)__	};returns,the,default,content,type,for,the,given,type,called,when,link,write,is,invoked,without,a,specified,content,type,parameter,p,by,default,this,returns,the,first,element,of,the,link,set,supported,media,types,list,supported,media,types,property,if,any,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,type,for,return,the,content,type,or,code,null,code,if,not,known;protected,media,type,get,default,content,type,t,t,throws,ioexception,list,media,type,media,types,get,supported,media,types,return,media,types,is,empty,media,types,get,0,null
AbstractHttpMessageConverter -> protected MediaType getDefaultContentType(T t) throws IOException;1356735495;Returns the default content type for the given type. Called when {@link #write}_is invoked without a specified content type parameter._<p>By default, this returns the first element of the_{@link #setSupportedMediaTypes(List) supportedMediaTypes} property, if any._Can be overridden in subclasses._@param t the type to return the content type for_@return the content type, or {@code null} if not known;protected MediaType getDefaultContentType(T t) throws IOException {_		List<MediaType> mediaTypes = getSupportedMediaTypes()__		return (!mediaTypes.isEmpty() ? mediaTypes.get(0) : null)__	};returns,the,default,content,type,for,the,given,type,called,when,link,write,is,invoked,without,a,specified,content,type,parameter,p,by,default,this,returns,the,first,element,of,the,link,set,supported,media,types,list,supported,media,types,property,if,any,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,type,for,return,the,content,type,or,code,null,if,not,known;protected,media,type,get,default,content,type,t,t,throws,ioexception,list,media,type,media,types,get,supported,media,types,return,media,types,is,empty,media,types,get,0,null
AbstractHttpMessageConverter -> protected MediaType getDefaultContentType(T t) throws IOException;1357119239;Returns the default content type for the given type. Called when {@link #write}_is invoked without a specified content type parameter._<p>By default, this returns the first element of the_{@link #setSupportedMediaTypes(List) supportedMediaTypes} property, if any._Can be overridden in subclasses._@param t the type to return the content type for_@return the content type, or {@code null} if not known;protected MediaType getDefaultContentType(T t) throws IOException {_		List<MediaType> mediaTypes = getSupportedMediaTypes()__		return (!mediaTypes.isEmpty() ? mediaTypes.get(0) : null)__	};returns,the,default,content,type,for,the,given,type,called,when,link,write,is,invoked,without,a,specified,content,type,parameter,p,by,default,this,returns,the,first,element,of,the,link,set,supported,media,types,list,supported,media,types,property,if,any,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,type,for,return,the,content,type,or,code,null,if,not,known;protected,media,type,get,default,content,type,t,t,throws,ioexception,list,media,type,media,types,get,supported,media,types,return,media,types,is,empty,media,types,get,0,null
AbstractHttpMessageConverter -> protected MediaType getDefaultContentType(T t) throws IOException;1368482696;Returns the default content type for the given type. Called when {@link #write}_is invoked without a specified content type parameter._<p>By default, this returns the first element of the_{@link #setSupportedMediaTypes(List) supportedMediaTypes} property, if any._Can be overridden in subclasses._@param t the type to return the content type for_@return the content type, or {@code null} if not known;protected MediaType getDefaultContentType(T t) throws IOException {_		List<MediaType> mediaTypes = getSupportedMediaTypes()__		return (!mediaTypes.isEmpty() ? mediaTypes.get(0) : null)__	};returns,the,default,content,type,for,the,given,type,called,when,link,write,is,invoked,without,a,specified,content,type,parameter,p,by,default,this,returns,the,first,element,of,the,link,set,supported,media,types,list,supported,media,types,property,if,any,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,type,for,return,the,content,type,or,code,null,if,not,known;protected,media,type,get,default,content,type,t,t,throws,ioexception,list,media,type,media,types,get,supported,media,types,return,media,types,is,empty,media,types,get,0,null
AbstractHttpMessageConverter -> protected MediaType getDefaultContentType(T t) throws IOException;1374115410;Returns the default content type for the given type. Called when {@link #write}_is invoked without a specified content type parameter._<p>By default, this returns the first element of the_{@link #setSupportedMediaTypes(List) supportedMediaTypes} property, if any._Can be overridden in subclasses._@param t the type to return the content type for_@return the content type, or {@code null} if not known;protected MediaType getDefaultContentType(T t) throws IOException {_		List<MediaType> mediaTypes = getSupportedMediaTypes()__		return (!mediaTypes.isEmpty() ? mediaTypes.get(0) : null)__	};returns,the,default,content,type,for,the,given,type,called,when,link,write,is,invoked,without,a,specified,content,type,parameter,p,by,default,this,returns,the,first,element,of,the,link,set,supported,media,types,list,supported,media,types,property,if,any,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,type,for,return,the,content,type,or,code,null,if,not,known;protected,media,type,get,default,content,type,t,t,throws,ioexception,list,media,type,media,types,get,supported,media,types,return,media,types,is,empty,media,types,get,0,null
AbstractHttpMessageConverter -> protected MediaType getDefaultContentType(T t) throws IOException;1375461043;Returns the default content type for the given type. Called when {@link #write}_is invoked without a specified content type parameter._<p>By default, this returns the first element of the_{@link #setSupportedMediaTypes(List) supportedMediaTypes} property, if any._Can be overridden in subclasses._@param t the type to return the content type for_@return the content type, or {@code null} if not known;protected MediaType getDefaultContentType(T t) throws IOException {_		List<MediaType> mediaTypes = getSupportedMediaTypes()__		return (!mediaTypes.isEmpty() ? mediaTypes.get(0) : null)__	};returns,the,default,content,type,for,the,given,type,called,when,link,write,is,invoked,without,a,specified,content,type,parameter,p,by,default,this,returns,the,first,element,of,the,link,set,supported,media,types,list,supported,media,types,property,if,any,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,type,for,return,the,content,type,or,code,null,if,not,known;protected,media,type,get,default,content,type,t,t,throws,ioexception,list,media,type,media,types,get,supported,media,types,return,media,types,is,empty,media,types,get,0,null
AbstractHttpMessageConverter -> protected MediaType getDefaultContentType(T t) throws IOException;1397767187;Returns the default content type for the given type. Called when {@link #write}_is invoked without a specified content type parameter._<p>By default, this returns the first element of the_{@link #setSupportedMediaTypes(List) supportedMediaTypes} property, if any._Can be overridden in subclasses._@param t the type to return the content type for_@return the content type, or {@code null} if not known;protected MediaType getDefaultContentType(T t) throws IOException {_		List<MediaType> mediaTypes = getSupportedMediaTypes()__		return (!mediaTypes.isEmpty() ? mediaTypes.get(0) : null)__	};returns,the,default,content,type,for,the,given,type,called,when,link,write,is,invoked,without,a,specified,content,type,parameter,p,by,default,this,returns,the,first,element,of,the,link,set,supported,media,types,list,supported,media,types,property,if,any,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,type,for,return,the,content,type,or,code,null,if,not,known;protected,media,type,get,default,content,type,t,t,throws,ioexception,list,media,type,media,types,get,supported,media,types,return,media,types,is,empty,media,types,get,0,null
AbstractHttpMessageConverter -> protected MediaType getDefaultContentType(T t) throws IOException;1428949885;Returns the default content type for the given type. Called when {@link #write}_is invoked without a specified content type parameter._<p>By default, this returns the first element of the_{@link #setSupportedMediaTypes(List) supportedMediaTypes} property, if any._Can be overridden in subclasses._@param t the type to return the content type for_@return the content type, or {@code null} if not known;protected MediaType getDefaultContentType(T t) throws IOException {_		List<MediaType> mediaTypes = getSupportedMediaTypes()__		return (!mediaTypes.isEmpty() ? mediaTypes.get(0) : null)__	};returns,the,default,content,type,for,the,given,type,called,when,link,write,is,invoked,without,a,specified,content,type,parameter,p,by,default,this,returns,the,first,element,of,the,link,set,supported,media,types,list,supported,media,types,property,if,any,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,type,for,return,the,content,type,or,code,null,if,not,known;protected,media,type,get,default,content,type,t,t,throws,ioexception,list,media,type,media,types,get,supported,media,types,return,media,types,is,empty,media,types,get,0,null
AbstractHttpMessageConverter -> protected MediaType getDefaultContentType(T t) throws IOException;1434985545;Returns the default content type for the given type. Called when {@link #write}_is invoked without a specified content type parameter._<p>By default, this returns the first element of the_{@link #setSupportedMediaTypes(List) supportedMediaTypes} property, if any._Can be overridden in subclasses._@param t the type to return the content type for_@return the content type, or {@code null} if not known;protected MediaType getDefaultContentType(T t) throws IOException {_		List<MediaType> mediaTypes = getSupportedMediaTypes()__		return (!mediaTypes.isEmpty() ? mediaTypes.get(0) : null)__	};returns,the,default,content,type,for,the,given,type,called,when,link,write,is,invoked,without,a,specified,content,type,parameter,p,by,default,this,returns,the,first,element,of,the,link,set,supported,media,types,list,supported,media,types,property,if,any,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,type,for,return,the,content,type,or,code,null,if,not,known;protected,media,type,get,default,content,type,t,t,throws,ioexception,list,media,type,media,types,get,supported,media,types,return,media,types,is,empty,media,types,get,0,null
AbstractHttpMessageConverter -> protected MediaType getDefaultContentType(T t) throws IOException;1438251419;Returns the default content type for the given type. Called when {@link #write}_is invoked without a specified content type parameter._<p>By default, this returns the first element of the_{@link #setSupportedMediaTypes(List) supportedMediaTypes} property, if any._Can be overridden in subclasses._@param t the type to return the content type for_@return the content type, or {@code null} if not known;protected MediaType getDefaultContentType(T t) throws IOException {_		List<MediaType> mediaTypes = getSupportedMediaTypes()__		return (!mediaTypes.isEmpty() ? mediaTypes.get(0) : null)__	};returns,the,default,content,type,for,the,given,type,called,when,link,write,is,invoked,without,a,specified,content,type,parameter,p,by,default,this,returns,the,first,element,of,the,link,set,supported,media,types,list,supported,media,types,property,if,any,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,type,for,return,the,content,type,or,code,null,if,not,known;protected,media,type,get,default,content,type,t,t,throws,ioexception,list,media,type,media,types,get,supported,media,types,return,media,types,is,empty,media,types,get,0,null
AbstractHttpMessageConverter -> protected MediaType getDefaultContentType(T t) throws IOException;1444408470;Returns the default content type for the given type. Called when {@link #write}_is invoked without a specified content type parameter._<p>By default, this returns the first element of the_{@link #setSupportedMediaTypes(List) supportedMediaTypes} property, if any._Can be overridden in subclasses._@param t the type to return the content type for_@return the content type, or {@code null} if not known;protected MediaType getDefaultContentType(T t) throws IOException {_		List<MediaType> mediaTypes = getSupportedMediaTypes()__		return (!mediaTypes.isEmpty() ? mediaTypes.get(0) : null)__	};returns,the,default,content,type,for,the,given,type,called,when,link,write,is,invoked,without,a,specified,content,type,parameter,p,by,default,this,returns,the,first,element,of,the,link,set,supported,media,types,list,supported,media,types,property,if,any,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,type,for,return,the,content,type,or,code,null,if,not,known;protected,media,type,get,default,content,type,t,t,throws,ioexception,list,media,type,media,types,get,supported,media,types,return,media,types,is,empty,media,types,get,0,null
AbstractHttpMessageConverter -> protected MediaType getDefaultContentType(T t) throws IOException;1455225853;Returns the default content type for the given type. Called when {@link #write}_is invoked without a specified content type parameter._<p>By default, this returns the first element of the_{@link #setSupportedMediaTypes(List) supportedMediaTypes} property, if any._Can be overridden in subclasses._@param t the type to return the content type for_@return the content type, or {@code null} if not known;protected MediaType getDefaultContentType(T t) throws IOException {_		List<MediaType> mediaTypes = getSupportedMediaTypes()__		return (!mediaTypes.isEmpty() ? mediaTypes.get(0) : null)__	};returns,the,default,content,type,for,the,given,type,called,when,link,write,is,invoked,without,a,specified,content,type,parameter,p,by,default,this,returns,the,first,element,of,the,link,set,supported,media,types,list,supported,media,types,property,if,any,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,type,for,return,the,content,type,or,code,null,if,not,known;protected,media,type,get,default,content,type,t,t,throws,ioexception,list,media,type,media,types,get,supported,media,types,return,media,types,is,empty,media,types,get,0,null
AbstractHttpMessageConverter -> protected MediaType getDefaultContentType(T t) throws IOException;1456785272;Returns the default content type for the given type. Called when {@link #write}_is invoked without a specified content type parameter._<p>By default, this returns the first element of the_{@link #setSupportedMediaTypes(List) supportedMediaTypes} property, if any._Can be overridden in subclasses._@param t the type to return the content type for_@return the content type, or {@code null} if not known;protected MediaType getDefaultContentType(T t) throws IOException {_		List<MediaType> mediaTypes = getSupportedMediaTypes()__		return (!mediaTypes.isEmpty() ? mediaTypes.get(0) : null)__	};returns,the,default,content,type,for,the,given,type,called,when,link,write,is,invoked,without,a,specified,content,type,parameter,p,by,default,this,returns,the,first,element,of,the,link,set,supported,media,types,list,supported,media,types,property,if,any,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,type,for,return,the,content,type,or,code,null,if,not,known;protected,media,type,get,default,content,type,t,t,throws,ioexception,list,media,type,media,types,get,supported,media,types,return,media,types,is,empty,media,types,get,0,null
AbstractHttpMessageConverter -> protected MediaType getDefaultContentType(T t) throws IOException;1458754769;Returns the default content type for the given type. Called when {@link #write}_is invoked without a specified content type parameter._<p>By default, this returns the first element of the_{@link #setSupportedMediaTypes(List) supportedMediaTypes} property, if any._Can be overridden in subclasses._@param t the type to return the content type for_@return the content type, or {@code null} if not known;protected MediaType getDefaultContentType(T t) throws IOException {_		List<MediaType> mediaTypes = getSupportedMediaTypes()__		return (!mediaTypes.isEmpty() ? mediaTypes.get(0) : null)__	};returns,the,default,content,type,for,the,given,type,called,when,link,write,is,invoked,without,a,specified,content,type,parameter,p,by,default,this,returns,the,first,element,of,the,link,set,supported,media,types,list,supported,media,types,property,if,any,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,type,for,return,the,content,type,or,code,null,if,not,known;protected,media,type,get,default,content,type,t,t,throws,ioexception,list,media,type,media,types,get,supported,media,types,return,media,types,is,empty,media,types,get,0,null
AbstractHttpMessageConverter -> protected MediaType getDefaultContentType(T t) throws IOException;1460565262;Returns the default content type for the given type. Called when {@link #write}_is invoked without a specified content type parameter._<p>By default, this returns the first element of the_{@link #setSupportedMediaTypes(List) supportedMediaTypes} property, if any._Can be overridden in subclasses._@param t the type to return the content type for_@return the content type, or {@code null} if not known;protected MediaType getDefaultContentType(T t) throws IOException {_		List<MediaType> mediaTypes = getSupportedMediaTypes()__		return (!mediaTypes.isEmpty() ? mediaTypes.get(0) : null)__	};returns,the,default,content,type,for,the,given,type,called,when,link,write,is,invoked,without,a,specified,content,type,parameter,p,by,default,this,returns,the,first,element,of,the,link,set,supported,media,types,list,supported,media,types,property,if,any,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,type,for,return,the,content,type,or,code,null,if,not,known;protected,media,type,get,default,content,type,t,t,throws,ioexception,list,media,type,media,types,get,supported,media,types,return,media,types,is,empty,media,types,get,0,null
AbstractHttpMessageConverter -> protected MediaType getDefaultContentType(T t) throws IOException;1460644739;Returns the default content type for the given type. Called when {@link #write}_is invoked without a specified content type parameter._<p>By default, this returns the first element of the_{@link #setSupportedMediaTypes(List) supportedMediaTypes} property, if any._Can be overridden in subclasses._@param t the type to return the content type for_@return the content type, or {@code null} if not known;protected MediaType getDefaultContentType(T t) throws IOException {_		List<MediaType> mediaTypes = getSupportedMediaTypes()__		return (!mediaTypes.isEmpty() ? mediaTypes.get(0) : null)__	};returns,the,default,content,type,for,the,given,type,called,when,link,write,is,invoked,without,a,specified,content,type,parameter,p,by,default,this,returns,the,first,element,of,the,link,set,supported,media,types,list,supported,media,types,property,if,any,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,type,for,return,the,content,type,or,code,null,if,not,known;protected,media,type,get,default,content,type,t,t,throws,ioexception,list,media,type,media,types,get,supported,media,types,return,media,types,is,empty,media,types,get,0,null
AbstractHttpMessageConverter -> protected MediaType getDefaultContentType(T t) throws IOException;1465387124;Returns the default content type for the given type. Called when {@link #write}_is invoked without a specified content type parameter._<p>By default, this returns the first element of the_{@link #setSupportedMediaTypes(List) supportedMediaTypes} property, if any._Can be overridden in subclasses._@param t the type to return the content type for_@return the content type, or {@code null} if not known;protected MediaType getDefaultContentType(T t) throws IOException {_		List<MediaType> mediaTypes = getSupportedMediaTypes()__		return (!mediaTypes.isEmpty() ? mediaTypes.get(0) : null)__	};returns,the,default,content,type,for,the,given,type,called,when,link,write,is,invoked,without,a,specified,content,type,parameter,p,by,default,this,returns,the,first,element,of,the,link,set,supported,media,types,list,supported,media,types,property,if,any,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,type,for,return,the,content,type,or,code,null,if,not,known;protected,media,type,get,default,content,type,t,t,throws,ioexception,list,media,type,media,types,get,supported,media,types,return,media,types,is,empty,media,types,get,0,null
AbstractHttpMessageConverter -> protected MediaType getDefaultContentType(T t) throws IOException;1467730834;Returns the default content type for the given type. Called when {@link #write}_is invoked without a specified content type parameter._<p>By default, this returns the first element of the_{@link #setSupportedMediaTypes(List) supportedMediaTypes} property, if any._Can be overridden in subclasses._@param t the type to return the content type for_@return the content type, or {@code null} if not known;protected MediaType getDefaultContentType(T t) throws IOException {_		List<MediaType> mediaTypes = getSupportedMediaTypes()__		return (!mediaTypes.isEmpty() ? mediaTypes.get(0) : null)__	};returns,the,default,content,type,for,the,given,type,called,when,link,write,is,invoked,without,a,specified,content,type,parameter,p,by,default,this,returns,the,first,element,of,the,link,set,supported,media,types,list,supported,media,types,property,if,any,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,type,for,return,the,content,type,or,code,null,if,not,known;protected,media,type,get,default,content,type,t,t,throws,ioexception,list,media,type,media,types,get,supported,media,types,return,media,types,is,empty,media,types,get,0,null
AbstractHttpMessageConverter -> protected MediaType getDefaultContentType(T t) throws IOException;1486062070;Returns the default content type for the given type. Called when {@link #write}_is invoked without a specified content type parameter._<p>By default, this returns the first element of the_{@link #setSupportedMediaTypes(List) supportedMediaTypes} property, if any._Can be overridden in subclasses._@param t the type to return the content type for_@return the content type, or {@code null} if not known;protected MediaType getDefaultContentType(T t) throws IOException {_		List<MediaType> mediaTypes = getSupportedMediaTypes()__		return (!mediaTypes.isEmpty() ? mediaTypes.get(0) : null)__	};returns,the,default,content,type,for,the,given,type,called,when,link,write,is,invoked,without,a,specified,content,type,parameter,p,by,default,this,returns,the,first,element,of,the,link,set,supported,media,types,list,supported,media,types,property,if,any,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,type,for,return,the,content,type,or,code,null,if,not,known;protected,media,type,get,default,content,type,t,t,throws,ioexception,list,media,type,media,types,get,supported,media,types,return,media,types,is,empty,media,types,get,0,null
AbstractHttpMessageConverter -> @Nullable 	protected MediaType getDefaultContentType(T t) throws IOException;1495868221;Returns the default content type for the given type. Called when {@link #write}_is invoked without a specified content type parameter._<p>By default, this returns the first element of the_{@link #setSupportedMediaTypes(List) supportedMediaTypes} property, if any._Can be overridden in subclasses._@param t the type to return the content type for_@return the content type, or {@code null} if not known;@Nullable_	protected MediaType getDefaultContentType(T t) throws IOException {_		List<MediaType> mediaTypes = getSupportedMediaTypes()__		return (!mediaTypes.isEmpty() ? mediaTypes.get(0) : null)__	};returns,the,default,content,type,for,the,given,type,called,when,link,write,is,invoked,without,a,specified,content,type,parameter,p,by,default,this,returns,the,first,element,of,the,link,set,supported,media,types,list,supported,media,types,property,if,any,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,type,for,return,the,content,type,or,code,null,if,not,known;nullable,protected,media,type,get,default,content,type,t,t,throws,ioexception,list,media,type,media,types,get,supported,media,types,return,media,types,is,empty,media,types,get,0,null
AbstractHttpMessageConverter -> @Nullable 	protected MediaType getDefaultContentType(T t) throws IOException;1496242568;Returns the default content type for the given type. Called when {@link #write}_is invoked without a specified content type parameter._<p>By default, this returns the first element of the_{@link #setSupportedMediaTypes(List) supportedMediaTypes} property, if any._Can be overridden in subclasses._@param t the type to return the content type for_@return the content type, or {@code null} if not known;@Nullable_	protected MediaType getDefaultContentType(T t) throws IOException {_		List<MediaType> mediaTypes = getSupportedMediaTypes()__		return (!mediaTypes.isEmpty() ? mediaTypes.get(0) : null)__	};returns,the,default,content,type,for,the,given,type,called,when,link,write,is,invoked,without,a,specified,content,type,parameter,p,by,default,this,returns,the,first,element,of,the,link,set,supported,media,types,list,supported,media,types,property,if,any,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,type,for,return,the,content,type,or,code,null,if,not,known;nullable,protected,media,type,get,default,content,type,t,t,throws,ioexception,list,media,type,media,types,get,supported,media,types,return,media,types,is,empty,media,types,get,0,null
AbstractHttpMessageConverter -> @Nullable 	protected MediaType getDefaultContentType(T t) throws IOException;1496259743;Returns the default content type for the given type. Called when {@link #write}_is invoked without a specified content type parameter._<p>By default, this returns the first element of the_{@link #setSupportedMediaTypes(List) supportedMediaTypes} property, if any._Can be overridden in subclasses._@param t the type to return the content type for_@return the content type, or {@code null} if not known;@Nullable_	protected MediaType getDefaultContentType(T t) throws IOException {_		List<MediaType> mediaTypes = getSupportedMediaTypes()__		return (!mediaTypes.isEmpty() ? mediaTypes.get(0) : null)__	};returns,the,default,content,type,for,the,given,type,called,when,link,write,is,invoked,without,a,specified,content,type,parameter,p,by,default,this,returns,the,first,element,of,the,link,set,supported,media,types,list,supported,media,types,property,if,any,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,type,for,return,the,content,type,or,code,null,if,not,known;nullable,protected,media,type,get,default,content,type,t,t,throws,ioexception,list,media,type,media,types,get,supported,media,types,return,media,types,is,empty,media,types,get,0,null
AbstractHttpMessageConverter -> @Nullable 	protected MediaType getDefaultContentType(T t) throws IOException;1496837955;Returns the default content type for the given type. Called when {@link #write}_is invoked without a specified content type parameter._<p>By default, this returns the first element of the_{@link #setSupportedMediaTypes(List) supportedMediaTypes} property, if any._Can be overridden in subclasses._@param t the type to return the content type for_@return the content type, or {@code null} if not known;@Nullable_	protected MediaType getDefaultContentType(T t) throws IOException {_		List<MediaType> mediaTypes = getSupportedMediaTypes()__		return (!mediaTypes.isEmpty() ? mediaTypes.get(0) : null)__	};returns,the,default,content,type,for,the,given,type,called,when,link,write,is,invoked,without,a,specified,content,type,parameter,p,by,default,this,returns,the,first,element,of,the,link,set,supported,media,types,list,supported,media,types,property,if,any,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,type,for,return,the,content,type,or,code,null,if,not,known;nullable,protected,media,type,get,default,content,type,t,t,throws,ioexception,list,media,type,media,types,get,supported,media,types,return,media,types,is,empty,media,types,get,0,null
AbstractHttpMessageConverter -> @Nullable 	protected MediaType getDefaultContentType(T t) throws IOException;1500448076;Returns the default content type for the given type. Called when {@link #write}_is invoked without a specified content type parameter._<p>By default, this returns the first element of the_{@link #setSupportedMediaTypes(List) supportedMediaTypes} property, if any._Can be overridden in subclasses._@param t the type to return the content type for_@return the content type, or {@code null} if not known;@Nullable_	protected MediaType getDefaultContentType(T t) throws IOException {_		List<MediaType> mediaTypes = getSupportedMediaTypes()__		return (!mediaTypes.isEmpty() ? mediaTypes.get(0) : null)__	};returns,the,default,content,type,for,the,given,type,called,when,link,write,is,invoked,without,a,specified,content,type,parameter,p,by,default,this,returns,the,first,element,of,the,link,set,supported,media,types,list,supported,media,types,property,if,any,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,type,for,return,the,content,type,or,code,null,if,not,known;nullable,protected,media,type,get,default,content,type,t,t,throws,ioexception,list,media,type,media,types,get,supported,media,types,return,media,types,is,empty,media,types,get,0,null
AbstractHttpMessageConverter -> @Nullable 	protected MediaType getDefaultContentType(T t) throws IOException;1500457438;Returns the default content type for the given type. Called when {@link #write}_is invoked without a specified content type parameter._<p>By default, this returns the first element of the_{@link #setSupportedMediaTypes(List) supportedMediaTypes} property, if any._Can be overridden in subclasses._@param t the type to return the content type for_@return the content type, or {@code null} if not known;@Nullable_	protected MediaType getDefaultContentType(T t) throws IOException {_		List<MediaType> mediaTypes = getSupportedMediaTypes()__		return (!mediaTypes.isEmpty() ? mediaTypes.get(0) : null)__	};returns,the,default,content,type,for,the,given,type,called,when,link,write,is,invoked,without,a,specified,content,type,parameter,p,by,default,this,returns,the,first,element,of,the,link,set,supported,media,types,list,supported,media,types,property,if,any,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,type,for,return,the,content,type,or,code,null,if,not,known;nullable,protected,media,type,get,default,content,type,t,t,throws,ioexception,list,media,type,media,types,get,supported,media,types,return,media,types,is,empty,media,types,get,0,null
AbstractHttpMessageConverter -> @Nullable 	protected MediaType getDefaultContentType(T t) throws IOException;1520890308;Returns the default content type for the given type. Called when {@link #write}_is invoked without a specified content type parameter._<p>By default, this returns the first element of the_{@link #setSupportedMediaTypes(List) supportedMediaTypes} property, if any._Can be overridden in subclasses._@param t the type to return the content type for_@return the content type, or {@code null} if not known;@Nullable_	protected MediaType getDefaultContentType(T t) throws IOException {_		List<MediaType> mediaTypes = getSupportedMediaTypes()__		return (!mediaTypes.isEmpty() ? mediaTypes.get(0) : null)__	};returns,the,default,content,type,for,the,given,type,called,when,link,write,is,invoked,without,a,specified,content,type,parameter,p,by,default,this,returns,the,first,element,of,the,link,set,supported,media,types,list,supported,media,types,property,if,any,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,type,for,return,the,content,type,or,code,null,if,not,known;nullable,protected,media,type,get,default,content,type,t,t,throws,ioexception,list,media,type,media,types,get,supported,media,types,return,media,types,is,empty,media,types,get,0,null
AbstractHttpMessageConverter -> @Nullable 	protected MediaType getDefaultContentType(T t) throws IOException;1530174524;Returns the default content type for the given type. Called when {@link #write}_is invoked without a specified content type parameter._<p>By default, this returns the first element of the_{@link #setSupportedMediaTypes(List) supportedMediaTypes} property, if any._Can be overridden in subclasses._@param t the type to return the content type for_@return the content type, or {@code null} if not known;@Nullable_	protected MediaType getDefaultContentType(T t) throws IOException {_		List<MediaType> mediaTypes = getSupportedMediaTypes()__		return (!mediaTypes.isEmpty() ? mediaTypes.get(0) : null)__	};returns,the,default,content,type,for,the,given,type,called,when,link,write,is,invoked,without,a,specified,content,type,parameter,p,by,default,this,returns,the,first,element,of,the,link,set,supported,media,types,list,supported,media,types,property,if,any,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,type,for,return,the,content,type,or,code,null,if,not,known;nullable,protected,media,type,get,default,content,type,t,t,throws,ioexception,list,media,type,media,types,get,supported,media,types,return,media,types,is,empty,media,types,get,0,null
AbstractHttpMessageConverter -> @Nullable 	protected MediaType getDefaultContentType(T t) throws IOException;1530563849;Returns the default content type for the given type. Called when {@link #write}_is invoked without a specified content type parameter._<p>By default, this returns the first element of the_{@link #setSupportedMediaTypes(List) supportedMediaTypes} property, if any._Can be overridden in subclasses._@param t the type to return the content type for_@return the content type, or {@code null} if not known;@Nullable_	protected MediaType getDefaultContentType(T t) throws IOException {_		List<MediaType> mediaTypes = getSupportedMediaTypes()__		return (!mediaTypes.isEmpty() ? mediaTypes.get(0) : null)__	};returns,the,default,content,type,for,the,given,type,called,when,link,write,is,invoked,without,a,specified,content,type,parameter,p,by,default,this,returns,the,first,element,of,the,link,set,supported,media,types,list,supported,media,types,property,if,any,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,type,for,return,the,content,type,or,code,null,if,not,known;nullable,protected,media,type,get,default,content,type,t,t,throws,ioexception,list,media,type,media,types,get,supported,media,types,return,media,types,is,empty,media,types,get,0,null
AbstractHttpMessageConverter -> @Nullable 	protected MediaType getDefaultContentType(T t) throws IOException;1530975243;Returns the default content type for the given type. Called when {@link #write}_is invoked without a specified content type parameter._<p>By default, this returns the first element of the_{@link #setSupportedMediaTypes(List) supportedMediaTypes} property, if any._Can be overridden in subclasses._@param t the type to return the content type for_@return the content type, or {@code null} if not known;@Nullable_	protected MediaType getDefaultContentType(T t) throws IOException {_		List<MediaType> mediaTypes = getSupportedMediaTypes()__		return (!mediaTypes.isEmpty() ? mediaTypes.get(0) : null)__	};returns,the,default,content,type,for,the,given,type,called,when,link,write,is,invoked,without,a,specified,content,type,parameter,p,by,default,this,returns,the,first,element,of,the,link,set,supported,media,types,list,supported,media,types,property,if,any,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,type,for,return,the,content,type,or,code,null,if,not,known;nullable,protected,media,type,get,default,content,type,t,t,throws,ioexception,list,media,type,media,types,get,supported,media,types,return,media,types,is,empty,media,types,get,0,null
AbstractHttpMessageConverter -> @Nullable 	protected MediaType getDefaultContentType(T t) throws IOException;1531942370;Returns the default content type for the given type. Called when {@link #write}_is invoked without a specified content type parameter._<p>By default, this returns the first element of the_{@link #setSupportedMediaTypes(List) supportedMediaTypes} property, if any._Can be overridden in subclasses._@param t the type to return the content type for_@return the content type, or {@code null} if not known;@Nullable_	protected MediaType getDefaultContentType(T t) throws IOException {_		List<MediaType> mediaTypes = getSupportedMediaTypes()__		return (!mediaTypes.isEmpty() ? mediaTypes.get(0) : null)__	};returns,the,default,content,type,for,the,given,type,called,when,link,write,is,invoked,without,a,specified,content,type,parameter,p,by,default,this,returns,the,first,element,of,the,link,set,supported,media,types,list,supported,media,types,property,if,any,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,type,for,return,the,content,type,or,code,null,if,not,known;nullable,protected,media,type,get,default,content,type,t,t,throws,ioexception,list,media,type,media,types,get,supported,media,types,return,media,types,is,empty,media,types,get,0,null
AbstractHttpMessageConverter -> @Nullable 	protected MediaType getDefaultContentType(T t) throws IOException;1546457570;Returns the default content type for the given type. Called when {@link #write}_is invoked without a specified content type parameter._<p>By default, this returns the first element of the_{@link #setSupportedMediaTypes(List) supportedMediaTypes} property, if any._Can be overridden in subclasses._@param t the type to return the content type for_@return the content type, or {@code null} if not known;@Nullable_	protected MediaType getDefaultContentType(T t) throws IOException {_		List<MediaType> mediaTypes = getSupportedMediaTypes()__		return (!mediaTypes.isEmpty() ? mediaTypes.get(0) : null)__	};returns,the,default,content,type,for,the,given,type,called,when,link,write,is,invoked,without,a,specified,content,type,parameter,p,by,default,this,returns,the,first,element,of,the,link,set,supported,media,types,list,supported,media,types,property,if,any,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,type,for,return,the,content,type,or,code,null,if,not,known;nullable,protected,media,type,get,default,content,type,t,t,throws,ioexception,list,media,type,media,types,get,supported,media,types,return,media,types,is,empty,media,types,get,0,null
AbstractHttpMessageConverter -> protected Long getContentLength(T t, MediaType contentType) throws IOException;1328020251;Returns the content length for the given type._<p>By default, this returns {@code null}, meaning that the content length is unknown._Can be overridden in subclasses._@param t the type to return the content length for_@return the content length, or {@code null} if not known;protected Long getContentLength(T t, MediaType contentType) throws IOException {_		return null__	};returns,the,content,length,for,the,given,type,p,by,default,this,returns,code,null,meaning,that,the,content,length,is,unknown,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,length,for,return,the,content,length,or,code,null,if,not,known;protected,long,get,content,length,t,t,media,type,content,type,throws,ioexception,return,null
AbstractHttpMessageConverter -> protected Long getContentLength(T t, MediaType contentType) throws IOException;1354627794;Returns the content length for the given type._<p>By default, this returns {@code null}, meaning that the content length is unknown._Can be overridden in subclasses._@param t the type to return the content length for_@return the content length, or {@code null} if not known;protected Long getContentLength(T t, MediaType contentType) throws IOException {_		return null__	};returns,the,content,length,for,the,given,type,p,by,default,this,returns,code,null,meaning,that,the,content,length,is,unknown,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,length,for,return,the,content,length,or,code,null,if,not,known;protected,long,get,content,length,t,t,media,type,content,type,throws,ioexception,return,null
AbstractHttpMessageConverter -> protected Long getContentLength(T t, MediaType contentType) throws IOException;1356735495;Returns the content length for the given type._<p>By default, this returns {@code null}, meaning that the content length is unknown._Can be overridden in subclasses._@param t the type to return the content length for_@return the content length, or {@code null} if not known;protected Long getContentLength(T t, MediaType contentType) throws IOException {_		return null__	};returns,the,content,length,for,the,given,type,p,by,default,this,returns,code,null,meaning,that,the,content,length,is,unknown,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,length,for,return,the,content,length,or,code,null,if,not,known;protected,long,get,content,length,t,t,media,type,content,type,throws,ioexception,return,null
AbstractHttpMessageConverter -> protected Long getContentLength(T t, MediaType contentType) throws IOException;1357119239;Returns the content length for the given type._<p>By default, this returns {@code null}, meaning that the content length is unknown._Can be overridden in subclasses._@param t the type to return the content length for_@return the content length, or {@code null} if not known;protected Long getContentLength(T t, MediaType contentType) throws IOException {_		return null__	};returns,the,content,length,for,the,given,type,p,by,default,this,returns,code,null,meaning,that,the,content,length,is,unknown,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,length,for,return,the,content,length,or,code,null,if,not,known;protected,long,get,content,length,t,t,media,type,content,type,throws,ioexception,return,null
AbstractHttpMessageConverter -> protected Long getContentLength(T t, MediaType contentType) throws IOException;1368482696;Returns the content length for the given type._<p>By default, this returns {@code null}, meaning that the content length is unknown._Can be overridden in subclasses._@param t the type to return the content length for_@return the content length, or {@code null} if not known;protected Long getContentLength(T t, MediaType contentType) throws IOException {_		return null__	};returns,the,content,length,for,the,given,type,p,by,default,this,returns,code,null,meaning,that,the,content,length,is,unknown,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,length,for,return,the,content,length,or,code,null,if,not,known;protected,long,get,content,length,t,t,media,type,content,type,throws,ioexception,return,null
AbstractHttpMessageConverter -> protected Long getContentLength(T t, MediaType contentType) throws IOException;1374115410;Returns the content length for the given type._<p>By default, this returns {@code null}, meaning that the content length is unknown._Can be overridden in subclasses._@param t the type to return the content length for_@return the content length, or {@code null} if not known;protected Long getContentLength(T t, MediaType contentType) throws IOException {_		return null__	};returns,the,content,length,for,the,given,type,p,by,default,this,returns,code,null,meaning,that,the,content,length,is,unknown,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,length,for,return,the,content,length,or,code,null,if,not,known;protected,long,get,content,length,t,t,media,type,content,type,throws,ioexception,return,null
AbstractHttpMessageConverter -> protected Long getContentLength(T t, MediaType contentType) throws IOException;1375461043;Returns the content length for the given type._<p>By default, this returns {@code null}, meaning that the content length is unknown._Can be overridden in subclasses._@param t the type to return the content length for_@return the content length, or {@code null} if not known;protected Long getContentLength(T t, MediaType contentType) throws IOException {_		return null__	};returns,the,content,length,for,the,given,type,p,by,default,this,returns,code,null,meaning,that,the,content,length,is,unknown,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,length,for,return,the,content,length,or,code,null,if,not,known;protected,long,get,content,length,t,t,media,type,content,type,throws,ioexception,return,null
AbstractHttpMessageConverter -> protected Long getContentLength(T t, MediaType contentType) throws IOException;1397767187;Returns the content length for the given type._<p>By default, this returns {@code null}, meaning that the content length is unknown._Can be overridden in subclasses._@param t the type to return the content length for_@return the content length, or {@code null} if not known;protected Long getContentLength(T t, MediaType contentType) throws IOException {_		return null__	};returns,the,content,length,for,the,given,type,p,by,default,this,returns,code,null,meaning,that,the,content,length,is,unknown,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,length,for,return,the,content,length,or,code,null,if,not,known;protected,long,get,content,length,t,t,media,type,content,type,throws,ioexception,return,null
AbstractHttpMessageConverter -> protected Long getContentLength(T t, MediaType contentType) throws IOException;1428949885;Returns the content length for the given type._<p>By default, this returns {@code null}, meaning that the content length is unknown._Can be overridden in subclasses._@param t the type to return the content length for_@return the content length, or {@code null} if not known;protected Long getContentLength(T t, MediaType contentType) throws IOException {_		return null__	};returns,the,content,length,for,the,given,type,p,by,default,this,returns,code,null,meaning,that,the,content,length,is,unknown,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,length,for,return,the,content,length,or,code,null,if,not,known;protected,long,get,content,length,t,t,media,type,content,type,throws,ioexception,return,null
AbstractHttpMessageConverter -> protected Long getContentLength(T t, MediaType contentType) throws IOException;1434985545;Returns the content length for the given type._<p>By default, this returns {@code null}, meaning that the content length is unknown._Can be overridden in subclasses._@param t the type to return the content length for_@return the content length, or {@code null} if not known;protected Long getContentLength(T t, MediaType contentType) throws IOException {_		return null__	};returns,the,content,length,for,the,given,type,p,by,default,this,returns,code,null,meaning,that,the,content,length,is,unknown,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,length,for,return,the,content,length,or,code,null,if,not,known;protected,long,get,content,length,t,t,media,type,content,type,throws,ioexception,return,null
AbstractHttpMessageConverter -> protected Long getContentLength(T t, MediaType contentType) throws IOException;1438251419;Returns the content length for the given type._<p>By default, this returns {@code null}, meaning that the content length is unknown._Can be overridden in subclasses._@param t the type to return the content length for_@return the content length, or {@code null} if not known;protected Long getContentLength(T t, MediaType contentType) throws IOException {_		return null__	};returns,the,content,length,for,the,given,type,p,by,default,this,returns,code,null,meaning,that,the,content,length,is,unknown,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,length,for,return,the,content,length,or,code,null,if,not,known;protected,long,get,content,length,t,t,media,type,content,type,throws,ioexception,return,null
AbstractHttpMessageConverter -> protected Long getContentLength(T t, MediaType contentType) throws IOException;1444408470;Returns the content length for the given type._<p>By default, this returns {@code null}, meaning that the content length is unknown._Can be overridden in subclasses._@param t the type to return the content length for_@return the content length, or {@code null} if not known;protected Long getContentLength(T t, MediaType contentType) throws IOException {_		return null__	};returns,the,content,length,for,the,given,type,p,by,default,this,returns,code,null,meaning,that,the,content,length,is,unknown,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,length,for,return,the,content,length,or,code,null,if,not,known;protected,long,get,content,length,t,t,media,type,content,type,throws,ioexception,return,null
AbstractHttpMessageConverter -> protected Long getContentLength(T t, MediaType contentType) throws IOException;1455225853;Returns the content length for the given type._<p>By default, this returns {@code null}, meaning that the content length is unknown._Can be overridden in subclasses._@param t the type to return the content length for_@return the content length, or {@code null} if not known;protected Long getContentLength(T t, MediaType contentType) throws IOException {_		return null__	};returns,the,content,length,for,the,given,type,p,by,default,this,returns,code,null,meaning,that,the,content,length,is,unknown,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,length,for,return,the,content,length,or,code,null,if,not,known;protected,long,get,content,length,t,t,media,type,content,type,throws,ioexception,return,null
AbstractHttpMessageConverter -> protected Long getContentLength(T t, MediaType contentType) throws IOException;1456785272;Returns the content length for the given type._<p>By default, this returns {@code null}, meaning that the content length is unknown._Can be overridden in subclasses._@param t the type to return the content length for_@return the content length, or {@code null} if not known;protected Long getContentLength(T t, MediaType contentType) throws IOException {_		return null__	};returns,the,content,length,for,the,given,type,p,by,default,this,returns,code,null,meaning,that,the,content,length,is,unknown,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,length,for,return,the,content,length,or,code,null,if,not,known;protected,long,get,content,length,t,t,media,type,content,type,throws,ioexception,return,null
AbstractHttpMessageConverter -> protected Long getContentLength(T t, MediaType contentType) throws IOException;1458754769;Returns the content length for the given type._<p>By default, this returns {@code null}, meaning that the content length is unknown._Can be overridden in subclasses._@param t the type to return the content length for_@return the content length, or {@code null} if not known;protected Long getContentLength(T t, MediaType contentType) throws IOException {_		return null__	};returns,the,content,length,for,the,given,type,p,by,default,this,returns,code,null,meaning,that,the,content,length,is,unknown,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,length,for,return,the,content,length,or,code,null,if,not,known;protected,long,get,content,length,t,t,media,type,content,type,throws,ioexception,return,null
AbstractHttpMessageConverter -> protected Long getContentLength(T t, MediaType contentType) throws IOException;1460565262;Returns the content length for the given type._<p>By default, this returns {@code null}, meaning that the content length is unknown._Can be overridden in subclasses._@param t the type to return the content length for_@return the content length, or {@code null} if not known;protected Long getContentLength(T t, MediaType contentType) throws IOException {_		return null__	};returns,the,content,length,for,the,given,type,p,by,default,this,returns,code,null,meaning,that,the,content,length,is,unknown,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,length,for,return,the,content,length,or,code,null,if,not,known;protected,long,get,content,length,t,t,media,type,content,type,throws,ioexception,return,null
AbstractHttpMessageConverter -> protected Long getContentLength(T t, MediaType contentType) throws IOException;1460644739;Returns the content length for the given type._<p>By default, this returns {@code null}, meaning that the content length is unknown._Can be overridden in subclasses._@param t the type to return the content length for_@return the content length, or {@code null} if not known;protected Long getContentLength(T t, MediaType contentType) throws IOException {_		return null__	};returns,the,content,length,for,the,given,type,p,by,default,this,returns,code,null,meaning,that,the,content,length,is,unknown,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,length,for,return,the,content,length,or,code,null,if,not,known;protected,long,get,content,length,t,t,media,type,content,type,throws,ioexception,return,null
AbstractHttpMessageConverter -> protected Long getContentLength(T t, MediaType contentType) throws IOException;1465387124;Returns the content length for the given type._<p>By default, this returns {@code null}, meaning that the content length is unknown._Can be overridden in subclasses._@param t the type to return the content length for_@return the content length, or {@code null} if not known;protected Long getContentLength(T t, MediaType contentType) throws IOException {_		return null__	};returns,the,content,length,for,the,given,type,p,by,default,this,returns,code,null,meaning,that,the,content,length,is,unknown,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,length,for,return,the,content,length,or,code,null,if,not,known;protected,long,get,content,length,t,t,media,type,content,type,throws,ioexception,return,null
AbstractHttpMessageConverter -> protected Long getContentLength(T t, MediaType contentType) throws IOException;1467730834;Returns the content length for the given type._<p>By default, this returns {@code null}, meaning that the content length is unknown._Can be overridden in subclasses._@param t the type to return the content length for_@return the content length, or {@code null} if not known;protected Long getContentLength(T t, MediaType contentType) throws IOException {_		return null__	};returns,the,content,length,for,the,given,type,p,by,default,this,returns,code,null,meaning,that,the,content,length,is,unknown,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,length,for,return,the,content,length,or,code,null,if,not,known;protected,long,get,content,length,t,t,media,type,content,type,throws,ioexception,return,null
AbstractHttpMessageConverter -> protected Long getContentLength(T t, MediaType contentType) throws IOException;1486062070;Returns the content length for the given type._<p>By default, this returns {@code null}, meaning that the content length is unknown._Can be overridden in subclasses._@param t the type to return the content length for_@return the content length, or {@code null} if not known;protected Long getContentLength(T t, MediaType contentType) throws IOException {_		return null__	};returns,the,content,length,for,the,given,type,p,by,default,this,returns,code,null,meaning,that,the,content,length,is,unknown,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,length,for,return,the,content,length,or,code,null,if,not,known;protected,long,get,content,length,t,t,media,type,content,type,throws,ioexception,return,null
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes);1328020251;Construct an {@code AbstractHttpMessageConverter} with multiple supported media type._@param supportedMediaTypes the supported media types;protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes) {_		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,multiple,supported,media,type,param,supported,media,types,the,supported,media,types;protected,abstract,http,message,converter,media,type,supported,media,types,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes);1354627794;Construct an {@code AbstractHttpMessageConverter} with multiple supported media type._@param supportedMediaTypes the supported media types;protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes) {_		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,multiple,supported,media,type,param,supported,media,types,the,supported,media,types;protected,abstract,http,message,converter,media,type,supported,media,types,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes);1356735495;Construct an {@code AbstractHttpMessageConverter} with multiple supported media type._@param supportedMediaTypes the supported media types;protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes) {_		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,multiple,supported,media,type,param,supported,media,types,the,supported,media,types;protected,abstract,http,message,converter,media,type,supported,media,types,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes);1357119239;Construct an {@code AbstractHttpMessageConverter} with multiple supported media type._@param supportedMediaTypes the supported media types;protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes) {_		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,multiple,supported,media,type,param,supported,media,types,the,supported,media,types;protected,abstract,http,message,converter,media,type,supported,media,types,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes);1368482696;Construct an {@code AbstractHttpMessageConverter} with multiple supported media type._@param supportedMediaTypes the supported media types;protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes) {_		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,multiple,supported,media,type,param,supported,media,types,the,supported,media,types;protected,abstract,http,message,converter,media,type,supported,media,types,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes);1374115410;Construct an {@code AbstractHttpMessageConverter} with multiple supported media type._@param supportedMediaTypes the supported media types;protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes) {_		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,multiple,supported,media,type,param,supported,media,types,the,supported,media,types;protected,abstract,http,message,converter,media,type,supported,media,types,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes);1375461043;Construct an {@code AbstractHttpMessageConverter} with multiple supported media type._@param supportedMediaTypes the supported media types;protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes) {_		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,multiple,supported,media,type,param,supported,media,types,the,supported,media,types;protected,abstract,http,message,converter,media,type,supported,media,types,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes);1397767187;Construct an {@code AbstractHttpMessageConverter} with multiple supported media type._@param supportedMediaTypes the supported media types;protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes) {_		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,multiple,supported,media,type,param,supported,media,types,the,supported,media,types;protected,abstract,http,message,converter,media,type,supported,media,types,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes);1428949885;Construct an {@code AbstractHttpMessageConverter} with multiple supported media type._@param supportedMediaTypes the supported media types;protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes) {_		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,multiple,supported,media,type,param,supported,media,types,the,supported,media,types;protected,abstract,http,message,converter,media,type,supported,media,types,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes);1434985545;Construct an {@code AbstractHttpMessageConverter} with multiple supported media type._@param supportedMediaTypes the supported media types;protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes) {_		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,multiple,supported,media,type,param,supported,media,types,the,supported,media,types;protected,abstract,http,message,converter,media,type,supported,media,types,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes);1438251419;Construct an {@code AbstractHttpMessageConverter} with multiple supported media type._@param supportedMediaTypes the supported media types;protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes) {_		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,multiple,supported,media,type,param,supported,media,types,the,supported,media,types;protected,abstract,http,message,converter,media,type,supported,media,types,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes);1444408470;Construct an {@code AbstractHttpMessageConverter} with multiple supported media type._@param supportedMediaTypes the supported media types;protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes) {_		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,multiple,supported,media,type,param,supported,media,types,the,supported,media,types;protected,abstract,http,message,converter,media,type,supported,media,types,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes);1455225853;Construct an {@code AbstractHttpMessageConverter} with multiple supported media type._@param supportedMediaTypes the supported media types;protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes) {_		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,multiple,supported,media,type,param,supported,media,types,the,supported,media,types;protected,abstract,http,message,converter,media,type,supported,media,types,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes);1456785272;Construct an {@code AbstractHttpMessageConverter} with multiple supported media type._@param supportedMediaTypes the supported media types;protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes) {_		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,multiple,supported,media,type,param,supported,media,types,the,supported,media,types;protected,abstract,http,message,converter,media,type,supported,media,types,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes);1458754769;Construct an {@code AbstractHttpMessageConverter} with multiple supported media type._@param supportedMediaTypes the supported media types;protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes) {_		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,multiple,supported,media,type,param,supported,media,types,the,supported,media,types;protected,abstract,http,message,converter,media,type,supported,media,types,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes);1460565262;Construct an {@code AbstractHttpMessageConverter} with multiple supported media types._@param supportedMediaTypes the supported media types;protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes) {_		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,multiple,supported,media,types,param,supported,media,types,the,supported,media,types;protected,abstract,http,message,converter,media,type,supported,media,types,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes);1460644739;Construct an {@code AbstractHttpMessageConverter} with multiple supported media types._@param supportedMediaTypes the supported media types;protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes) {_		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,multiple,supported,media,types,param,supported,media,types,the,supported,media,types;protected,abstract,http,message,converter,media,type,supported,media,types,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes);1465387124;Construct an {@code AbstractHttpMessageConverter} with multiple supported media types._@param supportedMediaTypes the supported media types;protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes) {_		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,multiple,supported,media,types,param,supported,media,types,the,supported,media,types;protected,abstract,http,message,converter,media,type,supported,media,types,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes);1467730834;Construct an {@code AbstractHttpMessageConverter} with multiple supported media types._@param supportedMediaTypes the supported media types;protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes) {_		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,multiple,supported,media,types,param,supported,media,types,the,supported,media,types;protected,abstract,http,message,converter,media,type,supported,media,types,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes);1486062070;Construct an {@code AbstractHttpMessageConverter} with multiple supported media types._@param supportedMediaTypes the supported media types;protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes) {_		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,multiple,supported,media,types,param,supported,media,types,the,supported,media,types;protected,abstract,http,message,converter,media,type,supported,media,types,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes);1495868221;Construct an {@code AbstractHttpMessageConverter} with multiple supported media types._@param supportedMediaTypes the supported media types;protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes) {_		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,multiple,supported,media,types,param,supported,media,types,the,supported,media,types;protected,abstract,http,message,converter,media,type,supported,media,types,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes);1496242568;Construct an {@code AbstractHttpMessageConverter} with multiple supported media types._@param supportedMediaTypes the supported media types;protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes) {_		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,multiple,supported,media,types,param,supported,media,types,the,supported,media,types;protected,abstract,http,message,converter,media,type,supported,media,types,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes);1496259743;Construct an {@code AbstractHttpMessageConverter} with multiple supported media types._@param supportedMediaTypes the supported media types;protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes) {_		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,multiple,supported,media,types,param,supported,media,types,the,supported,media,types;protected,abstract,http,message,converter,media,type,supported,media,types,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes);1496837955;Construct an {@code AbstractHttpMessageConverter} with multiple supported media types._@param supportedMediaTypes the supported media types;protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes) {_		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,multiple,supported,media,types,param,supported,media,types,the,supported,media,types;protected,abstract,http,message,converter,media,type,supported,media,types,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes);1500448076;Construct an {@code AbstractHttpMessageConverter} with multiple supported media types._@param supportedMediaTypes the supported media types;protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes) {_		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,multiple,supported,media,types,param,supported,media,types,the,supported,media,types;protected,abstract,http,message,converter,media,type,supported,media,types,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes);1500457438;Construct an {@code AbstractHttpMessageConverter} with multiple supported media types._@param supportedMediaTypes the supported media types;protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes) {_		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,multiple,supported,media,types,param,supported,media,types,the,supported,media,types;protected,abstract,http,message,converter,media,type,supported,media,types,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes);1520890308;Construct an {@code AbstractHttpMessageConverter} with multiple supported media types._@param supportedMediaTypes the supported media types;protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes) {_		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,multiple,supported,media,types,param,supported,media,types,the,supported,media,types;protected,abstract,http,message,converter,media,type,supported,media,types,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes);1530174524;Construct an {@code AbstractHttpMessageConverter} with multiple supported media types._@param supportedMediaTypes the supported media types;protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes) {_		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,multiple,supported,media,types,param,supported,media,types,the,supported,media,types;protected,abstract,http,message,converter,media,type,supported,media,types,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes);1530563849;Construct an {@code AbstractHttpMessageConverter} with multiple supported media types._@param supportedMediaTypes the supported media types;protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes) {_		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,multiple,supported,media,types,param,supported,media,types,the,supported,media,types;protected,abstract,http,message,converter,media,type,supported,media,types,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes);1530975243;Construct an {@code AbstractHttpMessageConverter} with multiple supported media types._@param supportedMediaTypes the supported media types;protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes) {_		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,multiple,supported,media,types,param,supported,media,types,the,supported,media,types;protected,abstract,http,message,converter,media,type,supported,media,types,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes);1531942370;Construct an {@code AbstractHttpMessageConverter} with multiple supported media types._@param supportedMediaTypes the supported media types;protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes) {_		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,multiple,supported,media,types,param,supported,media,types,the,supported,media,types;protected,abstract,http,message,converter,media,type,supported,media,types,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes);1546457570;Construct an {@code AbstractHttpMessageConverter} with multiple supported media types._@param supportedMediaTypes the supported media types;protected AbstractHttpMessageConverter(MediaType... supportedMediaTypes) {_		setSupportedMediaTypes(Arrays.asList(supportedMediaTypes))__	};construct,an,code,abstract,http,message,converter,with,multiple,supported,media,types,param,supported,media,types,the,supported,media,types;protected,abstract,http,message,converter,media,type,supported,media,types,set,supported,media,types,arrays,as,list,supported,media,types
AbstractHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1356735495;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canRead(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,read,class,clazz,media,type,media,type,return,supports,clazz,can,read,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1368482696;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canRead(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,read,class,clazz,media,type,media,type,return,supports,clazz,can,read,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1374115410;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canRead(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,read,class,clazz,media,type,media,type,return,supports,clazz,can,read,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1375461043;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canRead(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,read,class,clazz,media,type,media,type,return,supports,clazz,can,read,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1397767187;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canRead(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,read,class,clazz,media,type,media,type,return,supports,clazz,can,read,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1428949885;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canRead(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,read,class,clazz,media,type,media,type,return,supports,clazz,can,read,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1434985545;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canRead(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,read,class,clazz,media,type,media,type,return,supports,clazz,can,read,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1438251419;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canRead(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,read,class,clazz,media,type,media,type,return,supports,clazz,can,read,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1444408470;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canRead(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,read,class,clazz,media,type,media,type,return,supports,clazz,can,read,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1455225853;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canRead(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,read,class,clazz,media,type,media,type,return,supports,clazz,can,read,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1456785272;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canRead(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,read,class,clazz,media,type,media,type,return,supports,clazz,can,read,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1458754769;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canRead(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,read,class,clazz,media,type,media,type,return,supports,clazz,can,read,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1460565262;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canRead(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,read,class,clazz,media,type,media,type,return,supports,clazz,can,read,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1460644739;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canRead(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,read,class,clazz,media,type,media,type,return,supports,clazz,can,read,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1465387124;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canRead(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,read,class,clazz,media,type,media,type,return,supports,clazz,can,read,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1467730834;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canRead(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,read,class,clazz,media,type,media,type,return,supports,clazz,can,read,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1486062070;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canRead(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,read,class,clazz,media,type,media,type,return,supports,clazz,can,read,media,type
AbstractHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1495868221;This implementation checks if the given class is {@linkplain #supports(Class) supported},_and if the {@linkplain #getSupportedMediaTypes() supported media types}_{@linkplain MediaType#includes(MediaType) include} the given media type.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return supports(clazz) && canRead(mediaType)__	};this,implementation,checks,if,the,given,class,is,linkplain,supports,class,supported,and,if,the,linkplain,get,supported,media,types,supported,media,types,linkplain,media,type,includes,media,type,include,the,given,media,type;override,public,boolean,can,read,class,clazz,media,type,media,type,return,supports,clazz,can,read,media,type
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType supportedMediaType);1328020251;Construct an {@code AbstractHttpMessageConverter} with one supported media type._@param supportedMediaType the supported media type;protected AbstractHttpMessageConverter(MediaType supportedMediaType) {_		setSupportedMediaTypes(Collections.singletonList(supportedMediaType))__	};construct,an,code,abstract,http,message,converter,with,one,supported,media,type,param,supported,media,type,the,supported,media,type;protected,abstract,http,message,converter,media,type,supported,media,type,set,supported,media,types,collections,singleton,list,supported,media,type
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType supportedMediaType);1354627794;Construct an {@code AbstractHttpMessageConverter} with one supported media type._@param supportedMediaType the supported media type;protected AbstractHttpMessageConverter(MediaType supportedMediaType) {_		setSupportedMediaTypes(Collections.singletonList(supportedMediaType))__	};construct,an,code,abstract,http,message,converter,with,one,supported,media,type,param,supported,media,type,the,supported,media,type;protected,abstract,http,message,converter,media,type,supported,media,type,set,supported,media,types,collections,singleton,list,supported,media,type
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType supportedMediaType);1356735495;Construct an {@code AbstractHttpMessageConverter} with one supported media type._@param supportedMediaType the supported media type;protected AbstractHttpMessageConverter(MediaType supportedMediaType) {_		setSupportedMediaTypes(Collections.singletonList(supportedMediaType))__	};construct,an,code,abstract,http,message,converter,with,one,supported,media,type,param,supported,media,type,the,supported,media,type;protected,abstract,http,message,converter,media,type,supported,media,type,set,supported,media,types,collections,singleton,list,supported,media,type
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType supportedMediaType);1357119239;Construct an {@code AbstractHttpMessageConverter} with one supported media type._@param supportedMediaType the supported media type;protected AbstractHttpMessageConverter(MediaType supportedMediaType) {_		setSupportedMediaTypes(Collections.singletonList(supportedMediaType))__	};construct,an,code,abstract,http,message,converter,with,one,supported,media,type,param,supported,media,type,the,supported,media,type;protected,abstract,http,message,converter,media,type,supported,media,type,set,supported,media,types,collections,singleton,list,supported,media,type
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType supportedMediaType);1368482696;Construct an {@code AbstractHttpMessageConverter} with one supported media type._@param supportedMediaType the supported media type;protected AbstractHttpMessageConverter(MediaType supportedMediaType) {_		setSupportedMediaTypes(Collections.singletonList(supportedMediaType))__	};construct,an,code,abstract,http,message,converter,with,one,supported,media,type,param,supported,media,type,the,supported,media,type;protected,abstract,http,message,converter,media,type,supported,media,type,set,supported,media,types,collections,singleton,list,supported,media,type
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType supportedMediaType);1374115410;Construct an {@code AbstractHttpMessageConverter} with one supported media type._@param supportedMediaType the supported media type;protected AbstractHttpMessageConverter(MediaType supportedMediaType) {_		setSupportedMediaTypes(Collections.singletonList(supportedMediaType))__	};construct,an,code,abstract,http,message,converter,with,one,supported,media,type,param,supported,media,type,the,supported,media,type;protected,abstract,http,message,converter,media,type,supported,media,type,set,supported,media,types,collections,singleton,list,supported,media,type
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType supportedMediaType);1375461043;Construct an {@code AbstractHttpMessageConverter} with one supported media type._@param supportedMediaType the supported media type;protected AbstractHttpMessageConverter(MediaType supportedMediaType) {_		setSupportedMediaTypes(Collections.singletonList(supportedMediaType))__	};construct,an,code,abstract,http,message,converter,with,one,supported,media,type,param,supported,media,type,the,supported,media,type;protected,abstract,http,message,converter,media,type,supported,media,type,set,supported,media,types,collections,singleton,list,supported,media,type
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType supportedMediaType);1397767187;Construct an {@code AbstractHttpMessageConverter} with one supported media type._@param supportedMediaType the supported media type;protected AbstractHttpMessageConverter(MediaType supportedMediaType) {_		setSupportedMediaTypes(Collections.singletonList(supportedMediaType))__	};construct,an,code,abstract,http,message,converter,with,one,supported,media,type,param,supported,media,type,the,supported,media,type;protected,abstract,http,message,converter,media,type,supported,media,type,set,supported,media,types,collections,singleton,list,supported,media,type
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType supportedMediaType);1428949885;Construct an {@code AbstractHttpMessageConverter} with one supported media type._@param supportedMediaType the supported media type;protected AbstractHttpMessageConverter(MediaType supportedMediaType) {_		setSupportedMediaTypes(Collections.singletonList(supportedMediaType))__	};construct,an,code,abstract,http,message,converter,with,one,supported,media,type,param,supported,media,type,the,supported,media,type;protected,abstract,http,message,converter,media,type,supported,media,type,set,supported,media,types,collections,singleton,list,supported,media,type
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType supportedMediaType);1434985545;Construct an {@code AbstractHttpMessageConverter} with one supported media type._@param supportedMediaType the supported media type;protected AbstractHttpMessageConverter(MediaType supportedMediaType) {_		setSupportedMediaTypes(Collections.singletonList(supportedMediaType))__	};construct,an,code,abstract,http,message,converter,with,one,supported,media,type,param,supported,media,type,the,supported,media,type;protected,abstract,http,message,converter,media,type,supported,media,type,set,supported,media,types,collections,singleton,list,supported,media,type
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType supportedMediaType);1438251419;Construct an {@code AbstractHttpMessageConverter} with one supported media type._@param supportedMediaType the supported media type;protected AbstractHttpMessageConverter(MediaType supportedMediaType) {_		setSupportedMediaTypes(Collections.singletonList(supportedMediaType))__	};construct,an,code,abstract,http,message,converter,with,one,supported,media,type,param,supported,media,type,the,supported,media,type;protected,abstract,http,message,converter,media,type,supported,media,type,set,supported,media,types,collections,singleton,list,supported,media,type
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType supportedMediaType);1444408470;Construct an {@code AbstractHttpMessageConverter} with one supported media type._@param supportedMediaType the supported media type;protected AbstractHttpMessageConverter(MediaType supportedMediaType) {_		setSupportedMediaTypes(Collections.singletonList(supportedMediaType))__	};construct,an,code,abstract,http,message,converter,with,one,supported,media,type,param,supported,media,type,the,supported,media,type;protected,abstract,http,message,converter,media,type,supported,media,type,set,supported,media,types,collections,singleton,list,supported,media,type
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType supportedMediaType);1455225853;Construct an {@code AbstractHttpMessageConverter} with one supported media type._@param supportedMediaType the supported media type;protected AbstractHttpMessageConverter(MediaType supportedMediaType) {_		setSupportedMediaTypes(Collections.singletonList(supportedMediaType))__	};construct,an,code,abstract,http,message,converter,with,one,supported,media,type,param,supported,media,type,the,supported,media,type;protected,abstract,http,message,converter,media,type,supported,media,type,set,supported,media,types,collections,singleton,list,supported,media,type
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType supportedMediaType);1456785272;Construct an {@code AbstractHttpMessageConverter} with one supported media type._@param supportedMediaType the supported media type;protected AbstractHttpMessageConverter(MediaType supportedMediaType) {_		setSupportedMediaTypes(Collections.singletonList(supportedMediaType))__	};construct,an,code,abstract,http,message,converter,with,one,supported,media,type,param,supported,media,type,the,supported,media,type;protected,abstract,http,message,converter,media,type,supported,media,type,set,supported,media,types,collections,singleton,list,supported,media,type
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType supportedMediaType);1458754769;Construct an {@code AbstractHttpMessageConverter} with one supported media type._@param supportedMediaType the supported media type;protected AbstractHttpMessageConverter(MediaType supportedMediaType) {_		setSupportedMediaTypes(Collections.singletonList(supportedMediaType))__	};construct,an,code,abstract,http,message,converter,with,one,supported,media,type,param,supported,media,type,the,supported,media,type;protected,abstract,http,message,converter,media,type,supported,media,type,set,supported,media,types,collections,singleton,list,supported,media,type
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType supportedMediaType);1460565262;Construct an {@code AbstractHttpMessageConverter} with one supported media type._@param supportedMediaType the supported media type;protected AbstractHttpMessageConverter(MediaType supportedMediaType) {_		setSupportedMediaTypes(Collections.singletonList(supportedMediaType))__	};construct,an,code,abstract,http,message,converter,with,one,supported,media,type,param,supported,media,type,the,supported,media,type;protected,abstract,http,message,converter,media,type,supported,media,type,set,supported,media,types,collections,singleton,list,supported,media,type
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType supportedMediaType);1460644739;Construct an {@code AbstractHttpMessageConverter} with one supported media type._@param supportedMediaType the supported media type;protected AbstractHttpMessageConverter(MediaType supportedMediaType) {_		setSupportedMediaTypes(Collections.singletonList(supportedMediaType))__	};construct,an,code,abstract,http,message,converter,with,one,supported,media,type,param,supported,media,type,the,supported,media,type;protected,abstract,http,message,converter,media,type,supported,media,type,set,supported,media,types,collections,singleton,list,supported,media,type
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType supportedMediaType);1465387124;Construct an {@code AbstractHttpMessageConverter} with one supported media type._@param supportedMediaType the supported media type;protected AbstractHttpMessageConverter(MediaType supportedMediaType) {_		setSupportedMediaTypes(Collections.singletonList(supportedMediaType))__	};construct,an,code,abstract,http,message,converter,with,one,supported,media,type,param,supported,media,type,the,supported,media,type;protected,abstract,http,message,converter,media,type,supported,media,type,set,supported,media,types,collections,singleton,list,supported,media,type
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType supportedMediaType);1467730834;Construct an {@code AbstractHttpMessageConverter} with one supported media type._@param supportedMediaType the supported media type;protected AbstractHttpMessageConverter(MediaType supportedMediaType) {_		setSupportedMediaTypes(Collections.singletonList(supportedMediaType))__	};construct,an,code,abstract,http,message,converter,with,one,supported,media,type,param,supported,media,type,the,supported,media,type;protected,abstract,http,message,converter,media,type,supported,media,type,set,supported,media,types,collections,singleton,list,supported,media,type
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType supportedMediaType);1486062070;Construct an {@code AbstractHttpMessageConverter} with one supported media type._@param supportedMediaType the supported media type;protected AbstractHttpMessageConverter(MediaType supportedMediaType) {_		setSupportedMediaTypes(Collections.singletonList(supportedMediaType))__	};construct,an,code,abstract,http,message,converter,with,one,supported,media,type,param,supported,media,type,the,supported,media,type;protected,abstract,http,message,converter,media,type,supported,media,type,set,supported,media,types,collections,singleton,list,supported,media,type
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType supportedMediaType);1495868221;Construct an {@code AbstractHttpMessageConverter} with one supported media type._@param supportedMediaType the supported media type;protected AbstractHttpMessageConverter(MediaType supportedMediaType) {_		setSupportedMediaTypes(Collections.singletonList(supportedMediaType))__	};construct,an,code,abstract,http,message,converter,with,one,supported,media,type,param,supported,media,type,the,supported,media,type;protected,abstract,http,message,converter,media,type,supported,media,type,set,supported,media,types,collections,singleton,list,supported,media,type
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType supportedMediaType);1496242568;Construct an {@code AbstractHttpMessageConverter} with one supported media type._@param supportedMediaType the supported media type;protected AbstractHttpMessageConverter(MediaType supportedMediaType) {_		setSupportedMediaTypes(Collections.singletonList(supportedMediaType))__	};construct,an,code,abstract,http,message,converter,with,one,supported,media,type,param,supported,media,type,the,supported,media,type;protected,abstract,http,message,converter,media,type,supported,media,type,set,supported,media,types,collections,singleton,list,supported,media,type
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType supportedMediaType);1496259743;Construct an {@code AbstractHttpMessageConverter} with one supported media type._@param supportedMediaType the supported media type;protected AbstractHttpMessageConverter(MediaType supportedMediaType) {_		setSupportedMediaTypes(Collections.singletonList(supportedMediaType))__	};construct,an,code,abstract,http,message,converter,with,one,supported,media,type,param,supported,media,type,the,supported,media,type;protected,abstract,http,message,converter,media,type,supported,media,type,set,supported,media,types,collections,singleton,list,supported,media,type
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType supportedMediaType);1496837955;Construct an {@code AbstractHttpMessageConverter} with one supported media type._@param supportedMediaType the supported media type;protected AbstractHttpMessageConverter(MediaType supportedMediaType) {_		setSupportedMediaTypes(Collections.singletonList(supportedMediaType))__	};construct,an,code,abstract,http,message,converter,with,one,supported,media,type,param,supported,media,type,the,supported,media,type;protected,abstract,http,message,converter,media,type,supported,media,type,set,supported,media,types,collections,singleton,list,supported,media,type
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType supportedMediaType);1500448076;Construct an {@code AbstractHttpMessageConverter} with one supported media type._@param supportedMediaType the supported media type;protected AbstractHttpMessageConverter(MediaType supportedMediaType) {_		setSupportedMediaTypes(Collections.singletonList(supportedMediaType))__	};construct,an,code,abstract,http,message,converter,with,one,supported,media,type,param,supported,media,type,the,supported,media,type;protected,abstract,http,message,converter,media,type,supported,media,type,set,supported,media,types,collections,singleton,list,supported,media,type
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType supportedMediaType);1500457438;Construct an {@code AbstractHttpMessageConverter} with one supported media type._@param supportedMediaType the supported media type;protected AbstractHttpMessageConverter(MediaType supportedMediaType) {_		setSupportedMediaTypes(Collections.singletonList(supportedMediaType))__	};construct,an,code,abstract,http,message,converter,with,one,supported,media,type,param,supported,media,type,the,supported,media,type;protected,abstract,http,message,converter,media,type,supported,media,type,set,supported,media,types,collections,singleton,list,supported,media,type
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType supportedMediaType);1520890308;Construct an {@code AbstractHttpMessageConverter} with one supported media type._@param supportedMediaType the supported media type;protected AbstractHttpMessageConverter(MediaType supportedMediaType) {_		setSupportedMediaTypes(Collections.singletonList(supportedMediaType))__	};construct,an,code,abstract,http,message,converter,with,one,supported,media,type,param,supported,media,type,the,supported,media,type;protected,abstract,http,message,converter,media,type,supported,media,type,set,supported,media,types,collections,singleton,list,supported,media,type
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType supportedMediaType);1530174524;Construct an {@code AbstractHttpMessageConverter} with one supported media type._@param supportedMediaType the supported media type;protected AbstractHttpMessageConverter(MediaType supportedMediaType) {_		setSupportedMediaTypes(Collections.singletonList(supportedMediaType))__	};construct,an,code,abstract,http,message,converter,with,one,supported,media,type,param,supported,media,type,the,supported,media,type;protected,abstract,http,message,converter,media,type,supported,media,type,set,supported,media,types,collections,singleton,list,supported,media,type
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType supportedMediaType);1530563849;Construct an {@code AbstractHttpMessageConverter} with one supported media type._@param supportedMediaType the supported media type;protected AbstractHttpMessageConverter(MediaType supportedMediaType) {_		setSupportedMediaTypes(Collections.singletonList(supportedMediaType))__	};construct,an,code,abstract,http,message,converter,with,one,supported,media,type,param,supported,media,type,the,supported,media,type;protected,abstract,http,message,converter,media,type,supported,media,type,set,supported,media,types,collections,singleton,list,supported,media,type
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType supportedMediaType);1530975243;Construct an {@code AbstractHttpMessageConverter} with one supported media type._@param supportedMediaType the supported media type;protected AbstractHttpMessageConverter(MediaType supportedMediaType) {_		setSupportedMediaTypes(Collections.singletonList(supportedMediaType))__	};construct,an,code,abstract,http,message,converter,with,one,supported,media,type,param,supported,media,type,the,supported,media,type;protected,abstract,http,message,converter,media,type,supported,media,type,set,supported,media,types,collections,singleton,list,supported,media,type
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType supportedMediaType);1531942370;Construct an {@code AbstractHttpMessageConverter} with one supported media type._@param supportedMediaType the supported media type;protected AbstractHttpMessageConverter(MediaType supportedMediaType) {_		setSupportedMediaTypes(Collections.singletonList(supportedMediaType))__	};construct,an,code,abstract,http,message,converter,with,one,supported,media,type,param,supported,media,type,the,supported,media,type;protected,abstract,http,message,converter,media,type,supported,media,type,set,supported,media,types,collections,singleton,list,supported,media,type
AbstractHttpMessageConverter -> protected AbstractHttpMessageConverter(MediaType supportedMediaType);1546457570;Construct an {@code AbstractHttpMessageConverter} with one supported media type._@param supportedMediaType the supported media type;protected AbstractHttpMessageConverter(MediaType supportedMediaType) {_		setSupportedMediaTypes(Collections.singletonList(supportedMediaType))__	};construct,an,code,abstract,http,message,converter,with,one,supported,media,type,param,supported,media,type,the,supported,media,type;protected,abstract,http,message,converter,media,type,supported,media,type,set,supported,media,types,collections,singleton,list,supported,media,type
AbstractHttpMessageConverter -> protected void addDefaultHeaders(HttpHeaders headers, T t, MediaType contentType) throws IOException;1438251419;Add default headers to the output message._<p>This implementation delegates to {@link #getDefaultContentType(Object)} if a content_type was not provided, calls {@link #getContentLength}, and sets the corresponding headers_@since 4.2;protected void addDefaultHeaders(HttpHeaders headers, T t, MediaType contentType) throws IOException{_		if (headers.getContentType() == null) {_			MediaType contentTypeToUse = contentType__			if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) {_				contentTypeToUse = getDefaultContentType(t)__			}_			else if (MediaType.APPLICATION_OCTET_STREAM.equals(contentType)) {_				MediaType mediaType = getDefaultContentType(t)__				contentTypeToUse = (mediaType != null ? mediaType : contentTypeToUse)__			}_			if (contentTypeToUse != null) {_				headers.setContentType(contentTypeToUse)__			}_		}_		if (headers.getContentLength() == -1) {_			Long contentLength = getContentLength(t, headers.getContentType())__			if (contentLength != null) {_				headers.setContentLength(contentLength)__			}_		}_	};add,default,headers,to,the,output,message,p,this,implementation,delegates,to,link,get,default,content,type,object,if,a,content,type,was,not,provided,calls,link,get,content,length,and,sets,the,corresponding,headers,since,4,2;protected,void,add,default,headers,http,headers,headers,t,t,media,type,content,type,throws,ioexception,if,headers,get,content,type,null,media,type,content,type,to,use,content,type,if,content,type,null,content,type,is,wildcard,type,content,type,is,wildcard,subtype,content,type,to,use,get,default,content,type,t,else,if,media,type,equals,content,type,media,type,media,type,get,default,content,type,t,content,type,to,use,media,type,null,media,type,content,type,to,use,if,content,type,to,use,null,headers,set,content,type,content,type,to,use,if,headers,get,content,length,1,long,content,length,get,content,length,t,headers,get,content,type,if,content,length,null,headers,set,content,length,content,length
AbstractHttpMessageConverter -> protected void addDefaultHeaders(HttpHeaders headers, T t, MediaType contentType) throws IOException;1444408470;Add default headers to the output message._<p>This implementation delegates to {@link #getDefaultContentType(Object)} if a content_type was not provided, calls {@link #getContentLength}, and sets the corresponding headers_@since 4.2;protected void addDefaultHeaders(HttpHeaders headers, T t, MediaType contentType) throws IOException{_		if (headers.getContentType() == null) {_			MediaType contentTypeToUse = contentType__			if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) {_				contentTypeToUse = getDefaultContentType(t)__			}_			else if (MediaType.APPLICATION_OCTET_STREAM.equals(contentType)) {_				MediaType mediaType = getDefaultContentType(t)__				contentTypeToUse = (mediaType != null ? mediaType : contentTypeToUse)__			}_			if (contentTypeToUse != null) {_				headers.setContentType(contentTypeToUse)__			}_		}_		if (headers.getContentLength() == -1) {_			Long contentLength = getContentLength(t, headers.getContentType())__			if (contentLength != null) {_				headers.setContentLength(contentLength)__			}_		}_	};add,default,headers,to,the,output,message,p,this,implementation,delegates,to,link,get,default,content,type,object,if,a,content,type,was,not,provided,calls,link,get,content,length,and,sets,the,corresponding,headers,since,4,2;protected,void,add,default,headers,http,headers,headers,t,t,media,type,content,type,throws,ioexception,if,headers,get,content,type,null,media,type,content,type,to,use,content,type,if,content,type,null,content,type,is,wildcard,type,content,type,is,wildcard,subtype,content,type,to,use,get,default,content,type,t,else,if,media,type,equals,content,type,media,type,media,type,get,default,content,type,t,content,type,to,use,media,type,null,media,type,content,type,to,use,if,content,type,to,use,null,headers,set,content,type,content,type,to,use,if,headers,get,content,length,1,long,content,length,get,content,length,t,headers,get,content,type,if,content,length,null,headers,set,content,length,content,length
AbstractHttpMessageConverter -> protected void addDefaultHeaders(HttpHeaders headers, T t, MediaType contentType) throws IOException;1455225853;Add default headers to the output message._<p>This implementation delegates to {@link #getDefaultContentType(Object)} if a content_type was not provided, calls {@link #getContentLength}, and sets the corresponding headers_@since 4.2;protected void addDefaultHeaders(HttpHeaders headers, T t, MediaType contentType) throws IOException{_		if (headers.getContentType() == null) {_			MediaType contentTypeToUse = contentType__			if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) {_				contentTypeToUse = getDefaultContentType(t)__			}_			else if (MediaType.APPLICATION_OCTET_STREAM.equals(contentType)) {_				MediaType mediaType = getDefaultContentType(t)__				contentTypeToUse = (mediaType != null ? mediaType : contentTypeToUse)__			}_			if (contentTypeToUse != null) {_				headers.setContentType(contentTypeToUse)__			}_		}_		if (headers.getContentLength() < 0) {_			Long contentLength = getContentLength(t, headers.getContentType())__			if (contentLength != null) {_				headers.setContentLength(contentLength)__			}_		}_	};add,default,headers,to,the,output,message,p,this,implementation,delegates,to,link,get,default,content,type,object,if,a,content,type,was,not,provided,calls,link,get,content,length,and,sets,the,corresponding,headers,since,4,2;protected,void,add,default,headers,http,headers,headers,t,t,media,type,content,type,throws,ioexception,if,headers,get,content,type,null,media,type,content,type,to,use,content,type,if,content,type,null,content,type,is,wildcard,type,content,type,is,wildcard,subtype,content,type,to,use,get,default,content,type,t,else,if,media,type,equals,content,type,media,type,media,type,get,default,content,type,t,content,type,to,use,media,type,null,media,type,content,type,to,use,if,content,type,to,use,null,headers,set,content,type,content,type,to,use,if,headers,get,content,length,0,long,content,length,get,content,length,t,headers,get,content,type,if,content,length,null,headers,set,content,length,content,length
AbstractHttpMessageConverter -> protected void addDefaultHeaders(HttpHeaders headers, T t, MediaType contentType) throws IOException;1456785272;Add default headers to the output message._<p>This implementation delegates to {@link #getDefaultContentType(Object)} if a content_type was not provided, set if necessary the default character set, calls_{@link #getContentLength}, and sets the corresponding headers._@since 4.2;protected void addDefaultHeaders(HttpHeaders headers, T t, MediaType contentType) throws IOException{_		if (headers.getContentType() == null) {_			MediaType contentTypeToUse = contentType__			if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) {_				contentTypeToUse = getDefaultContentType(t)__			}_			else if (MediaType.APPLICATION_OCTET_STREAM.equals(contentType)) {_				MediaType mediaType = getDefaultContentType(t)__				contentTypeToUse = (mediaType != null ? mediaType : contentTypeToUse)__			}_			if (contentTypeToUse != null) {_				if (contentTypeToUse.getCharSet() == null && this.defaultCharset != null) {_					contentTypeToUse = new MediaType(contentTypeToUse, this.defaultCharset)__				}_				headers.setContentType(contentTypeToUse)__			}_		}_		if (headers.getContentLength() < 0) {_			Long contentLength = getContentLength(t, headers.getContentType())__			if (contentLength != null) {_				headers.setContentLength(contentLength)__			}_		}_	};add,default,headers,to,the,output,message,p,this,implementation,delegates,to,link,get,default,content,type,object,if,a,content,type,was,not,provided,set,if,necessary,the,default,character,set,calls,link,get,content,length,and,sets,the,corresponding,headers,since,4,2;protected,void,add,default,headers,http,headers,headers,t,t,media,type,content,type,throws,ioexception,if,headers,get,content,type,null,media,type,content,type,to,use,content,type,if,content,type,null,content,type,is,wildcard,type,content,type,is,wildcard,subtype,content,type,to,use,get,default,content,type,t,else,if,media,type,equals,content,type,media,type,media,type,get,default,content,type,t,content,type,to,use,media,type,null,media,type,content,type,to,use,if,content,type,to,use,null,if,content,type,to,use,get,char,set,null,this,default,charset,null,content,type,to,use,new,media,type,content,type,to,use,this,default,charset,headers,set,content,type,content,type,to,use,if,headers,get,content,length,0,long,content,length,get,content,length,t,headers,get,content,type,if,content,length,null,headers,set,content,length,content,length
AbstractHttpMessageConverter -> protected void addDefaultHeaders(HttpHeaders headers, T t, MediaType contentType) throws IOException;1458754769;Add default headers to the output message._<p>This implementation delegates to {@link #getDefaultContentType(Object)} if a content_type was not provided, set if necessary the default character set, calls_{@link #getContentLength}, and sets the corresponding headers._@since 4.2;protected void addDefaultHeaders(HttpHeaders headers, T t, MediaType contentType) throws IOException{_		if (headers.getContentType() == null) {_			MediaType contentTypeToUse = contentType__			if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) {_				contentTypeToUse = getDefaultContentType(t)__			}_			else if (MediaType.APPLICATION_OCTET_STREAM.equals(contentType)) {_				MediaType mediaType = getDefaultContentType(t)__				contentTypeToUse = (mediaType != null ? mediaType : contentTypeToUse)__			}_			if (contentTypeToUse != null) {_				if (contentTypeToUse.getCharSet() == null && this.defaultCharset != null) {_					contentTypeToUse = new MediaType(contentTypeToUse, this.defaultCharset)__				}_				headers.setContentType(contentTypeToUse)__			}_		}_		if (headers.getContentLength() < 0) {_			Long contentLength = getContentLength(t, headers.getContentType())__			if (contentLength != null) {_				headers.setContentLength(contentLength)__			}_		}_	};add,default,headers,to,the,output,message,p,this,implementation,delegates,to,link,get,default,content,type,object,if,a,content,type,was,not,provided,set,if,necessary,the,default,character,set,calls,link,get,content,length,and,sets,the,corresponding,headers,since,4,2;protected,void,add,default,headers,http,headers,headers,t,t,media,type,content,type,throws,ioexception,if,headers,get,content,type,null,media,type,content,type,to,use,content,type,if,content,type,null,content,type,is,wildcard,type,content,type,is,wildcard,subtype,content,type,to,use,get,default,content,type,t,else,if,media,type,equals,content,type,media,type,media,type,get,default,content,type,t,content,type,to,use,media,type,null,media,type,content,type,to,use,if,content,type,to,use,null,if,content,type,to,use,get,char,set,null,this,default,charset,null,content,type,to,use,new,media,type,content,type,to,use,this,default,charset,headers,set,content,type,content,type,to,use,if,headers,get,content,length,0,long,content,length,get,content,length,t,headers,get,content,type,if,content,length,null,headers,set,content,length,content,length
AbstractHttpMessageConverter -> protected void addDefaultHeaders(HttpHeaders headers, T t, MediaType contentType) throws IOException;1460565262;Add default headers to the output message._<p>This implementation delegates to {@link #getDefaultContentType(Object)} if a content_type was not provided, set if necessary the default character set, calls_{@link #getContentLength}, and sets the corresponding headers._@since 4.2;protected void addDefaultHeaders(HttpHeaders headers, T t, MediaType contentType) throws IOException{_		if (headers.getContentType() == null) {_			MediaType contentTypeToUse = contentType__			if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) {_				contentTypeToUse = getDefaultContentType(t)__			}_			else if (MediaType.APPLICATION_OCTET_STREAM.equals(contentType)) {_				MediaType mediaType = getDefaultContentType(t)__				contentTypeToUse = (mediaType != null ? mediaType : contentTypeToUse)__			}_			if (contentTypeToUse != null) {_				if (contentTypeToUse.getCharSet() == null && this.defaultCharset != null) {_					contentTypeToUse = new MediaType(contentTypeToUse, this.defaultCharset)__				}_				headers.setContentType(contentTypeToUse)__			}_		}_		if (headers.getContentLength() < 0) {_			Long contentLength = getContentLength(t, headers.getContentType())__			if (contentLength != null) {_				headers.setContentLength(contentLength)__			}_		}_	};add,default,headers,to,the,output,message,p,this,implementation,delegates,to,link,get,default,content,type,object,if,a,content,type,was,not,provided,set,if,necessary,the,default,character,set,calls,link,get,content,length,and,sets,the,corresponding,headers,since,4,2;protected,void,add,default,headers,http,headers,headers,t,t,media,type,content,type,throws,ioexception,if,headers,get,content,type,null,media,type,content,type,to,use,content,type,if,content,type,null,content,type,is,wildcard,type,content,type,is,wildcard,subtype,content,type,to,use,get,default,content,type,t,else,if,media,type,equals,content,type,media,type,media,type,get,default,content,type,t,content,type,to,use,media,type,null,media,type,content,type,to,use,if,content,type,to,use,null,if,content,type,to,use,get,char,set,null,this,default,charset,null,content,type,to,use,new,media,type,content,type,to,use,this,default,charset,headers,set,content,type,content,type,to,use,if,headers,get,content,length,0,long,content,length,get,content,length,t,headers,get,content,type,if,content,length,null,headers,set,content,length,content,length
AbstractHttpMessageConverter -> protected void addDefaultHeaders(HttpHeaders headers, T t, MediaType contentType) throws IOException;1460644739;Add default headers to the output message._<p>This implementation delegates to {@link #getDefaultContentType(Object)} if a content_type was not provided, set if necessary the default character set, calls_{@link #getContentLength}, and sets the corresponding headers._@since 4.2;protected void addDefaultHeaders(HttpHeaders headers, T t, MediaType contentType) throws IOException{_		if (headers.getContentType() == null) {_			MediaType contentTypeToUse = contentType__			if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) {_				contentTypeToUse = getDefaultContentType(t)__			}_			else if (MediaType.APPLICATION_OCTET_STREAM.equals(contentType)) {_				MediaType mediaType = getDefaultContentType(t)__				contentTypeToUse = (mediaType != null ? mediaType : contentTypeToUse)__			}_			if (contentTypeToUse != null) {_				if (contentTypeToUse.getCharset() == null && this.defaultCharset != null) {_					contentTypeToUse = new MediaType(contentTypeToUse, this.defaultCharset)__				}_				headers.setContentType(contentTypeToUse)__			}_		}_		if (headers.getContentLength() < 0) {_			Long contentLength = getContentLength(t, headers.getContentType())__			if (contentLength != null) {_				headers.setContentLength(contentLength)__			}_		}_	};add,default,headers,to,the,output,message,p,this,implementation,delegates,to,link,get,default,content,type,object,if,a,content,type,was,not,provided,set,if,necessary,the,default,character,set,calls,link,get,content,length,and,sets,the,corresponding,headers,since,4,2;protected,void,add,default,headers,http,headers,headers,t,t,media,type,content,type,throws,ioexception,if,headers,get,content,type,null,media,type,content,type,to,use,content,type,if,content,type,null,content,type,is,wildcard,type,content,type,is,wildcard,subtype,content,type,to,use,get,default,content,type,t,else,if,media,type,equals,content,type,media,type,media,type,get,default,content,type,t,content,type,to,use,media,type,null,media,type,content,type,to,use,if,content,type,to,use,null,if,content,type,to,use,get,charset,null,this,default,charset,null,content,type,to,use,new,media,type,content,type,to,use,this,default,charset,headers,set,content,type,content,type,to,use,if,headers,get,content,length,0,long,content,length,get,content,length,t,headers,get,content,type,if,content,length,null,headers,set,content,length,content,length
AbstractHttpMessageConverter -> protected void addDefaultHeaders(HttpHeaders headers, T t, MediaType contentType) throws IOException;1465387124;Add default headers to the output message._<p>This implementation delegates to {@link #getDefaultContentType(Object)} if a content_type was not provided, set if necessary the default character set, calls_{@link #getContentLength}, and sets the corresponding headers._@since 4.2;protected void addDefaultHeaders(HttpHeaders headers, T t, MediaType contentType) throws IOException{_		if (headers.getContentType() == null) {_			MediaType contentTypeToUse = contentType__			if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) {_				contentTypeToUse = getDefaultContentType(t)__			}_			else if (MediaType.APPLICATION_OCTET_STREAM.equals(contentType)) {_				MediaType mediaType = getDefaultContentType(t)__				contentTypeToUse = (mediaType != null ? mediaType : contentTypeToUse)__			}_			if (contentTypeToUse != null) {_				if (contentTypeToUse.getCharset() == null) {_					Charset defaultCharset = getDefaultCharset()__					if (defaultCharset != null) {_						contentTypeToUse = new MediaType(contentTypeToUse, defaultCharset)__					}_				}_				headers.setContentType(contentTypeToUse)__			}_		}_		if (headers.getContentLength() < 0) {_			Long contentLength = getContentLength(t, headers.getContentType())__			if (contentLength != null) {_				headers.setContentLength(contentLength)__			}_		}_	};add,default,headers,to,the,output,message,p,this,implementation,delegates,to,link,get,default,content,type,object,if,a,content,type,was,not,provided,set,if,necessary,the,default,character,set,calls,link,get,content,length,and,sets,the,corresponding,headers,since,4,2;protected,void,add,default,headers,http,headers,headers,t,t,media,type,content,type,throws,ioexception,if,headers,get,content,type,null,media,type,content,type,to,use,content,type,if,content,type,null,content,type,is,wildcard,type,content,type,is,wildcard,subtype,content,type,to,use,get,default,content,type,t,else,if,media,type,equals,content,type,media,type,media,type,get,default,content,type,t,content,type,to,use,media,type,null,media,type,content,type,to,use,if,content,type,to,use,null,if,content,type,to,use,get,charset,null,charset,default,charset,get,default,charset,if,default,charset,null,content,type,to,use,new,media,type,content,type,to,use,default,charset,headers,set,content,type,content,type,to,use,if,headers,get,content,length,0,long,content,length,get,content,length,t,headers,get,content,type,if,content,length,null,headers,set,content,length,content,length
AbstractHttpMessageConverter -> protected void addDefaultHeaders(HttpHeaders headers, T t, MediaType contentType) throws IOException;1467730834;Add default headers to the output message._<p>This implementation delegates to {@link #getDefaultContentType(Object)} if a content_type was not provided, set if necessary the default character set, calls_{@link #getContentLength}, and sets the corresponding headers._@since 4.2;protected void addDefaultHeaders(HttpHeaders headers, T t, MediaType contentType) throws IOException{_		if (headers.getContentType() == null) {_			MediaType contentTypeToUse = contentType__			if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) {_				contentTypeToUse = getDefaultContentType(t)__			}_			else if (MediaType.APPLICATION_OCTET_STREAM.equals(contentType)) {_				MediaType mediaType = getDefaultContentType(t)__				contentTypeToUse = (mediaType != null ? mediaType : contentTypeToUse)__			}_			if (contentTypeToUse != null) {_				if (contentTypeToUse.getCharset() == null) {_					Charset defaultCharset = getDefaultCharset()__					if (defaultCharset != null) {_						contentTypeToUse = new MediaType(contentTypeToUse, defaultCharset)__					}_				}_				headers.setContentType(contentTypeToUse)__			}_		}_		if (headers.getContentLength() < 0) {_			Long contentLength = getContentLength(t, headers.getContentType())__			if (contentLength != null) {_				headers.setContentLength(contentLength)__			}_		}_	};add,default,headers,to,the,output,message,p,this,implementation,delegates,to,link,get,default,content,type,object,if,a,content,type,was,not,provided,set,if,necessary,the,default,character,set,calls,link,get,content,length,and,sets,the,corresponding,headers,since,4,2;protected,void,add,default,headers,http,headers,headers,t,t,media,type,content,type,throws,ioexception,if,headers,get,content,type,null,media,type,content,type,to,use,content,type,if,content,type,null,content,type,is,wildcard,type,content,type,is,wildcard,subtype,content,type,to,use,get,default,content,type,t,else,if,media,type,equals,content,type,media,type,media,type,get,default,content,type,t,content,type,to,use,media,type,null,media,type,content,type,to,use,if,content,type,to,use,null,if,content,type,to,use,get,charset,null,charset,default,charset,get,default,charset,if,default,charset,null,content,type,to,use,new,media,type,content,type,to,use,default,charset,headers,set,content,type,content,type,to,use,if,headers,get,content,length,0,long,content,length,get,content,length,t,headers,get,content,type,if,content,length,null,headers,set,content,length,content,length
AbstractHttpMessageConverter -> protected void addDefaultHeaders(HttpHeaders headers, T t, MediaType contentType) throws IOException;1486062070;Add default headers to the output message._<p>This implementation delegates to {@link #getDefaultContentType(Object)} if a_content type was not provided, set if necessary the default character set, calls_{@link #getContentLength}, and sets the corresponding headers._@since 4.2;protected void addDefaultHeaders(HttpHeaders headers, T t, MediaType contentType) throws IOException{_		if (headers.getContentType() == null) {_			MediaType contentTypeToUse = contentType__			if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) {_				contentTypeToUse = getDefaultContentType(t)__			}_			else if (MediaType.APPLICATION_OCTET_STREAM.equals(contentType)) {_				MediaType mediaType = getDefaultContentType(t)__				contentTypeToUse = (mediaType != null ? mediaType : contentTypeToUse)__			}_			if (contentTypeToUse != null) {_				if (contentTypeToUse.getCharset() == null) {_					Charset defaultCharset = getDefaultCharset()__					if (defaultCharset != null) {_						contentTypeToUse = new MediaType(contentTypeToUse, defaultCharset)__					}_				}_				headers.setContentType(contentTypeToUse)__			}_		}_		if (headers.getContentLength() < 0 && !headers.containsKey(HttpHeaders.TRANSFER_ENCODING)) {_			Long contentLength = getContentLength(t, headers.getContentType())__			if (contentLength != null) {_				headers.setContentLength(contentLength)__			}_		}_	};add,default,headers,to,the,output,message,p,this,implementation,delegates,to,link,get,default,content,type,object,if,a,content,type,was,not,provided,set,if,necessary,the,default,character,set,calls,link,get,content,length,and,sets,the,corresponding,headers,since,4,2;protected,void,add,default,headers,http,headers,headers,t,t,media,type,content,type,throws,ioexception,if,headers,get,content,type,null,media,type,content,type,to,use,content,type,if,content,type,null,content,type,is,wildcard,type,content,type,is,wildcard,subtype,content,type,to,use,get,default,content,type,t,else,if,media,type,equals,content,type,media,type,media,type,get,default,content,type,t,content,type,to,use,media,type,null,media,type,content,type,to,use,if,content,type,to,use,null,if,content,type,to,use,get,charset,null,charset,default,charset,get,default,charset,if,default,charset,null,content,type,to,use,new,media,type,content,type,to,use,default,charset,headers,set,content,type,content,type,to,use,if,headers,get,content,length,0,headers,contains,key,http,headers,long,content,length,get,content,length,t,headers,get,content,type,if,content,length,null,headers,set,content,length,content,length
AbstractHttpMessageConverter -> protected void addDefaultHeaders(HttpHeaders headers, T t, MediaType contentType) throws IOException;1495868221;Add default headers to the output message._<p>This implementation delegates to {@link #getDefaultContentType(Object)} if a_content type was not provided, set if necessary the default character set, calls_{@link #getContentLength}, and sets the corresponding headers._@since 4.2;protected void addDefaultHeaders(HttpHeaders headers, T t, MediaType contentType) throws IOException{_		if (headers.getContentType() == null) {_			MediaType contentTypeToUse = contentType__			if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) {_				contentTypeToUse = getDefaultContentType(t)__			}_			else if (MediaType.APPLICATION_OCTET_STREAM.equals(contentType)) {_				MediaType mediaType = getDefaultContentType(t)__				contentTypeToUse = (mediaType != null ? mediaType : contentTypeToUse)__			}_			if (contentTypeToUse != null) {_				if (contentTypeToUse.getCharset() == null) {_					Charset defaultCharset = getDefaultCharset()__					if (defaultCharset != null) {_						contentTypeToUse = new MediaType(contentTypeToUse, defaultCharset)__					}_				}_				headers.setContentType(contentTypeToUse)__			}_		}_		if (headers.getContentLength() < 0 && !headers.containsKey(HttpHeaders.TRANSFER_ENCODING)) {_			Long contentLength = getContentLength(t, headers.getContentType())__			if (contentLength != null) {_				headers.setContentLength(contentLength)__			}_		}_	};add,default,headers,to,the,output,message,p,this,implementation,delegates,to,link,get,default,content,type,object,if,a,content,type,was,not,provided,set,if,necessary,the,default,character,set,calls,link,get,content,length,and,sets,the,corresponding,headers,since,4,2;protected,void,add,default,headers,http,headers,headers,t,t,media,type,content,type,throws,ioexception,if,headers,get,content,type,null,media,type,content,type,to,use,content,type,if,content,type,null,content,type,is,wildcard,type,content,type,is,wildcard,subtype,content,type,to,use,get,default,content,type,t,else,if,media,type,equals,content,type,media,type,media,type,get,default,content,type,t,content,type,to,use,media,type,null,media,type,content,type,to,use,if,content,type,to,use,null,if,content,type,to,use,get,charset,null,charset,default,charset,get,default,charset,if,default,charset,null,content,type,to,use,new,media,type,content,type,to,use,default,charset,headers,set,content,type,content,type,to,use,if,headers,get,content,length,0,headers,contains,key,http,headers,long,content,length,get,content,length,t,headers,get,content,type,if,content,length,null,headers,set,content,length,content,length
AbstractHttpMessageConverter -> @Override 	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException;1530563849;This implementation simple delegates to {@link #readInternal(Class, HttpInputMessage)}._Future implementations might add some default behavior, however.;@Override_	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException {__		return readInternal(clazz, inputMessage)__	};this,implementation,simple,delegates,to,link,read,internal,class,http,input,message,future,implementations,might,add,some,default,behavior,however;override,public,final,t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception,return,read,internal,clazz,input,message
AbstractHttpMessageConverter -> @Override 	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException;1530975243;This implementation simple delegates to {@link #readInternal(Class, HttpInputMessage)}._Future implementations might add some default behavior, however.;@Override_	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException {__		return readInternal(clazz, inputMessage)__	};this,implementation,simple,delegates,to,link,read,internal,class,http,input,message,future,implementations,might,add,some,default,behavior,however;override,public,final,t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception,return,read,internal,clazz,input,message
AbstractHttpMessageConverter -> @Override 	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException;1531942370;This implementation simple delegates to {@link #readInternal(Class, HttpInputMessage)}._Future implementations might add some default behavior, however.;@Override_	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException {__		return readInternal(clazz, inputMessage)__	};this,implementation,simple,delegates,to,link,read,internal,class,http,input,message,future,implementations,might,add,some,default,behavior,however;override,public,final,t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception,return,read,internal,clazz,input,message
AbstractHttpMessageConverter -> @Override 	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException;1546457570;This implementation simple delegates to {@link #readInternal(Class, HttpInputMessage)}._Future implementations might add some default behavior, however.;@Override_	public final T read(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException {__		return readInternal(clazz, inputMessage)__	};this,implementation,simple,delegates,to,link,read,internal,class,http,input,message,future,implementations,might,add,some,default,behavior,however;override,public,final,t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception,return,read,internal,clazz,input,message
AbstractHttpMessageConverter -> public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes);1328020251;Set the list of {@link MediaType} objects supported by this converter.;public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {_		Assert.notEmpty(supportedMediaTypes, "'supportedMediaTypes' must not be empty")__		this.supportedMediaTypes = new ArrayList<MediaType>(supportedMediaTypes)__	};set,the,list,of,link,media,type,objects,supported,by,this,converter;public,void,set,supported,media,types,list,media,type,supported,media,types,assert,not,empty,supported,media,types,supported,media,types,must,not,be,empty,this,supported,media,types,new,array,list,media,type,supported,media,types
AbstractHttpMessageConverter -> public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes);1354627794;Set the list of {@link MediaType} objects supported by this converter.;public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {_		Assert.notEmpty(supportedMediaTypes, "'supportedMediaTypes' must not be empty")__		this.supportedMediaTypes = new ArrayList<MediaType>(supportedMediaTypes)__	};set,the,list,of,link,media,type,objects,supported,by,this,converter;public,void,set,supported,media,types,list,media,type,supported,media,types,assert,not,empty,supported,media,types,supported,media,types,must,not,be,empty,this,supported,media,types,new,array,list,media,type,supported,media,types
AbstractHttpMessageConverter -> public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes);1356735495;Set the list of {@link MediaType} objects supported by this converter.;public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {_		Assert.notEmpty(supportedMediaTypes, "'supportedMediaTypes' must not be empty")__		this.supportedMediaTypes = new ArrayList<MediaType>(supportedMediaTypes)__	};set,the,list,of,link,media,type,objects,supported,by,this,converter;public,void,set,supported,media,types,list,media,type,supported,media,types,assert,not,empty,supported,media,types,supported,media,types,must,not,be,empty,this,supported,media,types,new,array,list,media,type,supported,media,types
AbstractHttpMessageConverter -> public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes);1357119239;Set the list of {@link MediaType} objects supported by this converter.;public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {_		Assert.notEmpty(supportedMediaTypes, "'supportedMediaTypes' must not be empty")__		this.supportedMediaTypes = new ArrayList<MediaType>(supportedMediaTypes)__	};set,the,list,of,link,media,type,objects,supported,by,this,converter;public,void,set,supported,media,types,list,media,type,supported,media,types,assert,not,empty,supported,media,types,supported,media,types,must,not,be,empty,this,supported,media,types,new,array,list,media,type,supported,media,types
AbstractHttpMessageConverter -> public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes);1368482696;Set the list of {@link MediaType} objects supported by this converter.;public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {_		Assert.notEmpty(supportedMediaTypes, "'supportedMediaTypes' must not be empty")__		this.supportedMediaTypes = new ArrayList<MediaType>(supportedMediaTypes)__	};set,the,list,of,link,media,type,objects,supported,by,this,converter;public,void,set,supported,media,types,list,media,type,supported,media,types,assert,not,empty,supported,media,types,supported,media,types,must,not,be,empty,this,supported,media,types,new,array,list,media,type,supported,media,types
AbstractHttpMessageConverter -> public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes);1374115410;Set the list of {@link MediaType} objects supported by this converter.;public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {_		Assert.notEmpty(supportedMediaTypes, "'supportedMediaTypes' must not be empty")__		this.supportedMediaTypes = new ArrayList<MediaType>(supportedMediaTypes)__	};set,the,list,of,link,media,type,objects,supported,by,this,converter;public,void,set,supported,media,types,list,media,type,supported,media,types,assert,not,empty,supported,media,types,supported,media,types,must,not,be,empty,this,supported,media,types,new,array,list,media,type,supported,media,types
AbstractHttpMessageConverter -> public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes);1375461043;Set the list of {@link MediaType} objects supported by this converter.;public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {_		Assert.notEmpty(supportedMediaTypes, "'supportedMediaTypes' must not be empty")__		this.supportedMediaTypes = new ArrayList<MediaType>(supportedMediaTypes)__	};set,the,list,of,link,media,type,objects,supported,by,this,converter;public,void,set,supported,media,types,list,media,type,supported,media,types,assert,not,empty,supported,media,types,supported,media,types,must,not,be,empty,this,supported,media,types,new,array,list,media,type,supported,media,types
AbstractHttpMessageConverter -> public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes);1397767187;Set the list of {@link MediaType} objects supported by this converter.;public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {_		Assert.notEmpty(supportedMediaTypes, "'supportedMediaTypes' must not be empty")__		this.supportedMediaTypes = new ArrayList<MediaType>(supportedMediaTypes)__	};set,the,list,of,link,media,type,objects,supported,by,this,converter;public,void,set,supported,media,types,list,media,type,supported,media,types,assert,not,empty,supported,media,types,supported,media,types,must,not,be,empty,this,supported,media,types,new,array,list,media,type,supported,media,types
AbstractHttpMessageConverter -> public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes);1428949885;Set the list of {@link MediaType} objects supported by this converter.;public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {_		Assert.notEmpty(supportedMediaTypes, "'supportedMediaTypes' must not be empty")__		this.supportedMediaTypes = new ArrayList<MediaType>(supportedMediaTypes)__	};set,the,list,of,link,media,type,objects,supported,by,this,converter;public,void,set,supported,media,types,list,media,type,supported,media,types,assert,not,empty,supported,media,types,supported,media,types,must,not,be,empty,this,supported,media,types,new,array,list,media,type,supported,media,types
AbstractHttpMessageConverter -> public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes);1434985545;Set the list of {@link MediaType} objects supported by this converter.;public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {_		Assert.notEmpty(supportedMediaTypes, "'supportedMediaTypes' must not be empty")__		this.supportedMediaTypes = new ArrayList<MediaType>(supportedMediaTypes)__	};set,the,list,of,link,media,type,objects,supported,by,this,converter;public,void,set,supported,media,types,list,media,type,supported,media,types,assert,not,empty,supported,media,types,supported,media,types,must,not,be,empty,this,supported,media,types,new,array,list,media,type,supported,media,types
AbstractHttpMessageConverter -> public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes);1438251419;Set the list of {@link MediaType} objects supported by this converter.;public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {_		Assert.notEmpty(supportedMediaTypes, "'supportedMediaTypes' must not be empty")__		this.supportedMediaTypes = new ArrayList<MediaType>(supportedMediaTypes)__	};set,the,list,of,link,media,type,objects,supported,by,this,converter;public,void,set,supported,media,types,list,media,type,supported,media,types,assert,not,empty,supported,media,types,supported,media,types,must,not,be,empty,this,supported,media,types,new,array,list,media,type,supported,media,types
AbstractHttpMessageConverter -> public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes);1444408470;Set the list of {@link MediaType} objects supported by this converter.;public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {_		Assert.notEmpty(supportedMediaTypes, "'supportedMediaTypes' must not be empty")__		this.supportedMediaTypes = new ArrayList<MediaType>(supportedMediaTypes)__	};set,the,list,of,link,media,type,objects,supported,by,this,converter;public,void,set,supported,media,types,list,media,type,supported,media,types,assert,not,empty,supported,media,types,supported,media,types,must,not,be,empty,this,supported,media,types,new,array,list,media,type,supported,media,types
AbstractHttpMessageConverter -> public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes);1455225853;Set the list of {@link MediaType} objects supported by this converter.;public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {_		Assert.notEmpty(supportedMediaTypes, "'supportedMediaTypes' must not be empty")__		this.supportedMediaTypes = new ArrayList<MediaType>(supportedMediaTypes)__	};set,the,list,of,link,media,type,objects,supported,by,this,converter;public,void,set,supported,media,types,list,media,type,supported,media,types,assert,not,empty,supported,media,types,supported,media,types,must,not,be,empty,this,supported,media,types,new,array,list,media,type,supported,media,types
AbstractHttpMessageConverter -> public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes);1456785272;Set the list of {@link MediaType} objects supported by this converter.;public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {_		Assert.notEmpty(supportedMediaTypes, "'supportedMediaTypes' must not be empty")__		this.supportedMediaTypes = new ArrayList<MediaType>(supportedMediaTypes)__	};set,the,list,of,link,media,type,objects,supported,by,this,converter;public,void,set,supported,media,types,list,media,type,supported,media,types,assert,not,empty,supported,media,types,supported,media,types,must,not,be,empty,this,supported,media,types,new,array,list,media,type,supported,media,types
AbstractHttpMessageConverter -> public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes);1458754769;Set the list of {@link MediaType} objects supported by this converter.;public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {_		Assert.notEmpty(supportedMediaTypes, "'supportedMediaTypes' must not be empty")__		this.supportedMediaTypes = new ArrayList<MediaType>(supportedMediaTypes)__	};set,the,list,of,link,media,type,objects,supported,by,this,converter;public,void,set,supported,media,types,list,media,type,supported,media,types,assert,not,empty,supported,media,types,supported,media,types,must,not,be,empty,this,supported,media,types,new,array,list,media,type,supported,media,types
AbstractHttpMessageConverter -> public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes);1460565262;Set the list of {@link MediaType} objects supported by this converter.;public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {_		Assert.notEmpty(supportedMediaTypes, "'supportedMediaTypes' must not be empty")__		this.supportedMediaTypes = new ArrayList<MediaType>(supportedMediaTypes)__	};set,the,list,of,link,media,type,objects,supported,by,this,converter;public,void,set,supported,media,types,list,media,type,supported,media,types,assert,not,empty,supported,media,types,supported,media,types,must,not,be,empty,this,supported,media,types,new,array,list,media,type,supported,media,types
AbstractHttpMessageConverter -> public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes);1460644739;Set the list of {@link MediaType} objects supported by this converter.;public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {_		Assert.notEmpty(supportedMediaTypes, "'supportedMediaTypes' must not be empty")__		this.supportedMediaTypes = new ArrayList<MediaType>(supportedMediaTypes)__	};set,the,list,of,link,media,type,objects,supported,by,this,converter;public,void,set,supported,media,types,list,media,type,supported,media,types,assert,not,empty,supported,media,types,supported,media,types,must,not,be,empty,this,supported,media,types,new,array,list,media,type,supported,media,types
AbstractHttpMessageConverter -> public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes);1465387124;Set the list of {@link MediaType} objects supported by this converter.;public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {_		Assert.notEmpty(supportedMediaTypes, "'supportedMediaTypes' must not be empty")__		this.supportedMediaTypes = new ArrayList<MediaType>(supportedMediaTypes)__	};set,the,list,of,link,media,type,objects,supported,by,this,converter;public,void,set,supported,media,types,list,media,type,supported,media,types,assert,not,empty,supported,media,types,supported,media,types,must,not,be,empty,this,supported,media,types,new,array,list,media,type,supported,media,types
AbstractHttpMessageConverter -> public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes);1467730834;Set the list of {@link MediaType} objects supported by this converter.;public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {_		Assert.notEmpty(supportedMediaTypes, "'supportedMediaTypes' must not be empty")__		this.supportedMediaTypes = new ArrayList<>(supportedMediaTypes)__	};set,the,list,of,link,media,type,objects,supported,by,this,converter;public,void,set,supported,media,types,list,media,type,supported,media,types,assert,not,empty,supported,media,types,supported,media,types,must,not,be,empty,this,supported,media,types,new,array,list,supported,media,types
AbstractHttpMessageConverter -> public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes);1486062070;Set the list of {@link MediaType} objects supported by this converter.;public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {_		Assert.notEmpty(supportedMediaTypes, "MediaType List must not be empty")__		this.supportedMediaTypes = new ArrayList<>(supportedMediaTypes)__	};set,the,list,of,link,media,type,objects,supported,by,this,converter;public,void,set,supported,media,types,list,media,type,supported,media,types,assert,not,empty,supported,media,types,media,type,list,must,not,be,empty,this,supported,media,types,new,array,list,supported,media,types
AbstractHttpMessageConverter -> public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes);1495868221;Set the list of {@link MediaType} objects supported by this converter.;public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {_		Assert.notEmpty(supportedMediaTypes, "MediaType List must not be empty")__		this.supportedMediaTypes = new ArrayList<>(supportedMediaTypes)__	};set,the,list,of,link,media,type,objects,supported,by,this,converter;public,void,set,supported,media,types,list,media,type,supported,media,types,assert,not,empty,supported,media,types,media,type,list,must,not,be,empty,this,supported,media,types,new,array,list,supported,media,types
AbstractHttpMessageConverter -> public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes);1496242568;Set the list of {@link MediaType} objects supported by this converter.;public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {_		Assert.notEmpty(supportedMediaTypes, "MediaType List must not be empty")__		this.supportedMediaTypes = new ArrayList<>(supportedMediaTypes)__	};set,the,list,of,link,media,type,objects,supported,by,this,converter;public,void,set,supported,media,types,list,media,type,supported,media,types,assert,not,empty,supported,media,types,media,type,list,must,not,be,empty,this,supported,media,types,new,array,list,supported,media,types
AbstractHttpMessageConverter -> public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes);1496259743;Set the list of {@link MediaType} objects supported by this converter.;public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {_		Assert.notEmpty(supportedMediaTypes, "MediaType List must not be empty")__		this.supportedMediaTypes = new ArrayList<>(supportedMediaTypes)__	};set,the,list,of,link,media,type,objects,supported,by,this,converter;public,void,set,supported,media,types,list,media,type,supported,media,types,assert,not,empty,supported,media,types,media,type,list,must,not,be,empty,this,supported,media,types,new,array,list,supported,media,types
AbstractHttpMessageConverter -> public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes);1496837955;Set the list of {@link MediaType} objects supported by this converter.;public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {_		Assert.notEmpty(supportedMediaTypes, "MediaType List must not be empty")__		this.supportedMediaTypes = new ArrayList<>(supportedMediaTypes)__	};set,the,list,of,link,media,type,objects,supported,by,this,converter;public,void,set,supported,media,types,list,media,type,supported,media,types,assert,not,empty,supported,media,types,media,type,list,must,not,be,empty,this,supported,media,types,new,array,list,supported,media,types
AbstractHttpMessageConverter -> public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes);1500448076;Set the list of {@link MediaType} objects supported by this converter.;public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {_		Assert.notEmpty(supportedMediaTypes, "MediaType List must not be empty")__		this.supportedMediaTypes = new ArrayList<>(supportedMediaTypes)__	};set,the,list,of,link,media,type,objects,supported,by,this,converter;public,void,set,supported,media,types,list,media,type,supported,media,types,assert,not,empty,supported,media,types,media,type,list,must,not,be,empty,this,supported,media,types,new,array,list,supported,media,types
AbstractHttpMessageConverter -> public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes);1500457438;Set the list of {@link MediaType} objects supported by this converter.;public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {_		Assert.notEmpty(supportedMediaTypes, "MediaType List must not be empty")__		this.supportedMediaTypes = new ArrayList<>(supportedMediaTypes)__	};set,the,list,of,link,media,type,objects,supported,by,this,converter;public,void,set,supported,media,types,list,media,type,supported,media,types,assert,not,empty,supported,media,types,media,type,list,must,not,be,empty,this,supported,media,types,new,array,list,supported,media,types
AbstractHttpMessageConverter -> public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes);1520890308;Set the list of {@link MediaType} objects supported by this converter.;public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {_		Assert.notEmpty(supportedMediaTypes, "MediaType List must not be empty")__		this.supportedMediaTypes = new ArrayList<>(supportedMediaTypes)__	};set,the,list,of,link,media,type,objects,supported,by,this,converter;public,void,set,supported,media,types,list,media,type,supported,media,types,assert,not,empty,supported,media,types,media,type,list,must,not,be,empty,this,supported,media,types,new,array,list,supported,media,types
AbstractHttpMessageConverter -> public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes);1530174524;Set the list of {@link MediaType} objects supported by this converter.;public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {_		Assert.notEmpty(supportedMediaTypes, "MediaType List must not be empty")__		this.supportedMediaTypes = new ArrayList<>(supportedMediaTypes)__	};set,the,list,of,link,media,type,objects,supported,by,this,converter;public,void,set,supported,media,types,list,media,type,supported,media,types,assert,not,empty,supported,media,types,media,type,list,must,not,be,empty,this,supported,media,types,new,array,list,supported,media,types
AbstractHttpMessageConverter -> public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes);1530563849;Set the list of {@link MediaType} objects supported by this converter.;public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {_		Assert.notEmpty(supportedMediaTypes, "MediaType List must not be empty")__		this.supportedMediaTypes = new ArrayList<>(supportedMediaTypes)__	};set,the,list,of,link,media,type,objects,supported,by,this,converter;public,void,set,supported,media,types,list,media,type,supported,media,types,assert,not,empty,supported,media,types,media,type,list,must,not,be,empty,this,supported,media,types,new,array,list,supported,media,types
AbstractHttpMessageConverter -> public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes);1530975243;Set the list of {@link MediaType} objects supported by this converter.;public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {_		Assert.notEmpty(supportedMediaTypes, "MediaType List must not be empty")__		this.supportedMediaTypes = new ArrayList<>(supportedMediaTypes)__	};set,the,list,of,link,media,type,objects,supported,by,this,converter;public,void,set,supported,media,types,list,media,type,supported,media,types,assert,not,empty,supported,media,types,media,type,list,must,not,be,empty,this,supported,media,types,new,array,list,supported,media,types
AbstractHttpMessageConverter -> public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes);1531942370;Set the list of {@link MediaType} objects supported by this converter.;public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {_		Assert.notEmpty(supportedMediaTypes, "MediaType List must not be empty")__		this.supportedMediaTypes = new ArrayList<>(supportedMediaTypes)__	};set,the,list,of,link,media,type,objects,supported,by,this,converter;public,void,set,supported,media,types,list,media,type,supported,media,types,assert,not,empty,supported,media,types,media,type,list,must,not,be,empty,this,supported,media,types,new,array,list,supported,media,types
AbstractHttpMessageConverter -> public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes);1546457570;Set the list of {@link MediaType} objects supported by this converter.;public void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {_		Assert.notEmpty(supportedMediaTypes, "MediaType List must not be empty")__		this.supportedMediaTypes = new ArrayList<>(supportedMediaTypes)__	};set,the,list,of,link,media,type,objects,supported,by,this,converter;public,void,set,supported,media,types,list,media,type,supported,media,types,assert,not,empty,supported,media,types,media,type,list,must,not,be,empty,this,supported,media,types,new,array,list,supported,media,types
AbstractHttpMessageConverter -> public final void write(T t, MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException;1328020251;This implementation delegates to {@link #getDefaultContentType(Object)} if a content_type was not provided, calls {@link #getContentLength}, and sets the corresponding headers_on the output message. It then calls {@link #writeInternal}.;public final void write(T t, MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException {__		HttpHeaders headers = outputMessage.getHeaders()__		if (headers.getContentType() == null) {_			if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) {_				contentType = getDefaultContentType(t)__			}_			if (contentType != null) {_				headers.setContentType(contentType)__			}_		}_		if (headers.getContentLength() == -1) {_			Long contentLength = getContentLength(t, headers.getContentType())__			if (contentLength != null) {_				headers.setContentLength(contentLength)__			}_		}_		writeInternal(t, outputMessage)__		outputMessage.getBody().flush()__	};this,implementation,delegates,to,link,get,default,content,type,object,if,a,content,type,was,not,provided,calls,link,get,content,length,and,sets,the,corresponding,headers,on,the,output,message,it,then,calls,link,write,internal;public,final,void,write,t,t,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception,http,headers,headers,output,message,get,headers,if,headers,get,content,type,null,if,content,type,null,content,type,is,wildcard,type,content,type,is,wildcard,subtype,content,type,get,default,content,type,t,if,content,type,null,headers,set,content,type,content,type,if,headers,get,content,length,1,long,content,length,get,content,length,t,headers,get,content,type,if,content,length,null,headers,set,content,length,content,length,write,internal,t,output,message,output,message,get,body,flush
AbstractHttpMessageConverter -> public final void write(T t, MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException;1354627794;This implementation delegates to {@link #getDefaultContentType(Object)} if a content_type was not provided, calls {@link #getContentLength}, and sets the corresponding headers_on the output message. It then calls {@link #writeInternal}.;public final void write(T t, MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException {__		HttpHeaders headers = outputMessage.getHeaders()__		if (headers.getContentType() == null) {_			if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) {_				contentType = getDefaultContentType(t)__			}_			if (contentType != null) {_				headers.setContentType(contentType)__			}_		}_		if (headers.getContentLength() == -1) {_			Long contentLength = getContentLength(t, headers.getContentType())__			if (contentLength != null) {_				headers.setContentLength(contentLength)__			}_		}_		writeInternal(t, outputMessage)__		outputMessage.getBody().flush()__	};this,implementation,delegates,to,link,get,default,content,type,object,if,a,content,type,was,not,provided,calls,link,get,content,length,and,sets,the,corresponding,headers,on,the,output,message,it,then,calls,link,write,internal;public,final,void,write,t,t,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception,http,headers,headers,output,message,get,headers,if,headers,get,content,type,null,if,content,type,null,content,type,is,wildcard,type,content,type,is,wildcard,subtype,content,type,get,default,content,type,t,if,content,type,null,headers,set,content,type,content,type,if,headers,get,content,length,1,long,content,length,get,content,length,t,headers,get,content,type,if,content,length,null,headers,set,content,length,content,length,write,internal,t,output,message,output,message,get,body,flush
AbstractHttpMessageConverter -> public final void write(T t, MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException;1357119239;This implementation delegates to {@link #getDefaultContentType(Object)} if a content_type was not provided, calls {@link #getContentLength}, and sets the corresponding headers_on the output message. It then calls {@link #writeInternal}.;public final void write(T t, MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException {__		HttpHeaders headers = outputMessage.getHeaders()__		if (headers.getContentType() == null) {_			if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) {_				contentType = getDefaultContentType(t)__			}_			if (contentType != null) {_				headers.setContentType(contentType)__			}_		}_		if (headers.getContentLength() == -1) {_			Long contentLength = getContentLength(t, headers.getContentType())__			if (contentLength != null) {_				headers.setContentLength(contentLength)__			}_		}_		writeInternal(t, outputMessage)__		outputMessage.getBody().flush()__	};this,implementation,delegates,to,link,get,default,content,type,object,if,a,content,type,was,not,provided,calls,link,get,content,length,and,sets,the,corresponding,headers,on,the,output,message,it,then,calls,link,write,internal;public,final,void,write,t,t,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception,http,headers,headers,output,message,get,headers,if,headers,get,content,type,null,if,content,type,null,content,type,is,wildcard,type,content,type,is,wildcard,subtype,content,type,get,default,content,type,t,if,content,type,null,headers,set,content,type,content,type,if,headers,get,content,length,1,long,content,length,get,content,length,t,headers,get,content,type,if,content,length,null,headers,set,content,length,content,length,write,internal,t,output,message,output,message,get,body,flush
AbstractHttpMessageConverter -> protected boolean canWrite(@Nullable MediaType mediaType);1495868221;Returns {@code true} if the given media type includes any of the_{@linkplain #setSupportedMediaTypes(List) supported media types}._@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@return {@code true} if the supported media types are compatible with the media type,_or if the media type is {@code null};protected boolean canWrite(@Nullable MediaType mediaType) {_		if (mediaType == null || MediaType.ALL.equals(mediaType)) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.isCompatibleWith(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,given,media,type,includes,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,the,supported,media,types,are,compatible,with,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,write,nullable,media,type,media,type,if,media,type,null,media,type,all,equals,media,type,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,is,compatible,with,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canWrite(@Nullable MediaType mediaType);1496242568;Returns {@code true} if the given media type includes any of the_{@linkplain #setSupportedMediaTypes(List) supported media types}._@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@return {@code true} if the supported media types are compatible with the media type,_or if the media type is {@code null};protected boolean canWrite(@Nullable MediaType mediaType) {_		if (mediaType == null || MediaType.ALL.equals(mediaType)) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.isCompatibleWith(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,given,media,type,includes,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,the,supported,media,types,are,compatible,with,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,write,nullable,media,type,media,type,if,media,type,null,media,type,all,equals,media,type,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,is,compatible,with,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canWrite(@Nullable MediaType mediaType);1496259743;Returns {@code true} if the given media type includes any of the_{@linkplain #setSupportedMediaTypes(List) supported media types}._@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@return {@code true} if the supported media types are compatible with the media type,_or if the media type is {@code null};protected boolean canWrite(@Nullable MediaType mediaType) {_		if (mediaType == null || MediaType.ALL.equals(mediaType)) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.isCompatibleWith(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,given,media,type,includes,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,the,supported,media,types,are,compatible,with,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,write,nullable,media,type,media,type,if,media,type,null,media,type,all,equals,media,type,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,is,compatible,with,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canWrite(@Nullable MediaType mediaType);1496837955;Returns {@code true} if the given media type includes any of the_{@linkplain #setSupportedMediaTypes(List) supported media types}._@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@return {@code true} if the supported media types are compatible with the media type,_or if the media type is {@code null};protected boolean canWrite(@Nullable MediaType mediaType) {_		if (mediaType == null || MediaType.ALL.equals(mediaType)) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.isCompatibleWith(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,given,media,type,includes,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,the,supported,media,types,are,compatible,with,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,write,nullable,media,type,media,type,if,media,type,null,media,type,all,equals,media,type,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,is,compatible,with,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canWrite(@Nullable MediaType mediaType);1500448076;Returns {@code true} if the given media type includes any of the_{@linkplain #setSupportedMediaTypes(List) supported media types}._@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@return {@code true} if the supported media types are compatible with the media type,_or if the media type is {@code null};protected boolean canWrite(@Nullable MediaType mediaType) {_		if (mediaType == null || MediaType.ALL.equals(mediaType)) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.isCompatibleWith(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,given,media,type,includes,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,the,supported,media,types,are,compatible,with,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,write,nullable,media,type,media,type,if,media,type,null,media,type,all,equals,media,type,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,is,compatible,with,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canWrite(@Nullable MediaType mediaType);1500457438;Returns {@code true} if the given media type includes any of the_{@linkplain #setSupportedMediaTypes(List) supported media types}._@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@return {@code true} if the supported media types are compatible with the media type,_or if the media type is {@code null};protected boolean canWrite(@Nullable MediaType mediaType) {_		if (mediaType == null || MediaType.ALL.equals(mediaType)) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.isCompatibleWith(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,given,media,type,includes,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,the,supported,media,types,are,compatible,with,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,write,nullable,media,type,media,type,if,media,type,null,media,type,all,equals,media,type,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,is,compatible,with,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canWrite(@Nullable MediaType mediaType);1520890308;Returns {@code true} if the given media type includes any of the_{@linkplain #setSupportedMediaTypes(List) supported media types}._@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@return {@code true} if the supported media types are compatible with the media type,_or if the media type is {@code null};protected boolean canWrite(@Nullable MediaType mediaType) {_		if (mediaType == null || MediaType.ALL.equals(mediaType)) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.isCompatibleWith(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,given,media,type,includes,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,the,supported,media,types,are,compatible,with,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,write,nullable,media,type,media,type,if,media,type,null,media,type,all,equals,media,type,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,is,compatible,with,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canWrite(@Nullable MediaType mediaType);1530174524;Returns {@code true} if the given media type includes any of the_{@linkplain #setSupportedMediaTypes(List) supported media types}._@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@return {@code true} if the supported media types are compatible with the media type,_or if the media type is {@code null};protected boolean canWrite(@Nullable MediaType mediaType) {_		if (mediaType == null || MediaType.ALL.equals(mediaType)) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.isCompatibleWith(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,given,media,type,includes,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,the,supported,media,types,are,compatible,with,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,write,nullable,media,type,media,type,if,media,type,null,media,type,all,equals,media,type,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,is,compatible,with,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canWrite(@Nullable MediaType mediaType);1530563849;Returns {@code true} if the given media type includes any of the_{@linkplain #setSupportedMediaTypes(List) supported media types}._@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@return {@code true} if the supported media types are compatible with the media type,_or if the media type is {@code null};protected boolean canWrite(@Nullable MediaType mediaType) {_		if (mediaType == null || MediaType.ALL.equals(mediaType)) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.isCompatibleWith(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,given,media,type,includes,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,the,supported,media,types,are,compatible,with,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,write,nullable,media,type,media,type,if,media,type,null,media,type,all,equals,media,type,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,is,compatible,with,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canWrite(@Nullable MediaType mediaType);1530975243;Returns {@code true} if the given media type includes any of the_{@linkplain #setSupportedMediaTypes(List) supported media types}._@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@return {@code true} if the supported media types are compatible with the media type,_or if the media type is {@code null};protected boolean canWrite(@Nullable MediaType mediaType) {_		if (mediaType == null || MediaType.ALL.equals(mediaType)) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.isCompatibleWith(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,given,media,type,includes,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,the,supported,media,types,are,compatible,with,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,write,nullable,media,type,media,type,if,media,type,null,media,type,all,equals,media,type,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,is,compatible,with,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canWrite(@Nullable MediaType mediaType);1531942370;Returns {@code true} if the given media type includes any of the_{@linkplain #setSupportedMediaTypes(List) supported media types}._@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@return {@code true} if the supported media types are compatible with the media type,_or if the media type is {@code null};protected boolean canWrite(@Nullable MediaType mediaType) {_		if (mediaType == null || MediaType.ALL.equals(mediaType)) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.isCompatibleWith(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,given,media,type,includes,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,the,supported,media,types,are,compatible,with,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,write,nullable,media,type,media,type,if,media,type,null,media,type,all,equals,media,type,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,is,compatible,with,media,type,return,true,return,false
AbstractHttpMessageConverter -> protected boolean canWrite(@Nullable MediaType mediaType);1546457570;Returns {@code true} if the given media type includes any of the_{@linkplain #setSupportedMediaTypes(List) supported media types}._@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@return {@code true} if the supported media types are compatible with the media type,_or if the media type is {@code null};protected boolean canWrite(@Nullable MediaType mediaType) {_		if (mediaType == null || MediaType.ALL.equalsTypeAndSubtype(mediaType)) {_			return true__		}_		for (MediaType supportedMediaType : getSupportedMediaTypes()) {_			if (supportedMediaType.isCompatibleWith(mediaType)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,given,media,type,includes,any,of,the,linkplain,set,supported,media,types,list,supported,media,types,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,the,supported,media,types,are,compatible,with,the,media,type,or,if,the,media,type,is,code,null;protected,boolean,can,write,nullable,media,type,media,type,if,media,type,null,media,type,all,equals,type,and,subtype,media,type,return,true,for,media,type,supported,media,type,get,supported,media,types,if,supported,media,type,is,compatible,with,media,type,return,true,return,false
AbstractHttpMessageConverter -> @Nullable 	protected Long getContentLength(T t, @Nullable MediaType contentType) throws IOException;1495868221;Returns the content length for the given type._<p>By default, this returns {@code null}, meaning that the content length is unknown._Can be overridden in subclasses._@param t the type to return the content length for_@return the content length, or {@code null} if not known;@Nullable_	protected Long getContentLength(T t, @Nullable MediaType contentType) throws IOException {_		return null__	};returns,the,content,length,for,the,given,type,p,by,default,this,returns,code,null,meaning,that,the,content,length,is,unknown,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,length,for,return,the,content,length,or,code,null,if,not,known;nullable,protected,long,get,content,length,t,t,nullable,media,type,content,type,throws,ioexception,return,null
AbstractHttpMessageConverter -> @Nullable 	protected Long getContentLength(T t, @Nullable MediaType contentType) throws IOException;1496242568;Returns the content length for the given type._<p>By default, this returns {@code null}, meaning that the content length is unknown._Can be overridden in subclasses._@param t the type to return the content length for_@return the content length, or {@code null} if not known;@Nullable_	protected Long getContentLength(T t, @Nullable MediaType contentType) throws IOException {_		return null__	};returns,the,content,length,for,the,given,type,p,by,default,this,returns,code,null,meaning,that,the,content,length,is,unknown,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,length,for,return,the,content,length,or,code,null,if,not,known;nullable,protected,long,get,content,length,t,t,nullable,media,type,content,type,throws,ioexception,return,null
AbstractHttpMessageConverter -> @Nullable 	protected Long getContentLength(T t, @Nullable MediaType contentType) throws IOException;1496259743;Returns the content length for the given type._<p>By default, this returns {@code null}, meaning that the content length is unknown._Can be overridden in subclasses._@param t the type to return the content length for_@return the content length, or {@code null} if not known;@Nullable_	protected Long getContentLength(T t, @Nullable MediaType contentType) throws IOException {_		return null__	};returns,the,content,length,for,the,given,type,p,by,default,this,returns,code,null,meaning,that,the,content,length,is,unknown,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,length,for,return,the,content,length,or,code,null,if,not,known;nullable,protected,long,get,content,length,t,t,nullable,media,type,content,type,throws,ioexception,return,null
AbstractHttpMessageConverter -> @Nullable 	protected Long getContentLength(T t, @Nullable MediaType contentType) throws IOException;1496837955;Returns the content length for the given type._<p>By default, this returns {@code null}, meaning that the content length is unknown._Can be overridden in subclasses._@param t the type to return the content length for_@return the content length, or {@code null} if not known;@Nullable_	protected Long getContentLength(T t, @Nullable MediaType contentType) throws IOException {_		return null__	};returns,the,content,length,for,the,given,type,p,by,default,this,returns,code,null,meaning,that,the,content,length,is,unknown,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,length,for,return,the,content,length,or,code,null,if,not,known;nullable,protected,long,get,content,length,t,t,nullable,media,type,content,type,throws,ioexception,return,null
AbstractHttpMessageConverter -> @Nullable 	protected Long getContentLength(T t, @Nullable MediaType contentType) throws IOException;1500448076;Returns the content length for the given type._<p>By default, this returns {@code null}, meaning that the content length is unknown._Can be overridden in subclasses._@param t the type to return the content length for_@return the content length, or {@code null} if not known;@Nullable_	protected Long getContentLength(T t, @Nullable MediaType contentType) throws IOException {_		return null__	};returns,the,content,length,for,the,given,type,p,by,default,this,returns,code,null,meaning,that,the,content,length,is,unknown,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,length,for,return,the,content,length,or,code,null,if,not,known;nullable,protected,long,get,content,length,t,t,nullable,media,type,content,type,throws,ioexception,return,null
AbstractHttpMessageConverter -> @Nullable 	protected Long getContentLength(T t, @Nullable MediaType contentType) throws IOException;1500457438;Returns the content length for the given type._<p>By default, this returns {@code null}, meaning that the content length is unknown._Can be overridden in subclasses._@param t the type to return the content length for_@return the content length, or {@code null} if not known;@Nullable_	protected Long getContentLength(T t, @Nullable MediaType contentType) throws IOException {_		return null__	};returns,the,content,length,for,the,given,type,p,by,default,this,returns,code,null,meaning,that,the,content,length,is,unknown,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,length,for,return,the,content,length,or,code,null,if,not,known;nullable,protected,long,get,content,length,t,t,nullable,media,type,content,type,throws,ioexception,return,null
AbstractHttpMessageConverter -> @Nullable 	protected Long getContentLength(T t, @Nullable MediaType contentType) throws IOException;1520890308;Returns the content length for the given type._<p>By default, this returns {@code null}, meaning that the content length is unknown._Can be overridden in subclasses._@param t the type to return the content length for_@return the content length, or {@code null} if not known;@Nullable_	protected Long getContentLength(T t, @Nullable MediaType contentType) throws IOException {_		return null__	};returns,the,content,length,for,the,given,type,p,by,default,this,returns,code,null,meaning,that,the,content,length,is,unknown,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,length,for,return,the,content,length,or,code,null,if,not,known;nullable,protected,long,get,content,length,t,t,nullable,media,type,content,type,throws,ioexception,return,null
AbstractHttpMessageConverter -> @Nullable 	protected Long getContentLength(T t, @Nullable MediaType contentType) throws IOException;1530174524;Returns the content length for the given type._<p>By default, this returns {@code null}, meaning that the content length is unknown._Can be overridden in subclasses._@param t the type to return the content length for_@return the content length, or {@code null} if not known;@Nullable_	protected Long getContentLength(T t, @Nullable MediaType contentType) throws IOException {_		return null__	};returns,the,content,length,for,the,given,type,p,by,default,this,returns,code,null,meaning,that,the,content,length,is,unknown,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,length,for,return,the,content,length,or,code,null,if,not,known;nullable,protected,long,get,content,length,t,t,nullable,media,type,content,type,throws,ioexception,return,null
AbstractHttpMessageConverter -> @Nullable 	protected Long getContentLength(T t, @Nullable MediaType contentType) throws IOException;1530563849;Returns the content length for the given type._<p>By default, this returns {@code null}, meaning that the content length is unknown._Can be overridden in subclasses._@param t the type to return the content length for_@return the content length, or {@code null} if not known;@Nullable_	protected Long getContentLength(T t, @Nullable MediaType contentType) throws IOException {_		return null__	};returns,the,content,length,for,the,given,type,p,by,default,this,returns,code,null,meaning,that,the,content,length,is,unknown,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,length,for,return,the,content,length,or,code,null,if,not,known;nullable,protected,long,get,content,length,t,t,nullable,media,type,content,type,throws,ioexception,return,null
AbstractHttpMessageConverter -> @Nullable 	protected Long getContentLength(T t, @Nullable MediaType contentType) throws IOException;1530975243;Returns the content length for the given type._<p>By default, this returns {@code null}, meaning that the content length is unknown._Can be overridden in subclasses._@param t the type to return the content length for_@return the content length, or {@code null} if not known;@Nullable_	protected Long getContentLength(T t, @Nullable MediaType contentType) throws IOException {_		return null__	};returns,the,content,length,for,the,given,type,p,by,default,this,returns,code,null,meaning,that,the,content,length,is,unknown,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,length,for,return,the,content,length,or,code,null,if,not,known;nullable,protected,long,get,content,length,t,t,nullable,media,type,content,type,throws,ioexception,return,null
AbstractHttpMessageConverter -> @Nullable 	protected Long getContentLength(T t, @Nullable MediaType contentType) throws IOException;1531942370;Returns the content length for the given type._<p>By default, this returns {@code null}, meaning that the content length is unknown._Can be overridden in subclasses._@param t the type to return the content length for_@return the content length, or {@code null} if not known;@Nullable_	protected Long getContentLength(T t, @Nullable MediaType contentType) throws IOException {_		return null__	};returns,the,content,length,for,the,given,type,p,by,default,this,returns,code,null,meaning,that,the,content,length,is,unknown,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,length,for,return,the,content,length,or,code,null,if,not,known;nullable,protected,long,get,content,length,t,t,nullable,media,type,content,type,throws,ioexception,return,null
AbstractHttpMessageConverter -> @Nullable 	protected Long getContentLength(T t, @Nullable MediaType contentType) throws IOException;1546457570;Returns the content length for the given type._<p>By default, this returns {@code null}, meaning that the content length is unknown._Can be overridden in subclasses._@param t the type to return the content length for_@return the content length, or {@code null} if not known;@Nullable_	protected Long getContentLength(T t, @Nullable MediaType contentType) throws IOException {_		return null__	};returns,the,content,length,for,the,given,type,p,by,default,this,returns,code,null,meaning,that,the,content,length,is,unknown,can,be,overridden,in,subclasses,param,t,the,type,to,return,the,content,length,for,return,the,content,length,or,code,null,if,not,known;nullable,protected,long,get,content,length,t,t,nullable,media,type,content,type,throws,ioexception,return,null
