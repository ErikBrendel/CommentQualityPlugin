# id;timestamp;commentText;codeText;commentWords;codeWords
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType);1496242568;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_required generic type information in order to read a Collection.;@Override_	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,required,generic,type,information,in,order,to,read,a,collection;override,public,boolean,can,read,class,clazz,nullable,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType);1496259743;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_required generic type information in order to read a Collection.;@Override_	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,required,generic,type,information,in,order,to,read,a,collection;override,public,boolean,can,read,class,clazz,nullable,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType);1499973642;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_required generic type information in order to read a Collection.;@Override_	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,required,generic,type,information,in,order,to,read,a,collection;override,public,boolean,can,read,class,clazz,nullable,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType);1500549447;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_required generic type information in order to read a Collection.;@Override_	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,required,generic,type,information,in,order,to,read,a,collection;override,public,boolean,can,read,class,clazz,nullable,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType);1530174524;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_required generic type information in order to read a Collection.;@Override_	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,required,generic,type,information,in,order,to,read,a,collection;override,public,boolean,can,read,class,clazz,nullable,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType);1530174524;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_required generic type information in order to read a Collection.;@Override_	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,required,generic,type,information,in,order,to,read,a,collection;override,public,boolean,can,read,class,clazz,nullable,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType);1530563849;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_required generic type information in order to read a Collection.;@Override_	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,required,generic,type,information,in,order,to,read,a,collection;override,public,boolean,can,read,class,clazz,nullable,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType);1530737169;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_required generic type information in order to read a Collection.;@Override_	public boolean canRead(Class<?> clazz, @Nullable MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,required,generic,type,information,in,order,to,read,a,collection;override,public,boolean,can,read,class,clazz,nullable,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> public boolean canRead(Type type, Class<?> contextClass, MediaType mediaType);1353602122;{@inheritDoc}_<p>Jaxb2CollectionHttpMessageConverter can read a generic_{@link Collection} where the generic type is a JAXB type annotated with_{@link XmlRootElement} or {@link XmlType}.;public boolean canRead(Type type, Class<?> contextClass, MediaType mediaType) {_		if (!(type instanceof ParameterizedType)) {_			return false__		}_		ParameterizedType parameterizedType = (ParameterizedType) type__		if (!(parameterizedType.getRawType() instanceof Class)) {_			return false__		}_		Class<?> rawType = (Class<?>) parameterizedType.getRawType()__		if (!(Collection.class.isAssignableFrom(rawType))) {_			return false__		}_		if (parameterizedType.getActualTypeArguments().length != 1) {_			return false__		}_		Type typeArgument = parameterizedType.getActualTypeArguments()[0]__		if (!(typeArgument instanceof Class)) {_			return false__		}_		Class<?> typeArgumentClass = (Class<?>) typeArgument__		return (typeArgumentClass.isAnnotationPresent(XmlRootElement.class) ||_				typeArgumentClass.isAnnotationPresent(XmlType.class)) && canRead(mediaType)__	};inherit,doc,p,jaxb2collection,http,message,converter,can,read,a,generic,link,collection,where,the,generic,type,is,a,jaxb,type,annotated,with,link,xml,root,element,or,link,xml,type;public,boolean,can,read,type,type,class,context,class,media,type,media,type,if,type,instanceof,parameterized,type,return,false,parameterized,type,parameterized,type,parameterized,type,type,if,parameterized,type,get,raw,type,instanceof,class,return,false,class,raw,type,class,parameterized,type,get,raw,type,if,collection,class,is,assignable,from,raw,type,return,false,if,parameterized,type,get,actual,type,arguments,length,1,return,false,type,type,argument,parameterized,type,get,actual,type,arguments,0,if,type,argument,instanceof,class,return,false,class,type,argument,class,class,type,argument,return,type,argument,class,is,annotation,present,xml,root,element,class,type,argument,class,is,annotation,present,xml,type,class,can,read,media,type
Jaxb2CollectionHttpMessageConverter -> public boolean canRead(Type type, Class<?> contextClass, MediaType mediaType);1357119239;{@inheritDoc}_<p>Jaxb2CollectionHttpMessageConverter can read a generic_{@link Collection} where the generic type is a JAXB type annotated with_{@link XmlRootElement} or {@link XmlType}.;public boolean canRead(Type type, Class<?> contextClass, MediaType mediaType) {_		if (!(type instanceof ParameterizedType)) {_			return false__		}_		ParameterizedType parameterizedType = (ParameterizedType) type__		if (!(parameterizedType.getRawType() instanceof Class)) {_			return false__		}_		Class<?> rawType = (Class<?>) parameterizedType.getRawType()__		if (!(Collection.class.isAssignableFrom(rawType))) {_			return false__		}_		if (parameterizedType.getActualTypeArguments().length != 1) {_			return false__		}_		Type typeArgument = parameterizedType.getActualTypeArguments()[0]__		if (!(typeArgument instanceof Class)) {_			return false__		}_		Class<?> typeArgumentClass = (Class<?>) typeArgument__		return (typeArgumentClass.isAnnotationPresent(XmlRootElement.class) ||_				typeArgumentClass.isAnnotationPresent(XmlType.class)) && canRead(mediaType)__	};inherit,doc,p,jaxb2collection,http,message,converter,can,read,a,generic,link,collection,where,the,generic,type,is,a,jaxb,type,annotated,with,link,xml,root,element,or,link,xml,type;public,boolean,can,read,type,type,class,context,class,media,type,media,type,if,type,instanceof,parameterized,type,return,false,parameterized,type,parameterized,type,parameterized,type,type,if,parameterized,type,get,raw,type,instanceof,class,return,false,class,raw,type,class,parameterized,type,get,raw,type,if,collection,class,is,assignable,from,raw,type,return,false,if,parameterized,type,get,actual,type,arguments,length,1,return,false,type,type,argument,parameterized,type,get,actual,type,arguments,0,if,type,argument,instanceof,class,return,false,class,type,argument,class,class,type,argument,return,type,argument,class,is,annotation,present,xml,root,element,class,type,argument,class,is,annotation,present,xml,type,class,can,read,media,type
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1345666836;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1353602122;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1356735495;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1357119239;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1368482696;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1375826933;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1385412762;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1391481853;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1400553912;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1400575566;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1432125256;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1434985545;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1435665021;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1439827033;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1444681540;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1468948866;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, MediaType mediaType);1491480646;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(@Nullable Type type, @Nullable Class<?> clazz, @Nullable MediaType mediaType);1496259743;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(@Nullable Type type, @Nullable Class<?> clazz, @Nullable MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,nullable,type,type,nullable,class,clazz,nullable,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(@Nullable Type type, @Nullable Class<?> clazz, @Nullable MediaType mediaType);1499973642;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(@Nullable Type type, @Nullable Class<?> clazz, @Nullable MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,nullable,type,type,nullable,class,clazz,nullable,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(@Nullable Type type, @Nullable Class<?> clazz, @Nullable MediaType mediaType);1500549447;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(@Nullable Type type, @Nullable Class<?> clazz, @Nullable MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,nullable,type,type,nullable,class,clazz,nullable,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(@Nullable Type type, @Nullable Class<?> clazz, @Nullable MediaType mediaType);1530174524;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(@Nullable Type type, @Nullable Class<?> clazz, @Nullable MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,nullable,type,type,nullable,class,clazz,nullable,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(@Nullable Type type, @Nullable Class<?> clazz, @Nullable MediaType mediaType);1530174524;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(@Nullable Type type, @Nullable Class<?> clazz, @Nullable MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,nullable,type,type,nullable,class,clazz,nullable,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(@Nullable Type type, @Nullable Class<?> clazz, @Nullable MediaType mediaType);1530563849;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(@Nullable Type type, @Nullable Class<?> clazz, @Nullable MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,nullable,type,type,nullable,class,clazz,nullable,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(@Nullable Type type, @Nullable Class<?> clazz, @Nullable MediaType mediaType);1530737169;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(@Nullable Type type, @Nullable Class<?> clazz, @Nullable MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,nullable,type,type,nullable,class,clazz,nullable,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1345666836;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_required generic type information in order to read a Collection.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,required,generic,type,information,in,order,to,read,a,collection;override,public,boolean,can,read,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1353602122;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_required generic type information in order to read a Collection.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,required,generic,type,information,in,order,to,read,a,collection;override,public,boolean,can,read,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1356735495;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_required generic type information in order to read a Collection.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,required,generic,type,information,in,order,to,read,a,collection;override,public,boolean,can,read,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1357119239;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_required generic type information in order to read a Collection.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,required,generic,type,information,in,order,to,read,a,collection;override,public,boolean,can,read,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1368482696;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_required generic type information in order to read a Collection.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,required,generic,type,information,in,order,to,read,a,collection;override,public,boolean,can,read,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1375826933;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_required generic type information in order to read a Collection.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,required,generic,type,information,in,order,to,read,a,collection;override,public,boolean,can,read,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1385412762;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_required generic type information in order to read a Collection.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,required,generic,type,information,in,order,to,read,a,collection;override,public,boolean,can,read,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1391481853;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_required generic type information in order to read a Collection.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,required,generic,type,information,in,order,to,read,a,collection;override,public,boolean,can,read,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1400553912;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_required generic type information in order to read a Collection.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,required,generic,type,information,in,order,to,read,a,collection;override,public,boolean,can,read,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1400575566;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_required generic type information in order to read a Collection.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,required,generic,type,information,in,order,to,read,a,collection;override,public,boolean,can,read,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1432125256;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_required generic type information in order to read a Collection.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,required,generic,type,information,in,order,to,read,a,collection;override,public,boolean,can,read,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1434985545;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_required generic type information in order to read a Collection.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,required,generic,type,information,in,order,to,read,a,collection;override,public,boolean,can,read,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1435665021;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_required generic type information in order to read a Collection.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,required,generic,type,information,in,order,to,read,a,collection;override,public,boolean,can,read,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1439827033;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_required generic type information in order to read a Collection.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,required,generic,type,information,in,order,to,read,a,collection;override,public,boolean,can,read,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1444681540;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_required generic type information in order to read a Collection.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,required,generic,type,information,in,order,to,read,a,collection;override,public,boolean,can,read,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1468948866;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_required generic type information in order to read a Collection.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,required,generic,type,information,in,order,to,read,a,collection;override,public,boolean,can,read,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Class<?> clazz, MediaType mediaType);1491480646;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_required generic type information in order to read a Collection.;@Override_	public boolean canRead(Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,required,generic,type,information,in,order,to,read,a,collection;override,public,boolean,can,read,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Type type, @Nullable Class<?> contextClass, @Nullable MediaType mediaType);1496242568;{@inheritDoc}_<p>Jaxb2CollectionHttpMessageConverter can read a generic_{@link Collection} where the generic type is a JAXB type annotated with_{@link XmlRootElement} or {@link XmlType}.;@Override_	public boolean canRead(Type type, @Nullable Class<?> contextClass, @Nullable MediaType mediaType) {_		if (!(type instanceof ParameterizedType)) {_			return false__		}_		ParameterizedType parameterizedType = (ParameterizedType) type__		if (!(parameterizedType.getRawType() instanceof Class)) {_			return false__		}_		Class<?> rawType = (Class<?>) parameterizedType.getRawType()__		if (!(Collection.class.isAssignableFrom(rawType))) {_			return false__		}_		if (parameterizedType.getActualTypeArguments().length != 1) {_			return false__		}_		Type typeArgument = parameterizedType.getActualTypeArguments()[0]__		if (!(typeArgument instanceof Class)) {_			return false__		}_		Class<?> typeArgumentClass = (Class<?>) typeArgument__		return (typeArgumentClass.isAnnotationPresent(XmlRootElement.class) ||_				typeArgumentClass.isAnnotationPresent(XmlType.class)) && canRead(mediaType)__	};inherit,doc,p,jaxb2collection,http,message,converter,can,read,a,generic,link,collection,where,the,generic,type,is,a,jaxb,type,annotated,with,link,xml,root,element,or,link,xml,type;override,public,boolean,can,read,type,type,nullable,class,context,class,nullable,media,type,media,type,if,type,instanceof,parameterized,type,return,false,parameterized,type,parameterized,type,parameterized,type,type,if,parameterized,type,get,raw,type,instanceof,class,return,false,class,raw,type,class,parameterized,type,get,raw,type,if,collection,class,is,assignable,from,raw,type,return,false,if,parameterized,type,get,actual,type,arguments,length,1,return,false,type,type,argument,parameterized,type,get,actual,type,arguments,0,if,type,argument,instanceof,class,return,false,class,type,argument,class,class,type,argument,return,type,argument,class,is,annotation,present,xml,root,element,class,type,argument,class,is,annotation,present,xml,type,class,can,read,media,type
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Type type, @Nullable Class<?> contextClass, @Nullable MediaType mediaType);1496259743;{@inheritDoc}_<p>Jaxb2CollectionHttpMessageConverter can read a generic_{@link Collection} where the generic type is a JAXB type annotated with_{@link XmlRootElement} or {@link XmlType}.;@Override_	public boolean canRead(Type type, @Nullable Class<?> contextClass, @Nullable MediaType mediaType) {_		if (!(type instanceof ParameterizedType)) {_			return false__		}_		ParameterizedType parameterizedType = (ParameterizedType) type__		if (!(parameterizedType.getRawType() instanceof Class)) {_			return false__		}_		Class<?> rawType = (Class<?>) parameterizedType.getRawType()__		if (!(Collection.class.isAssignableFrom(rawType))) {_			return false__		}_		if (parameterizedType.getActualTypeArguments().length != 1) {_			return false__		}_		Type typeArgument = parameterizedType.getActualTypeArguments()[0]__		if (!(typeArgument instanceof Class)) {_			return false__		}_		Class<?> typeArgumentClass = (Class<?>) typeArgument__		return (typeArgumentClass.isAnnotationPresent(XmlRootElement.class) ||_				typeArgumentClass.isAnnotationPresent(XmlType.class)) && canRead(mediaType)__	};inherit,doc,p,jaxb2collection,http,message,converter,can,read,a,generic,link,collection,where,the,generic,type,is,a,jaxb,type,annotated,with,link,xml,root,element,or,link,xml,type;override,public,boolean,can,read,type,type,nullable,class,context,class,nullable,media,type,media,type,if,type,instanceof,parameterized,type,return,false,parameterized,type,parameterized,type,parameterized,type,type,if,parameterized,type,get,raw,type,instanceof,class,return,false,class,raw,type,class,parameterized,type,get,raw,type,if,collection,class,is,assignable,from,raw,type,return,false,if,parameterized,type,get,actual,type,arguments,length,1,return,false,type,type,argument,parameterized,type,get,actual,type,arguments,0,if,type,argument,instanceof,class,return,false,class,type,argument,class,class,type,argument,return,type,argument,class,is,annotation,present,xml,root,element,class,type,argument,class,is,annotation,present,xml,type,class,can,read,media,type
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Type type, @Nullable Class<?> contextClass, @Nullable MediaType mediaType);1499973642;{@inheritDoc}_<p>Jaxb2CollectionHttpMessageConverter can read a generic_{@link Collection} where the generic type is a JAXB type annotated with_{@link XmlRootElement} or {@link XmlType}.;@Override_	public boolean canRead(Type type, @Nullable Class<?> contextClass, @Nullable MediaType mediaType) {_		if (!(type instanceof ParameterizedType)) {_			return false__		}_		ParameterizedType parameterizedType = (ParameterizedType) type__		if (!(parameterizedType.getRawType() instanceof Class)) {_			return false__		}_		Class<?> rawType = (Class<?>) parameterizedType.getRawType()__		if (!(Collection.class.isAssignableFrom(rawType))) {_			return false__		}_		if (parameterizedType.getActualTypeArguments().length != 1) {_			return false__		}_		Type typeArgument = parameterizedType.getActualTypeArguments()[0]__		if (!(typeArgument instanceof Class)) {_			return false__		}_		Class<?> typeArgumentClass = (Class<?>) typeArgument__		return (typeArgumentClass.isAnnotationPresent(XmlRootElement.class) ||_				typeArgumentClass.isAnnotationPresent(XmlType.class)) && canRead(mediaType)__	};inherit,doc,p,jaxb2collection,http,message,converter,can,read,a,generic,link,collection,where,the,generic,type,is,a,jaxb,type,annotated,with,link,xml,root,element,or,link,xml,type;override,public,boolean,can,read,type,type,nullable,class,context,class,nullable,media,type,media,type,if,type,instanceof,parameterized,type,return,false,parameterized,type,parameterized,type,parameterized,type,type,if,parameterized,type,get,raw,type,instanceof,class,return,false,class,raw,type,class,parameterized,type,get,raw,type,if,collection,class,is,assignable,from,raw,type,return,false,if,parameterized,type,get,actual,type,arguments,length,1,return,false,type,type,argument,parameterized,type,get,actual,type,arguments,0,if,type,argument,instanceof,class,return,false,class,type,argument,class,class,type,argument,return,type,argument,class,is,annotation,present,xml,root,element,class,type,argument,class,is,annotation,present,xml,type,class,can,read,media,type
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Type type, @Nullable Class<?> contextClass, @Nullable MediaType mediaType);1500549447;{@inheritDoc}_<p>Jaxb2CollectionHttpMessageConverter can read a generic_{@link Collection} where the generic type is a JAXB type annotated with_{@link XmlRootElement} or {@link XmlType}.;@Override_	public boolean canRead(Type type, @Nullable Class<?> contextClass, @Nullable MediaType mediaType) {_		if (!(type instanceof ParameterizedType)) {_			return false__		}_		ParameterizedType parameterizedType = (ParameterizedType) type__		if (!(parameterizedType.getRawType() instanceof Class)) {_			return false__		}_		Class<?> rawType = (Class<?>) parameterizedType.getRawType()__		if (!(Collection.class.isAssignableFrom(rawType))) {_			return false__		}_		if (parameterizedType.getActualTypeArguments().length != 1) {_			return false__		}_		Type typeArgument = parameterizedType.getActualTypeArguments()[0]__		if (!(typeArgument instanceof Class)) {_			return false__		}_		Class<?> typeArgumentClass = (Class<?>) typeArgument__		return (typeArgumentClass.isAnnotationPresent(XmlRootElement.class) ||_				typeArgumentClass.isAnnotationPresent(XmlType.class)) && canRead(mediaType)__	};inherit,doc,p,jaxb2collection,http,message,converter,can,read,a,generic,link,collection,where,the,generic,type,is,a,jaxb,type,annotated,with,link,xml,root,element,or,link,xml,type;override,public,boolean,can,read,type,type,nullable,class,context,class,nullable,media,type,media,type,if,type,instanceof,parameterized,type,return,false,parameterized,type,parameterized,type,parameterized,type,type,if,parameterized,type,get,raw,type,instanceof,class,return,false,class,raw,type,class,parameterized,type,get,raw,type,if,collection,class,is,assignable,from,raw,type,return,false,if,parameterized,type,get,actual,type,arguments,length,1,return,false,type,type,argument,parameterized,type,get,actual,type,arguments,0,if,type,argument,instanceof,class,return,false,class,type,argument,class,class,type,argument,return,type,argument,class,is,annotation,present,xml,root,element,class,type,argument,class,is,annotation,present,xml,type,class,can,read,media,type
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Type type, @Nullable Class<?> contextClass, @Nullable MediaType mediaType);1530174524;{@inheritDoc}_<p>Jaxb2CollectionHttpMessageConverter can read a generic_{@link Collection} where the generic type is a JAXB type annotated with_{@link XmlRootElement} or {@link XmlType}.;@Override_	public boolean canRead(Type type, @Nullable Class<?> contextClass, @Nullable MediaType mediaType) {_		if (!(type instanceof ParameterizedType)) {_			return false__		}_		ParameterizedType parameterizedType = (ParameterizedType) type__		if (!(parameterizedType.getRawType() instanceof Class)) {_			return false__		}_		Class<?> rawType = (Class<?>) parameterizedType.getRawType()__		if (!(Collection.class.isAssignableFrom(rawType))) {_			return false__		}_		if (parameterizedType.getActualTypeArguments().length != 1) {_			return false__		}_		Type typeArgument = parameterizedType.getActualTypeArguments()[0]__		if (!(typeArgument instanceof Class)) {_			return false__		}_		Class<?> typeArgumentClass = (Class<?>) typeArgument__		return (typeArgumentClass.isAnnotationPresent(XmlRootElement.class) ||_				typeArgumentClass.isAnnotationPresent(XmlType.class)) && canRead(mediaType)__	};inherit,doc,p,jaxb2collection,http,message,converter,can,read,a,generic,link,collection,where,the,generic,type,is,a,jaxb,type,annotated,with,link,xml,root,element,or,link,xml,type;override,public,boolean,can,read,type,type,nullable,class,context,class,nullable,media,type,media,type,if,type,instanceof,parameterized,type,return,false,parameterized,type,parameterized,type,parameterized,type,type,if,parameterized,type,get,raw,type,instanceof,class,return,false,class,raw,type,class,parameterized,type,get,raw,type,if,collection,class,is,assignable,from,raw,type,return,false,if,parameterized,type,get,actual,type,arguments,length,1,return,false,type,type,argument,parameterized,type,get,actual,type,arguments,0,if,type,argument,instanceof,class,return,false,class,type,argument,class,class,type,argument,return,type,argument,class,is,annotation,present,xml,root,element,class,type,argument,class,is,annotation,present,xml,type,class,can,read,media,type
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Type type, @Nullable Class<?> contextClass, @Nullable MediaType mediaType);1530174524;{@inheritDoc}_<p>Jaxb2CollectionHttpMessageConverter can read a generic_{@link Collection} where the generic type is a JAXB type annotated with_{@link XmlRootElement} or {@link XmlType}.;@Override_	public boolean canRead(Type type, @Nullable Class<?> contextClass, @Nullable MediaType mediaType) {_		if (!(type instanceof ParameterizedType)) {_			return false__		}_		ParameterizedType parameterizedType = (ParameterizedType) type__		if (!(parameterizedType.getRawType() instanceof Class)) {_			return false__		}_		Class<?> rawType = (Class<?>) parameterizedType.getRawType()__		if (!(Collection.class.isAssignableFrom(rawType))) {_			return false__		}_		if (parameterizedType.getActualTypeArguments().length != 1) {_			return false__		}_		Type typeArgument = parameterizedType.getActualTypeArguments()[0]__		if (!(typeArgument instanceof Class)) {_			return false__		}_		Class<?> typeArgumentClass = (Class<?>) typeArgument__		return (typeArgumentClass.isAnnotationPresent(XmlRootElement.class) ||_				typeArgumentClass.isAnnotationPresent(XmlType.class)) && canRead(mediaType)__	};inherit,doc,p,jaxb2collection,http,message,converter,can,read,a,generic,link,collection,where,the,generic,type,is,a,jaxb,type,annotated,with,link,xml,root,element,or,link,xml,type;override,public,boolean,can,read,type,type,nullable,class,context,class,nullable,media,type,media,type,if,type,instanceof,parameterized,type,return,false,parameterized,type,parameterized,type,parameterized,type,type,if,parameterized,type,get,raw,type,instanceof,class,return,false,class,raw,type,class,parameterized,type,get,raw,type,if,collection,class,is,assignable,from,raw,type,return,false,if,parameterized,type,get,actual,type,arguments,length,1,return,false,type,type,argument,parameterized,type,get,actual,type,arguments,0,if,type,argument,instanceof,class,return,false,class,type,argument,class,class,type,argument,return,type,argument,class,is,annotation,present,xml,root,element,class,type,argument,class,is,annotation,present,xml,type,class,can,read,media,type
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Type type, @Nullable Class<?> contextClass, @Nullable MediaType mediaType);1530563849;{@inheritDoc}_<p>Jaxb2CollectionHttpMessageConverter can read a generic_{@link Collection} where the generic type is a JAXB type annotated with_{@link XmlRootElement} or {@link XmlType}.;@Override_	public boolean canRead(Type type, @Nullable Class<?> contextClass, @Nullable MediaType mediaType) {_		if (!(type instanceof ParameterizedType)) {_			return false__		}_		ParameterizedType parameterizedType = (ParameterizedType) type__		if (!(parameterizedType.getRawType() instanceof Class)) {_			return false__		}_		Class<?> rawType = (Class<?>) parameterizedType.getRawType()__		if (!(Collection.class.isAssignableFrom(rawType))) {_			return false__		}_		if (parameterizedType.getActualTypeArguments().length != 1) {_			return false__		}_		Type typeArgument = parameterizedType.getActualTypeArguments()[0]__		if (!(typeArgument instanceof Class)) {_			return false__		}_		Class<?> typeArgumentClass = (Class<?>) typeArgument__		return (typeArgumentClass.isAnnotationPresent(XmlRootElement.class) ||_				typeArgumentClass.isAnnotationPresent(XmlType.class)) && canRead(mediaType)__	};inherit,doc,p,jaxb2collection,http,message,converter,can,read,a,generic,link,collection,where,the,generic,type,is,a,jaxb,type,annotated,with,link,xml,root,element,or,link,xml,type;override,public,boolean,can,read,type,type,nullable,class,context,class,nullable,media,type,media,type,if,type,instanceof,parameterized,type,return,false,parameterized,type,parameterized,type,parameterized,type,type,if,parameterized,type,get,raw,type,instanceof,class,return,false,class,raw,type,class,parameterized,type,get,raw,type,if,collection,class,is,assignable,from,raw,type,return,false,if,parameterized,type,get,actual,type,arguments,length,1,return,false,type,type,argument,parameterized,type,get,actual,type,arguments,0,if,type,argument,instanceof,class,return,false,class,type,argument,class,class,type,argument,return,type,argument,class,is,annotation,present,xml,root,element,class,type,argument,class,is,annotation,present,xml,type,class,can,read,media,type
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Type type, @Nullable Class<?> contextClass, @Nullable MediaType mediaType);1530737169;{@inheritDoc}_<p>Jaxb2CollectionHttpMessageConverter can read a generic_{@link Collection} where the generic type is a JAXB type annotated with_{@link XmlRootElement} or {@link XmlType}.;@Override_	public boolean canRead(Type type, @Nullable Class<?> contextClass, @Nullable MediaType mediaType) {_		if (!(type instanceof ParameterizedType)) {_			return false__		}_		ParameterizedType parameterizedType = (ParameterizedType) type__		if (!(parameterizedType.getRawType() instanceof Class)) {_			return false__		}_		Class<?> rawType = (Class<?>) parameterizedType.getRawType()__		if (!(Collection.class.isAssignableFrom(rawType))) {_			return false__		}_		if (parameterizedType.getActualTypeArguments().length != 1) {_			return false__		}_		Type typeArgument = parameterizedType.getActualTypeArguments()[0]__		if (!(typeArgument instanceof Class)) {_			return false__		}_		Class<?> typeArgumentClass = (Class<?>) typeArgument__		return (typeArgumentClass.isAnnotationPresent(XmlRootElement.class) ||_				typeArgumentClass.isAnnotationPresent(XmlType.class)) && canRead(mediaType)__	};inherit,doc,p,jaxb2collection,http,message,converter,can,read,a,generic,link,collection,where,the,generic,type,is,a,jaxb,type,annotated,with,link,xml,root,element,or,link,xml,type;override,public,boolean,can,read,type,type,nullable,class,context,class,nullable,media,type,media,type,if,type,instanceof,parameterized,type,return,false,parameterized,type,parameterized,type,parameterized,type,type,if,parameterized,type,get,raw,type,instanceof,class,return,false,class,raw,type,class,parameterized,type,get,raw,type,if,collection,class,is,assignable,from,raw,type,return,false,if,parameterized,type,get,actual,type,arguments,length,1,return,false,type,type,argument,parameterized,type,get,actual,type,arguments,0,if,type,argument,instanceof,class,return,false,class,type,argument,class,class,type,argument,return,type,argument,class,is,annotation,present,xml,root,element,class,type,argument,class,is,annotation,present,xml,type,class,can,read,media,type
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Type type, Class<?> contextClass, MediaType mediaType);1356735495;{@inheritDoc}_<p>Jaxb2CollectionHttpMessageConverter can read a generic_{@link Collection} where the generic type is a JAXB type annotated with_{@link XmlRootElement} or {@link XmlType}.;@Override_	public boolean canRead(Type type, Class<?> contextClass, MediaType mediaType) {_		if (!(type instanceof ParameterizedType)) {_			return false__		}_		ParameterizedType parameterizedType = (ParameterizedType) type__		if (!(parameterizedType.getRawType() instanceof Class)) {_			return false__		}_		Class<?> rawType = (Class<?>) parameterizedType.getRawType()__		if (!(Collection.class.isAssignableFrom(rawType))) {_			return false__		}_		if (parameterizedType.getActualTypeArguments().length != 1) {_			return false__		}_		Type typeArgument = parameterizedType.getActualTypeArguments()[0]__		if (!(typeArgument instanceof Class)) {_			return false__		}_		Class<?> typeArgumentClass = (Class<?>) typeArgument__		return (typeArgumentClass.isAnnotationPresent(XmlRootElement.class) ||_				typeArgumentClass.isAnnotationPresent(XmlType.class)) && canRead(mediaType)__	};inherit,doc,p,jaxb2collection,http,message,converter,can,read,a,generic,link,collection,where,the,generic,type,is,a,jaxb,type,annotated,with,link,xml,root,element,or,link,xml,type;override,public,boolean,can,read,type,type,class,context,class,media,type,media,type,if,type,instanceof,parameterized,type,return,false,parameterized,type,parameterized,type,parameterized,type,type,if,parameterized,type,get,raw,type,instanceof,class,return,false,class,raw,type,class,parameterized,type,get,raw,type,if,collection,class,is,assignable,from,raw,type,return,false,if,parameterized,type,get,actual,type,arguments,length,1,return,false,type,type,argument,parameterized,type,get,actual,type,arguments,0,if,type,argument,instanceof,class,return,false,class,type,argument,class,class,type,argument,return,type,argument,class,is,annotation,present,xml,root,element,class,type,argument,class,is,annotation,present,xml,type,class,can,read,media,type
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Type type, Class<?> contextClass, MediaType mediaType);1368482696;{@inheritDoc}_<p>Jaxb2CollectionHttpMessageConverter can read a generic_{@link Collection} where the generic type is a JAXB type annotated with_{@link XmlRootElement} or {@link XmlType}.;@Override_	public boolean canRead(Type type, Class<?> contextClass, MediaType mediaType) {_		if (!(type instanceof ParameterizedType)) {_			return false__		}_		ParameterizedType parameterizedType = (ParameterizedType) type__		if (!(parameterizedType.getRawType() instanceof Class)) {_			return false__		}_		Class<?> rawType = (Class<?>) parameterizedType.getRawType()__		if (!(Collection.class.isAssignableFrom(rawType))) {_			return false__		}_		if (parameterizedType.getActualTypeArguments().length != 1) {_			return false__		}_		Type typeArgument = parameterizedType.getActualTypeArguments()[0]__		if (!(typeArgument instanceof Class)) {_			return false__		}_		Class<?> typeArgumentClass = (Class<?>) typeArgument__		return (typeArgumentClass.isAnnotationPresent(XmlRootElement.class) ||_				typeArgumentClass.isAnnotationPresent(XmlType.class)) && canRead(mediaType)__	};inherit,doc,p,jaxb2collection,http,message,converter,can,read,a,generic,link,collection,where,the,generic,type,is,a,jaxb,type,annotated,with,link,xml,root,element,or,link,xml,type;override,public,boolean,can,read,type,type,class,context,class,media,type,media,type,if,type,instanceof,parameterized,type,return,false,parameterized,type,parameterized,type,parameterized,type,type,if,parameterized,type,get,raw,type,instanceof,class,return,false,class,raw,type,class,parameterized,type,get,raw,type,if,collection,class,is,assignable,from,raw,type,return,false,if,parameterized,type,get,actual,type,arguments,length,1,return,false,type,type,argument,parameterized,type,get,actual,type,arguments,0,if,type,argument,instanceof,class,return,false,class,type,argument,class,class,type,argument,return,type,argument,class,is,annotation,present,xml,root,element,class,type,argument,class,is,annotation,present,xml,type,class,can,read,media,type
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Type type, Class<?> contextClass, MediaType mediaType);1375826933;{@inheritDoc}_<p>Jaxb2CollectionHttpMessageConverter can read a generic_{@link Collection} where the generic type is a JAXB type annotated with_{@link XmlRootElement} or {@link XmlType}.;@Override_	public boolean canRead(Type type, Class<?> contextClass, MediaType mediaType) {_		if (!(type instanceof ParameterizedType)) {_			return false__		}_		ParameterizedType parameterizedType = (ParameterizedType) type__		if (!(parameterizedType.getRawType() instanceof Class)) {_			return false__		}_		Class<?> rawType = (Class<?>) parameterizedType.getRawType()__		if (!(Collection.class.isAssignableFrom(rawType))) {_			return false__		}_		if (parameterizedType.getActualTypeArguments().length != 1) {_			return false__		}_		Type typeArgument = parameterizedType.getActualTypeArguments()[0]__		if (!(typeArgument instanceof Class)) {_			return false__		}_		Class<?> typeArgumentClass = (Class<?>) typeArgument__		return (typeArgumentClass.isAnnotationPresent(XmlRootElement.class) ||_				typeArgumentClass.isAnnotationPresent(XmlType.class)) && canRead(mediaType)__	};inherit,doc,p,jaxb2collection,http,message,converter,can,read,a,generic,link,collection,where,the,generic,type,is,a,jaxb,type,annotated,with,link,xml,root,element,or,link,xml,type;override,public,boolean,can,read,type,type,class,context,class,media,type,media,type,if,type,instanceof,parameterized,type,return,false,parameterized,type,parameterized,type,parameterized,type,type,if,parameterized,type,get,raw,type,instanceof,class,return,false,class,raw,type,class,parameterized,type,get,raw,type,if,collection,class,is,assignable,from,raw,type,return,false,if,parameterized,type,get,actual,type,arguments,length,1,return,false,type,type,argument,parameterized,type,get,actual,type,arguments,0,if,type,argument,instanceof,class,return,false,class,type,argument,class,class,type,argument,return,type,argument,class,is,annotation,present,xml,root,element,class,type,argument,class,is,annotation,present,xml,type,class,can,read,media,type
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Type type, Class<?> contextClass, MediaType mediaType);1385412762;{@inheritDoc}_<p>Jaxb2CollectionHttpMessageConverter can read a generic_{@link Collection} where the generic type is a JAXB type annotated with_{@link XmlRootElement} or {@link XmlType}.;@Override_	public boolean canRead(Type type, Class<?> contextClass, MediaType mediaType) {_		if (!(type instanceof ParameterizedType)) {_			return false__		}_		ParameterizedType parameterizedType = (ParameterizedType) type__		if (!(parameterizedType.getRawType() instanceof Class)) {_			return false__		}_		Class<?> rawType = (Class<?>) parameterizedType.getRawType()__		if (!(Collection.class.isAssignableFrom(rawType))) {_			return false__		}_		if (parameterizedType.getActualTypeArguments().length != 1) {_			return false__		}_		Type typeArgument = parameterizedType.getActualTypeArguments()[0]__		if (!(typeArgument instanceof Class)) {_			return false__		}_		Class<?> typeArgumentClass = (Class<?>) typeArgument__		return (typeArgumentClass.isAnnotationPresent(XmlRootElement.class) ||_				typeArgumentClass.isAnnotationPresent(XmlType.class)) && canRead(mediaType)__	};inherit,doc,p,jaxb2collection,http,message,converter,can,read,a,generic,link,collection,where,the,generic,type,is,a,jaxb,type,annotated,with,link,xml,root,element,or,link,xml,type;override,public,boolean,can,read,type,type,class,context,class,media,type,media,type,if,type,instanceof,parameterized,type,return,false,parameterized,type,parameterized,type,parameterized,type,type,if,parameterized,type,get,raw,type,instanceof,class,return,false,class,raw,type,class,parameterized,type,get,raw,type,if,collection,class,is,assignable,from,raw,type,return,false,if,parameterized,type,get,actual,type,arguments,length,1,return,false,type,type,argument,parameterized,type,get,actual,type,arguments,0,if,type,argument,instanceof,class,return,false,class,type,argument,class,class,type,argument,return,type,argument,class,is,annotation,present,xml,root,element,class,type,argument,class,is,annotation,present,xml,type,class,can,read,media,type
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Type type, Class<?> contextClass, MediaType mediaType);1391481853;{@inheritDoc}_<p>Jaxb2CollectionHttpMessageConverter can read a generic_{@link Collection} where the generic type is a JAXB type annotated with_{@link XmlRootElement} or {@link XmlType}.;@Override_	public boolean canRead(Type type, Class<?> contextClass, MediaType mediaType) {_		if (!(type instanceof ParameterizedType)) {_			return false__		}_		ParameterizedType parameterizedType = (ParameterizedType) type__		if (!(parameterizedType.getRawType() instanceof Class)) {_			return false__		}_		Class<?> rawType = (Class<?>) parameterizedType.getRawType()__		if (!(Collection.class.isAssignableFrom(rawType))) {_			return false__		}_		if (parameterizedType.getActualTypeArguments().length != 1) {_			return false__		}_		Type typeArgument = parameterizedType.getActualTypeArguments()[0]__		if (!(typeArgument instanceof Class)) {_			return false__		}_		Class<?> typeArgumentClass = (Class<?>) typeArgument__		return (typeArgumentClass.isAnnotationPresent(XmlRootElement.class) ||_				typeArgumentClass.isAnnotationPresent(XmlType.class)) && canRead(mediaType)__	};inherit,doc,p,jaxb2collection,http,message,converter,can,read,a,generic,link,collection,where,the,generic,type,is,a,jaxb,type,annotated,with,link,xml,root,element,or,link,xml,type;override,public,boolean,can,read,type,type,class,context,class,media,type,media,type,if,type,instanceof,parameterized,type,return,false,parameterized,type,parameterized,type,parameterized,type,type,if,parameterized,type,get,raw,type,instanceof,class,return,false,class,raw,type,class,parameterized,type,get,raw,type,if,collection,class,is,assignable,from,raw,type,return,false,if,parameterized,type,get,actual,type,arguments,length,1,return,false,type,type,argument,parameterized,type,get,actual,type,arguments,0,if,type,argument,instanceof,class,return,false,class,type,argument,class,class,type,argument,return,type,argument,class,is,annotation,present,xml,root,element,class,type,argument,class,is,annotation,present,xml,type,class,can,read,media,type
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Type type, Class<?> contextClass, MediaType mediaType);1400553912;{@inheritDoc}_<p>Jaxb2CollectionHttpMessageConverter can read a generic_{@link Collection} where the generic type is a JAXB type annotated with_{@link XmlRootElement} or {@link XmlType}.;@Override_	public boolean canRead(Type type, Class<?> contextClass, MediaType mediaType) {_		if (!(type instanceof ParameterizedType)) {_			return false__		}_		ParameterizedType parameterizedType = (ParameterizedType) type__		if (!(parameterizedType.getRawType() instanceof Class)) {_			return false__		}_		Class<?> rawType = (Class<?>) parameterizedType.getRawType()__		if (!(Collection.class.isAssignableFrom(rawType))) {_			return false__		}_		if (parameterizedType.getActualTypeArguments().length != 1) {_			return false__		}_		Type typeArgument = parameterizedType.getActualTypeArguments()[0]__		if (!(typeArgument instanceof Class)) {_			return false__		}_		Class<?> typeArgumentClass = (Class<?>) typeArgument__		return (typeArgumentClass.isAnnotationPresent(XmlRootElement.class) ||_				typeArgumentClass.isAnnotationPresent(XmlType.class)) && canRead(mediaType)__	};inherit,doc,p,jaxb2collection,http,message,converter,can,read,a,generic,link,collection,where,the,generic,type,is,a,jaxb,type,annotated,with,link,xml,root,element,or,link,xml,type;override,public,boolean,can,read,type,type,class,context,class,media,type,media,type,if,type,instanceof,parameterized,type,return,false,parameterized,type,parameterized,type,parameterized,type,type,if,parameterized,type,get,raw,type,instanceof,class,return,false,class,raw,type,class,parameterized,type,get,raw,type,if,collection,class,is,assignable,from,raw,type,return,false,if,parameterized,type,get,actual,type,arguments,length,1,return,false,type,type,argument,parameterized,type,get,actual,type,arguments,0,if,type,argument,instanceof,class,return,false,class,type,argument,class,class,type,argument,return,type,argument,class,is,annotation,present,xml,root,element,class,type,argument,class,is,annotation,present,xml,type,class,can,read,media,type
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Type type, Class<?> contextClass, MediaType mediaType);1400575566;{@inheritDoc}_<p>Jaxb2CollectionHttpMessageConverter can read a generic_{@link Collection} where the generic type is a JAXB type annotated with_{@link XmlRootElement} or {@link XmlType}.;@Override_	public boolean canRead(Type type, Class<?> contextClass, MediaType mediaType) {_		if (!(type instanceof ParameterizedType)) {_			return false__		}_		ParameterizedType parameterizedType = (ParameterizedType) type__		if (!(parameterizedType.getRawType() instanceof Class)) {_			return false__		}_		Class<?> rawType = (Class<?>) parameterizedType.getRawType()__		if (!(Collection.class.isAssignableFrom(rawType))) {_			return false__		}_		if (parameterizedType.getActualTypeArguments().length != 1) {_			return false__		}_		Type typeArgument = parameterizedType.getActualTypeArguments()[0]__		if (!(typeArgument instanceof Class)) {_			return false__		}_		Class<?> typeArgumentClass = (Class<?>) typeArgument__		return (typeArgumentClass.isAnnotationPresent(XmlRootElement.class) ||_				typeArgumentClass.isAnnotationPresent(XmlType.class)) && canRead(mediaType)__	};inherit,doc,p,jaxb2collection,http,message,converter,can,read,a,generic,link,collection,where,the,generic,type,is,a,jaxb,type,annotated,with,link,xml,root,element,or,link,xml,type;override,public,boolean,can,read,type,type,class,context,class,media,type,media,type,if,type,instanceof,parameterized,type,return,false,parameterized,type,parameterized,type,parameterized,type,type,if,parameterized,type,get,raw,type,instanceof,class,return,false,class,raw,type,class,parameterized,type,get,raw,type,if,collection,class,is,assignable,from,raw,type,return,false,if,parameterized,type,get,actual,type,arguments,length,1,return,false,type,type,argument,parameterized,type,get,actual,type,arguments,0,if,type,argument,instanceof,class,return,false,class,type,argument,class,class,type,argument,return,type,argument,class,is,annotation,present,xml,root,element,class,type,argument,class,is,annotation,present,xml,type,class,can,read,media,type
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Type type, Class<?> contextClass, MediaType mediaType);1432125256;{@inheritDoc}_<p>Jaxb2CollectionHttpMessageConverter can read a generic_{@link Collection} where the generic type is a JAXB type annotated with_{@link XmlRootElement} or {@link XmlType}.;@Override_	public boolean canRead(Type type, Class<?> contextClass, MediaType mediaType) {_		if (!(type instanceof ParameterizedType)) {_			return false__		}_		ParameterizedType parameterizedType = (ParameterizedType) type__		if (!(parameterizedType.getRawType() instanceof Class)) {_			return false__		}_		Class<?> rawType = (Class<?>) parameterizedType.getRawType()__		if (!(Collection.class.isAssignableFrom(rawType))) {_			return false__		}_		if (parameterizedType.getActualTypeArguments().length != 1) {_			return false__		}_		Type typeArgument = parameterizedType.getActualTypeArguments()[0]__		if (!(typeArgument instanceof Class)) {_			return false__		}_		Class<?> typeArgumentClass = (Class<?>) typeArgument__		return (typeArgumentClass.isAnnotationPresent(XmlRootElement.class) ||_				typeArgumentClass.isAnnotationPresent(XmlType.class)) && canRead(mediaType)__	};inherit,doc,p,jaxb2collection,http,message,converter,can,read,a,generic,link,collection,where,the,generic,type,is,a,jaxb,type,annotated,with,link,xml,root,element,or,link,xml,type;override,public,boolean,can,read,type,type,class,context,class,media,type,media,type,if,type,instanceof,parameterized,type,return,false,parameterized,type,parameterized,type,parameterized,type,type,if,parameterized,type,get,raw,type,instanceof,class,return,false,class,raw,type,class,parameterized,type,get,raw,type,if,collection,class,is,assignable,from,raw,type,return,false,if,parameterized,type,get,actual,type,arguments,length,1,return,false,type,type,argument,parameterized,type,get,actual,type,arguments,0,if,type,argument,instanceof,class,return,false,class,type,argument,class,class,type,argument,return,type,argument,class,is,annotation,present,xml,root,element,class,type,argument,class,is,annotation,present,xml,type,class,can,read,media,type
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Type type, Class<?> contextClass, MediaType mediaType);1434985545;{@inheritDoc}_<p>Jaxb2CollectionHttpMessageConverter can read a generic_{@link Collection} where the generic type is a JAXB type annotated with_{@link XmlRootElement} or {@link XmlType}.;@Override_	public boolean canRead(Type type, Class<?> contextClass, MediaType mediaType) {_		if (!(type instanceof ParameterizedType)) {_			return false__		}_		ParameterizedType parameterizedType = (ParameterizedType) type__		if (!(parameterizedType.getRawType() instanceof Class)) {_			return false__		}_		Class<?> rawType = (Class<?>) parameterizedType.getRawType()__		if (!(Collection.class.isAssignableFrom(rawType))) {_			return false__		}_		if (parameterizedType.getActualTypeArguments().length != 1) {_			return false__		}_		Type typeArgument = parameterizedType.getActualTypeArguments()[0]__		if (!(typeArgument instanceof Class)) {_			return false__		}_		Class<?> typeArgumentClass = (Class<?>) typeArgument__		return (typeArgumentClass.isAnnotationPresent(XmlRootElement.class) ||_				typeArgumentClass.isAnnotationPresent(XmlType.class)) && canRead(mediaType)__	};inherit,doc,p,jaxb2collection,http,message,converter,can,read,a,generic,link,collection,where,the,generic,type,is,a,jaxb,type,annotated,with,link,xml,root,element,or,link,xml,type;override,public,boolean,can,read,type,type,class,context,class,media,type,media,type,if,type,instanceof,parameterized,type,return,false,parameterized,type,parameterized,type,parameterized,type,type,if,parameterized,type,get,raw,type,instanceof,class,return,false,class,raw,type,class,parameterized,type,get,raw,type,if,collection,class,is,assignable,from,raw,type,return,false,if,parameterized,type,get,actual,type,arguments,length,1,return,false,type,type,argument,parameterized,type,get,actual,type,arguments,0,if,type,argument,instanceof,class,return,false,class,type,argument,class,class,type,argument,return,type,argument,class,is,annotation,present,xml,root,element,class,type,argument,class,is,annotation,present,xml,type,class,can,read,media,type
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Type type, Class<?> contextClass, MediaType mediaType);1435665021;{@inheritDoc}_<p>Jaxb2CollectionHttpMessageConverter can read a generic_{@link Collection} where the generic type is a JAXB type annotated with_{@link XmlRootElement} or {@link XmlType}.;@Override_	public boolean canRead(Type type, Class<?> contextClass, MediaType mediaType) {_		if (!(type instanceof ParameterizedType)) {_			return false__		}_		ParameterizedType parameterizedType = (ParameterizedType) type__		if (!(parameterizedType.getRawType() instanceof Class)) {_			return false__		}_		Class<?> rawType = (Class<?>) parameterizedType.getRawType()__		if (!(Collection.class.isAssignableFrom(rawType))) {_			return false__		}_		if (parameterizedType.getActualTypeArguments().length != 1) {_			return false__		}_		Type typeArgument = parameterizedType.getActualTypeArguments()[0]__		if (!(typeArgument instanceof Class)) {_			return false__		}_		Class<?> typeArgumentClass = (Class<?>) typeArgument__		return (typeArgumentClass.isAnnotationPresent(XmlRootElement.class) ||_				typeArgumentClass.isAnnotationPresent(XmlType.class)) && canRead(mediaType)__	};inherit,doc,p,jaxb2collection,http,message,converter,can,read,a,generic,link,collection,where,the,generic,type,is,a,jaxb,type,annotated,with,link,xml,root,element,or,link,xml,type;override,public,boolean,can,read,type,type,class,context,class,media,type,media,type,if,type,instanceof,parameterized,type,return,false,parameterized,type,parameterized,type,parameterized,type,type,if,parameterized,type,get,raw,type,instanceof,class,return,false,class,raw,type,class,parameterized,type,get,raw,type,if,collection,class,is,assignable,from,raw,type,return,false,if,parameterized,type,get,actual,type,arguments,length,1,return,false,type,type,argument,parameterized,type,get,actual,type,arguments,0,if,type,argument,instanceof,class,return,false,class,type,argument,class,class,type,argument,return,type,argument,class,is,annotation,present,xml,root,element,class,type,argument,class,is,annotation,present,xml,type,class,can,read,media,type
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Type type, Class<?> contextClass, MediaType mediaType);1439827033;{@inheritDoc}_<p>Jaxb2CollectionHttpMessageConverter can read a generic_{@link Collection} where the generic type is a JAXB type annotated with_{@link XmlRootElement} or {@link XmlType}.;@Override_	public boolean canRead(Type type, Class<?> contextClass, MediaType mediaType) {_		if (!(type instanceof ParameterizedType)) {_			return false__		}_		ParameterizedType parameterizedType = (ParameterizedType) type__		if (!(parameterizedType.getRawType() instanceof Class)) {_			return false__		}_		Class<?> rawType = (Class<?>) parameterizedType.getRawType()__		if (!(Collection.class.isAssignableFrom(rawType))) {_			return false__		}_		if (parameterizedType.getActualTypeArguments().length != 1) {_			return false__		}_		Type typeArgument = parameterizedType.getActualTypeArguments()[0]__		if (!(typeArgument instanceof Class)) {_			return false__		}_		Class<?> typeArgumentClass = (Class<?>) typeArgument__		return (typeArgumentClass.isAnnotationPresent(XmlRootElement.class) ||_				typeArgumentClass.isAnnotationPresent(XmlType.class)) && canRead(mediaType)__	};inherit,doc,p,jaxb2collection,http,message,converter,can,read,a,generic,link,collection,where,the,generic,type,is,a,jaxb,type,annotated,with,link,xml,root,element,or,link,xml,type;override,public,boolean,can,read,type,type,class,context,class,media,type,media,type,if,type,instanceof,parameterized,type,return,false,parameterized,type,parameterized,type,parameterized,type,type,if,parameterized,type,get,raw,type,instanceof,class,return,false,class,raw,type,class,parameterized,type,get,raw,type,if,collection,class,is,assignable,from,raw,type,return,false,if,parameterized,type,get,actual,type,arguments,length,1,return,false,type,type,argument,parameterized,type,get,actual,type,arguments,0,if,type,argument,instanceof,class,return,false,class,type,argument,class,class,type,argument,return,type,argument,class,is,annotation,present,xml,root,element,class,type,argument,class,is,annotation,present,xml,type,class,can,read,media,type
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Type type, Class<?> contextClass, MediaType mediaType);1444681540;{@inheritDoc}_<p>Jaxb2CollectionHttpMessageConverter can read a generic_{@link Collection} where the generic type is a JAXB type annotated with_{@link XmlRootElement} or {@link XmlType}.;@Override_	public boolean canRead(Type type, Class<?> contextClass, MediaType mediaType) {_		if (!(type instanceof ParameterizedType)) {_			return false__		}_		ParameterizedType parameterizedType = (ParameterizedType) type__		if (!(parameterizedType.getRawType() instanceof Class)) {_			return false__		}_		Class<?> rawType = (Class<?>) parameterizedType.getRawType()__		if (!(Collection.class.isAssignableFrom(rawType))) {_			return false__		}_		if (parameterizedType.getActualTypeArguments().length != 1) {_			return false__		}_		Type typeArgument = parameterizedType.getActualTypeArguments()[0]__		if (!(typeArgument instanceof Class)) {_			return false__		}_		Class<?> typeArgumentClass = (Class<?>) typeArgument__		return (typeArgumentClass.isAnnotationPresent(XmlRootElement.class) ||_				typeArgumentClass.isAnnotationPresent(XmlType.class)) && canRead(mediaType)__	};inherit,doc,p,jaxb2collection,http,message,converter,can,read,a,generic,link,collection,where,the,generic,type,is,a,jaxb,type,annotated,with,link,xml,root,element,or,link,xml,type;override,public,boolean,can,read,type,type,class,context,class,media,type,media,type,if,type,instanceof,parameterized,type,return,false,parameterized,type,parameterized,type,parameterized,type,type,if,parameterized,type,get,raw,type,instanceof,class,return,false,class,raw,type,class,parameterized,type,get,raw,type,if,collection,class,is,assignable,from,raw,type,return,false,if,parameterized,type,get,actual,type,arguments,length,1,return,false,type,type,argument,parameterized,type,get,actual,type,arguments,0,if,type,argument,instanceof,class,return,false,class,type,argument,class,class,type,argument,return,type,argument,class,is,annotation,present,xml,root,element,class,type,argument,class,is,annotation,present,xml,type,class,can,read,media,type
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Type type, Class<?> contextClass, MediaType mediaType);1468948866;{@inheritDoc}_<p>Jaxb2CollectionHttpMessageConverter can read a generic_{@link Collection} where the generic type is a JAXB type annotated with_{@link XmlRootElement} or {@link XmlType}.;@Override_	public boolean canRead(Type type, Class<?> contextClass, MediaType mediaType) {_		if (!(type instanceof ParameterizedType)) {_			return false__		}_		ParameterizedType parameterizedType = (ParameterizedType) type__		if (!(parameterizedType.getRawType() instanceof Class)) {_			return false__		}_		Class<?> rawType = (Class<?>) parameterizedType.getRawType()__		if (!(Collection.class.isAssignableFrom(rawType))) {_			return false__		}_		if (parameterizedType.getActualTypeArguments().length != 1) {_			return false__		}_		Type typeArgument = parameterizedType.getActualTypeArguments()[0]__		if (!(typeArgument instanceof Class)) {_			return false__		}_		Class<?> typeArgumentClass = (Class<?>) typeArgument__		return (typeArgumentClass.isAnnotationPresent(XmlRootElement.class) ||_				typeArgumentClass.isAnnotationPresent(XmlType.class)) && canRead(mediaType)__	};inherit,doc,p,jaxb2collection,http,message,converter,can,read,a,generic,link,collection,where,the,generic,type,is,a,jaxb,type,annotated,with,link,xml,root,element,or,link,xml,type;override,public,boolean,can,read,type,type,class,context,class,media,type,media,type,if,type,instanceof,parameterized,type,return,false,parameterized,type,parameterized,type,parameterized,type,type,if,parameterized,type,get,raw,type,instanceof,class,return,false,class,raw,type,class,parameterized,type,get,raw,type,if,collection,class,is,assignable,from,raw,type,return,false,if,parameterized,type,get,actual,type,arguments,length,1,return,false,type,type,argument,parameterized,type,get,actual,type,arguments,0,if,type,argument,instanceof,class,return,false,class,type,argument,class,class,type,argument,return,type,argument,class,is,annotation,present,xml,root,element,class,type,argument,class,is,annotation,present,xml,type,class,can,read,media,type
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canRead(Type type, Class<?> contextClass, MediaType mediaType);1491480646;{@inheritDoc}_<p>Jaxb2CollectionHttpMessageConverter can read a generic_{@link Collection} where the generic type is a JAXB type annotated with_{@link XmlRootElement} or {@link XmlType}.;@Override_	public boolean canRead(Type type, Class<?> contextClass, MediaType mediaType) {_		if (!(type instanceof ParameterizedType)) {_			return false__		}_		ParameterizedType parameterizedType = (ParameterizedType) type__		if (!(parameterizedType.getRawType() instanceof Class)) {_			return false__		}_		Class<?> rawType = (Class<?>) parameterizedType.getRawType()__		if (!(Collection.class.isAssignableFrom(rawType))) {_			return false__		}_		if (parameterizedType.getActualTypeArguments().length != 1) {_			return false__		}_		Type typeArgument = parameterizedType.getActualTypeArguments()[0]__		if (!(typeArgument instanceof Class)) {_			return false__		}_		Class<?> typeArgumentClass = (Class<?>) typeArgument__		return (typeArgumentClass.isAnnotationPresent(XmlRootElement.class) ||_				typeArgumentClass.isAnnotationPresent(XmlType.class)) && canRead(mediaType)__	};inherit,doc,p,jaxb2collection,http,message,converter,can,read,a,generic,link,collection,where,the,generic,type,is,a,jaxb,type,annotated,with,link,xml,root,element,or,link,xml,type;override,public,boolean,can,read,type,type,class,context,class,media,type,media,type,if,type,instanceof,parameterized,type,return,false,parameterized,type,parameterized,type,parameterized,type,type,if,parameterized,type,get,raw,type,instanceof,class,return,false,class,raw,type,class,parameterized,type,get,raw,type,if,collection,class,is,assignable,from,raw,type,return,false,if,parameterized,type,get,actual,type,arguments,length,1,return,false,type,type,argument,parameterized,type,get,actual,type,arguments,0,if,type,argument,instanceof,class,return,false,class,type,argument,class,class,type,argument,return,type,argument,class,is,annotation,present,xml,root,element,class,type,argument,class,is,annotation,present,xml,type,class,can,read,media,type
Jaxb2CollectionHttpMessageConverter -> protected XMLInputFactory createXmlInputFactory();1345666836;Create a {@code XMLInputFactory} that this converter will use to create {@link_javax.xml.stream.XMLStreamReader} and {@link javax.xml.stream.XMLEventReader} objects._<p/> Can be overridden in subclasses, adding further initialization of the factory._The resulting factory is cached, so this method will only be called once.__@return the created factory;protected XMLInputFactory createXmlInputFactory() {_		return XMLInputFactory.newInstance()__	};create,a,code,xmlinput,factory,that,this,converter,will,use,to,create,link,javax,xml,stream,xmlstream,reader,and,link,javax,xml,stream,xmlevent,reader,objects,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,factory,the,resulting,factory,is,cached,so,this,method,will,only,be,called,once,return,the,created,factory;protected,xmlinput,factory,create,xml,input,factory,return,xmlinput,factory,new,instance
Jaxb2CollectionHttpMessageConverter -> protected XMLInputFactory createXmlInputFactory();1353602122;Create a {@code XMLInputFactory} that this converter will use to create {@link_javax.xml.stream.XMLStreamReader} and {@link javax.xml.stream.XMLEventReader} objects._<p/> Can be overridden in subclasses, adding further initialization of the factory._The resulting factory is cached, so this method will only be called once.__@return the created factory;protected XMLInputFactory createXmlInputFactory() {_		return XMLInputFactory.newInstance()__	};create,a,code,xmlinput,factory,that,this,converter,will,use,to,create,link,javax,xml,stream,xmlstream,reader,and,link,javax,xml,stream,xmlevent,reader,objects,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,factory,the,resulting,factory,is,cached,so,this,method,will,only,be,called,once,return,the,created,factory;protected,xmlinput,factory,create,xml,input,factory,return,xmlinput,factory,new,instance
Jaxb2CollectionHttpMessageConverter -> protected XMLInputFactory createXmlInputFactory();1356735495;Create a {@code XMLInputFactory} that this converter will use to create {@link_javax.xml.stream.XMLStreamReader} and {@link javax.xml.stream.XMLEventReader} objects._<p/> Can be overridden in subclasses, adding further initialization of the factory._The resulting factory is cached, so this method will only be called once.__@return the created factory;protected XMLInputFactory createXmlInputFactory() {_		return XMLInputFactory.newInstance()__	};create,a,code,xmlinput,factory,that,this,converter,will,use,to,create,link,javax,xml,stream,xmlstream,reader,and,link,javax,xml,stream,xmlevent,reader,objects,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,factory,the,resulting,factory,is,cached,so,this,method,will,only,be,called,once,return,the,created,factory;protected,xmlinput,factory,create,xml,input,factory,return,xmlinput,factory,new,instance
Jaxb2CollectionHttpMessageConverter -> protected XMLInputFactory createXmlInputFactory();1357119239;Create a {@code XMLInputFactory} that this converter will use to create {@link_javax.xml.stream.XMLStreamReader} and {@link javax.xml.stream.XMLEventReader} objects._<p/> Can be overridden in subclasses, adding further initialization of the factory._The resulting factory is cached, so this method will only be called once.__@return the created factory;protected XMLInputFactory createXmlInputFactory() {_		return XMLInputFactory.newInstance()__	};create,a,code,xmlinput,factory,that,this,converter,will,use,to,create,link,javax,xml,stream,xmlstream,reader,and,link,javax,xml,stream,xmlevent,reader,objects,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,factory,the,resulting,factory,is,cached,so,this,method,will,only,be,called,once,return,the,created,factory;protected,xmlinput,factory,create,xml,input,factory,return,xmlinput,factory,new,instance
Jaxb2CollectionHttpMessageConverter -> protected XMLInputFactory createXmlInputFactory();1368482696;Create a {@code XMLInputFactory} that this converter will use to create {@link_javax.xml.stream.XMLStreamReader} and {@link javax.xml.stream.XMLEventReader} objects._<p/> Can be overridden in subclasses, adding further initialization of the factory._The resulting factory is cached, so this method will only be called once.__@return the created factory;protected XMLInputFactory createXmlInputFactory() {_		return XMLInputFactory.newInstance()__	};create,a,code,xmlinput,factory,that,this,converter,will,use,to,create,link,javax,xml,stream,xmlstream,reader,and,link,javax,xml,stream,xmlevent,reader,objects,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,factory,the,resulting,factory,is,cached,so,this,method,will,only,be,called,once,return,the,created,factory;protected,xmlinput,factory,create,xml,input,factory,return,xmlinput,factory,new,instance
Jaxb2CollectionHttpMessageConverter -> protected XMLInputFactory createXmlInputFactory();1375826933;Create a {@code XMLInputFactory} that this converter will use to create {@link_javax.xml.stream.XMLStreamReader} and {@link javax.xml.stream.XMLEventReader} objects._<p/> Can be overridden in subclasses, adding further initialization of the factory._The resulting factory is cached, so this method will only be called once.__@return the created factory;protected XMLInputFactory createXmlInputFactory() {_		XMLInputFactory inputFactory = XMLInputFactory.newInstance()__		inputFactory.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, false)__		return inputFactory__	};create,a,code,xmlinput,factory,that,this,converter,will,use,to,create,link,javax,xml,stream,xmlstream,reader,and,link,javax,xml,stream,xmlevent,reader,objects,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,factory,the,resulting,factory,is,cached,so,this,method,will,only,be,called,once,return,the,created,factory;protected,xmlinput,factory,create,xml,input,factory,xmlinput,factory,input,factory,xmlinput,factory,new,instance,input,factory,set,property,xmlinput,factory,false,return,input,factory
Jaxb2CollectionHttpMessageConverter -> protected XMLInputFactory createXmlInputFactory();1385412762;Create a {@code XMLInputFactory} that this converter will use to create {@link_javax.xml.stream.XMLStreamReader} and {@link javax.xml.stream.XMLEventReader} objects._<p/> Can be overridden in subclasses, adding further initialization of the factory._The resulting factory is cached, so this method will only be called once.__@return the created factory;protected XMLInputFactory createXmlInputFactory() {_		XMLInputFactory inputFactory = XMLInputFactory.newInstance()__		inputFactory.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, false)__		return inputFactory__	};create,a,code,xmlinput,factory,that,this,converter,will,use,to,create,link,javax,xml,stream,xmlstream,reader,and,link,javax,xml,stream,xmlevent,reader,objects,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,factory,the,resulting,factory,is,cached,so,this,method,will,only,be,called,once,return,the,created,factory;protected,xmlinput,factory,create,xml,input,factory,xmlinput,factory,input,factory,xmlinput,factory,new,instance,input,factory,set,property,xmlinput,factory,false,return,input,factory
Jaxb2CollectionHttpMessageConverter -> protected XMLInputFactory createXmlInputFactory();1391481853;Create a {@code XMLInputFactory} that this converter will use to create {@link_javax.xml.stream.XMLStreamReader} and {@link javax.xml.stream.XMLEventReader} objects._<p/> Can be overridden in subclasses, adding further initialization of the factory._The resulting factory is cached, so this method will only be called once.__@return the created factory;protected XMLInputFactory createXmlInputFactory() {_		XMLInputFactory inputFactory = XMLInputFactory.newInstance()__		inputFactory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false)__		return inputFactory__	};create,a,code,xmlinput,factory,that,this,converter,will,use,to,create,link,javax,xml,stream,xmlstream,reader,and,link,javax,xml,stream,xmlevent,reader,objects,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,factory,the,resulting,factory,is,cached,so,this,method,will,only,be,called,once,return,the,created,factory;protected,xmlinput,factory,create,xml,input,factory,xmlinput,factory,input,factory,xmlinput,factory,new,instance,input,factory,set,property,xmlinput,factory,false,return,input,factory
Jaxb2CollectionHttpMessageConverter -> protected XMLInputFactory createXmlInputFactory();1400553912;Create a {@code XMLInputFactory} that this converter will use to create {@link_javax.xml.stream.XMLStreamReader} and {@link javax.xml.stream.XMLEventReader} objects._<p/> Can be overridden in subclasses, adding further initialization of the factory._The resulting factory is cached, so this method will only be called once.__@return the created factory;protected XMLInputFactory createXmlInputFactory() {_		XMLInputFactory inputFactory = XMLInputFactory.newInstance()__		inputFactory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false)__		inputFactory.setXMLResolver(NO_OP_XML_RESOLVER)__		return inputFactory__	};create,a,code,xmlinput,factory,that,this,converter,will,use,to,create,link,javax,xml,stream,xmlstream,reader,and,link,javax,xml,stream,xmlevent,reader,objects,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,factory,the,resulting,factory,is,cached,so,this,method,will,only,be,called,once,return,the,created,factory;protected,xmlinput,factory,create,xml,input,factory,xmlinput,factory,input,factory,xmlinput,factory,new,instance,input,factory,set,property,xmlinput,factory,false,input,factory,set,xmlresolver,return,input,factory
Jaxb2CollectionHttpMessageConverter -> protected XMLInputFactory createXmlInputFactory();1400575566;Create a {@code XMLInputFactory} that this converter will use to create {@link_javax.xml.stream.XMLStreamReader} and {@link javax.xml.stream.XMLEventReader} objects._<p>Can be overridden in subclasses, adding further initialization of the factory._The resulting factory is cached, so this method will only be called once.;protected XMLInputFactory createXmlInputFactory() {_		XMLInputFactory inputFactory = XMLInputFactory.newInstance()__		inputFactory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false)__		inputFactory.setXMLResolver(NO_OP_XML_RESOLVER)__		return inputFactory__	};create,a,code,xmlinput,factory,that,this,converter,will,use,to,create,link,javax,xml,stream,xmlstream,reader,and,link,javax,xml,stream,xmlevent,reader,objects,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,factory,the,resulting,factory,is,cached,so,this,method,will,only,be,called,once;protected,xmlinput,factory,create,xml,input,factory,xmlinput,factory,input,factory,xmlinput,factory,new,instance,input,factory,set,property,xmlinput,factory,false,input,factory,set,xmlresolver,return,input,factory
Jaxb2CollectionHttpMessageConverter -> protected XMLInputFactory createXmlInputFactory();1432125256;Create a {@code XMLInputFactory} that this converter will use to create {@link_javax.xml.stream.XMLStreamReader} and {@link javax.xml.stream.XMLEventReader} objects._<p>Can be overridden in subclasses, adding further initialization of the factory._The resulting factory is cached, so this method will only be called once.;protected XMLInputFactory createXmlInputFactory() {_		XMLInputFactory inputFactory = XMLInputFactory.newInstance()__		inputFactory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false)__		inputFactory.setXMLResolver(NO_OP_XML_RESOLVER)__		return inputFactory__	};create,a,code,xmlinput,factory,that,this,converter,will,use,to,create,link,javax,xml,stream,xmlstream,reader,and,link,javax,xml,stream,xmlevent,reader,objects,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,factory,the,resulting,factory,is,cached,so,this,method,will,only,be,called,once;protected,xmlinput,factory,create,xml,input,factory,xmlinput,factory,input,factory,xmlinput,factory,new,instance,input,factory,set,property,xmlinput,factory,false,input,factory,set,xmlresolver,return,input,factory
Jaxb2CollectionHttpMessageConverter -> protected XMLInputFactory createXmlInputFactory();1434985545;Create a {@code XMLInputFactory} that this converter will use to create {@link_javax.xml.stream.XMLStreamReader} and {@link javax.xml.stream.XMLEventReader} objects._<p>Can be overridden in subclasses, adding further initialization of the factory._The resulting factory is cached, so this method will only be called once.;protected XMLInputFactory createXmlInputFactory() {_		XMLInputFactory inputFactory = XMLInputFactory.newInstance()__		inputFactory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false)__		inputFactory.setXMLResolver(NO_OP_XML_RESOLVER)__		return inputFactory__	};create,a,code,xmlinput,factory,that,this,converter,will,use,to,create,link,javax,xml,stream,xmlstream,reader,and,link,javax,xml,stream,xmlevent,reader,objects,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,factory,the,resulting,factory,is,cached,so,this,method,will,only,be,called,once;protected,xmlinput,factory,create,xml,input,factory,xmlinput,factory,input,factory,xmlinput,factory,new,instance,input,factory,set,property,xmlinput,factory,false,input,factory,set,xmlresolver,return,input,factory
Jaxb2CollectionHttpMessageConverter -> protected XMLInputFactory createXmlInputFactory();1435665021;Create a {@code XMLInputFactory} that this converter will use to create {@link_javax.xml.stream.XMLStreamReader} and {@link javax.xml.stream.XMLEventReader} objects._<p>Can be overridden in subclasses, adding further initialization of the factory._The resulting factory is cached, so this method will only be called once.;protected XMLInputFactory createXmlInputFactory() {_		XMLInputFactory inputFactory = XMLInputFactory.newInstance()__		inputFactory.setProperty(XMLInputFactory.SUPPORT_DTD, false)__		inputFactory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false)__		inputFactory.setXMLResolver(NO_OP_XML_RESOLVER)__		return inputFactory__	};create,a,code,xmlinput,factory,that,this,converter,will,use,to,create,link,javax,xml,stream,xmlstream,reader,and,link,javax,xml,stream,xmlevent,reader,objects,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,factory,the,resulting,factory,is,cached,so,this,method,will,only,be,called,once;protected,xmlinput,factory,create,xml,input,factory,xmlinput,factory,input,factory,xmlinput,factory,new,instance,input,factory,set,property,xmlinput,factory,false,input,factory,set,property,xmlinput,factory,false,input,factory,set,xmlresolver,return,input,factory
Jaxb2CollectionHttpMessageConverter -> protected XMLInputFactory createXmlInputFactory();1439827033;Create a {@code XMLInputFactory} that this converter will use to create {@link_javax.xml.stream.XMLStreamReader} and {@link javax.xml.stream.XMLEventReader} objects._<p>Can be overridden in subclasses, adding further initialization of the factory._The resulting factory is cached, so this method will only be called once.;protected XMLInputFactory createXmlInputFactory() {_		XMLInputFactory inputFactory = XMLInputFactory.newInstance()__		inputFactory.setProperty(XMLInputFactory.SUPPORT_DTD, false)__		inputFactory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false)__		inputFactory.setXMLResolver(NO_OP_XML_RESOLVER)__		return inputFactory__	};create,a,code,xmlinput,factory,that,this,converter,will,use,to,create,link,javax,xml,stream,xmlstream,reader,and,link,javax,xml,stream,xmlevent,reader,objects,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,factory,the,resulting,factory,is,cached,so,this,method,will,only,be,called,once;protected,xmlinput,factory,create,xml,input,factory,xmlinput,factory,input,factory,xmlinput,factory,new,instance,input,factory,set,property,xmlinput,factory,false,input,factory,set,property,xmlinput,factory,false,input,factory,set,xmlresolver,return,input,factory
Jaxb2CollectionHttpMessageConverter -> protected XMLInputFactory createXmlInputFactory();1444681540;Create a {@code XMLInputFactory} that this converter will use to create {@link_javax.xml.stream.XMLStreamReader} and {@link javax.xml.stream.XMLEventReader} objects._<p>Can be overridden in subclasses, adding further initialization of the factory._The resulting factory is cached, so this method will only be called once.;protected XMLInputFactory createXmlInputFactory() {_		XMLInputFactory inputFactory = XMLInputFactory.newInstance()__		inputFactory.setProperty(XMLInputFactory.SUPPORT_DTD, false)__		inputFactory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false)__		inputFactory.setXMLResolver(NO_OP_XML_RESOLVER)__		return inputFactory__	};create,a,code,xmlinput,factory,that,this,converter,will,use,to,create,link,javax,xml,stream,xmlstream,reader,and,link,javax,xml,stream,xmlevent,reader,objects,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,factory,the,resulting,factory,is,cached,so,this,method,will,only,be,called,once;protected,xmlinput,factory,create,xml,input,factory,xmlinput,factory,input,factory,xmlinput,factory,new,instance,input,factory,set,property,xmlinput,factory,false,input,factory,set,property,xmlinput,factory,false,input,factory,set,xmlresolver,return,input,factory
Jaxb2CollectionHttpMessageConverter -> protected XMLInputFactory createXmlInputFactory();1468948866;Create a {@code XMLInputFactory} that this converter will use to create {@link_javax.xml.stream.XMLStreamReader} and {@link javax.xml.stream.XMLEventReader} objects._<p>Can be overridden in subclasses, adding further initialization of the factory._The resulting factory is cached, so this method will only be called once.;protected XMLInputFactory createXmlInputFactory() {_		XMLInputFactory inputFactory = XMLInputFactory.newInstance()__		inputFactory.setProperty(XMLInputFactory.SUPPORT_DTD, false)__		inputFactory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false)__		inputFactory.setXMLResolver(NO_OP_XML_RESOLVER)__		return inputFactory__	};create,a,code,xmlinput,factory,that,this,converter,will,use,to,create,link,javax,xml,stream,xmlstream,reader,and,link,javax,xml,stream,xmlevent,reader,objects,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,factory,the,resulting,factory,is,cached,so,this,method,will,only,be,called,once;protected,xmlinput,factory,create,xml,input,factory,xmlinput,factory,input,factory,xmlinput,factory,new,instance,input,factory,set,property,xmlinput,factory,false,input,factory,set,property,xmlinput,factory,false,input,factory,set,xmlresolver,return,input,factory
Jaxb2CollectionHttpMessageConverter -> protected XMLInputFactory createXmlInputFactory();1491480646;Create a {@code XMLInputFactory} that this converter will use to create {@link_javax.xml.stream.XMLStreamReader} and {@link javax.xml.stream.XMLEventReader} objects._<p>Can be overridden in subclasses, adding further initialization of the factory._The resulting factory is cached, so this method will only be called once.;protected XMLInputFactory createXmlInputFactory() {_		XMLInputFactory inputFactory = XMLInputFactory.newInstance()__		inputFactory.setProperty(XMLInputFactory.SUPPORT_DTD, false)__		inputFactory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false)__		inputFactory.setXMLResolver(NO_OP_XML_RESOLVER)__		return inputFactory__	};create,a,code,xmlinput,factory,that,this,converter,will,use,to,create,link,javax,xml,stream,xmlstream,reader,and,link,javax,xml,stream,xmlevent,reader,objects,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,factory,the,resulting,factory,is,cached,so,this,method,will,only,be,called,once;protected,xmlinput,factory,create,xml,input,factory,xmlinput,factory,input,factory,xmlinput,factory,new,instance,input,factory,set,property,xmlinput,factory,false,input,factory,set,property,xmlinput,factory,false,input,factory,set,xmlresolver,return,input,factory
Jaxb2CollectionHttpMessageConverter -> protected XMLInputFactory createXmlInputFactory();1496242568;Create a {@code XMLInputFactory} that this converter will use to create {@link_javax.xml.stream.XMLStreamReader} and {@link javax.xml.stream.XMLEventReader} objects._<p>Can be overridden in subclasses, adding further initialization of the factory._The resulting factory is cached, so this method will only be called once.;protected XMLInputFactory createXmlInputFactory() {_		XMLInputFactory inputFactory = XMLInputFactory.newInstance()__		inputFactory.setProperty(XMLInputFactory.SUPPORT_DTD, false)__		inputFactory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false)__		inputFactory.setXMLResolver(NO_OP_XML_RESOLVER)__		return inputFactory__	};create,a,code,xmlinput,factory,that,this,converter,will,use,to,create,link,javax,xml,stream,xmlstream,reader,and,link,javax,xml,stream,xmlevent,reader,objects,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,factory,the,resulting,factory,is,cached,so,this,method,will,only,be,called,once;protected,xmlinput,factory,create,xml,input,factory,xmlinput,factory,input,factory,xmlinput,factory,new,instance,input,factory,set,property,xmlinput,factory,false,input,factory,set,property,xmlinput,factory,false,input,factory,set,xmlresolver,return,input,factory
Jaxb2CollectionHttpMessageConverter -> protected XMLInputFactory createXmlInputFactory();1496259743;Create a {@code XMLInputFactory} that this converter will use to create {@link_javax.xml.stream.XMLStreamReader} and {@link javax.xml.stream.XMLEventReader} objects._<p>Can be overridden in subclasses, adding further initialization of the factory._The resulting factory is cached, so this method will only be called once.;protected XMLInputFactory createXmlInputFactory() {_		XMLInputFactory inputFactory = XMLInputFactory.newInstance()__		inputFactory.setProperty(XMLInputFactory.SUPPORT_DTD, false)__		inputFactory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false)__		inputFactory.setXMLResolver(NO_OP_XML_RESOLVER)__		return inputFactory__	};create,a,code,xmlinput,factory,that,this,converter,will,use,to,create,link,javax,xml,stream,xmlstream,reader,and,link,javax,xml,stream,xmlevent,reader,objects,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,factory,the,resulting,factory,is,cached,so,this,method,will,only,be,called,once;protected,xmlinput,factory,create,xml,input,factory,xmlinput,factory,input,factory,xmlinput,factory,new,instance,input,factory,set,property,xmlinput,factory,false,input,factory,set,property,xmlinput,factory,false,input,factory,set,xmlresolver,return,input,factory
Jaxb2CollectionHttpMessageConverter -> protected XMLInputFactory createXmlInputFactory();1499973642;Create a {@code XMLInputFactory} that this converter will use to create {@link_javax.xml.stream.XMLStreamReader} and {@link javax.xml.stream.XMLEventReader} objects._<p>Can be overridden in subclasses, adding further initialization of the factory._The resulting factory is cached, so this method will only be called once.;protected XMLInputFactory createXmlInputFactory() {_		XMLInputFactory inputFactory = XMLInputFactory.newInstance()__		inputFactory.setProperty(XMLInputFactory.SUPPORT_DTD, false)__		inputFactory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false)__		inputFactory.setXMLResolver(NO_OP_XML_RESOLVER)__		return inputFactory__	};create,a,code,xmlinput,factory,that,this,converter,will,use,to,create,link,javax,xml,stream,xmlstream,reader,and,link,javax,xml,stream,xmlevent,reader,objects,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,factory,the,resulting,factory,is,cached,so,this,method,will,only,be,called,once;protected,xmlinput,factory,create,xml,input,factory,xmlinput,factory,input,factory,xmlinput,factory,new,instance,input,factory,set,property,xmlinput,factory,false,input,factory,set,property,xmlinput,factory,false,input,factory,set,xmlresolver,return,input,factory
Jaxb2CollectionHttpMessageConverter -> protected XMLInputFactory createXmlInputFactory();1500549447;Create an {@code XMLInputFactory} that this converter will use to create_{@link javax.xml.stream.XMLStreamReader} and {@link javax.xml.stream.XMLEventReader}_objects._<p>Can be overridden in subclasses, adding further initialization of the factory._The resulting factory is cached, so this method will only be called once._@see StaxUtils#createDefensiveInputFactory();protected XMLInputFactory createXmlInputFactory() {_		return StaxUtils.createDefensiveInputFactory()__	};create,an,code,xmlinput,factory,that,this,converter,will,use,to,create,link,javax,xml,stream,xmlstream,reader,and,link,javax,xml,stream,xmlevent,reader,objects,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,factory,the,resulting,factory,is,cached,so,this,method,will,only,be,called,once,see,stax,utils,create,defensive,input,factory;protected,xmlinput,factory,create,xml,input,factory,return,stax,utils,create,defensive,input,factory
Jaxb2CollectionHttpMessageConverter -> protected XMLInputFactory createXmlInputFactory();1530174524;Create an {@code XMLInputFactory} that this converter will use to create_{@link javax.xml.stream.XMLStreamReader} and {@link javax.xml.stream.XMLEventReader}_objects._<p>Can be overridden in subclasses, adding further initialization of the factory._The resulting factory is cached, so this method will only be called once._@see StaxUtils#createDefensiveInputFactory();protected XMLInputFactory createXmlInputFactory() {_		return StaxUtils.createDefensiveInputFactory()__	};create,an,code,xmlinput,factory,that,this,converter,will,use,to,create,link,javax,xml,stream,xmlstream,reader,and,link,javax,xml,stream,xmlevent,reader,objects,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,factory,the,resulting,factory,is,cached,so,this,method,will,only,be,called,once,see,stax,utils,create,defensive,input,factory;protected,xmlinput,factory,create,xml,input,factory,return,stax,utils,create,defensive,input,factory
Jaxb2CollectionHttpMessageConverter -> protected XMLInputFactory createXmlInputFactory();1530174524;Create an {@code XMLInputFactory} that this converter will use to create_{@link javax.xml.stream.XMLStreamReader} and {@link javax.xml.stream.XMLEventReader}_objects._<p>Can be overridden in subclasses, adding further initialization of the factory._The resulting factory is cached, so this method will only be called once._@see StaxUtils#createDefensiveInputFactory();protected XMLInputFactory createXmlInputFactory() {_		return StaxUtils.createDefensiveInputFactory()__	};create,an,code,xmlinput,factory,that,this,converter,will,use,to,create,link,javax,xml,stream,xmlstream,reader,and,link,javax,xml,stream,xmlevent,reader,objects,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,factory,the,resulting,factory,is,cached,so,this,method,will,only,be,called,once,see,stax,utils,create,defensive,input,factory;protected,xmlinput,factory,create,xml,input,factory,return,stax,utils,create,defensive,input,factory
Jaxb2CollectionHttpMessageConverter -> protected XMLInputFactory createXmlInputFactory();1530563849;Create an {@code XMLInputFactory} that this converter will use to create_{@link javax.xml.stream.XMLStreamReader} and {@link javax.xml.stream.XMLEventReader}_objects._<p>Can be overridden in subclasses, adding further initialization of the factory._The resulting factory is cached, so this method will only be called once._@see StaxUtils#createDefensiveInputFactory();protected XMLInputFactory createXmlInputFactory() {_		return StaxUtils.createDefensiveInputFactory()__	};create,an,code,xmlinput,factory,that,this,converter,will,use,to,create,link,javax,xml,stream,xmlstream,reader,and,link,javax,xml,stream,xmlevent,reader,objects,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,factory,the,resulting,factory,is,cached,so,this,method,will,only,be,called,once,see,stax,utils,create,defensive,input,factory;protected,xmlinput,factory,create,xml,input,factory,return,stax,utils,create,defensive,input,factory
Jaxb2CollectionHttpMessageConverter -> protected XMLInputFactory createXmlInputFactory();1530737169;Create an {@code XMLInputFactory} that this converter will use to create_{@link javax.xml.stream.XMLStreamReader} and {@link javax.xml.stream.XMLEventReader}_objects._<p>Can be overridden in subclasses, adding further initialization of the factory._The resulting factory is cached, so this method will only be called once._@see StaxUtils#createDefensiveInputFactory();protected XMLInputFactory createXmlInputFactory() {_		return StaxUtils.createDefensiveInputFactory()__	};create,an,code,xmlinput,factory,that,this,converter,will,use,to,create,link,javax,xml,stream,xmlstream,reader,and,link,javax,xml,stream,xmlevent,reader,objects,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,factory,the,resulting,factory,is,cached,so,this,method,will,only,be,called,once,see,stax,utils,create,defensive,input,factory;protected,xmlinput,factory,create,xml,input,factory,return,stax,utils,create,defensive,input,factory
Jaxb2CollectionHttpMessageConverter -> @SuppressWarnings("unchecked") 	protected T createCollection(Class<?> collectionClass);1345666836;Create a Collection of the given type, with the given initial capacity_(if supported by the Collection type).__@param collectionClass the type of Collection to instantiate_@return the created Collection instance;@SuppressWarnings("unchecked")_	protected T createCollection(Class<?> collectionClass) {_		if (!collectionClass.isInterface()) {_			try {_				return (T) collectionClass.newInstance()__			}_			catch (Exception ex) {_				throw new IllegalArgumentException(_						"Could not instantiate collection class [" +_								collectionClass.getName() + "]: " + ex.getMessage())__			}_		}_		else if (List.class.equals(collectionClass)) {_			return (T) new ArrayList()__		}_		else if (SortedSet.class.equals(collectionClass)) {_			return (T) new TreeSet()__		}_		else {_			return (T) new LinkedHashSet()__		}_	};create,a,collection,of,the,given,type,with,the,given,initial,capacity,if,supported,by,the,collection,type,param,collection,class,the,type,of,collection,to,instantiate,return,the,created,collection,instance;suppress,warnings,unchecked,protected,t,create,collection,class,collection,class,if,collection,class,is,interface,try,return,t,collection,class,new,instance,catch,exception,ex,throw,new,illegal,argument,exception,could,not,instantiate,collection,class,collection,class,get,name,ex,get,message,else,if,list,class,equals,collection,class,return,t,new,array,list,else,if,sorted,set,class,equals,collection,class,return,t,new,tree,set,else,return,t,new,linked,hash,set
Jaxb2CollectionHttpMessageConverter -> @SuppressWarnings("unchecked") 	protected T createCollection(Class<?> collectionClass);1353602122;Create a Collection of the given type, with the given initial capacity_(if supported by the Collection type).__@param collectionClass the type of Collection to instantiate_@return the created Collection instance;@SuppressWarnings("unchecked")_	protected T createCollection(Class<?> collectionClass) {_		if (!collectionClass.isInterface()) {_			try {_				return (T) collectionClass.newInstance()__			}_			catch (Exception ex) {_				throw new IllegalArgumentException(_						"Could not instantiate collection class [" +_								collectionClass.getName() + "]: " + ex.getMessage())__			}_		}_		else if (List.class.equals(collectionClass)) {_			return (T) new ArrayList()__		}_		else if (SortedSet.class.equals(collectionClass)) {_			return (T) new TreeSet()__		}_		else {_			return (T) new LinkedHashSet()__		}_	};create,a,collection,of,the,given,type,with,the,given,initial,capacity,if,supported,by,the,collection,type,param,collection,class,the,type,of,collection,to,instantiate,return,the,created,collection,instance;suppress,warnings,unchecked,protected,t,create,collection,class,collection,class,if,collection,class,is,interface,try,return,t,collection,class,new,instance,catch,exception,ex,throw,new,illegal,argument,exception,could,not,instantiate,collection,class,collection,class,get,name,ex,get,message,else,if,list,class,equals,collection,class,return,t,new,array,list,else,if,sorted,set,class,equals,collection,class,return,t,new,tree,set,else,return,t,new,linked,hash,set
Jaxb2CollectionHttpMessageConverter -> @SuppressWarnings("unchecked") 	protected T createCollection(Class<?> collectionClass);1356735495;Create a Collection of the given type, with the given initial capacity_(if supported by the Collection type).__@param collectionClass the type of Collection to instantiate_@return the created Collection instance;@SuppressWarnings("unchecked")_	protected T createCollection(Class<?> collectionClass) {_		if (!collectionClass.isInterface()) {_			try {_				return (T) collectionClass.newInstance()__			}_			catch (Exception ex) {_				throw new IllegalArgumentException(_						"Could not instantiate collection class [" +_								collectionClass.getName() + "]: " + ex.getMessage())__			}_		}_		else if (List.class.equals(collectionClass)) {_			return (T) new ArrayList()__		}_		else if (SortedSet.class.equals(collectionClass)) {_			return (T) new TreeSet()__		}_		else {_			return (T) new LinkedHashSet()__		}_	};create,a,collection,of,the,given,type,with,the,given,initial,capacity,if,supported,by,the,collection,type,param,collection,class,the,type,of,collection,to,instantiate,return,the,created,collection,instance;suppress,warnings,unchecked,protected,t,create,collection,class,collection,class,if,collection,class,is,interface,try,return,t,collection,class,new,instance,catch,exception,ex,throw,new,illegal,argument,exception,could,not,instantiate,collection,class,collection,class,get,name,ex,get,message,else,if,list,class,equals,collection,class,return,t,new,array,list,else,if,sorted,set,class,equals,collection,class,return,t,new,tree,set,else,return,t,new,linked,hash,set
Jaxb2CollectionHttpMessageConverter -> @SuppressWarnings("unchecked") 	protected T createCollection(Class<?> collectionClass);1357119239;Create a Collection of the given type, with the given initial capacity_(if supported by the Collection type).__@param collectionClass the type of Collection to instantiate_@return the created Collection instance;@SuppressWarnings("unchecked")_	protected T createCollection(Class<?> collectionClass) {_		if (!collectionClass.isInterface()) {_			try {_				return (T) collectionClass.newInstance()__			}_			catch (Exception ex) {_				throw new IllegalArgumentException(_						"Could not instantiate collection class [" +_								collectionClass.getName() + "]: " + ex.getMessage())__			}_		}_		else if (List.class.equals(collectionClass)) {_			return (T) new ArrayList()__		}_		else if (SortedSet.class.equals(collectionClass)) {_			return (T) new TreeSet()__		}_		else {_			return (T) new LinkedHashSet()__		}_	};create,a,collection,of,the,given,type,with,the,given,initial,capacity,if,supported,by,the,collection,type,param,collection,class,the,type,of,collection,to,instantiate,return,the,created,collection,instance;suppress,warnings,unchecked,protected,t,create,collection,class,collection,class,if,collection,class,is,interface,try,return,t,collection,class,new,instance,catch,exception,ex,throw,new,illegal,argument,exception,could,not,instantiate,collection,class,collection,class,get,name,ex,get,message,else,if,list,class,equals,collection,class,return,t,new,array,list,else,if,sorted,set,class,equals,collection,class,return,t,new,tree,set,else,return,t,new,linked,hash,set
Jaxb2CollectionHttpMessageConverter -> @SuppressWarnings("unchecked") 	protected T createCollection(Class<?> collectionClass);1368482696;Create a Collection of the given type, with the given initial capacity_(if supported by the Collection type).__@param collectionClass the type of Collection to instantiate_@return the created Collection instance;@SuppressWarnings("unchecked")_	protected T createCollection(Class<?> collectionClass) {_		if (!collectionClass.isInterface()) {_			try {_				return (T) collectionClass.newInstance()__			}_			catch (Exception ex) {_				throw new IllegalArgumentException(_						"Could not instantiate collection class [" +_								collectionClass.getName() + "]: " + ex.getMessage())__			}_		}_		else if (List.class.equals(collectionClass)) {_			return (T) new ArrayList()__		}_		else if (SortedSet.class.equals(collectionClass)) {_			return (T) new TreeSet()__		}_		else {_			return (T) new LinkedHashSet()__		}_	};create,a,collection,of,the,given,type,with,the,given,initial,capacity,if,supported,by,the,collection,type,param,collection,class,the,type,of,collection,to,instantiate,return,the,created,collection,instance;suppress,warnings,unchecked,protected,t,create,collection,class,collection,class,if,collection,class,is,interface,try,return,t,collection,class,new,instance,catch,exception,ex,throw,new,illegal,argument,exception,could,not,instantiate,collection,class,collection,class,get,name,ex,get,message,else,if,list,class,equals,collection,class,return,t,new,array,list,else,if,sorted,set,class,equals,collection,class,return,t,new,tree,set,else,return,t,new,linked,hash,set
Jaxb2CollectionHttpMessageConverter -> @SuppressWarnings("unchecked") 	protected T createCollection(Class<?> collectionClass);1375826933;Create a Collection of the given type, with the given initial capacity_(if supported by the Collection type).__@param collectionClass the type of Collection to instantiate_@return the created Collection instance;@SuppressWarnings("unchecked")_	protected T createCollection(Class<?> collectionClass) {_		if (!collectionClass.isInterface()) {_			try {_				return (T) collectionClass.newInstance()__			}_			catch (Exception ex) {_				throw new IllegalArgumentException(_						"Could not instantiate collection class [" +_								collectionClass.getName() + "]: " + ex.getMessage())__			}_		}_		else if (List.class.equals(collectionClass)) {_			return (T) new ArrayList()__		}_		else if (SortedSet.class.equals(collectionClass)) {_			return (T) new TreeSet()__		}_		else {_			return (T) new LinkedHashSet()__		}_	};create,a,collection,of,the,given,type,with,the,given,initial,capacity,if,supported,by,the,collection,type,param,collection,class,the,type,of,collection,to,instantiate,return,the,created,collection,instance;suppress,warnings,unchecked,protected,t,create,collection,class,collection,class,if,collection,class,is,interface,try,return,t,collection,class,new,instance,catch,exception,ex,throw,new,illegal,argument,exception,could,not,instantiate,collection,class,collection,class,get,name,ex,get,message,else,if,list,class,equals,collection,class,return,t,new,array,list,else,if,sorted,set,class,equals,collection,class,return,t,new,tree,set,else,return,t,new,linked,hash,set
Jaxb2CollectionHttpMessageConverter -> @SuppressWarnings("unchecked") 	protected T createCollection(Class<?> collectionClass);1385412762;Create a Collection of the given type, with the given initial capacity_(if supported by the Collection type).__@param collectionClass the type of Collection to instantiate_@return the created Collection instance;@SuppressWarnings("unchecked")_	protected T createCollection(Class<?> collectionClass) {_		if (!collectionClass.isInterface()) {_			try {_				return (T) collectionClass.newInstance()__			}_			catch (Exception ex) {_				throw new IllegalArgumentException(_						"Could not instantiate collection class [" +_								collectionClass.getName() + "]: " + ex.getMessage())__			}_		}_		else if (List.class.equals(collectionClass)) {_			return (T) new ArrayList()__		}_		else if (SortedSet.class.equals(collectionClass)) {_			return (T) new TreeSet()__		}_		else {_			return (T) new LinkedHashSet()__		}_	};create,a,collection,of,the,given,type,with,the,given,initial,capacity,if,supported,by,the,collection,type,param,collection,class,the,type,of,collection,to,instantiate,return,the,created,collection,instance;suppress,warnings,unchecked,protected,t,create,collection,class,collection,class,if,collection,class,is,interface,try,return,t,collection,class,new,instance,catch,exception,ex,throw,new,illegal,argument,exception,could,not,instantiate,collection,class,collection,class,get,name,ex,get,message,else,if,list,class,equals,collection,class,return,t,new,array,list,else,if,sorted,set,class,equals,collection,class,return,t,new,tree,set,else,return,t,new,linked,hash,set
Jaxb2CollectionHttpMessageConverter -> @SuppressWarnings("unchecked") 	protected T createCollection(Class<?> collectionClass);1391481853;Create a Collection of the given type, with the given initial capacity_(if supported by the Collection type).__@param collectionClass the type of Collection to instantiate_@return the created Collection instance;@SuppressWarnings("unchecked")_	protected T createCollection(Class<?> collectionClass) {_		if (!collectionClass.isInterface()) {_			try {_				return (T) collectionClass.newInstance()__			}_			catch (Exception ex) {_				throw new IllegalArgumentException(_						"Could not instantiate collection class [" +_								collectionClass.getName() + "]: " + ex.getMessage())__			}_		}_		else if (List.class.equals(collectionClass)) {_			return (T) new ArrayList()__		}_		else if (SortedSet.class.equals(collectionClass)) {_			return (T) new TreeSet()__		}_		else {_			return (T) new LinkedHashSet()__		}_	};create,a,collection,of,the,given,type,with,the,given,initial,capacity,if,supported,by,the,collection,type,param,collection,class,the,type,of,collection,to,instantiate,return,the,created,collection,instance;suppress,warnings,unchecked,protected,t,create,collection,class,collection,class,if,collection,class,is,interface,try,return,t,collection,class,new,instance,catch,exception,ex,throw,new,illegal,argument,exception,could,not,instantiate,collection,class,collection,class,get,name,ex,get,message,else,if,list,class,equals,collection,class,return,t,new,array,list,else,if,sorted,set,class,equals,collection,class,return,t,new,tree,set,else,return,t,new,linked,hash,set
Jaxb2CollectionHttpMessageConverter -> @SuppressWarnings("unchecked") 	protected T createCollection(Class<?> collectionClass);1400553912;Create a Collection of the given type, with the given initial capacity_(if supported by the Collection type).__@param collectionClass the type of Collection to instantiate_@return the created Collection instance;@SuppressWarnings("unchecked")_	protected T createCollection(Class<?> collectionClass) {_		if (!collectionClass.isInterface()) {_			try {_				return (T) collectionClass.newInstance()__			}_			catch (Exception ex) {_				throw new IllegalArgumentException(_						"Could not instantiate collection class [" +_								collectionClass.getName() + "]: " + ex.getMessage())__			}_		}_		else if (List.class.equals(collectionClass)) {_			return (T) new ArrayList()__		}_		else if (SortedSet.class.equals(collectionClass)) {_			return (T) new TreeSet()__		}_		else {_			return (T) new LinkedHashSet()__		}_	};create,a,collection,of,the,given,type,with,the,given,initial,capacity,if,supported,by,the,collection,type,param,collection,class,the,type,of,collection,to,instantiate,return,the,created,collection,instance;suppress,warnings,unchecked,protected,t,create,collection,class,collection,class,if,collection,class,is,interface,try,return,t,collection,class,new,instance,catch,exception,ex,throw,new,illegal,argument,exception,could,not,instantiate,collection,class,collection,class,get,name,ex,get,message,else,if,list,class,equals,collection,class,return,t,new,array,list,else,if,sorted,set,class,equals,collection,class,return,t,new,tree,set,else,return,t,new,linked,hash,set
Jaxb2CollectionHttpMessageConverter -> @SuppressWarnings("unchecked") 	protected T createCollection(Class<?> collectionClass);1400575566;Create a Collection of the given type, with the given initial capacity_(if supported by the Collection type)._@param collectionClass the type of Collection to instantiate_@return the created Collection instance;@SuppressWarnings("unchecked")_	protected T createCollection(Class<?> collectionClass) {_		if (!collectionClass.isInterface()) {_			try {_				return (T) collectionClass.newInstance()__			}_			catch (Exception ex) {_				throw new IllegalArgumentException(_						"Could not instantiate collection class [" +_								collectionClass.getName() + "]: " + ex.getMessage())__			}_		}_		else if (List.class.equals(collectionClass)) {_			return (T) new ArrayList()__		}_		else if (SortedSet.class.equals(collectionClass)) {_			return (T) new TreeSet()__		}_		else {_			return (T) new LinkedHashSet()__		}_	};create,a,collection,of,the,given,type,with,the,given,initial,capacity,if,supported,by,the,collection,type,param,collection,class,the,type,of,collection,to,instantiate,return,the,created,collection,instance;suppress,warnings,unchecked,protected,t,create,collection,class,collection,class,if,collection,class,is,interface,try,return,t,collection,class,new,instance,catch,exception,ex,throw,new,illegal,argument,exception,could,not,instantiate,collection,class,collection,class,get,name,ex,get,message,else,if,list,class,equals,collection,class,return,t,new,array,list,else,if,sorted,set,class,equals,collection,class,return,t,new,tree,set,else,return,t,new,linked,hash,set
Jaxb2CollectionHttpMessageConverter -> @SuppressWarnings("unchecked") 	protected T createCollection(Class<?> collectionClass);1432125256;Create a Collection of the given type, with the given initial capacity_(if supported by the Collection type)._@param collectionClass the type of Collection to instantiate_@return the created Collection instance;@SuppressWarnings("unchecked")_	protected T createCollection(Class<?> collectionClass) {_		if (!collectionClass.isInterface()) {_			try {_				return (T) collectionClass.newInstance()__			}_			catch (Exception ex) {_				throw new IllegalArgumentException(_						"Could not instantiate collection class [" +_								collectionClass.getName() + "]: " + ex.getMessage())__			}_		}_		else if (List.class == collectionClass) {_			return (T) new ArrayList()__		}_		else if (SortedSet.class == collectionClass) {_			return (T) new TreeSet()__		}_		else {_			return (T) new LinkedHashSet()__		}_	};create,a,collection,of,the,given,type,with,the,given,initial,capacity,if,supported,by,the,collection,type,param,collection,class,the,type,of,collection,to,instantiate,return,the,created,collection,instance;suppress,warnings,unchecked,protected,t,create,collection,class,collection,class,if,collection,class,is,interface,try,return,t,collection,class,new,instance,catch,exception,ex,throw,new,illegal,argument,exception,could,not,instantiate,collection,class,collection,class,get,name,ex,get,message,else,if,list,class,collection,class,return,t,new,array,list,else,if,sorted,set,class,collection,class,return,t,new,tree,set,else,return,t,new,linked,hash,set
Jaxb2CollectionHttpMessageConverter -> @SuppressWarnings("unchecked") 	protected T createCollection(Class<?> collectionClass);1434985545;Create a Collection of the given type, with the given initial capacity_(if supported by the Collection type)._@param collectionClass the type of Collection to instantiate_@return the created Collection instance;@SuppressWarnings("unchecked")_	protected T createCollection(Class<?> collectionClass) {_		if (!collectionClass.isInterface()) {_			try {_				return (T) collectionClass.newInstance()__			}_			catch (Exception ex) {_				throw new IllegalArgumentException(_						"Could not instantiate collection class [" +_								collectionClass.getName() + "]: " + ex.getMessage())__			}_		}_		else if (List.class == collectionClass) {_			return (T) new ArrayList()__		}_		else if (SortedSet.class == collectionClass) {_			return (T) new TreeSet()__		}_		else {_			return (T) new LinkedHashSet()__		}_	};create,a,collection,of,the,given,type,with,the,given,initial,capacity,if,supported,by,the,collection,type,param,collection,class,the,type,of,collection,to,instantiate,return,the,created,collection,instance;suppress,warnings,unchecked,protected,t,create,collection,class,collection,class,if,collection,class,is,interface,try,return,t,collection,class,new,instance,catch,exception,ex,throw,new,illegal,argument,exception,could,not,instantiate,collection,class,collection,class,get,name,ex,get,message,else,if,list,class,collection,class,return,t,new,array,list,else,if,sorted,set,class,collection,class,return,t,new,tree,set,else,return,t,new,linked,hash,set
Jaxb2CollectionHttpMessageConverter -> @SuppressWarnings("unchecked") 	protected T createCollection(Class<?> collectionClass);1435665021;Create a Collection of the given type, with the given initial capacity_(if supported by the Collection type)._@param collectionClass the type of Collection to instantiate_@return the created Collection instance;@SuppressWarnings("unchecked")_	protected T createCollection(Class<?> collectionClass) {_		if (!collectionClass.isInterface()) {_			try {_				return (T) collectionClass.newInstance()__			}_			catch (Exception ex) {_				throw new IllegalArgumentException(_						"Could not instantiate collection class [" +_								collectionClass.getName() + "]: " + ex.getMessage())__			}_		}_		else if (List.class == collectionClass) {_			return (T) new ArrayList()__		}_		else if (SortedSet.class == collectionClass) {_			return (T) new TreeSet()__		}_		else {_			return (T) new LinkedHashSet()__		}_	};create,a,collection,of,the,given,type,with,the,given,initial,capacity,if,supported,by,the,collection,type,param,collection,class,the,type,of,collection,to,instantiate,return,the,created,collection,instance;suppress,warnings,unchecked,protected,t,create,collection,class,collection,class,if,collection,class,is,interface,try,return,t,collection,class,new,instance,catch,exception,ex,throw,new,illegal,argument,exception,could,not,instantiate,collection,class,collection,class,get,name,ex,get,message,else,if,list,class,collection,class,return,t,new,array,list,else,if,sorted,set,class,collection,class,return,t,new,tree,set,else,return,t,new,linked,hash,set
Jaxb2CollectionHttpMessageConverter -> @SuppressWarnings("unchecked") 	protected T createCollection(Class<?> collectionClass);1439827033;Create a Collection of the given type, with the given initial capacity_(if supported by the Collection type)._@param collectionClass the type of Collection to instantiate_@return the created Collection instance;@SuppressWarnings("unchecked")_	protected T createCollection(Class<?> collectionClass) {_		if (!collectionClass.isInterface()) {_			try {_				return (T) collectionClass.newInstance()__			}_			catch (Exception ex) {_				throw new IllegalArgumentException(_						"Could not instantiate collection class [" +_								collectionClass.getName() + "]: " + ex.getMessage())__			}_		}_		else if (List.class == collectionClass) {_			return (T) new ArrayList()__		}_		else if (SortedSet.class == collectionClass) {_			return (T) new TreeSet()__		}_		else {_			return (T) new LinkedHashSet()__		}_	};create,a,collection,of,the,given,type,with,the,given,initial,capacity,if,supported,by,the,collection,type,param,collection,class,the,type,of,collection,to,instantiate,return,the,created,collection,instance;suppress,warnings,unchecked,protected,t,create,collection,class,collection,class,if,collection,class,is,interface,try,return,t,collection,class,new,instance,catch,exception,ex,throw,new,illegal,argument,exception,could,not,instantiate,collection,class,collection,class,get,name,ex,get,message,else,if,list,class,collection,class,return,t,new,array,list,else,if,sorted,set,class,collection,class,return,t,new,tree,set,else,return,t,new,linked,hash,set
Jaxb2CollectionHttpMessageConverter -> @SuppressWarnings("unchecked") 	protected T createCollection(Class<?> collectionClass);1444681540;Create a Collection of the given type, with the given initial capacity_(if supported by the Collection type)._@param collectionClass the type of Collection to instantiate_@return the created Collection instance;@SuppressWarnings("unchecked")_	protected T createCollection(Class<?> collectionClass) {_		if (!collectionClass.isInterface()) {_			try {_				return (T) collectionClass.newInstance()__			}_			catch (Exception ex) {_				throw new IllegalArgumentException(_						"Could not instantiate collection class [" +_								collectionClass.getName() + "]: " + ex.getMessage())__			}_		}_		else if (List.class == collectionClass) {_			return (T) new ArrayList()__		}_		else if (SortedSet.class == collectionClass) {_			return (T) new TreeSet()__		}_		else {_			return (T) new LinkedHashSet()__		}_	};create,a,collection,of,the,given,type,with,the,given,initial,capacity,if,supported,by,the,collection,type,param,collection,class,the,type,of,collection,to,instantiate,return,the,created,collection,instance;suppress,warnings,unchecked,protected,t,create,collection,class,collection,class,if,collection,class,is,interface,try,return,t,collection,class,new,instance,catch,exception,ex,throw,new,illegal,argument,exception,could,not,instantiate,collection,class,collection,class,get,name,ex,get,message,else,if,list,class,collection,class,return,t,new,array,list,else,if,sorted,set,class,collection,class,return,t,new,tree,set,else,return,t,new,linked,hash,set
Jaxb2CollectionHttpMessageConverter -> @SuppressWarnings("unchecked") 	protected T createCollection(Class<?> collectionClass);1468948866;Create a Collection of the given type, with the given initial capacity_(if supported by the Collection type)._@param collectionClass the type of Collection to instantiate_@return the created Collection instance;@SuppressWarnings("unchecked")_	protected T createCollection(Class<?> collectionClass) {_		if (!collectionClass.isInterface()) {_			try {_				return (T) ReflectionUtils.accessibleConstructor(collectionClass).newInstance()__			}_			catch (Throwable ex) {_				throw new IllegalArgumentException(_						"Could not instantiate collection class: " + collectionClass.getName(), ex)__			}_		}_		else if (List.class == collectionClass) {_			return (T) new ArrayList()__		}_		else if (SortedSet.class == collectionClass) {_			return (T) new TreeSet()__		}_		else {_			return (T) new LinkedHashSet()__		}_	};create,a,collection,of,the,given,type,with,the,given,initial,capacity,if,supported,by,the,collection,type,param,collection,class,the,type,of,collection,to,instantiate,return,the,created,collection,instance;suppress,warnings,unchecked,protected,t,create,collection,class,collection,class,if,collection,class,is,interface,try,return,t,reflection,utils,accessible,constructor,collection,class,new,instance,catch,throwable,ex,throw,new,illegal,argument,exception,could,not,instantiate,collection,class,collection,class,get,name,ex,else,if,list,class,collection,class,return,t,new,array,list,else,if,sorted,set,class,collection,class,return,t,new,tree,set,else,return,t,new,linked,hash,set
Jaxb2CollectionHttpMessageConverter -> @SuppressWarnings("unchecked") 	protected T createCollection(Class<?> collectionClass);1491480646;Create a Collection of the given type, with the given initial capacity_(if supported by the Collection type)._@param collectionClass the type of Collection to instantiate_@return the created Collection instance;@SuppressWarnings("unchecked")_	protected T createCollection(Class<?> collectionClass) {_		if (!collectionClass.isInterface()) {_			try {_				return (T) ReflectionUtils.accessibleConstructor(collectionClass).newInstance()__			}_			catch (Throwable ex) {_				throw new IllegalArgumentException(_						"Could not instantiate collection class: " + collectionClass.getName(), ex)__			}_		}_		else if (List.class == collectionClass) {_			return (T) new ArrayList()__		}_		else if (SortedSet.class == collectionClass) {_			return (T) new TreeSet()__		}_		else {_			return (T) new LinkedHashSet()__		}_	};create,a,collection,of,the,given,type,with,the,given,initial,capacity,if,supported,by,the,collection,type,param,collection,class,the,type,of,collection,to,instantiate,return,the,created,collection,instance;suppress,warnings,unchecked,protected,t,create,collection,class,collection,class,if,collection,class,is,interface,try,return,t,reflection,utils,accessible,constructor,collection,class,new,instance,catch,throwable,ex,throw,new,illegal,argument,exception,could,not,instantiate,collection,class,collection,class,get,name,ex,else,if,list,class,collection,class,return,t,new,array,list,else,if,sorted,set,class,collection,class,return,t,new,tree,set,else,return,t,new,linked,hash,set
Jaxb2CollectionHttpMessageConverter -> @SuppressWarnings("unchecked") 	protected T createCollection(Class<?> collectionClass);1496242568;Create a Collection of the given type, with the given initial capacity_(if supported by the Collection type)._@param collectionClass the type of Collection to instantiate_@return the created Collection instance;@SuppressWarnings("unchecked")_	protected T createCollection(Class<?> collectionClass) {_		if (!collectionClass.isInterface()) {_			try {_				return (T) ReflectionUtils.accessibleConstructor(collectionClass).newInstance()__			}_			catch (Throwable ex) {_				throw new IllegalArgumentException(_						"Could not instantiate collection class: " + collectionClass.getName(), ex)__			}_		}_		else if (List.class == collectionClass) {_			return (T) new ArrayList()__		}_		else if (SortedSet.class == collectionClass) {_			return (T) new TreeSet()__		}_		else {_			return (T) new LinkedHashSet()__		}_	};create,a,collection,of,the,given,type,with,the,given,initial,capacity,if,supported,by,the,collection,type,param,collection,class,the,type,of,collection,to,instantiate,return,the,created,collection,instance;suppress,warnings,unchecked,protected,t,create,collection,class,collection,class,if,collection,class,is,interface,try,return,t,reflection,utils,accessible,constructor,collection,class,new,instance,catch,throwable,ex,throw,new,illegal,argument,exception,could,not,instantiate,collection,class,collection,class,get,name,ex,else,if,list,class,collection,class,return,t,new,array,list,else,if,sorted,set,class,collection,class,return,t,new,tree,set,else,return,t,new,linked,hash,set
Jaxb2CollectionHttpMessageConverter -> @SuppressWarnings("unchecked") 	protected T createCollection(Class<?> collectionClass);1496259743;Create a Collection of the given type, with the given initial capacity_(if supported by the Collection type)._@param collectionClass the type of Collection to instantiate_@return the created Collection instance;@SuppressWarnings("unchecked")_	protected T createCollection(Class<?> collectionClass) {_		if (!collectionClass.isInterface()) {_			try {_				return (T) ReflectionUtils.accessibleConstructor(collectionClass).newInstance()__			}_			catch (Throwable ex) {_				throw new IllegalArgumentException(_						"Could not instantiate collection class: " + collectionClass.getName(), ex)__			}_		}_		else if (List.class == collectionClass) {_			return (T) new ArrayList()__		}_		else if (SortedSet.class == collectionClass) {_			return (T) new TreeSet()__		}_		else {_			return (T) new LinkedHashSet()__		}_	};create,a,collection,of,the,given,type,with,the,given,initial,capacity,if,supported,by,the,collection,type,param,collection,class,the,type,of,collection,to,instantiate,return,the,created,collection,instance;suppress,warnings,unchecked,protected,t,create,collection,class,collection,class,if,collection,class,is,interface,try,return,t,reflection,utils,accessible,constructor,collection,class,new,instance,catch,throwable,ex,throw,new,illegal,argument,exception,could,not,instantiate,collection,class,collection,class,get,name,ex,else,if,list,class,collection,class,return,t,new,array,list,else,if,sorted,set,class,collection,class,return,t,new,tree,set,else,return,t,new,linked,hash,set
Jaxb2CollectionHttpMessageConverter -> @SuppressWarnings("unchecked") 	protected T createCollection(Class<?> collectionClass);1499973642;Create a Collection of the given type, with the given initial capacity_(if supported by the Collection type)._@param collectionClass the type of Collection to instantiate_@return the created Collection instance;@SuppressWarnings("unchecked")_	protected T createCollection(Class<?> collectionClass) {_		if (!collectionClass.isInterface()) {_			try {_				return (T) ReflectionUtils.accessibleConstructor(collectionClass).newInstance()__			}_			catch (Throwable ex) {_				throw new IllegalArgumentException(_						"Could not instantiate collection class: " + collectionClass.getName(), ex)__			}_		}_		else if (List.class == collectionClass) {_			return (T) new ArrayList()__		}_		else if (SortedSet.class == collectionClass) {_			return (T) new TreeSet()__		}_		else {_			return (T) new LinkedHashSet()__		}_	};create,a,collection,of,the,given,type,with,the,given,initial,capacity,if,supported,by,the,collection,type,param,collection,class,the,type,of,collection,to,instantiate,return,the,created,collection,instance;suppress,warnings,unchecked,protected,t,create,collection,class,collection,class,if,collection,class,is,interface,try,return,t,reflection,utils,accessible,constructor,collection,class,new,instance,catch,throwable,ex,throw,new,illegal,argument,exception,could,not,instantiate,collection,class,collection,class,get,name,ex,else,if,list,class,collection,class,return,t,new,array,list,else,if,sorted,set,class,collection,class,return,t,new,tree,set,else,return,t,new,linked,hash,set
Jaxb2CollectionHttpMessageConverter -> @SuppressWarnings("unchecked") 	protected T createCollection(Class<?> collectionClass);1500549447;Create a Collection of the given type, with the given initial capacity_(if supported by the Collection type)._@param collectionClass the type of Collection to instantiate_@return the created Collection instance;@SuppressWarnings("unchecked")_	protected T createCollection(Class<?> collectionClass) {_		if (!collectionClass.isInterface()) {_			try {_				return (T) ReflectionUtils.accessibleConstructor(collectionClass).newInstance()__			}_			catch (Throwable ex) {_				throw new IllegalArgumentException(_						"Could not instantiate collection class: " + collectionClass.getName(), ex)__			}_		}_		else if (List.class == collectionClass) {_			return (T) new ArrayList()__		}_		else if (SortedSet.class == collectionClass) {_			return (T) new TreeSet()__		}_		else {_			return (T) new LinkedHashSet()__		}_	};create,a,collection,of,the,given,type,with,the,given,initial,capacity,if,supported,by,the,collection,type,param,collection,class,the,type,of,collection,to,instantiate,return,the,created,collection,instance;suppress,warnings,unchecked,protected,t,create,collection,class,collection,class,if,collection,class,is,interface,try,return,t,reflection,utils,accessible,constructor,collection,class,new,instance,catch,throwable,ex,throw,new,illegal,argument,exception,could,not,instantiate,collection,class,collection,class,get,name,ex,else,if,list,class,collection,class,return,t,new,array,list,else,if,sorted,set,class,collection,class,return,t,new,tree,set,else,return,t,new,linked,hash,set
Jaxb2CollectionHttpMessageConverter -> @SuppressWarnings("unchecked") 	protected T createCollection(Class<?> collectionClass);1530174524;Create a Collection of the given type, with the given initial capacity_(if supported by the Collection type)._@param collectionClass the type of Collection to instantiate_@return the created Collection instance;@SuppressWarnings("unchecked")_	protected T createCollection(Class<?> collectionClass) {_		if (!collectionClass.isInterface()) {_			try {_				return (T) ReflectionUtils.accessibleConstructor(collectionClass).newInstance()__			}_			catch (Throwable ex) {_				throw new IllegalArgumentException(_						"Could not instantiate collection class: " + collectionClass.getName(), ex)__			}_		}_		else if (List.class == collectionClass) {_			return (T) new ArrayList()__		}_		else if (SortedSet.class == collectionClass) {_			return (T) new TreeSet()__		}_		else {_			return (T) new LinkedHashSet()__		}_	};create,a,collection,of,the,given,type,with,the,given,initial,capacity,if,supported,by,the,collection,type,param,collection,class,the,type,of,collection,to,instantiate,return,the,created,collection,instance;suppress,warnings,unchecked,protected,t,create,collection,class,collection,class,if,collection,class,is,interface,try,return,t,reflection,utils,accessible,constructor,collection,class,new,instance,catch,throwable,ex,throw,new,illegal,argument,exception,could,not,instantiate,collection,class,collection,class,get,name,ex,else,if,list,class,collection,class,return,t,new,array,list,else,if,sorted,set,class,collection,class,return,t,new,tree,set,else,return,t,new,linked,hash,set
Jaxb2CollectionHttpMessageConverter -> @SuppressWarnings("unchecked") 	protected T createCollection(Class<?> collectionClass);1530174524;Create a Collection of the given type, with the given initial capacity_(if supported by the Collection type)._@param collectionClass the type of Collection to instantiate_@return the created Collection instance;@SuppressWarnings("unchecked")_	protected T createCollection(Class<?> collectionClass) {_		if (!collectionClass.isInterface()) {_			try {_				return (T) ReflectionUtils.accessibleConstructor(collectionClass).newInstance()__			}_			catch (Throwable ex) {_				throw new IllegalArgumentException(_						"Could not instantiate collection class: " + collectionClass.getName(), ex)__			}_		}_		else if (List.class == collectionClass) {_			return (T) new ArrayList()__		}_		else if (SortedSet.class == collectionClass) {_			return (T) new TreeSet()__		}_		else {_			return (T) new LinkedHashSet()__		}_	};create,a,collection,of,the,given,type,with,the,given,initial,capacity,if,supported,by,the,collection,type,param,collection,class,the,type,of,collection,to,instantiate,return,the,created,collection,instance;suppress,warnings,unchecked,protected,t,create,collection,class,collection,class,if,collection,class,is,interface,try,return,t,reflection,utils,accessible,constructor,collection,class,new,instance,catch,throwable,ex,throw,new,illegal,argument,exception,could,not,instantiate,collection,class,collection,class,get,name,ex,else,if,list,class,collection,class,return,t,new,array,list,else,if,sorted,set,class,collection,class,return,t,new,tree,set,else,return,t,new,linked,hash,set
Jaxb2CollectionHttpMessageConverter -> @SuppressWarnings("unchecked") 	protected T createCollection(Class<?> collectionClass);1530563849;Create a Collection of the given type, with the given initial capacity_(if supported by the Collection type)._@param collectionClass the type of Collection to instantiate_@return the created Collection instance;@SuppressWarnings("unchecked")_	protected T createCollection(Class<?> collectionClass) {_		if (!collectionClass.isInterface()) {_			try {_				return (T) ReflectionUtils.accessibleConstructor(collectionClass).newInstance()__			}_			catch (Throwable ex) {_				throw new IllegalArgumentException(_						"Could not instantiate collection class: " + collectionClass.getName(), ex)__			}_		}_		else if (List.class == collectionClass) {_			return (T) new ArrayList()__		}_		else if (SortedSet.class == collectionClass) {_			return (T) new TreeSet()__		}_		else {_			return (T) new LinkedHashSet()__		}_	};create,a,collection,of,the,given,type,with,the,given,initial,capacity,if,supported,by,the,collection,type,param,collection,class,the,type,of,collection,to,instantiate,return,the,created,collection,instance;suppress,warnings,unchecked,protected,t,create,collection,class,collection,class,if,collection,class,is,interface,try,return,t,reflection,utils,accessible,constructor,collection,class,new,instance,catch,throwable,ex,throw,new,illegal,argument,exception,could,not,instantiate,collection,class,collection,class,get,name,ex,else,if,list,class,collection,class,return,t,new,array,list,else,if,sorted,set,class,collection,class,return,t,new,tree,set,else,return,t,new,linked,hash,set
Jaxb2CollectionHttpMessageConverter -> @SuppressWarnings("unchecked") 	protected T createCollection(Class<?> collectionClass);1530737169;Create a Collection of the given type, with the given initial capacity_(if supported by the Collection type)._@param collectionClass the type of Collection to instantiate_@return the created Collection instance;@SuppressWarnings("unchecked")_	protected T createCollection(Class<?> collectionClass) {_		if (!collectionClass.isInterface()) {_			try {_				return (T) ReflectionUtils.accessibleConstructor(collectionClass).newInstance()__			}_			catch (Throwable ex) {_				throw new IllegalArgumentException(_						"Could not instantiate collection class: " + collectionClass.getName(), ex)__			}_		}_		else if (List.class == collectionClass) {_			return (T) new ArrayList()__		}_		else if (SortedSet.class == collectionClass) {_			return (T) new TreeSet()__		}_		else {_			return (T) new LinkedHashSet()__		}_	};create,a,collection,of,the,given,type,with,the,given,initial,capacity,if,supported,by,the,collection,type,param,collection,class,the,type,of,collection,to,instantiate,return,the,created,collection,instance;suppress,warnings,unchecked,protected,t,create,collection,class,collection,class,if,collection,class,is,interface,try,return,t,reflection,utils,accessible,constructor,collection,class,new,instance,catch,throwable,ex,throw,new,illegal,argument,exception,could,not,instantiate,collection,class,collection,class,get,name,ex,else,if,list,class,collection,class,return,t,new,array,list,else,if,sorted,set,class,collection,class,return,t,new,tree,set,else,return,t,new,linked,hash,set
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType);1496242568;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,class,clazz,nullable,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType);1496259743;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,class,clazz,nullable,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType);1499973642;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,class,clazz,nullable,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType);1500549447;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,class,clazz,nullable,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType);1530174524;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,class,clazz,nullable,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType);1530174524;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,class,clazz,nullable,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType);1530563849;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,class,clazz,nullable,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType);1530737169;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,class,clazz,nullable,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(Type type, Class<?> contextClass, MediaType mediaType);1434985545;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(Type type, Class<?> contextClass, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,type,type,class,context,class,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(Type type, Class<?> contextClass, MediaType mediaType);1435665021;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(Type type, Class<?> contextClass, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,type,type,class,context,class,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(Type type, Class<?> clazz, MediaType mediaType);1439827033;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(Type type, Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,type,type,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(Type type, Class<?> clazz, MediaType mediaType);1444681540;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(Type type, Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,type,type,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(Type type, Class<?> clazz, MediaType mediaType);1468948866;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(Type type, Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,type,type,class,clazz,media,type,media,type,return,false
Jaxb2CollectionHttpMessageConverter -> @Override 	public boolean canWrite(Type type, Class<?> clazz, MediaType mediaType);1491480646;Always returns {@code false} since Jaxb2CollectionHttpMessageConverter_does not convert collections to XML.;@Override_	public boolean canWrite(Type type, Class<?> clazz, MediaType mediaType) {_		return false__	};always,returns,code,false,since,jaxb2collection,http,message,converter,does,not,convert,collections,to,xml;override,public,boolean,can,write,type,type,class,clazz,media,type,media,type,return,false
