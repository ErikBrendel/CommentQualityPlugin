# id;timestamp;commentText;codeText;commentWords;codeWords
ServerHttpResponse -> void addCookie(ResponseCookie cookie)_;1494317919;Add the given {@code ResponseCookie}._@param cookie the cookie to add_@throws IllegalStateException if the response has already been committed;void addCookie(ResponseCookie cookie)_;add,the,given,code,response,cookie,param,cookie,the,cookie,to,add,throws,illegal,state,exception,if,the,response,has,already,been,committed;void,add,cookie,response,cookie,cookie
ServerHttpResponse -> void addCookie(ResponseCookie cookie)_;1495868221;Add the given {@code ResponseCookie}._@param cookie the cookie to add_@throws IllegalStateException if the response has already been committed;void addCookie(ResponseCookie cookie)_;add,the,given,code,response,cookie,param,cookie,the,cookie,to,add,throws,illegal,state,exception,if,the,response,has,already,been,committed;void,add,cookie,response,cookie,cookie
ServerHttpResponse -> void addCookie(ResponseCookie cookie)_;1500448076;Add the given {@code ResponseCookie}._@param cookie the cookie to add_@throws IllegalStateException if the response has already been committed;void addCookie(ResponseCookie cookie)_;add,the,given,code,response,cookie,param,cookie,the,cookie,to,add,throws,illegal,state,exception,if,the,response,has,already,been,committed;void,add,cookie,response,cookie,cookie
ServerHttpResponse -> void addCookie(ResponseCookie cookie)_;1500498279;Add the given {@code ResponseCookie}._@param cookie the cookie to add_@throws IllegalStateException if the response has already been committed;void addCookie(ResponseCookie cookie)_;add,the,given,code,response,cookie,param,cookie,the,cookie,to,add,throws,illegal,state,exception,if,the,response,has,already,been,committed;void,add,cookie,response,cookie,cookie
ServerHttpResponse -> void addCookie(ResponseCookie cookie)_;1504701549;Add the given {@code ResponseCookie}._@param cookie the cookie to add_@throws IllegalStateException if the response has already been committed;void addCookie(ResponseCookie cookie)_;add,the,given,code,response,cookie,param,cookie,the,cookie,to,add,throws,illegal,state,exception,if,the,response,has,already,been,committed;void,add,cookie,response,cookie,cookie
ServerHttpResponse -> void addCookie(ResponseCookie cookie)_;1542136248;Add the given {@code ResponseCookie}._@param cookie the cookie to add_@throws IllegalStateException if the response has already been committed;void addCookie(ResponseCookie cookie)_;add,the,given,code,response,cookie,param,cookie,the,cookie,to,add,throws,illegal,state,exception,if,the,response,has,already,been,committed;void,add,cookie,response,cookie,cookie
ServerHttpResponse -> MultiValueMap<String, ResponseCookie> getCookies()_;1468513835;Return a mutable map with the cookies to send to the server.;MultiValueMap<String, ResponseCookie> getCookies()_;return,a,mutable,map,with,the,cookies,to,send,to,the,server;multi,value,map,string,response,cookie,get,cookies
ServerHttpResponse -> MultiValueMap<String, ResponseCookie> getCookies()_;1468532417;Return a mutable map with the cookies to send to the server.;MultiValueMap<String, ResponseCookie> getCookies()_;return,a,mutable,map,with,the,cookies,to,send,to,the,server;multi,value,map,string,response,cookie,get,cookies
ServerHttpResponse -> MultiValueMap<String, ResponseCookie> getCookies()_;1472031624;Return a mutable map with the cookies to send to the server.;MultiValueMap<String, ResponseCookie> getCookies()_;return,a,mutable,map,with,the,cookies,to,send,to,the,server;multi,value,map,string,response,cookie,get,cookies
ServerHttpResponse -> MultiValueMap<String, ResponseCookie> getCookies()_;1481669991;Return a mutable map with the cookies to send to the server.;MultiValueMap<String, ResponseCookie> getCookies()_;return,a,mutable,map,with,the,cookies,to,send,to,the,server;multi,value,map,string,response,cookie,get,cookies
ServerHttpResponse -> MultiValueMap<String, ResponseCookie> getCookies()_;1481669991;Return a mutable map with the cookies to send to the server.;MultiValueMap<String, ResponseCookie> getCookies()_;return,a,mutable,map,with,the,cookies,to,send,to,the,server;multi,value,map,string,response,cookie,get,cookies
ServerHttpResponse -> MultiValueMap<String, ResponseCookie> getCookies()_;1494317919;Return a mutable map with the cookies to send to the server.;MultiValueMap<String, ResponseCookie> getCookies()_;return,a,mutable,map,with,the,cookies,to,send,to,the,server;multi,value,map,string,response,cookie,get,cookies
ServerHttpResponse -> MultiValueMap<String, ResponseCookie> getCookies()_;1495868221;Return a mutable map with the cookies to send to the server.;MultiValueMap<String, ResponseCookie> getCookies()_;return,a,mutable,map,with,the,cookies,to,send,to,the,server;multi,value,map,string,response,cookie,get,cookies
ServerHttpResponse -> MultiValueMap<String, ResponseCookie> getCookies()_;1500448076;Return a mutable map with the cookies to send to the server.;MultiValueMap<String, ResponseCookie> getCookies()_;return,a,mutable,map,with,the,cookies,to,send,to,the,server;multi,value,map,string,response,cookie,get,cookies
ServerHttpResponse -> MultiValueMap<String, ResponseCookie> getCookies()_;1500498279;Return a mutable map with the cookies to send to the server.;MultiValueMap<String, ResponseCookie> getCookies()_;return,a,mutable,map,with,the,cookies,to,send,to,the,server;multi,value,map,string,response,cookie,get,cookies
ServerHttpResponse -> MultiValueMap<String, ResponseCookie> getCookies()_;1504701549;Return a mutable map with the cookies to send to the server.;MultiValueMap<String, ResponseCookie> getCookies()_;return,a,mutable,map,with,the,cookies,to,send,to,the,server;multi,value,map,string,response,cookie,get,cookies
ServerHttpResponse -> MultiValueMap<String, ResponseCookie> getCookies()_;1542136248;Return a mutable map with the cookies to send to the server.;MultiValueMap<String, ResponseCookie> getCookies()_;return,a,mutable,map,with,the,cookies,to,send,to,the,server;multi,value,map,string,response,cookie,get,cookies
ServerHttpResponse -> @Nullable 	HttpStatus getStatusCode()_;1495868221;Return the HTTP status code or {@code null} if not set.;@Nullable_	HttpStatus getStatusCode()_;return,the,http,status,code,or,code,null,if,not,set;nullable,http,status,get,status,code
ServerHttpResponse -> @Nullable 	HttpStatus getStatusCode()_;1500448076;Return the HTTP status code or {@code null} if not set.;@Nullable_	HttpStatus getStatusCode()_;return,the,http,status,code,or,code,null,if,not,set;nullable,http,status,get,status,code
ServerHttpResponse -> @Nullable 	HttpStatus getStatusCode()_;1500498279;Return the HTTP status code or {@code null} if not set.;@Nullable_	HttpStatus getStatusCode()_;return,the,http,status,code,or,code,null,if,not,set;nullable,http,status,get,status,code
ServerHttpResponse -> @Nullable 	HttpStatus getStatusCode()_;1504701549;Return the HTTP status code or {@code null} if not set.;@Nullable_	HttpStatus getStatusCode()_;return,the,http,status,code,or,code,null,if,not,set;nullable,http,status,get,status,code
ServerHttpResponse -> @Nullable 	HttpStatus getStatusCode()_;1542136248;Return the status code set via {@link #setStatusCode}, or if the status_has not been set, return the default status code from the underlying_server response. The return value may be {@code null} if the status code_value is outside the {@link HttpStatus} enum range, or if the underlying_server response does not have a default value.;@Nullable_	HttpStatus getStatusCode()_;return,the,status,code,set,via,link,set,status,code,or,if,the,status,has,not,been,set,return,the,default,status,code,from,the,underlying,server,response,the,return,value,may,be,code,null,if,the,status,code,value,is,outside,the,link,http,status,enum,range,or,if,the,underlying,server,response,does,not,have,a,default,value;nullable,http,status,get,status,code
ServerHttpResponse -> void registerUrlEncoder(Function<String, String> encoder)_;1481669991;Register a URL rewriting function for use with {@link #encodeUrl}._The function must return an encoded URL or the same URL._@param encoder a URL encoding function to use;void registerUrlEncoder(Function<String, String> encoder)_;register,a,url,rewriting,function,for,use,with,link,encode,url,the,function,must,return,an,encoded,url,or,the,same,url,param,encoder,a,url,encoding,function,to,use;void,register,url,encoder,function,string,string,encoder
ServerHttpResponse -> void registerUrlEncoder(Function<String, String> encoder)_;1481669991;Register a URL rewriting function for use with {@link #encodeUrl}._The function must return an encoded URL or the same URL._@param encoder a URL encoding function to use;void registerUrlEncoder(Function<String, String> encoder)_;register,a,url,rewriting,function,for,use,with,link,encode,url,the,function,must,return,an,encoded,url,or,the,same,url,param,encoder,a,url,encoding,function,to,use;void,register,url,encoder,function,string,string,encoder
ServerHttpResponse -> void registerUrlEncoder(Function<String, String> encoder)_;1494317919;Register a URL rewriting function for use with {@link #encodeUrl}._The function must return an encoded URL or the same URL._@param encoder a URL encoding function to use;void registerUrlEncoder(Function<String, String> encoder)_;register,a,url,rewriting,function,for,use,with,link,encode,url,the,function,must,return,an,encoded,url,or,the,same,url,param,encoder,a,url,encoding,function,to,use;void,register,url,encoder,function,string,string,encoder
ServerHttpResponse -> void registerUrlEncoder(Function<String, String> encoder)_;1495868221;Register a URL rewriting function for use with {@link #encodeUrl}._The function must return an encoded URL or the same URL._@param encoder a URL encoding function to use;void registerUrlEncoder(Function<String, String> encoder)_;register,a,url,rewriting,function,for,use,with,link,encode,url,the,function,must,return,an,encoded,url,or,the,same,url,param,encoder,a,url,encoding,function,to,use;void,register,url,encoder,function,string,string,encoder
ServerHttpResponse -> void registerUrlEncoder(Function<String, String> encoder)_;1500448076;Register a URL rewriting function for use with {@link #encodeUrl}._The function must return an encoded URL or the same URL._@param encoder a URL encoding function to use;void registerUrlEncoder(Function<String, String> encoder)_;register,a,url,rewriting,function,for,use,with,link,encode,url,the,function,must,return,an,encoded,url,or,the,same,url,param,encoder,a,url,encoding,function,to,use;void,register,url,encoder,function,string,string,encoder
ServerHttpResponse -> void registerUrlEncoder(Function<String, String> encoder)_;1500498279;Register a URL rewriting function for use with {@link #encodeUrl}._The function must return an encoded URL or the same URL._@param encoder a URL encoding function to use;void registerUrlEncoder(Function<String, String> encoder)_;register,a,url,rewriting,function,for,use,with,link,encode,url,the,function,must,return,an,encoded,url,or,the,same,url,param,encoder,a,url,encoding,function,to,use;void,register,url,encoder,function,string,string,encoder
ServerHttpResponse -> String encodeUrl(String url)_;1481669991;A mechanism for URL rewriting that applications and libraries such as_HTML template libraries to use consistently for all URLs emitted by_the application. Doing so enables the registration of URL encoders via_{@link #registerUrlEncoder} that can insert an id for authentication,_a nonce for CSRF protection, a version for a static resource, etc._@param url the URL to encode_@return the encoded URL or the same;String encodeUrl(String url)_;a,mechanism,for,url,rewriting,that,applications,and,libraries,such,as,html,template,libraries,to,use,consistently,for,all,urls,emitted,by,the,application,doing,so,enables,the,registration,of,url,encoders,via,link,register,url,encoder,that,can,insert,an,id,for,authentication,a,nonce,for,csrf,protection,a,version,for,a,static,resource,etc,param,url,the,url,to,encode,return,the,encoded,url,or,the,same;string,encode,url,string,url
ServerHttpResponse -> String encodeUrl(String url)_;1481669991;A mechanism for URL rewriting that applications and libraries such as_HTML template libraries to use consistently for all URLs emitted by_the application. Doing so enables the registration of URL encoders via_{@link #registerUrlEncoder} that can insert an id for authentication,_a nonce for CSRF protection, a version for a static resource, etc._@param url the URL to encode_@return the encoded URL or the same;String encodeUrl(String url)_;a,mechanism,for,url,rewriting,that,applications,and,libraries,such,as,html,template,libraries,to,use,consistently,for,all,urls,emitted,by,the,application,doing,so,enables,the,registration,of,url,encoders,via,link,register,url,encoder,that,can,insert,an,id,for,authentication,a,nonce,for,csrf,protection,a,version,for,a,static,resource,etc,param,url,the,url,to,encode,return,the,encoded,url,or,the,same;string,encode,url,string,url
ServerHttpResponse -> String encodeUrl(String url)_;1494317919;A mechanism for URL rewriting that applications and libraries such as_HTML template libraries to use consistently for all URLs emitted by_the application. Doing so enables the registration of URL encoders via_{@link #registerUrlEncoder} that can insert an id for authentication,_a nonce for CSRF protection, a version for a static resource, etc._@param url the URL to encode_@return the encoded URL or the same;String encodeUrl(String url)_;a,mechanism,for,url,rewriting,that,applications,and,libraries,such,as,html,template,libraries,to,use,consistently,for,all,urls,emitted,by,the,application,doing,so,enables,the,registration,of,url,encoders,via,link,register,url,encoder,that,can,insert,an,id,for,authentication,a,nonce,for,csrf,protection,a,version,for,a,static,resource,etc,param,url,the,url,to,encode,return,the,encoded,url,or,the,same;string,encode,url,string,url
ServerHttpResponse -> String encodeUrl(String url)_;1495868221;A mechanism for URL rewriting that applications and libraries such as_HTML template libraries to use consistently for all URLs emitted by_the application. Doing so enables the registration of URL encoders via_{@link #registerUrlEncoder} that can insert an id for authentication,_a nonce for CSRF protection, a version for a static resource, etc._@param url the URL to encode_@return the encoded URL or the same;String encodeUrl(String url)_;a,mechanism,for,url,rewriting,that,applications,and,libraries,such,as,html,template,libraries,to,use,consistently,for,all,urls,emitted,by,the,application,doing,so,enables,the,registration,of,url,encoders,via,link,register,url,encoder,that,can,insert,an,id,for,authentication,a,nonce,for,csrf,protection,a,version,for,a,static,resource,etc,param,url,the,url,to,encode,return,the,encoded,url,or,the,same;string,encode,url,string,url
ServerHttpResponse -> String encodeUrl(String url)_;1500448076;A mechanism for URL rewriting that applications and libraries such as_HTML template libraries to use consistently for all URLs emitted by_the application. Doing so enables the registration of URL encoders via_{@link #registerUrlEncoder} that can insert an id for authentication,_a nonce for CSRF protection, a version for a static resource, etc._@param url the URL to encode_@return the encoded URL or the same;String encodeUrl(String url)_;a,mechanism,for,url,rewriting,that,applications,and,libraries,such,as,html,template,libraries,to,use,consistently,for,all,urls,emitted,by,the,application,doing,so,enables,the,registration,of,url,encoders,via,link,register,url,encoder,that,can,insert,an,id,for,authentication,a,nonce,for,csrf,protection,a,version,for,a,static,resource,etc,param,url,the,url,to,encode,return,the,encoded,url,or,the,same;string,encode,url,string,url
ServerHttpResponse -> String encodeUrl(String url)_;1500498279;A mechanism for URL rewriting that applications and libraries such as_HTML template libraries to use consistently for all URLs emitted by_the application. Doing so enables the registration of URL encoders via_{@link #registerUrlEncoder} that can insert an id for authentication,_a nonce for CSRF protection, or other._@param url the URL to encode_@return the encoded URL or the same;String encodeUrl(String url)_;a,mechanism,for,url,rewriting,that,applications,and,libraries,such,as,html,template,libraries,to,use,consistently,for,all,urls,emitted,by,the,application,doing,so,enables,the,registration,of,url,encoders,via,link,register,url,encoder,that,can,insert,an,id,for,authentication,a,nonce,for,csrf,protection,or,other,param,url,the,url,to,encode,return,the,encoded,url,or,the,same;string,encode,url,string,url
ServerHttpResponse -> boolean setStatusCode(@Nullable HttpStatus status)_;1500448076;Set the HTTP status code of the response._@param status the HTTP status as an {@link HttpStatus} enum value_@return {@code false} if the status code has not been set because the HTTP response_is already committed, {@code true} if it has been set correctly.;boolean setStatusCode(@Nullable HttpStatus status)_;set,the,http,status,code,of,the,response,param,status,the,http,status,as,an,link,http,status,enum,value,return,code,false,if,the,status,code,has,not,been,set,because,the,http,response,is,already,committed,code,true,if,it,has,been,set,correctly;boolean,set,status,code,nullable,http,status,status
ServerHttpResponse -> boolean setStatusCode(@Nullable HttpStatus status)_;1500498279;Set the HTTP status code of the response._@param status the HTTP status as an {@link HttpStatus} enum value_@return {@code false} if the status code has not been set because the HTTP response_is already committed, {@code true} if it has been set correctly.;boolean setStatusCode(@Nullable HttpStatus status)_;set,the,http,status,code,of,the,response,param,status,the,http,status,as,an,link,http,status,enum,value,return,code,false,if,the,status,code,has,not,been,set,because,the,http,response,is,already,committed,code,true,if,it,has,been,set,correctly;boolean,set,status,code,nullable,http,status,status
ServerHttpResponse -> boolean setStatusCode(@Nullable HttpStatus status)_;1504701549;Set the HTTP status code of the response._@param status the HTTP status as an {@link HttpStatus} enum value_@return {@code false} if the status code has not been set because the HTTP response_is already committed, {@code true} if it has been set correctly.;boolean setStatusCode(@Nullable HttpStatus status)_;set,the,http,status,code,of,the,response,param,status,the,http,status,as,an,link,http,status,enum,value,return,code,false,if,the,status,code,has,not,been,set,because,the,http,response,is,already,committed,code,true,if,it,has,been,set,correctly;boolean,set,status,code,nullable,http,status,status
ServerHttpResponse -> boolean setStatusCode(@Nullable HttpStatus status)_;1542136248;Set the HTTP status code of the response._@param status the HTTP status as an {@link HttpStatus} enum value_@return {@code false} if the status code has not been set because the_HTTP response is already committed, {@code true} if successfully set.;boolean setStatusCode(@Nullable HttpStatus status)_;set,the,http,status,code,of,the,response,param,status,the,http,status,as,an,link,http,status,enum,value,return,code,false,if,the,status,code,has,not,been,set,because,the,http,response,is,already,committed,code,true,if,successfully,set;boolean,set,status,code,nullable,http,status,status
ServerHttpResponse -> HttpStatus getStatusCode()_;1468513835;Return the HTTP status code or {@code null} if not set.;HttpStatus getStatusCode()_;return,the,http,status,code,or,code,null,if,not,set;http,status,get,status,code
ServerHttpResponse -> HttpStatus getStatusCode()_;1468532417;Return the HTTP status code or {@code null} if not set.;HttpStatus getStatusCode()_;return,the,http,status,code,or,code,null,if,not,set;http,status,get,status,code
ServerHttpResponse -> HttpStatus getStatusCode()_;1472031624;Return the HTTP status code or {@code null} if not set.;HttpStatus getStatusCode()_;return,the,http,status,code,or,code,null,if,not,set;http,status,get,status,code
ServerHttpResponse -> HttpStatus getStatusCode()_;1481669991;Return the HTTP status code or {@code null} if not set.;HttpStatus getStatusCode()_;return,the,http,status,code,or,code,null,if,not,set;http,status,get,status,code
ServerHttpResponse -> HttpStatus getStatusCode()_;1481669991;Return the HTTP status code or {@code null} if not set.;HttpStatus getStatusCode()_;return,the,http,status,code,or,code,null,if,not,set;http,status,get,status,code
ServerHttpResponse -> HttpStatus getStatusCode()_;1494317919;Return the HTTP status code or {@code null} if not set.;HttpStatus getStatusCode()_;return,the,http,status,code,or,code,null,if,not,set;http,status,get,status,code
ServerHttpResponse -> Mono<Void> setComplete()_;1468513835;Indicate that request handling is complete, allowing for any cleanup or_end-of-processing tasks to be performed such as applying header changes_made via {@link #getHeaders()} to the underlying server response (if not_applied already)._<p>This method should be automatically invoked at the end of request_processing so typically applications should not have to invoke it._If invoked multiple times it should have no side effects.;Mono<Void> setComplete()_;indicate,that,request,handling,is,complete,allowing,for,any,cleanup,or,end,of,processing,tasks,to,be,performed,such,as,applying,header,changes,made,via,link,get,headers,to,the,underlying,server,response,if,not,applied,already,p,this,method,should,be,automatically,invoked,at,the,end,of,request,processing,so,typically,applications,should,not,have,to,invoke,it,if,invoked,multiple,times,it,should,have,no,side,effects;mono,void,set,complete
ServerHttpResponse -> Mono<Void> setComplete()_;1468532417;Indicate that request handling is complete, allowing for any cleanup or_end-of-processing tasks to be performed such as applying header changes_made via {@link #getHeaders()} to the underlying server response (if not_applied already)._<p>This method should be automatically invoked at the end of request_processing so typically applications should not have to invoke it._If invoked multiple times it should have no side effects.;Mono<Void> setComplete()_;indicate,that,request,handling,is,complete,allowing,for,any,cleanup,or,end,of,processing,tasks,to,be,performed,such,as,applying,header,changes,made,via,link,get,headers,to,the,underlying,server,response,if,not,applied,already,p,this,method,should,be,automatically,invoked,at,the,end,of,request,processing,so,typically,applications,should,not,have,to,invoke,it,if,invoked,multiple,times,it,should,have,no,side,effects;mono,void,set,complete
ServerHttpResponse -> Mono<Void> setComplete()_;1472031624;Indicate that request handling is complete, allowing for any cleanup or_end-of-processing tasks to be performed such as applying header changes_made via {@link #getHeaders()} to the underlying server response (if not_applied already)._<p>This method should be automatically invoked at the end of request_processing so typically applications should not have to invoke it._If invoked multiple times it should have no side effects.;Mono<Void> setComplete()_;indicate,that,request,handling,is,complete,allowing,for,any,cleanup,or,end,of,processing,tasks,to,be,performed,such,as,applying,header,changes,made,via,link,get,headers,to,the,underlying,server,response,if,not,applied,already,p,this,method,should,be,automatically,invoked,at,the,end,of,request,processing,so,typically,applications,should,not,have,to,invoke,it,if,invoked,multiple,times,it,should,have,no,side,effects;mono,void,set,complete
ServerHttpResponse -> Mono<Void> setComplete()_;1481669991;Indicate that request handling is complete, allowing for any cleanup or_end-of-processing tasks to be performed such as applying header changes_made via {@link #getHeaders()} to the underlying server response (if not_applied already)._<p>This method should be automatically invoked at the end of request_processing so typically applications should not have to invoke it._If invoked multiple times it should have no side effects.;Mono<Void> setComplete()_;indicate,that,request,handling,is,complete,allowing,for,any,cleanup,or,end,of,processing,tasks,to,be,performed,such,as,applying,header,changes,made,via,link,get,headers,to,the,underlying,server,response,if,not,applied,already,p,this,method,should,be,automatically,invoked,at,the,end,of,request,processing,so,typically,applications,should,not,have,to,invoke,it,if,invoked,multiple,times,it,should,have,no,side,effects;mono,void,set,complete
ServerHttpResponse -> boolean setStatusCode(HttpStatus status)_;1468513835;Set the HTTP status code of the response._@param status the HTTP status as an {@link HttpStatus} enum value_@return {@code false} if the status code has not been set because the HTTP response_is already committed, {@code true} if it has been set correctly.;boolean setStatusCode(HttpStatus status)_;set,the,http,status,code,of,the,response,param,status,the,http,status,as,an,link,http,status,enum,value,return,code,false,if,the,status,code,has,not,been,set,because,the,http,response,is,already,committed,code,true,if,it,has,been,set,correctly;boolean,set,status,code,http,status,status
ServerHttpResponse -> boolean setStatusCode(HttpStatus status)_;1468532417;Set the HTTP status code of the response._@param status the HTTP status as an {@link HttpStatus} enum value_@return {@code false} if the status code has not been set because the HTTP response_is already committed, {@code true} if it has been set correctly.;boolean setStatusCode(HttpStatus status)_;set,the,http,status,code,of,the,response,param,status,the,http,status,as,an,link,http,status,enum,value,return,code,false,if,the,status,code,has,not,been,set,because,the,http,response,is,already,committed,code,true,if,it,has,been,set,correctly;boolean,set,status,code,http,status,status
ServerHttpResponse -> boolean setStatusCode(HttpStatus status)_;1472031624;Set the HTTP status code of the response._@param status the HTTP status as an {@link HttpStatus} enum value_@return {@code false} if the status code has not been set because the HTTP response_is already committed, {@code true} if it has been set correctly.;boolean setStatusCode(HttpStatus status)_;set,the,http,status,code,of,the,response,param,status,the,http,status,as,an,link,http,status,enum,value,return,code,false,if,the,status,code,has,not,been,set,because,the,http,response,is,already,committed,code,true,if,it,has,been,set,correctly;boolean,set,status,code,http,status,status
ServerHttpResponse -> boolean setStatusCode(HttpStatus status)_;1481669991;Set the HTTP status code of the response._@param status the HTTP status as an {@link HttpStatus} enum value_@return {@code false} if the status code has not been set because the HTTP response_is already committed, {@code true} if it has been set correctly.;boolean setStatusCode(HttpStatus status)_;set,the,http,status,code,of,the,response,param,status,the,http,status,as,an,link,http,status,enum,value,return,code,false,if,the,status,code,has,not,been,set,because,the,http,response,is,already,committed,code,true,if,it,has,been,set,correctly;boolean,set,status,code,http,status,status
ServerHttpResponse -> boolean setStatusCode(HttpStatus status)_;1481669991;Set the HTTP status code of the response._@param status the HTTP status as an {@link HttpStatus} enum value_@return {@code false} if the status code has not been set because the HTTP response_is already committed, {@code true} if it has been set correctly.;boolean setStatusCode(HttpStatus status)_;set,the,http,status,code,of,the,response,param,status,the,http,status,as,an,link,http,status,enum,value,return,code,false,if,the,status,code,has,not,been,set,because,the,http,response,is,already,committed,code,true,if,it,has,been,set,correctly;boolean,set,status,code,http,status,status
ServerHttpResponse -> boolean setStatusCode(HttpStatus status)_;1494317919;Set the HTTP status code of the response._@param status the HTTP status as an {@link HttpStatus} enum value_@return {@code false} if the status code has not been set because the HTTP response_is already committed, {@code true} if it has been set correctly.;boolean setStatusCode(HttpStatus status)_;set,the,http,status,code,of,the,response,param,status,the,http,status,as,an,link,http,status,enum,value,return,code,false,if,the,status,code,has,not,been,set,because,the,http,response,is,already,committed,code,true,if,it,has,been,set,correctly;boolean,set,status,code,http,status,status
ServerHttpResponse -> boolean setStatusCode(HttpStatus status)_;1495868221;Set the HTTP status code of the response._@param status the HTTP status as an {@link HttpStatus} enum value_@return {@code false} if the status code has not been set because the HTTP response_is already committed, {@code true} if it has been set correctly.;boolean setStatusCode(HttpStatus status)_;set,the,http,status,code,of,the,response,param,status,the,http,status,as,an,link,http,status,enum,value,return,code,false,if,the,status,code,has,not,been,set,because,the,http,response,is,already,committed,code,true,if,it,has,been,set,correctly;boolean,set,status,code,http,status,status
