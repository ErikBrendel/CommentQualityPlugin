# id;timestamp;commentText;codeText;commentWords;codeWords
RequestPartServletServerHttpRequest -> public RequestPartServletServerHttpRequest(HttpServletRequest request, String partName) 			throws MissingServletRequestPartException;1356735495;Create a new instance._@param request the current request_@param partName the name of the part to adapt to the {@link ServerHttpRequest} contract_@throws MissingServletRequestPartException if the request part cannot be found_@throws IllegalArgumentException if MultipartHttpServletRequest cannot be initialized;public RequestPartServletServerHttpRequest(HttpServletRequest request, String partName)_			throws MissingServletRequestPartException {__		super(request)___		this.multipartRequest = asMultipartRequest(request)__		this.partName = partName___		this.headers = this.multipartRequest.getMultipartHeaders(this.partName)__		if (this.headers == null) {_			if (request instanceof MultipartHttpServletRequest) {_				throw new MissingServletRequestPartException(partName)__			}_			else {_				throw new IllegalArgumentException(_						"Failed to obtain request part: " + partName + ". " +_						"The part is missing or multipart processing is not configured. " +_						"Check for a MultipartResolver bean or if Servlet 3.0 multipart processing is enabled.")__			}_		}_	};create,a,new,instance,param,request,the,current,request,param,part,name,the,name,of,the,part,to,adapt,to,the,link,server,http,request,contract,throws,missing,servlet,request,part,exception,if,the,request,part,cannot,be,found,throws,illegal,argument,exception,if,multipart,http,servlet,request,cannot,be,initialized;public,request,part,servlet,server,http,request,http,servlet,request,request,string,part,name,throws,missing,servlet,request,part,exception,super,request,this,multipart,request,as,multipart,request,request,this,part,name,part,name,this,headers,this,multipart,request,get,multipart,headers,this,part,name,if,this,headers,null,if,request,instanceof,multipart,http,servlet,request,throw,new,missing,servlet,request,part,exception,part,name,else,throw,new,illegal,argument,exception,failed,to,obtain,request,part,part,name,the,part,is,missing,or,multipart,processing,is,not,configured,check,for,a,multipart,resolver,bean,or,if,servlet,3,0,multipart,processing,is,enabled
RequestPartServletServerHttpRequest -> public RequestPartServletServerHttpRequest(HttpServletRequest request, String partName) 			throws MissingServletRequestPartException;1413848647;Create a new instance._@param request the current request_@param partName the name of the part to adapt to the {@link ServerHttpRequest} contract_@throws MissingServletRequestPartException if the request part cannot be found_@throws IllegalArgumentException if MultipartHttpServletRequest cannot be initialized;public RequestPartServletServerHttpRequest(HttpServletRequest request, String partName)_			throws MissingServletRequestPartException {__		super(request)___		this.multipartRequest = asMultipartRequest(request)__		this.partName = partName___		this.headers = this.multipartRequest.getMultipartHeaders(this.partName)__		if (this.headers == null) {_			if (request instanceof MultipartHttpServletRequest) {_				throw new MissingServletRequestPartException(partName)__			}_			else {_				throw new IllegalArgumentException(_						"Failed to obtain request part: " + partName + ". " +_						"The part is missing or multipart processing is not configured. " +_						"Check for a MultipartResolver bean or if Servlet 3.0 multipart processing is enabled.")__			}_		}_	};create,a,new,instance,param,request,the,current,request,param,part,name,the,name,of,the,part,to,adapt,to,the,link,server,http,request,contract,throws,missing,servlet,request,part,exception,if,the,request,part,cannot,be,found,throws,illegal,argument,exception,if,multipart,http,servlet,request,cannot,be,initialized;public,request,part,servlet,server,http,request,http,servlet,request,request,string,part,name,throws,missing,servlet,request,part,exception,super,request,this,multipart,request,as,multipart,request,request,this,part,name,part,name,this,headers,this,multipart,request,get,multipart,headers,this,part,name,if,this,headers,null,if,request,instanceof,multipart,http,servlet,request,throw,new,missing,servlet,request,part,exception,part,name,else,throw,new,illegal,argument,exception,failed,to,obtain,request,part,part,name,the,part,is,missing,or,multipart,processing,is,not,configured,check,for,a,multipart,resolver,bean,or,if,servlet,3,0,multipart,processing,is,enabled
RequestPartServletServerHttpRequest -> public RequestPartServletServerHttpRequest(HttpServletRequest request, String partName) 			throws MissingServletRequestPartException;1436244426;Create a new instance._@param request the current request_@param partName the name of the part to adapt to the {@link ServerHttpRequest} contract_@throws MissingServletRequestPartException if the request part cannot be found_@throws IllegalArgumentException if MultipartHttpServletRequest cannot be initialized;public RequestPartServletServerHttpRequest(HttpServletRequest request, String partName)_			throws MissingServletRequestPartException {__		super(request)___		this.multipartRequest = asMultipartRequest(request)__		this.partName = partName___		this.headers = this.multipartRequest.getMultipartHeaders(this.partName)__		if (this.headers == null) {_			if (request instanceof MultipartHttpServletRequest) {_				throw new MissingServletRequestPartException(partName)__			}_			else {_				throw new IllegalArgumentException(_						"Failed to obtain request part: " + partName + ". " +_						"The part is missing or multipart processing is not configured. " +_						"Check for a MultipartResolver bean or if Servlet 3.0 multipart processing is enabled.")__			}_		}_	};create,a,new,instance,param,request,the,current,request,param,part,name,the,name,of,the,part,to,adapt,to,the,link,server,http,request,contract,throws,missing,servlet,request,part,exception,if,the,request,part,cannot,be,found,throws,illegal,argument,exception,if,multipart,http,servlet,request,cannot,be,initialized;public,request,part,servlet,server,http,request,http,servlet,request,request,string,part,name,throws,missing,servlet,request,part,exception,super,request,this,multipart,request,as,multipart,request,request,this,part,name,part,name,this,headers,this,multipart,request,get,multipart,headers,this,part,name,if,this,headers,null,if,request,instanceof,multipart,http,servlet,request,throw,new,missing,servlet,request,part,exception,part,name,else,throw,new,illegal,argument,exception,failed,to,obtain,request,part,part,name,the,part,is,missing,or,multipart,processing,is,not,configured,check,for,a,multipart,resolver,bean,or,if,servlet,3,0,multipart,processing,is,enabled
RequestPartServletServerHttpRequest -> public RequestPartServletServerHttpRequest(HttpServletRequest request, String partName) 			throws MissingServletRequestPartException;1440167288;Create a new instance._@param request the current request_@param partName the name of the part to adapt to the {@link ServerHttpRequest} contract_@throws MissingServletRequestPartException if the request part cannot be found_@throws IllegalArgumentException if MultipartHttpServletRequest cannot be initialized;public RequestPartServletServerHttpRequest(HttpServletRequest request, String partName)_			throws MissingServletRequestPartException {__		super(request)___		this.multipartRequest = asMultipartRequest(request)__		this.partName = partName___		this.headers = this.multipartRequest.getMultipartHeaders(this.partName)__		if (this.headers == null) {_			if (request instanceof MultipartHttpServletRequest) {_				throw new MissingServletRequestPartException(partName)__			}_			else {_				throw new IllegalArgumentException(_						"Failed to obtain request part: " + partName + ". " +_						"The part is missing or multipart processing is not configured. " +_						"Check for a MultipartResolver bean or if Servlet 3.0 multipart processing is enabled.")__			}_		}_	};create,a,new,instance,param,request,the,current,request,param,part,name,the,name,of,the,part,to,adapt,to,the,link,server,http,request,contract,throws,missing,servlet,request,part,exception,if,the,request,part,cannot,be,found,throws,illegal,argument,exception,if,multipart,http,servlet,request,cannot,be,initialized;public,request,part,servlet,server,http,request,http,servlet,request,request,string,part,name,throws,missing,servlet,request,part,exception,super,request,this,multipart,request,as,multipart,request,request,this,part,name,part,name,this,headers,this,multipart,request,get,multipart,headers,this,part,name,if,this,headers,null,if,request,instanceof,multipart,http,servlet,request,throw,new,missing,servlet,request,part,exception,part,name,else,throw,new,illegal,argument,exception,failed,to,obtain,request,part,part,name,the,part,is,missing,or,multipart,processing,is,not,configured,check,for,a,multipart,resolver,bean,or,if,servlet,3,0,multipart,processing,is,enabled
RequestPartServletServerHttpRequest -> public RequestPartServletServerHttpRequest(HttpServletRequest request, String partName) 			throws MissingServletRequestPartException;1453827975;Create a new {@code RequestPartServletServerHttpRequest} instance._@param request the current servlet request_@param partName the name of the part to adapt to the {@link ServerHttpRequest} contract_@throws MissingServletRequestPartException if the request part cannot be found_@throws MultipartException if MultipartHttpServletRequest cannot be initialized;public RequestPartServletServerHttpRequest(HttpServletRequest request, String partName)_			throws MissingServletRequestPartException {__		super(request)___		this.multipartRequest = MultipartResolutionDelegate.asMultipartHttpServletRequest(request)__		this.partName = partName___		this.headers = this.multipartRequest.getMultipartHeaders(this.partName)__		if (this.headers == null) {_			throw new MissingServletRequestPartException(partName)__		}_	};create,a,new,code,request,part,servlet,server,http,request,instance,param,request,the,current,servlet,request,param,part,name,the,name,of,the,part,to,adapt,to,the,link,server,http,request,contract,throws,missing,servlet,request,part,exception,if,the,request,part,cannot,be,found,throws,multipart,exception,if,multipart,http,servlet,request,cannot,be,initialized;public,request,part,servlet,server,http,request,http,servlet,request,request,string,part,name,throws,missing,servlet,request,part,exception,super,request,this,multipart,request,multipart,resolution,delegate,as,multipart,http,servlet,request,request,this,part,name,part,name,this,headers,this,multipart,request,get,multipart,headers,this,part,name,if,this,headers,null,throw,new,missing,servlet,request,part,exception,part,name
RequestPartServletServerHttpRequest -> public RequestPartServletServerHttpRequest(HttpServletRequest request, String partName) 			throws MissingServletRequestPartException;1460644739;Create a new {@code RequestPartServletServerHttpRequest} instance._@param request the current servlet request_@param partName the name of the part to adapt to the {@link ServerHttpRequest} contract_@throws MissingServletRequestPartException if the request part cannot be found_@throws MultipartException if MultipartHttpServletRequest cannot be initialized;public RequestPartServletServerHttpRequest(HttpServletRequest request, String partName)_			throws MissingServletRequestPartException {__		super(request)___		this.multipartRequest = MultipartResolutionDelegate.asMultipartHttpServletRequest(request)__		this.partName = partName___		this.headers = this.multipartRequest.getMultipartHeaders(this.partName)__		if (this.headers == null) {_			throw new MissingServletRequestPartException(partName)__		}_	};create,a,new,code,request,part,servlet,server,http,request,instance,param,request,the,current,servlet,request,param,part,name,the,name,of,the,part,to,adapt,to,the,link,server,http,request,contract,throws,missing,servlet,request,part,exception,if,the,request,part,cannot,be,found,throws,multipart,exception,if,multipart,http,servlet,request,cannot,be,initialized;public,request,part,servlet,server,http,request,http,servlet,request,request,string,part,name,throws,missing,servlet,request,part,exception,super,request,this,multipart,request,multipart,resolution,delegate,as,multipart,http,servlet,request,request,this,part,name,part,name,this,headers,this,multipart,request,get,multipart,headers,this,part,name,if,this,headers,null,throw,new,missing,servlet,request,part,exception,part,name
RequestPartServletServerHttpRequest -> public RequestPartServletServerHttpRequest(HttpServletRequest request, String partName) 			throws MissingServletRequestPartException;1468964586;Create a new {@code RequestPartServletServerHttpRequest} instance._@param request the current servlet request_@param partName the name of the part to adapt to the {@link ServerHttpRequest} contract_@throws MissingServletRequestPartException if the request part cannot be found_@throws MultipartException if MultipartHttpServletRequest cannot be initialized;public RequestPartServletServerHttpRequest(HttpServletRequest request, String partName)_			throws MissingServletRequestPartException {__		super(request)___		this.multipartRequest = MultipartResolutionDelegate.asMultipartHttpServletRequest(request)__		this.partName = partName___		this.headers = this.multipartRequest.getMultipartHeaders(this.partName)__		if (this.headers == null) {_			throw new MissingServletRequestPartException(partName)__		}_	};create,a,new,code,request,part,servlet,server,http,request,instance,param,request,the,current,servlet,request,param,part,name,the,name,of,the,part,to,adapt,to,the,link,server,http,request,contract,throws,missing,servlet,request,part,exception,if,the,request,part,cannot,be,found,throws,multipart,exception,if,multipart,http,servlet,request,cannot,be,initialized;public,request,part,servlet,server,http,request,http,servlet,request,request,string,part,name,throws,missing,servlet,request,part,exception,super,request,this,multipart,request,multipart,resolution,delegate,as,multipart,http,servlet,request,request,this,part,name,part,name,this,headers,this,multipart,request,get,multipart,headers,this,part,name,if,this,headers,null,throw,new,missing,servlet,request,part,exception,part,name
RequestPartServletServerHttpRequest -> public RequestPartServletServerHttpRequest(HttpServletRequest request, String partName) 			throws MissingServletRequestPartException;1498780456;Create a new {@code RequestPartServletServerHttpRequest} instance._@param request the current servlet request_@param partName the name of the part to adapt to the {@link ServerHttpRequest} contract_@throws MissingServletRequestPartException if the request part cannot be found_@throws MultipartException if MultipartHttpServletRequest cannot be initialized;public RequestPartServletServerHttpRequest(HttpServletRequest request, String partName)_			throws MissingServletRequestPartException {__		super(request)___		this.multipartRequest = MultipartResolutionDelegate.asMultipartHttpServletRequest(request)__		this.partName = partName___		HttpHeaders headers = this.multipartRequest.getMultipartHeaders(this.partName)__		if (headers == null) {_			throw new MissingServletRequestPartException(partName)__		}_		this.headers = headers__	};create,a,new,code,request,part,servlet,server,http,request,instance,param,request,the,current,servlet,request,param,part,name,the,name,of,the,part,to,adapt,to,the,link,server,http,request,contract,throws,missing,servlet,request,part,exception,if,the,request,part,cannot,be,found,throws,multipart,exception,if,multipart,http,servlet,request,cannot,be,initialized;public,request,part,servlet,server,http,request,http,servlet,request,request,string,part,name,throws,missing,servlet,request,part,exception,super,request,this,multipart,request,multipart,resolution,delegate,as,multipart,http,servlet,request,request,this,part,name,part,name,http,headers,headers,this,multipart,request,get,multipart,headers,this,part,name,if,headers,null,throw,new,missing,servlet,request,part,exception,part,name,this,headers,headers
