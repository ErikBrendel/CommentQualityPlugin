# id;timestamp;commentText;codeText;commentWords;codeWords
PathElement -> public abstract int getNormalizedLength()_;1495035625;Return the length of the path element where captures are considered to be one character long.;public abstract int getNormalizedLength()_;return,the,length,of,the,path,element,where,captures,are,considered,to,be,one,character,long;public,abstract,int,get,normalized,length
PathElement -> public abstract int getNormalizedLength()_;1497038887;@return the length of the path element where captures are considered to be one character long.;public abstract int getNormalizedLength()_;return,the,length,of,the,path,element,where,captures,are,considered,to,be,one,character,long;public,abstract,int,get,normalized,length
PathElement -> public abstract int getNormalizedLength()_;1497275505;@return the length of the path element where captures are considered to be one character long.;public abstract int getNormalizedLength()_;return,the,length,of,the,path,element,where,captures,are,considered,to,be,one,character,long;public,abstract,int,get,normalized,length
PathElement -> public abstract int getNormalizedLength()_;1498780456;@return the length of the path element where captures are considered to be one character long.;public abstract int getNormalizedLength()_;return,the,length,of,the,path,element,where,captures,are,considered,to,be,one,character,long;public,abstract,int,get,normalized,length
PathElement -> public abstract int getNormalizedLength()_;1498861175;@return the length of the path element where captures are considered to be one character long.;public abstract int getNormalizedLength()_;return,the,length,of,the,path,element,where,captures,are,considered,to,be,one,character,long;public,abstract,int,get,normalized,length
PathElement -> public abstract int getNormalizedLength()_;1499445979;@return the length of the path element where captures are considered to be one character long.;public abstract int getNormalizedLength()_;return,the,length,of,the,path,element,where,captures,are,considered,to,be,one,character,long;public,abstract,int,get,normalized,length
PathElement -> public abstract int getNormalizedLength()_;1520528267;@return the length of the path element where captures are considered to be one character long.;public abstract int getNormalizedLength()_;return,the,length,of,the,path,element,where,captures,are,considered,to,be,one,character,long;public,abstract,int,get,normalized,length
PathElement -> public abstract int getNormalizedLength()_;1530174524;Return the length of the path element where captures are considered to be one character long._@return the normalized length;public abstract int getNormalizedLength()_;return,the,length,of,the,path,element,where,captures,are,considered,to,be,one,character,long,return,the,normalized,length;public,abstract,int,get,normalized,length
PathElement -> protected boolean includesPercent(char[] chars, int from, int to);1497038887;@param char sequence of characters_@param from start position (included in check)_@param to end position (excluded from check)_@return true if the chars array includes a '%' character between the specified positions;protected boolean includesPercent(char[] chars, int from, int to) {_		for (int i = from_ i < to_ i++) {_			if (chars[i] == '%') {_				return true__			}_		}_		return false__	};param,char,sequence,of,characters,param,from,start,position,included,in,check,param,to,end,position,excluded,from,check,return,true,if,the,chars,array,includes,a,character,between,the,specified,positions;protected,boolean,includes,percent,char,chars,int,from,int,to,for,int,i,from,i,to,i,if,chars,i,return,true,return,false
PathElement -> protected boolean includesPercent(char[] chars, int from, int to);1497275505;@param chars sequence of characters_@param from start position (included in check)_@param to end position (excluded from check)_@return true if the chars array includes a '%' character between the specified positions;protected boolean includesPercent(char[] chars, int from, int to) {_		for (int i = from_ i < to_ i++) {_			if (chars[i] == '%') {_				return true__			}_		}_		return false__	};param,chars,sequence,of,characters,param,from,start,position,included,in,check,param,to,end,position,excluded,from,check,return,true,if,the,chars,array,includes,a,character,between,the,specified,positions;protected,boolean,includes,percent,char,chars,int,from,int,to,for,int,i,from,i,to,i,if,chars,i,return,true,return,false
PathElement -> protected boolean includesPercent(char[] chars, int from, int to);1498780456;@param chars sequence of characters_@param from start position (included in check)_@param to end position (excluded from check)_@return true if the chars array includes a '%' character between the specified positions;protected boolean includesPercent(char[] chars, int from, int to) {_		for (int i = from_ i < to_ i++) {_			if (chars[i] == '%') {_				return true__			}_		}_		return false__	};param,chars,sequence,of,characters,param,from,start,position,included,in,check,param,to,end,position,excluded,from,check,return,true,if,the,chars,array,includes,a,character,between,the,specified,positions;protected,boolean,includes,percent,char,chars,int,from,int,to,for,int,i,from,i,to,i,if,chars,i,return,true,return,false
PathElement -> PathElement(int pos, char separator);1495035625;Create a new path element._@param pos the position where this path element starts in the pattern data_@param separator the separator in use in the path pattern;PathElement(int pos, char separator) {_		this.pos = pos__		this.separator = separator__	};create,a,new,path,element,param,pos,the,position,where,this,path,element,starts,in,the,pattern,data,param,separator,the,separator,in,use,in,the,path,pattern;path,element,int,pos,char,separator,this,pos,pos,this,separator,separator
PathElement -> PathElement(int pos, char separator);1497038887;Create a new path element._@param pos the position where this path element starts in the pattern data_@param separator the separator in use in the path pattern;PathElement(int pos, char separator) {_		this.pos = pos__		this.separator = separator__	};create,a,new,path,element,param,pos,the,position,where,this,path,element,starts,in,the,pattern,data,param,separator,the,separator,in,use,in,the,path,pattern;path,element,int,pos,char,separator,this,pos,pos,this,separator,separator
PathElement -> PathElement(int pos, char separator);1497275505;Create a new path element._@param pos the position where this path element starts in the pattern data_@param separator the separator in use in the path pattern;PathElement(int pos, char separator) {_		this.pos = pos__		this.separator = separator__	};create,a,new,path,element,param,pos,the,position,where,this,path,element,starts,in,the,pattern,data,param,separator,the,separator,in,use,in,the,path,pattern;path,element,int,pos,char,separator,this,pos,pos,this,separator,separator
PathElement -> PathElement(int pos, char separator);1498780456;Create a new path element._@param pos the position where this path element starts in the pattern data_@param separator the separator in use in the path pattern;PathElement(int pos, char separator) {_		this.pos = pos__		this.separator = separator__	};create,a,new,path,element,param,pos,the,position,where,this,path,element,starts,in,the,pattern,data,param,separator,the,separator,in,use,in,the,path,pattern;path,element,int,pos,char,separator,this,pos,pos,this,separator,separator
PathElement -> PathElement(int pos, char separator);1498861175;Create a new path element._@param pos the position where this path element starts in the pattern data_@param separator the separator in use in the path pattern;PathElement(int pos, char separator) {_		this.pos = pos__		this.separator = separator__	};create,a,new,path,element,param,pos,the,position,where,this,path,element,starts,in,the,pattern,data,param,separator,the,separator,in,use,in,the,path,pattern;path,element,int,pos,char,separator,this,pos,pos,this,separator,separator
PathElement -> PathElement(int pos, char separator);1499445979;Create a new path element._@param pos the position where this path element starts in the pattern data_@param separator the separator in use in the path pattern;PathElement(int pos, char separator) {_		this.pos = pos__		this.separator = separator__	};create,a,new,path,element,param,pos,the,position,where,this,path,element,starts,in,the,pattern,data,param,separator,the,separator,in,use,in,the,path,pattern;path,element,int,pos,char,separator,this,pos,pos,this,separator,separator
PathElement -> PathElement(int pos, char separator);1520528267;Create a new path element._@param pos the position where this path element starts in the pattern data_@param separator the separator in use in the path pattern;PathElement(int pos, char separator) {_		this.pos = pos__		this.separator = separator__	};create,a,new,path,element,param,pos,the,position,where,this,path,element,starts,in,the,pattern,data,param,separator,the,separator,in,use,in,the,path,pattern;path,element,int,pos,char,separator,this,pos,pos,this,separator,separator
PathElement -> PathElement(int pos, char separator);1530174524;Create a new path element._@param pos the position where this path element starts in the pattern data_@param separator the separator in use in the path pattern;PathElement(int pos, char separator) {_		this.pos = pos__		this.separator = separator__	};create,a,new,path,element,param,pos,the,position,where,this,path,element,starts,in,the,pattern,data,param,separator,the,separator,in,use,in,the,path,pattern;path,element,int,pos,char,separator,this,pos,pos,this,separator,separator
PathElement -> protected boolean includesPercent(CharSequence chars);1497038887;@param chars string that may include a '%' character indicating it is encoded_@return true if the string contains a '%' character;protected boolean includesPercent(CharSequence chars) {_		for (int i = 0, max = chars.length()_ i < max_ i++) {_			if (chars.charAt(i) == '%') {_				return true__			}_		}_		return false__	};param,chars,string,that,may,include,a,character,indicating,it,is,encoded,return,true,if,the,string,contains,a,character;protected,boolean,includes,percent,char,sequence,chars,for,int,i,0,max,chars,length,i,max,i,if,chars,char,at,i,return,true,return,false
PathElement -> protected boolean includesPercent(CharSequence chars);1497275505;@param chars string that may include a '%' character indicating it is encoded_@return true if the string contains a '%' character;protected boolean includesPercent(CharSequence chars) {_		for (int i = 0, max = chars.length()_ i < max_ i++) {_			if (chars.charAt(i) == '%') {_				return true__			}_		}_		return false__	};param,chars,string,that,may,include,a,character,indicating,it,is,encoded,return,true,if,the,string,contains,a,character;protected,boolean,includes,percent,char,sequence,chars,for,int,i,0,max,chars,length,i,max,i,if,chars,char,at,i,return,true,return,false
PathElement -> protected boolean includesPercent(CharSequence chars);1498780456;@param chars string that may include a '%' character indicating it is encoded_@return true if the string contains a '%' character;protected boolean includesPercent(CharSequence chars) {_		for (int i = 0, max = chars.length()_ i < max_ i++) {_			if (chars.charAt(i) == '%') {_				return true__			}_		}_		return false__	};param,chars,string,that,may,include,a,character,indicating,it,is,encoded,return,true,if,the,string,contains,a,character;protected,boolean,includes,percent,char,sequence,chars,for,int,i,0,max,chars,length,i,max,i,if,chars,char,at,i,return,true,return,false
PathElement -> public abstract boolean matches(int candidatePos, MatchingContext matchingContext)_;1495035625;Attempt to match this path element._@param candidatePos the current position within the candidate path_@param matchingContext encapsulates context for the match including the candidate_@return {@code true} if it matches, otherwise {@code false};public abstract boolean matches(int candidatePos, MatchingContext matchingContext)_;attempt,to,match,this,path,element,param,candidate,pos,the,current,position,within,the,candidate,path,param,matching,context,encapsulates,context,for,the,match,including,the,candidate,return,code,true,if,it,matches,otherwise,code,false;public,abstract,boolean,matches,int,candidate,pos,matching,context,matching,context
PathElement -> public abstract boolean matches(int candidatePos, MatchingContext matchingContext)_;1497038887;Attempt to match this path element._@param candidatePos the current position within the candidate path_@param matchingContext encapsulates context for the match including the candidate_@return {@code true} if it matches, otherwise {@code false};public abstract boolean matches(int candidatePos, MatchingContext matchingContext)_;attempt,to,match,this,path,element,param,candidate,pos,the,current,position,within,the,candidate,path,param,matching,context,encapsulates,context,for,the,match,including,the,candidate,return,code,true,if,it,matches,otherwise,code,false;public,abstract,boolean,matches,int,candidate,pos,matching,context,matching,context
PathElement -> public abstract boolean matches(int candidatePos, MatchingContext matchingContext)_;1497275505;Attempt to match this path element._@param candidatePos the current position within the candidate path_@param matchingContext encapsulates context for the match including the candidate_@return {@code true} if it matches, otherwise {@code false};public abstract boolean matches(int candidatePos, MatchingContext matchingContext)_;attempt,to,match,this,path,element,param,candidate,pos,the,current,position,within,the,candidate,path,param,matching,context,encapsulates,context,for,the,match,including,the,candidate,return,code,true,if,it,matches,otherwise,code,false;public,abstract,boolean,matches,int,candidate,pos,matching,context,matching,context
PathElement -> public abstract boolean matches(int candidatePos, MatchingContext matchingContext)_;1498780456;Attempt to match this path element._@param candidatePos the current position within the candidate path_@param matchingContext encapsulates context for the match including the candidate_@return {@code true} if it matches, otherwise {@code false};public abstract boolean matches(int candidatePos, MatchingContext matchingContext)_;attempt,to,match,this,path,element,param,candidate,pos,the,current,position,within,the,candidate,path,param,matching,context,encapsulates,context,for,the,match,including,the,candidate,return,code,true,if,it,matches,otherwise,code,false;public,abstract,boolean,matches,int,candidate,pos,matching,context,matching,context
PathElement -> public abstract boolean matches(int candidatePos, MatchingContext matchingContext)_;1498861175;Attempt to match this path element._@param candidatePos the current position within the candidate path_@param matchingContext encapsulates context for the match including the candidate_@return {@code true} if it matches, otherwise {@code false};public abstract boolean matches(int candidatePos, MatchingContext matchingContext)_;attempt,to,match,this,path,element,param,candidate,pos,the,current,position,within,the,candidate,path,param,matching,context,encapsulates,context,for,the,match,including,the,candidate,return,code,true,if,it,matches,otherwise,code,false;public,abstract,boolean,matches,int,candidate,pos,matching,context,matching,context
PathElement -> public abstract boolean matches(int candidatePos, MatchingContext matchingContext)_;1499445979;Attempt to match this path element._@param candidatePos the current position within the candidate path_@param matchingContext encapsulates context for the match including the candidate_@return {@code true} if it matches, otherwise {@code false};public abstract boolean matches(int candidatePos, MatchingContext matchingContext)_;attempt,to,match,this,path,element,param,candidate,pos,the,current,position,within,the,candidate,path,param,matching,context,encapsulates,context,for,the,match,including,the,candidate,return,code,true,if,it,matches,otherwise,code,false;public,abstract,boolean,matches,int,candidate,pos,matching,context,matching,context
PathElement -> public abstract boolean matches(int candidatePos, MatchingContext matchingContext)_;1520528267;Attempt to match this path element._@param candidatePos the current position within the candidate path_@param matchingContext encapsulates context for the match including the candidate_@return {@code true} if it matches, otherwise {@code false};public abstract boolean matches(int candidatePos, MatchingContext matchingContext)_;attempt,to,match,this,path,element,param,candidate,pos,the,current,position,within,the,candidate,path,param,matching,context,encapsulates,context,for,the,match,including,the,candidate,return,code,true,if,it,matches,otherwise,code,false;public,abstract,boolean,matches,int,candidate,pos,matching,context,matching,context
PathElement -> public abstract boolean matches(int candidatePos, MatchingContext matchingContext)_;1530174524;Attempt to match this path element._@param candidatePos the current position within the candidate path_@param matchingContext encapsulates context for the match including the candidate_@return {@code true} if it matches, otherwise {@code false};public abstract boolean matches(int candidatePos, MatchingContext matchingContext)_;attempt,to,match,this,path,element,param,candidate,pos,the,current,position,within,the,candidate,path,param,matching,context,encapsulates,context,for,the,match,including,the,candidate,return,code,true,if,it,matches,otherwise,code,false;public,abstract,boolean,matches,int,candidate,pos,matching,context,matching,context
PathElement -> protected boolean nextIfExistsIsSeparator(int nextIndex, MatchingContext matchingContext);1495035625;Return {@code true} if there is no next character, or if there is then it is a separator.;protected boolean nextIfExistsIsSeparator(int nextIndex, MatchingContext matchingContext) {_		return (nextIndex >= matchingContext.candidateLength ||_				matchingContext.candidate[nextIndex] == this.separator)__	};return,code,true,if,there,is,no,next,character,or,if,there,is,then,it,is,a,separator;protected,boolean,next,if,exists,is,separator,int,next,index,matching,context,matching,context,return,next,index,matching,context,candidate,length,matching,context,candidate,next,index,this,separator
PathElement -> protected boolean nextIfExistsIsSeparator(int nextIndex, MatchingContext matchingContext);1497038887;Return {@code true} if there is no next character, or if there is then it is a separator.;protected boolean nextIfExistsIsSeparator(int nextIndex, MatchingContext matchingContext) {_		return (nextIndex >= matchingContext.candidateLength ||_				matchingContext.candidate[nextIndex] == this.separator)__	};return,code,true,if,there,is,no,next,character,or,if,there,is,then,it,is,a,separator;protected,boolean,next,if,exists,is,separator,int,next,index,matching,context,matching,context,return,next,index,matching,context,candidate,length,matching,context,candidate,next,index,this,separator
PathElement -> protected boolean nextIfExistsIsSeparator(int nextIndex, MatchingContext matchingContext);1497275505;Return {@code true} if there is no next character, or if there is then it is a separator.;protected boolean nextIfExistsIsSeparator(int nextIndex, MatchingContext matchingContext) {_		return (nextIndex >= matchingContext.candidateLength ||_				matchingContext.candidate[nextIndex] == this.separator)__	};return,code,true,if,there,is,no,next,character,or,if,there,is,then,it,is,a,separator;protected,boolean,next,if,exists,is,separator,int,next,index,matching,context,matching,context,return,next,index,matching,context,candidate,length,matching,context,candidate,next,index,this,separator
PathElement -> protected boolean nextIfExistsIsSeparator(int nextIndex, MatchingContext matchingContext);1498780456;Return {@code true} if there is no next character, or if there is then it is a separator.;protected boolean nextIfExistsIsSeparator(int nextIndex, MatchingContext matchingContext) {_		return (nextIndex >= matchingContext.candidateLength ||_				matchingContext.candidate[nextIndex] == this.separator)__	};return,code,true,if,there,is,no,next,character,or,if,there,is,then,it,is,a,separator;protected,boolean,next,if,exists,is,separator,int,next,index,matching,context,matching,context,return,next,index,matching,context,candidate,length,matching,context,candidate,next,index,this,separator
PathElement -> protected String decode(CharSequence toDecode);1497038887;Decode an input CharSequence if necessary._@param toDecode the input char sequence that should be decoded if necessary_@returns the decoded result;protected String decode(CharSequence toDecode) {_		CharSequence decoded = toDecode__		if (includesPercent(toDecode)) {_			try {_				decoded = UriUtils.decode(toDecode.toString(), StandardCharsets.UTF_8.name())__			}_			catch (UnsupportedEncodingException e) {_				throw new IllegalStateException(e)__			}_		}_		return decoded.toString()__	};decode,an,input,char,sequence,if,necessary,param,to,decode,the,input,char,sequence,that,should,be,decoded,if,necessary,returns,the,decoded,result;protected,string,decode,char,sequence,to,decode,char,sequence,decoded,to,decode,if,includes,percent,to,decode,try,decoded,uri,utils,decode,to,decode,to,string,standard,charsets,name,catch,unsupported,encoding,exception,e,throw,new,illegal,state,exception,e,return,decoded,to,string
PathElement -> protected String decode(CharSequence toDecode);1497275505;Decode an input CharSequence if necessary._@param toDecode the input char sequence that should be decoded if necessary_@return the decoded result;protected String decode(CharSequence toDecode) {_		CharSequence decoded = toDecode__		if (includesPercent(toDecode)) {_			decoded = UriUtils.decode(toDecode.toString(), StandardCharsets.UTF_8)__		}_		return decoded.toString()__	};decode,an,input,char,sequence,if,necessary,param,to,decode,the,input,char,sequence,that,should,be,decoded,if,necessary,return,the,decoded,result;protected,string,decode,char,sequence,to,decode,char,sequence,decoded,to,decode,if,includes,percent,to,decode,decoded,uri,utils,decode,to,decode,to,string,standard,charsets,return,decoded,to,string
PathElement -> protected String decode(CharSequence toDecode);1498780456;Decode an input CharSequence if necessary._@param toDecode the input char sequence that should be decoded if necessary_@return the decoded result;protected String decode(CharSequence toDecode) {_		CharSequence decoded = toDecode__		if (includesPercent(toDecode)) {_			decoded = UriUtils.decode(toDecode.toString(), StandardCharsets.UTF_8)__		}_		return decoded.toString()__	};decode,an,input,char,sequence,if,necessary,param,to,decode,the,input,char,sequence,that,should,be,decoded,if,necessary,return,the,decoded,result;protected,string,decode,char,sequence,to,decode,char,sequence,decoded,to,decode,if,includes,percent,to,decode,decoded,uri,utils,decode,to,decode,to,string,standard,charsets,return,decoded,to,string
PathElement -> protected final boolean isNoMorePattern();1498861175;@return true if the there are no more PathElements in the pattern;protected final boolean isNoMorePattern() {_		return this.next == null__	};return,true,if,the,there,are,no,more,path,elements,in,the,pattern;protected,final,boolean,is,no,more,pattern,return,this,next,null
PathElement -> protected final boolean isNoMorePattern();1499445979;@return true if the there are no more PathElements in the pattern;protected final boolean isNoMorePattern() {_		return this.next == null__	};return,true,if,the,there,are,no,more,path,elements,in,the,pattern;protected,final,boolean,is,no,more,pattern,return,this,next,null
PathElement -> protected final boolean isNoMorePattern();1520528267;@return true if the there are no more PathElements in the pattern;protected final boolean isNoMorePattern() {_		return this.next == null__	};return,true,if,the,there,are,no,more,path,elements,in,the,pattern;protected,final,boolean,is,no,more,pattern,return,this,next,null
PathElement -> protected final boolean isNoMorePattern();1530174524;Return if the there are no more PathElements in the pattern._@return {@code true} if the there are no more elements;protected final boolean isNoMorePattern() {_		return this.next == null__	};return,if,the,there,are,no,more,path,elements,in,the,pattern,return,code,true,if,the,there,are,no,more,elements;protected,final,boolean,is,no,more,pattern,return,this,next,null
PathElement -> public int getScore();1495035625;Return the score for this PathElement, combined score is used to compare parsed patterns.;public int getScore() {_		return 0__	};return,the,score,for,this,path,element,combined,score,is,used,to,compare,parsed,patterns;public,int,get,score,return,0
PathElement -> public int getScore();1497038887;Return the score for this PathElement, combined score is used to compare parsed patterns.;public int getScore() {_		return 0__	};return,the,score,for,this,path,element,combined,score,is,used,to,compare,parsed,patterns;public,int,get,score,return,0
PathElement -> public int getScore();1497275505;Return the score for this PathElement, combined score is used to compare parsed patterns.;public int getScore() {_		return 0__	};return,the,score,for,this,path,element,combined,score,is,used,to,compare,parsed,patterns;public,int,get,score,return,0
PathElement -> public int getScore();1498780456;Return the score for this PathElement, combined score is used to compare parsed patterns.;public int getScore() {_		return 0__	};return,the,score,for,this,path,element,combined,score,is,used,to,compare,parsed,patterns;public,int,get,score,return,0
PathElement -> public int getScore();1498861175;Return the score for this PathElement, combined score is used to compare parsed patterns.;public int getScore() {_		return 0__	};return,the,score,for,this,path,element,combined,score,is,used,to,compare,parsed,patterns;public,int,get,score,return,0
PathElement -> public int getScore();1499445979;Return the score for this PathElement, combined score is used to compare parsed patterns.;public int getScore() {_		return 0__	};return,the,score,for,this,path,element,combined,score,is,used,to,compare,parsed,patterns;public,int,get,score,return,0
PathElement -> public int getScore();1520528267;Return the score for this PathElement, combined score is used to compare parsed patterns.;public int getScore() {_		return 0__	};return,the,score,for,this,path,element,combined,score,is,used,to,compare,parsed,patterns;public,int,get,score,return,0
PathElement -> public int getScore();1530174524;Return the score for this PathElement, combined score is used to compare parsed patterns.;public int getScore() {_		return 0__	};return,the,score,for,this,path,element,combined,score,is,used,to,compare,parsed,patterns;public,int,get,score,return,0
PathElement -> public int getCaptureCount();1495035625;Return the number of variables captured by the path element.;public int getCaptureCount() {_		return 0__	};return,the,number,of,variables,captured,by,the,path,element;public,int,get,capture,count,return,0
PathElement -> public int getCaptureCount();1497038887;Return the number of variables captured by the path element.;public int getCaptureCount() {_		return 0__	};return,the,number,of,variables,captured,by,the,path,element;public,int,get,capture,count,return,0
PathElement -> public int getCaptureCount();1497275505;Return the number of variables captured by the path element.;public int getCaptureCount() {_		return 0__	};return,the,number,of,variables,captured,by,the,path,element;public,int,get,capture,count,return,0
PathElement -> public int getCaptureCount();1498780456;Return the number of variables captured by the path element.;public int getCaptureCount() {_		return 0__	};return,the,number,of,variables,captured,by,the,path,element;public,int,get,capture,count,return,0
PathElement -> public int getCaptureCount();1498861175;Return the number of variables captured by the path element.;public int getCaptureCount() {_		return 0__	};return,the,number,of,variables,captured,by,the,path,element;public,int,get,capture,count,return,0
PathElement -> public int getCaptureCount();1499445979;Return the number of variables captured by the path element.;public int getCaptureCount() {_		return 0__	};return,the,number,of,variables,captured,by,the,path,element;public,int,get,capture,count,return,0
PathElement -> public int getCaptureCount();1520528267;Return the number of variables captured by the path element.;public int getCaptureCount() {_		return 0__	};return,the,number,of,variables,captured,by,the,path,element;public,int,get,capture,count,return,0
PathElement -> public int getCaptureCount();1530174524;Return the number of variables captured by the path element.;public int getCaptureCount() {_		return 0__	};return,the,number,of,variables,captured,by,the,path,element;public,int,get,capture,count,return,0
PathElement -> public int getWildcardCount();1495035625;Return the number of wildcard elements (*, ?) in the path element.;public int getWildcardCount() {_		return 0__	};return,the,number,of,wildcard,elements,in,the,path,element;public,int,get,wildcard,count,return,0
PathElement -> public int getWildcardCount();1497038887;Return the number of wildcard elements (*, ?) in the path element.;public int getWildcardCount() {_		return 0__	};return,the,number,of,wildcard,elements,in,the,path,element;public,int,get,wildcard,count,return,0
PathElement -> public int getWildcardCount();1497275505;Return the number of wildcard elements (*, ?) in the path element.;public int getWildcardCount() {_		return 0__	};return,the,number,of,wildcard,elements,in,the,path,element;public,int,get,wildcard,count,return,0
PathElement -> public int getWildcardCount();1498780456;Return the number of wildcard elements (*, ?) in the path element.;public int getWildcardCount() {_		return 0__	};return,the,number,of,wildcard,elements,in,the,path,element;public,int,get,wildcard,count,return,0
PathElement -> public int getWildcardCount();1498861175;Return the number of wildcard elements (*, ?) in the path element.;public int getWildcardCount() {_		return 0__	};return,the,number,of,wildcard,elements,in,the,path,element;public,int,get,wildcard,count,return,0
PathElement -> public int getWildcardCount();1499445979;Return the number of wildcard elements (*, ?) in the path element.;public int getWildcardCount() {_		return 0__	};return,the,number,of,wildcard,elements,in,the,path,element;public,int,get,wildcard,count,return,0
PathElement -> public int getWildcardCount();1520528267;Return the number of wildcard elements (*, ?) in the path element.;public int getWildcardCount() {_		return 0__	};return,the,number,of,wildcard,elements,in,the,path,element;public,int,get,wildcard,count,return,0
PathElement -> public int getWildcardCount();1530174524;Return the number of wildcard elements (*, ?) in the path element.;public int getWildcardCount() {_		return 0__	};return,the,number,of,wildcard,elements,in,the,path,element;public,int,get,wildcard,count,return,0
