commented;modifiers;parameterAmount;loc;comment;code
false;public;0;14;;@Override public void afterPropertiesSet() {     super.afterPropertiesSet().     Class<?> ifc = getServiceInterface().     Assert.notNull(ifc, "Property 'serviceInterface' is required").     // Build a proxy that also exposes the JAX-WS BindingProvider interface.     ProxyFactory pf = new ProxyFactory().     pf.addInterface(ifc).     pf.addInterface(BindingProvider.class).     pf.addAdvice(this).     this.serviceProxy = pf.getProxy(getBeanClassLoader()). }
false;public;0;5;;@Override @Nullable public Object getObject() {     return this.serviceProxy. }
false;public;0;4;;@Override public Class<?> getObjectType() {     return getServiceInterface(). }
false;public;0;4;;@Override public boolean isSingleton() {     return true. }
