commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * Return the number of supported entity references.  */ ;/**  * Return the number of supported entity references.  */ public int getSupportedReferenceCount() {     return this.entityReferenceToCharacterMap.size(). }
true;public;1;3;/**  * Return true if the given character is mapped to a supported entity reference.  */ ;/**  * Return true if the given character is mapped to a supported entity reference.  */ public boolean isMappedToReference(char character) {     return isMappedToReference(character, WebUtils.DEFAULT_CHARACTER_ENCODING). }
true;public;2;3;/**  * Return true if the given character is mapped to a supported entity reference.  */ ;/**  * Return true if the given character is mapped to a supported entity reference.  */ public boolean isMappedToReference(char character, String encoding) {     return (convertToReference(character, encoding) != null). }
true;public;1;4;/**  * Return the reference mapped to the given character, or {@code null} if none found.  */ ;/**  * Return the reference mapped to the given character, or {@code null} if none found.  */ @Nullable public String convertToReference(char character) {     return convertToReference(character, WebUtils.DEFAULT_CHARACTER_ENCODING). }
true;public;2;25;/**  * Return the reference mapped to the given character, or {@code null} if none found.  * @since 4.1.2  */ ;/**  * Return the reference mapped to the given character, or {@code null} if none found.  * @since 4.1.2  */ @Nullable public String convertToReference(char character, String encoding) {     if (encoding.startsWith("UTF-")) {         switch(character) {             case '<':                 return "&lt.".             case '>':                 return "&gt.".             case '"':                 return "&quot.".             case '&':                 return "&amp.".             case '\'':                 return "&#39.".         }     } else if (character < 1000 || (character >= 8000 && character < 10000)) {         int index = (character < 1000 ? character : character - 7000).         String entityReference = this.characterToEntityReferenceMap[index].         if (entityReference != null) {             return entityReference.         }     }     return null. }
true;public;1;7;/**  * Return the char mapped to the given entityReference or -1.  */ ;/**  * Return the char mapped to the given entityReference or -1.  */ public char convertToCharacter(String entityReference) {     Character referredCharacter = this.entityReferenceToCharacterMap.get(entityReference).     if (referredCharacter != null) {         return referredCharacter.     }     return CHAR_NULL. }
