# id;timestamp;commentText;codeText;commentWords;codeWords
CorsConfiguration -> @Nullable 	public List<String> getExposedHeaders();1495868221;Return the configured response headers to expose, or {@code null} if none._@see #addExposedHeader(String)_@see #setExposedHeaders(List);@Nullable_	public List<String> getExposedHeaders() {_		return this.exposedHeaders__	};return,the,configured,response,headers,to,expose,or,code,null,if,none,see,add,exposed,header,string,see,set,exposed,headers,list;nullable,public,list,string,get,exposed,headers,return,this,exposed,headers
CorsConfiguration -> @Nullable 	public List<String> getExposedHeaders();1496837955;Return the configured response headers to expose, or {@code null} if none._@see #addExposedHeader(String)_@see #setExposedHeaders(List);@Nullable_	public List<String> getExposedHeaders() {_		return this.exposedHeaders__	};return,the,configured,response,headers,to,expose,or,code,null,if,none,see,add,exposed,header,string,see,set,exposed,headers,list;nullable,public,list,string,get,exposed,headers,return,this,exposed,headers
CorsConfiguration -> @Nullable 	public List<String> getExposedHeaders();1498780456;Return the configured response headers to expose, or {@code null} if none._@see #addExposedHeader(String)_@see #setExposedHeaders(List);@Nullable_	public List<String> getExposedHeaders() {_		return this.exposedHeaders__	};return,the,configured,response,headers,to,expose,or,code,null,if,none,see,add,exposed,header,string,see,set,exposed,headers,list;nullable,public,list,string,get,exposed,headers,return,this,exposed,headers
CorsConfiguration -> @Nullable 	public List<String> getExposedHeaders();1500448076;Return the configured response headers to expose, or {@code null} if none._@see #addExposedHeader(String)_@see #setExposedHeaders(List);@Nullable_	public List<String> getExposedHeaders() {_		return this.exposedHeaders__	};return,the,configured,response,headers,to,expose,or,code,null,if,none,see,add,exposed,header,string,see,set,exposed,headers,list;nullable,public,list,string,get,exposed,headers,return,this,exposed,headers
CorsConfiguration -> @Nullable 	public List<String> getExposedHeaders();1511387204;Return the configured response headers to expose, or {@code null} if none._@see #addExposedHeader(String)_@see #setExposedHeaders(List);@Nullable_	public List<String> getExposedHeaders() {_		return this.exposedHeaders__	};return,the,configured,response,headers,to,expose,or,code,null,if,none,see,add,exposed,header,string,see,set,exposed,headers,list;nullable,public,list,string,get,exposed,headers,return,this,exposed,headers
CorsConfiguration -> @Nullable 	public List<String> getExposedHeaders();1511925367;Return the configured response headers to expose, or {@code null} if none._@see #addExposedHeader(String)_@see #setExposedHeaders(List);@Nullable_	public List<String> getExposedHeaders() {_		return this.exposedHeaders__	};return,the,configured,response,headers,to,expose,or,code,null,if,none,see,add,exposed,header,string,see,set,exposed,headers,list;nullable,public,list,string,get,exposed,headers,return,this,exposed,headers
CorsConfiguration -> @Nullable 	public List<String> getExposedHeaders();1513805881;Return the configured response headers to expose, or {@code null} if none._@see #addExposedHeader(String)_@see #setExposedHeaders(List);@Nullable_	public List<String> getExposedHeaders() {_		return this.exposedHeaders__	};return,the,configured,response,headers,to,expose,or,code,null,if,none,see,add,exposed,header,string,see,set,exposed,headers,list;nullable,public,list,string,get,exposed,headers,return,this,exposed,headers
CorsConfiguration -> @Nullable 	public List<String> getExposedHeaders();1522354261;Return the configured response headers to expose, or {@code null} if none._@see #addExposedHeader(String)_@see #setExposedHeaders(List);@Nullable_	public List<String> getExposedHeaders() {_		return this.exposedHeaders__	};return,the,configured,response,headers,to,expose,or,code,null,if,none,see,add,exposed,header,string,see,set,exposed,headers,list;nullable,public,list,string,get,exposed,headers,return,this,exposed,headers
CorsConfiguration -> public void setAllowedOrigins(List<String> allowedOrigins);1427983931;Set allowed origins that will define Access-Control-Allow-Origin response_header values (mandatory). For example "http://domain1.com", "http://domain2.com" ..._"*" means that all domains are allowed.;public void setAllowedOrigins(List<String> allowedOrigins) {_		this.allowedOrigins = allowedOrigins__	};set,allowed,origins,that,will,define,access,control,allow,origin,response,header,values,mandatory,for,example,http,domain1,com,http,domain2,com,means,that,all,domains,are,allowed;public,void,set,allowed,origins,list,string,allowed,origins,this,allowed,origins,allowed,origins
CorsConfiguration -> public void setAllowedOrigins(List<String> allowedOrigins);1428073011;Set allowed allowedOrigins that will define Access-Control-Allow-Origin response_header values (mandatory). For example "http://domain1.com", "http://domain2.com" ..._"*" means that all domains are allowed.;public void setAllowedOrigins(List<String> allowedOrigins) {_		this.allowedOrigins = allowedOrigins__	};set,allowed,allowed,origins,that,will,define,access,control,allow,origin,response,header,values,mandatory,for,example,http,domain1,com,http,domain2,com,means,that,all,domains,are,allowed;public,void,set,allowed,origins,list,string,allowed,origins,this,allowed,origins,allowed,origins
CorsConfiguration -> public void setAllowedOrigins(List<String> allowedOrigins);1434809538;Set the origins to allow, e.g. {@code "http://domain1.com"}._<p>The special value {@code "*"} allows all domains._<p>By default this is not set.;public void setAllowedOrigins(List<String> allowedOrigins) {_		this.allowedOrigins = (allowedOrigins == null ? null : new ArrayList<String>(allowedOrigins))__	};set,the,origins,to,allow,e,g,code,http,domain1,com,p,the,special,value,code,allows,all,domains,p,by,default,this,is,not,set;public,void,set,allowed,origins,list,string,allowed,origins,this,allowed,origins,allowed,origins,null,null,new,array,list,string,allowed,origins
CorsConfiguration -> public void setAllowedOrigins(List<String> allowedOrigins);1436539370;Set the origins to allow, e.g. {@code "http://domain1.com"}._<p>The special value {@code "*"} allows all domains._<p>By default this is not set.;public void setAllowedOrigins(List<String> allowedOrigins) {_		this.allowedOrigins = (allowedOrigins == null ? null : new ArrayList<String>(allowedOrigins))__	};set,the,origins,to,allow,e,g,code,http,domain1,com,p,the,special,value,code,allows,all,domains,p,by,default,this,is,not,set;public,void,set,allowed,origins,list,string,allowed,origins,this,allowed,origins,allowed,origins,null,null,new,array,list,string,allowed,origins
CorsConfiguration -> public void setAllowedOrigins(List<String> allowedOrigins);1438251419;Set the origins to allow, e.g. {@code "http://domain1.com"}._<p>The special value {@code "*"} allows all domains._<p>By default this is not set.;public void setAllowedOrigins(List<String> allowedOrigins) {_		this.allowedOrigins = (allowedOrigins != null ? new ArrayList<String>(allowedOrigins) : null)__	};set,the,origins,to,allow,e,g,code,http,domain1,com,p,the,special,value,code,allows,all,domains,p,by,default,this,is,not,set;public,void,set,allowed,origins,list,string,allowed,origins,this,allowed,origins,allowed,origins,null,new,array,list,string,allowed,origins,null
CorsConfiguration -> public void setAllowedOrigins(List<String> allowedOrigins);1447321232;Set the origins to allow, e.g. {@code "http://domain1.com"}._<p>The special value {@code "*"} allows all domains._<p>By default this is not set.;public void setAllowedOrigins(List<String> allowedOrigins) {_		this.allowedOrigins = (allowedOrigins != null ? new ArrayList<String>(allowedOrigins) : null)__	};set,the,origins,to,allow,e,g,code,http,domain1,com,p,the,special,value,code,allows,all,domains,p,by,default,this,is,not,set;public,void,set,allowed,origins,list,string,allowed,origins,this,allowed,origins,allowed,origins,null,new,array,list,string,allowed,origins,null
CorsConfiguration -> public void setAllowedOrigins(List<String> allowedOrigins);1449660404;Set the origins to allow, e.g. {@code "http://domain1.com"}._<p>The special value {@code "*"} allows all domains._<p>By default this is not set.;public void setAllowedOrigins(List<String> allowedOrigins) {_		this.allowedOrigins = (allowedOrigins != null ? new ArrayList<String>(allowedOrigins) : null)__	};set,the,origins,to,allow,e,g,code,http,domain1,com,p,the,special,value,code,allows,all,domains,p,by,default,this,is,not,set;public,void,set,allowed,origins,list,string,allowed,origins,this,allowed,origins,allowed,origins,null,new,array,list,string,allowed,origins,null
CorsConfiguration -> public void setAllowedOrigins(List<String> allowedOrigins);1453684721;Set the origins to allow, e.g. {@code "http://domain1.com"}._<p>The special value {@code "*"} allows all domains._<p>By default this is not set.;public void setAllowedOrigins(List<String> allowedOrigins) {_		this.allowedOrigins = (allowedOrigins != null ? new ArrayList<String>(allowedOrigins) : null)__	};set,the,origins,to,allow,e,g,code,http,domain1,com,p,the,special,value,code,allows,all,domains,p,by,default,this,is,not,set;public,void,set,allowed,origins,list,string,allowed,origins,this,allowed,origins,allowed,origins,null,new,array,list,string,allowed,origins,null
CorsConfiguration -> public void setAllowedOrigins(List<String> allowedOrigins);1467730834;Set the origins to allow, e.g. {@code "http://domain1.com"}._<p>The special value {@code "*"} allows all domains._<p>By default this is not set.;public void setAllowedOrigins(List<String> allowedOrigins) {_		this.allowedOrigins = (allowedOrigins != null ? new ArrayList<>(allowedOrigins) : null)__	};set,the,origins,to,allow,e,g,code,http,domain1,com,p,the,special,value,code,allows,all,domains,p,by,default,this,is,not,set;public,void,set,allowed,origins,list,string,allowed,origins,this,allowed,origins,allowed,origins,null,new,array,list,allowed,origins,null
CorsConfiguration -> public void setAllowedOrigins(List<String> allowedOrigins);1472031618;Set the origins to allow, e.g. {@code "http://domain1.com"}._<p>The special value {@code "*"} allows all domains._<p>By default this is not set.;public void setAllowedOrigins(List<String> allowedOrigins) {_		this.allowedOrigins = (allowedOrigins != null ? new ArrayList<>(allowedOrigins) : null)__	};set,the,origins,to,allow,e,g,code,http,domain1,com,p,the,special,value,code,allows,all,domains,p,by,default,this,is,not,set;public,void,set,allowed,origins,list,string,allowed,origins,this,allowed,origins,allowed,origins,null,new,array,list,allowed,origins,null
CorsConfiguration -> public void setAllowedOrigins(List<String> allowedOrigins);1476175114;Set the origins to allow, e.g. {@code "http://domain1.com"}._<p>The special value {@code "*"} allows all domains._<p>By default this is not set.;public void setAllowedOrigins(List<String> allowedOrigins) {_		this.allowedOrigins = (allowedOrigins != null ? new ArrayList<>(allowedOrigins) : null)__	};set,the,origins,to,allow,e,g,code,http,domain1,com,p,the,special,value,code,allows,all,domains,p,by,default,this,is,not,set;public,void,set,allowed,origins,list,string,allowed,origins,this,allowed,origins,allowed,origins,null,new,array,list,allowed,origins,null
CorsConfiguration -> public void setAllowedOrigins(List<String> allowedOrigins);1476909116;Set the origins to allow, e.g. {@code "http://domain1.com"}._<p>The special value {@code "*"} allows all domains._<p>By default this is not set.;public void setAllowedOrigins(List<String> allowedOrigins) {_		this.allowedOrigins = (allowedOrigins != null ? new ArrayList<>(allowedOrigins) : null)__	};set,the,origins,to,allow,e,g,code,http,domain1,com,p,the,special,value,code,allows,all,domains,p,by,default,this,is,not,set;public,void,set,allowed,origins,list,string,allowed,origins,this,allowed,origins,allowed,origins,null,new,array,list,allowed,origins,null
CorsConfiguration -> public void setAllowedOrigins(List<String> allowedOrigins);1487713300;Set the origins to allow, e.g. {@code "http://domain1.com"}._<p>The special value {@code "*"} allows all domains._<p>By default this is not set.;public void setAllowedOrigins(List<String> allowedOrigins) {_		this.allowedOrigins = (allowedOrigins != null ? new ArrayList<>(allowedOrigins) : null)__	};set,the,origins,to,allow,e,g,code,http,domain1,com,p,the,special,value,code,allows,all,domains,p,by,default,this,is,not,set;public,void,set,allowed,origins,list,string,allowed,origins,this,allowed,origins,allowed,origins,null,new,array,list,allowed,origins,null
CorsConfiguration -> public void setAllowedOrigins(List<String> allowedOrigins);1495868221;Set the origins to allow, e.g. {@code "http://domain1.com"}._<p>The special value {@code "*"} allows all domains._<p>By default this is not set.;public void setAllowedOrigins(List<String> allowedOrigins) {_		this.allowedOrigins = (allowedOrigins != null ? new ArrayList<>(allowedOrigins) : null)__	};set,the,origins,to,allow,e,g,code,http,domain1,com,p,the,special,value,code,allows,all,domains,p,by,default,this,is,not,set;public,void,set,allowed,origins,list,string,allowed,origins,this,allowed,origins,allowed,origins,null,new,array,list,allowed,origins,null
CorsConfiguration -> public CorsConfiguration applyPermitDefaultValues();1476909116;By default a newly created {@code CorsConfiguration} does not permit any_cross-origin requests and must be configured explicitly to indicate what_should be allowed.__<p>Use this method to flip the initialization model to start with open_defaults that permit all cross-origin requests for GET, HEAD, and POST_requests. Note however that this method will not override any existing_values already set.__<p>The following defaults are applied if not already set:_<ul>_<li>Allow all origins, i.e. {@code "*"}.</li>_<li>Allow "simple" methods {@code GET}, {@code HEAD} and {@code POST}.</li>_<li>Allow all headers.</li>_<li>Allow credentials.</li>_<li>Set max age to 1800 seconds (30 minutes).</li>_</ul>;public CorsConfiguration applyPermitDefaultValues() {_		if (this.allowedOrigins == null) {_			this.addAllowedOrigin(ALL)__		}_		if (this.allowedMethods == null) {_			this.setAllowedMethods(Arrays.asList(_					HttpMethod.GET.name(), HttpMethod.HEAD.name(), HttpMethod.POST.name()))__		}_		if (this.allowedHeaders == null) {_			this.addAllowedHeader(ALL)__		}_		if (this.allowCredentials == null) {_			this.setAllowCredentials(true)__		}_		if (this.maxAge == null) {_			this.setMaxAge(1800L)__		}_		return this__	};by,default,a,newly,created,code,cors,configuration,does,not,permit,any,cross,origin,requests,and,must,be,configured,explicitly,to,indicate,what,should,be,allowed,p,use,this,method,to,flip,the,initialization,model,to,start,with,open,defaults,that,permit,all,cross,origin,requests,for,get,head,and,post,requests,note,however,that,this,method,will,not,override,any,existing,values,already,set,p,the,following,defaults,are,applied,if,not,already,set,ul,li,allow,all,origins,i,e,code,li,li,allow,simple,methods,code,get,code,head,and,code,post,li,li,allow,all,headers,li,li,allow,credentials,li,li,set,max,age,to,1800,seconds,30,minutes,li,ul;public,cors,configuration,apply,permit,default,values,if,this,allowed,origins,null,this,add,allowed,origin,all,if,this,allowed,methods,null,this,set,allowed,methods,arrays,as,list,http,method,get,name,http,method,head,name,http,method,post,name,if,this,allowed,headers,null,this,add,allowed,header,all,if,this,allow,credentials,null,this,set,allow,credentials,true,if,this,max,age,null,this,set,max,age,1800l,return,this
CorsConfiguration -> public CorsConfiguration applyPermitDefaultValues();1487713300;By default a newly created {@code CorsConfiguration} does not permit any_cross-origin requests and must be configured explicitly to indicate what_should be allowed.__<p>Use this method to flip the initialization model to start with open_defaults that permit all cross-origin requests for GET, HEAD, and POST_requests. Note however that this method will not override any existing_values already set.__<p>The following defaults are applied if not already set:_<ul>_<li>Allow all origins, i.e. {@code "*"}.</li>_<li>Allow "simple" methods {@code GET}, {@code HEAD} and {@code POST}.</li>_<li>Allow all headers.</li>_<li>Allow credentials.</li>_<li>Set max age to 1800 seconds (30 minutes).</li>_</ul>;public CorsConfiguration applyPermitDefaultValues() {_		if (this.allowedOrigins == null) {_			this.addAllowedOrigin(ALL)__		}_		if (this.allowedMethods == null) {_			this.setAllowedMethods(Arrays.asList(_					HttpMethod.GET.name(), HttpMethod.HEAD.name(), HttpMethod.POST.name()))__		}_		if (this.allowedHeaders == null) {_			this.addAllowedHeader(ALL)__		}_		if (this.allowCredentials == null) {_			this.setAllowCredentials(true)__		}_		if (this.maxAge == null) {_			this.setMaxAge(1800L)__		}_		return this__	};by,default,a,newly,created,code,cors,configuration,does,not,permit,any,cross,origin,requests,and,must,be,configured,explicitly,to,indicate,what,should,be,allowed,p,use,this,method,to,flip,the,initialization,model,to,start,with,open,defaults,that,permit,all,cross,origin,requests,for,get,head,and,post,requests,note,however,that,this,method,will,not,override,any,existing,values,already,set,p,the,following,defaults,are,applied,if,not,already,set,ul,li,allow,all,origins,i,e,code,li,li,allow,simple,methods,code,get,code,head,and,code,post,li,li,allow,all,headers,li,li,allow,credentials,li,li,set,max,age,to,1800,seconds,30,minutes,li,ul;public,cors,configuration,apply,permit,default,values,if,this,allowed,origins,null,this,add,allowed,origin,all,if,this,allowed,methods,null,this,set,allowed,methods,arrays,as,list,http,method,get,name,http,method,head,name,http,method,post,name,if,this,allowed,headers,null,this,add,allowed,header,all,if,this,allow,credentials,null,this,set,allow,credentials,true,if,this,max,age,null,this,set,max,age,1800l,return,this
CorsConfiguration -> public CorsConfiguration applyPermitDefaultValues();1495868221;By default a newly created {@code CorsConfiguration} does not permit any_cross-origin requests and must be configured explicitly to indicate what_should be allowed.__<p>Use this method to flip the initialization model to start with open_defaults that permit all cross-origin requests for GET, HEAD, and POST_requests. Note however that this method will not override any existing_values already set.__<p>The following defaults are applied if not already set:_<ul>_<li>Allow all origins, i.e. {@code "*"}.</li>_<li>Allow "simple" methods {@code GET}, {@code HEAD} and {@code POST}.</li>_<li>Allow all headers.</li>_<li>Allow credentials.</li>_<li>Set max age to 1800 seconds (30 minutes).</li>_</ul>;public CorsConfiguration applyPermitDefaultValues() {_		if (this.allowedOrigins == null) {_			this.addAllowedOrigin(ALL)__		}_		if (this.allowedMethods == null) {_			this.setAllowedMethods(Arrays.asList(_					HttpMethod.GET.name(), HttpMethod.HEAD.name(), HttpMethod.POST.name()))__		}_		if (this.allowedHeaders == null) {_			this.addAllowedHeader(ALL)__		}_		if (this.allowCredentials == null) {_			this.setAllowCredentials(true)__		}_		if (this.maxAge == null) {_			this.setMaxAge(1800L)__		}_		return this__	};by,default,a,newly,created,code,cors,configuration,does,not,permit,any,cross,origin,requests,and,must,be,configured,explicitly,to,indicate,what,should,be,allowed,p,use,this,method,to,flip,the,initialization,model,to,start,with,open,defaults,that,permit,all,cross,origin,requests,for,get,head,and,post,requests,note,however,that,this,method,will,not,override,any,existing,values,already,set,p,the,following,defaults,are,applied,if,not,already,set,ul,li,allow,all,origins,i,e,code,li,li,allow,simple,methods,code,get,code,head,and,code,post,li,li,allow,all,headers,li,li,allow,credentials,li,li,set,max,age,to,1800,seconds,30,minutes,li,ul;public,cors,configuration,apply,permit,default,values,if,this,allowed,origins,null,this,add,allowed,origin,all,if,this,allowed,methods,null,this,set,allowed,methods,arrays,as,list,http,method,get,name,http,method,head,name,http,method,post,name,if,this,allowed,headers,null,this,add,allowed,header,all,if,this,allow,credentials,null,this,set,allow,credentials,true,if,this,max,age,null,this,set,max,age,1800l,return,this
CorsConfiguration -> public CorsConfiguration applyPermitDefaultValues();1496837955;By default a newly created {@code CorsConfiguration} does not permit any_cross-origin requests and must be configured explicitly to indicate what_should be allowed.__<p>Use this method to flip the initialization model to start with open_defaults that permit all cross-origin requests for GET, HEAD, and POST_requests. Note however that this method will not override any existing_values already set.__<p>The following defaults are applied if not already set:_<ul>_<li>Allow all origins, i.e. {@code "*"}.</li>_<li>Allow "simple" methods {@code GET}, {@code HEAD} and {@code POST}.</li>_<li>Allow all headers.</li>_<li>Allow credentials.</li>_<li>Set max age to 1800 seconds (30 minutes).</li>_</ul>;public CorsConfiguration applyPermitDefaultValues() {_		if (this.allowedOrigins == null) {_			this.addAllowedOrigin(ALL)__		}_		if (this.allowedMethods == null) {_			this.setAllowedMethods(Arrays.asList(_					HttpMethod.GET.name(), HttpMethod.HEAD.name(), HttpMethod.POST.name()))__		}_		if (this.allowedHeaders == null) {_			this.addAllowedHeader(ALL)__		}_		if (this.allowCredentials == null) {_			this.setAllowCredentials(true)__		}_		if (this.maxAge == null) {_			this.setMaxAge(1800L)__		}_		return this__	};by,default,a,newly,created,code,cors,configuration,does,not,permit,any,cross,origin,requests,and,must,be,configured,explicitly,to,indicate,what,should,be,allowed,p,use,this,method,to,flip,the,initialization,model,to,start,with,open,defaults,that,permit,all,cross,origin,requests,for,get,head,and,post,requests,note,however,that,this,method,will,not,override,any,existing,values,already,set,p,the,following,defaults,are,applied,if,not,already,set,ul,li,allow,all,origins,i,e,code,li,li,allow,simple,methods,code,get,code,head,and,code,post,li,li,allow,all,headers,li,li,allow,credentials,li,li,set,max,age,to,1800,seconds,30,minutes,li,ul;public,cors,configuration,apply,permit,default,values,if,this,allowed,origins,null,this,add,allowed,origin,all,if,this,allowed,methods,null,this,set,allowed,methods,arrays,as,list,http,method,get,name,http,method,head,name,http,method,post,name,if,this,allowed,headers,null,this,add,allowed,header,all,if,this,allow,credentials,null,this,set,allow,credentials,true,if,this,max,age,null,this,set,max,age,1800l,return,this
CorsConfiguration -> public CorsConfiguration applyPermitDefaultValues();1498780456;By default a newly created {@code CorsConfiguration} does not permit any_cross-origin requests and must be configured explicitly to indicate what_should be allowed.__<p>Use this method to flip the initialization model to start with open_defaults that permit all cross-origin requests for GET, HEAD, and POST_requests. Note however that this method will not override any existing_values already set.__<p>The following defaults are applied if not already set:_<ul>_<li>Allow all origins, i.e. {@code "*"}.</li>_<li>Allow "simple" methods {@code GET}, {@code HEAD} and {@code POST}.</li>_<li>Allow all headers.</li>_<li>Allow credentials.</li>_<li>Set max age to 1800 seconds (30 minutes).</li>_</ul>;public CorsConfiguration applyPermitDefaultValues() {_		if (this.allowedOrigins == null) {_			this.addAllowedOrigin(ALL)__		}_		if (this.allowedMethods == null) {_			this.setAllowedMethods(Arrays.asList(_					HttpMethod.GET.name(), HttpMethod.HEAD.name(), HttpMethod.POST.name()))__		}_		if (this.allowedHeaders == null) {_			this.addAllowedHeader(ALL)__		}_		if (this.allowCredentials == null) {_			this.setAllowCredentials(true)__		}_		if (this.maxAge == null) {_			this.setMaxAge(1800L)__		}_		return this__	};by,default,a,newly,created,code,cors,configuration,does,not,permit,any,cross,origin,requests,and,must,be,configured,explicitly,to,indicate,what,should,be,allowed,p,use,this,method,to,flip,the,initialization,model,to,start,with,open,defaults,that,permit,all,cross,origin,requests,for,get,head,and,post,requests,note,however,that,this,method,will,not,override,any,existing,values,already,set,p,the,following,defaults,are,applied,if,not,already,set,ul,li,allow,all,origins,i,e,code,li,li,allow,simple,methods,code,get,code,head,and,code,post,li,li,allow,all,headers,li,li,allow,credentials,li,li,set,max,age,to,1800,seconds,30,minutes,li,ul;public,cors,configuration,apply,permit,default,values,if,this,allowed,origins,null,this,add,allowed,origin,all,if,this,allowed,methods,null,this,set,allowed,methods,arrays,as,list,http,method,get,name,http,method,head,name,http,method,post,name,if,this,allowed,headers,null,this,add,allowed,header,all,if,this,allow,credentials,null,this,set,allow,credentials,true,if,this,max,age,null,this,set,max,age,1800l,return,this
CorsConfiguration -> public CorsConfiguration applyPermitDefaultValues();1500448076;By default a newly created {@code CorsConfiguration} does not permit any_cross-origin requests and must be configured explicitly to indicate what_should be allowed.__<p>Use this method to flip the initialization model to start with open_defaults that permit all cross-origin requests for GET, HEAD, and POST_requests. Note however that this method will not override any existing_values already set.__<p>The following defaults are applied if not already set:_<ul>_<li>Allow all origins, i.e. {@code "*"}.</li>_<li>Allow "simple" methods {@code GET}, {@code HEAD} and {@code POST}.</li>_<li>Allow all headers.</li>_<li>Allow credentials.</li>_<li>Set max age to 1800 seconds (30 minutes).</li>_</ul>;public CorsConfiguration applyPermitDefaultValues() {_		if (this.allowedOrigins == null) {_			this.addAllowedOrigin(ALL)__		}_		if (this.allowedMethods == null) {_			this.setAllowedMethods(Arrays.asList(_					HttpMethod.GET.name(), HttpMethod.HEAD.name(), HttpMethod.POST.name()))__		}_		if (this.allowedHeaders == null) {_			this.addAllowedHeader(ALL)__		}_		if (this.allowCredentials == null) {_			this.setAllowCredentials(true)__		}_		if (this.maxAge == null) {_			this.setMaxAge(1800L)__		}_		return this__	};by,default,a,newly,created,code,cors,configuration,does,not,permit,any,cross,origin,requests,and,must,be,configured,explicitly,to,indicate,what,should,be,allowed,p,use,this,method,to,flip,the,initialization,model,to,start,with,open,defaults,that,permit,all,cross,origin,requests,for,get,head,and,post,requests,note,however,that,this,method,will,not,override,any,existing,values,already,set,p,the,following,defaults,are,applied,if,not,already,set,ul,li,allow,all,origins,i,e,code,li,li,allow,simple,methods,code,get,code,head,and,code,post,li,li,allow,all,headers,li,li,allow,credentials,li,li,set,max,age,to,1800,seconds,30,minutes,li,ul;public,cors,configuration,apply,permit,default,values,if,this,allowed,origins,null,this,add,allowed,origin,all,if,this,allowed,methods,null,this,set,allowed,methods,arrays,as,list,http,method,get,name,http,method,head,name,http,method,post,name,if,this,allowed,headers,null,this,add,allowed,header,all,if,this,allow,credentials,null,this,set,allow,credentials,true,if,this,max,age,null,this,set,max,age,1800l,return,this
CorsConfiguration -> public CorsConfiguration applyPermitDefaultValues();1511387204;By default a newly created {@code CorsConfiguration} does not permit any_cross-origin requests and must be configured explicitly to indicate what_should be allowed.__<p>Use this method to flip the initialization model to start with open_defaults that permit all cross-origin requests for GET, HEAD, and POST_requests. Note however that this method will not override any existing_values already set.__<p>The following defaults are applied if not already set:_<ul>_<li>Allow all origins, i.e. {@code "*"}.</li>_<li>Allow "simple" methods {@code GET}, {@code HEAD} and {@code POST}.</li>_<li>Allow all headers.</li>_<li>Set max age to 1800 seconds (30 minutes).</li>_</ul>;public CorsConfiguration applyPermitDefaultValues() {_		if (this.allowedOrigins == null) {_			this.addAllowedOrigin(ALL)__		}_		if (this.allowedMethods == null) {_			this.setAllowedMethods(Arrays.asList(_					HttpMethod.GET.name(), HttpMethod.HEAD.name(), HttpMethod.POST.name()))__		}_		if (this.allowedHeaders == null) {_			this.addAllowedHeader(ALL)__		}_		if (this.maxAge == null) {_			this.setMaxAge(1800L)__		}_		return this__	};by,default,a,newly,created,code,cors,configuration,does,not,permit,any,cross,origin,requests,and,must,be,configured,explicitly,to,indicate,what,should,be,allowed,p,use,this,method,to,flip,the,initialization,model,to,start,with,open,defaults,that,permit,all,cross,origin,requests,for,get,head,and,post,requests,note,however,that,this,method,will,not,override,any,existing,values,already,set,p,the,following,defaults,are,applied,if,not,already,set,ul,li,allow,all,origins,i,e,code,li,li,allow,simple,methods,code,get,code,head,and,code,post,li,li,allow,all,headers,li,li,set,max,age,to,1800,seconds,30,minutes,li,ul;public,cors,configuration,apply,permit,default,values,if,this,allowed,origins,null,this,add,allowed,origin,all,if,this,allowed,methods,null,this,set,allowed,methods,arrays,as,list,http,method,get,name,http,method,head,name,http,method,post,name,if,this,allowed,headers,null,this,add,allowed,header,all,if,this,max,age,null,this,set,max,age,1800l,return,this
CorsConfiguration -> public CorsConfiguration applyPermitDefaultValues();1511925367;By default a newly created {@code CorsConfiguration} does not permit any_cross-origin requests and must be configured explicitly to indicate what_should be allowed.__<p>Use this method to flip the initialization model to start with open_defaults that permit all cross-origin requests for GET, HEAD, and POST_requests. Note however that this method will not override any existing_values already set.__<p>The following defaults are applied if not already set:_<ul>_<li>Allow all origins.</li>_<li>Allow "simple" methods {@code GET}, {@code HEAD} and {@code POST}.</li>_<li>Allow all headers.</li>_<li>Set max age to 1800 seconds (30 minutes).</li>_</ul>;public CorsConfiguration applyPermitDefaultValues() {_		if (this.allowedOrigins == null) {_			this.addAllowedOrigin(ALL)__		}_		if (this.allowedMethods == null) {_			this.setAllowedMethods(Arrays.asList(_					HttpMethod.GET.name(), HttpMethod.HEAD.name(), HttpMethod.POST.name()))__		}_		if (this.allowedHeaders == null) {_			this.addAllowedHeader(ALL)__		}_		if (this.maxAge == null) {_			this.setMaxAge(1800L)__		}_		return this__	};by,default,a,newly,created,code,cors,configuration,does,not,permit,any,cross,origin,requests,and,must,be,configured,explicitly,to,indicate,what,should,be,allowed,p,use,this,method,to,flip,the,initialization,model,to,start,with,open,defaults,that,permit,all,cross,origin,requests,for,get,head,and,post,requests,note,however,that,this,method,will,not,override,any,existing,values,already,set,p,the,following,defaults,are,applied,if,not,already,set,ul,li,allow,all,origins,li,li,allow,simple,methods,code,get,code,head,and,code,post,li,li,allow,all,headers,li,li,set,max,age,to,1800,seconds,30,minutes,li,ul;public,cors,configuration,apply,permit,default,values,if,this,allowed,origins,null,this,add,allowed,origin,all,if,this,allowed,methods,null,this,set,allowed,methods,arrays,as,list,http,method,get,name,http,method,head,name,http,method,post,name,if,this,allowed,headers,null,this,add,allowed,header,all,if,this,max,age,null,this,set,max,age,1800l,return,this
CorsConfiguration -> public CorsConfiguration applyPermitDefaultValues();1513805881;By default a newly created {@code CorsConfiguration} does not permit any_cross-origin requests and must be configured explicitly to indicate what_should be allowed.__<p>Use this method to flip the initialization model to start with open_defaults that permit all cross-origin requests for GET, HEAD, and POST_requests. Note however that this method will not override any existing_values already set.__<p>The following defaults are applied if not already set:_<ul>_<li>Allow all origins.</li>_<li>Allow "simple" methods {@code GET}, {@code HEAD} and {@code POST}.</li>_<li>Allow all headers.</li>_<li>Set max age to 1800 seconds (30 minutes).</li>_</ul>;public CorsConfiguration applyPermitDefaultValues() {_		if (this.allowedOrigins == null) {_			this.allowedOrigins = DEFAULT_PERMIT_ALL__		}_		if (this.allowedMethods == null) {_			this.allowedMethods = DEFAULT_PERMIT_METHODS__			this.resolvedMethods = DEFAULT_PERMIT_METHODS_					.stream().map(HttpMethod::resolve).collect(Collectors.toList())__		}_		if (this.allowedHeaders == null) {_			this.allowedHeaders = DEFAULT_PERMIT_ALL__		}_		if (this.maxAge == null) {_			this.maxAge = 1800L__		}_		return this__	};by,default,a,newly,created,code,cors,configuration,does,not,permit,any,cross,origin,requests,and,must,be,configured,explicitly,to,indicate,what,should,be,allowed,p,use,this,method,to,flip,the,initialization,model,to,start,with,open,defaults,that,permit,all,cross,origin,requests,for,get,head,and,post,requests,note,however,that,this,method,will,not,override,any,existing,values,already,set,p,the,following,defaults,are,applied,if,not,already,set,ul,li,allow,all,origins,li,li,allow,simple,methods,code,get,code,head,and,code,post,li,li,allow,all,headers,li,li,set,max,age,to,1800,seconds,30,minutes,li,ul;public,cors,configuration,apply,permit,default,values,if,this,allowed,origins,null,this,allowed,origins,if,this,allowed,methods,null,this,allowed,methods,this,resolved,methods,stream,map,http,method,resolve,collect,collectors,to,list,if,this,allowed,headers,null,this,allowed,headers,if,this,max,age,null,this,max,age,1800l,return,this
CorsConfiguration -> public CorsConfiguration applyPermitDefaultValues();1522354261;By default a newly created {@code CorsConfiguration} does not permit any_cross-origin requests and must be configured explicitly to indicate what_should be allowed.__<p>Use this method to flip the initialization model to start with open_defaults that permit all cross-origin requests for GET, HEAD, and POST_requests. Note however that this method will not override any existing_values already set.__<p>The following defaults are applied if not already set:_<ul>_<li>Allow all origins.</li>_<li>Allow "simple" methods {@code GET}, {@code HEAD} and {@code POST}.</li>_<li>Allow all headers.</li>_<li>Set max age to 1800 seconds (30 minutes).</li>_</ul>;public CorsConfiguration applyPermitDefaultValues() {_		if (this.allowedOrigins == null) {_			this.allowedOrigins = DEFAULT_PERMIT_ALL__		}_		if (this.allowedMethods == null) {_			this.allowedMethods = DEFAULT_PERMIT_METHODS__			this.resolvedMethods = DEFAULT_PERMIT_METHODS_					.stream().map(HttpMethod::resolve).collect(Collectors.toList())__		}_		if (this.allowedHeaders == null) {_			this.allowedHeaders = DEFAULT_PERMIT_ALL__		}_		if (this.maxAge == null) {_			this.maxAge = 1800L__		}_		return this__	};by,default,a,newly,created,code,cors,configuration,does,not,permit,any,cross,origin,requests,and,must,be,configured,explicitly,to,indicate,what,should,be,allowed,p,use,this,method,to,flip,the,initialization,model,to,start,with,open,defaults,that,permit,all,cross,origin,requests,for,get,head,and,post,requests,note,however,that,this,method,will,not,override,any,existing,values,already,set,p,the,following,defaults,are,applied,if,not,already,set,ul,li,allow,all,origins,li,li,allow,simple,methods,code,get,code,head,and,code,post,li,li,allow,all,headers,li,li,set,max,age,to,1800,seconds,30,minutes,li,ul;public,cors,configuration,apply,permit,default,values,if,this,allowed,origins,null,this,allowed,origins,if,this,allowed,methods,null,this,allowed,methods,this,resolved,methods,stream,map,http,method,resolve,collect,collectors,to,list,if,this,allowed,headers,null,this,allowed,headers,if,this,max,age,null,this,max,age,1800l,return,this
CorsConfiguration -> public List<String> getAllowedMethods();1427983931;@see #setAllowedMethods(java.util.List);public List<String> getAllowedMethods() {_		return this.allowedMethods == null ? null : Collections.unmodifiableList(this.allowedMethods)__	};see,set,allowed,methods,java,util,list;public,list,string,get,allowed,methods,return,this,allowed,methods,null,null,collections,unmodifiable,list,this,allowed,methods
CorsConfiguration -> public List<String> getAllowedMethods();1428073011;@see #setAllowedMethods(java.util.List);public List<String> getAllowedMethods() {_		return this.allowedMethods == null ? null : Collections.unmodifiableList(this.allowedMethods)__	};see,set,allowed,methods,java,util,list;public,list,string,get,allowed,methods,return,this,allowed,methods,null,null,collections,unmodifiable,list,this,allowed,methods
CorsConfiguration -> public List<String> getAllowedMethods();1430811101;Return the allowed HTTP methods, possibly {@code null} in which case only_HTTP GET is allowed.;public List<String> getAllowedMethods() {_		return this.allowedMethods__	};return,the,allowed,http,methods,possibly,code,null,in,which,case,only,http,get,is,allowed;public,list,string,get,allowed,methods,return,this,allowed,methods
CorsConfiguration -> public List<String> getAllowedMethods();1431730371;Return the allowed HTTP methods, possibly {@code null} in which case only_HTTP GET is allowed.;public List<String> getAllowedMethods() {_		return this.allowedMethods__	};return,the,allowed,http,methods,possibly,code,null,in,which,case,only,http,get,is,allowed;public,list,string,get,allowed,methods,return,this,allowed,methods
CorsConfiguration -> public List<String> getAllowedMethods();1432857824;Return the allowed HTTP methods, possibly {@code null} in which case only_HTTP GET is allowed.;public List<String> getAllowedMethods() {_		return this.allowedMethods__	};return,the,allowed,http,methods,possibly,code,null,in,which,case,only,http,get,is,allowed;public,list,string,get,allowed,methods,return,this,allowed,methods
CorsConfiguration -> public List<String> getAllowedMethods();1433088837;Return the allowed HTTP methods, possibly {@code null} in which case only_HTTP GET is allowed.;public List<String> getAllowedMethods() {_		return this.allowedMethods__	};return,the,allowed,http,methods,possibly,code,null,in,which,case,only,http,get,is,allowed;public,list,string,get,allowed,methods,return,this,allowed,methods
CorsConfiguration -> public List<String> getAllowedMethods();1434809538;Return the allowed HTTP methods, possibly {@code null} in which case_only {@code "GET"} is allowed._@see #addAllowedMethod(HttpMethod)_@see #addAllowedMethod(String)_@see #setAllowedMethods(List);public List<String> getAllowedMethods() {_		return this.allowedMethods__	};return,the,allowed,http,methods,possibly,code,null,in,which,case,only,code,get,is,allowed,see,add,allowed,method,http,method,see,add,allowed,method,string,see,set,allowed,methods,list;public,list,string,get,allowed,methods,return,this,allowed,methods
CorsConfiguration -> public List<String> getAllowedMethods();1436539370;Return the allowed HTTP methods, possibly {@code null} in which case_only {@code "GET"} is allowed._@see #addAllowedMethod(HttpMethod)_@see #addAllowedMethod(String)_@see #setAllowedMethods(List);public List<String> getAllowedMethods() {_		return this.allowedMethods__	};return,the,allowed,http,methods,possibly,code,null,in,which,case,only,code,get,is,allowed,see,add,allowed,method,http,method,see,add,allowed,method,string,see,set,allowed,methods,list;public,list,string,get,allowed,methods,return,this,allowed,methods
CorsConfiguration -> public List<String> getAllowedMethods();1438251419;Return the allowed HTTP methods, possibly {@code null} in which case_only {@code "GET"} is allowed._@see #addAllowedMethod(HttpMethod)_@see #addAllowedMethod(String)_@see #setAllowedMethods(List);public List<String> getAllowedMethods() {_		return this.allowedMethods__	};return,the,allowed,http,methods,possibly,code,null,in,which,case,only,code,get,is,allowed,see,add,allowed,method,http,method,see,add,allowed,method,string,see,set,allowed,methods,list;public,list,string,get,allowed,methods,return,this,allowed,methods
CorsConfiguration -> public List<String> getAllowedMethods();1447321232;Return the allowed HTTP methods, possibly {@code null} in which case_only {@code "GET"} is allowed._@see #addAllowedMethod(HttpMethod)_@see #addAllowedMethod(String)_@see #setAllowedMethods(List);public List<String> getAllowedMethods() {_		return this.allowedMethods__	};return,the,allowed,http,methods,possibly,code,null,in,which,case,only,code,get,is,allowed,see,add,allowed,method,http,method,see,add,allowed,method,string,see,set,allowed,methods,list;public,list,string,get,allowed,methods,return,this,allowed,methods
CorsConfiguration -> public List<String> getAllowedMethods();1449660404;Return the allowed HTTP methods, possibly {@code null} in which case_only {@code "GET"} is allowed._@see #addAllowedMethod(HttpMethod)_@see #addAllowedMethod(String)_@see #setAllowedMethods(List);public List<String> getAllowedMethods() {_		return this.allowedMethods__	};return,the,allowed,http,methods,possibly,code,null,in,which,case,only,code,get,is,allowed,see,add,allowed,method,http,method,see,add,allowed,method,string,see,set,allowed,methods,list;public,list,string,get,allowed,methods,return,this,allowed,methods
CorsConfiguration -> public List<String> getAllowedMethods();1453684721;Return the allowed HTTP methods, possibly {@code null} in which case_only {@code "GET"} is allowed._@see #addAllowedMethod(HttpMethod)_@see #addAllowedMethod(String)_@see #setAllowedMethods(List);public List<String> getAllowedMethods() {_		return this.allowedMethods__	};return,the,allowed,http,methods,possibly,code,null,in,which,case,only,code,get,is,allowed,see,add,allowed,method,http,method,see,add,allowed,method,string,see,set,allowed,methods,list;public,list,string,get,allowed,methods,return,this,allowed,methods
CorsConfiguration -> public List<String> getAllowedMethods();1467730834;Return the allowed HTTP methods, possibly {@code null} in which case_only {@code "GET"} is allowed._@see #addAllowedMethod(HttpMethod)_@see #addAllowedMethod(String)_@see #setAllowedMethods(List);public List<String> getAllowedMethods() {_		return this.allowedMethods__	};return,the,allowed,http,methods,possibly,code,null,in,which,case,only,code,get,is,allowed,see,add,allowed,method,http,method,see,add,allowed,method,string,see,set,allowed,methods,list;public,list,string,get,allowed,methods,return,this,allowed,methods
CorsConfiguration -> public List<String> getAllowedMethods();1472031618;Return the allowed HTTP methods, possibly {@code null} in which case_only {@code "GET"} and {@code "HEAD"} allowed._@see #addAllowedMethod(HttpMethod)_@see #addAllowedMethod(String)_@see #setAllowedMethods(List);public List<String> getAllowedMethods() {_		return this.allowedMethods__	};return,the,allowed,http,methods,possibly,code,null,in,which,case,only,code,get,and,code,head,allowed,see,add,allowed,method,http,method,see,add,allowed,method,string,see,set,allowed,methods,list;public,list,string,get,allowed,methods,return,this,allowed,methods
CorsConfiguration -> public List<String> getAllowedMethods();1476175114;Return the allowed HTTP methods, possibly {@code null} in which case_only {@code "GET"} and {@code "HEAD"} allowed._@see #addAllowedMethod(HttpMethod)_@see #addAllowedMethod(String)_@see #setAllowedMethods(List);public List<String> getAllowedMethods() {_		return this.allowedMethods__	};return,the,allowed,http,methods,possibly,code,null,in,which,case,only,code,get,and,code,head,allowed,see,add,allowed,method,http,method,see,add,allowed,method,string,see,set,allowed,methods,list;public,list,string,get,allowed,methods,return,this,allowed,methods
CorsConfiguration -> public List<String> getAllowedMethods();1476909116;Return the allowed HTTP methods, possibly {@code null} in which case_only {@code "GET"} and {@code "HEAD"} allowed._@see #addAllowedMethod(HttpMethod)_@see #addAllowedMethod(String)_@see #setAllowedMethods(List);public List<String> getAllowedMethods() {_		return this.allowedMethods__	};return,the,allowed,http,methods,possibly,code,null,in,which,case,only,code,get,and,code,head,allowed,see,add,allowed,method,http,method,see,add,allowed,method,string,see,set,allowed,methods,list;public,list,string,get,allowed,methods,return,this,allowed,methods
CorsConfiguration -> public List<String> getAllowedMethods();1487713300;Return the allowed HTTP methods, or {@code null} in which case_only {@code "GET"} and {@code "HEAD"} allowed._@see #addAllowedMethod(HttpMethod)_@see #addAllowedMethod(String)_@see #setAllowedMethods(List);public List<String> getAllowedMethods() {_		return this.allowedMethods__	};return,the,allowed,http,methods,or,code,null,in,which,case,only,code,get,and,code,head,allowed,see,add,allowed,method,http,method,see,add,allowed,method,string,see,set,allowed,methods,list;public,list,string,get,allowed,methods,return,this,allowed,methods
CorsConfiguration -> public List<String> getExposedHeaders();1427983931;@see #setExposedHeaders(java.util.List);public List<String> getExposedHeaders() {_		return this.exposedHeaders == null ? null : Collections.unmodifiableList(this.exposedHeaders)__	};see,set,exposed,headers,java,util,list;public,list,string,get,exposed,headers,return,this,exposed,headers,null,null,collections,unmodifiable,list,this,exposed,headers
CorsConfiguration -> public List<String> getExposedHeaders();1428073011;@see #setExposedHeaders(java.util.List);public List<String> getExposedHeaders() {_		return this.exposedHeaders == null ? null : Collections.unmodifiableList(this.exposedHeaders)__	};see,set,exposed,headers,java,util,list;public,list,string,get,exposed,headers,return,this,exposed,headers,null,null,collections,unmodifiable,list,this,exposed,headers
CorsConfiguration -> public List<String> getExposedHeaders();1430811101;Return the configured response headers to expose, possibly {@code null}.;public List<String> getExposedHeaders() {_		return this.exposedHeaders__	};return,the,configured,response,headers,to,expose,possibly,code,null;public,list,string,get,exposed,headers,return,this,exposed,headers
CorsConfiguration -> public List<String> getExposedHeaders();1431730371;Return the configured response headers to expose, possibly {@code null}.;public List<String> getExposedHeaders() {_		return this.exposedHeaders__	};return,the,configured,response,headers,to,expose,possibly,code,null;public,list,string,get,exposed,headers,return,this,exposed,headers
CorsConfiguration -> public List<String> getExposedHeaders();1432857824;Return the configured response headers to expose, possibly {@code null}.;public List<String> getExposedHeaders() {_		return this.exposedHeaders__	};return,the,configured,response,headers,to,expose,possibly,code,null;public,list,string,get,exposed,headers,return,this,exposed,headers
CorsConfiguration -> public List<String> getExposedHeaders();1433088837;Return the configured response headers to expose, possibly {@code null}.;public List<String> getExposedHeaders() {_		return this.exposedHeaders__	};return,the,configured,response,headers,to,expose,possibly,code,null;public,list,string,get,exposed,headers,return,this,exposed,headers
CorsConfiguration -> public List<String> getExposedHeaders();1434809538;Return the configured response headers to expose, possibly {@code null}._@see #addExposedHeader(String)_@see #setExposedHeaders(List);public List<String> getExposedHeaders() {_		return this.exposedHeaders__	};return,the,configured,response,headers,to,expose,possibly,code,null,see,add,exposed,header,string,see,set,exposed,headers,list;public,list,string,get,exposed,headers,return,this,exposed,headers
CorsConfiguration -> public List<String> getExposedHeaders();1436539370;Return the configured response headers to expose, possibly {@code null}._@see #addExposedHeader(String)_@see #setExposedHeaders(List);public List<String> getExposedHeaders() {_		return this.exposedHeaders__	};return,the,configured,response,headers,to,expose,possibly,code,null,see,add,exposed,header,string,see,set,exposed,headers,list;public,list,string,get,exposed,headers,return,this,exposed,headers
CorsConfiguration -> public List<String> getExposedHeaders();1438251419;Return the configured response headers to expose, possibly {@code null}._@see #addExposedHeader(String)_@see #setExposedHeaders(List);public List<String> getExposedHeaders() {_		return this.exposedHeaders__	};return,the,configured,response,headers,to,expose,possibly,code,null,see,add,exposed,header,string,see,set,exposed,headers,list;public,list,string,get,exposed,headers,return,this,exposed,headers
CorsConfiguration -> public List<String> getExposedHeaders();1447321232;Return the configured response headers to expose, possibly {@code null}._@see #addExposedHeader(String)_@see #setExposedHeaders(List);public List<String> getExposedHeaders() {_		return this.exposedHeaders__	};return,the,configured,response,headers,to,expose,possibly,code,null,see,add,exposed,header,string,see,set,exposed,headers,list;public,list,string,get,exposed,headers,return,this,exposed,headers
CorsConfiguration -> public List<String> getExposedHeaders();1449660404;Return the configured response headers to expose, possibly {@code null}._@see #addExposedHeader(String)_@see #setExposedHeaders(List);public List<String> getExposedHeaders() {_		return this.exposedHeaders__	};return,the,configured,response,headers,to,expose,possibly,code,null,see,add,exposed,header,string,see,set,exposed,headers,list;public,list,string,get,exposed,headers,return,this,exposed,headers
CorsConfiguration -> public List<String> getExposedHeaders();1453684721;Return the configured response headers to expose, possibly {@code null}._@see #addExposedHeader(String)_@see #setExposedHeaders(List);public List<String> getExposedHeaders() {_		return this.exposedHeaders__	};return,the,configured,response,headers,to,expose,possibly,code,null,see,add,exposed,header,string,see,set,exposed,headers,list;public,list,string,get,exposed,headers,return,this,exposed,headers
CorsConfiguration -> public List<String> getExposedHeaders();1467730834;Return the configured response headers to expose, possibly {@code null}._@see #addExposedHeader(String)_@see #setExposedHeaders(List);public List<String> getExposedHeaders() {_		return this.exposedHeaders__	};return,the,configured,response,headers,to,expose,possibly,code,null,see,add,exposed,header,string,see,set,exposed,headers,list;public,list,string,get,exposed,headers,return,this,exposed,headers
CorsConfiguration -> public List<String> getExposedHeaders();1472031618;Return the configured response headers to expose, possibly {@code null}._@see #addExposedHeader(String)_@see #setExposedHeaders(List);public List<String> getExposedHeaders() {_		return this.exposedHeaders__	};return,the,configured,response,headers,to,expose,possibly,code,null,see,add,exposed,header,string,see,set,exposed,headers,list;public,list,string,get,exposed,headers,return,this,exposed,headers
CorsConfiguration -> public List<String> getExposedHeaders();1476175114;Return the configured response headers to expose, possibly {@code null}._@see #addExposedHeader(String)_@see #setExposedHeaders(List);public List<String> getExposedHeaders() {_		return this.exposedHeaders__	};return,the,configured,response,headers,to,expose,possibly,code,null,see,add,exposed,header,string,see,set,exposed,headers,list;public,list,string,get,exposed,headers,return,this,exposed,headers
CorsConfiguration -> public List<String> getExposedHeaders();1476909116;Return the configured response headers to expose, possibly {@code null}._@see #addExposedHeader(String)_@see #setExposedHeaders(List);public List<String> getExposedHeaders() {_		return this.exposedHeaders__	};return,the,configured,response,headers,to,expose,possibly,code,null,see,add,exposed,header,string,see,set,exposed,headers,list;public,list,string,get,exposed,headers,return,this,exposed,headers
CorsConfiguration -> public List<String> getExposedHeaders();1487713300;Return the configured response headers to expose, or {@code null} if none._@see #addExposedHeader(String)_@see #setExposedHeaders(List);public List<String> getExposedHeaders() {_		return this.exposedHeaders__	};return,the,configured,response,headers,to,expose,or,code,null,if,none,see,add,exposed,header,string,see,set,exposed,headers,list;public,list,string,get,exposed,headers,return,this,exposed,headers
CorsConfiguration -> @Nullable 	public Boolean getAllowCredentials();1495868221;Return the configured {@code allowCredentials} flag, or {@code null} if none._@see #setAllowCredentials(Boolean);@Nullable_	public Boolean getAllowCredentials() {_		return this.allowCredentials__	};return,the,configured,code,allow,credentials,flag,or,code,null,if,none,see,set,allow,credentials,boolean;nullable,public,boolean,get,allow,credentials,return,this,allow,credentials
CorsConfiguration -> @Nullable 	public Boolean getAllowCredentials();1496837955;Return the configured {@code allowCredentials} flag, or {@code null} if none._@see #setAllowCredentials(Boolean);@Nullable_	public Boolean getAllowCredentials() {_		return this.allowCredentials__	};return,the,configured,code,allow,credentials,flag,or,code,null,if,none,see,set,allow,credentials,boolean;nullable,public,boolean,get,allow,credentials,return,this,allow,credentials
CorsConfiguration -> @Nullable 	public Boolean getAllowCredentials();1498780456;Return the configured {@code allowCredentials} flag, or {@code null} if none._@see #setAllowCredentials(Boolean);@Nullable_	public Boolean getAllowCredentials() {_		return this.allowCredentials__	};return,the,configured,code,allow,credentials,flag,or,code,null,if,none,see,set,allow,credentials,boolean;nullable,public,boolean,get,allow,credentials,return,this,allow,credentials
CorsConfiguration -> @Nullable 	public Boolean getAllowCredentials();1500448076;Return the configured {@code allowCredentials} flag, or {@code null} if none._@see #setAllowCredentials(Boolean);@Nullable_	public Boolean getAllowCredentials() {_		return this.allowCredentials__	};return,the,configured,code,allow,credentials,flag,or,code,null,if,none,see,set,allow,credentials,boolean;nullable,public,boolean,get,allow,credentials,return,this,allow,credentials
CorsConfiguration -> @Nullable 	public Boolean getAllowCredentials();1511387204;Return the configured {@code allowCredentials} flag, or {@code null} if none._@see #setAllowCredentials(Boolean);@Nullable_	public Boolean getAllowCredentials() {_		return this.allowCredentials__	};return,the,configured,code,allow,credentials,flag,or,code,null,if,none,see,set,allow,credentials,boolean;nullable,public,boolean,get,allow,credentials,return,this,allow,credentials
CorsConfiguration -> @Nullable 	public Boolean getAllowCredentials();1511925367;Return the configured {@code allowCredentials} flag, or {@code null} if none._@see #setAllowCredentials(Boolean);@Nullable_	public Boolean getAllowCredentials() {_		return this.allowCredentials__	};return,the,configured,code,allow,credentials,flag,or,code,null,if,none,see,set,allow,credentials,boolean;nullable,public,boolean,get,allow,credentials,return,this,allow,credentials
CorsConfiguration -> @Nullable 	public Boolean getAllowCredentials();1513805881;Return the configured {@code allowCredentials} flag, or {@code null} if none._@see #setAllowCredentials(Boolean);@Nullable_	public Boolean getAllowCredentials() {_		return this.allowCredentials__	};return,the,configured,code,allow,credentials,flag,or,code,null,if,none,see,set,allow,credentials,boolean;nullable,public,boolean,get,allow,credentials,return,this,allow,credentials
CorsConfiguration -> @Nullable 	public Boolean getAllowCredentials();1522354261;Return the configured {@code allowCredentials} flag, or {@code null} if none._@see #setAllowCredentials(Boolean);@Nullable_	public Boolean getAllowCredentials() {_		return this.allowCredentials__	};return,the,configured,code,allow,credentials,flag,or,code,null,if,none,see,set,allow,credentials,boolean;nullable,public,boolean,get,allow,credentials,return,this,allow,credentials
CorsConfiguration -> @Nullable 	public CorsConfiguration combine(@Nullable CorsConfiguration other);1496837955;Combine the supplied {@code CorsConfiguration} with this one._<p>Properties of this configuration are overridden by any non-null_properties of the supplied one._@return the combined {@code CorsConfiguration} or {@code this}_configuration if the supplied configuration is {@code null};@Nullable_	public CorsConfiguration combine(@Nullable CorsConfiguration other) {_		if (other == null) {_			return this__		}_		CorsConfiguration config = new CorsConfiguration(this)__		config.setAllowedOrigins(combine(getAllowedOrigins(), other.getAllowedOrigins()))__		config.setAllowedMethods(combine(getAllowedMethods(), other.getAllowedMethods()))__		config.setAllowedHeaders(combine(getAllowedHeaders(), other.getAllowedHeaders()))__		config.setExposedHeaders(combine(getExposedHeaders(), other.getExposedHeaders()))__		Boolean allowCredentials = other.getAllowCredentials()__		if (allowCredentials != null) {_			config.setAllowCredentials(allowCredentials)__		}_		Long maxAge = other.getMaxAge()__		if (maxAge != null) {_			config.setMaxAge(maxAge)__		}_		return config__	};combine,the,supplied,code,cors,configuration,with,this,one,p,properties,of,this,configuration,are,overridden,by,any,non,null,properties,of,the,supplied,one,return,the,combined,code,cors,configuration,or,code,this,configuration,if,the,supplied,configuration,is,code,null;nullable,public,cors,configuration,combine,nullable,cors,configuration,other,if,other,null,return,this,cors,configuration,config,new,cors,configuration,this,config,set,allowed,origins,combine,get,allowed,origins,other,get,allowed,origins,config,set,allowed,methods,combine,get,allowed,methods,other,get,allowed,methods,config,set,allowed,headers,combine,get,allowed,headers,other,get,allowed,headers,config,set,exposed,headers,combine,get,exposed,headers,other,get,exposed,headers,boolean,allow,credentials,other,get,allow,credentials,if,allow,credentials,null,config,set,allow,credentials,allow,credentials,long,max,age,other,get,max,age,if,max,age,null,config,set,max,age,max,age,return,config
CorsConfiguration -> @Nullable 	public CorsConfiguration combine(@Nullable CorsConfiguration other);1498780456;Combine the supplied {@code CorsConfiguration} with this one._<p>Properties of this configuration are overridden by any non-null_properties of the supplied one._@return the combined {@code CorsConfiguration} or {@code this}_configuration if the supplied configuration is {@code null};@Nullable_	public CorsConfiguration combine(@Nullable CorsConfiguration other) {_		if (other == null) {_			return this__		}_		CorsConfiguration config = new CorsConfiguration(this)__		config.setAllowedOrigins(combine(getAllowedOrigins(), other.getAllowedOrigins()))__		config.setAllowedMethods(combine(getAllowedMethods(), other.getAllowedMethods()))__		config.setAllowedHeaders(combine(getAllowedHeaders(), other.getAllowedHeaders()))__		config.setExposedHeaders(combine(getExposedHeaders(), other.getExposedHeaders()))__		Boolean allowCredentials = other.getAllowCredentials()__		if (allowCredentials != null) {_			config.setAllowCredentials(allowCredentials)__		}_		Long maxAge = other.getMaxAge()__		if (maxAge != null) {_			config.setMaxAge(maxAge)__		}_		return config__	};combine,the,supplied,code,cors,configuration,with,this,one,p,properties,of,this,configuration,are,overridden,by,any,non,null,properties,of,the,supplied,one,return,the,combined,code,cors,configuration,or,code,this,configuration,if,the,supplied,configuration,is,code,null;nullable,public,cors,configuration,combine,nullable,cors,configuration,other,if,other,null,return,this,cors,configuration,config,new,cors,configuration,this,config,set,allowed,origins,combine,get,allowed,origins,other,get,allowed,origins,config,set,allowed,methods,combine,get,allowed,methods,other,get,allowed,methods,config,set,allowed,headers,combine,get,allowed,headers,other,get,allowed,headers,config,set,exposed,headers,combine,get,exposed,headers,other,get,exposed,headers,boolean,allow,credentials,other,get,allow,credentials,if,allow,credentials,null,config,set,allow,credentials,allow,credentials,long,max,age,other,get,max,age,if,max,age,null,config,set,max,age,max,age,return,config
CorsConfiguration -> @Nullable 	public CorsConfiguration combine(@Nullable CorsConfiguration other);1500448076;Combine the supplied {@code CorsConfiguration} with this one._<p>Properties of this configuration are overridden by any non-null_properties of the supplied one._@return the combined {@code CorsConfiguration} or {@code this}_configuration if the supplied configuration is {@code null};@Nullable_	public CorsConfiguration combine(@Nullable CorsConfiguration other) {_		if (other == null) {_			return this__		}_		CorsConfiguration config = new CorsConfiguration(this)__		config.setAllowedOrigins(combine(getAllowedOrigins(), other.getAllowedOrigins()))__		config.setAllowedMethods(combine(getAllowedMethods(), other.getAllowedMethods()))__		config.setAllowedHeaders(combine(getAllowedHeaders(), other.getAllowedHeaders()))__		config.setExposedHeaders(combine(getExposedHeaders(), other.getExposedHeaders()))__		Boolean allowCredentials = other.getAllowCredentials()__		if (allowCredentials != null) {_			config.setAllowCredentials(allowCredentials)__		}_		Long maxAge = other.getMaxAge()__		if (maxAge != null) {_			config.setMaxAge(maxAge)__		}_		return config__	};combine,the,supplied,code,cors,configuration,with,this,one,p,properties,of,this,configuration,are,overridden,by,any,non,null,properties,of,the,supplied,one,return,the,combined,code,cors,configuration,or,code,this,configuration,if,the,supplied,configuration,is,code,null;nullable,public,cors,configuration,combine,nullable,cors,configuration,other,if,other,null,return,this,cors,configuration,config,new,cors,configuration,this,config,set,allowed,origins,combine,get,allowed,origins,other,get,allowed,origins,config,set,allowed,methods,combine,get,allowed,methods,other,get,allowed,methods,config,set,allowed,headers,combine,get,allowed,headers,other,get,allowed,headers,config,set,exposed,headers,combine,get,exposed,headers,other,get,exposed,headers,boolean,allow,credentials,other,get,allow,credentials,if,allow,credentials,null,config,set,allow,credentials,allow,credentials,long,max,age,other,get,max,age,if,max,age,null,config,set,max,age,max,age,return,config
CorsConfiguration -> @Nullable 	public CorsConfiguration combine(@Nullable CorsConfiguration other);1511387204;Combine the supplied {@code CorsConfiguration} with this one._<p>Properties of this configuration are overridden by any non-null_properties of the supplied one._@return the combined {@code CorsConfiguration} or {@code this}_configuration if the supplied configuration is {@code null};@Nullable_	public CorsConfiguration combine(@Nullable CorsConfiguration other) {_		if (other == null) {_			return this__		}_		CorsConfiguration config = new CorsConfiguration(this)__		config.setAllowedOrigins(combine(getAllowedOrigins(), other.getAllowedOrigins()))__		config.setAllowedMethods(combine(getAllowedMethods(), other.getAllowedMethods()))__		config.setAllowedHeaders(combine(getAllowedHeaders(), other.getAllowedHeaders()))__		config.setExposedHeaders(combine(getExposedHeaders(), other.getExposedHeaders()))__		Boolean allowCredentials = other.getAllowCredentials()__		if (allowCredentials != null) {_			config.setAllowCredentials(allowCredentials)__		}_		Long maxAge = other.getMaxAge()__		if (maxAge != null) {_			config.setMaxAge(maxAge)__		}_		return config__	};combine,the,supplied,code,cors,configuration,with,this,one,p,properties,of,this,configuration,are,overridden,by,any,non,null,properties,of,the,supplied,one,return,the,combined,code,cors,configuration,or,code,this,configuration,if,the,supplied,configuration,is,code,null;nullable,public,cors,configuration,combine,nullable,cors,configuration,other,if,other,null,return,this,cors,configuration,config,new,cors,configuration,this,config,set,allowed,origins,combine,get,allowed,origins,other,get,allowed,origins,config,set,allowed,methods,combine,get,allowed,methods,other,get,allowed,methods,config,set,allowed,headers,combine,get,allowed,headers,other,get,allowed,headers,config,set,exposed,headers,combine,get,exposed,headers,other,get,exposed,headers,boolean,allow,credentials,other,get,allow,credentials,if,allow,credentials,null,config,set,allow,credentials,allow,credentials,long,max,age,other,get,max,age,if,max,age,null,config,set,max,age,max,age,return,config
CorsConfiguration -> @Nullable 	public CorsConfiguration combine(@Nullable CorsConfiguration other);1511925367;Combine the supplied {@code CorsConfiguration} with this one._<p>Properties of this configuration are overridden by any non-null_properties of the supplied one._@return the combined {@code CorsConfiguration} or {@code this}_configuration if the supplied configuration is {@code null};@Nullable_	public CorsConfiguration combine(@Nullable CorsConfiguration other) {_		if (other == null) {_			return this__		}_		CorsConfiguration config = new CorsConfiguration(this)__		config.setAllowedOrigins(combine(getAllowedOrigins(), other.getAllowedOrigins()))__		config.setAllowedMethods(combine(getAllowedMethods(), other.getAllowedMethods()))__		config.setAllowedHeaders(combine(getAllowedHeaders(), other.getAllowedHeaders()))__		config.setExposedHeaders(combine(getExposedHeaders(), other.getExposedHeaders()))__		Boolean allowCredentials = other.getAllowCredentials()__		if (allowCredentials != null) {_			config.setAllowCredentials(allowCredentials)__		}_		Long maxAge = other.getMaxAge()__		if (maxAge != null) {_			config.setMaxAge(maxAge)__		}_		return config__	};combine,the,supplied,code,cors,configuration,with,this,one,p,properties,of,this,configuration,are,overridden,by,any,non,null,properties,of,the,supplied,one,return,the,combined,code,cors,configuration,or,code,this,configuration,if,the,supplied,configuration,is,code,null;nullable,public,cors,configuration,combine,nullable,cors,configuration,other,if,other,null,return,this,cors,configuration,config,new,cors,configuration,this,config,set,allowed,origins,combine,get,allowed,origins,other,get,allowed,origins,config,set,allowed,methods,combine,get,allowed,methods,other,get,allowed,methods,config,set,allowed,headers,combine,get,allowed,headers,other,get,allowed,headers,config,set,exposed,headers,combine,get,exposed,headers,other,get,exposed,headers,boolean,allow,credentials,other,get,allow,credentials,if,allow,credentials,null,config,set,allow,credentials,allow,credentials,long,max,age,other,get,max,age,if,max,age,null,config,set,max,age,max,age,return,config
CorsConfiguration -> @Nullable 	public CorsConfiguration combine(@Nullable CorsConfiguration other);1513805881;Combine the non-null properties of the supplied_{@code CorsConfiguration} with this one.__<p>When combining single values like {@code allowCredentials} or_{@code maxAge}, {@code this} properties are overridden by non-null_{@code other} properties if any.__<p>Combining lists like {@code allowedOrigins}, {@code allowedMethods},_{@code allowedHeaders} or {@code exposedHeaders} is done in an additive_way. For example, combining {@code ["GET", "POST"]} with_{@code ["PATCH"]} results in {@code ["GET", "POST", "PATCH"]}, but keep_in mind that combining {@code ["GET", "POST"]} with {@code ["*"]}_results in {@code ["*"]}.__<p>Notice that default permit values set by_{@link CorsConfiguration#applyPermitDefaultValues()} are overridden by_any value explicitly defined.__@return the combined {@code CorsConfiguration} or {@code this}_configuration if the supplied configuration is {@code null};@Nullable_	public CorsConfiguration combine(@Nullable CorsConfiguration other) {_		if (other == null) {_			return this__		}_		CorsConfiguration config = new CorsConfiguration(this)__		config.setAllowedOrigins(combine(getAllowedOrigins(), other.getAllowedOrigins()))__		config.setAllowedMethods(combine(getAllowedMethods(), other.getAllowedMethods()))__		config.setAllowedHeaders(combine(getAllowedHeaders(), other.getAllowedHeaders()))__		config.setExposedHeaders(combine(getExposedHeaders(), other.getExposedHeaders()))__		Boolean allowCredentials = other.getAllowCredentials()__		if (allowCredentials != null) {_			config.setAllowCredentials(allowCredentials)__		}_		Long maxAge = other.getMaxAge()__		if (maxAge != null) {_			config.setMaxAge(maxAge)__		}_		return config__	};combine,the,non,null,properties,of,the,supplied,code,cors,configuration,with,this,one,p,when,combining,single,values,like,code,allow,credentials,or,code,max,age,code,this,properties,are,overridden,by,non,null,code,other,properties,if,any,p,combining,lists,like,code,allowed,origins,code,allowed,methods,code,allowed,headers,or,code,exposed,headers,is,done,in,an,additive,way,for,example,combining,code,get,post,with,code,patch,results,in,code,get,post,patch,but,keep,in,mind,that,combining,code,get,post,with,code,results,in,code,p,notice,that,default,permit,values,set,by,link,cors,configuration,apply,permit,default,values,are,overridden,by,any,value,explicitly,defined,return,the,combined,code,cors,configuration,or,code,this,configuration,if,the,supplied,configuration,is,code,null;nullable,public,cors,configuration,combine,nullable,cors,configuration,other,if,other,null,return,this,cors,configuration,config,new,cors,configuration,this,config,set,allowed,origins,combine,get,allowed,origins,other,get,allowed,origins,config,set,allowed,methods,combine,get,allowed,methods,other,get,allowed,methods,config,set,allowed,headers,combine,get,allowed,headers,other,get,allowed,headers,config,set,exposed,headers,combine,get,exposed,headers,other,get,exposed,headers,boolean,allow,credentials,other,get,allow,credentials,if,allow,credentials,null,config,set,allow,credentials,allow,credentials,long,max,age,other,get,max,age,if,max,age,null,config,set,max,age,max,age,return,config
CorsConfiguration -> @Nullable 	public CorsConfiguration combine(@Nullable CorsConfiguration other);1522354261;Combine the non-null properties of the supplied_{@code CorsConfiguration} with this one.__<p>When combining single values like {@code allowCredentials} or_{@code maxAge}, {@code this} properties are overridden by non-null_{@code other} properties if any.__<p>Combining lists like {@code allowedOrigins}, {@code allowedMethods},_{@code allowedHeaders} or {@code exposedHeaders} is done in an additive_way. For example, combining {@code ["GET", "POST"]} with_{@code ["PATCH"]} results in {@code ["GET", "POST", "PATCH"]}, but keep_in mind that combining {@code ["GET", "POST"]} with {@code ["*"]}_results in {@code ["*"]}.__<p>Notice that default permit values set by_{@link CorsConfiguration#applyPermitDefaultValues()} are overridden by_any value explicitly defined.__@return the combined {@code CorsConfiguration} or {@code this}_configuration if the supplied configuration is {@code null};@Nullable_	public CorsConfiguration combine(@Nullable CorsConfiguration other) {_		if (other == null) {_			return this__		}_		CorsConfiguration config = new CorsConfiguration(this)__		config.setAllowedOrigins(combine(getAllowedOrigins(), other.getAllowedOrigins()))__		config.setAllowedMethods(combine(getAllowedMethods(), other.getAllowedMethods()))__		config.setAllowedHeaders(combine(getAllowedHeaders(), other.getAllowedHeaders()))__		config.setExposedHeaders(combine(getExposedHeaders(), other.getExposedHeaders()))__		Boolean allowCredentials = other.getAllowCredentials()__		if (allowCredentials != null) {_			config.setAllowCredentials(allowCredentials)__		}_		Long maxAge = other.getMaxAge()__		if (maxAge != null) {_			config.setMaxAge(maxAge)__		}_		return config__	};combine,the,non,null,properties,of,the,supplied,code,cors,configuration,with,this,one,p,when,combining,single,values,like,code,allow,credentials,or,code,max,age,code,this,properties,are,overridden,by,non,null,code,other,properties,if,any,p,combining,lists,like,code,allowed,origins,code,allowed,methods,code,allowed,headers,or,code,exposed,headers,is,done,in,an,additive,way,for,example,combining,code,get,post,with,code,patch,results,in,code,get,post,patch,but,keep,in,mind,that,combining,code,get,post,with,code,results,in,code,p,notice,that,default,permit,values,set,by,link,cors,configuration,apply,permit,default,values,are,overridden,by,any,value,explicitly,defined,return,the,combined,code,cors,configuration,or,code,this,configuration,if,the,supplied,configuration,is,code,null;nullable,public,cors,configuration,combine,nullable,cors,configuration,other,if,other,null,return,this,cors,configuration,config,new,cors,configuration,this,config,set,allowed,origins,combine,get,allowed,origins,other,get,allowed,origins,config,set,allowed,methods,combine,get,allowed,methods,other,get,allowed,methods,config,set,allowed,headers,combine,get,allowed,headers,other,get,allowed,headers,config,set,exposed,headers,combine,get,exposed,headers,other,get,exposed,headers,boolean,allow,credentials,other,get,allow,credentials,if,allow,credentials,null,config,set,allow,credentials,allow,credentials,long,max,age,other,get,max,age,if,max,age,null,config,set,max,age,max,age,return,config
CorsConfiguration -> public void setAllowedOrigins(@Nullable List<String> allowedOrigins);1496837955;Set the origins to allow, e.g. {@code "http://domain1.com"}._<p>The special value {@code "*"} allows all domains._<p>By default this is not set.;public void setAllowedOrigins(@Nullable List<String> allowedOrigins) {_		this.allowedOrigins = (allowedOrigins != null ? new ArrayList<>(allowedOrigins) : null)__	};set,the,origins,to,allow,e,g,code,http,domain1,com,p,the,special,value,code,allows,all,domains,p,by,default,this,is,not,set;public,void,set,allowed,origins,nullable,list,string,allowed,origins,this,allowed,origins,allowed,origins,null,new,array,list,allowed,origins,null
CorsConfiguration -> public void setAllowedOrigins(@Nullable List<String> allowedOrigins);1498780456;Set the origins to allow, e.g. {@code "http://domain1.com"}._<p>The special value {@code "*"} allows all domains._<p>By default this is not set.;public void setAllowedOrigins(@Nullable List<String> allowedOrigins) {_		this.allowedOrigins = (allowedOrigins != null ? new ArrayList<>(allowedOrigins) : null)__	};set,the,origins,to,allow,e,g,code,http,domain1,com,p,the,special,value,code,allows,all,domains,p,by,default,this,is,not,set;public,void,set,allowed,origins,nullable,list,string,allowed,origins,this,allowed,origins,allowed,origins,null,new,array,list,allowed,origins,null
CorsConfiguration -> public void setAllowedOrigins(@Nullable List<String> allowedOrigins);1500448076;Set the origins to allow, e.g. {@code "http://domain1.com"}._<p>The special value {@code "*"} allows all domains._<p>By default this is not set.;public void setAllowedOrigins(@Nullable List<String> allowedOrigins) {_		this.allowedOrigins = (allowedOrigins != null ? new ArrayList<>(allowedOrigins) : null)__	};set,the,origins,to,allow,e,g,code,http,domain1,com,p,the,special,value,code,allows,all,domains,p,by,default,this,is,not,set;public,void,set,allowed,origins,nullable,list,string,allowed,origins,this,allowed,origins,allowed,origins,null,new,array,list,allowed,origins,null
CorsConfiguration -> public void setAllowedOrigins(@Nullable List<String> allowedOrigins);1511387204;Set the origins to allow, e.g. {@code "http://domain1.com"}._<p>The special value {@code "*"} allows all domains._<p>By default this is not set.;public void setAllowedOrigins(@Nullable List<String> allowedOrigins) {_		this.allowedOrigins = (allowedOrigins != null ? new ArrayList<>(allowedOrigins) : null)__	};set,the,origins,to,allow,e,g,code,http,domain1,com,p,the,special,value,code,allows,all,domains,p,by,default,this,is,not,set;public,void,set,allowed,origins,nullable,list,string,allowed,origins,this,allowed,origins,allowed,origins,null,new,array,list,allowed,origins,null
CorsConfiguration -> public void setAllowedOrigins(@Nullable List<String> allowedOrigins);1511925367;Set the origins to allow, e.g. {@code "http://domain1.com"}._<p>The special value {@code "*"} allows all domains._<p>By default this is not set.;public void setAllowedOrigins(@Nullable List<String> allowedOrigins) {_		this.allowedOrigins = (allowedOrigins != null ? new ArrayList<>(allowedOrigins) : null)__	};set,the,origins,to,allow,e,g,code,http,domain1,com,p,the,special,value,code,allows,all,domains,p,by,default,this,is,not,set;public,void,set,allowed,origins,nullable,list,string,allowed,origins,this,allowed,origins,allowed,origins,null,new,array,list,allowed,origins,null
CorsConfiguration -> public void setAllowedOrigins(@Nullable List<String> allowedOrigins);1513805881;Set the origins to allow, e.g. {@code "http://domain1.com"}._<p>The special value {@code "*"} allows all domains._<p>By default this is not set.;public void setAllowedOrigins(@Nullable List<String> allowedOrigins) {_		this.allowedOrigins = (allowedOrigins != null ? new ArrayList<>(allowedOrigins) : null)__	};set,the,origins,to,allow,e,g,code,http,domain1,com,p,the,special,value,code,allows,all,domains,p,by,default,this,is,not,set;public,void,set,allowed,origins,nullable,list,string,allowed,origins,this,allowed,origins,allowed,origins,null,new,array,list,allowed,origins,null
CorsConfiguration -> public void setAllowedOrigins(@Nullable List<String> allowedOrigins);1522354261;Set the origins to allow, e.g. {@code "http://domain1.com"}._<p>The special value {@code "*"} allows all domains._<p>By default this is not set.;public void setAllowedOrigins(@Nullable List<String> allowedOrigins) {_		this.allowedOrigins = (allowedOrigins != null ? new ArrayList<>(allowedOrigins) : null)__	};set,the,origins,to,allow,e,g,code,http,domain1,com,p,the,special,value,code,allows,all,domains,p,by,default,this,is,not,set;public,void,set,allowed,origins,nullable,list,string,allowed,origins,this,allowed,origins,allowed,origins,null,new,array,list,allowed,origins,null
CorsConfiguration -> @Nullable 	public List<HttpMethod> checkHttpMethod(@Nullable HttpMethod requestMethod);1496837955;Check the HTTP request method (or the method from the_{@code Access-Control-Request-Method} header on a pre-flight request)_against the configured allowed methods._@param requestMethod the HTTP request method to check_@return the list of HTTP methods to list in the response of a pre-flight_request, or {@code null} if the supplied {@code requestMethod} is not allowed;@Nullable_	public List<HttpMethod> checkHttpMethod(@Nullable HttpMethod requestMethod) {_		if (requestMethod == null) {_			return null__		}_		if (this.resolvedMethods == null) {_			return Collections.singletonList(requestMethod)__		}_		return (this.resolvedMethods.contains(requestMethod) ? this.resolvedMethods : null)__	};check,the,http,request,method,or,the,method,from,the,code,access,control,request,method,header,on,a,pre,flight,request,against,the,configured,allowed,methods,param,request,method,the,http,request,method,to,check,return,the,list,of,http,methods,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,the,supplied,code,request,method,is,not,allowed;nullable,public,list,http,method,check,http,method,nullable,http,method,request,method,if,request,method,null,return,null,if,this,resolved,methods,null,return,collections,singleton,list,request,method,return,this,resolved,methods,contains,request,method,this,resolved,methods,null
CorsConfiguration -> @Nullable 	public List<HttpMethod> checkHttpMethod(@Nullable HttpMethod requestMethod);1498780456;Check the HTTP request method (or the method from the_{@code Access-Control-Request-Method} header on a pre-flight request)_against the configured allowed methods._@param requestMethod the HTTP request method to check_@return the list of HTTP methods to list in the response of a pre-flight_request, or {@code null} if the supplied {@code requestMethod} is not allowed;@Nullable_	public List<HttpMethod> checkHttpMethod(@Nullable HttpMethod requestMethod) {_		if (requestMethod == null) {_			return null__		}_		if (this.resolvedMethods == null) {_			return Collections.singletonList(requestMethod)__		}_		return (this.resolvedMethods.contains(requestMethod) ? this.resolvedMethods : null)__	};check,the,http,request,method,or,the,method,from,the,code,access,control,request,method,header,on,a,pre,flight,request,against,the,configured,allowed,methods,param,request,method,the,http,request,method,to,check,return,the,list,of,http,methods,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,the,supplied,code,request,method,is,not,allowed;nullable,public,list,http,method,check,http,method,nullable,http,method,request,method,if,request,method,null,return,null,if,this,resolved,methods,null,return,collections,singleton,list,request,method,return,this,resolved,methods,contains,request,method,this,resolved,methods,null
CorsConfiguration -> @Nullable 	public List<HttpMethod> checkHttpMethod(@Nullable HttpMethod requestMethod);1500448076;Check the HTTP request method (or the method from the_{@code Access-Control-Request-Method} header on a pre-flight request)_against the configured allowed methods._@param requestMethod the HTTP request method to check_@return the list of HTTP methods to list in the response of a pre-flight_request, or {@code null} if the supplied {@code requestMethod} is not allowed;@Nullable_	public List<HttpMethod> checkHttpMethod(@Nullable HttpMethod requestMethod) {_		if (requestMethod == null) {_			return null__		}_		if (this.resolvedMethods == null) {_			return Collections.singletonList(requestMethod)__		}_		return (this.resolvedMethods.contains(requestMethod) ? this.resolvedMethods : null)__	};check,the,http,request,method,or,the,method,from,the,code,access,control,request,method,header,on,a,pre,flight,request,against,the,configured,allowed,methods,param,request,method,the,http,request,method,to,check,return,the,list,of,http,methods,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,the,supplied,code,request,method,is,not,allowed;nullable,public,list,http,method,check,http,method,nullable,http,method,request,method,if,request,method,null,return,null,if,this,resolved,methods,null,return,collections,singleton,list,request,method,return,this,resolved,methods,contains,request,method,this,resolved,methods,null
CorsConfiguration -> @Nullable 	public List<HttpMethod> checkHttpMethod(@Nullable HttpMethod requestMethod);1511387204;Check the HTTP request method (or the method from the_{@code Access-Control-Request-Method} header on a pre-flight request)_against the configured allowed methods._@param requestMethod the HTTP request method to check_@return the list of HTTP methods to list in the response of a pre-flight_request, or {@code null} if the supplied {@code requestMethod} is not allowed;@Nullable_	public List<HttpMethod> checkHttpMethod(@Nullable HttpMethod requestMethod) {_		if (requestMethod == null) {_			return null__		}_		if (this.resolvedMethods == null) {_			return Collections.singletonList(requestMethod)__		}_		return (this.resolvedMethods.contains(requestMethod) ? this.resolvedMethods : null)__	};check,the,http,request,method,or,the,method,from,the,code,access,control,request,method,header,on,a,pre,flight,request,against,the,configured,allowed,methods,param,request,method,the,http,request,method,to,check,return,the,list,of,http,methods,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,the,supplied,code,request,method,is,not,allowed;nullable,public,list,http,method,check,http,method,nullable,http,method,request,method,if,request,method,null,return,null,if,this,resolved,methods,null,return,collections,singleton,list,request,method,return,this,resolved,methods,contains,request,method,this,resolved,methods,null
CorsConfiguration -> @Nullable 	public List<HttpMethod> checkHttpMethod(@Nullable HttpMethod requestMethod);1511925367;Check the HTTP request method (or the method from the_{@code Access-Control-Request-Method} header on a pre-flight request)_against the configured allowed methods._@param requestMethod the HTTP request method to check_@return the list of HTTP methods to list in the response of a pre-flight_request, or {@code null} if the supplied {@code requestMethod} is not allowed;@Nullable_	public List<HttpMethod> checkHttpMethod(@Nullable HttpMethod requestMethod) {_		if (requestMethod == null) {_			return null__		}_		if (this.resolvedMethods == null) {_			return Collections.singletonList(requestMethod)__		}_		return (this.resolvedMethods.contains(requestMethod) ? this.resolvedMethods : null)__	};check,the,http,request,method,or,the,method,from,the,code,access,control,request,method,header,on,a,pre,flight,request,against,the,configured,allowed,methods,param,request,method,the,http,request,method,to,check,return,the,list,of,http,methods,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,the,supplied,code,request,method,is,not,allowed;nullable,public,list,http,method,check,http,method,nullable,http,method,request,method,if,request,method,null,return,null,if,this,resolved,methods,null,return,collections,singleton,list,request,method,return,this,resolved,methods,contains,request,method,this,resolved,methods,null
CorsConfiguration -> @Nullable 	public List<HttpMethod> checkHttpMethod(@Nullable HttpMethod requestMethod);1513805881;Check the HTTP request method (or the method from the_{@code Access-Control-Request-Method} header on a pre-flight request)_against the configured allowed methods._@param requestMethod the HTTP request method to check_@return the list of HTTP methods to list in the response of a pre-flight_request, or {@code null} if the supplied {@code requestMethod} is not allowed;@Nullable_	public List<HttpMethod> checkHttpMethod(@Nullable HttpMethod requestMethod) {_		if (requestMethod == null) {_			return null__		}_		if (this.resolvedMethods == null) {_			return Collections.singletonList(requestMethod)__		}_		return (this.resolvedMethods.contains(requestMethod) ? this.resolvedMethods : null)__	};check,the,http,request,method,or,the,method,from,the,code,access,control,request,method,header,on,a,pre,flight,request,against,the,configured,allowed,methods,param,request,method,the,http,request,method,to,check,return,the,list,of,http,methods,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,the,supplied,code,request,method,is,not,allowed;nullable,public,list,http,method,check,http,method,nullable,http,method,request,method,if,request,method,null,return,null,if,this,resolved,methods,null,return,collections,singleton,list,request,method,return,this,resolved,methods,contains,request,method,this,resolved,methods,null
CorsConfiguration -> @Nullable 	public List<HttpMethod> checkHttpMethod(@Nullable HttpMethod requestMethod);1522354261;Check the HTTP request method (or the method from the_{@code Access-Control-Request-Method} header on a pre-flight request)_against the configured allowed methods._@param requestMethod the HTTP request method to check_@return the list of HTTP methods to list in the response of a pre-flight_request, or {@code null} if the supplied {@code requestMethod} is not allowed;@Nullable_	public List<HttpMethod> checkHttpMethod(@Nullable HttpMethod requestMethod) {_		if (requestMethod == null) {_			return null__		}_		if (this.resolvedMethods == null) {_			return Collections.singletonList(requestMethod)__		}_		return (this.resolvedMethods.contains(requestMethod) ? this.resolvedMethods : null)__	};check,the,http,request,method,or,the,method,from,the,code,access,control,request,method,header,on,a,pre,flight,request,against,the,configured,allowed,methods,param,request,method,the,http,request,method,to,check,return,the,list,of,http,methods,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,the,supplied,code,request,method,is,not,allowed;nullable,public,list,http,method,check,http,method,nullable,http,method,request,method,if,request,method,null,return,null,if,this,resolved,methods,null,return,collections,singleton,list,request,method,return,this,resolved,methods,contains,request,method,this,resolved,methods,null
CorsConfiguration -> public CorsConfiguration();1430811101;Default constructor.;public CorsConfiguration() {_	};default,constructor;public,cors,configuration
CorsConfiguration -> public CorsConfiguration();1431730371;Default constructor.;public CorsConfiguration() {_	};default,constructor;public,cors,configuration
CorsConfiguration -> public CorsConfiguration();1432857824;Default constructor.;public CorsConfiguration() {_	};default,constructor;public,cors,configuration
CorsConfiguration -> public CorsConfiguration();1433088837;Default constructor.;public CorsConfiguration() {_	};default,constructor;public,cors,configuration
CorsConfiguration -> public CorsConfiguration();1434809538;Construct a new, empty {@code CorsConfiguration} instance.;public CorsConfiguration() {_	};construct,a,new,empty,code,cors,configuration,instance;public,cors,configuration
CorsConfiguration -> public CorsConfiguration();1436539370;Construct a new, empty {@code CorsConfiguration} instance.;public CorsConfiguration() {_	};construct,a,new,empty,code,cors,configuration,instance;public,cors,configuration
CorsConfiguration -> public CorsConfiguration();1438251419;Construct a new, empty {@code CorsConfiguration} instance.;public CorsConfiguration() {_	};construct,a,new,empty,code,cors,configuration,instance;public,cors,configuration
CorsConfiguration -> public CorsConfiguration();1447321232;Construct a new, empty {@code CorsConfiguration} instance.;public CorsConfiguration() {_	};construct,a,new,empty,code,cors,configuration,instance;public,cors,configuration
CorsConfiguration -> public CorsConfiguration();1449660404;Construct a new, empty {@code CorsConfiguration} instance.;public CorsConfiguration() {_	};construct,a,new,empty,code,cors,configuration,instance;public,cors,configuration
CorsConfiguration -> public CorsConfiguration();1453684721;Construct a new, empty {@code CorsConfiguration} instance.;public CorsConfiguration() {_	};construct,a,new,empty,code,cors,configuration,instance;public,cors,configuration
CorsConfiguration -> public CorsConfiguration();1467730834;Construct a new, empty {@code CorsConfiguration} instance.;public CorsConfiguration() {_	};construct,a,new,empty,code,cors,configuration,instance;public,cors,configuration
CorsConfiguration -> public CorsConfiguration();1472031618;Construct a new, empty {@code CorsConfiguration} instance.;public CorsConfiguration() {_	};construct,a,new,empty,code,cors,configuration,instance;public,cors,configuration
CorsConfiguration -> public CorsConfiguration();1476175114;Construct a new, empty {@code CorsConfiguration} instance.;public CorsConfiguration() {_	};construct,a,new,empty,code,cors,configuration,instance;public,cors,configuration
CorsConfiguration -> public CorsConfiguration();1476909116;Construct a new {@code CorsConfiguration} instance with no cross-origin_requests allowed for any origin by default._@see #applyPermitDefaultValues();public CorsConfiguration() {_	};construct,a,new,code,cors,configuration,instance,with,no,cross,origin,requests,allowed,for,any,origin,by,default,see,apply,permit,default,values;public,cors,configuration
CorsConfiguration -> public CorsConfiguration();1487713300;Construct a new {@code CorsConfiguration} instance with no cross-origin_requests allowed for any origin by default._@see #applyPermitDefaultValues();public CorsConfiguration() {_	};construct,a,new,code,cors,configuration,instance,with,no,cross,origin,requests,allowed,for,any,origin,by,default,see,apply,permit,default,values;public,cors,configuration
CorsConfiguration -> public CorsConfiguration();1495868221;Construct a new {@code CorsConfiguration} instance with no cross-origin_requests allowed for any origin by default._@see #applyPermitDefaultValues();public CorsConfiguration() {_	};construct,a,new,code,cors,configuration,instance,with,no,cross,origin,requests,allowed,for,any,origin,by,default,see,apply,permit,default,values;public,cors,configuration
CorsConfiguration -> public CorsConfiguration();1496837955;Construct a new {@code CorsConfiguration} instance with no cross-origin_requests allowed for any origin by default._@see #applyPermitDefaultValues();public CorsConfiguration() {_	};construct,a,new,code,cors,configuration,instance,with,no,cross,origin,requests,allowed,for,any,origin,by,default,see,apply,permit,default,values;public,cors,configuration
CorsConfiguration -> public CorsConfiguration();1498780456;Construct a new {@code CorsConfiguration} instance with no cross-origin_requests allowed for any origin by default._@see #applyPermitDefaultValues();public CorsConfiguration() {_	};construct,a,new,code,cors,configuration,instance,with,no,cross,origin,requests,allowed,for,any,origin,by,default,see,apply,permit,default,values;public,cors,configuration
CorsConfiguration -> public CorsConfiguration();1500448076;Construct a new {@code CorsConfiguration} instance with no cross-origin_requests allowed for any origin by default._@see #applyPermitDefaultValues();public CorsConfiguration() {_	};construct,a,new,code,cors,configuration,instance,with,no,cross,origin,requests,allowed,for,any,origin,by,default,see,apply,permit,default,values;public,cors,configuration
CorsConfiguration -> public CorsConfiguration();1511387204;Construct a new {@code CorsConfiguration} instance with no cross-origin_requests allowed for any origin by default._@see #applyPermitDefaultValues();public CorsConfiguration() {_	};construct,a,new,code,cors,configuration,instance,with,no,cross,origin,requests,allowed,for,any,origin,by,default,see,apply,permit,default,values;public,cors,configuration
CorsConfiguration -> public CorsConfiguration();1511925367;Construct a new {@code CorsConfiguration} instance with no cross-origin_requests allowed for any origin by default._@see #applyPermitDefaultValues();public CorsConfiguration() {_	};construct,a,new,code,cors,configuration,instance,with,no,cross,origin,requests,allowed,for,any,origin,by,default,see,apply,permit,default,values;public,cors,configuration
CorsConfiguration -> public CorsConfiguration();1513805881;Construct a new {@code CorsConfiguration} instance with no cross-origin_requests allowed for any origin by default._@see #applyPermitDefaultValues();public CorsConfiguration() {_	};construct,a,new,code,cors,configuration,instance,with,no,cross,origin,requests,allowed,for,any,origin,by,default,see,apply,permit,default,values;public,cors,configuration
CorsConfiguration -> public CorsConfiguration();1522354261;Construct a new {@code CorsConfiguration} instance with no cross-origin_requests allowed for any origin by default._@see #applyPermitDefaultValues();public CorsConfiguration() {_	};construct,a,new,code,cors,configuration,instance,with,no,cross,origin,requests,allowed,for,any,origin,by,default,see,apply,permit,default,values;public,cors,configuration
CorsConfiguration -> @Nullable 	public List<String> checkHeaders(@Nullable List<String> requestHeaders);1496837955;Check the supplied request headers (or the headers listed in the_{@code Access-Control-Request-Headers} of a pre-flight request) against_the configured allowed headers._@param requestHeaders the request headers to check_@return the list of allowed headers to list in the response of a pre-flight_request, or {@code null} if none of the supplied request headers is allowed;@Nullable_	public List<String> checkHeaders(@Nullable List<String> requestHeaders) {_		if (requestHeaders == null) {_			return null__		}_		if (requestHeaders.isEmpty()) {_			return Collections.emptyList()__		}_		if (ObjectUtils.isEmpty(this.allowedHeaders)) {_			return null__		}__		boolean allowAnyHeader = this.allowedHeaders.contains(ALL)__		List<String> result = new ArrayList<>(requestHeaders.size())__		for (String requestHeader : requestHeaders) {_			if (StringUtils.hasText(requestHeader)) {_				requestHeader = requestHeader.trim()__				if (allowAnyHeader) {_					result.add(requestHeader)__				}_				else {_					for (String allowedHeader : this.allowedHeaders) {_						if (requestHeader.equalsIgnoreCase(allowedHeader)) {_							result.add(requestHeader)__							break__						}_					}_				}_			}_		}_		return (result.isEmpty() ? null : result)__	};check,the,supplied,request,headers,or,the,headers,listed,in,the,code,access,control,request,headers,of,a,pre,flight,request,against,the,configured,allowed,headers,param,request,headers,the,request,headers,to,check,return,the,list,of,allowed,headers,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,none,of,the,supplied,request,headers,is,allowed;nullable,public,list,string,check,headers,nullable,list,string,request,headers,if,request,headers,null,return,null,if,request,headers,is,empty,return,collections,empty,list,if,object,utils,is,empty,this,allowed,headers,return,null,boolean,allow,any,header,this,allowed,headers,contains,all,list,string,result,new,array,list,request,headers,size,for,string,request,header,request,headers,if,string,utils,has,text,request,header,request,header,request,header,trim,if,allow,any,header,result,add,request,header,else,for,string,allowed,header,this,allowed,headers,if,request,header,equals,ignore,case,allowed,header,result,add,request,header,break,return,result,is,empty,null,result
CorsConfiguration -> @Nullable 	public List<String> checkHeaders(@Nullable List<String> requestHeaders);1498780456;Check the supplied request headers (or the headers listed in the_{@code Access-Control-Request-Headers} of a pre-flight request) against_the configured allowed headers._@param requestHeaders the request headers to check_@return the list of allowed headers to list in the response of a pre-flight_request, or {@code null} if none of the supplied request headers is allowed;@Nullable_	public List<String> checkHeaders(@Nullable List<String> requestHeaders) {_		if (requestHeaders == null) {_			return null__		}_		if (requestHeaders.isEmpty()) {_			return Collections.emptyList()__		}_		if (ObjectUtils.isEmpty(this.allowedHeaders)) {_			return null__		}__		boolean allowAnyHeader = this.allowedHeaders.contains(ALL)__		List<String> result = new ArrayList<>(requestHeaders.size())__		for (String requestHeader : requestHeaders) {_			if (StringUtils.hasText(requestHeader)) {_				requestHeader = requestHeader.trim()__				if (allowAnyHeader) {_					result.add(requestHeader)__				}_				else {_					for (String allowedHeader : this.allowedHeaders) {_						if (requestHeader.equalsIgnoreCase(allowedHeader)) {_							result.add(requestHeader)__							break__						}_					}_				}_			}_		}_		return (result.isEmpty() ? null : result)__	};check,the,supplied,request,headers,or,the,headers,listed,in,the,code,access,control,request,headers,of,a,pre,flight,request,against,the,configured,allowed,headers,param,request,headers,the,request,headers,to,check,return,the,list,of,allowed,headers,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,none,of,the,supplied,request,headers,is,allowed;nullable,public,list,string,check,headers,nullable,list,string,request,headers,if,request,headers,null,return,null,if,request,headers,is,empty,return,collections,empty,list,if,object,utils,is,empty,this,allowed,headers,return,null,boolean,allow,any,header,this,allowed,headers,contains,all,list,string,result,new,array,list,request,headers,size,for,string,request,header,request,headers,if,string,utils,has,text,request,header,request,header,request,header,trim,if,allow,any,header,result,add,request,header,else,for,string,allowed,header,this,allowed,headers,if,request,header,equals,ignore,case,allowed,header,result,add,request,header,break,return,result,is,empty,null,result
CorsConfiguration -> @Nullable 	public List<String> checkHeaders(@Nullable List<String> requestHeaders);1500448076;Check the supplied request headers (or the headers listed in the_{@code Access-Control-Request-Headers} of a pre-flight request) against_the configured allowed headers._@param requestHeaders the request headers to check_@return the list of allowed headers to list in the response of a pre-flight_request, or {@code null} if none of the supplied request headers is allowed;@Nullable_	public List<String> checkHeaders(@Nullable List<String> requestHeaders) {_		if (requestHeaders == null) {_			return null__		}_		if (requestHeaders.isEmpty()) {_			return Collections.emptyList()__		}_		if (ObjectUtils.isEmpty(this.allowedHeaders)) {_			return null__		}__		boolean allowAnyHeader = this.allowedHeaders.contains(ALL)__		List<String> result = new ArrayList<>(requestHeaders.size())__		for (String requestHeader : requestHeaders) {_			if (StringUtils.hasText(requestHeader)) {_				requestHeader = requestHeader.trim()__				if (allowAnyHeader) {_					result.add(requestHeader)__				}_				else {_					for (String allowedHeader : this.allowedHeaders) {_						if (requestHeader.equalsIgnoreCase(allowedHeader)) {_							result.add(requestHeader)__							break__						}_					}_				}_			}_		}_		return (result.isEmpty() ? null : result)__	};check,the,supplied,request,headers,or,the,headers,listed,in,the,code,access,control,request,headers,of,a,pre,flight,request,against,the,configured,allowed,headers,param,request,headers,the,request,headers,to,check,return,the,list,of,allowed,headers,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,none,of,the,supplied,request,headers,is,allowed;nullable,public,list,string,check,headers,nullable,list,string,request,headers,if,request,headers,null,return,null,if,request,headers,is,empty,return,collections,empty,list,if,object,utils,is,empty,this,allowed,headers,return,null,boolean,allow,any,header,this,allowed,headers,contains,all,list,string,result,new,array,list,request,headers,size,for,string,request,header,request,headers,if,string,utils,has,text,request,header,request,header,request,header,trim,if,allow,any,header,result,add,request,header,else,for,string,allowed,header,this,allowed,headers,if,request,header,equals,ignore,case,allowed,header,result,add,request,header,break,return,result,is,empty,null,result
CorsConfiguration -> @Nullable 	public List<String> checkHeaders(@Nullable List<String> requestHeaders);1511387204;Check the supplied request headers (or the headers listed in the_{@code Access-Control-Request-Headers} of a pre-flight request) against_the configured allowed headers._@param requestHeaders the request headers to check_@return the list of allowed headers to list in the response of a pre-flight_request, or {@code null} if none of the supplied request headers is allowed;@Nullable_	public List<String> checkHeaders(@Nullable List<String> requestHeaders) {_		if (requestHeaders == null) {_			return null__		}_		if (requestHeaders.isEmpty()) {_			return Collections.emptyList()__		}_		if (ObjectUtils.isEmpty(this.allowedHeaders)) {_			return null__		}__		boolean allowAnyHeader = this.allowedHeaders.contains(ALL)__		List<String> result = new ArrayList<>(requestHeaders.size())__		for (String requestHeader : requestHeaders) {_			if (StringUtils.hasText(requestHeader)) {_				requestHeader = requestHeader.trim()__				if (allowAnyHeader) {_					result.add(requestHeader)__				}_				else {_					for (String allowedHeader : this.allowedHeaders) {_						if (requestHeader.equalsIgnoreCase(allowedHeader)) {_							result.add(requestHeader)__							break__						}_					}_				}_			}_		}_		return (result.isEmpty() ? null : result)__	};check,the,supplied,request,headers,or,the,headers,listed,in,the,code,access,control,request,headers,of,a,pre,flight,request,against,the,configured,allowed,headers,param,request,headers,the,request,headers,to,check,return,the,list,of,allowed,headers,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,none,of,the,supplied,request,headers,is,allowed;nullable,public,list,string,check,headers,nullable,list,string,request,headers,if,request,headers,null,return,null,if,request,headers,is,empty,return,collections,empty,list,if,object,utils,is,empty,this,allowed,headers,return,null,boolean,allow,any,header,this,allowed,headers,contains,all,list,string,result,new,array,list,request,headers,size,for,string,request,header,request,headers,if,string,utils,has,text,request,header,request,header,request,header,trim,if,allow,any,header,result,add,request,header,else,for,string,allowed,header,this,allowed,headers,if,request,header,equals,ignore,case,allowed,header,result,add,request,header,break,return,result,is,empty,null,result
CorsConfiguration -> @Nullable 	public List<String> checkHeaders(@Nullable List<String> requestHeaders);1511925367;Check the supplied request headers (or the headers listed in the_{@code Access-Control-Request-Headers} of a pre-flight request) against_the configured allowed headers._@param requestHeaders the request headers to check_@return the list of allowed headers to list in the response of a pre-flight_request, or {@code null} if none of the supplied request headers is allowed;@Nullable_	public List<String> checkHeaders(@Nullable List<String> requestHeaders) {_		if (requestHeaders == null) {_			return null__		}_		if (requestHeaders.isEmpty()) {_			return Collections.emptyList()__		}_		if (ObjectUtils.isEmpty(this.allowedHeaders)) {_			return null__		}__		boolean allowAnyHeader = this.allowedHeaders.contains(ALL)__		List<String> result = new ArrayList<>(requestHeaders.size())__		for (String requestHeader : requestHeaders) {_			if (StringUtils.hasText(requestHeader)) {_				requestHeader = requestHeader.trim()__				if (allowAnyHeader) {_					result.add(requestHeader)__				}_				else {_					for (String allowedHeader : this.allowedHeaders) {_						if (requestHeader.equalsIgnoreCase(allowedHeader)) {_							result.add(requestHeader)__							break__						}_					}_				}_			}_		}_		return (result.isEmpty() ? null : result)__	};check,the,supplied,request,headers,or,the,headers,listed,in,the,code,access,control,request,headers,of,a,pre,flight,request,against,the,configured,allowed,headers,param,request,headers,the,request,headers,to,check,return,the,list,of,allowed,headers,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,none,of,the,supplied,request,headers,is,allowed;nullable,public,list,string,check,headers,nullable,list,string,request,headers,if,request,headers,null,return,null,if,request,headers,is,empty,return,collections,empty,list,if,object,utils,is,empty,this,allowed,headers,return,null,boolean,allow,any,header,this,allowed,headers,contains,all,list,string,result,new,array,list,request,headers,size,for,string,request,header,request,headers,if,string,utils,has,text,request,header,request,header,request,header,trim,if,allow,any,header,result,add,request,header,else,for,string,allowed,header,this,allowed,headers,if,request,header,equals,ignore,case,allowed,header,result,add,request,header,break,return,result,is,empty,null,result
CorsConfiguration -> @Nullable 	public List<String> checkHeaders(@Nullable List<String> requestHeaders);1513805881;Check the supplied request headers (or the headers listed in the_{@code Access-Control-Request-Headers} of a pre-flight request) against_the configured allowed headers._@param requestHeaders the request headers to check_@return the list of allowed headers to list in the response of a pre-flight_request, or {@code null} if none of the supplied request headers is allowed;@Nullable_	public List<String> checkHeaders(@Nullable List<String> requestHeaders) {_		if (requestHeaders == null) {_			return null__		}_		if (requestHeaders.isEmpty()) {_			return Collections.emptyList()__		}_		if (ObjectUtils.isEmpty(this.allowedHeaders)) {_			return null__		}__		boolean allowAnyHeader = this.allowedHeaders.contains(ALL)__		List<String> result = new ArrayList<>(requestHeaders.size())__		for (String requestHeader : requestHeaders) {_			if (StringUtils.hasText(requestHeader)) {_				requestHeader = requestHeader.trim()__				if (allowAnyHeader) {_					result.add(requestHeader)__				}_				else {_					for (String allowedHeader : this.allowedHeaders) {_						if (requestHeader.equalsIgnoreCase(allowedHeader)) {_							result.add(requestHeader)__							break__						}_					}_				}_			}_		}_		return (result.isEmpty() ? null : result)__	};check,the,supplied,request,headers,or,the,headers,listed,in,the,code,access,control,request,headers,of,a,pre,flight,request,against,the,configured,allowed,headers,param,request,headers,the,request,headers,to,check,return,the,list,of,allowed,headers,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,none,of,the,supplied,request,headers,is,allowed;nullable,public,list,string,check,headers,nullable,list,string,request,headers,if,request,headers,null,return,null,if,request,headers,is,empty,return,collections,empty,list,if,object,utils,is,empty,this,allowed,headers,return,null,boolean,allow,any,header,this,allowed,headers,contains,all,list,string,result,new,array,list,request,headers,size,for,string,request,header,request,headers,if,string,utils,has,text,request,header,request,header,request,header,trim,if,allow,any,header,result,add,request,header,else,for,string,allowed,header,this,allowed,headers,if,request,header,equals,ignore,case,allowed,header,result,add,request,header,break,return,result,is,empty,null,result
CorsConfiguration -> @Nullable 	public List<String> checkHeaders(@Nullable List<String> requestHeaders);1522354261;Check the supplied request headers (or the headers listed in the_{@code Access-Control-Request-Headers} of a pre-flight request) against_the configured allowed headers._@param requestHeaders the request headers to check_@return the list of allowed headers to list in the response of a pre-flight_request, or {@code null} if none of the supplied request headers is allowed;@Nullable_	public List<String> checkHeaders(@Nullable List<String> requestHeaders) {_		if (requestHeaders == null) {_			return null__		}_		if (requestHeaders.isEmpty()) {_			return Collections.emptyList()__		}_		if (ObjectUtils.isEmpty(this.allowedHeaders)) {_			return null__		}__		boolean allowAnyHeader = this.allowedHeaders.contains(ALL)__		List<String> result = new ArrayList<>(requestHeaders.size())__		for (String requestHeader : requestHeaders) {_			if (StringUtils.hasText(requestHeader)) {_				requestHeader = requestHeader.trim()__				if (allowAnyHeader) {_					result.add(requestHeader)__				}_				else {_					for (String allowedHeader : this.allowedHeaders) {_						if (requestHeader.equalsIgnoreCase(allowedHeader)) {_							result.add(requestHeader)__							break__						}_					}_				}_			}_		}_		return (result.isEmpty() ? null : result)__	};check,the,supplied,request,headers,or,the,headers,listed,in,the,code,access,control,request,headers,of,a,pre,flight,request,against,the,configured,allowed,headers,param,request,headers,the,request,headers,to,check,return,the,list,of,allowed,headers,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,none,of,the,supplied,request,headers,is,allowed;nullable,public,list,string,check,headers,nullable,list,string,request,headers,if,request,headers,null,return,null,if,request,headers,is,empty,return,collections,empty,list,if,object,utils,is,empty,this,allowed,headers,return,null,boolean,allow,any,header,this,allowed,headers,contains,all,list,string,result,new,array,list,request,headers,size,for,string,request,header,request,headers,if,string,utils,has,text,request,header,request,header,request,header,trim,if,allow,any,header,result,add,request,header,else,for,string,allowed,header,this,allowed,headers,if,request,header,equals,ignore,case,allowed,header,result,add,request,header,break,return,result,is,empty,null,result
CorsConfiguration -> public Boolean getAllowCredentials();1430811101;Return the configured allowCredentials, possibly {@code null}.;public Boolean getAllowCredentials() {_		return this.allowCredentials__	};return,the,configured,allow,credentials,possibly,code,null;public,boolean,get,allow,credentials,return,this,allow,credentials
CorsConfiguration -> public Boolean getAllowCredentials();1431730371;Return the configured allowCredentials, possibly {@code null}.;public Boolean getAllowCredentials() {_		return this.allowCredentials__	};return,the,configured,allow,credentials,possibly,code,null;public,boolean,get,allow,credentials,return,this,allow,credentials
CorsConfiguration -> public Boolean getAllowCredentials();1432857824;Return the configured allowCredentials, possibly {@code null}.;public Boolean getAllowCredentials() {_		return this.allowCredentials__	};return,the,configured,allow,credentials,possibly,code,null;public,boolean,get,allow,credentials,return,this,allow,credentials
CorsConfiguration -> public Boolean getAllowCredentials();1433088837;Return the configured allowCredentials, possibly {@code null}.;public Boolean getAllowCredentials() {_		return this.allowCredentials__	};return,the,configured,allow,credentials,possibly,code,null;public,boolean,get,allow,credentials,return,this,allow,credentials
CorsConfiguration -> public Boolean getAllowCredentials();1434809538;Return the configured {@code allowCredentials} flag, possibly {@code null}._@see #setAllowCredentials(Boolean);public Boolean getAllowCredentials() {_		return this.allowCredentials__	};return,the,configured,code,allow,credentials,flag,possibly,code,null,see,set,allow,credentials,boolean;public,boolean,get,allow,credentials,return,this,allow,credentials
CorsConfiguration -> public Boolean getAllowCredentials();1436539370;Return the configured {@code allowCredentials} flag, possibly {@code null}._@see #setAllowCredentials(Boolean);public Boolean getAllowCredentials() {_		return this.allowCredentials__	};return,the,configured,code,allow,credentials,flag,possibly,code,null,see,set,allow,credentials,boolean;public,boolean,get,allow,credentials,return,this,allow,credentials
CorsConfiguration -> public Boolean getAllowCredentials();1438251419;Return the configured {@code allowCredentials} flag, possibly {@code null}._@see #setAllowCredentials(Boolean);public Boolean getAllowCredentials() {_		return this.allowCredentials__	};return,the,configured,code,allow,credentials,flag,possibly,code,null,see,set,allow,credentials,boolean;public,boolean,get,allow,credentials,return,this,allow,credentials
CorsConfiguration -> public Boolean getAllowCredentials();1447321232;Return the configured {@code allowCredentials} flag, possibly {@code null}._@see #setAllowCredentials(Boolean);public Boolean getAllowCredentials() {_		return this.allowCredentials__	};return,the,configured,code,allow,credentials,flag,possibly,code,null,see,set,allow,credentials,boolean;public,boolean,get,allow,credentials,return,this,allow,credentials
CorsConfiguration -> public Boolean getAllowCredentials();1449660404;Return the configured {@code allowCredentials} flag, possibly {@code null}._@see #setAllowCredentials(Boolean);public Boolean getAllowCredentials() {_		return this.allowCredentials__	};return,the,configured,code,allow,credentials,flag,possibly,code,null,see,set,allow,credentials,boolean;public,boolean,get,allow,credentials,return,this,allow,credentials
CorsConfiguration -> public Boolean getAllowCredentials();1453684721;Return the configured {@code allowCredentials} flag, possibly {@code null}._@see #setAllowCredentials(Boolean);public Boolean getAllowCredentials() {_		return this.allowCredentials__	};return,the,configured,code,allow,credentials,flag,possibly,code,null,see,set,allow,credentials,boolean;public,boolean,get,allow,credentials,return,this,allow,credentials
CorsConfiguration -> public Boolean getAllowCredentials();1467730834;Return the configured {@code allowCredentials} flag, possibly {@code null}._@see #setAllowCredentials(Boolean);public Boolean getAllowCredentials() {_		return this.allowCredentials__	};return,the,configured,code,allow,credentials,flag,possibly,code,null,see,set,allow,credentials,boolean;public,boolean,get,allow,credentials,return,this,allow,credentials
CorsConfiguration -> public Boolean getAllowCredentials();1472031618;Return the configured {@code allowCredentials} flag, possibly {@code null}._@see #setAllowCredentials(Boolean);public Boolean getAllowCredentials() {_		return this.allowCredentials__	};return,the,configured,code,allow,credentials,flag,possibly,code,null,see,set,allow,credentials,boolean;public,boolean,get,allow,credentials,return,this,allow,credentials
CorsConfiguration -> public Boolean getAllowCredentials();1476175114;Return the configured {@code allowCredentials} flag, possibly {@code null}._@see #setAllowCredentials(Boolean);public Boolean getAllowCredentials() {_		return this.allowCredentials__	};return,the,configured,code,allow,credentials,flag,possibly,code,null,see,set,allow,credentials,boolean;public,boolean,get,allow,credentials,return,this,allow,credentials
CorsConfiguration -> public Boolean getAllowCredentials();1476909116;Return the configured {@code allowCredentials} flag, possibly {@code null}._@see #setAllowCredentials(Boolean);public Boolean getAllowCredentials() {_		return this.allowCredentials__	};return,the,configured,code,allow,credentials,flag,possibly,code,null,see,set,allow,credentials,boolean;public,boolean,get,allow,credentials,return,this,allow,credentials
CorsConfiguration -> public Boolean getAllowCredentials();1487713300;Return the configured {@code allowCredentials} flag, or {@code null} if none._@see #setAllowCredentials(Boolean);public Boolean getAllowCredentials() {_		return this.allowCredentials__	};return,the,configured,code,allow,credentials,flag,or,code,null,if,none,see,set,allow,credentials,boolean;public,boolean,get,allow,credentials,return,this,allow,credentials
CorsConfiguration -> public String checkOrigin(String requestOrigin);1430811101;Check the origin of the request against the configured allowed origins._@param requestOrigin the origin to check._@return the origin to use for the response, possibly {@code null} which_means the request origin is not allowed.;public String checkOrigin(String requestOrigin) {_		if (requestOrigin == null) {_			return null__		}_		List<String> allowedOrigins = this.allowedOrigins == null ?_				new ArrayList<String>() : this.allowedOrigins__		if (allowedOrigins.contains("*")) {_			if (this.allowCredentials == null || !this.allowCredentials) {_				return "*"__			} else {_				return requestOrigin__			}_		}_		for (String allowedOrigin : allowedOrigins) {_			if (requestOrigin.equalsIgnoreCase(allowedOrigin)) {_				return requestOrigin__			}_		}_		return null__	};check,the,origin,of,the,request,against,the,configured,allowed,origins,param,request,origin,the,origin,to,check,return,the,origin,to,use,for,the,response,possibly,code,null,which,means,the,request,origin,is,not,allowed;public,string,check,origin,string,request,origin,if,request,origin,null,return,null,list,string,allowed,origins,this,allowed,origins,null,new,array,list,string,this,allowed,origins,if,allowed,origins,contains,if,this,allow,credentials,null,this,allow,credentials,return,else,return,request,origin,for,string,allowed,origin,allowed,origins,if,request,origin,equals,ignore,case,allowed,origin,return,request,origin,return,null
CorsConfiguration -> public String checkOrigin(String requestOrigin);1431730371;Check the origin of the request against the configured allowed origins._@param requestOrigin the origin to check._@return the origin to use for the response, possibly {@code null} which_means the request origin is not allowed.;public String checkOrigin(String requestOrigin) {_		if (requestOrigin == null) {_			return null__		}_		List<String> allowedOrigins = this.allowedOrigins == null ?_				new ArrayList<String>() : this.allowedOrigins__		if (allowedOrigins.contains("*")) {_			if (this.allowCredentials == null || !this.allowCredentials) {_				return "*"__			} else {_				return requestOrigin__			}_		}_		for (String allowedOrigin : allowedOrigins) {_			if (requestOrigin.equalsIgnoreCase(allowedOrigin)) {_				return requestOrigin__			}_		}_		return null__	};check,the,origin,of,the,request,against,the,configured,allowed,origins,param,request,origin,the,origin,to,check,return,the,origin,to,use,for,the,response,possibly,code,null,which,means,the,request,origin,is,not,allowed;public,string,check,origin,string,request,origin,if,request,origin,null,return,null,list,string,allowed,origins,this,allowed,origins,null,new,array,list,string,this,allowed,origins,if,allowed,origins,contains,if,this,allow,credentials,null,this,allow,credentials,return,else,return,request,origin,for,string,allowed,origin,allowed,origins,if,request,origin,equals,ignore,case,allowed,origin,return,request,origin,return,null
CorsConfiguration -> public String checkOrigin(String requestOrigin);1432857824;Check the origin of the request against the configured allowed origins._@param requestOrigin the origin to check._@return the origin to use for the response, possibly {@code null} which_means the request origin is not allowed.;public String checkOrigin(String requestOrigin) {_		if (requestOrigin == null) {_			return null__		}_		List<String> allowedOrigins = this.allowedOrigins == null ?_				new ArrayList<String>() : this.allowedOrigins__		if (allowedOrigins.contains("*")) {_			if (this.allowCredentials == null || !this.allowCredentials) {_				return "*"__			} else {_				return requestOrigin__			}_		}_		for (String allowedOrigin : allowedOrigins) {_			if (requestOrigin.equalsIgnoreCase(allowedOrigin)) {_				return requestOrigin__			}_		}_		return null__	};check,the,origin,of,the,request,against,the,configured,allowed,origins,param,request,origin,the,origin,to,check,return,the,origin,to,use,for,the,response,possibly,code,null,which,means,the,request,origin,is,not,allowed;public,string,check,origin,string,request,origin,if,request,origin,null,return,null,list,string,allowed,origins,this,allowed,origins,null,new,array,list,string,this,allowed,origins,if,allowed,origins,contains,if,this,allow,credentials,null,this,allow,credentials,return,else,return,request,origin,for,string,allowed,origin,allowed,origins,if,request,origin,equals,ignore,case,allowed,origin,return,request,origin,return,null
CorsConfiguration -> public String checkOrigin(String requestOrigin);1433088837;Check the origin of the request against the configured allowed origins._@param requestOrigin the origin to check._@return the origin to use for the response, possibly {@code null} which_means the request origin is not allowed.;public String checkOrigin(String requestOrigin) {_		if (requestOrigin == null) {_			return null__		}_		List<String> allowedOrigins = this.allowedOrigins == null ?_				new ArrayList<String>() : this.allowedOrigins__		if (allowedOrigins.contains("*")) {_			if (this.allowCredentials == null || !this.allowCredentials) {_				return "*"__			} else {_				return requestOrigin__			}_		}_		for (String allowedOrigin : allowedOrigins) {_			if (requestOrigin.equalsIgnoreCase(allowedOrigin)) {_				return requestOrigin__			}_		}_		return null__	};check,the,origin,of,the,request,against,the,configured,allowed,origins,param,request,origin,the,origin,to,check,return,the,origin,to,use,for,the,response,possibly,code,null,which,means,the,request,origin,is,not,allowed;public,string,check,origin,string,request,origin,if,request,origin,null,return,null,list,string,allowed,origins,this,allowed,origins,null,new,array,list,string,this,allowed,origins,if,allowed,origins,contains,if,this,allow,credentials,null,this,allow,credentials,return,else,return,request,origin,for,string,allowed,origin,allowed,origins,if,request,origin,equals,ignore,case,allowed,origin,return,request,origin,return,null
CorsConfiguration -> public String checkOrigin(String requestOrigin);1434809538;Check the origin of the request against the configured allowed origins._@param requestOrigin the origin to check_@return the origin to use for the response, possibly {@code null} which_means the request origin is not allowed;public String checkOrigin(String requestOrigin) {_		if (!StringUtils.hasText(requestOrigin)) {_			return null__		}_		if (ObjectUtils.isEmpty(this.allowedOrigins)) {_			return null__		}__		if (this.allowedOrigins.contains(ALL)) {_			if ((this.allowCredentials == null) || !this.allowCredentials.booleanValue()) {_				return ALL__			} else {_				return requestOrigin__			}_		}_		for (String allowedOrigin : this.allowedOrigins) {_			if (requestOrigin.equalsIgnoreCase(allowedOrigin)) {_				return requestOrigin__			}_		}_		return null__	};check,the,origin,of,the,request,against,the,configured,allowed,origins,param,request,origin,the,origin,to,check,return,the,origin,to,use,for,the,response,possibly,code,null,which,means,the,request,origin,is,not,allowed;public,string,check,origin,string,request,origin,if,string,utils,has,text,request,origin,return,null,if,object,utils,is,empty,this,allowed,origins,return,null,if,this,allowed,origins,contains,all,if,this,allow,credentials,null,this,allow,credentials,boolean,value,return,all,else,return,request,origin,for,string,allowed,origin,this,allowed,origins,if,request,origin,equals,ignore,case,allowed,origin,return,request,origin,return,null
CorsConfiguration -> public String checkOrigin(String requestOrigin);1436539370;Check the origin of the request against the configured allowed origins._@param requestOrigin the origin to check_@return the origin to use for the response, possibly {@code null} which_means the request origin is not allowed;public String checkOrigin(String requestOrigin) {_		if (!StringUtils.hasText(requestOrigin)) {_			return null__		}_		if (ObjectUtils.isEmpty(this.allowedOrigins)) {_			return null__		}__		if (this.allowedOrigins.contains(ALL)) {_			if ((this.allowCredentials == null) || !this.allowCredentials.booleanValue()) {_				return ALL__			} else {_				return requestOrigin__			}_		}_		for (String allowedOrigin : this.allowedOrigins) {_			if (requestOrigin.equalsIgnoreCase(allowedOrigin)) {_				return requestOrigin__			}_		}_		return null__	};check,the,origin,of,the,request,against,the,configured,allowed,origins,param,request,origin,the,origin,to,check,return,the,origin,to,use,for,the,response,possibly,code,null,which,means,the,request,origin,is,not,allowed;public,string,check,origin,string,request,origin,if,string,utils,has,text,request,origin,return,null,if,object,utils,is,empty,this,allowed,origins,return,null,if,this,allowed,origins,contains,all,if,this,allow,credentials,null,this,allow,credentials,boolean,value,return,all,else,return,request,origin,for,string,allowed,origin,this,allowed,origins,if,request,origin,equals,ignore,case,allowed,origin,return,request,origin,return,null
CorsConfiguration -> public String checkOrigin(String requestOrigin);1438251419;Check the origin of the request against the configured allowed origins._@param requestOrigin the origin to check_@return the origin to use for the response, possibly {@code null} which_means the request origin is not allowed;public String checkOrigin(String requestOrigin) {_		if (!StringUtils.hasText(requestOrigin)) {_			return null__		}_		if (ObjectUtils.isEmpty(this.allowedOrigins)) {_			return null__		}__		if (this.allowedOrigins.contains(ALL)) {_			if (this.allowCredentials != Boolean.TRUE) {_				return ALL__			}_			else {_				return requestOrigin__			}_		}_		for (String allowedOrigin : this.allowedOrigins) {_			if (requestOrigin.equalsIgnoreCase(allowedOrigin)) {_				return requestOrigin__			}_		}__		return null__	};check,the,origin,of,the,request,against,the,configured,allowed,origins,param,request,origin,the,origin,to,check,return,the,origin,to,use,for,the,response,possibly,code,null,which,means,the,request,origin,is,not,allowed;public,string,check,origin,string,request,origin,if,string,utils,has,text,request,origin,return,null,if,object,utils,is,empty,this,allowed,origins,return,null,if,this,allowed,origins,contains,all,if,this,allow,credentials,boolean,true,return,all,else,return,request,origin,for,string,allowed,origin,this,allowed,origins,if,request,origin,equals,ignore,case,allowed,origin,return,request,origin,return,null
CorsConfiguration -> public String checkOrigin(String requestOrigin);1447321232;Check the origin of the request against the configured allowed origins._@param requestOrigin the origin to check_@return the origin to use for the response, possibly {@code null} which_means the request origin is not allowed;public String checkOrigin(String requestOrigin) {_		if (!StringUtils.hasText(requestOrigin)) {_			return null__		}_		if (ObjectUtils.isEmpty(this.allowedOrigins)) {_			return null__		}__		if (this.allowedOrigins.contains(ALL)) {_			if (this.allowCredentials != Boolean.TRUE) {_				return ALL__			}_			else {_				return requestOrigin__			}_		}_		for (String allowedOrigin : this.allowedOrigins) {_			if (requestOrigin.equalsIgnoreCase(allowedOrigin)) {_				return requestOrigin__			}_		}__		return null__	};check,the,origin,of,the,request,against,the,configured,allowed,origins,param,request,origin,the,origin,to,check,return,the,origin,to,use,for,the,response,possibly,code,null,which,means,the,request,origin,is,not,allowed;public,string,check,origin,string,request,origin,if,string,utils,has,text,request,origin,return,null,if,object,utils,is,empty,this,allowed,origins,return,null,if,this,allowed,origins,contains,all,if,this,allow,credentials,boolean,true,return,all,else,return,request,origin,for,string,allowed,origin,this,allowed,origins,if,request,origin,equals,ignore,case,allowed,origin,return,request,origin,return,null
CorsConfiguration -> public String checkOrigin(String requestOrigin);1449660404;Check the origin of the request against the configured allowed origins._@param requestOrigin the origin to check_@return the origin to use for the response, possibly {@code null} which_means the request origin is not allowed;public String checkOrigin(String requestOrigin) {_		if (!StringUtils.hasText(requestOrigin)) {_			return null__		}_		if (ObjectUtils.isEmpty(this.allowedOrigins)) {_			return null__		}__		if (this.allowedOrigins.contains(ALL)) {_			if (this.allowCredentials != Boolean.TRUE) {_				return ALL__			}_			else {_				return requestOrigin__			}_		}_		for (String allowedOrigin : this.allowedOrigins) {_			if (requestOrigin.equalsIgnoreCase(allowedOrigin)) {_				return requestOrigin__			}_		}__		return null__	};check,the,origin,of,the,request,against,the,configured,allowed,origins,param,request,origin,the,origin,to,check,return,the,origin,to,use,for,the,response,possibly,code,null,which,means,the,request,origin,is,not,allowed;public,string,check,origin,string,request,origin,if,string,utils,has,text,request,origin,return,null,if,object,utils,is,empty,this,allowed,origins,return,null,if,this,allowed,origins,contains,all,if,this,allow,credentials,boolean,true,return,all,else,return,request,origin,for,string,allowed,origin,this,allowed,origins,if,request,origin,equals,ignore,case,allowed,origin,return,request,origin,return,null
CorsConfiguration -> public String checkOrigin(String requestOrigin);1453684721;Check the origin of the request against the configured allowed origins._@param requestOrigin the origin to check_@return the origin to use for the response, possibly {@code null} which_means the request origin is not allowed;public String checkOrigin(String requestOrigin) {_		if (!StringUtils.hasText(requestOrigin)) {_			return null__		}_		if (ObjectUtils.isEmpty(this.allowedOrigins)) {_			return null__		}__		if (this.allowedOrigins.contains(ALL)) {_			if (this.allowCredentials != Boolean.TRUE) {_				return ALL__			}_			else {_				return requestOrigin__			}_		}_		for (String allowedOrigin : this.allowedOrigins) {_			if (requestOrigin.equalsIgnoreCase(allowedOrigin)) {_				return requestOrigin__			}_		}__		return null__	};check,the,origin,of,the,request,against,the,configured,allowed,origins,param,request,origin,the,origin,to,check,return,the,origin,to,use,for,the,response,possibly,code,null,which,means,the,request,origin,is,not,allowed;public,string,check,origin,string,request,origin,if,string,utils,has,text,request,origin,return,null,if,object,utils,is,empty,this,allowed,origins,return,null,if,this,allowed,origins,contains,all,if,this,allow,credentials,boolean,true,return,all,else,return,request,origin,for,string,allowed,origin,this,allowed,origins,if,request,origin,equals,ignore,case,allowed,origin,return,request,origin,return,null
CorsConfiguration -> public String checkOrigin(String requestOrigin);1467730834;Check the origin of the request against the configured allowed origins._@param requestOrigin the origin to check_@return the origin to use for the response, possibly {@code null} which_means the request origin is not allowed;public String checkOrigin(String requestOrigin) {_		if (!StringUtils.hasText(requestOrigin)) {_			return null__		}_		if (ObjectUtils.isEmpty(this.allowedOrigins)) {_			return null__		}__		if (this.allowedOrigins.contains(ALL)) {_			if (this.allowCredentials != Boolean.TRUE) {_				return ALL__			}_			else {_				return requestOrigin__			}_		}_		for (String allowedOrigin : this.allowedOrigins) {_			if (requestOrigin.equalsIgnoreCase(allowedOrigin)) {_				return requestOrigin__			}_		}__		return null__	};check,the,origin,of,the,request,against,the,configured,allowed,origins,param,request,origin,the,origin,to,check,return,the,origin,to,use,for,the,response,possibly,code,null,which,means,the,request,origin,is,not,allowed;public,string,check,origin,string,request,origin,if,string,utils,has,text,request,origin,return,null,if,object,utils,is,empty,this,allowed,origins,return,null,if,this,allowed,origins,contains,all,if,this,allow,credentials,boolean,true,return,all,else,return,request,origin,for,string,allowed,origin,this,allowed,origins,if,request,origin,equals,ignore,case,allowed,origin,return,request,origin,return,null
CorsConfiguration -> public String checkOrigin(String requestOrigin);1472031618;Check the origin of the request against the configured allowed origins._@param requestOrigin the origin to check_@return the origin to use for the response, possibly {@code null} which_means the request origin is not allowed;public String checkOrigin(String requestOrigin) {_		if (!StringUtils.hasText(requestOrigin)) {_			return null__		}_		if (ObjectUtils.isEmpty(this.allowedOrigins)) {_			return null__		}__		if (this.allowedOrigins.contains(ALL)) {_			if (this.allowCredentials != Boolean.TRUE) {_				return ALL__			}_			else {_				return requestOrigin__			}_		}_		for (String allowedOrigin : this.allowedOrigins) {_			if (requestOrigin.equalsIgnoreCase(allowedOrigin)) {_				return requestOrigin__			}_		}__		return null__	};check,the,origin,of,the,request,against,the,configured,allowed,origins,param,request,origin,the,origin,to,check,return,the,origin,to,use,for,the,response,possibly,code,null,which,means,the,request,origin,is,not,allowed;public,string,check,origin,string,request,origin,if,string,utils,has,text,request,origin,return,null,if,object,utils,is,empty,this,allowed,origins,return,null,if,this,allowed,origins,contains,all,if,this,allow,credentials,boolean,true,return,all,else,return,request,origin,for,string,allowed,origin,this,allowed,origins,if,request,origin,equals,ignore,case,allowed,origin,return,request,origin,return,null
CorsConfiguration -> public String checkOrigin(String requestOrigin);1476175114;Check the origin of the request against the configured allowed origins._@param requestOrigin the origin to check_@return the origin to use for the response, possibly {@code null} which_means the request origin is not allowed;public String checkOrigin(String requestOrigin) {_		if (!StringUtils.hasText(requestOrigin)) {_			return null__		}_		if (ObjectUtils.isEmpty(this.allowedOrigins)) {_			return null__		}__		if (this.allowedOrigins.contains(ALL)) {_			if (this.allowCredentials != Boolean.TRUE) {_				return ALL__			}_			else {_				return requestOrigin__			}_		}_		for (String allowedOrigin : this.allowedOrigins) {_			if (requestOrigin.equalsIgnoreCase(allowedOrigin)) {_				return requestOrigin__			}_		}__		return null__	};check,the,origin,of,the,request,against,the,configured,allowed,origins,param,request,origin,the,origin,to,check,return,the,origin,to,use,for,the,response,possibly,code,null,which,means,the,request,origin,is,not,allowed;public,string,check,origin,string,request,origin,if,string,utils,has,text,request,origin,return,null,if,object,utils,is,empty,this,allowed,origins,return,null,if,this,allowed,origins,contains,all,if,this,allow,credentials,boolean,true,return,all,else,return,request,origin,for,string,allowed,origin,this,allowed,origins,if,request,origin,equals,ignore,case,allowed,origin,return,request,origin,return,null
CorsConfiguration -> public String checkOrigin(String requestOrigin);1476909116;Check the origin of the request against the configured allowed origins._@param requestOrigin the origin to check_@return the origin to use for the response, possibly {@code null} which_means the request origin is not allowed;public String checkOrigin(String requestOrigin) {_		if (!StringUtils.hasText(requestOrigin)) {_			return null__		}_		if (ObjectUtils.isEmpty(this.allowedOrigins)) {_			return null__		}__		if (this.allowedOrigins.contains(ALL)) {_			if (this.allowCredentials != Boolean.TRUE) {_				return ALL__			}_			else {_				return requestOrigin__			}_		}_		for (String allowedOrigin : this.allowedOrigins) {_			if (requestOrigin.equalsIgnoreCase(allowedOrigin)) {_				return requestOrigin__			}_		}__		return null__	};check,the,origin,of,the,request,against,the,configured,allowed,origins,param,request,origin,the,origin,to,check,return,the,origin,to,use,for,the,response,possibly,code,null,which,means,the,request,origin,is,not,allowed;public,string,check,origin,string,request,origin,if,string,utils,has,text,request,origin,return,null,if,object,utils,is,empty,this,allowed,origins,return,null,if,this,allowed,origins,contains,all,if,this,allow,credentials,boolean,true,return,all,else,return,request,origin,for,string,allowed,origin,this,allowed,origins,if,request,origin,equals,ignore,case,allowed,origin,return,request,origin,return,null
CorsConfiguration -> public String checkOrigin(String requestOrigin);1487713300;Check the origin of the request against the configured allowed origins._@param requestOrigin the origin to check_@return the origin to use for the response, or {@code null} which_means the request origin is not allowed;public String checkOrigin(String requestOrigin) {_		if (!StringUtils.hasText(requestOrigin)) {_			return null__		}_		if (ObjectUtils.isEmpty(this.allowedOrigins)) {_			return null__		}__		if (this.allowedOrigins.contains(ALL)) {_			if (this.allowCredentials != Boolean.TRUE) {_				return ALL__			}_			else {_				return requestOrigin__			}_		}_		for (String allowedOrigin : this.allowedOrigins) {_			if (requestOrigin.equalsIgnoreCase(allowedOrigin)) {_				return requestOrigin__			}_		}__		return null__	};check,the,origin,of,the,request,against,the,configured,allowed,origins,param,request,origin,the,origin,to,check,return,the,origin,to,use,for,the,response,or,code,null,which,means,the,request,origin,is,not,allowed;public,string,check,origin,string,request,origin,if,string,utils,has,text,request,origin,return,null,if,object,utils,is,empty,this,allowed,origins,return,null,if,this,allowed,origins,contains,all,if,this,allow,credentials,boolean,true,return,all,else,return,request,origin,for,string,allowed,origin,this,allowed,origins,if,request,origin,equals,ignore,case,allowed,origin,return,request,origin,return,null
CorsConfiguration -> @Nullable 	public List<String> getAllowedMethods();1495868221;Return the allowed HTTP methods, or {@code null} in which case_only {@code "GET"} and {@code "HEAD"} allowed._@see #addAllowedMethod(HttpMethod)_@see #addAllowedMethod(String)_@see #setAllowedMethods(List);@Nullable_	public List<String> getAllowedMethods() {_		return this.allowedMethods__	};return,the,allowed,http,methods,or,code,null,in,which,case,only,code,get,and,code,head,allowed,see,add,allowed,method,http,method,see,add,allowed,method,string,see,set,allowed,methods,list;nullable,public,list,string,get,allowed,methods,return,this,allowed,methods
CorsConfiguration -> @Nullable 	public List<String> getAllowedMethods();1496837955;Return the allowed HTTP methods, or {@code null} in which case_only {@code "GET"} and {@code "HEAD"} allowed._@see #addAllowedMethod(HttpMethod)_@see #addAllowedMethod(String)_@see #setAllowedMethods(List);@Nullable_	public List<String> getAllowedMethods() {_		return this.allowedMethods__	};return,the,allowed,http,methods,or,code,null,in,which,case,only,code,get,and,code,head,allowed,see,add,allowed,method,http,method,see,add,allowed,method,string,see,set,allowed,methods,list;nullable,public,list,string,get,allowed,methods,return,this,allowed,methods
CorsConfiguration -> @Nullable 	public List<String> getAllowedMethods();1498780456;Return the allowed HTTP methods, or {@code null} in which case_only {@code "GET"} and {@code "HEAD"} allowed._@see #addAllowedMethod(HttpMethod)_@see #addAllowedMethod(String)_@see #setAllowedMethods(List);@Nullable_	public List<String> getAllowedMethods() {_		return this.allowedMethods__	};return,the,allowed,http,methods,or,code,null,in,which,case,only,code,get,and,code,head,allowed,see,add,allowed,method,http,method,see,add,allowed,method,string,see,set,allowed,methods,list;nullable,public,list,string,get,allowed,methods,return,this,allowed,methods
CorsConfiguration -> @Nullable 	public List<String> getAllowedMethods();1500448076;Return the allowed HTTP methods, or {@code null} in which case_only {@code "GET"} and {@code "HEAD"} allowed._@see #addAllowedMethod(HttpMethod)_@see #addAllowedMethod(String)_@see #setAllowedMethods(List);@Nullable_	public List<String> getAllowedMethods() {_		return this.allowedMethods__	};return,the,allowed,http,methods,or,code,null,in,which,case,only,code,get,and,code,head,allowed,see,add,allowed,method,http,method,see,add,allowed,method,string,see,set,allowed,methods,list;nullable,public,list,string,get,allowed,methods,return,this,allowed,methods
CorsConfiguration -> @Nullable 	public List<String> getAllowedMethods();1511387204;Return the allowed HTTP methods, or {@code null} in which case_only {@code "GET"} and {@code "HEAD"} allowed._@see #addAllowedMethod(HttpMethod)_@see #addAllowedMethod(String)_@see #setAllowedMethods(List);@Nullable_	public List<String> getAllowedMethods() {_		return this.allowedMethods__	};return,the,allowed,http,methods,or,code,null,in,which,case,only,code,get,and,code,head,allowed,see,add,allowed,method,http,method,see,add,allowed,method,string,see,set,allowed,methods,list;nullable,public,list,string,get,allowed,methods,return,this,allowed,methods
CorsConfiguration -> @Nullable 	public List<String> getAllowedMethods();1511925367;Return the allowed HTTP methods, or {@code null} in which case_only {@code "GET"} and {@code "HEAD"} allowed._@see #addAllowedMethod(HttpMethod)_@see #addAllowedMethod(String)_@see #setAllowedMethods(List);@Nullable_	public List<String> getAllowedMethods() {_		return this.allowedMethods__	};return,the,allowed,http,methods,or,code,null,in,which,case,only,code,get,and,code,head,allowed,see,add,allowed,method,http,method,see,add,allowed,method,string,see,set,allowed,methods,list;nullable,public,list,string,get,allowed,methods,return,this,allowed,methods
CorsConfiguration -> @Nullable 	public List<String> getAllowedMethods();1513805881;Return the allowed HTTP methods, or {@code null} in which case_only {@code "GET"} and {@code "HEAD"} allowed._@see #addAllowedMethod(HttpMethod)_@see #addAllowedMethod(String)_@see #setAllowedMethods(List);@Nullable_	public List<String> getAllowedMethods() {_		return this.allowedMethods__	};return,the,allowed,http,methods,or,code,null,in,which,case,only,code,get,and,code,head,allowed,see,add,allowed,method,http,method,see,add,allowed,method,string,see,set,allowed,methods,list;nullable,public,list,string,get,allowed,methods,return,this,allowed,methods
CorsConfiguration -> @Nullable 	public List<String> getAllowedMethods();1522354261;Return the allowed HTTP methods, or {@code null} in which case_only {@code "GET"} and {@code "HEAD"} allowed._@see #addAllowedMethod(HttpMethod)_@see #addAllowedMethod(String)_@see #setAllowedMethods(List);@Nullable_	public List<String> getAllowedMethods() {_		return this.allowedMethods__	};return,the,allowed,http,methods,or,code,null,in,which,case,only,code,get,and,code,head,allowed,see,add,allowed,method,http,method,see,add,allowed,method,string,see,set,allowed,methods,list;nullable,public,list,string,get,allowed,methods,return,this,allowed,methods
CorsConfiguration -> public void setAllowedHeaders(List<String> allowedHeaders);1427983931;Set a list of request headers that will define Access-Control-Allow-Methods response_header values. If a header field name is one of the following, it is not required_to be listed: Cache-Control, Content-Language, Expires, Last-Modified, Pragma._"*" means that all headers asked by the client will be allowed.;public void setAllowedHeaders(List<String> allowedHeaders) {_		this.allowedHeaders = allowedHeaders__	};set,a,list,of,request,headers,that,will,define,access,control,allow,methods,response,header,values,if,a,header,field,name,is,one,of,the,following,it,is,not,required,to,be,listed,cache,control,content,language,expires,last,modified,pragma,means,that,all,headers,asked,by,the,client,will,be,allowed;public,void,set,allowed,headers,list,string,allowed,headers,this,allowed,headers,allowed,headers
CorsConfiguration -> public void setAllowedHeaders(List<String> allowedHeaders);1428073011;Set a list of request headers that will define Access-Control-Allow-Methods response_header values. If a header field name is one of the following, it is not required_to be listed: Cache-Control, Content-Language, Expires, Last-Modified, Pragma._"*" means that all headers asked by the client will be allowed.;public void setAllowedHeaders(List<String> allowedHeaders) {_		this.allowedHeaders = allowedHeaders__	};set,a,list,of,request,headers,that,will,define,access,control,allow,methods,response,header,values,if,a,header,field,name,is,one,of,the,following,it,is,not,required,to,be,listed,cache,control,content,language,expires,last,modified,pragma,means,that,all,headers,asked,by,the,client,will,be,allowed;public,void,set,allowed,headers,list,string,allowed,headers,this,allowed,headers,allowed,headers
CorsConfiguration -> public void setAllowedHeaders(List<String> allowedHeaders);1430811101;Configure the list of headers that a pre-flight request can list as allowed_for use during an actual request. The special value of "*" allows actual_requests to send any header. A header name is not required to be listed if_it is one of: Cache-Control, Content-Language, Expires, Last-Modified, Pragma._<p>By default this is not set.;public void setAllowedHeaders(List<String> allowedHeaders) {_		this.allowedHeaders = allowedHeaders__	};configure,the,list,of,headers,that,a,pre,flight,request,can,list,as,allowed,for,use,during,an,actual,request,the,special,value,of,allows,actual,requests,to,send,any,header,a,header,name,is,not,required,to,be,listed,if,it,is,one,of,cache,control,content,language,expires,last,modified,pragma,p,by,default,this,is,not,set;public,void,set,allowed,headers,list,string,allowed,headers,this,allowed,headers,allowed,headers
CorsConfiguration -> public void setAllowedHeaders(List<String> allowedHeaders);1431730371;Configure the list of headers that a pre-flight request can list as allowed_for use during an actual request. The special value of "*" allows actual_requests to send any header. A header name is not required to be listed if_it is one of: Cache-Control, Content-Language, Expires, Last-Modified, Pragma._<p>By default this is not set.;public void setAllowedHeaders(List<String> allowedHeaders) {_		this.allowedHeaders = allowedHeaders__	};configure,the,list,of,headers,that,a,pre,flight,request,can,list,as,allowed,for,use,during,an,actual,request,the,special,value,of,allows,actual,requests,to,send,any,header,a,header,name,is,not,required,to,be,listed,if,it,is,one,of,cache,control,content,language,expires,last,modified,pragma,p,by,default,this,is,not,set;public,void,set,allowed,headers,list,string,allowed,headers,this,allowed,headers,allowed,headers
CorsConfiguration -> public void setAllowedHeaders(List<String> allowedHeaders);1432857824;Configure the list of headers that a pre-flight request can list as allowed_for use during an actual request. The special value of "*" allows actual_requests to send any header. A header name is not required to be listed if_it is one of: Cache-Control, Content-Language, Expires, Last-Modified, Pragma._<p>By default this is not set.;public void setAllowedHeaders(List<String> allowedHeaders) {_		this.allowedHeaders = allowedHeaders__	};configure,the,list,of,headers,that,a,pre,flight,request,can,list,as,allowed,for,use,during,an,actual,request,the,special,value,of,allows,actual,requests,to,send,any,header,a,header,name,is,not,required,to,be,listed,if,it,is,one,of,cache,control,content,language,expires,last,modified,pragma,p,by,default,this,is,not,set;public,void,set,allowed,headers,list,string,allowed,headers,this,allowed,headers,allowed,headers
CorsConfiguration -> public void setAllowedHeaders(List<String> allowedHeaders);1433088837;Configure the list of headers that a pre-flight request can list as allowed_for use during an actual request. The special value of "*" allows actual_requests to send any header. A header name is not required to be listed if_it is one of: Cache-Control, Content-Language, Expires, Last-Modified, Pragma._<p>By default this is not set.;public void setAllowedHeaders(List<String> allowedHeaders) {_		this.allowedHeaders = allowedHeaders__	};configure,the,list,of,headers,that,a,pre,flight,request,can,list,as,allowed,for,use,during,an,actual,request,the,special,value,of,allows,actual,requests,to,send,any,header,a,header,name,is,not,required,to,be,listed,if,it,is,one,of,cache,control,content,language,expires,last,modified,pragma,p,by,default,this,is,not,set;public,void,set,allowed,headers,list,string,allowed,headers,this,allowed,headers,allowed,headers
CorsConfiguration -> public void setAllowedHeaders(List<String> allowedHeaders);1434809538;Set the list of headers that a pre-flight request can list as allowed_for use during an actual request._<p>The special value {@code "*"} allows actual requests to send any_header._<p>A header name is not required to be listed if it is one of:_{@code Cache-Control}, {@code Content-Language}, {@code Expires},_{@code Last-Modified}, or {@code Pragma}._<p>By default this is not set.;public void setAllowedHeaders(List<String> allowedHeaders) {_		this.allowedHeaders = (allowedHeaders == null ? null : new ArrayList<String>(allowedHeaders))__	};set,the,list,of,headers,that,a,pre,flight,request,can,list,as,allowed,for,use,during,an,actual,request,p,the,special,value,code,allows,actual,requests,to,send,any,header,p,a,header,name,is,not,required,to,be,listed,if,it,is,one,of,code,cache,control,code,content,language,code,expires,code,last,modified,or,code,pragma,p,by,default,this,is,not,set;public,void,set,allowed,headers,list,string,allowed,headers,this,allowed,headers,allowed,headers,null,null,new,array,list,string,allowed,headers
CorsConfiguration -> public void setAllowedHeaders(List<String> allowedHeaders);1436539370;Set the list of headers that a pre-flight request can list as allowed_for use during an actual request._<p>The special value {@code "*"} allows actual requests to send any_header._<p>A header name is not required to be listed if it is one of:_{@code Cache-Control}, {@code Content-Language}, {@code Expires},_{@code Last-Modified}, or {@code Pragma}._<p>By default this is not set.;public void setAllowedHeaders(List<String> allowedHeaders) {_		this.allowedHeaders = (allowedHeaders == null ? null : new ArrayList<String>(allowedHeaders))__	};set,the,list,of,headers,that,a,pre,flight,request,can,list,as,allowed,for,use,during,an,actual,request,p,the,special,value,code,allows,actual,requests,to,send,any,header,p,a,header,name,is,not,required,to,be,listed,if,it,is,one,of,code,cache,control,code,content,language,code,expires,code,last,modified,or,code,pragma,p,by,default,this,is,not,set;public,void,set,allowed,headers,list,string,allowed,headers,this,allowed,headers,allowed,headers,null,null,new,array,list,string,allowed,headers
CorsConfiguration -> public void setAllowedHeaders(List<String> allowedHeaders);1438251419;Set the list of headers that a pre-flight request can list as allowed_for use during an actual request._<p>The special value {@code "*"} allows actual requests to send any_header._<p>A header name is not required to be listed if it is one of:_{@code Cache-Control}, {@code Content-Language}, {@code Expires},_{@code Last-Modified}, or {@code Pragma}._<p>By default this is not set.;public void setAllowedHeaders(List<String> allowedHeaders) {_		this.allowedHeaders = (allowedHeaders != null ? new ArrayList<String>(allowedHeaders) : null)__	};set,the,list,of,headers,that,a,pre,flight,request,can,list,as,allowed,for,use,during,an,actual,request,p,the,special,value,code,allows,actual,requests,to,send,any,header,p,a,header,name,is,not,required,to,be,listed,if,it,is,one,of,code,cache,control,code,content,language,code,expires,code,last,modified,or,code,pragma,p,by,default,this,is,not,set;public,void,set,allowed,headers,list,string,allowed,headers,this,allowed,headers,allowed,headers,null,new,array,list,string,allowed,headers,null
CorsConfiguration -> public void setAllowedHeaders(List<String> allowedHeaders);1447321232;Set the list of headers that a pre-flight request can list as allowed_for use during an actual request._<p>The special value {@code "*"} allows actual requests to send any_header._<p>A header name is not required to be listed if it is one of:_{@code Cache-Control}, {@code Content-Language}, {@code Expires},_{@code Last-Modified}, or {@code Pragma}._<p>By default this is not set.;public void setAllowedHeaders(List<String> allowedHeaders) {_		this.allowedHeaders = (allowedHeaders != null ? new ArrayList<String>(allowedHeaders) : null)__	};set,the,list,of,headers,that,a,pre,flight,request,can,list,as,allowed,for,use,during,an,actual,request,p,the,special,value,code,allows,actual,requests,to,send,any,header,p,a,header,name,is,not,required,to,be,listed,if,it,is,one,of,code,cache,control,code,content,language,code,expires,code,last,modified,or,code,pragma,p,by,default,this,is,not,set;public,void,set,allowed,headers,list,string,allowed,headers,this,allowed,headers,allowed,headers,null,new,array,list,string,allowed,headers,null
CorsConfiguration -> public void setAllowedHeaders(List<String> allowedHeaders);1449660404;Set the list of headers that a pre-flight request can list as allowed_for use during an actual request._<p>The special value {@code "*"} allows actual requests to send any_header._<p>A header name is not required to be listed if it is one of:_{@code Cache-Control}, {@code Content-Language}, {@code Expires},_{@code Last-Modified}, or {@code Pragma}._<p>By default this is not set.;public void setAllowedHeaders(List<String> allowedHeaders) {_		this.allowedHeaders = (allowedHeaders != null ? new ArrayList<String>(allowedHeaders) : null)__	};set,the,list,of,headers,that,a,pre,flight,request,can,list,as,allowed,for,use,during,an,actual,request,p,the,special,value,code,allows,actual,requests,to,send,any,header,p,a,header,name,is,not,required,to,be,listed,if,it,is,one,of,code,cache,control,code,content,language,code,expires,code,last,modified,or,code,pragma,p,by,default,this,is,not,set;public,void,set,allowed,headers,list,string,allowed,headers,this,allowed,headers,allowed,headers,null,new,array,list,string,allowed,headers,null
CorsConfiguration -> public void setAllowedHeaders(List<String> allowedHeaders);1453684721;Set the list of headers that a pre-flight request can list as allowed_for use during an actual request._<p>The special value {@code "*"} allows actual requests to send any_header._<p>A header name is not required to be listed if it is one of:_{@code Cache-Control}, {@code Content-Language}, {@code Expires},_{@code Last-Modified}, or {@code Pragma}._<p>By default this is not set.;public void setAllowedHeaders(List<String> allowedHeaders) {_		this.allowedHeaders = (allowedHeaders != null ? new ArrayList<String>(allowedHeaders) : null)__	};set,the,list,of,headers,that,a,pre,flight,request,can,list,as,allowed,for,use,during,an,actual,request,p,the,special,value,code,allows,actual,requests,to,send,any,header,p,a,header,name,is,not,required,to,be,listed,if,it,is,one,of,code,cache,control,code,content,language,code,expires,code,last,modified,or,code,pragma,p,by,default,this,is,not,set;public,void,set,allowed,headers,list,string,allowed,headers,this,allowed,headers,allowed,headers,null,new,array,list,string,allowed,headers,null
CorsConfiguration -> public void setAllowedHeaders(List<String> allowedHeaders);1467730834;Set the list of headers that a pre-flight request can list as allowed_for use during an actual request._<p>The special value {@code "*"} allows actual requests to send any_header._<p>A header name is not required to be listed if it is one of:_{@code Cache-Control}, {@code Content-Language}, {@code Expires},_{@code Last-Modified}, or {@code Pragma}._<p>By default this is not set.;public void setAllowedHeaders(List<String> allowedHeaders) {_		this.allowedHeaders = (allowedHeaders != null ? new ArrayList<>(allowedHeaders) : null)__	};set,the,list,of,headers,that,a,pre,flight,request,can,list,as,allowed,for,use,during,an,actual,request,p,the,special,value,code,allows,actual,requests,to,send,any,header,p,a,header,name,is,not,required,to,be,listed,if,it,is,one,of,code,cache,control,code,content,language,code,expires,code,last,modified,or,code,pragma,p,by,default,this,is,not,set;public,void,set,allowed,headers,list,string,allowed,headers,this,allowed,headers,allowed,headers,null,new,array,list,allowed,headers,null
CorsConfiguration -> public void setAllowedHeaders(List<String> allowedHeaders);1472031618;Set the list of headers that a pre-flight request can list as allowed_for use during an actual request._<p>The special value {@code "*"} allows actual requests to send any_header._<p>A header name is not required to be listed if it is one of:_{@code Cache-Control}, {@code Content-Language}, {@code Expires},_{@code Last-Modified}, or {@code Pragma}._<p>By default this is not set.;public void setAllowedHeaders(List<String> allowedHeaders) {_		this.allowedHeaders = (allowedHeaders != null ? new ArrayList<>(allowedHeaders) : null)__	};set,the,list,of,headers,that,a,pre,flight,request,can,list,as,allowed,for,use,during,an,actual,request,p,the,special,value,code,allows,actual,requests,to,send,any,header,p,a,header,name,is,not,required,to,be,listed,if,it,is,one,of,code,cache,control,code,content,language,code,expires,code,last,modified,or,code,pragma,p,by,default,this,is,not,set;public,void,set,allowed,headers,list,string,allowed,headers,this,allowed,headers,allowed,headers,null,new,array,list,allowed,headers,null
CorsConfiguration -> public void setAllowedHeaders(List<String> allowedHeaders);1476175114;Set the list of headers that a pre-flight request can list as allowed_for use during an actual request._<p>The special value {@code "*"} allows actual requests to send any_header._<p>A header name is not required to be listed if it is one of:_{@code Cache-Control}, {@code Content-Language}, {@code Expires},_{@code Last-Modified}, or {@code Pragma}._<p>By default this is not set.;public void setAllowedHeaders(List<String> allowedHeaders) {_		this.allowedHeaders = (allowedHeaders != null ? new ArrayList<>(allowedHeaders) : null)__	};set,the,list,of,headers,that,a,pre,flight,request,can,list,as,allowed,for,use,during,an,actual,request,p,the,special,value,code,allows,actual,requests,to,send,any,header,p,a,header,name,is,not,required,to,be,listed,if,it,is,one,of,code,cache,control,code,content,language,code,expires,code,last,modified,or,code,pragma,p,by,default,this,is,not,set;public,void,set,allowed,headers,list,string,allowed,headers,this,allowed,headers,allowed,headers,null,new,array,list,allowed,headers,null
CorsConfiguration -> public void setAllowedHeaders(List<String> allowedHeaders);1476909116;Set the list of headers that a pre-flight request can list as allowed_for use during an actual request._<p>The special value {@code "*"} allows actual requests to send any_header._<p>A header name is not required to be listed if it is one of:_{@code Cache-Control}, {@code Content-Language}, {@code Expires},_{@code Last-Modified}, or {@code Pragma}._<p>By default this is not set.;public void setAllowedHeaders(List<String> allowedHeaders) {_		this.allowedHeaders = (allowedHeaders != null ? new ArrayList<>(allowedHeaders) : null)__	};set,the,list,of,headers,that,a,pre,flight,request,can,list,as,allowed,for,use,during,an,actual,request,p,the,special,value,code,allows,actual,requests,to,send,any,header,p,a,header,name,is,not,required,to,be,listed,if,it,is,one,of,code,cache,control,code,content,language,code,expires,code,last,modified,or,code,pragma,p,by,default,this,is,not,set;public,void,set,allowed,headers,list,string,allowed,headers,this,allowed,headers,allowed,headers,null,new,array,list,allowed,headers,null
CorsConfiguration -> public void setAllowedHeaders(List<String> allowedHeaders);1487713300;Set the list of headers that a pre-flight request can list as allowed_for use during an actual request._<p>The special value {@code "*"} allows actual requests to send any_header._<p>A header name is not required to be listed if it is one of:_{@code Cache-Control}, {@code Content-Language}, {@code Expires},_{@code Last-Modified}, or {@code Pragma}._<p>By default this is not set.;public void setAllowedHeaders(List<String> allowedHeaders) {_		this.allowedHeaders = (allowedHeaders != null ? new ArrayList<>(allowedHeaders) : null)__	};set,the,list,of,headers,that,a,pre,flight,request,can,list,as,allowed,for,use,during,an,actual,request,p,the,special,value,code,allows,actual,requests,to,send,any,header,p,a,header,name,is,not,required,to,be,listed,if,it,is,one,of,code,cache,control,code,content,language,code,expires,code,last,modified,or,code,pragma,p,by,default,this,is,not,set;public,void,set,allowed,headers,list,string,allowed,headers,this,allowed,headers,allowed,headers,null,new,array,list,allowed,headers,null
CorsConfiguration -> public void setAllowedHeaders(List<String> allowedHeaders);1495868221;Set the list of headers that a pre-flight request can list as allowed_for use during an actual request._<p>The special value {@code "*"} allows actual requests to send any_header._<p>A header name is not required to be listed if it is one of:_{@code Cache-Control}, {@code Content-Language}, {@code Expires},_{@code Last-Modified}, or {@code Pragma}._<p>By default this is not set.;public void setAllowedHeaders(List<String> allowedHeaders) {_		this.allowedHeaders = (allowedHeaders != null ? new ArrayList<>(allowedHeaders) : null)__	};set,the,list,of,headers,that,a,pre,flight,request,can,list,as,allowed,for,use,during,an,actual,request,p,the,special,value,code,allows,actual,requests,to,send,any,header,p,a,header,name,is,not,required,to,be,listed,if,it,is,one,of,code,cache,control,code,content,language,code,expires,code,last,modified,or,code,pragma,p,by,default,this,is,not,set;public,void,set,allowed,headers,list,string,allowed,headers,this,allowed,headers,allowed,headers,null,new,array,list,allowed,headers,null
CorsConfiguration -> public CorsConfiguration combine(CorsConfiguration other);1431730371;Combine the specified {@link CorsConfiguration} with this one._Properties of this configuration are overridden only by non-null properties_of the provided one._@return the combined {@link CorsConfiguration};public CorsConfiguration combine(CorsConfiguration other) {_		if (other == null) {_			return this__		}_		CorsConfiguration config = new CorsConfiguration(this)__		config.setAllowedOrigins(combine(this.getAllowedOrigins(), other.getAllowedOrigins()))__		config.setAllowedMethods(combine(this.getAllowedMethods(), other.getAllowedMethods()))__		config.setAllowedHeaders(combine(this.getAllowedHeaders(), other.getAllowedHeaders()))__		config.setExposedHeaders(combine(this.getExposedHeaders(), other.getExposedHeaders()))__		Boolean allowCredentials = other.getAllowCredentials()__		if (allowCredentials != null) {_			config.setAllowCredentials(allowCredentials)__		}_		Long maxAge = other.getMaxAge()__		if (maxAge != null) {_			config.setMaxAge(maxAge)__		}_		return config__	};combine,the,specified,link,cors,configuration,with,this,one,properties,of,this,configuration,are,overridden,only,by,non,null,properties,of,the,provided,one,return,the,combined,link,cors,configuration;public,cors,configuration,combine,cors,configuration,other,if,other,null,return,this,cors,configuration,config,new,cors,configuration,this,config,set,allowed,origins,combine,this,get,allowed,origins,other,get,allowed,origins,config,set,allowed,methods,combine,this,get,allowed,methods,other,get,allowed,methods,config,set,allowed,headers,combine,this,get,allowed,headers,other,get,allowed,headers,config,set,exposed,headers,combine,this,get,exposed,headers,other,get,exposed,headers,boolean,allow,credentials,other,get,allow,credentials,if,allow,credentials,null,config,set,allow,credentials,allow,credentials,long,max,age,other,get,max,age,if,max,age,null,config,set,max,age,max,age,return,config
CorsConfiguration -> public CorsConfiguration combine(CorsConfiguration other);1432857824;Combine the specified {@link CorsConfiguration} with this one._Properties of this configuration are overridden only by non-null properties_of the provided one._@return the combined {@link CorsConfiguration};public CorsConfiguration combine(CorsConfiguration other) {_		if (other == null) {_			return this__		}_		CorsConfiguration config = new CorsConfiguration(this)__		config.setAllowedOrigins(combine(this.getAllowedOrigins(), other.getAllowedOrigins()))__		config.setAllowedMethods(combine(this.getAllowedMethods(), other.getAllowedMethods()))__		config.setAllowedHeaders(combine(this.getAllowedHeaders(), other.getAllowedHeaders()))__		config.setExposedHeaders(combine(this.getExposedHeaders(), other.getExposedHeaders()))__		Boolean allowCredentials = other.getAllowCredentials()__		if (allowCredentials != null) {_			config.setAllowCredentials(allowCredentials)__		}_		Long maxAge = other.getMaxAge()__		if (maxAge != null) {_			config.setMaxAge(maxAge)__		}_		return config__	};combine,the,specified,link,cors,configuration,with,this,one,properties,of,this,configuration,are,overridden,only,by,non,null,properties,of,the,provided,one,return,the,combined,link,cors,configuration;public,cors,configuration,combine,cors,configuration,other,if,other,null,return,this,cors,configuration,config,new,cors,configuration,this,config,set,allowed,origins,combine,this,get,allowed,origins,other,get,allowed,origins,config,set,allowed,methods,combine,this,get,allowed,methods,other,get,allowed,methods,config,set,allowed,headers,combine,this,get,allowed,headers,other,get,allowed,headers,config,set,exposed,headers,combine,this,get,exposed,headers,other,get,exposed,headers,boolean,allow,credentials,other,get,allow,credentials,if,allow,credentials,null,config,set,allow,credentials,allow,credentials,long,max,age,other,get,max,age,if,max,age,null,config,set,max,age,max,age,return,config
CorsConfiguration -> public CorsConfiguration combine(CorsConfiguration other);1433088837;Combine the specified {@link CorsConfiguration} with this one._Properties of this configuration are overridden only by non-null properties_of the provided one._@return the combined {@link CorsConfiguration};public CorsConfiguration combine(CorsConfiguration other) {_		if (other == null) {_			return this__		}_		CorsConfiguration config = new CorsConfiguration(this)__		config.setAllowedOrigins(combine(this.getAllowedOrigins(), other.getAllowedOrigins()))__		config.setAllowedMethods(combine(this.getAllowedMethods(), other.getAllowedMethods()))__		config.setAllowedHeaders(combine(this.getAllowedHeaders(), other.getAllowedHeaders()))__		config.setExposedHeaders(combine(this.getExposedHeaders(), other.getExposedHeaders()))__		Boolean allowCredentials = other.getAllowCredentials()__		if (allowCredentials != null) {_			config.setAllowCredentials(allowCredentials)__		}_		Long maxAge = other.getMaxAge()__		if (maxAge != null) {_			config.setMaxAge(maxAge)__		}_		return config__	};combine,the,specified,link,cors,configuration,with,this,one,properties,of,this,configuration,are,overridden,only,by,non,null,properties,of,the,provided,one,return,the,combined,link,cors,configuration;public,cors,configuration,combine,cors,configuration,other,if,other,null,return,this,cors,configuration,config,new,cors,configuration,this,config,set,allowed,origins,combine,this,get,allowed,origins,other,get,allowed,origins,config,set,allowed,methods,combine,this,get,allowed,methods,other,get,allowed,methods,config,set,allowed,headers,combine,this,get,allowed,headers,other,get,allowed,headers,config,set,exposed,headers,combine,this,get,exposed,headers,other,get,exposed,headers,boolean,allow,credentials,other,get,allow,credentials,if,allow,credentials,null,config,set,allow,credentials,allow,credentials,long,max,age,other,get,max,age,if,max,age,null,config,set,max,age,max,age,return,config
CorsConfiguration -> public CorsConfiguration combine(CorsConfiguration other);1434809538;Combine the supplied {@code CorsConfiguration} with this one._<p>Properties of this configuration are overridden by any non-null_properties of the supplied one._@return the combined {@code CorsConfiguration} or {@code this}_configuration if the supplied configuration is {@code null};public CorsConfiguration combine(CorsConfiguration other) {_		if (other == null) {_			return this__		}_		CorsConfiguration config = new CorsConfiguration(this)__		config.setAllowedOrigins(combine(this.getAllowedOrigins(), other.getAllowedOrigins()))__		config.setAllowedMethods(combine(this.getAllowedMethods(), other.getAllowedMethods()))__		config.setAllowedHeaders(combine(this.getAllowedHeaders(), other.getAllowedHeaders()))__		config.setExposedHeaders(combine(this.getExposedHeaders(), other.getExposedHeaders()))__		Boolean allowCredentials = other.getAllowCredentials()__		if (allowCredentials != null) {_			config.setAllowCredentials(allowCredentials)__		}_		Long maxAge = other.getMaxAge()__		if (maxAge != null) {_			config.setMaxAge(maxAge)__		}_		return config__	};combine,the,supplied,code,cors,configuration,with,this,one,p,properties,of,this,configuration,are,overridden,by,any,non,null,properties,of,the,supplied,one,return,the,combined,code,cors,configuration,or,code,this,configuration,if,the,supplied,configuration,is,code,null;public,cors,configuration,combine,cors,configuration,other,if,other,null,return,this,cors,configuration,config,new,cors,configuration,this,config,set,allowed,origins,combine,this,get,allowed,origins,other,get,allowed,origins,config,set,allowed,methods,combine,this,get,allowed,methods,other,get,allowed,methods,config,set,allowed,headers,combine,this,get,allowed,headers,other,get,allowed,headers,config,set,exposed,headers,combine,this,get,exposed,headers,other,get,exposed,headers,boolean,allow,credentials,other,get,allow,credentials,if,allow,credentials,null,config,set,allow,credentials,allow,credentials,long,max,age,other,get,max,age,if,max,age,null,config,set,max,age,max,age,return,config
CorsConfiguration -> public CorsConfiguration combine(CorsConfiguration other);1436539370;Combine the supplied {@code CorsConfiguration} with this one._<p>Properties of this configuration are overridden by any non-null_properties of the supplied one._@return the combined {@code CorsConfiguration} or {@code this}_configuration if the supplied configuration is {@code null};public CorsConfiguration combine(CorsConfiguration other) {_		if (other == null) {_			return this__		}_		CorsConfiguration config = new CorsConfiguration(this)__		config.setAllowedOrigins(combine(this.getAllowedOrigins(), other.getAllowedOrigins()))__		config.setAllowedMethods(combine(this.getAllowedMethods(), other.getAllowedMethods()))__		config.setAllowedHeaders(combine(this.getAllowedHeaders(), other.getAllowedHeaders()))__		config.setExposedHeaders(combine(this.getExposedHeaders(), other.getExposedHeaders()))__		Boolean allowCredentials = other.getAllowCredentials()__		if (allowCredentials != null) {_			config.setAllowCredentials(allowCredentials)__		}_		Long maxAge = other.getMaxAge()__		if (maxAge != null) {_			config.setMaxAge(maxAge)__		}_		return config__	};combine,the,supplied,code,cors,configuration,with,this,one,p,properties,of,this,configuration,are,overridden,by,any,non,null,properties,of,the,supplied,one,return,the,combined,code,cors,configuration,or,code,this,configuration,if,the,supplied,configuration,is,code,null;public,cors,configuration,combine,cors,configuration,other,if,other,null,return,this,cors,configuration,config,new,cors,configuration,this,config,set,allowed,origins,combine,this,get,allowed,origins,other,get,allowed,origins,config,set,allowed,methods,combine,this,get,allowed,methods,other,get,allowed,methods,config,set,allowed,headers,combine,this,get,allowed,headers,other,get,allowed,headers,config,set,exposed,headers,combine,this,get,exposed,headers,other,get,exposed,headers,boolean,allow,credentials,other,get,allow,credentials,if,allow,credentials,null,config,set,allow,credentials,allow,credentials,long,max,age,other,get,max,age,if,max,age,null,config,set,max,age,max,age,return,config
CorsConfiguration -> public CorsConfiguration combine(CorsConfiguration other);1438251419;Combine the supplied {@code CorsConfiguration} with this one._<p>Properties of this configuration are overridden by any non-null_properties of the supplied one._@return the combined {@code CorsConfiguration} or {@code this}_configuration if the supplied configuration is {@code null};public CorsConfiguration combine(CorsConfiguration other) {_		if (other == null) {_			return this__		}_		CorsConfiguration config = new CorsConfiguration(this)__		config.setAllowedOrigins(combine(this.getAllowedOrigins(), other.getAllowedOrigins()))__		config.setAllowedMethods(combine(this.getAllowedMethods(), other.getAllowedMethods()))__		config.setAllowedHeaders(combine(this.getAllowedHeaders(), other.getAllowedHeaders()))__		config.setExposedHeaders(combine(this.getExposedHeaders(), other.getExposedHeaders()))__		Boolean allowCredentials = other.getAllowCredentials()__		if (allowCredentials != null) {_			config.setAllowCredentials(allowCredentials)__		}_		Long maxAge = other.getMaxAge()__		if (maxAge != null) {_			config.setMaxAge(maxAge)__		}_		return config__	};combine,the,supplied,code,cors,configuration,with,this,one,p,properties,of,this,configuration,are,overridden,by,any,non,null,properties,of,the,supplied,one,return,the,combined,code,cors,configuration,or,code,this,configuration,if,the,supplied,configuration,is,code,null;public,cors,configuration,combine,cors,configuration,other,if,other,null,return,this,cors,configuration,config,new,cors,configuration,this,config,set,allowed,origins,combine,this,get,allowed,origins,other,get,allowed,origins,config,set,allowed,methods,combine,this,get,allowed,methods,other,get,allowed,methods,config,set,allowed,headers,combine,this,get,allowed,headers,other,get,allowed,headers,config,set,exposed,headers,combine,this,get,exposed,headers,other,get,exposed,headers,boolean,allow,credentials,other,get,allow,credentials,if,allow,credentials,null,config,set,allow,credentials,allow,credentials,long,max,age,other,get,max,age,if,max,age,null,config,set,max,age,max,age,return,config
CorsConfiguration -> public CorsConfiguration combine(CorsConfiguration other);1447321232;Combine the supplied {@code CorsConfiguration} with this one._<p>Properties of this configuration are overridden by any non-null_properties of the supplied one._@return the combined {@code CorsConfiguration} or {@code this}_configuration if the supplied configuration is {@code null};public CorsConfiguration combine(CorsConfiguration other) {_		if (other == null) {_			return this__		}_		CorsConfiguration config = new CorsConfiguration(this)__		config.setAllowedOrigins(combine(this.getAllowedOrigins(), other.getAllowedOrigins()))__		config.setAllowedMethods(combine(this.getAllowedMethods(), other.getAllowedMethods()))__		config.setAllowedHeaders(combine(this.getAllowedHeaders(), other.getAllowedHeaders()))__		config.setExposedHeaders(combine(this.getExposedHeaders(), other.getExposedHeaders()))__		Boolean allowCredentials = other.getAllowCredentials()__		if (allowCredentials != null) {_			config.setAllowCredentials(allowCredentials)__		}_		Long maxAge = other.getMaxAge()__		if (maxAge != null) {_			config.setMaxAge(maxAge)__		}_		return config__	};combine,the,supplied,code,cors,configuration,with,this,one,p,properties,of,this,configuration,are,overridden,by,any,non,null,properties,of,the,supplied,one,return,the,combined,code,cors,configuration,or,code,this,configuration,if,the,supplied,configuration,is,code,null;public,cors,configuration,combine,cors,configuration,other,if,other,null,return,this,cors,configuration,config,new,cors,configuration,this,config,set,allowed,origins,combine,this,get,allowed,origins,other,get,allowed,origins,config,set,allowed,methods,combine,this,get,allowed,methods,other,get,allowed,methods,config,set,allowed,headers,combine,this,get,allowed,headers,other,get,allowed,headers,config,set,exposed,headers,combine,this,get,exposed,headers,other,get,exposed,headers,boolean,allow,credentials,other,get,allow,credentials,if,allow,credentials,null,config,set,allow,credentials,allow,credentials,long,max,age,other,get,max,age,if,max,age,null,config,set,max,age,max,age,return,config
CorsConfiguration -> public CorsConfiguration combine(CorsConfiguration other);1449660404;Combine the supplied {@code CorsConfiguration} with this one._<p>Properties of this configuration are overridden by any non-null_properties of the supplied one._@return the combined {@code CorsConfiguration} or {@code this}_configuration if the supplied configuration is {@code null};public CorsConfiguration combine(CorsConfiguration other) {_		if (other == null) {_			return this__		}_		CorsConfiguration config = new CorsConfiguration(this)__		config.setAllowedOrigins(combine(this.getAllowedOrigins(), other.getAllowedOrigins()))__		config.setAllowedMethods(combine(this.getAllowedMethods(), other.getAllowedMethods()))__		config.setAllowedHeaders(combine(this.getAllowedHeaders(), other.getAllowedHeaders()))__		config.setExposedHeaders(combine(this.getExposedHeaders(), other.getExposedHeaders()))__		Boolean allowCredentials = other.getAllowCredentials()__		if (allowCredentials != null) {_			config.setAllowCredentials(allowCredentials)__		}_		Long maxAge = other.getMaxAge()__		if (maxAge != null) {_			config.setMaxAge(maxAge)__		}_		return config__	};combine,the,supplied,code,cors,configuration,with,this,one,p,properties,of,this,configuration,are,overridden,by,any,non,null,properties,of,the,supplied,one,return,the,combined,code,cors,configuration,or,code,this,configuration,if,the,supplied,configuration,is,code,null;public,cors,configuration,combine,cors,configuration,other,if,other,null,return,this,cors,configuration,config,new,cors,configuration,this,config,set,allowed,origins,combine,this,get,allowed,origins,other,get,allowed,origins,config,set,allowed,methods,combine,this,get,allowed,methods,other,get,allowed,methods,config,set,allowed,headers,combine,this,get,allowed,headers,other,get,allowed,headers,config,set,exposed,headers,combine,this,get,exposed,headers,other,get,exposed,headers,boolean,allow,credentials,other,get,allow,credentials,if,allow,credentials,null,config,set,allow,credentials,allow,credentials,long,max,age,other,get,max,age,if,max,age,null,config,set,max,age,max,age,return,config
CorsConfiguration -> public CorsConfiguration combine(CorsConfiguration other);1453684721;Combine the supplied {@code CorsConfiguration} with this one._<p>Properties of this configuration are overridden by any non-null_properties of the supplied one._@return the combined {@code CorsConfiguration} or {@code this}_configuration if the supplied configuration is {@code null};public CorsConfiguration combine(CorsConfiguration other) {_		if (other == null) {_			return this__		}_		CorsConfiguration config = new CorsConfiguration(this)__		config.setAllowedOrigins(combine(this.getAllowedOrigins(), other.getAllowedOrigins()))__		config.setAllowedMethods(combine(this.getAllowedMethods(), other.getAllowedMethods()))__		config.setAllowedHeaders(combine(this.getAllowedHeaders(), other.getAllowedHeaders()))__		config.setExposedHeaders(combine(this.getExposedHeaders(), other.getExposedHeaders()))__		Boolean allowCredentials = other.getAllowCredentials()__		if (allowCredentials != null) {_			config.setAllowCredentials(allowCredentials)__		}_		Long maxAge = other.getMaxAge()__		if (maxAge != null) {_			config.setMaxAge(maxAge)__		}_		return config__	};combine,the,supplied,code,cors,configuration,with,this,one,p,properties,of,this,configuration,are,overridden,by,any,non,null,properties,of,the,supplied,one,return,the,combined,code,cors,configuration,or,code,this,configuration,if,the,supplied,configuration,is,code,null;public,cors,configuration,combine,cors,configuration,other,if,other,null,return,this,cors,configuration,config,new,cors,configuration,this,config,set,allowed,origins,combine,this,get,allowed,origins,other,get,allowed,origins,config,set,allowed,methods,combine,this,get,allowed,methods,other,get,allowed,methods,config,set,allowed,headers,combine,this,get,allowed,headers,other,get,allowed,headers,config,set,exposed,headers,combine,this,get,exposed,headers,other,get,exposed,headers,boolean,allow,credentials,other,get,allow,credentials,if,allow,credentials,null,config,set,allow,credentials,allow,credentials,long,max,age,other,get,max,age,if,max,age,null,config,set,max,age,max,age,return,config
CorsConfiguration -> public CorsConfiguration combine(CorsConfiguration other);1467730834;Combine the supplied {@code CorsConfiguration} with this one._<p>Properties of this configuration are overridden by any non-null_properties of the supplied one._@return the combined {@code CorsConfiguration} or {@code this}_configuration if the supplied configuration is {@code null};public CorsConfiguration combine(CorsConfiguration other) {_		if (other == null) {_			return this__		}_		CorsConfiguration config = new CorsConfiguration(this)__		config.setAllowedOrigins(combine(this.getAllowedOrigins(), other.getAllowedOrigins()))__		config.setAllowedMethods(combine(this.getAllowedMethods(), other.getAllowedMethods()))__		config.setAllowedHeaders(combine(this.getAllowedHeaders(), other.getAllowedHeaders()))__		config.setExposedHeaders(combine(this.getExposedHeaders(), other.getExposedHeaders()))__		Boolean allowCredentials = other.getAllowCredentials()__		if (allowCredentials != null) {_			config.setAllowCredentials(allowCredentials)__		}_		Long maxAge = other.getMaxAge()__		if (maxAge != null) {_			config.setMaxAge(maxAge)__		}_		return config__	};combine,the,supplied,code,cors,configuration,with,this,one,p,properties,of,this,configuration,are,overridden,by,any,non,null,properties,of,the,supplied,one,return,the,combined,code,cors,configuration,or,code,this,configuration,if,the,supplied,configuration,is,code,null;public,cors,configuration,combine,cors,configuration,other,if,other,null,return,this,cors,configuration,config,new,cors,configuration,this,config,set,allowed,origins,combine,this,get,allowed,origins,other,get,allowed,origins,config,set,allowed,methods,combine,this,get,allowed,methods,other,get,allowed,methods,config,set,allowed,headers,combine,this,get,allowed,headers,other,get,allowed,headers,config,set,exposed,headers,combine,this,get,exposed,headers,other,get,exposed,headers,boolean,allow,credentials,other,get,allow,credentials,if,allow,credentials,null,config,set,allow,credentials,allow,credentials,long,max,age,other,get,max,age,if,max,age,null,config,set,max,age,max,age,return,config
CorsConfiguration -> public CorsConfiguration combine(CorsConfiguration other);1472031618;Combine the supplied {@code CorsConfiguration} with this one._<p>Properties of this configuration are overridden by any non-null_properties of the supplied one._@return the combined {@code CorsConfiguration} or {@code this}_configuration if the supplied configuration is {@code null};public CorsConfiguration combine(CorsConfiguration other) {_		if (other == null) {_			return this__		}_		CorsConfiguration config = new CorsConfiguration(this)__		config.setAllowedOrigins(combine(getAllowedOrigins(), other.getAllowedOrigins()))__		config.setAllowedMethods(combine(getAllowedMethods(), other.getAllowedMethods()))__		config.setAllowedHeaders(combine(getAllowedHeaders(), other.getAllowedHeaders()))__		config.setExposedHeaders(combine(getExposedHeaders(), other.getExposedHeaders()))__		Boolean allowCredentials = other.getAllowCredentials()__		if (allowCredentials != null) {_			config.setAllowCredentials(allowCredentials)__		}_		Long maxAge = other.getMaxAge()__		if (maxAge != null) {_			config.setMaxAge(maxAge)__		}_		return config__	};combine,the,supplied,code,cors,configuration,with,this,one,p,properties,of,this,configuration,are,overridden,by,any,non,null,properties,of,the,supplied,one,return,the,combined,code,cors,configuration,or,code,this,configuration,if,the,supplied,configuration,is,code,null;public,cors,configuration,combine,cors,configuration,other,if,other,null,return,this,cors,configuration,config,new,cors,configuration,this,config,set,allowed,origins,combine,get,allowed,origins,other,get,allowed,origins,config,set,allowed,methods,combine,get,allowed,methods,other,get,allowed,methods,config,set,allowed,headers,combine,get,allowed,headers,other,get,allowed,headers,config,set,exposed,headers,combine,get,exposed,headers,other,get,exposed,headers,boolean,allow,credentials,other,get,allow,credentials,if,allow,credentials,null,config,set,allow,credentials,allow,credentials,long,max,age,other,get,max,age,if,max,age,null,config,set,max,age,max,age,return,config
CorsConfiguration -> public CorsConfiguration combine(CorsConfiguration other);1476175114;Combine the supplied {@code CorsConfiguration} with this one._<p>Properties of this configuration are overridden by any non-null_properties of the supplied one._@return the combined {@code CorsConfiguration} or {@code this}_configuration if the supplied configuration is {@code null};public CorsConfiguration combine(CorsConfiguration other) {_		if (other == null) {_			return this__		}_		CorsConfiguration config = new CorsConfiguration(this)__		config.setAllowedOrigins(combine(getAllowedOrigins(), other.getAllowedOrigins()))__		config.setAllowedMethods(combine(getAllowedMethods(), other.getAllowedMethods()))__		config.setAllowedHeaders(combine(getAllowedHeaders(), other.getAllowedHeaders()))__		config.setExposedHeaders(combine(getExposedHeaders(), other.getExposedHeaders()))__		Boolean allowCredentials = other.getAllowCredentials()__		if (allowCredentials != null) {_			config.setAllowCredentials(allowCredentials)__		}_		Long maxAge = other.getMaxAge()__		if (maxAge != null) {_			config.setMaxAge(maxAge)__		}_		return config__	};combine,the,supplied,code,cors,configuration,with,this,one,p,properties,of,this,configuration,are,overridden,by,any,non,null,properties,of,the,supplied,one,return,the,combined,code,cors,configuration,or,code,this,configuration,if,the,supplied,configuration,is,code,null;public,cors,configuration,combine,cors,configuration,other,if,other,null,return,this,cors,configuration,config,new,cors,configuration,this,config,set,allowed,origins,combine,get,allowed,origins,other,get,allowed,origins,config,set,allowed,methods,combine,get,allowed,methods,other,get,allowed,methods,config,set,allowed,headers,combine,get,allowed,headers,other,get,allowed,headers,config,set,exposed,headers,combine,get,exposed,headers,other,get,exposed,headers,boolean,allow,credentials,other,get,allow,credentials,if,allow,credentials,null,config,set,allow,credentials,allow,credentials,long,max,age,other,get,max,age,if,max,age,null,config,set,max,age,max,age,return,config
CorsConfiguration -> public CorsConfiguration combine(CorsConfiguration other);1476909116;Combine the supplied {@code CorsConfiguration} with this one._<p>Properties of this configuration are overridden by any non-null_properties of the supplied one._@return the combined {@code CorsConfiguration} or {@code this}_configuration if the supplied configuration is {@code null};public CorsConfiguration combine(CorsConfiguration other) {_		if (other == null) {_			return this__		}_		CorsConfiguration config = new CorsConfiguration(this)__		config.setAllowedOrigins(combine(getAllowedOrigins(), other.getAllowedOrigins()))__		config.setAllowedMethods(combine(getAllowedMethods(), other.getAllowedMethods()))__		config.setAllowedHeaders(combine(getAllowedHeaders(), other.getAllowedHeaders()))__		config.setExposedHeaders(combine(getExposedHeaders(), other.getExposedHeaders()))__		Boolean allowCredentials = other.getAllowCredentials()__		if (allowCredentials != null) {_			config.setAllowCredentials(allowCredentials)__		}_		Long maxAge = other.getMaxAge()__		if (maxAge != null) {_			config.setMaxAge(maxAge)__		}_		return config__	};combine,the,supplied,code,cors,configuration,with,this,one,p,properties,of,this,configuration,are,overridden,by,any,non,null,properties,of,the,supplied,one,return,the,combined,code,cors,configuration,or,code,this,configuration,if,the,supplied,configuration,is,code,null;public,cors,configuration,combine,cors,configuration,other,if,other,null,return,this,cors,configuration,config,new,cors,configuration,this,config,set,allowed,origins,combine,get,allowed,origins,other,get,allowed,origins,config,set,allowed,methods,combine,get,allowed,methods,other,get,allowed,methods,config,set,allowed,headers,combine,get,allowed,headers,other,get,allowed,headers,config,set,exposed,headers,combine,get,exposed,headers,other,get,exposed,headers,boolean,allow,credentials,other,get,allow,credentials,if,allow,credentials,null,config,set,allow,credentials,allow,credentials,long,max,age,other,get,max,age,if,max,age,null,config,set,max,age,max,age,return,config
CorsConfiguration -> public CorsConfiguration combine(CorsConfiguration other);1487713300;Combine the supplied {@code CorsConfiguration} with this one._<p>Properties of this configuration are overridden by any non-null_properties of the supplied one._@return the combined {@code CorsConfiguration} or {@code this}_configuration if the supplied configuration is {@code null};public CorsConfiguration combine(CorsConfiguration other) {_		if (other == null) {_			return this__		}_		CorsConfiguration config = new CorsConfiguration(this)__		config.setAllowedOrigins(combine(getAllowedOrigins(), other.getAllowedOrigins()))__		config.setAllowedMethods(combine(getAllowedMethods(), other.getAllowedMethods()))__		config.setAllowedHeaders(combine(getAllowedHeaders(), other.getAllowedHeaders()))__		config.setExposedHeaders(combine(getExposedHeaders(), other.getExposedHeaders()))__		Boolean allowCredentials = other.getAllowCredentials()__		if (allowCredentials != null) {_			config.setAllowCredentials(allowCredentials)__		}_		Long maxAge = other.getMaxAge()__		if (maxAge != null) {_			config.setMaxAge(maxAge)__		}_		return config__	};combine,the,supplied,code,cors,configuration,with,this,one,p,properties,of,this,configuration,are,overridden,by,any,non,null,properties,of,the,supplied,one,return,the,combined,code,cors,configuration,or,code,this,configuration,if,the,supplied,configuration,is,code,null;public,cors,configuration,combine,cors,configuration,other,if,other,null,return,this,cors,configuration,config,new,cors,configuration,this,config,set,allowed,origins,combine,get,allowed,origins,other,get,allowed,origins,config,set,allowed,methods,combine,get,allowed,methods,other,get,allowed,methods,config,set,allowed,headers,combine,get,allowed,headers,other,get,allowed,headers,config,set,exposed,headers,combine,get,exposed,headers,other,get,exposed,headers,boolean,allow,credentials,other,get,allow,credentials,if,allow,credentials,null,config,set,allow,credentials,allow,credentials,long,max,age,other,get,max,age,if,max,age,null,config,set,max,age,max,age,return,config
CorsConfiguration -> public void setExposedHeaders(List<String> exposedHeaders);1427983931;Set a list of response headers other than simple headers that the resource might use_and can be exposed. Simple response headers are: Cache-Control, Content-Language,_Content-Type, Expires, Last-Modified, Pragma.;public void setExposedHeaders(List<String> exposedHeaders) {_		this.exposedHeaders = exposedHeaders__	};set,a,list,of,response,headers,other,than,simple,headers,that,the,resource,might,use,and,can,be,exposed,simple,response,headers,are,cache,control,content,language,content,type,expires,last,modified,pragma;public,void,set,exposed,headers,list,string,exposed,headers,this,exposed,headers,exposed,headers
CorsConfiguration -> public void setExposedHeaders(List<String> exposedHeaders);1428073011;Set a list of response headers other than simple headers that the resource might use_and can be exposed. Simple response headers are: Cache-Control, Content-Language,_Content-Type, Expires, Last-Modified, Pragma.;public void setExposedHeaders(List<String> exposedHeaders) {_		this.exposedHeaders = exposedHeaders__	};set,a,list,of,response,headers,other,than,simple,headers,that,the,resource,might,use,and,can,be,exposed,simple,response,headers,are,cache,control,content,language,content,type,expires,last,modified,pragma;public,void,set,exposed,headers,list,string,exposed,headers,this,exposed,headers,exposed,headers
CorsConfiguration -> public void setExposedHeaders(List<String> exposedHeaders);1430811101;Configure the list of response headers other than simple headers (i.e._Cache-Control, Content-Language, Content-Type, Expires, Last-Modified,_Pragma) that an actual response might have and can be exposed._<p>By default this is not set.;public void setExposedHeaders(List<String> exposedHeaders) {_		this.exposedHeaders = exposedHeaders__	};configure,the,list,of,response,headers,other,than,simple,headers,i,e,cache,control,content,language,content,type,expires,last,modified,pragma,that,an,actual,response,might,have,and,can,be,exposed,p,by,default,this,is,not,set;public,void,set,exposed,headers,list,string,exposed,headers,this,exposed,headers,exposed,headers
CorsConfiguration -> public void setExposedHeaders(List<String> exposedHeaders);1431730371;Configure the list of response headers other than simple headers (i.e._Cache-Control, Content-Language, Content-Type, Expires, Last-Modified,_Pragma) that an actual response might have and can be exposed._<p>By default this is not set.;public void setExposedHeaders(List<String> exposedHeaders) {_		if (exposedHeaders != null && exposedHeaders.contains("*")) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		this.exposedHeaders = exposedHeaders__	};configure,the,list,of,response,headers,other,than,simple,headers,i,e,cache,control,content,language,content,type,expires,last,modified,pragma,that,an,actual,response,might,have,and,can,be,exposed,p,by,default,this,is,not,set;public,void,set,exposed,headers,list,string,exposed,headers,if,exposed,headers,null,exposed,headers,contains,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,this,exposed,headers,exposed,headers
CorsConfiguration -> public void setExposedHeaders(List<String> exposedHeaders);1432857824;Configure the list of response headers other than simple headers (i.e._Cache-Control, Content-Language, Content-Type, Expires, Last-Modified,_Pragma) that an actual response might have and can be exposed._<p>By default this is not set.;public void setExposedHeaders(List<String> exposedHeaders) {_		if (exposedHeaders != null && exposedHeaders.contains("*")) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		this.exposedHeaders = exposedHeaders__	};configure,the,list,of,response,headers,other,than,simple,headers,i,e,cache,control,content,language,content,type,expires,last,modified,pragma,that,an,actual,response,might,have,and,can,be,exposed,p,by,default,this,is,not,set;public,void,set,exposed,headers,list,string,exposed,headers,if,exposed,headers,null,exposed,headers,contains,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,this,exposed,headers,exposed,headers
CorsConfiguration -> public void setExposedHeaders(List<String> exposedHeaders);1433088837;Configure the list of response headers other than simple headers (i.e._Cache-Control, Content-Language, Content-Type, Expires, Last-Modified,_Pragma) that an actual response might have and can be exposed._<p>By default this is not set.;public void setExposedHeaders(List<String> exposedHeaders) {_		if (exposedHeaders != null && exposedHeaders.contains("*")) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		this.exposedHeaders = exposedHeaders__	};configure,the,list,of,response,headers,other,than,simple,headers,i,e,cache,control,content,language,content,type,expires,last,modified,pragma,that,an,actual,response,might,have,and,can,be,exposed,p,by,default,this,is,not,set;public,void,set,exposed,headers,list,string,exposed,headers,if,exposed,headers,null,exposed,headers,contains,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,this,exposed,headers,exposed,headers
CorsConfiguration -> public void setExposedHeaders(List<String> exposedHeaders);1434809538;Set the list of response headers other than simple headers (i.e._{@code Cache-Control}, {@code Content-Language}, {@code Content-Type},_{@code Expires}, {@code Last-Modified}, or {@code Pragma}) that an_actual response might have and can be exposed._<p>Note that {@code "*"} is not a valid exposed header value._<p>By default this is not set.;public void setExposedHeaders(List<String> exposedHeaders) {_		if (exposedHeaders != null && exposedHeaders.contains(ALL)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		this.exposedHeaders = (exposedHeaders == null ? null : new ArrayList<String>(exposedHeaders))__	};set,the,list,of,response,headers,other,than,simple,headers,i,e,code,cache,control,code,content,language,code,content,type,code,expires,code,last,modified,or,code,pragma,that,an,actual,response,might,have,and,can,be,exposed,p,note,that,code,is,not,a,valid,exposed,header,value,p,by,default,this,is,not,set;public,void,set,exposed,headers,list,string,exposed,headers,if,exposed,headers,null,exposed,headers,contains,all,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,this,exposed,headers,exposed,headers,null,null,new,array,list,string,exposed,headers
CorsConfiguration -> public void setExposedHeaders(List<String> exposedHeaders);1436539370;Set the list of response headers other than simple headers (i.e._{@code Cache-Control}, {@code Content-Language}, {@code Content-Type},_{@code Expires}, {@code Last-Modified}, or {@code Pragma}) that an_actual response might have and can be exposed._<p>Note that {@code "*"} is not a valid exposed header value._<p>By default this is not set.;public void setExposedHeaders(List<String> exposedHeaders) {_		if (exposedHeaders != null && exposedHeaders.contains(ALL)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		this.exposedHeaders = (exposedHeaders == null ? null : new ArrayList<String>(exposedHeaders))__	};set,the,list,of,response,headers,other,than,simple,headers,i,e,code,cache,control,code,content,language,code,content,type,code,expires,code,last,modified,or,code,pragma,that,an,actual,response,might,have,and,can,be,exposed,p,note,that,code,is,not,a,valid,exposed,header,value,p,by,default,this,is,not,set;public,void,set,exposed,headers,list,string,exposed,headers,if,exposed,headers,null,exposed,headers,contains,all,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,this,exposed,headers,exposed,headers,null,null,new,array,list,string,exposed,headers
CorsConfiguration -> public void setExposedHeaders(List<String> exposedHeaders);1438251419;Set the list of response headers other than simple headers (i.e._{@code Cache-Control}, {@code Content-Language}, {@code Content-Type},_{@code Expires}, {@code Last-Modified}, or {@code Pragma}) that an_actual response might have and can be exposed._<p>Note that {@code "*"} is not a valid exposed header value._<p>By default this is not set.;public void setExposedHeaders(List<String> exposedHeaders) {_		if (exposedHeaders != null && exposedHeaders.contains(ALL)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		this.exposedHeaders = (exposedHeaders == null ? null : new ArrayList<String>(exposedHeaders))__	};set,the,list,of,response,headers,other,than,simple,headers,i,e,code,cache,control,code,content,language,code,content,type,code,expires,code,last,modified,or,code,pragma,that,an,actual,response,might,have,and,can,be,exposed,p,note,that,code,is,not,a,valid,exposed,header,value,p,by,default,this,is,not,set;public,void,set,exposed,headers,list,string,exposed,headers,if,exposed,headers,null,exposed,headers,contains,all,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,this,exposed,headers,exposed,headers,null,null,new,array,list,string,exposed,headers
CorsConfiguration -> public void setExposedHeaders(List<String> exposedHeaders);1447321232;Set the list of response headers other than simple headers (i.e._{@code Cache-Control}, {@code Content-Language}, {@code Content-Type},_{@code Expires}, {@code Last-Modified}, or {@code Pragma}) that an_actual response might have and can be exposed._<p>Note that {@code "*"} is not a valid exposed header value._<p>By default this is not set.;public void setExposedHeaders(List<String> exposedHeaders) {_		if (exposedHeaders != null && exposedHeaders.contains(ALL)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		this.exposedHeaders = (exposedHeaders == null ? null : new ArrayList<String>(exposedHeaders))__	};set,the,list,of,response,headers,other,than,simple,headers,i,e,code,cache,control,code,content,language,code,content,type,code,expires,code,last,modified,or,code,pragma,that,an,actual,response,might,have,and,can,be,exposed,p,note,that,code,is,not,a,valid,exposed,header,value,p,by,default,this,is,not,set;public,void,set,exposed,headers,list,string,exposed,headers,if,exposed,headers,null,exposed,headers,contains,all,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,this,exposed,headers,exposed,headers,null,null,new,array,list,string,exposed,headers
CorsConfiguration -> public void setExposedHeaders(List<String> exposedHeaders);1449660404;Set the list of response headers other than simple headers (i.e._{@code Cache-Control}, {@code Content-Language}, {@code Content-Type},_{@code Expires}, {@code Last-Modified}, or {@code Pragma}) that an_actual response might have and can be exposed._<p>Note that {@code "*"} is not a valid exposed header value._<p>By default this is not set.;public void setExposedHeaders(List<String> exposedHeaders) {_		if (exposedHeaders != null && exposedHeaders.contains(ALL)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		this.exposedHeaders = (exposedHeaders == null ? null : new ArrayList<String>(exposedHeaders))__	};set,the,list,of,response,headers,other,than,simple,headers,i,e,code,cache,control,code,content,language,code,content,type,code,expires,code,last,modified,or,code,pragma,that,an,actual,response,might,have,and,can,be,exposed,p,note,that,code,is,not,a,valid,exposed,header,value,p,by,default,this,is,not,set;public,void,set,exposed,headers,list,string,exposed,headers,if,exposed,headers,null,exposed,headers,contains,all,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,this,exposed,headers,exposed,headers,null,null,new,array,list,string,exposed,headers
CorsConfiguration -> public void setExposedHeaders(List<String> exposedHeaders);1453684721;Set the list of response headers other than simple headers (i.e._{@code Cache-Control}, {@code Content-Language}, {@code Content-Type},_{@code Expires}, {@code Last-Modified}, or {@code Pragma}) that an_actual response might have and can be exposed._<p>Note that {@code "*"} is not a valid exposed header value._<p>By default this is not set.;public void setExposedHeaders(List<String> exposedHeaders) {_		if (exposedHeaders != null && exposedHeaders.contains(ALL)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		this.exposedHeaders = (exposedHeaders == null ? null : new ArrayList<String>(exposedHeaders))__	};set,the,list,of,response,headers,other,than,simple,headers,i,e,code,cache,control,code,content,language,code,content,type,code,expires,code,last,modified,or,code,pragma,that,an,actual,response,might,have,and,can,be,exposed,p,note,that,code,is,not,a,valid,exposed,header,value,p,by,default,this,is,not,set;public,void,set,exposed,headers,list,string,exposed,headers,if,exposed,headers,null,exposed,headers,contains,all,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,this,exposed,headers,exposed,headers,null,null,new,array,list,string,exposed,headers
CorsConfiguration -> public void setExposedHeaders(List<String> exposedHeaders);1467730834;Set the list of response headers other than simple headers (i.e._{@code Cache-Control}, {@code Content-Language}, {@code Content-Type},_{@code Expires}, {@code Last-Modified}, or {@code Pragma}) that an_actual response might have and can be exposed._<p>Note that {@code "*"} is not a valid exposed header value._<p>By default this is not set.;public void setExposedHeaders(List<String> exposedHeaders) {_		if (exposedHeaders != null && exposedHeaders.contains(ALL)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		this.exposedHeaders = (exposedHeaders == null ? null : new ArrayList<>(exposedHeaders))__	};set,the,list,of,response,headers,other,than,simple,headers,i,e,code,cache,control,code,content,language,code,content,type,code,expires,code,last,modified,or,code,pragma,that,an,actual,response,might,have,and,can,be,exposed,p,note,that,code,is,not,a,valid,exposed,header,value,p,by,default,this,is,not,set;public,void,set,exposed,headers,list,string,exposed,headers,if,exposed,headers,null,exposed,headers,contains,all,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,this,exposed,headers,exposed,headers,null,null,new,array,list,exposed,headers
CorsConfiguration -> public void setExposedHeaders(List<String> exposedHeaders);1472031618;Set the list of response headers other than simple headers (i.e._{@code Cache-Control}, {@code Content-Language}, {@code Content-Type},_{@code Expires}, {@code Last-Modified}, or {@code Pragma}) that an_actual response might have and can be exposed._<p>Note that {@code "*"} is not a valid exposed header value._<p>By default this is not set.;public void setExposedHeaders(List<String> exposedHeaders) {_		if (exposedHeaders != null && exposedHeaders.contains(ALL)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		this.exposedHeaders = (exposedHeaders != null ? new ArrayList<>(exposedHeaders) : null)__	};set,the,list,of,response,headers,other,than,simple,headers,i,e,code,cache,control,code,content,language,code,content,type,code,expires,code,last,modified,or,code,pragma,that,an,actual,response,might,have,and,can,be,exposed,p,note,that,code,is,not,a,valid,exposed,header,value,p,by,default,this,is,not,set;public,void,set,exposed,headers,list,string,exposed,headers,if,exposed,headers,null,exposed,headers,contains,all,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,this,exposed,headers,exposed,headers,null,new,array,list,exposed,headers,null
CorsConfiguration -> public void setExposedHeaders(List<String> exposedHeaders);1476175114;Set the list of response headers other than simple headers (i.e._{@code Cache-Control}, {@code Content-Language}, {@code Content-Type},_{@code Expires}, {@code Last-Modified}, or {@code Pragma}) that an_actual response might have and can be exposed._<p>Note that {@code "*"} is not a valid exposed header value._<p>By default this is not set.;public void setExposedHeaders(List<String> exposedHeaders) {_		if (exposedHeaders != null && exposedHeaders.contains(ALL)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		this.exposedHeaders = (exposedHeaders != null ? new ArrayList<>(exposedHeaders) : null)__	};set,the,list,of,response,headers,other,than,simple,headers,i,e,code,cache,control,code,content,language,code,content,type,code,expires,code,last,modified,or,code,pragma,that,an,actual,response,might,have,and,can,be,exposed,p,note,that,code,is,not,a,valid,exposed,header,value,p,by,default,this,is,not,set;public,void,set,exposed,headers,list,string,exposed,headers,if,exposed,headers,null,exposed,headers,contains,all,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,this,exposed,headers,exposed,headers,null,new,array,list,exposed,headers,null
CorsConfiguration -> public void setExposedHeaders(List<String> exposedHeaders);1476909116;Set the list of response headers other than simple headers (i.e._{@code Cache-Control}, {@code Content-Language}, {@code Content-Type},_{@code Expires}, {@code Last-Modified}, or {@code Pragma}) that an_actual response might have and can be exposed._<p>Note that {@code "*"} is not a valid exposed header value._<p>By default this is not set.;public void setExposedHeaders(List<String> exposedHeaders) {_		if (exposedHeaders != null && exposedHeaders.contains(ALL)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		this.exposedHeaders = (exposedHeaders != null ? new ArrayList<>(exposedHeaders) : null)__	};set,the,list,of,response,headers,other,than,simple,headers,i,e,code,cache,control,code,content,language,code,content,type,code,expires,code,last,modified,or,code,pragma,that,an,actual,response,might,have,and,can,be,exposed,p,note,that,code,is,not,a,valid,exposed,header,value,p,by,default,this,is,not,set;public,void,set,exposed,headers,list,string,exposed,headers,if,exposed,headers,null,exposed,headers,contains,all,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,this,exposed,headers,exposed,headers,null,new,array,list,exposed,headers,null
CorsConfiguration -> public void setExposedHeaders(List<String> exposedHeaders);1487713300;Set the list of response headers other than simple headers (i.e._{@code Cache-Control}, {@code Content-Language}, {@code Content-Type},_{@code Expires}, {@code Last-Modified}, or {@code Pragma}) that an_actual response might have and can be exposed._<p>Note that {@code "*"} is not a valid exposed header value._<p>By default this is not set.;public void setExposedHeaders(List<String> exposedHeaders) {_		if (exposedHeaders != null && exposedHeaders.contains(ALL)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		this.exposedHeaders = (exposedHeaders != null ? new ArrayList<>(exposedHeaders) : null)__	};set,the,list,of,response,headers,other,than,simple,headers,i,e,code,cache,control,code,content,language,code,content,type,code,expires,code,last,modified,or,code,pragma,that,an,actual,response,might,have,and,can,be,exposed,p,note,that,code,is,not,a,valid,exposed,header,value,p,by,default,this,is,not,set;public,void,set,exposed,headers,list,string,exposed,headers,if,exposed,headers,null,exposed,headers,contains,all,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,this,exposed,headers,exposed,headers,null,new,array,list,exposed,headers,null
CorsConfiguration -> public void setExposedHeaders(List<String> exposedHeaders);1495868221;Set the list of response headers other than simple headers (i.e._{@code Cache-Control}, {@code Content-Language}, {@code Content-Type},_{@code Expires}, {@code Last-Modified}, or {@code Pragma}) that an_actual response might have and can be exposed._<p>Note that {@code "*"} is not a valid exposed header value._<p>By default this is not set.;public void setExposedHeaders(List<String> exposedHeaders) {_		if (exposedHeaders != null && exposedHeaders.contains(ALL)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		this.exposedHeaders = (exposedHeaders != null ? new ArrayList<>(exposedHeaders) : null)__	};set,the,list,of,response,headers,other,than,simple,headers,i,e,code,cache,control,code,content,language,code,content,type,code,expires,code,last,modified,or,code,pragma,that,an,actual,response,might,have,and,can,be,exposed,p,note,that,code,is,not,a,valid,exposed,header,value,p,by,default,this,is,not,set;public,void,set,exposed,headers,list,string,exposed,headers,if,exposed,headers,null,exposed,headers,contains,all,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,this,exposed,headers,exposed,headers,null,new,array,list,exposed,headers,null
CorsConfiguration -> public void addAllowedMethod(HttpMethod method);1434809538;Add an HTTP method to allow.;public void addAllowedMethod(HttpMethod method) {_		if (method != null) {_			addAllowedMethod(method.name())__		}_	};add,an,http,method,to,allow;public,void,add,allowed,method,http,method,method,if,method,null,add,allowed,method,method,name
CorsConfiguration -> public void addAllowedMethod(HttpMethod method);1436539370;Add an HTTP method to allow.;public void addAllowedMethod(HttpMethod method) {_		if (method != null) {_			addAllowedMethod(method.name())__		}_	};add,an,http,method,to,allow;public,void,add,allowed,method,http,method,method,if,method,null,add,allowed,method,method,name
CorsConfiguration -> public void addAllowedMethod(HttpMethod method);1438251419;Add an HTTP method to allow.;public void addAllowedMethod(HttpMethod method) {_		if (method != null) {_			addAllowedMethod(method.name())__		}_	};add,an,http,method,to,allow;public,void,add,allowed,method,http,method,method,if,method,null,add,allowed,method,method,name
CorsConfiguration -> public void addAllowedMethod(HttpMethod method);1447321232;Add an HTTP method to allow.;public void addAllowedMethod(HttpMethod method) {_		if (method != null) {_			addAllowedMethod(method.name())__		}_	};add,an,http,method,to,allow;public,void,add,allowed,method,http,method,method,if,method,null,add,allowed,method,method,name
CorsConfiguration -> public void addAllowedMethod(HttpMethod method);1449660404;Add an HTTP method to allow.;public void addAllowedMethod(HttpMethod method) {_		if (method != null) {_			addAllowedMethod(method.name())__		}_	};add,an,http,method,to,allow;public,void,add,allowed,method,http,method,method,if,method,null,add,allowed,method,method,name
CorsConfiguration -> public void addAllowedMethod(HttpMethod method);1453684721;Add an HTTP method to allow.;public void addAllowedMethod(HttpMethod method) {_		if (method != null) {_			addAllowedMethod(method.name())__		}_	};add,an,http,method,to,allow;public,void,add,allowed,method,http,method,method,if,method,null,add,allowed,method,method,name
CorsConfiguration -> public void addAllowedMethod(HttpMethod method);1467730834;Add an HTTP method to allow.;public void addAllowedMethod(HttpMethod method) {_		if (method != null) {_			addAllowedMethod(method.name())__		}_	};add,an,http,method,to,allow;public,void,add,allowed,method,http,method,method,if,method,null,add,allowed,method,method,name
CorsConfiguration -> public void addAllowedMethod(HttpMethod method);1472031618;Add an HTTP method to allow.;public void addAllowedMethod(HttpMethod method) {_		if (method != null) {_			addAllowedMethod(method.name())__		}_	};add,an,http,method,to,allow;public,void,add,allowed,method,http,method,method,if,method,null,add,allowed,method,method,name
CorsConfiguration -> public void addAllowedMethod(HttpMethod method);1476175114;Add an HTTP method to allow.;public void addAllowedMethod(HttpMethod method) {_		if (method != null) {_			addAllowedMethod(method.name())__		}_	};add,an,http,method,to,allow;public,void,add,allowed,method,http,method,method,if,method,null,add,allowed,method,method,name
CorsConfiguration -> public void addAllowedMethod(HttpMethod method);1476909116;Add an HTTP method to allow.;public void addAllowedMethod(HttpMethod method) {_		if (method != null) {_			addAllowedMethod(method.name())__		}_	};add,an,http,method,to,allow;public,void,add,allowed,method,http,method,method,if,method,null,add,allowed,method,method,name
CorsConfiguration -> public void addAllowedMethod(HttpMethod method);1487713300;Add an HTTP method to allow.;public void addAllowedMethod(HttpMethod method) {_		if (method != null) {_			addAllowedMethod(method.name())__		}_	};add,an,http,method,to,allow;public,void,add,allowed,method,http,method,method,if,method,null,add,allowed,method,method,name
CorsConfiguration -> public void addAllowedMethod(HttpMethod method);1495868221;Add an HTTP method to allow.;public void addAllowedMethod(HttpMethod method) {_		if (method != null) {_			addAllowedMethod(method.name())__		}_	};add,an,http,method,to,allow;public,void,add,allowed,method,http,method,method,if,method,null,add,allowed,method,method,name
CorsConfiguration -> public void addAllowedMethod(HttpMethod method);1496837955;Add an HTTP method to allow.;public void addAllowedMethod(HttpMethod method) {_		addAllowedMethod(method.name())__	};add,an,http,method,to,allow;public,void,add,allowed,method,http,method,method,add,allowed,method,method,name
CorsConfiguration -> public void addAllowedMethod(HttpMethod method);1498780456;Add an HTTP method to allow.;public void addAllowedMethod(HttpMethod method) {_		addAllowedMethod(method.name())__	};add,an,http,method,to,allow;public,void,add,allowed,method,http,method,method,add,allowed,method,method,name
CorsConfiguration -> public void addAllowedMethod(HttpMethod method);1500448076;Add an HTTP method to allow.;public void addAllowedMethod(HttpMethod method) {_		addAllowedMethod(method.name())__	};add,an,http,method,to,allow;public,void,add,allowed,method,http,method,method,add,allowed,method,method,name
CorsConfiguration -> public void addAllowedMethod(HttpMethod method);1511387204;Add an HTTP method to allow.;public void addAllowedMethod(HttpMethod method) {_		addAllowedMethod(method.name())__	};add,an,http,method,to,allow;public,void,add,allowed,method,http,method,method,add,allowed,method,method,name
CorsConfiguration -> public void addAllowedMethod(HttpMethod method);1511925367;Add an HTTP method to allow.;public void addAllowedMethod(HttpMethod method) {_		addAllowedMethod(method.name())__	};add,an,http,method,to,allow;public,void,add,allowed,method,http,method,method,add,allowed,method,method,name
CorsConfiguration -> public void addAllowedMethod(HttpMethod method);1513805881;Add an HTTP method to allow.;public void addAllowedMethod(HttpMethod method) {_		addAllowedMethod(method.name())__	};add,an,http,method,to,allow;public,void,add,allowed,method,http,method,method,add,allowed,method,method,name
CorsConfiguration -> public void addAllowedMethod(HttpMethod method);1522354261;Add an HTTP method to allow.;public void addAllowedMethod(HttpMethod method) {_		addAllowedMethod(method.name())__	};add,an,http,method,to,allow;public,void,add,allowed,method,http,method,method,add,allowed,method,method,name
CorsConfiguration -> @Nullable 	public String checkOrigin(@Nullable String requestOrigin);1496837955;Check the origin of the request against the configured allowed origins._@param requestOrigin the origin to check_@return the origin to use for the response, or {@code null} which_means the request origin is not allowed;@Nullable_	public String checkOrigin(@Nullable String requestOrigin) {_		if (!StringUtils.hasText(requestOrigin)) {_			return null__		}_		if (ObjectUtils.isEmpty(this.allowedOrigins)) {_			return null__		}__		if (this.allowedOrigins.contains(ALL)) {_			if (this.allowCredentials != Boolean.TRUE) {_				return ALL__			}_			else {_				return requestOrigin__			}_		}_		for (String allowedOrigin : this.allowedOrigins) {_			if (requestOrigin.equalsIgnoreCase(allowedOrigin)) {_				return requestOrigin__			}_		}__		return null__	};check,the,origin,of,the,request,against,the,configured,allowed,origins,param,request,origin,the,origin,to,check,return,the,origin,to,use,for,the,response,or,code,null,which,means,the,request,origin,is,not,allowed;nullable,public,string,check,origin,nullable,string,request,origin,if,string,utils,has,text,request,origin,return,null,if,object,utils,is,empty,this,allowed,origins,return,null,if,this,allowed,origins,contains,all,if,this,allow,credentials,boolean,true,return,all,else,return,request,origin,for,string,allowed,origin,this,allowed,origins,if,request,origin,equals,ignore,case,allowed,origin,return,request,origin,return,null
CorsConfiguration -> @Nullable 	public String checkOrigin(@Nullable String requestOrigin);1498780456;Check the origin of the request against the configured allowed origins._@param requestOrigin the origin to check_@return the origin to use for the response, or {@code null} which_means the request origin is not allowed;@Nullable_	public String checkOrigin(@Nullable String requestOrigin) {_		if (!StringUtils.hasText(requestOrigin)) {_			return null__		}_		if (ObjectUtils.isEmpty(this.allowedOrigins)) {_			return null__		}__		if (this.allowedOrigins.contains(ALL)) {_			if (this.allowCredentials != Boolean.TRUE) {_				return ALL__			}_			else {_				return requestOrigin__			}_		}_		for (String allowedOrigin : this.allowedOrigins) {_			if (requestOrigin.equalsIgnoreCase(allowedOrigin)) {_				return requestOrigin__			}_		}__		return null__	};check,the,origin,of,the,request,against,the,configured,allowed,origins,param,request,origin,the,origin,to,check,return,the,origin,to,use,for,the,response,or,code,null,which,means,the,request,origin,is,not,allowed;nullable,public,string,check,origin,nullable,string,request,origin,if,string,utils,has,text,request,origin,return,null,if,object,utils,is,empty,this,allowed,origins,return,null,if,this,allowed,origins,contains,all,if,this,allow,credentials,boolean,true,return,all,else,return,request,origin,for,string,allowed,origin,this,allowed,origins,if,request,origin,equals,ignore,case,allowed,origin,return,request,origin,return,null
CorsConfiguration -> @Nullable 	public String checkOrigin(@Nullable String requestOrigin);1500448076;Check the origin of the request against the configured allowed origins._@param requestOrigin the origin to check_@return the origin to use for the response, or {@code null} which_means the request origin is not allowed;@Nullable_	public String checkOrigin(@Nullable String requestOrigin) {_		if (!StringUtils.hasText(requestOrigin)) {_			return null__		}_		if (ObjectUtils.isEmpty(this.allowedOrigins)) {_			return null__		}__		if (this.allowedOrigins.contains(ALL)) {_			if (this.allowCredentials != Boolean.TRUE) {_				return ALL__			}_			else {_				return requestOrigin__			}_		}_		for (String allowedOrigin : this.allowedOrigins) {_			if (requestOrigin.equalsIgnoreCase(allowedOrigin)) {_				return requestOrigin__			}_		}__		return null__	};check,the,origin,of,the,request,against,the,configured,allowed,origins,param,request,origin,the,origin,to,check,return,the,origin,to,use,for,the,response,or,code,null,which,means,the,request,origin,is,not,allowed;nullable,public,string,check,origin,nullable,string,request,origin,if,string,utils,has,text,request,origin,return,null,if,object,utils,is,empty,this,allowed,origins,return,null,if,this,allowed,origins,contains,all,if,this,allow,credentials,boolean,true,return,all,else,return,request,origin,for,string,allowed,origin,this,allowed,origins,if,request,origin,equals,ignore,case,allowed,origin,return,request,origin,return,null
CorsConfiguration -> @Nullable 	public String checkOrigin(@Nullable String requestOrigin);1511387204;Check the origin of the request against the configured allowed origins._@param requestOrigin the origin to check_@return the origin to use for the response, or {@code null} which_means the request origin is not allowed;@Nullable_	public String checkOrigin(@Nullable String requestOrigin) {_		if (!StringUtils.hasText(requestOrigin)) {_			return null__		}_		if (ObjectUtils.isEmpty(this.allowedOrigins)) {_			return null__		}__		if (this.allowedOrigins.contains(ALL)) {_			if (this.allowCredentials != Boolean.TRUE) {_				return ALL__			}_			else {_				return requestOrigin__			}_		}_		for (String allowedOrigin : this.allowedOrigins) {_			if (requestOrigin.equalsIgnoreCase(allowedOrigin)) {_				return requestOrigin__			}_		}__		return null__	};check,the,origin,of,the,request,against,the,configured,allowed,origins,param,request,origin,the,origin,to,check,return,the,origin,to,use,for,the,response,or,code,null,which,means,the,request,origin,is,not,allowed;nullable,public,string,check,origin,nullable,string,request,origin,if,string,utils,has,text,request,origin,return,null,if,object,utils,is,empty,this,allowed,origins,return,null,if,this,allowed,origins,contains,all,if,this,allow,credentials,boolean,true,return,all,else,return,request,origin,for,string,allowed,origin,this,allowed,origins,if,request,origin,equals,ignore,case,allowed,origin,return,request,origin,return,null
CorsConfiguration -> @Nullable 	public String checkOrigin(@Nullable String requestOrigin);1511925367;Check the origin of the request against the configured allowed origins._@param requestOrigin the origin to check_@return the origin to use for the response, or {@code null} which_means the request origin is not allowed;@Nullable_	public String checkOrigin(@Nullable String requestOrigin) {_		if (!StringUtils.hasText(requestOrigin)) {_			return null__		}_		if (ObjectUtils.isEmpty(this.allowedOrigins)) {_			return null__		}__		if (this.allowedOrigins.contains(ALL)) {_			if (this.allowCredentials != Boolean.TRUE) {_				return ALL__			}_			else {_				return requestOrigin__			}_		}_		for (String allowedOrigin : this.allowedOrigins) {_			if (requestOrigin.equalsIgnoreCase(allowedOrigin)) {_				return requestOrigin__			}_		}__		return null__	};check,the,origin,of,the,request,against,the,configured,allowed,origins,param,request,origin,the,origin,to,check,return,the,origin,to,use,for,the,response,or,code,null,which,means,the,request,origin,is,not,allowed;nullable,public,string,check,origin,nullable,string,request,origin,if,string,utils,has,text,request,origin,return,null,if,object,utils,is,empty,this,allowed,origins,return,null,if,this,allowed,origins,contains,all,if,this,allow,credentials,boolean,true,return,all,else,return,request,origin,for,string,allowed,origin,this,allowed,origins,if,request,origin,equals,ignore,case,allowed,origin,return,request,origin,return,null
CorsConfiguration -> @Nullable 	public String checkOrigin(@Nullable String requestOrigin);1513805881;Check the origin of the request against the configured allowed origins._@param requestOrigin the origin to check_@return the origin to use for the response, or {@code null} which_means the request origin is not allowed;@Nullable_	public String checkOrigin(@Nullable String requestOrigin) {_		if (!StringUtils.hasText(requestOrigin)) {_			return null__		}_		if (ObjectUtils.isEmpty(this.allowedOrigins)) {_			return null__		}__		if (this.allowedOrigins.contains(ALL)) {_			if (this.allowCredentials != Boolean.TRUE) {_				return ALL__			}_			else {_				return requestOrigin__			}_		}_		for (String allowedOrigin : this.allowedOrigins) {_			if (requestOrigin.equalsIgnoreCase(allowedOrigin)) {_				return requestOrigin__			}_		}__		return null__	};check,the,origin,of,the,request,against,the,configured,allowed,origins,param,request,origin,the,origin,to,check,return,the,origin,to,use,for,the,response,or,code,null,which,means,the,request,origin,is,not,allowed;nullable,public,string,check,origin,nullable,string,request,origin,if,string,utils,has,text,request,origin,return,null,if,object,utils,is,empty,this,allowed,origins,return,null,if,this,allowed,origins,contains,all,if,this,allow,credentials,boolean,true,return,all,else,return,request,origin,for,string,allowed,origin,this,allowed,origins,if,request,origin,equals,ignore,case,allowed,origin,return,request,origin,return,null
CorsConfiguration -> @Nullable 	public String checkOrigin(@Nullable String requestOrigin);1522354261;Check the origin of the request against the configured allowed origins._@param requestOrigin the origin to check_@return the origin to use for the response, or {@code null} which_means the request origin is not allowed;@Nullable_	public String checkOrigin(@Nullable String requestOrigin) {_		if (!StringUtils.hasText(requestOrigin)) {_			return null__		}_		if (ObjectUtils.isEmpty(this.allowedOrigins)) {_			return null__		}__		if (this.allowedOrigins.contains(ALL)) {_			if (this.allowCredentials != Boolean.TRUE) {_				return ALL__			}_			else {_				return requestOrigin__			}_		}_		for (String allowedOrigin : this.allowedOrigins) {_			if (requestOrigin.equalsIgnoreCase(allowedOrigin)) {_				return requestOrigin__			}_		}__		return null__	};check,the,origin,of,the,request,against,the,configured,allowed,origins,param,request,origin,the,origin,to,check,return,the,origin,to,use,for,the,response,or,code,null,which,means,the,request,origin,is,not,allowed;nullable,public,string,check,origin,nullable,string,request,origin,if,string,utils,has,text,request,origin,return,null,if,object,utils,is,empty,this,allowed,origins,return,null,if,this,allowed,origins,contains,all,if,this,allow,credentials,boolean,true,return,all,else,return,request,origin,for,string,allowed,origin,this,allowed,origins,if,request,origin,equals,ignore,case,allowed,origin,return,request,origin,return,null
CorsConfiguration -> public void setMaxAge(Long maxAge);1427983931;Indicates how long (seconds) the results of a preflight request can be cached_in a preflight result cache.;public void setMaxAge(Long maxAge) {_		this.maxAge = maxAge__	};indicates,how,long,seconds,the,results,of,a,preflight,request,can,be,cached,in,a,preflight,result,cache;public,void,set,max,age,long,max,age,this,max,age,max,age
CorsConfiguration -> public void setMaxAge(Long maxAge);1428073011;Indicates how long (seconds) the results of a preflight request can be cached_in a preflight result cache.;public void setMaxAge(Long maxAge) {_		this.maxAge = maxAge__	};indicates,how,long,seconds,the,results,of,a,preflight,request,can,be,cached,in,a,preflight,result,cache;public,void,set,max,age,long,max,age,this,max,age,max,age
CorsConfiguration -> public void setMaxAge(Long maxAge);1430811101;Configure how long, in seconds, the response from a pre-flight request_can be cached by clients._<p>By default this is not set.;public void setMaxAge(Long maxAge) {_		this.maxAge = maxAge__	};configure,how,long,in,seconds,the,response,from,a,pre,flight,request,can,be,cached,by,clients,p,by,default,this,is,not,set;public,void,set,max,age,long,max,age,this,max,age,max,age
CorsConfiguration -> public void setMaxAge(Long maxAge);1431730371;Configure how long, in seconds, the response from a pre-flight request_can be cached by clients._<p>By default this is not set.;public void setMaxAge(Long maxAge) {_		this.maxAge = maxAge__	};configure,how,long,in,seconds,the,response,from,a,pre,flight,request,can,be,cached,by,clients,p,by,default,this,is,not,set;public,void,set,max,age,long,max,age,this,max,age,max,age
CorsConfiguration -> public void setMaxAge(Long maxAge);1432857824;Configure how long, in seconds, the response from a pre-flight request_can be cached by clients._<p>By default this is not set.;public void setMaxAge(Long maxAge) {_		this.maxAge = maxAge__	};configure,how,long,in,seconds,the,response,from,a,pre,flight,request,can,be,cached,by,clients,p,by,default,this,is,not,set;public,void,set,max,age,long,max,age,this,max,age,max,age
CorsConfiguration -> public void setMaxAge(Long maxAge);1433088837;Configure how long, in seconds, the response from a pre-flight request_can be cached by clients._<p>By default this is not set.;public void setMaxAge(Long maxAge) {_		this.maxAge = maxAge__	};configure,how,long,in,seconds,the,response,from,a,pre,flight,request,can,be,cached,by,clients,p,by,default,this,is,not,set;public,void,set,max,age,long,max,age,this,max,age,max,age
CorsConfiguration -> public void setMaxAge(Long maxAge);1434809538;Configure how long, in seconds, the response from a pre-flight request_can be cached by clients._<p>By default this is not set.;public void setMaxAge(Long maxAge) {_		this.maxAge = maxAge__	};configure,how,long,in,seconds,the,response,from,a,pre,flight,request,can,be,cached,by,clients,p,by,default,this,is,not,set;public,void,set,max,age,long,max,age,this,max,age,max,age
CorsConfiguration -> public void setMaxAge(Long maxAge);1436539370;Configure how long, in seconds, the response from a pre-flight request_can be cached by clients._<p>By default this is not set.;public void setMaxAge(Long maxAge) {_		this.maxAge = maxAge__	};configure,how,long,in,seconds,the,response,from,a,pre,flight,request,can,be,cached,by,clients,p,by,default,this,is,not,set;public,void,set,max,age,long,max,age,this,max,age,max,age
CorsConfiguration -> public void setMaxAge(Long maxAge);1438251419;Configure how long, in seconds, the response from a pre-flight request_can be cached by clients._<p>By default this is not set.;public void setMaxAge(Long maxAge) {_		this.maxAge = maxAge__	};configure,how,long,in,seconds,the,response,from,a,pre,flight,request,can,be,cached,by,clients,p,by,default,this,is,not,set;public,void,set,max,age,long,max,age,this,max,age,max,age
CorsConfiguration -> public void setMaxAge(Long maxAge);1447321232;Configure how long, in seconds, the response from a pre-flight request_can be cached by clients._<p>By default this is not set.;public void setMaxAge(Long maxAge) {_		this.maxAge = maxAge__	};configure,how,long,in,seconds,the,response,from,a,pre,flight,request,can,be,cached,by,clients,p,by,default,this,is,not,set;public,void,set,max,age,long,max,age,this,max,age,max,age
CorsConfiguration -> public void setMaxAge(Long maxAge);1449660404;Configure how long, in seconds, the response from a pre-flight request_can be cached by clients._<p>By default this is not set.;public void setMaxAge(Long maxAge) {_		this.maxAge = maxAge__	};configure,how,long,in,seconds,the,response,from,a,pre,flight,request,can,be,cached,by,clients,p,by,default,this,is,not,set;public,void,set,max,age,long,max,age,this,max,age,max,age
CorsConfiguration -> public void setMaxAge(Long maxAge);1453684721;Configure how long, in seconds, the response from a pre-flight request_can be cached by clients._<p>By default this is not set.;public void setMaxAge(Long maxAge) {_		this.maxAge = maxAge__	};configure,how,long,in,seconds,the,response,from,a,pre,flight,request,can,be,cached,by,clients,p,by,default,this,is,not,set;public,void,set,max,age,long,max,age,this,max,age,max,age
CorsConfiguration -> public void setMaxAge(Long maxAge);1467730834;Configure how long, in seconds, the response from a pre-flight request_can be cached by clients._<p>By default this is not set.;public void setMaxAge(Long maxAge) {_		this.maxAge = maxAge__	};configure,how,long,in,seconds,the,response,from,a,pre,flight,request,can,be,cached,by,clients,p,by,default,this,is,not,set;public,void,set,max,age,long,max,age,this,max,age,max,age
CorsConfiguration -> public void setMaxAge(Long maxAge);1472031618;Configure how long, in seconds, the response from a pre-flight request_can be cached by clients._<p>By default this is not set.;public void setMaxAge(Long maxAge) {_		this.maxAge = maxAge__	};configure,how,long,in,seconds,the,response,from,a,pre,flight,request,can,be,cached,by,clients,p,by,default,this,is,not,set;public,void,set,max,age,long,max,age,this,max,age,max,age
CorsConfiguration -> public void setMaxAge(Long maxAge);1476175114;Configure how long, in seconds, the response from a pre-flight request_can be cached by clients._<p>By default this is not set.;public void setMaxAge(Long maxAge) {_		this.maxAge = maxAge__	};configure,how,long,in,seconds,the,response,from,a,pre,flight,request,can,be,cached,by,clients,p,by,default,this,is,not,set;public,void,set,max,age,long,max,age,this,max,age,max,age
CorsConfiguration -> public void setMaxAge(Long maxAge);1476909116;Configure how long, in seconds, the response from a pre-flight request_can be cached by clients._<p>By default this is not set.;public void setMaxAge(Long maxAge) {_		this.maxAge = maxAge__	};configure,how,long,in,seconds,the,response,from,a,pre,flight,request,can,be,cached,by,clients,p,by,default,this,is,not,set;public,void,set,max,age,long,max,age,this,max,age,max,age
CorsConfiguration -> public void setMaxAge(Long maxAge);1487713300;Configure how long, in seconds, the response from a pre-flight request_can be cached by clients._<p>By default this is not set.;public void setMaxAge(Long maxAge) {_		this.maxAge = maxAge__	};configure,how,long,in,seconds,the,response,from,a,pre,flight,request,can,be,cached,by,clients,p,by,default,this,is,not,set;public,void,set,max,age,long,max,age,this,max,age,max,age
CorsConfiguration -> public void setMaxAge(Long maxAge);1495868221;Configure how long, in seconds, the response from a pre-flight request_can be cached by clients._<p>By default this is not set.;public void setMaxAge(Long maxAge) {_		this.maxAge = maxAge__	};configure,how,long,in,seconds,the,response,from,a,pre,flight,request,can,be,cached,by,clients,p,by,default,this,is,not,set;public,void,set,max,age,long,max,age,this,max,age,max,age
CorsConfiguration -> public void setMaxAge(Long maxAge);1496837955;Configure how long, in seconds, the response from a pre-flight request_can be cached by clients._<p>By default this is not set.;public void setMaxAge(Long maxAge) {_		this.maxAge = maxAge__	};configure,how,long,in,seconds,the,response,from,a,pre,flight,request,can,be,cached,by,clients,p,by,default,this,is,not,set;public,void,set,max,age,long,max,age,this,max,age,max,age
CorsConfiguration -> public void setMaxAge(Long maxAge);1498780456;Configure how long, in seconds, the response from a pre-flight request_can be cached by clients._<p>By default this is not set.;public void setMaxAge(Long maxAge) {_		this.maxAge = maxAge__	};configure,how,long,in,seconds,the,response,from,a,pre,flight,request,can,be,cached,by,clients,p,by,default,this,is,not,set;public,void,set,max,age,long,max,age,this,max,age,max,age
CorsConfiguration -> public void setAllowedHeaders(@Nullable List<String> allowedHeaders);1496837955;Set the list of headers that a pre-flight request can list as allowed_for use during an actual request._<p>The special value {@code "*"} allows actual requests to send any_header._<p>A header name is not required to be listed if it is one of:_{@code Cache-Control}, {@code Content-Language}, {@code Expires},_{@code Last-Modified}, or {@code Pragma}._<p>By default this is not set.;public void setAllowedHeaders(@Nullable List<String> allowedHeaders) {_		this.allowedHeaders = (allowedHeaders != null ? new ArrayList<>(allowedHeaders) : null)__	};set,the,list,of,headers,that,a,pre,flight,request,can,list,as,allowed,for,use,during,an,actual,request,p,the,special,value,code,allows,actual,requests,to,send,any,header,p,a,header,name,is,not,required,to,be,listed,if,it,is,one,of,code,cache,control,code,content,language,code,expires,code,last,modified,or,code,pragma,p,by,default,this,is,not,set;public,void,set,allowed,headers,nullable,list,string,allowed,headers,this,allowed,headers,allowed,headers,null,new,array,list,allowed,headers,null
CorsConfiguration -> public void setAllowedHeaders(@Nullable List<String> allowedHeaders);1498780456;Set the list of headers that a pre-flight request can list as allowed_for use during an actual request._<p>The special value {@code "*"} allows actual requests to send any_header._<p>A header name is not required to be listed if it is one of:_{@code Cache-Control}, {@code Content-Language}, {@code Expires},_{@code Last-Modified}, or {@code Pragma}._<p>By default this is not set.;public void setAllowedHeaders(@Nullable List<String> allowedHeaders) {_		this.allowedHeaders = (allowedHeaders != null ? new ArrayList<>(allowedHeaders) : null)__	};set,the,list,of,headers,that,a,pre,flight,request,can,list,as,allowed,for,use,during,an,actual,request,p,the,special,value,code,allows,actual,requests,to,send,any,header,p,a,header,name,is,not,required,to,be,listed,if,it,is,one,of,code,cache,control,code,content,language,code,expires,code,last,modified,or,code,pragma,p,by,default,this,is,not,set;public,void,set,allowed,headers,nullable,list,string,allowed,headers,this,allowed,headers,allowed,headers,null,new,array,list,allowed,headers,null
CorsConfiguration -> public void setAllowedHeaders(@Nullable List<String> allowedHeaders);1500448076;Set the list of headers that a pre-flight request can list as allowed_for use during an actual request._<p>The special value {@code "*"} allows actual requests to send any_header._<p>A header name is not required to be listed if it is one of:_{@code Cache-Control}, {@code Content-Language}, {@code Expires},_{@code Last-Modified}, or {@code Pragma}._<p>By default this is not set.;public void setAllowedHeaders(@Nullable List<String> allowedHeaders) {_		this.allowedHeaders = (allowedHeaders != null ? new ArrayList<>(allowedHeaders) : null)__	};set,the,list,of,headers,that,a,pre,flight,request,can,list,as,allowed,for,use,during,an,actual,request,p,the,special,value,code,allows,actual,requests,to,send,any,header,p,a,header,name,is,not,required,to,be,listed,if,it,is,one,of,code,cache,control,code,content,language,code,expires,code,last,modified,or,code,pragma,p,by,default,this,is,not,set;public,void,set,allowed,headers,nullable,list,string,allowed,headers,this,allowed,headers,allowed,headers,null,new,array,list,allowed,headers,null
CorsConfiguration -> public void setAllowedHeaders(@Nullable List<String> allowedHeaders);1511387204;Set the list of headers that a pre-flight request can list as allowed_for use during an actual request._<p>The special value {@code "*"} allows actual requests to send any_header._<p>A header name is not required to be listed if it is one of:_{@code Cache-Control}, {@code Content-Language}, {@code Expires},_{@code Last-Modified}, or {@code Pragma}._<p>By default this is not set.;public void setAllowedHeaders(@Nullable List<String> allowedHeaders) {_		this.allowedHeaders = (allowedHeaders != null ? new ArrayList<>(allowedHeaders) : null)__	};set,the,list,of,headers,that,a,pre,flight,request,can,list,as,allowed,for,use,during,an,actual,request,p,the,special,value,code,allows,actual,requests,to,send,any,header,p,a,header,name,is,not,required,to,be,listed,if,it,is,one,of,code,cache,control,code,content,language,code,expires,code,last,modified,or,code,pragma,p,by,default,this,is,not,set;public,void,set,allowed,headers,nullable,list,string,allowed,headers,this,allowed,headers,allowed,headers,null,new,array,list,allowed,headers,null
CorsConfiguration -> public void setAllowedHeaders(@Nullable List<String> allowedHeaders);1511925367;Set the list of headers that a pre-flight request can list as allowed_for use during an actual request._<p>The special value {@code "*"} allows actual requests to send any_header._<p>A header name is not required to be listed if it is one of:_{@code Cache-Control}, {@code Content-Language}, {@code Expires},_{@code Last-Modified}, or {@code Pragma}._<p>By default this is not set.;public void setAllowedHeaders(@Nullable List<String> allowedHeaders) {_		this.allowedHeaders = (allowedHeaders != null ? new ArrayList<>(allowedHeaders) : null)__	};set,the,list,of,headers,that,a,pre,flight,request,can,list,as,allowed,for,use,during,an,actual,request,p,the,special,value,code,allows,actual,requests,to,send,any,header,p,a,header,name,is,not,required,to,be,listed,if,it,is,one,of,code,cache,control,code,content,language,code,expires,code,last,modified,or,code,pragma,p,by,default,this,is,not,set;public,void,set,allowed,headers,nullable,list,string,allowed,headers,this,allowed,headers,allowed,headers,null,new,array,list,allowed,headers,null
CorsConfiguration -> public void setAllowedHeaders(@Nullable List<String> allowedHeaders);1513805881;Set the list of headers that a pre-flight request can list as allowed_for use during an actual request._<p>The special value {@code "*"} allows actual requests to send any_header._<p>A header name is not required to be listed if it is one of:_{@code Cache-Control}, {@code Content-Language}, {@code Expires},_{@code Last-Modified}, or {@code Pragma}._<p>By default this is not set.;public void setAllowedHeaders(@Nullable List<String> allowedHeaders) {_		this.allowedHeaders = (allowedHeaders != null ? new ArrayList<>(allowedHeaders) : null)__	};set,the,list,of,headers,that,a,pre,flight,request,can,list,as,allowed,for,use,during,an,actual,request,p,the,special,value,code,allows,actual,requests,to,send,any,header,p,a,header,name,is,not,required,to,be,listed,if,it,is,one,of,code,cache,control,code,content,language,code,expires,code,last,modified,or,code,pragma,p,by,default,this,is,not,set;public,void,set,allowed,headers,nullable,list,string,allowed,headers,this,allowed,headers,allowed,headers,null,new,array,list,allowed,headers,null
CorsConfiguration -> public void setAllowedHeaders(@Nullable List<String> allowedHeaders);1522354261;Set the list of headers that a pre-flight request can list as allowed_for use during an actual request._<p>The special value {@code "*"} allows actual requests to send any_header._<p>A header name is not required to be listed if it is one of:_{@code Cache-Control}, {@code Content-Language}, {@code Expires},_{@code Last-Modified}, or {@code Pragma}._<p>By default this is not set.;public void setAllowedHeaders(@Nullable List<String> allowedHeaders) {_		this.allowedHeaders = (allowedHeaders != null ? new ArrayList<>(allowedHeaders) : null)__	};set,the,list,of,headers,that,a,pre,flight,request,can,list,as,allowed,for,use,during,an,actual,request,p,the,special,value,code,allows,actual,requests,to,send,any,header,p,a,header,name,is,not,required,to,be,listed,if,it,is,one,of,code,cache,control,code,content,language,code,expires,code,last,modified,or,code,pragma,p,by,default,this,is,not,set;public,void,set,allowed,headers,nullable,list,string,allowed,headers,this,allowed,headers,allowed,headers,null,new,array,list,allowed,headers,null
CorsConfiguration -> public void setAllowCredentials(Boolean allowCredentials);1427983931;Indicates whether the resource supports user credentials._Set the value of Access-Control-Allow-Credentials response header.;public void setAllowCredentials(Boolean allowCredentials) {_		this.allowCredentials = allowCredentials__	};indicates,whether,the,resource,supports,user,credentials,set,the,value,of,access,control,allow,credentials,response,header;public,void,set,allow,credentials,boolean,allow,credentials,this,allow,credentials,allow,credentials
CorsConfiguration -> public void setAllowCredentials(Boolean allowCredentials);1428073011;Indicates whether the resource supports user credentials._Set the value of Access-Control-Allow-Credentials response header.;public void setAllowCredentials(Boolean allowCredentials) {_		this.allowCredentials = allowCredentials__	};indicates,whether,the,resource,supports,user,credentials,set,the,value,of,access,control,allow,credentials,response,header;public,void,set,allow,credentials,boolean,allow,credentials,this,allow,credentials,allow,credentials
CorsConfiguration -> public void setAllowCredentials(Boolean allowCredentials);1430811101;Whether user credentials are supported._<p>By default this is not set (i.e. user credentials not supported).;public void setAllowCredentials(Boolean allowCredentials) {_		this.allowCredentials = allowCredentials__	};whether,user,credentials,are,supported,p,by,default,this,is,not,set,i,e,user,credentials,not,supported;public,void,set,allow,credentials,boolean,allow,credentials,this,allow,credentials,allow,credentials
CorsConfiguration -> public void setAllowCredentials(Boolean allowCredentials);1431730371;Whether user credentials are supported._<p>By default this is not set (i.e. user credentials not supported).;public void setAllowCredentials(Boolean allowCredentials) {_		this.allowCredentials = allowCredentials__	};whether,user,credentials,are,supported,p,by,default,this,is,not,set,i,e,user,credentials,not,supported;public,void,set,allow,credentials,boolean,allow,credentials,this,allow,credentials,allow,credentials
CorsConfiguration -> public void setAllowCredentials(Boolean allowCredentials);1432857824;Whether user credentials are supported._<p>By default this is not set (i.e. user credentials not supported).;public void setAllowCredentials(Boolean allowCredentials) {_		this.allowCredentials = allowCredentials__	};whether,user,credentials,are,supported,p,by,default,this,is,not,set,i,e,user,credentials,not,supported;public,void,set,allow,credentials,boolean,allow,credentials,this,allow,credentials,allow,credentials
CorsConfiguration -> public void setAllowCredentials(Boolean allowCredentials);1433088837;Whether user credentials are supported._<p>By default this is not set (i.e. user credentials not supported).;public void setAllowCredentials(Boolean allowCredentials) {_		this.allowCredentials = allowCredentials__	};whether,user,credentials,are,supported,p,by,default,this,is,not,set,i,e,user,credentials,not,supported;public,void,set,allow,credentials,boolean,allow,credentials,this,allow,credentials,allow,credentials
CorsConfiguration -> public void setAllowCredentials(Boolean allowCredentials);1434809538;Whether user credentials are supported._<p>By default this is not set (i.e. user credentials are not supported).;public void setAllowCredentials(Boolean allowCredentials) {_		this.allowCredentials = allowCredentials__	};whether,user,credentials,are,supported,p,by,default,this,is,not,set,i,e,user,credentials,are,not,supported;public,void,set,allow,credentials,boolean,allow,credentials,this,allow,credentials,allow,credentials
CorsConfiguration -> public void setAllowCredentials(Boolean allowCredentials);1436539370;Whether user credentials are supported._<p>By default this is not set (i.e. user credentials are not supported).;public void setAllowCredentials(Boolean allowCredentials) {_		this.allowCredentials = allowCredentials__	};whether,user,credentials,are,supported,p,by,default,this,is,not,set,i,e,user,credentials,are,not,supported;public,void,set,allow,credentials,boolean,allow,credentials,this,allow,credentials,allow,credentials
CorsConfiguration -> public void setAllowCredentials(Boolean allowCredentials);1438251419;Whether user credentials are supported._<p>By default this is not set (i.e. user credentials are not supported).;public void setAllowCredentials(Boolean allowCredentials) {_		this.allowCredentials = allowCredentials__	};whether,user,credentials,are,supported,p,by,default,this,is,not,set,i,e,user,credentials,are,not,supported;public,void,set,allow,credentials,boolean,allow,credentials,this,allow,credentials,allow,credentials
CorsConfiguration -> public void setAllowCredentials(Boolean allowCredentials);1447321232;Whether user credentials are supported._<p>By default this is not set (i.e. user credentials are not supported).;public void setAllowCredentials(Boolean allowCredentials) {_		this.allowCredentials = allowCredentials__	};whether,user,credentials,are,supported,p,by,default,this,is,not,set,i,e,user,credentials,are,not,supported;public,void,set,allow,credentials,boolean,allow,credentials,this,allow,credentials,allow,credentials
CorsConfiguration -> public void setAllowCredentials(Boolean allowCredentials);1449660404;Whether user credentials are supported._<p>By default this is not set (i.e. user credentials are not supported).;public void setAllowCredentials(Boolean allowCredentials) {_		this.allowCredentials = allowCredentials__	};whether,user,credentials,are,supported,p,by,default,this,is,not,set,i,e,user,credentials,are,not,supported;public,void,set,allow,credentials,boolean,allow,credentials,this,allow,credentials,allow,credentials
CorsConfiguration -> public void setAllowCredentials(Boolean allowCredentials);1453684721;Whether user credentials are supported._<p>By default this is not set (i.e. user credentials are not supported).;public void setAllowCredentials(Boolean allowCredentials) {_		this.allowCredentials = allowCredentials__	};whether,user,credentials,are,supported,p,by,default,this,is,not,set,i,e,user,credentials,are,not,supported;public,void,set,allow,credentials,boolean,allow,credentials,this,allow,credentials,allow,credentials
CorsConfiguration -> public void setAllowCredentials(Boolean allowCredentials);1467730834;Whether user credentials are supported._<p>By default this is not set (i.e. user credentials are not supported).;public void setAllowCredentials(Boolean allowCredentials) {_		this.allowCredentials = allowCredentials__	};whether,user,credentials,are,supported,p,by,default,this,is,not,set,i,e,user,credentials,are,not,supported;public,void,set,allow,credentials,boolean,allow,credentials,this,allow,credentials,allow,credentials
CorsConfiguration -> public void setAllowCredentials(Boolean allowCredentials);1472031618;Whether user credentials are supported._<p>By default this is not set (i.e. user credentials are not supported).;public void setAllowCredentials(Boolean allowCredentials) {_		this.allowCredentials = allowCredentials__	};whether,user,credentials,are,supported,p,by,default,this,is,not,set,i,e,user,credentials,are,not,supported;public,void,set,allow,credentials,boolean,allow,credentials,this,allow,credentials,allow,credentials
CorsConfiguration -> public void setAllowCredentials(Boolean allowCredentials);1476175114;Whether user credentials are supported._<p>By default this is not set (i.e. user credentials are not supported).;public void setAllowCredentials(Boolean allowCredentials) {_		this.allowCredentials = allowCredentials__	};whether,user,credentials,are,supported,p,by,default,this,is,not,set,i,e,user,credentials,are,not,supported;public,void,set,allow,credentials,boolean,allow,credentials,this,allow,credentials,allow,credentials
CorsConfiguration -> public void setAllowCredentials(Boolean allowCredentials);1476909116;Whether user credentials are supported._<p>By default this is not set (i.e. user credentials are not supported).;public void setAllowCredentials(Boolean allowCredentials) {_		this.allowCredentials = allowCredentials__	};whether,user,credentials,are,supported,p,by,default,this,is,not,set,i,e,user,credentials,are,not,supported;public,void,set,allow,credentials,boolean,allow,credentials,this,allow,credentials,allow,credentials
CorsConfiguration -> public void setAllowCredentials(Boolean allowCredentials);1487713300;Whether user credentials are supported._<p>By default this is not set (i.e. user credentials are not supported).;public void setAllowCredentials(Boolean allowCredentials) {_		this.allowCredentials = allowCredentials__	};whether,user,credentials,are,supported,p,by,default,this,is,not,set,i,e,user,credentials,are,not,supported;public,void,set,allow,credentials,boolean,allow,credentials,this,allow,credentials,allow,credentials
CorsConfiguration -> public void setAllowCredentials(Boolean allowCredentials);1495868221;Whether user credentials are supported._<p>By default this is not set (i.e. user credentials are not supported).;public void setAllowCredentials(Boolean allowCredentials) {_		this.allowCredentials = allowCredentials__	};whether,user,credentials,are,supported,p,by,default,this,is,not,set,i,e,user,credentials,are,not,supported;public,void,set,allow,credentials,boolean,allow,credentials,this,allow,credentials,allow,credentials
CorsConfiguration -> public void setAllowCredentials(Boolean allowCredentials);1496837955;Whether user credentials are supported._<p>By default this is not set (i.e. user credentials are not supported).;public void setAllowCredentials(Boolean allowCredentials) {_		this.allowCredentials = allowCredentials__	};whether,user,credentials,are,supported,p,by,default,this,is,not,set,i,e,user,credentials,are,not,supported;public,void,set,allow,credentials,boolean,allow,credentials,this,allow,credentials,allow,credentials
CorsConfiguration -> public void setAllowCredentials(Boolean allowCredentials);1498780456;Whether user credentials are supported._<p>By default this is not set (i.e. user credentials are not supported).;public void setAllowCredentials(Boolean allowCredentials) {_		this.allowCredentials = allowCredentials__	};whether,user,credentials,are,supported,p,by,default,this,is,not,set,i,e,user,credentials,are,not,supported;public,void,set,allow,credentials,boolean,allow,credentials,this,allow,credentials,allow,credentials
CorsConfiguration -> public void addAllowedOrigin(String allowedOrigin);1427983931;@see #setAllowedOrigins(java.util.List);public void addAllowedOrigin(String allowedOrigin) {_		if (this.allowedOrigins == null) {_			this.allowedOrigins = new ArrayList<String>()__		}_		this.allowedOrigins.add(allowedOrigin)__	};see,set,allowed,origins,java,util,list;public,void,add,allowed,origin,string,allowed,origin,if,this,allowed,origins,null,this,allowed,origins,new,array,list,string,this,allowed,origins,add,allowed,origin
CorsConfiguration -> public void addAllowedOrigin(String allowedOrigin);1428073011;@see #setAllowedOrigins(java.util.List);public void addAllowedOrigin(String allowedOrigin) {_		if (this.allowedOrigins == null) {_			this.allowedOrigins = new ArrayList<String>()__		}_		this.allowedOrigins.add(allowedOrigin)__	};see,set,allowed,origins,java,util,list;public,void,add,allowed,origin,string,allowed,origin,if,this,allowed,origins,null,this,allowed,origins,new,array,list,string,this,allowed,origins,add,allowed,origin
CorsConfiguration -> public void setAllowedMethods(List<String> allowedMethods);1427983931;Set allow methods that will define Access-Control-Allow-Methods response header_values. For example "GET", "POST", "PUT" ... "*" means that all methods requested_by the client are allowed. If not set, allowed method is set to "GET".;public void setAllowedMethods(List<String> allowedMethods) {_		this.allowedMethods = allowedMethods__	};set,allow,methods,that,will,define,access,control,allow,methods,response,header,values,for,example,get,post,put,means,that,all,methods,requested,by,the,client,are,allowed,if,not,set,allowed,method,is,set,to,get;public,void,set,allowed,methods,list,string,allowed,methods,this,allowed,methods,allowed,methods
CorsConfiguration -> public void setAllowedMethods(List<String> allowedMethods);1428073011;Set allow methods that will define Access-Control-Allow-Methods response header_values. For example "GET", "POST", "PUT" ... "*" means that all methods requested_by the client are allowed. If not set, allowed method is set to "GET".;public void setAllowedMethods(List<String> allowedMethods) {_		this.allowedMethods = allowedMethods__	};set,allow,methods,that,will,define,access,control,allow,methods,response,header,values,for,example,get,post,put,means,that,all,methods,requested,by,the,client,are,allowed,if,not,set,allowed,method,is,set,to,get;public,void,set,allowed,methods,list,string,allowed,methods,this,allowed,methods,allowed,methods
CorsConfiguration -> public void setAllowedMethods(List<String> allowedMethods);1434809538;Set the HTTP methods to allow, e.g. {@code "GET"}, {@code "POST"},_{@code "PUT"}, etc._<p>The special value {@code "*"} allows all methods._<p>If not set, only {@code "GET"} is allowed._<p>By default this is not set.;public void setAllowedMethods(List<String> allowedMethods) {_		this.allowedMethods = (allowedMethods == null ? null : new ArrayList<String>(allowedMethods))__	};set,the,http,methods,to,allow,e,g,code,get,code,post,code,put,etc,p,the,special,value,code,allows,all,methods,p,if,not,set,only,code,get,is,allowed,p,by,default,this,is,not,set;public,void,set,allowed,methods,list,string,allowed,methods,this,allowed,methods,allowed,methods,null,null,new,array,list,string,allowed,methods
CorsConfiguration -> public void setAllowedMethods(List<String> allowedMethods);1436539370;Set the HTTP methods to allow, e.g. {@code "GET"}, {@code "POST"},_{@code "PUT"}, etc._<p>The special value {@code "*"} allows all methods._<p>If not set, only {@code "GET"} is allowed._<p>By default this is not set.;public void setAllowedMethods(List<String> allowedMethods) {_		this.allowedMethods = (allowedMethods == null ? null : new ArrayList<String>(allowedMethods))__	};set,the,http,methods,to,allow,e,g,code,get,code,post,code,put,etc,p,the,special,value,code,allows,all,methods,p,if,not,set,only,code,get,is,allowed,p,by,default,this,is,not,set;public,void,set,allowed,methods,list,string,allowed,methods,this,allowed,methods,allowed,methods,null,null,new,array,list,string,allowed,methods
CorsConfiguration -> public void setAllowedMethods(List<String> allowedMethods);1438251419;Set the HTTP methods to allow, e.g. {@code "GET"}, {@code "POST"},_{@code "PUT"}, etc._<p>The special value {@code "*"} allows all methods._<p>If not set, only {@code "GET"} is allowed._<p>By default this is not set.;public void setAllowedMethods(List<String> allowedMethods) {_		this.allowedMethods = (allowedMethods != null ? new ArrayList<String>(allowedMethods) : null)__	};set,the,http,methods,to,allow,e,g,code,get,code,post,code,put,etc,p,the,special,value,code,allows,all,methods,p,if,not,set,only,code,get,is,allowed,p,by,default,this,is,not,set;public,void,set,allowed,methods,list,string,allowed,methods,this,allowed,methods,allowed,methods,null,new,array,list,string,allowed,methods,null
CorsConfiguration -> public void setAllowedMethods(List<String> allowedMethods);1447321232;Set the HTTP methods to allow, e.g. {@code "GET"}, {@code "POST"},_{@code "PUT"}, etc._<p>The special value {@code "*"} allows all methods._<p>If not set, only {@code "GET"} is allowed._<p>By default this is not set.;public void setAllowedMethods(List<String> allowedMethods) {_		this.allowedMethods = (allowedMethods != null ? new ArrayList<String>(allowedMethods) : null)__	};set,the,http,methods,to,allow,e,g,code,get,code,post,code,put,etc,p,the,special,value,code,allows,all,methods,p,if,not,set,only,code,get,is,allowed,p,by,default,this,is,not,set;public,void,set,allowed,methods,list,string,allowed,methods,this,allowed,methods,allowed,methods,null,new,array,list,string,allowed,methods,null
CorsConfiguration -> public void setAllowedMethods(List<String> allowedMethods);1449660404;Set the HTTP methods to allow, e.g. {@code "GET"}, {@code "POST"},_{@code "PUT"}, etc._<p>The special value {@code "*"} allows all methods._<p>If not set, only {@code "GET"} is allowed._<p>By default this is not set.;public void setAllowedMethods(List<String> allowedMethods) {_		this.allowedMethods = (allowedMethods != null ? new ArrayList<String>(allowedMethods) : null)__	};set,the,http,methods,to,allow,e,g,code,get,code,post,code,put,etc,p,the,special,value,code,allows,all,methods,p,if,not,set,only,code,get,is,allowed,p,by,default,this,is,not,set;public,void,set,allowed,methods,list,string,allowed,methods,this,allowed,methods,allowed,methods,null,new,array,list,string,allowed,methods,null
CorsConfiguration -> public void setAllowedMethods(List<String> allowedMethods);1453684721;Set the HTTP methods to allow, e.g. {@code "GET"}, {@code "POST"},_{@code "PUT"}, etc._<p>The special value {@code "*"} allows all methods._<p>If not set, only {@code "GET"} is allowed._<p>By default this is not set.;public void setAllowedMethods(List<String> allowedMethods) {_		this.allowedMethods = (allowedMethods != null ? new ArrayList<String>(allowedMethods) : null)__	};set,the,http,methods,to,allow,e,g,code,get,code,post,code,put,etc,p,the,special,value,code,allows,all,methods,p,if,not,set,only,code,get,is,allowed,p,by,default,this,is,not,set;public,void,set,allowed,methods,list,string,allowed,methods,this,allowed,methods,allowed,methods,null,new,array,list,string,allowed,methods,null
CorsConfiguration -> public void setAllowedMethods(List<String> allowedMethods);1467730834;Set the HTTP methods to allow, e.g. {@code "GET"}, {@code "POST"},_{@code "PUT"}, etc._<p>The special value {@code "*"} allows all methods._<p>If not set, only {@code "GET"} is allowed._<p>By default this is not set.;public void setAllowedMethods(List<String> allowedMethods) {_		this.allowedMethods = (allowedMethods != null ? new ArrayList<>(allowedMethods) : null)__	};set,the,http,methods,to,allow,e,g,code,get,code,post,code,put,etc,p,the,special,value,code,allows,all,methods,p,if,not,set,only,code,get,is,allowed,p,by,default,this,is,not,set;public,void,set,allowed,methods,list,string,allowed,methods,this,allowed,methods,allowed,methods,null,new,array,list,allowed,methods,null
CorsConfiguration -> public void setAllowedMethods(List<String> allowedMethods);1472031618;Set the HTTP methods to allow, e.g. {@code "GET"}, {@code "POST"},_{@code "PUT"}, etc._<p>The special value {@code "*"} allows all methods._<p>If not set, only {@code "GET"} and {@code "HEAD"} are allowed._<p>By default this is not set.;public void setAllowedMethods(List<String> allowedMethods) {_		this.allowedMethods = (allowedMethods != null ? new ArrayList<>(allowedMethods) : null)__		if (!CollectionUtils.isEmpty(allowedMethods)) {_			this.resolvedMethods = new ArrayList<>(allowedMethods.size())__			for (String method : allowedMethods) {_				if (ALL.equals(method)) {_					this.resolvedMethods = null__					break__				}_				this.resolvedMethods.add(HttpMethod.resolve(method))__			}_		}_		else {_			this.resolvedMethods = DEFAULT_METHODS__		}_	};set,the,http,methods,to,allow,e,g,code,get,code,post,code,put,etc,p,the,special,value,code,allows,all,methods,p,if,not,set,only,code,get,and,code,head,are,allowed,p,by,default,this,is,not,set;public,void,set,allowed,methods,list,string,allowed,methods,this,allowed,methods,allowed,methods,null,new,array,list,allowed,methods,null,if,collection,utils,is,empty,allowed,methods,this,resolved,methods,new,array,list,allowed,methods,size,for,string,method,allowed,methods,if,all,equals,method,this,resolved,methods,null,break,this,resolved,methods,add,http,method,resolve,method,else,this,resolved,methods
CorsConfiguration -> public void setAllowedMethods(List<String> allowedMethods);1476175114;Set the HTTP methods to allow, e.g. {@code "GET"}, {@code "POST"},_{@code "PUT"}, etc._<p>The special value {@code "*"} allows all methods._<p>If not set, only {@code "GET"} and {@code "HEAD"} are allowed._<p>By default this is not set.;public void setAllowedMethods(List<String> allowedMethods) {_		this.allowedMethods = (allowedMethods != null ? new ArrayList<>(allowedMethods) : null)__		if (!CollectionUtils.isEmpty(allowedMethods)) {_			this.resolvedMethods = new ArrayList<>(allowedMethods.size())__			for (String method : allowedMethods) {_				if (ALL.equals(method)) {_					this.resolvedMethods = null__					break__				}_				this.resolvedMethods.add(HttpMethod.resolve(method))__			}_		}_		else {_			this.resolvedMethods = DEFAULT_METHODS__		}_	};set,the,http,methods,to,allow,e,g,code,get,code,post,code,put,etc,p,the,special,value,code,allows,all,methods,p,if,not,set,only,code,get,and,code,head,are,allowed,p,by,default,this,is,not,set;public,void,set,allowed,methods,list,string,allowed,methods,this,allowed,methods,allowed,methods,null,new,array,list,allowed,methods,null,if,collection,utils,is,empty,allowed,methods,this,resolved,methods,new,array,list,allowed,methods,size,for,string,method,allowed,methods,if,all,equals,method,this,resolved,methods,null,break,this,resolved,methods,add,http,method,resolve,method,else,this,resolved,methods
CorsConfiguration -> public void setAllowedMethods(List<String> allowedMethods);1476909116;Set the HTTP methods to allow, e.g. {@code "GET"}, {@code "POST"},_{@code "PUT"}, etc._<p>The special value {@code "*"} allows all methods._<p>If not set, only {@code "GET"} and {@code "HEAD"} are allowed._<p>By default this is not set.;public void setAllowedMethods(List<String> allowedMethods) {_		this.allowedMethods = (allowedMethods != null ? new ArrayList<>(allowedMethods) : null)__		if (!CollectionUtils.isEmpty(allowedMethods)) {_			this.resolvedMethods = new ArrayList<>(allowedMethods.size())__			for (String method : allowedMethods) {_				if (ALL.equals(method)) {_					this.resolvedMethods = null__					break__				}_				this.resolvedMethods.add(HttpMethod.resolve(method))__			}_		}_		else {_			this.resolvedMethods = DEFAULT_METHODS__		}_	};set,the,http,methods,to,allow,e,g,code,get,code,post,code,put,etc,p,the,special,value,code,allows,all,methods,p,if,not,set,only,code,get,and,code,head,are,allowed,p,by,default,this,is,not,set;public,void,set,allowed,methods,list,string,allowed,methods,this,allowed,methods,allowed,methods,null,new,array,list,allowed,methods,null,if,collection,utils,is,empty,allowed,methods,this,resolved,methods,new,array,list,allowed,methods,size,for,string,method,allowed,methods,if,all,equals,method,this,resolved,methods,null,break,this,resolved,methods,add,http,method,resolve,method,else,this,resolved,methods
CorsConfiguration -> public void setAllowedMethods(List<String> allowedMethods);1487713300;Set the HTTP methods to allow, e.g. {@code "GET"}, {@code "POST"},_{@code "PUT"}, etc._<p>The special value {@code "*"} allows all methods._<p>If not set, only {@code "GET"} and {@code "HEAD"} are allowed._<p>By default this is not set.;public void setAllowedMethods(List<String> allowedMethods) {_		this.allowedMethods = (allowedMethods != null ? new ArrayList<>(allowedMethods) : null)__		if (!CollectionUtils.isEmpty(allowedMethods)) {_			this.resolvedMethods = new ArrayList<>(allowedMethods.size())__			for (String method : allowedMethods) {_				if (ALL.equals(method)) {_					this.resolvedMethods = null__					break__				}_				this.resolvedMethods.add(HttpMethod.resolve(method))__			}_		}_		else {_			this.resolvedMethods = DEFAULT_METHODS__		}_	};set,the,http,methods,to,allow,e,g,code,get,code,post,code,put,etc,p,the,special,value,code,allows,all,methods,p,if,not,set,only,code,get,and,code,head,are,allowed,p,by,default,this,is,not,set;public,void,set,allowed,methods,list,string,allowed,methods,this,allowed,methods,allowed,methods,null,new,array,list,allowed,methods,null,if,collection,utils,is,empty,allowed,methods,this,resolved,methods,new,array,list,allowed,methods,size,for,string,method,allowed,methods,if,all,equals,method,this,resolved,methods,null,break,this,resolved,methods,add,http,method,resolve,method,else,this,resolved,methods
CorsConfiguration -> public void setAllowedMethods(List<String> allowedMethods);1495868221;Set the HTTP methods to allow, e.g. {@code "GET"}, {@code "POST"},_{@code "PUT"}, etc._<p>The special value {@code "*"} allows all methods._<p>If not set, only {@code "GET"} and {@code "HEAD"} are allowed._<p>By default this is not set.;public void setAllowedMethods(List<String> allowedMethods) {_		this.allowedMethods = (allowedMethods != null ? new ArrayList<>(allowedMethods) : null)__		if (!CollectionUtils.isEmpty(allowedMethods)) {_			this.resolvedMethods = new ArrayList<>(allowedMethods.size())__			for (String method : allowedMethods) {_				if (ALL.equals(method)) {_					this.resolvedMethods = null__					break__				}_				this.resolvedMethods.add(HttpMethod.resolve(method))__			}_		}_		else {_			this.resolvedMethods = DEFAULT_METHODS__		}_	};set,the,http,methods,to,allow,e,g,code,get,code,post,code,put,etc,p,the,special,value,code,allows,all,methods,p,if,not,set,only,code,get,and,code,head,are,allowed,p,by,default,this,is,not,set;public,void,set,allowed,methods,list,string,allowed,methods,this,allowed,methods,allowed,methods,null,new,array,list,allowed,methods,null,if,collection,utils,is,empty,allowed,methods,this,resolved,methods,new,array,list,allowed,methods,size,for,string,method,allowed,methods,if,all,equals,method,this,resolved,methods,null,break,this,resolved,methods,add,http,method,resolve,method,else,this,resolved,methods
CorsConfiguration -> @Nullable 	public Long getMaxAge();1495868221;Return the configured {@code maxAge} value, or {@code null} if none._@see #setMaxAge(Long);@Nullable_	public Long getMaxAge() {_		return this.maxAge__	};return,the,configured,code,max,age,value,or,code,null,if,none,see,set,max,age,long;nullable,public,long,get,max,age,return,this,max,age
CorsConfiguration -> @Nullable 	public Long getMaxAge();1496837955;Return the configured {@code maxAge} value, or {@code null} if none._@see #setMaxAge(Long);@Nullable_	public Long getMaxAge() {_		return this.maxAge__	};return,the,configured,code,max,age,value,or,code,null,if,none,see,set,max,age,long;nullable,public,long,get,max,age,return,this,max,age
CorsConfiguration -> @Nullable 	public Long getMaxAge();1498780456;Return the configured {@code maxAge} value, or {@code null} if none._@see #setMaxAge(Long);@Nullable_	public Long getMaxAge() {_		return this.maxAge__	};return,the,configured,code,max,age,value,or,code,null,if,none,see,set,max,age,long;nullable,public,long,get,max,age,return,this,max,age
CorsConfiguration -> @Nullable 	public Long getMaxAge();1500448076;Return the configured {@code maxAge} value, or {@code null} if none._@see #setMaxAge(Long);@Nullable_	public Long getMaxAge() {_		return this.maxAge__	};return,the,configured,code,max,age,value,or,code,null,if,none,see,set,max,age,long;nullable,public,long,get,max,age,return,this,max,age
CorsConfiguration -> @Nullable 	public Long getMaxAge();1511387204;Return the configured {@code maxAge} value, or {@code null} if none._@see #setMaxAge(Long);@Nullable_	public Long getMaxAge() {_		return this.maxAge__	};return,the,configured,code,max,age,value,or,code,null,if,none,see,set,max,age,long;nullable,public,long,get,max,age,return,this,max,age
CorsConfiguration -> @Nullable 	public Long getMaxAge();1511925367;Return the configured {@code maxAge} value, or {@code null} if none._@see #setMaxAge(Long);@Nullable_	public Long getMaxAge() {_		return this.maxAge__	};return,the,configured,code,max,age,value,or,code,null,if,none,see,set,max,age,long;nullable,public,long,get,max,age,return,this,max,age
CorsConfiguration -> @Nullable 	public Long getMaxAge();1513805881;Return the configured {@code maxAge} value, or {@code null} if none._@see #setMaxAge(Long);@Nullable_	public Long getMaxAge() {_		return this.maxAge__	};return,the,configured,code,max,age,value,or,code,null,if,none,see,set,max,age,long;nullable,public,long,get,max,age,return,this,max,age
CorsConfiguration -> @Nullable 	public Long getMaxAge();1522354261;Return the configured {@code maxAge} value, or {@code null} if none._@see #setMaxAge(Long);@Nullable_	public Long getMaxAge() {_		return this.maxAge__	};return,the,configured,code,max,age,value,or,code,null,if,none,see,set,max,age,long;nullable,public,long,get,max,age,return,this,max,age
CorsConfiguration -> public void addAllowedHeader(String allowedHeader);1427983931;@see #setAllowedHeaders(java.util.List);public void addAllowedHeader(String allowedHeader) {_		if (this.allowedHeaders == null) {_			this.allowedHeaders = new ArrayList<String>()__		}_		this.allowedHeaders.add(allowedHeader)__	};see,set,allowed,headers,java,util,list;public,void,add,allowed,header,string,allowed,header,if,this,allowed,headers,null,this,allowed,headers,new,array,list,string,this,allowed,headers,add,allowed,header
CorsConfiguration -> public void addAllowedHeader(String allowedHeader);1428073011;@see #setAllowedHeaders(java.util.List);public void addAllowedHeader(String allowedHeader) {_		if (this.allowedHeaders == null) {_			this.allowedHeaders = new ArrayList<String>()__		}_		this.allowedHeaders.add(allowedHeader)__	};see,set,allowed,headers,java,util,list;public,void,add,allowed,header,string,allowed,header,if,this,allowed,headers,null,this,allowed,headers,new,array,list,string,this,allowed,headers,add,allowed,header
CorsConfiguration -> public void addAllowedHeader(String allowedHeader);1430811101;Add one actual request header to allow.;public void addAllowedHeader(String allowedHeader) {_		if (this.allowedHeaders == null) {_			this.allowedHeaders = new ArrayList<String>()__		}_		this.allowedHeaders.add(allowedHeader)__	};add,one,actual,request,header,to,allow;public,void,add,allowed,header,string,allowed,header,if,this,allowed,headers,null,this,allowed,headers,new,array,list,string,this,allowed,headers,add,allowed,header
CorsConfiguration -> public void addAllowedHeader(String allowedHeader);1431730371;Add one actual request header to allow.;public void addAllowedHeader(String allowedHeader) {_		if (this.allowedHeaders == null) {_			this.allowedHeaders = new ArrayList<String>()__		}_		this.allowedHeaders.add(allowedHeader)__	};add,one,actual,request,header,to,allow;public,void,add,allowed,header,string,allowed,header,if,this,allowed,headers,null,this,allowed,headers,new,array,list,string,this,allowed,headers,add,allowed,header
CorsConfiguration -> public void addAllowedHeader(String allowedHeader);1432857824;Add one actual request header to allow.;public void addAllowedHeader(String allowedHeader) {_		if (this.allowedHeaders == null) {_			this.allowedHeaders = new ArrayList<String>()__		}_		this.allowedHeaders.add(allowedHeader)__	};add,one,actual,request,header,to,allow;public,void,add,allowed,header,string,allowed,header,if,this,allowed,headers,null,this,allowed,headers,new,array,list,string,this,allowed,headers,add,allowed,header
CorsConfiguration -> public void addAllowedHeader(String allowedHeader);1433088837;Add one actual request header to allow.;public void addAllowedHeader(String allowedHeader) {_		if (this.allowedHeaders == null) {_			this.allowedHeaders = new ArrayList<String>()__		}_		this.allowedHeaders.add(allowedHeader)__	};add,one,actual,request,header,to,allow;public,void,add,allowed,header,string,allowed,header,if,this,allowed,headers,null,this,allowed,headers,new,array,list,string,this,allowed,headers,add,allowed,header
CorsConfiguration -> public void addAllowedHeader(String allowedHeader);1434809538;Add an actual request header to allow.;public void addAllowedHeader(String allowedHeader) {_		if (this.allowedHeaders == null) {_			this.allowedHeaders = new ArrayList<String>()__		}_		this.allowedHeaders.add(allowedHeader)__	};add,an,actual,request,header,to,allow;public,void,add,allowed,header,string,allowed,header,if,this,allowed,headers,null,this,allowed,headers,new,array,list,string,this,allowed,headers,add,allowed,header
CorsConfiguration -> public void addAllowedHeader(String allowedHeader);1436539370;Add an actual request header to allow.;public void addAllowedHeader(String allowedHeader) {_		if (this.allowedHeaders == null) {_			this.allowedHeaders = new ArrayList<String>()__		}_		this.allowedHeaders.add(allowedHeader)__	};add,an,actual,request,header,to,allow;public,void,add,allowed,header,string,allowed,header,if,this,allowed,headers,null,this,allowed,headers,new,array,list,string,this,allowed,headers,add,allowed,header
CorsConfiguration -> public void addAllowedHeader(String allowedHeader);1438251419;Add an actual request header to allow.;public void addAllowedHeader(String allowedHeader) {_		if (this.allowedHeaders == null) {_			this.allowedHeaders = new ArrayList<String>()__		}_		this.allowedHeaders.add(allowedHeader)__	};add,an,actual,request,header,to,allow;public,void,add,allowed,header,string,allowed,header,if,this,allowed,headers,null,this,allowed,headers,new,array,list,string,this,allowed,headers,add,allowed,header
CorsConfiguration -> public void addAllowedHeader(String allowedHeader);1447321232;Add an actual request header to allow.;public void addAllowedHeader(String allowedHeader) {_		if (this.allowedHeaders == null) {_			this.allowedHeaders = new ArrayList<String>()__		}_		this.allowedHeaders.add(allowedHeader)__	};add,an,actual,request,header,to,allow;public,void,add,allowed,header,string,allowed,header,if,this,allowed,headers,null,this,allowed,headers,new,array,list,string,this,allowed,headers,add,allowed,header
CorsConfiguration -> public void addAllowedHeader(String allowedHeader);1449660404;Add an actual request header to allow.;public void addAllowedHeader(String allowedHeader) {_		if (this.allowedHeaders == null) {_			this.allowedHeaders = new ArrayList<String>()__		}_		this.allowedHeaders.add(allowedHeader)__	};add,an,actual,request,header,to,allow;public,void,add,allowed,header,string,allowed,header,if,this,allowed,headers,null,this,allowed,headers,new,array,list,string,this,allowed,headers,add,allowed,header
CorsConfiguration -> public void addAllowedHeader(String allowedHeader);1453684721;Add an actual request header to allow.;public void addAllowedHeader(String allowedHeader) {_		if (this.allowedHeaders == null) {_			this.allowedHeaders = new ArrayList<String>()__		}_		this.allowedHeaders.add(allowedHeader)__	};add,an,actual,request,header,to,allow;public,void,add,allowed,header,string,allowed,header,if,this,allowed,headers,null,this,allowed,headers,new,array,list,string,this,allowed,headers,add,allowed,header
CorsConfiguration -> public void addAllowedHeader(String allowedHeader);1467730834;Add an actual request header to allow.;public void addAllowedHeader(String allowedHeader) {_		if (this.allowedHeaders == null) {_			this.allowedHeaders = new ArrayList<>()__		}_		this.allowedHeaders.add(allowedHeader)__	};add,an,actual,request,header,to,allow;public,void,add,allowed,header,string,allowed,header,if,this,allowed,headers,null,this,allowed,headers,new,array,list,this,allowed,headers,add,allowed,header
CorsConfiguration -> public void addAllowedHeader(String allowedHeader);1472031618;Add an actual request header to allow.;public void addAllowedHeader(String allowedHeader) {_		if (this.allowedHeaders == null) {_			this.allowedHeaders = new ArrayList<>(4)__		}_		this.allowedHeaders.add(allowedHeader)__	};add,an,actual,request,header,to,allow;public,void,add,allowed,header,string,allowed,header,if,this,allowed,headers,null,this,allowed,headers,new,array,list,4,this,allowed,headers,add,allowed,header
CorsConfiguration -> public void addAllowedHeader(String allowedHeader);1476175114;Add an actual request header to allow.;public void addAllowedHeader(String allowedHeader) {_		if (this.allowedHeaders == null) {_			this.allowedHeaders = new ArrayList<>(4)__		}_		this.allowedHeaders.add(allowedHeader)__	};add,an,actual,request,header,to,allow;public,void,add,allowed,header,string,allowed,header,if,this,allowed,headers,null,this,allowed,headers,new,array,list,4,this,allowed,headers,add,allowed,header
CorsConfiguration -> public void addAllowedHeader(String allowedHeader);1476909116;Add an actual request header to allow.;public void addAllowedHeader(String allowedHeader) {_		if (this.allowedHeaders == null) {_			this.allowedHeaders = new ArrayList<>(4)__		}_		this.allowedHeaders.add(allowedHeader)__	};add,an,actual,request,header,to,allow;public,void,add,allowed,header,string,allowed,header,if,this,allowed,headers,null,this,allowed,headers,new,array,list,4,this,allowed,headers,add,allowed,header
CorsConfiguration -> public void addAllowedHeader(String allowedHeader);1487713300;Add an actual request header to allow.;public void addAllowedHeader(String allowedHeader) {_		if (this.allowedHeaders == null) {_			this.allowedHeaders = new ArrayList<>(4)__		}_		this.allowedHeaders.add(allowedHeader)__	};add,an,actual,request,header,to,allow;public,void,add,allowed,header,string,allowed,header,if,this,allowed,headers,null,this,allowed,headers,new,array,list,4,this,allowed,headers,add,allowed,header
CorsConfiguration -> public void addAllowedHeader(String allowedHeader);1495868221;Add an actual request header to allow.;public void addAllowedHeader(String allowedHeader) {_		if (this.allowedHeaders == null) {_			this.allowedHeaders = new ArrayList<>(4)__		}_		this.allowedHeaders.add(allowedHeader)__	};add,an,actual,request,header,to,allow;public,void,add,allowed,header,string,allowed,header,if,this,allowed,headers,null,this,allowed,headers,new,array,list,4,this,allowed,headers,add,allowed,header
CorsConfiguration -> public void addAllowedHeader(String allowedHeader);1496837955;Add an actual request header to allow.;public void addAllowedHeader(String allowedHeader) {_		if (this.allowedHeaders == null) {_			this.allowedHeaders = new ArrayList<>(4)__		}_		this.allowedHeaders.add(allowedHeader)__	};add,an,actual,request,header,to,allow;public,void,add,allowed,header,string,allowed,header,if,this,allowed,headers,null,this,allowed,headers,new,array,list,4,this,allowed,headers,add,allowed,header
CorsConfiguration -> public void addAllowedHeader(String allowedHeader);1498780456;Add an actual request header to allow.;public void addAllowedHeader(String allowedHeader) {_		if (this.allowedHeaders == null) {_			this.allowedHeaders = new ArrayList<>(4)__		}_		this.allowedHeaders.add(allowedHeader)__	};add,an,actual,request,header,to,allow;public,void,add,allowed,header,string,allowed,header,if,this,allowed,headers,null,this,allowed,headers,new,array,list,4,this,allowed,headers,add,allowed,header
CorsConfiguration -> public void addAllowedHeader(String allowedHeader);1500448076;Add an actual request header to allow.;public void addAllowedHeader(String allowedHeader) {_		if (this.allowedHeaders == null) {_			this.allowedHeaders = new ArrayList<>(4)__		}_		this.allowedHeaders.add(allowedHeader)__	};add,an,actual,request,header,to,allow;public,void,add,allowed,header,string,allowed,header,if,this,allowed,headers,null,this,allowed,headers,new,array,list,4,this,allowed,headers,add,allowed,header
CorsConfiguration -> public void addAllowedHeader(String allowedHeader);1511387204;Add an actual request header to allow.;public void addAllowedHeader(String allowedHeader) {_		if (this.allowedHeaders == null) {_			this.allowedHeaders = new ArrayList<>(4)__		}_		this.allowedHeaders.add(allowedHeader)__	};add,an,actual,request,header,to,allow;public,void,add,allowed,header,string,allowed,header,if,this,allowed,headers,null,this,allowed,headers,new,array,list,4,this,allowed,headers,add,allowed,header
CorsConfiguration -> public void addAllowedHeader(String allowedHeader);1511925367;Add an actual request header to allow.;public void addAllowedHeader(String allowedHeader) {_		if (this.allowedHeaders == null) {_			this.allowedHeaders = new ArrayList<>(4)__		}_		this.allowedHeaders.add(allowedHeader)__	};add,an,actual,request,header,to,allow;public,void,add,allowed,header,string,allowed,header,if,this,allowed,headers,null,this,allowed,headers,new,array,list,4,this,allowed,headers,add,allowed,header
CorsConfiguration -> public void addAllowedHeader(String allowedHeader);1513805881;Add an actual request header to allow.;public void addAllowedHeader(String allowedHeader) {_		if (this.allowedHeaders == null) {_			this.allowedHeaders = new ArrayList<>(4)__		}_		else if (this.allowedHeaders == DEFAULT_PERMIT_ALL) {_			setAllowedHeaders(DEFAULT_PERMIT_ALL)__		}_		this.allowedHeaders.add(allowedHeader)__	};add,an,actual,request,header,to,allow;public,void,add,allowed,header,string,allowed,header,if,this,allowed,headers,null,this,allowed,headers,new,array,list,4,else,if,this,allowed,headers,set,allowed,headers,this,allowed,headers,add,allowed,header
CorsConfiguration -> public void addAllowedHeader(String allowedHeader);1522354261;Add an actual request header to allow.;public void addAllowedHeader(String allowedHeader) {_		if (this.allowedHeaders == null) {_			this.allowedHeaders = new ArrayList<>(4)__		}_		else if (this.allowedHeaders == DEFAULT_PERMIT_ALL) {_			setAllowedHeaders(DEFAULT_PERMIT_ALL)__		}_		this.allowedHeaders.add(allowedHeader)__	};add,an,actual,request,header,to,allow;public,void,add,allowed,header,string,allowed,header,if,this,allowed,headers,null,this,allowed,headers,new,array,list,4,else,if,this,allowed,headers,set,allowed,headers,this,allowed,headers,add,allowed,header
CorsConfiguration -> public Long getMaxAge();1427983931;@see #setMaxAge(Long);public Long getMaxAge() {_		return maxAge__	};see,set,max,age,long;public,long,get,max,age,return,max,age
CorsConfiguration -> public Long getMaxAge();1428073011;@see #setMaxAge(Long);public Long getMaxAge() {_		return maxAge__	};see,set,max,age,long;public,long,get,max,age,return,max,age
CorsConfiguration -> public Long getMaxAge();1430811101;Return the configure maxAge value, possibly {@code null}.;public Long getMaxAge() {_		return maxAge__	};return,the,configure,max,age,value,possibly,code,null;public,long,get,max,age,return,max,age
CorsConfiguration -> public Long getMaxAge();1431730371;Return the configure maxAge value, possibly {@code null}.;public Long getMaxAge() {_		return maxAge__	};return,the,configure,max,age,value,possibly,code,null;public,long,get,max,age,return,max,age
CorsConfiguration -> public Long getMaxAge();1432857824;Return the configure maxAge value, possibly {@code null}.;public Long getMaxAge() {_		return maxAge__	};return,the,configure,max,age,value,possibly,code,null;public,long,get,max,age,return,max,age
CorsConfiguration -> public Long getMaxAge();1433088837;Return the configured maxAge value, possibly {@code null}.;public Long getMaxAge() {_		return maxAge__	};return,the,configured,max,age,value,possibly,code,null;public,long,get,max,age,return,max,age
CorsConfiguration -> public Long getMaxAge();1434809538;Return the configured {@code maxAge} value, possibly {@code null}._@see #setMaxAge(Long);public Long getMaxAge() {_		return maxAge__	};return,the,configured,code,max,age,value,possibly,code,null,see,set,max,age,long;public,long,get,max,age,return,max,age
CorsConfiguration -> public Long getMaxAge();1436539370;Return the configured {@code maxAge} value, possibly {@code null}._@see #setMaxAge(Long);public Long getMaxAge() {_		return maxAge__	};return,the,configured,code,max,age,value,possibly,code,null,see,set,max,age,long;public,long,get,max,age,return,max,age
CorsConfiguration -> public Long getMaxAge();1438251419;Return the configured {@code maxAge} value, possibly {@code null}._@see #setMaxAge(Long);public Long getMaxAge() {_		return this.maxAge__	};return,the,configured,code,max,age,value,possibly,code,null,see,set,max,age,long;public,long,get,max,age,return,this,max,age
CorsConfiguration -> public Long getMaxAge();1447321232;Return the configured {@code maxAge} value, possibly {@code null}._@see #setMaxAge(Long);public Long getMaxAge() {_		return this.maxAge__	};return,the,configured,code,max,age,value,possibly,code,null,see,set,max,age,long;public,long,get,max,age,return,this,max,age
CorsConfiguration -> public Long getMaxAge();1449660404;Return the configured {@code maxAge} value, possibly {@code null}._@see #setMaxAge(Long);public Long getMaxAge() {_		return this.maxAge__	};return,the,configured,code,max,age,value,possibly,code,null,see,set,max,age,long;public,long,get,max,age,return,this,max,age
CorsConfiguration -> public Long getMaxAge();1453684721;Return the configured {@code maxAge} value, possibly {@code null}._@see #setMaxAge(Long);public Long getMaxAge() {_		return this.maxAge__	};return,the,configured,code,max,age,value,possibly,code,null,see,set,max,age,long;public,long,get,max,age,return,this,max,age
CorsConfiguration -> public Long getMaxAge();1467730834;Return the configured {@code maxAge} value, possibly {@code null}._@see #setMaxAge(Long);public Long getMaxAge() {_		return this.maxAge__	};return,the,configured,code,max,age,value,possibly,code,null,see,set,max,age,long;public,long,get,max,age,return,this,max,age
CorsConfiguration -> public Long getMaxAge();1472031618;Return the configured {@code maxAge} value, possibly {@code null}._@see #setMaxAge(Long);public Long getMaxAge() {_		return this.maxAge__	};return,the,configured,code,max,age,value,possibly,code,null,see,set,max,age,long;public,long,get,max,age,return,this,max,age
CorsConfiguration -> public Long getMaxAge();1476175114;Return the configured {@code maxAge} value, possibly {@code null}._@see #setMaxAge(Long);public Long getMaxAge() {_		return this.maxAge__	};return,the,configured,code,max,age,value,possibly,code,null,see,set,max,age,long;public,long,get,max,age,return,this,max,age
CorsConfiguration -> public Long getMaxAge();1476909116;Return the configured {@code maxAge} value, possibly {@code null}._@see #setMaxAge(Long);public Long getMaxAge() {_		return this.maxAge__	};return,the,configured,code,max,age,value,possibly,code,null,see,set,max,age,long;public,long,get,max,age,return,this,max,age
CorsConfiguration -> public Long getMaxAge();1487713300;Return the configured {@code maxAge} value, or {@code null} if none._@see #setMaxAge(Long);public Long getMaxAge() {_		return this.maxAge__	};return,the,configured,code,max,age,value,or,code,null,if,none,see,set,max,age,long;public,long,get,max,age,return,this,max,age
CorsConfiguration -> public Boolean isAllowCredentials();1427983931;@see #setAllowCredentials(Boolean);public Boolean isAllowCredentials() {_		return this.allowCredentials__	};see,set,allow,credentials,boolean;public,boolean,is,allow,credentials,return,this,allow,credentials
CorsConfiguration -> public Boolean isAllowCredentials();1428073011;@see #setAllowCredentials(Boolean);public Boolean isAllowCredentials() {_		return this.allowCredentials__	};see,set,allow,credentials,boolean;public,boolean,is,allow,credentials,return,this,allow,credentials
CorsConfiguration -> @Nullable 	public List<String> getAllowedHeaders();1495868221;Return the allowed actual request headers, or {@code null} if none._@see #addAllowedHeader(String)_@see #setAllowedHeaders(List);@Nullable_	public List<String> getAllowedHeaders() {_		return this.allowedHeaders__	};return,the,allowed,actual,request,headers,or,code,null,if,none,see,add,allowed,header,string,see,set,allowed,headers,list;nullable,public,list,string,get,allowed,headers,return,this,allowed,headers
CorsConfiguration -> @Nullable 	public List<String> getAllowedHeaders();1496837955;Return the allowed actual request headers, or {@code null} if none._@see #addAllowedHeader(String)_@see #setAllowedHeaders(List);@Nullable_	public List<String> getAllowedHeaders() {_		return this.allowedHeaders__	};return,the,allowed,actual,request,headers,or,code,null,if,none,see,add,allowed,header,string,see,set,allowed,headers,list;nullable,public,list,string,get,allowed,headers,return,this,allowed,headers
CorsConfiguration -> @Nullable 	public List<String> getAllowedHeaders();1498780456;Return the allowed actual request headers, or {@code null} if none._@see #addAllowedHeader(String)_@see #setAllowedHeaders(List);@Nullable_	public List<String> getAllowedHeaders() {_		return this.allowedHeaders__	};return,the,allowed,actual,request,headers,or,code,null,if,none,see,add,allowed,header,string,see,set,allowed,headers,list;nullable,public,list,string,get,allowed,headers,return,this,allowed,headers
CorsConfiguration -> @Nullable 	public List<String> getAllowedHeaders();1500448076;Return the allowed actual request headers, or {@code null} if none._@see #addAllowedHeader(String)_@see #setAllowedHeaders(List);@Nullable_	public List<String> getAllowedHeaders() {_		return this.allowedHeaders__	};return,the,allowed,actual,request,headers,or,code,null,if,none,see,add,allowed,header,string,see,set,allowed,headers,list;nullable,public,list,string,get,allowed,headers,return,this,allowed,headers
CorsConfiguration -> @Nullable 	public List<String> getAllowedHeaders();1511387204;Return the allowed actual request headers, or {@code null} if none._@see #addAllowedHeader(String)_@see #setAllowedHeaders(List);@Nullable_	public List<String> getAllowedHeaders() {_		return this.allowedHeaders__	};return,the,allowed,actual,request,headers,or,code,null,if,none,see,add,allowed,header,string,see,set,allowed,headers,list;nullable,public,list,string,get,allowed,headers,return,this,allowed,headers
CorsConfiguration -> @Nullable 	public List<String> getAllowedHeaders();1511925367;Return the allowed actual request headers, or {@code null} if none._@see #addAllowedHeader(String)_@see #setAllowedHeaders(List);@Nullable_	public List<String> getAllowedHeaders() {_		return this.allowedHeaders__	};return,the,allowed,actual,request,headers,or,code,null,if,none,see,add,allowed,header,string,see,set,allowed,headers,list;nullable,public,list,string,get,allowed,headers,return,this,allowed,headers
CorsConfiguration -> @Nullable 	public List<String> getAllowedHeaders();1513805881;Return the allowed actual request headers, or {@code null} if none._@see #addAllowedHeader(String)_@see #setAllowedHeaders(List);@Nullable_	public List<String> getAllowedHeaders() {_		return this.allowedHeaders__	};return,the,allowed,actual,request,headers,or,code,null,if,none,see,add,allowed,header,string,see,set,allowed,headers,list;nullable,public,list,string,get,allowed,headers,return,this,allowed,headers
CorsConfiguration -> @Nullable 	public List<String> getAllowedHeaders();1522354261;Return the allowed actual request headers, or {@code null} if none._@see #addAllowedHeader(String)_@see #setAllowedHeaders(List);@Nullable_	public List<String> getAllowedHeaders() {_		return this.allowedHeaders__	};return,the,allowed,actual,request,headers,or,code,null,if,none,see,add,allowed,header,string,see,set,allowed,headers,list;nullable,public,list,string,get,allowed,headers,return,this,allowed,headers
CorsConfiguration -> public void setExposedHeaders(@Nullable List<String> exposedHeaders);1496837955;Set the list of response headers other than simple headers (i.e._{@code Cache-Control}, {@code Content-Language}, {@code Content-Type},_{@code Expires}, {@code Last-Modified}, or {@code Pragma}) that an_actual response might have and can be exposed._<p>Note that {@code "*"} is not a valid exposed header value._<p>By default this is not set.;public void setExposedHeaders(@Nullable List<String> exposedHeaders) {_		if (exposedHeaders != null && exposedHeaders.contains(ALL)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		this.exposedHeaders = (exposedHeaders != null ? new ArrayList<>(exposedHeaders) : null)__	};set,the,list,of,response,headers,other,than,simple,headers,i,e,code,cache,control,code,content,language,code,content,type,code,expires,code,last,modified,or,code,pragma,that,an,actual,response,might,have,and,can,be,exposed,p,note,that,code,is,not,a,valid,exposed,header,value,p,by,default,this,is,not,set;public,void,set,exposed,headers,nullable,list,string,exposed,headers,if,exposed,headers,null,exposed,headers,contains,all,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,this,exposed,headers,exposed,headers,null,new,array,list,exposed,headers,null
CorsConfiguration -> public void setExposedHeaders(@Nullable List<String> exposedHeaders);1498780456;Set the list of response headers other than simple headers (i.e._{@code Cache-Control}, {@code Content-Language}, {@code Content-Type},_{@code Expires}, {@code Last-Modified}, or {@code Pragma}) that an_actual response might have and can be exposed._<p>Note that {@code "*"} is not a valid exposed header value._<p>By default this is not set.;public void setExposedHeaders(@Nullable List<String> exposedHeaders) {_		if (exposedHeaders != null && exposedHeaders.contains(ALL)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		this.exposedHeaders = (exposedHeaders != null ? new ArrayList<>(exposedHeaders) : null)__	};set,the,list,of,response,headers,other,than,simple,headers,i,e,code,cache,control,code,content,language,code,content,type,code,expires,code,last,modified,or,code,pragma,that,an,actual,response,might,have,and,can,be,exposed,p,note,that,code,is,not,a,valid,exposed,header,value,p,by,default,this,is,not,set;public,void,set,exposed,headers,nullable,list,string,exposed,headers,if,exposed,headers,null,exposed,headers,contains,all,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,this,exposed,headers,exposed,headers,null,new,array,list,exposed,headers,null
CorsConfiguration -> public void setExposedHeaders(@Nullable List<String> exposedHeaders);1500448076;Set the list of response headers other than simple headers (i.e._{@code Cache-Control}, {@code Content-Language}, {@code Content-Type},_{@code Expires}, {@code Last-Modified}, or {@code Pragma}) that an_actual response might have and can be exposed._<p>Note that {@code "*"} is not a valid exposed header value._<p>By default this is not set.;public void setExposedHeaders(@Nullable List<String> exposedHeaders) {_		if (exposedHeaders != null && exposedHeaders.contains(ALL)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		this.exposedHeaders = (exposedHeaders != null ? new ArrayList<>(exposedHeaders) : null)__	};set,the,list,of,response,headers,other,than,simple,headers,i,e,code,cache,control,code,content,language,code,content,type,code,expires,code,last,modified,or,code,pragma,that,an,actual,response,might,have,and,can,be,exposed,p,note,that,code,is,not,a,valid,exposed,header,value,p,by,default,this,is,not,set;public,void,set,exposed,headers,nullable,list,string,exposed,headers,if,exposed,headers,null,exposed,headers,contains,all,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,this,exposed,headers,exposed,headers,null,new,array,list,exposed,headers,null
CorsConfiguration -> public void setExposedHeaders(@Nullable List<String> exposedHeaders);1511387204;Set the list of response headers other than simple headers (i.e._{@code Cache-Control}, {@code Content-Language}, {@code Content-Type},_{@code Expires}, {@code Last-Modified}, or {@code Pragma}) that an_actual response might have and can be exposed._<p>Note that {@code "*"} is not a valid exposed header value._<p>By default this is not set.;public void setExposedHeaders(@Nullable List<String> exposedHeaders) {_		if (exposedHeaders != null && exposedHeaders.contains(ALL)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		this.exposedHeaders = (exposedHeaders != null ? new ArrayList<>(exposedHeaders) : null)__	};set,the,list,of,response,headers,other,than,simple,headers,i,e,code,cache,control,code,content,language,code,content,type,code,expires,code,last,modified,or,code,pragma,that,an,actual,response,might,have,and,can,be,exposed,p,note,that,code,is,not,a,valid,exposed,header,value,p,by,default,this,is,not,set;public,void,set,exposed,headers,nullable,list,string,exposed,headers,if,exposed,headers,null,exposed,headers,contains,all,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,this,exposed,headers,exposed,headers,null,new,array,list,exposed,headers,null
CorsConfiguration -> public void setExposedHeaders(@Nullable List<String> exposedHeaders);1511925367;Set the list of response headers other than simple headers (i.e._{@code Cache-Control}, {@code Content-Language}, {@code Content-Type},_{@code Expires}, {@code Last-Modified}, or {@code Pragma}) that an_actual response might have and can be exposed._<p>Note that {@code "*"} is not a valid exposed header value._<p>By default this is not set.;public void setExposedHeaders(@Nullable List<String> exposedHeaders) {_		if (exposedHeaders != null && exposedHeaders.contains(ALL)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		this.exposedHeaders = (exposedHeaders != null ? new ArrayList<>(exposedHeaders) : null)__	};set,the,list,of,response,headers,other,than,simple,headers,i,e,code,cache,control,code,content,language,code,content,type,code,expires,code,last,modified,or,code,pragma,that,an,actual,response,might,have,and,can,be,exposed,p,note,that,code,is,not,a,valid,exposed,header,value,p,by,default,this,is,not,set;public,void,set,exposed,headers,nullable,list,string,exposed,headers,if,exposed,headers,null,exposed,headers,contains,all,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,this,exposed,headers,exposed,headers,null,new,array,list,exposed,headers,null
CorsConfiguration -> public void setExposedHeaders(@Nullable List<String> exposedHeaders);1513805881;Set the list of response headers other than simple headers (i.e._{@code Cache-Control}, {@code Content-Language}, {@code Content-Type},_{@code Expires}, {@code Last-Modified}, or {@code Pragma}) that an_actual response might have and can be exposed._<p>Note that {@code "*"} is not a valid exposed header value._<p>By default this is not set.;public void setExposedHeaders(@Nullable List<String> exposedHeaders) {_		if (exposedHeaders != null && exposedHeaders.contains(ALL)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		this.exposedHeaders = (exposedHeaders != null ? new ArrayList<>(exposedHeaders) : null)__	};set,the,list,of,response,headers,other,than,simple,headers,i,e,code,cache,control,code,content,language,code,content,type,code,expires,code,last,modified,or,code,pragma,that,an,actual,response,might,have,and,can,be,exposed,p,note,that,code,is,not,a,valid,exposed,header,value,p,by,default,this,is,not,set;public,void,set,exposed,headers,nullable,list,string,exposed,headers,if,exposed,headers,null,exposed,headers,contains,all,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,this,exposed,headers,exposed,headers,null,new,array,list,exposed,headers,null
CorsConfiguration -> public void setExposedHeaders(@Nullable List<String> exposedHeaders);1522354261;Set the list of response headers other than simple headers (i.e._{@code Cache-Control}, {@code Content-Language}, {@code Content-Type},_{@code Expires}, {@code Last-Modified}, or {@code Pragma}) that an_actual response might have and can be exposed._<p>Note that {@code "*"} is not a valid exposed header value._<p>By default this is not set.;public void setExposedHeaders(@Nullable List<String> exposedHeaders) {_		if (exposedHeaders != null && exposedHeaders.contains(ALL)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		this.exposedHeaders = (exposedHeaders != null ? new ArrayList<>(exposedHeaders) : null)__	};set,the,list,of,response,headers,other,than,simple,headers,i,e,code,cache,control,code,content,language,code,content,type,code,expires,code,last,modified,or,code,pragma,that,an,actual,response,might,have,and,can,be,exposed,p,note,that,code,is,not,a,valid,exposed,header,value,p,by,default,this,is,not,set;public,void,set,exposed,headers,nullable,list,string,exposed,headers,if,exposed,headers,null,exposed,headers,contains,all,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,this,exposed,headers,exposed,headers,null,new,array,list,exposed,headers,null
CorsConfiguration -> public List<String> getAllowedHeaders();1427983931;@see #setAllowedHeaders(java.util.List);public List<String> getAllowedHeaders() {_		return this.allowedHeaders == null ? null : Collections.unmodifiableList(this.allowedHeaders)__	};see,set,allowed,headers,java,util,list;public,list,string,get,allowed,headers,return,this,allowed,headers,null,null,collections,unmodifiable,list,this,allowed,headers
CorsConfiguration -> public List<String> getAllowedHeaders();1428073011;@see #setAllowedHeaders(java.util.List);public List<String> getAllowedHeaders() {_		return this.allowedHeaders == null ? null : Collections.unmodifiableList(this.allowedHeaders)__	};see,set,allowed,headers,java,util,list;public,list,string,get,allowed,headers,return,this,allowed,headers,null,null,collections,unmodifiable,list,this,allowed,headers
CorsConfiguration -> public List<String> getAllowedHeaders();1430811101;Return the allowed actual request headers, possibly {@code null}.;public List<String> getAllowedHeaders() {_		return this.allowedHeaders__	};return,the,allowed,actual,request,headers,possibly,code,null;public,list,string,get,allowed,headers,return,this,allowed,headers
CorsConfiguration -> public List<String> getAllowedHeaders();1431730371;Return the allowed actual request headers, possibly {@code null}.;public List<String> getAllowedHeaders() {_		return this.allowedHeaders__	};return,the,allowed,actual,request,headers,possibly,code,null;public,list,string,get,allowed,headers,return,this,allowed,headers
CorsConfiguration -> public List<String> getAllowedHeaders();1432857824;Return the allowed actual request headers, possibly {@code null}.;public List<String> getAllowedHeaders() {_		return this.allowedHeaders__	};return,the,allowed,actual,request,headers,possibly,code,null;public,list,string,get,allowed,headers,return,this,allowed,headers
CorsConfiguration -> public List<String> getAllowedHeaders();1433088837;Return the allowed actual request headers, possibly {@code null}.;public List<String> getAllowedHeaders() {_		return this.allowedHeaders__	};return,the,allowed,actual,request,headers,possibly,code,null;public,list,string,get,allowed,headers,return,this,allowed,headers
CorsConfiguration -> public List<String> getAllowedHeaders();1434809538;Return the allowed actual request headers, possibly {@code null}._@see #addAllowedHeader(String)_@see #setAllowedHeaders(List);public List<String> getAllowedHeaders() {_		return this.allowedHeaders__	};return,the,allowed,actual,request,headers,possibly,code,null,see,add,allowed,header,string,see,set,allowed,headers,list;public,list,string,get,allowed,headers,return,this,allowed,headers
CorsConfiguration -> public List<String> getAllowedHeaders();1436539370;Return the allowed actual request headers, possibly {@code null}._@see #addAllowedHeader(String)_@see #setAllowedHeaders(List);public List<String> getAllowedHeaders() {_		return this.allowedHeaders__	};return,the,allowed,actual,request,headers,possibly,code,null,see,add,allowed,header,string,see,set,allowed,headers,list;public,list,string,get,allowed,headers,return,this,allowed,headers
CorsConfiguration -> public List<String> getAllowedHeaders();1438251419;Return the allowed actual request headers, possibly {@code null}._@see #addAllowedHeader(String)_@see #setAllowedHeaders(List);public List<String> getAllowedHeaders() {_		return this.allowedHeaders__	};return,the,allowed,actual,request,headers,possibly,code,null,see,add,allowed,header,string,see,set,allowed,headers,list;public,list,string,get,allowed,headers,return,this,allowed,headers
CorsConfiguration -> public List<String> getAllowedHeaders();1447321232;Return the allowed actual request headers, possibly {@code null}._@see #addAllowedHeader(String)_@see #setAllowedHeaders(List);public List<String> getAllowedHeaders() {_		return this.allowedHeaders__	};return,the,allowed,actual,request,headers,possibly,code,null,see,add,allowed,header,string,see,set,allowed,headers,list;public,list,string,get,allowed,headers,return,this,allowed,headers
CorsConfiguration -> public List<String> getAllowedHeaders();1449660404;Return the allowed actual request headers, possibly {@code null}._@see #addAllowedHeader(String)_@see #setAllowedHeaders(List);public List<String> getAllowedHeaders() {_		return this.allowedHeaders__	};return,the,allowed,actual,request,headers,possibly,code,null,see,add,allowed,header,string,see,set,allowed,headers,list;public,list,string,get,allowed,headers,return,this,allowed,headers
CorsConfiguration -> public List<String> getAllowedHeaders();1453684721;Return the allowed actual request headers, possibly {@code null}._@see #addAllowedHeader(String)_@see #setAllowedHeaders(List);public List<String> getAllowedHeaders() {_		return this.allowedHeaders__	};return,the,allowed,actual,request,headers,possibly,code,null,see,add,allowed,header,string,see,set,allowed,headers,list;public,list,string,get,allowed,headers,return,this,allowed,headers
CorsConfiguration -> public List<String> getAllowedHeaders();1467730834;Return the allowed actual request headers, possibly {@code null}._@see #addAllowedHeader(String)_@see #setAllowedHeaders(List);public List<String> getAllowedHeaders() {_		return this.allowedHeaders__	};return,the,allowed,actual,request,headers,possibly,code,null,see,add,allowed,header,string,see,set,allowed,headers,list;public,list,string,get,allowed,headers,return,this,allowed,headers
CorsConfiguration -> public List<String> getAllowedHeaders();1472031618;Return the allowed actual request headers, possibly {@code null}._@see #addAllowedHeader(String)_@see #setAllowedHeaders(List);public List<String> getAllowedHeaders() {_		return this.allowedHeaders__	};return,the,allowed,actual,request,headers,possibly,code,null,see,add,allowed,header,string,see,set,allowed,headers,list;public,list,string,get,allowed,headers,return,this,allowed,headers
CorsConfiguration -> public List<String> getAllowedHeaders();1476175114;Return the allowed actual request headers, possibly {@code null}._@see #addAllowedHeader(String)_@see #setAllowedHeaders(List);public List<String> getAllowedHeaders() {_		return this.allowedHeaders__	};return,the,allowed,actual,request,headers,possibly,code,null,see,add,allowed,header,string,see,set,allowed,headers,list;public,list,string,get,allowed,headers,return,this,allowed,headers
CorsConfiguration -> public List<String> getAllowedHeaders();1476909116;Return the allowed actual request headers, possibly {@code null}._@see #addAllowedHeader(String)_@see #setAllowedHeaders(List);public List<String> getAllowedHeaders() {_		return this.allowedHeaders__	};return,the,allowed,actual,request,headers,possibly,code,null,see,add,allowed,header,string,see,set,allowed,headers,list;public,list,string,get,allowed,headers,return,this,allowed,headers
CorsConfiguration -> public List<String> getAllowedHeaders();1487713300;Return the allowed actual request headers, or {@code null} if none._@see #addAllowedHeader(String)_@see #setAllowedHeaders(List);public List<String> getAllowedHeaders() {_		return this.allowedHeaders__	};return,the,allowed,actual,request,headers,or,code,null,if,none,see,add,allowed,header,string,see,set,allowed,headers,list;public,list,string,get,allowed,headers,return,this,allowed,headers
CorsConfiguration -> public void addAllowedMethod(String method);1430811101;Add an HTTP method to allow.;public void addAllowedMethod(String method) {_		if (this.allowedMethods == null) {_			this.allowedMethods = new ArrayList<String>()__		}_		this.allowedMethods.add(method)__	};add,an,http,method,to,allow;public,void,add,allowed,method,string,method,if,this,allowed,methods,null,this,allowed,methods,new,array,list,string,this,allowed,methods,add,method
CorsConfiguration -> public void addAllowedMethod(String method);1431730371;Add an HTTP method to allow.;public void addAllowedMethod(String method) {_		if (this.allowedMethods == null) {_			this.allowedMethods = new ArrayList<String>()__		}_		this.allowedMethods.add(method)__	};add,an,http,method,to,allow;public,void,add,allowed,method,string,method,if,this,allowed,methods,null,this,allowed,methods,new,array,list,string,this,allowed,methods,add,method
CorsConfiguration -> public void addAllowedMethod(String method);1432857824;Add an HTTP method to allow.;public void addAllowedMethod(String method) {_		if (this.allowedMethods == null) {_			this.allowedMethods = new ArrayList<String>()__		}_		this.allowedMethods.add(method)__	};add,an,http,method,to,allow;public,void,add,allowed,method,string,method,if,this,allowed,methods,null,this,allowed,methods,new,array,list,string,this,allowed,methods,add,method
CorsConfiguration -> public void addAllowedMethod(String method);1433088837;Add an HTTP method to allow.;public void addAllowedMethod(String method) {_		if (this.allowedMethods == null) {_			this.allowedMethods = new ArrayList<String>()__		}_		this.allowedMethods.add(method)__	};add,an,http,method,to,allow;public,void,add,allowed,method,string,method,if,this,allowed,methods,null,this,allowed,methods,new,array,list,string,this,allowed,methods,add,method
CorsConfiguration -> public void addAllowedMethod(String method);1434809538;Add an HTTP method to allow.;public void addAllowedMethod(String method) {_		if (StringUtils.hasText(method)) {_			if (this.allowedMethods == null) {_				this.allowedMethods = new ArrayList<String>()__			}_			this.allowedMethods.add(method)__		}_	};add,an,http,method,to,allow;public,void,add,allowed,method,string,method,if,string,utils,has,text,method,if,this,allowed,methods,null,this,allowed,methods,new,array,list,string,this,allowed,methods,add,method
CorsConfiguration -> public void addAllowedMethod(String method);1436539370;Add an HTTP method to allow.;public void addAllowedMethod(String method) {_		if (StringUtils.hasText(method)) {_			if (this.allowedMethods == null) {_				this.allowedMethods = new ArrayList<String>()__			}_			this.allowedMethods.add(method)__		}_	};add,an,http,method,to,allow;public,void,add,allowed,method,string,method,if,string,utils,has,text,method,if,this,allowed,methods,null,this,allowed,methods,new,array,list,string,this,allowed,methods,add,method
CorsConfiguration -> public void addAllowedMethod(String method);1438251419;Add an HTTP method to allow.;public void addAllowedMethod(String method) {_		if (StringUtils.hasText(method)) {_			if (this.allowedMethods == null) {_				this.allowedMethods = new ArrayList<String>()__			}_			this.allowedMethods.add(method)__		}_	};add,an,http,method,to,allow;public,void,add,allowed,method,string,method,if,string,utils,has,text,method,if,this,allowed,methods,null,this,allowed,methods,new,array,list,string,this,allowed,methods,add,method
CorsConfiguration -> public void addAllowedMethod(String method);1447321232;Add an HTTP method to allow.;public void addAllowedMethod(String method) {_		if (StringUtils.hasText(method)) {_			if (this.allowedMethods == null) {_				this.allowedMethods = new ArrayList<String>()__			}_			this.allowedMethods.add(method)__		}_	};add,an,http,method,to,allow;public,void,add,allowed,method,string,method,if,string,utils,has,text,method,if,this,allowed,methods,null,this,allowed,methods,new,array,list,string,this,allowed,methods,add,method
CorsConfiguration -> public void addAllowedMethod(String method);1449660404;Add an HTTP method to allow.;public void addAllowedMethod(String method) {_		if (StringUtils.hasText(method)) {_			if (this.allowedMethods == null) {_				this.allowedMethods = new ArrayList<String>()__			}_			this.allowedMethods.add(method)__		}_	};add,an,http,method,to,allow;public,void,add,allowed,method,string,method,if,string,utils,has,text,method,if,this,allowed,methods,null,this,allowed,methods,new,array,list,string,this,allowed,methods,add,method
CorsConfiguration -> public void addAllowedMethod(String method);1453684721;Add an HTTP method to allow.;public void addAllowedMethod(String method) {_		if (StringUtils.hasText(method)) {_			if (this.allowedMethods == null) {_				this.allowedMethods = new ArrayList<String>()__			}_			this.allowedMethods.add(method)__		}_	};add,an,http,method,to,allow;public,void,add,allowed,method,string,method,if,string,utils,has,text,method,if,this,allowed,methods,null,this,allowed,methods,new,array,list,string,this,allowed,methods,add,method
CorsConfiguration -> public void addAllowedMethod(String method);1467730834;Add an HTTP method to allow.;public void addAllowedMethod(String method) {_		if (StringUtils.hasText(method)) {_			if (this.allowedMethods == null) {_				this.allowedMethods = new ArrayList<>()__			}_			this.allowedMethods.add(method)__		}_	};add,an,http,method,to,allow;public,void,add,allowed,method,string,method,if,string,utils,has,text,method,if,this,allowed,methods,null,this,allowed,methods,new,array,list,this,allowed,methods,add,method
CorsConfiguration -> public void addAllowedMethod(String method);1472031618;Add an HTTP method to allow.;public void addAllowedMethod(String method) {_		if (StringUtils.hasText(method)) {_			if (this.allowedMethods == null) {_				this.allowedMethods = new ArrayList<>(4)__				this.resolvedMethods = new ArrayList<>(4)__			}_			this.allowedMethods.add(method)__			if (ALL.equals(method)) {_				this.resolvedMethods = null__			}_			else if (this.resolvedMethods != null) {_				this.resolvedMethods.add(HttpMethod.resolve(method))__			}_		}_	};add,an,http,method,to,allow;public,void,add,allowed,method,string,method,if,string,utils,has,text,method,if,this,allowed,methods,null,this,allowed,methods,new,array,list,4,this,resolved,methods,new,array,list,4,this,allowed,methods,add,method,if,all,equals,method,this,resolved,methods,null,else,if,this,resolved,methods,null,this,resolved,methods,add,http,method,resolve,method
CorsConfiguration -> public void addAllowedMethod(String method);1476175114;Add an HTTP method to allow.;public void addAllowedMethod(String method) {_		if (StringUtils.hasText(method)) {_			if (this.allowedMethods == null) {_				this.allowedMethods = new ArrayList<>(4)__				this.resolvedMethods = new ArrayList<>(4)__			}_			this.allowedMethods.add(method)__			if (ALL.equals(method)) {_				this.resolvedMethods = null__			}_			else if (this.resolvedMethods != null) {_				this.resolvedMethods.add(HttpMethod.resolve(method))__			}_		}_	};add,an,http,method,to,allow;public,void,add,allowed,method,string,method,if,string,utils,has,text,method,if,this,allowed,methods,null,this,allowed,methods,new,array,list,4,this,resolved,methods,new,array,list,4,this,allowed,methods,add,method,if,all,equals,method,this,resolved,methods,null,else,if,this,resolved,methods,null,this,resolved,methods,add,http,method,resolve,method
CorsConfiguration -> public void addAllowedMethod(String method);1476909116;Add an HTTP method to allow.;public void addAllowedMethod(String method) {_		if (StringUtils.hasText(method)) {_			if (this.allowedMethods == null) {_				this.allowedMethods = new ArrayList<>(4)__				this.resolvedMethods = new ArrayList<>(4)__			}_			this.allowedMethods.add(method)__			if (ALL.equals(method)) {_				this.resolvedMethods = null__			}_			else if (this.resolvedMethods != null) {_				this.resolvedMethods.add(HttpMethod.resolve(method))__			}_		}_	};add,an,http,method,to,allow;public,void,add,allowed,method,string,method,if,string,utils,has,text,method,if,this,allowed,methods,null,this,allowed,methods,new,array,list,4,this,resolved,methods,new,array,list,4,this,allowed,methods,add,method,if,all,equals,method,this,resolved,methods,null,else,if,this,resolved,methods,null,this,resolved,methods,add,http,method,resolve,method
CorsConfiguration -> public void addAllowedMethod(String method);1487713300;Add an HTTP method to allow.;public void addAllowedMethod(String method) {_		if (StringUtils.hasText(method)) {_			if (this.allowedMethods == null) {_				this.allowedMethods = new ArrayList<>(4)__				this.resolvedMethods = new ArrayList<>(4)__			}_			this.allowedMethods.add(method)__			if (ALL.equals(method)) {_				this.resolvedMethods = null__			}_			else if (this.resolvedMethods != null) {_				this.resolvedMethods.add(HttpMethod.resolve(method))__			}_		}_	};add,an,http,method,to,allow;public,void,add,allowed,method,string,method,if,string,utils,has,text,method,if,this,allowed,methods,null,this,allowed,methods,new,array,list,4,this,resolved,methods,new,array,list,4,this,allowed,methods,add,method,if,all,equals,method,this,resolved,methods,null,else,if,this,resolved,methods,null,this,resolved,methods,add,http,method,resolve,method
CorsConfiguration -> public void addAllowedMethod(String method);1495868221;Add an HTTP method to allow.;public void addAllowedMethod(String method) {_		if (StringUtils.hasText(method)) {_			if (this.allowedMethods == null) {_				this.allowedMethods = new ArrayList<>(4)__				this.resolvedMethods = new ArrayList<>(4)__			}_			this.allowedMethods.add(method)__			if (ALL.equals(method)) {_				this.resolvedMethods = null__			}_			else if (this.resolvedMethods != null) {_				this.resolvedMethods.add(HttpMethod.resolve(method))__			}_		}_	};add,an,http,method,to,allow;public,void,add,allowed,method,string,method,if,string,utils,has,text,method,if,this,allowed,methods,null,this,allowed,methods,new,array,list,4,this,resolved,methods,new,array,list,4,this,allowed,methods,add,method,if,all,equals,method,this,resolved,methods,null,else,if,this,resolved,methods,null,this,resolved,methods,add,http,method,resolve,method
CorsConfiguration -> public void addAllowedMethod(String method);1496837955;Add an HTTP method to allow.;public void addAllowedMethod(String method) {_		if (StringUtils.hasText(method)) {_			if (this.allowedMethods == null) {_				this.allowedMethods = new ArrayList<>(4)__				this.resolvedMethods = new ArrayList<>(4)__			}_			this.allowedMethods.add(method)__			if (ALL.equals(method)) {_				this.resolvedMethods = null__			}_			else if (this.resolvedMethods != null) {_				this.resolvedMethods.add(HttpMethod.resolve(method))__			}_		}_	};add,an,http,method,to,allow;public,void,add,allowed,method,string,method,if,string,utils,has,text,method,if,this,allowed,methods,null,this,allowed,methods,new,array,list,4,this,resolved,methods,new,array,list,4,this,allowed,methods,add,method,if,all,equals,method,this,resolved,methods,null,else,if,this,resolved,methods,null,this,resolved,methods,add,http,method,resolve,method
CorsConfiguration -> public void addAllowedMethod(String method);1498780456;Add an HTTP method to allow.;public void addAllowedMethod(String method) {_		if (StringUtils.hasText(method)) {_			if (this.allowedMethods == null) {_				this.allowedMethods = new ArrayList<>(4)__				this.resolvedMethods = new ArrayList<>(4)__			}_			this.allowedMethods.add(method)__			if (ALL.equals(method)) {_				this.resolvedMethods = null__			}_			else if (this.resolvedMethods != null) {_				this.resolvedMethods.add(HttpMethod.resolve(method))__			}_		}_	};add,an,http,method,to,allow;public,void,add,allowed,method,string,method,if,string,utils,has,text,method,if,this,allowed,methods,null,this,allowed,methods,new,array,list,4,this,resolved,methods,new,array,list,4,this,allowed,methods,add,method,if,all,equals,method,this,resolved,methods,null,else,if,this,resolved,methods,null,this,resolved,methods,add,http,method,resolve,method
CorsConfiguration -> public void addAllowedMethod(String method);1500448076;Add an HTTP method to allow.;public void addAllowedMethod(String method) {_		if (StringUtils.hasText(method)) {_			if (this.allowedMethods == null) {_				this.allowedMethods = new ArrayList<>(4)__				this.resolvedMethods = new ArrayList<>(4)__			}_			this.allowedMethods.add(method)__			if (ALL.equals(method)) {_				this.resolvedMethods = null__			}_			else if (this.resolvedMethods != null) {_				this.resolvedMethods.add(HttpMethod.resolve(method))__			}_		}_	};add,an,http,method,to,allow;public,void,add,allowed,method,string,method,if,string,utils,has,text,method,if,this,allowed,methods,null,this,allowed,methods,new,array,list,4,this,resolved,methods,new,array,list,4,this,allowed,methods,add,method,if,all,equals,method,this,resolved,methods,null,else,if,this,resolved,methods,null,this,resolved,methods,add,http,method,resolve,method
CorsConfiguration -> public void addAllowedMethod(String method);1511387204;Add an HTTP method to allow.;public void addAllowedMethod(String method) {_		if (StringUtils.hasText(method)) {_			if (this.allowedMethods == null) {_				this.allowedMethods = new ArrayList<>(4)__				this.resolvedMethods = new ArrayList<>(4)__			}_			this.allowedMethods.add(method)__			if (ALL.equals(method)) {_				this.resolvedMethods = null__			}_			else if (this.resolvedMethods != null) {_				this.resolvedMethods.add(HttpMethod.resolve(method))__			}_		}_	};add,an,http,method,to,allow;public,void,add,allowed,method,string,method,if,string,utils,has,text,method,if,this,allowed,methods,null,this,allowed,methods,new,array,list,4,this,resolved,methods,new,array,list,4,this,allowed,methods,add,method,if,all,equals,method,this,resolved,methods,null,else,if,this,resolved,methods,null,this,resolved,methods,add,http,method,resolve,method
CorsConfiguration -> public void addAllowedMethod(String method);1511925367;Add an HTTP method to allow.;public void addAllowedMethod(String method) {_		if (StringUtils.hasText(method)) {_			if (this.allowedMethods == null) {_				this.allowedMethods = new ArrayList<>(4)__				this.resolvedMethods = new ArrayList<>(4)__			}_			this.allowedMethods.add(method)__			if (ALL.equals(method)) {_				this.resolvedMethods = null__			}_			else if (this.resolvedMethods != null) {_				this.resolvedMethods.add(HttpMethod.resolve(method))__			}_		}_	};add,an,http,method,to,allow;public,void,add,allowed,method,string,method,if,string,utils,has,text,method,if,this,allowed,methods,null,this,allowed,methods,new,array,list,4,this,resolved,methods,new,array,list,4,this,allowed,methods,add,method,if,all,equals,method,this,resolved,methods,null,else,if,this,resolved,methods,null,this,resolved,methods,add,http,method,resolve,method
CorsConfiguration -> public void addAllowedMethod(String method);1513805881;Add an HTTP method to allow.;public void addAllowedMethod(String method) {_		if (StringUtils.hasText(method)) {_			if (this.allowedMethods == null) {_				this.allowedMethods = new ArrayList<>(4)__				this.resolvedMethods = new ArrayList<>(4)__			}_			else if (this.allowedMethods == DEFAULT_PERMIT_METHODS) {_				setAllowedMethods(DEFAULT_PERMIT_METHODS)__			}_			this.allowedMethods.add(method)__			if (ALL.equals(method)) {_				this.resolvedMethods = null__			}_			else if (this.resolvedMethods != null) {_				this.resolvedMethods.add(HttpMethod.resolve(method))__			}_		}_	};add,an,http,method,to,allow;public,void,add,allowed,method,string,method,if,string,utils,has,text,method,if,this,allowed,methods,null,this,allowed,methods,new,array,list,4,this,resolved,methods,new,array,list,4,else,if,this,allowed,methods,set,allowed,methods,this,allowed,methods,add,method,if,all,equals,method,this,resolved,methods,null,else,if,this,resolved,methods,null,this,resolved,methods,add,http,method,resolve,method
CorsConfiguration -> public void addAllowedMethod(String method);1522354261;Add an HTTP method to allow.;public void addAllowedMethod(String method) {_		if (StringUtils.hasText(method)) {_			if (this.allowedMethods == null) {_				this.allowedMethods = new ArrayList<>(4)__				this.resolvedMethods = new ArrayList<>(4)__			}_			else if (this.allowedMethods == DEFAULT_PERMIT_METHODS) {_				setAllowedMethods(DEFAULT_PERMIT_METHODS)__			}_			this.allowedMethods.add(method)__			if (ALL.equals(method)) {_				this.resolvedMethods = null__			}_			else if (this.resolvedMethods != null) {_				this.resolvedMethods.add(HttpMethod.resolve(method))__			}_		}_	};add,an,http,method,to,allow;public,void,add,allowed,method,string,method,if,string,utils,has,text,method,if,this,allowed,methods,null,this,allowed,methods,new,array,list,4,this,resolved,methods,new,array,list,4,else,if,this,allowed,methods,set,allowed,methods,this,allowed,methods,add,method,if,all,equals,method,this,resolved,methods,null,else,if,this,resolved,methods,null,this,resolved,methods,add,http,method,resolve,method
CorsConfiguration -> public CorsConfiguration(CorsConfiguration other);1431730371;Copy constructor.;public CorsConfiguration(CorsConfiguration other) {_		this.allowedOrigins = other.allowedOrigins__		this.allowedMethods = other.allowedMethods__		this.allowedHeaders = other.allowedHeaders__		this.exposedHeaders = other.exposedHeaders__		this.allowCredentials = other.allowCredentials__		this.maxAge = other.maxAge__	};copy,constructor;public,cors,configuration,cors,configuration,other,this,allowed,origins,other,allowed,origins,this,allowed,methods,other,allowed,methods,this,allowed,headers,other,allowed,headers,this,exposed,headers,other,exposed,headers,this,allow,credentials,other,allow,credentials,this,max,age,other,max,age
CorsConfiguration -> public CorsConfiguration(CorsConfiguration other);1432857824;Copy constructor.;public CorsConfiguration(CorsConfiguration other) {_		this.allowedOrigins = other.allowedOrigins__		this.allowedMethods = other.allowedMethods__		this.allowedHeaders = other.allowedHeaders__		this.exposedHeaders = other.exposedHeaders__		this.allowCredentials = other.allowCredentials__		this.maxAge = other.maxAge__	};copy,constructor;public,cors,configuration,cors,configuration,other,this,allowed,origins,other,allowed,origins,this,allowed,methods,other,allowed,methods,this,allowed,headers,other,allowed,headers,this,exposed,headers,other,exposed,headers,this,allow,credentials,other,allow,credentials,this,max,age,other,max,age
CorsConfiguration -> public CorsConfiguration(CorsConfiguration other);1433088837;Copy constructor.;public CorsConfiguration(CorsConfiguration other) {_		this.allowedOrigins = other.allowedOrigins__		this.allowedMethods = other.allowedMethods__		this.allowedHeaders = other.allowedHeaders__		this.exposedHeaders = other.exposedHeaders__		this.allowCredentials = other.allowCredentials__		this.maxAge = other.maxAge__	};copy,constructor;public,cors,configuration,cors,configuration,other,this,allowed,origins,other,allowed,origins,this,allowed,methods,other,allowed,methods,this,allowed,headers,other,allowed,headers,this,exposed,headers,other,exposed,headers,this,allow,credentials,other,allow,credentials,this,max,age,other,max,age
CorsConfiguration -> public CorsConfiguration(CorsConfiguration other);1434809538;Construct a new {@code CorsConfiguration} instance by copying all_values from the supplied {@code CorsConfiguration}.;public CorsConfiguration(CorsConfiguration other) {_		this.allowedOrigins = other.allowedOrigins__		this.allowedMethods = other.allowedMethods__		this.allowedHeaders = other.allowedHeaders__		this.exposedHeaders = other.exposedHeaders__		this.allowCredentials = other.allowCredentials__		this.maxAge = other.maxAge__	};construct,a,new,code,cors,configuration,instance,by,copying,all,values,from,the,supplied,code,cors,configuration;public,cors,configuration,cors,configuration,other,this,allowed,origins,other,allowed,origins,this,allowed,methods,other,allowed,methods,this,allowed,headers,other,allowed,headers,this,exposed,headers,other,exposed,headers,this,allow,credentials,other,allow,credentials,this,max,age,other,max,age
CorsConfiguration -> public CorsConfiguration(CorsConfiguration other);1436539370;Construct a new {@code CorsConfiguration} instance by copying all_values from the supplied {@code CorsConfiguration}.;public CorsConfiguration(CorsConfiguration other) {_		this.allowedOrigins = other.allowedOrigins__		this.allowedMethods = other.allowedMethods__		this.allowedHeaders = other.allowedHeaders__		this.exposedHeaders = other.exposedHeaders__		this.allowCredentials = other.allowCredentials__		this.maxAge = other.maxAge__	};construct,a,new,code,cors,configuration,instance,by,copying,all,values,from,the,supplied,code,cors,configuration;public,cors,configuration,cors,configuration,other,this,allowed,origins,other,allowed,origins,this,allowed,methods,other,allowed,methods,this,allowed,headers,other,allowed,headers,this,exposed,headers,other,exposed,headers,this,allow,credentials,other,allow,credentials,this,max,age,other,max,age
CorsConfiguration -> public CorsConfiguration(CorsConfiguration other);1438251419;Construct a new {@code CorsConfiguration} instance by copying all_values from the supplied {@code CorsConfiguration}.;public CorsConfiguration(CorsConfiguration other) {_		this.allowedOrigins = other.allowedOrigins__		this.allowedMethods = other.allowedMethods__		this.allowedHeaders = other.allowedHeaders__		this.exposedHeaders = other.exposedHeaders__		this.allowCredentials = other.allowCredentials__		this.maxAge = other.maxAge__	};construct,a,new,code,cors,configuration,instance,by,copying,all,values,from,the,supplied,code,cors,configuration;public,cors,configuration,cors,configuration,other,this,allowed,origins,other,allowed,origins,this,allowed,methods,other,allowed,methods,this,allowed,headers,other,allowed,headers,this,exposed,headers,other,exposed,headers,this,allow,credentials,other,allow,credentials,this,max,age,other,max,age
CorsConfiguration -> public CorsConfiguration(CorsConfiguration other);1447321232;Construct a new {@code CorsConfiguration} instance by copying all_values from the supplied {@code CorsConfiguration}.;public CorsConfiguration(CorsConfiguration other) {_		this.allowedOrigins = other.allowedOrigins__		this.allowedMethods = other.allowedMethods__		this.allowedHeaders = other.allowedHeaders__		this.exposedHeaders = other.exposedHeaders__		this.allowCredentials = other.allowCredentials__		this.maxAge = other.maxAge__	};construct,a,new,code,cors,configuration,instance,by,copying,all,values,from,the,supplied,code,cors,configuration;public,cors,configuration,cors,configuration,other,this,allowed,origins,other,allowed,origins,this,allowed,methods,other,allowed,methods,this,allowed,headers,other,allowed,headers,this,exposed,headers,other,exposed,headers,this,allow,credentials,other,allow,credentials,this,max,age,other,max,age
CorsConfiguration -> public CorsConfiguration(CorsConfiguration other);1449660404;Construct a new {@code CorsConfiguration} instance by copying all_values from the supplied {@code CorsConfiguration}.;public CorsConfiguration(CorsConfiguration other) {_		this.allowedOrigins = other.allowedOrigins__		this.allowedMethods = other.allowedMethods__		this.allowedHeaders = other.allowedHeaders__		this.exposedHeaders = other.exposedHeaders__		this.allowCredentials = other.allowCredentials__		this.maxAge = other.maxAge__	};construct,a,new,code,cors,configuration,instance,by,copying,all,values,from,the,supplied,code,cors,configuration;public,cors,configuration,cors,configuration,other,this,allowed,origins,other,allowed,origins,this,allowed,methods,other,allowed,methods,this,allowed,headers,other,allowed,headers,this,exposed,headers,other,exposed,headers,this,allow,credentials,other,allow,credentials,this,max,age,other,max,age
CorsConfiguration -> public CorsConfiguration(CorsConfiguration other);1453684721;Construct a new {@code CorsConfiguration} instance by copying all_values from the supplied {@code CorsConfiguration}.;public CorsConfiguration(CorsConfiguration other) {_		this.allowedOrigins = other.allowedOrigins__		this.allowedMethods = other.allowedMethods__		this.allowedHeaders = other.allowedHeaders__		this.exposedHeaders = other.exposedHeaders__		this.allowCredentials = other.allowCredentials__		this.maxAge = other.maxAge__	};construct,a,new,code,cors,configuration,instance,by,copying,all,values,from,the,supplied,code,cors,configuration;public,cors,configuration,cors,configuration,other,this,allowed,origins,other,allowed,origins,this,allowed,methods,other,allowed,methods,this,allowed,headers,other,allowed,headers,this,exposed,headers,other,exposed,headers,this,allow,credentials,other,allow,credentials,this,max,age,other,max,age
CorsConfiguration -> public CorsConfiguration(CorsConfiguration other);1467730834;Construct a new {@code CorsConfiguration} instance by copying all_values from the supplied {@code CorsConfiguration}.;public CorsConfiguration(CorsConfiguration other) {_		this.allowedOrigins = other.allowedOrigins__		this.allowedMethods = other.allowedMethods__		this.allowedHeaders = other.allowedHeaders__		this.exposedHeaders = other.exposedHeaders__		this.allowCredentials = other.allowCredentials__		this.maxAge = other.maxAge__	};construct,a,new,code,cors,configuration,instance,by,copying,all,values,from,the,supplied,code,cors,configuration;public,cors,configuration,cors,configuration,other,this,allowed,origins,other,allowed,origins,this,allowed,methods,other,allowed,methods,this,allowed,headers,other,allowed,headers,this,exposed,headers,other,exposed,headers,this,allow,credentials,other,allow,credentials,this,max,age,other,max,age
CorsConfiguration -> public CorsConfiguration(CorsConfiguration other);1472031618;Construct a new {@code CorsConfiguration} instance by copying all_values from the supplied {@code CorsConfiguration}.;public CorsConfiguration(CorsConfiguration other) {_		this.allowedOrigins = other.allowedOrigins__		this.allowedMethods = other.allowedMethods__		this.resolvedMethods = other.resolvedMethods__		this.allowedHeaders = other.allowedHeaders__		this.exposedHeaders = other.exposedHeaders__		this.allowCredentials = other.allowCredentials__		this.maxAge = other.maxAge__	};construct,a,new,code,cors,configuration,instance,by,copying,all,values,from,the,supplied,code,cors,configuration;public,cors,configuration,cors,configuration,other,this,allowed,origins,other,allowed,origins,this,allowed,methods,other,allowed,methods,this,resolved,methods,other,resolved,methods,this,allowed,headers,other,allowed,headers,this,exposed,headers,other,exposed,headers,this,allow,credentials,other,allow,credentials,this,max,age,other,max,age
CorsConfiguration -> public CorsConfiguration(CorsConfiguration other);1476175114;Construct a new {@code CorsConfiguration} instance by copying all_values from the supplied {@code CorsConfiguration}.;public CorsConfiguration(CorsConfiguration other) {_		this.allowedOrigins = other.allowedOrigins__		this.allowedMethods = other.allowedMethods__		this.resolvedMethods = other.resolvedMethods__		this.allowedHeaders = other.allowedHeaders__		this.exposedHeaders = other.exposedHeaders__		this.allowCredentials = other.allowCredentials__		this.maxAge = other.maxAge__	};construct,a,new,code,cors,configuration,instance,by,copying,all,values,from,the,supplied,code,cors,configuration;public,cors,configuration,cors,configuration,other,this,allowed,origins,other,allowed,origins,this,allowed,methods,other,allowed,methods,this,resolved,methods,other,resolved,methods,this,allowed,headers,other,allowed,headers,this,exposed,headers,other,exposed,headers,this,allow,credentials,other,allow,credentials,this,max,age,other,max,age
CorsConfiguration -> public CorsConfiguration(CorsConfiguration other);1476909116;Construct a new {@code CorsConfiguration} instance by copying all_values from the supplied {@code CorsConfiguration}.;public CorsConfiguration(CorsConfiguration other) {_		this.allowedOrigins = other.allowedOrigins__		this.allowedMethods = other.allowedMethods__		this.resolvedMethods = other.resolvedMethods__		this.allowedHeaders = other.allowedHeaders__		this.exposedHeaders = other.exposedHeaders__		this.allowCredentials = other.allowCredentials__		this.maxAge = other.maxAge__	};construct,a,new,code,cors,configuration,instance,by,copying,all,values,from,the,supplied,code,cors,configuration;public,cors,configuration,cors,configuration,other,this,allowed,origins,other,allowed,origins,this,allowed,methods,other,allowed,methods,this,resolved,methods,other,resolved,methods,this,allowed,headers,other,allowed,headers,this,exposed,headers,other,exposed,headers,this,allow,credentials,other,allow,credentials,this,max,age,other,max,age
CorsConfiguration -> public CorsConfiguration(CorsConfiguration other);1487713300;Construct a new {@code CorsConfiguration} instance by copying all_values from the supplied {@code CorsConfiguration}.;public CorsConfiguration(CorsConfiguration other) {_		this.allowedOrigins = other.allowedOrigins__		this.allowedMethods = other.allowedMethods__		this.resolvedMethods = other.resolvedMethods__		this.allowedHeaders = other.allowedHeaders__		this.exposedHeaders = other.exposedHeaders__		this.allowCredentials = other.allowCredentials__		this.maxAge = other.maxAge__	};construct,a,new,code,cors,configuration,instance,by,copying,all,values,from,the,supplied,code,cors,configuration;public,cors,configuration,cors,configuration,other,this,allowed,origins,other,allowed,origins,this,allowed,methods,other,allowed,methods,this,resolved,methods,other,resolved,methods,this,allowed,headers,other,allowed,headers,this,exposed,headers,other,exposed,headers,this,allow,credentials,other,allow,credentials,this,max,age,other,max,age
CorsConfiguration -> public CorsConfiguration(CorsConfiguration other);1495868221;Construct a new {@code CorsConfiguration} instance by copying all_values from the supplied {@code CorsConfiguration}.;public CorsConfiguration(CorsConfiguration other) {_		this.allowedOrigins = other.allowedOrigins__		this.allowedMethods = other.allowedMethods__		this.resolvedMethods = other.resolvedMethods__		this.allowedHeaders = other.allowedHeaders__		this.exposedHeaders = other.exposedHeaders__		this.allowCredentials = other.allowCredentials__		this.maxAge = other.maxAge__	};construct,a,new,code,cors,configuration,instance,by,copying,all,values,from,the,supplied,code,cors,configuration;public,cors,configuration,cors,configuration,other,this,allowed,origins,other,allowed,origins,this,allowed,methods,other,allowed,methods,this,resolved,methods,other,resolved,methods,this,allowed,headers,other,allowed,headers,this,exposed,headers,other,exposed,headers,this,allow,credentials,other,allow,credentials,this,max,age,other,max,age
CorsConfiguration -> public CorsConfiguration(CorsConfiguration other);1496837955;Construct a new {@code CorsConfiguration} instance by copying all_values from the supplied {@code CorsConfiguration}.;public CorsConfiguration(CorsConfiguration other) {_		this.allowedOrigins = other.allowedOrigins__		this.allowedMethods = other.allowedMethods__		this.resolvedMethods = other.resolvedMethods__		this.allowedHeaders = other.allowedHeaders__		this.exposedHeaders = other.exposedHeaders__		this.allowCredentials = other.allowCredentials__		this.maxAge = other.maxAge__	};construct,a,new,code,cors,configuration,instance,by,copying,all,values,from,the,supplied,code,cors,configuration;public,cors,configuration,cors,configuration,other,this,allowed,origins,other,allowed,origins,this,allowed,methods,other,allowed,methods,this,resolved,methods,other,resolved,methods,this,allowed,headers,other,allowed,headers,this,exposed,headers,other,exposed,headers,this,allow,credentials,other,allow,credentials,this,max,age,other,max,age
CorsConfiguration -> public CorsConfiguration(CorsConfiguration other);1498780456;Construct a new {@code CorsConfiguration} instance by copying all_values from the supplied {@code CorsConfiguration}.;public CorsConfiguration(CorsConfiguration other) {_		this.allowedOrigins = other.allowedOrigins__		this.allowedMethods = other.allowedMethods__		this.resolvedMethods = other.resolvedMethods__		this.allowedHeaders = other.allowedHeaders__		this.exposedHeaders = other.exposedHeaders__		this.allowCredentials = other.allowCredentials__		this.maxAge = other.maxAge__	};construct,a,new,code,cors,configuration,instance,by,copying,all,values,from,the,supplied,code,cors,configuration;public,cors,configuration,cors,configuration,other,this,allowed,origins,other,allowed,origins,this,allowed,methods,other,allowed,methods,this,resolved,methods,other,resolved,methods,this,allowed,headers,other,allowed,headers,this,exposed,headers,other,exposed,headers,this,allow,credentials,other,allow,credentials,this,max,age,other,max,age
CorsConfiguration -> public CorsConfiguration(CorsConfiguration other);1500448076;Construct a new {@code CorsConfiguration} instance by copying all_values from the supplied {@code CorsConfiguration}.;public CorsConfiguration(CorsConfiguration other) {_		this.allowedOrigins = other.allowedOrigins__		this.allowedMethods = other.allowedMethods__		this.resolvedMethods = other.resolvedMethods__		this.allowedHeaders = other.allowedHeaders__		this.exposedHeaders = other.exposedHeaders__		this.allowCredentials = other.allowCredentials__		this.maxAge = other.maxAge__	};construct,a,new,code,cors,configuration,instance,by,copying,all,values,from,the,supplied,code,cors,configuration;public,cors,configuration,cors,configuration,other,this,allowed,origins,other,allowed,origins,this,allowed,methods,other,allowed,methods,this,resolved,methods,other,resolved,methods,this,allowed,headers,other,allowed,headers,this,exposed,headers,other,exposed,headers,this,allow,credentials,other,allow,credentials,this,max,age,other,max,age
CorsConfiguration -> public CorsConfiguration(CorsConfiguration other);1511387204;Construct a new {@code CorsConfiguration} instance by copying all_values from the supplied {@code CorsConfiguration}.;public CorsConfiguration(CorsConfiguration other) {_		this.allowedOrigins = other.allowedOrigins__		this.allowedMethods = other.allowedMethods__		this.resolvedMethods = other.resolvedMethods__		this.allowedHeaders = other.allowedHeaders__		this.exposedHeaders = other.exposedHeaders__		this.allowCredentials = other.allowCredentials__		this.maxAge = other.maxAge__	};construct,a,new,code,cors,configuration,instance,by,copying,all,values,from,the,supplied,code,cors,configuration;public,cors,configuration,cors,configuration,other,this,allowed,origins,other,allowed,origins,this,allowed,methods,other,allowed,methods,this,resolved,methods,other,resolved,methods,this,allowed,headers,other,allowed,headers,this,exposed,headers,other,exposed,headers,this,allow,credentials,other,allow,credentials,this,max,age,other,max,age
CorsConfiguration -> public CorsConfiguration(CorsConfiguration other);1511925367;Construct a new {@code CorsConfiguration} instance by copying all_values from the supplied {@code CorsConfiguration}.;public CorsConfiguration(CorsConfiguration other) {_		this.allowedOrigins = other.allowedOrigins__		this.allowedMethods = other.allowedMethods__		this.resolvedMethods = other.resolvedMethods__		this.allowedHeaders = other.allowedHeaders__		this.exposedHeaders = other.exposedHeaders__		this.allowCredentials = other.allowCredentials__		this.maxAge = other.maxAge__	};construct,a,new,code,cors,configuration,instance,by,copying,all,values,from,the,supplied,code,cors,configuration;public,cors,configuration,cors,configuration,other,this,allowed,origins,other,allowed,origins,this,allowed,methods,other,allowed,methods,this,resolved,methods,other,resolved,methods,this,allowed,headers,other,allowed,headers,this,exposed,headers,other,exposed,headers,this,allow,credentials,other,allow,credentials,this,max,age,other,max,age
CorsConfiguration -> public CorsConfiguration(CorsConfiguration other);1513805881;Construct a new {@code CorsConfiguration} instance by copying all_values from the supplied {@code CorsConfiguration}.;public CorsConfiguration(CorsConfiguration other) {_		this.allowedOrigins = other.allowedOrigins__		this.allowedMethods = other.allowedMethods__		this.resolvedMethods = other.resolvedMethods__		this.allowedHeaders = other.allowedHeaders__		this.exposedHeaders = other.exposedHeaders__		this.allowCredentials = other.allowCredentials__		this.maxAge = other.maxAge__	};construct,a,new,code,cors,configuration,instance,by,copying,all,values,from,the,supplied,code,cors,configuration;public,cors,configuration,cors,configuration,other,this,allowed,origins,other,allowed,origins,this,allowed,methods,other,allowed,methods,this,resolved,methods,other,resolved,methods,this,allowed,headers,other,allowed,headers,this,exposed,headers,other,exposed,headers,this,allow,credentials,other,allow,credentials,this,max,age,other,max,age
CorsConfiguration -> public CorsConfiguration(CorsConfiguration other);1522354261;Construct a new {@code CorsConfiguration} instance by copying all_values from the supplied {@code CorsConfiguration}.;public CorsConfiguration(CorsConfiguration other) {_		this.allowedOrigins = other.allowedOrigins__		this.allowedMethods = other.allowedMethods__		this.resolvedMethods = other.resolvedMethods__		this.allowedHeaders = other.allowedHeaders__		this.exposedHeaders = other.exposedHeaders__		this.allowCredentials = other.allowCredentials__		this.maxAge = other.maxAge__	};construct,a,new,code,cors,configuration,instance,by,copying,all,values,from,the,supplied,code,cors,configuration;public,cors,configuration,cors,configuration,other,this,allowed,origins,other,allowed,origins,this,allowed,methods,other,allowed,methods,this,resolved,methods,other,resolved,methods,this,allowed,headers,other,allowed,headers,this,exposed,headers,other,exposed,headers,this,allow,credentials,other,allow,credentials,this,max,age,other,max,age
CorsConfiguration -> public void setMaxAge(@Nullable Long maxAge);1500448076;Configure how long, in seconds, the response from a pre-flight request_can be cached by clients._<p>By default this is not set.;public void setMaxAge(@Nullable Long maxAge) {_		this.maxAge = maxAge__	};configure,how,long,in,seconds,the,response,from,a,pre,flight,request,can,be,cached,by,clients,p,by,default,this,is,not,set;public,void,set,max,age,nullable,long,max,age,this,max,age,max,age
CorsConfiguration -> public void setMaxAge(@Nullable Long maxAge);1511387204;Configure how long, in seconds, the response from a pre-flight request_can be cached by clients._<p>By default this is not set.;public void setMaxAge(@Nullable Long maxAge) {_		this.maxAge = maxAge__	};configure,how,long,in,seconds,the,response,from,a,pre,flight,request,can,be,cached,by,clients,p,by,default,this,is,not,set;public,void,set,max,age,nullable,long,max,age,this,max,age,max,age
CorsConfiguration -> public void setMaxAge(@Nullable Long maxAge);1511925367;Configure how long, in seconds, the response from a pre-flight request_can be cached by clients._<p>By default this is not set.;public void setMaxAge(@Nullable Long maxAge) {_		this.maxAge = maxAge__	};configure,how,long,in,seconds,the,response,from,a,pre,flight,request,can,be,cached,by,clients,p,by,default,this,is,not,set;public,void,set,max,age,nullable,long,max,age,this,max,age,max,age
CorsConfiguration -> public void setMaxAge(@Nullable Long maxAge);1513805881;Configure how long, in seconds, the response from a pre-flight request_can be cached by clients._<p>By default this is not set.;public void setMaxAge(@Nullable Long maxAge) {_		this.maxAge = maxAge__	};configure,how,long,in,seconds,the,response,from,a,pre,flight,request,can,be,cached,by,clients,p,by,default,this,is,not,set;public,void,set,max,age,nullable,long,max,age,this,max,age,max,age
CorsConfiguration -> public void setMaxAge(@Nullable Long maxAge);1522354261;Configure how long, in seconds, the response from a pre-flight request_can be cached by clients._<p>By default this is not set.;public void setMaxAge(@Nullable Long maxAge) {_		this.maxAge = maxAge__	};configure,how,long,in,seconds,the,response,from,a,pre,flight,request,can,be,cached,by,clients,p,by,default,this,is,not,set;public,void,set,max,age,nullable,long,max,age,this,max,age,max,age
CorsConfiguration -> public void setAllowedMethods(@Nullable List<String> allowedMethods);1496837955;Set the HTTP methods to allow, e.g. {@code "GET"}, {@code "POST"},_{@code "PUT"}, etc._<p>The special value {@code "*"} allows all methods._<p>If not set, only {@code "GET"} and {@code "HEAD"} are allowed._<p>By default this is not set.;public void setAllowedMethods(@Nullable List<String> allowedMethods) {_		this.allowedMethods = (allowedMethods != null ? new ArrayList<>(allowedMethods) : null)__		if (!CollectionUtils.isEmpty(allowedMethods)) {_			this.resolvedMethods = new ArrayList<>(allowedMethods.size())__			for (String method : allowedMethods) {_				if (ALL.equals(method)) {_					this.resolvedMethods = null__					break__				}_				this.resolvedMethods.add(HttpMethod.resolve(method))__			}_		}_		else {_			this.resolvedMethods = DEFAULT_METHODS__		}_	};set,the,http,methods,to,allow,e,g,code,get,code,post,code,put,etc,p,the,special,value,code,allows,all,methods,p,if,not,set,only,code,get,and,code,head,are,allowed,p,by,default,this,is,not,set;public,void,set,allowed,methods,nullable,list,string,allowed,methods,this,allowed,methods,allowed,methods,null,new,array,list,allowed,methods,null,if,collection,utils,is,empty,allowed,methods,this,resolved,methods,new,array,list,allowed,methods,size,for,string,method,allowed,methods,if,all,equals,method,this,resolved,methods,null,break,this,resolved,methods,add,http,method,resolve,method,else,this,resolved,methods
CorsConfiguration -> public void setAllowedMethods(@Nullable List<String> allowedMethods);1498780456;Set the HTTP methods to allow, e.g. {@code "GET"}, {@code "POST"},_{@code "PUT"}, etc._<p>The special value {@code "*"} allows all methods._<p>If not set, only {@code "GET"} and {@code "HEAD"} are allowed._<p>By default this is not set.;public void setAllowedMethods(@Nullable List<String> allowedMethods) {_		this.allowedMethods = (allowedMethods != null ? new ArrayList<>(allowedMethods) : null)__		if (!CollectionUtils.isEmpty(allowedMethods)) {_			this.resolvedMethods = new ArrayList<>(allowedMethods.size())__			for (String method : allowedMethods) {_				if (ALL.equals(method)) {_					this.resolvedMethods = null__					break__				}_				this.resolvedMethods.add(HttpMethod.resolve(method))__			}_		}_		else {_			this.resolvedMethods = DEFAULT_METHODS__		}_	};set,the,http,methods,to,allow,e,g,code,get,code,post,code,put,etc,p,the,special,value,code,allows,all,methods,p,if,not,set,only,code,get,and,code,head,are,allowed,p,by,default,this,is,not,set;public,void,set,allowed,methods,nullable,list,string,allowed,methods,this,allowed,methods,allowed,methods,null,new,array,list,allowed,methods,null,if,collection,utils,is,empty,allowed,methods,this,resolved,methods,new,array,list,allowed,methods,size,for,string,method,allowed,methods,if,all,equals,method,this,resolved,methods,null,break,this,resolved,methods,add,http,method,resolve,method,else,this,resolved,methods
CorsConfiguration -> public void setAllowedMethods(@Nullable List<String> allowedMethods);1500448076;Set the HTTP methods to allow, e.g. {@code "GET"}, {@code "POST"},_{@code "PUT"}, etc._<p>The special value {@code "*"} allows all methods._<p>If not set, only {@code "GET"} and {@code "HEAD"} are allowed._<p>By default this is not set.;public void setAllowedMethods(@Nullable List<String> allowedMethods) {_		this.allowedMethods = (allowedMethods != null ? new ArrayList<>(allowedMethods) : null)__		if (!CollectionUtils.isEmpty(allowedMethods)) {_			this.resolvedMethods = new ArrayList<>(allowedMethods.size())__			for (String method : allowedMethods) {_				if (ALL.equals(method)) {_					this.resolvedMethods = null__					break__				}_				this.resolvedMethods.add(HttpMethod.resolve(method))__			}_		}_		else {_			this.resolvedMethods = DEFAULT_METHODS__		}_	};set,the,http,methods,to,allow,e,g,code,get,code,post,code,put,etc,p,the,special,value,code,allows,all,methods,p,if,not,set,only,code,get,and,code,head,are,allowed,p,by,default,this,is,not,set;public,void,set,allowed,methods,nullable,list,string,allowed,methods,this,allowed,methods,allowed,methods,null,new,array,list,allowed,methods,null,if,collection,utils,is,empty,allowed,methods,this,resolved,methods,new,array,list,allowed,methods,size,for,string,method,allowed,methods,if,all,equals,method,this,resolved,methods,null,break,this,resolved,methods,add,http,method,resolve,method,else,this,resolved,methods
CorsConfiguration -> public void setAllowedMethods(@Nullable List<String> allowedMethods);1511387204;Set the HTTP methods to allow, e.g. {@code "GET"}, {@code "POST"},_{@code "PUT"}, etc._<p>The special value {@code "*"} allows all methods._<p>If not set, only {@code "GET"} and {@code "HEAD"} are allowed._<p>By default this is not set.;public void setAllowedMethods(@Nullable List<String> allowedMethods) {_		this.allowedMethods = (allowedMethods != null ? new ArrayList<>(allowedMethods) : null)__		if (!CollectionUtils.isEmpty(allowedMethods)) {_			this.resolvedMethods = new ArrayList<>(allowedMethods.size())__			for (String method : allowedMethods) {_				if (ALL.equals(method)) {_					this.resolvedMethods = null__					break__				}_				this.resolvedMethods.add(HttpMethod.resolve(method))__			}_		}_		else {_			this.resolvedMethods = DEFAULT_METHODS__		}_	};set,the,http,methods,to,allow,e,g,code,get,code,post,code,put,etc,p,the,special,value,code,allows,all,methods,p,if,not,set,only,code,get,and,code,head,are,allowed,p,by,default,this,is,not,set;public,void,set,allowed,methods,nullable,list,string,allowed,methods,this,allowed,methods,allowed,methods,null,new,array,list,allowed,methods,null,if,collection,utils,is,empty,allowed,methods,this,resolved,methods,new,array,list,allowed,methods,size,for,string,method,allowed,methods,if,all,equals,method,this,resolved,methods,null,break,this,resolved,methods,add,http,method,resolve,method,else,this,resolved,methods
CorsConfiguration -> public void setAllowedMethods(@Nullable List<String> allowedMethods);1511925367;Set the HTTP methods to allow, e.g. {@code "GET"}, {@code "POST"},_{@code "PUT"}, etc._<p>The special value {@code "*"} allows all methods._<p>If not set, only {@code "GET"} and {@code "HEAD"} are allowed._<p>By default this is not set.;public void setAllowedMethods(@Nullable List<String> allowedMethods) {_		this.allowedMethods = (allowedMethods != null ? new ArrayList<>(allowedMethods) : null)__		if (!CollectionUtils.isEmpty(allowedMethods)) {_			this.resolvedMethods = new ArrayList<>(allowedMethods.size())__			for (String method : allowedMethods) {_				if (ALL.equals(method)) {_					this.resolvedMethods = null__					break__				}_				this.resolvedMethods.add(HttpMethod.resolve(method))__			}_		}_		else {_			this.resolvedMethods = DEFAULT_METHODS__		}_	};set,the,http,methods,to,allow,e,g,code,get,code,post,code,put,etc,p,the,special,value,code,allows,all,methods,p,if,not,set,only,code,get,and,code,head,are,allowed,p,by,default,this,is,not,set;public,void,set,allowed,methods,nullable,list,string,allowed,methods,this,allowed,methods,allowed,methods,null,new,array,list,allowed,methods,null,if,collection,utils,is,empty,allowed,methods,this,resolved,methods,new,array,list,allowed,methods,size,for,string,method,allowed,methods,if,all,equals,method,this,resolved,methods,null,break,this,resolved,methods,add,http,method,resolve,method,else,this,resolved,methods
CorsConfiguration -> public void setAllowedMethods(@Nullable List<String> allowedMethods);1513805881;Set the HTTP methods to allow, e.g. {@code "GET"}, {@code "POST"},_{@code "PUT"}, etc._<p>The special value {@code "*"} allows all methods._<p>If not set, only {@code "GET"} and {@code "HEAD"} are allowed._<p>By default this is not set.;public void setAllowedMethods(@Nullable List<String> allowedMethods) {_		this.allowedMethods = (allowedMethods != null ? new ArrayList<>(allowedMethods) : null)__		if (!CollectionUtils.isEmpty(allowedMethods)) {_			this.resolvedMethods = new ArrayList<>(allowedMethods.size())__			for (String method : allowedMethods) {_				if (ALL.equals(method)) {_					this.resolvedMethods = null__					break__				}_				this.resolvedMethods.add(HttpMethod.resolve(method))__			}_		}_		else {_			this.resolvedMethods = DEFAULT_METHODS__		}_	};set,the,http,methods,to,allow,e,g,code,get,code,post,code,put,etc,p,the,special,value,code,allows,all,methods,p,if,not,set,only,code,get,and,code,head,are,allowed,p,by,default,this,is,not,set;public,void,set,allowed,methods,nullable,list,string,allowed,methods,this,allowed,methods,allowed,methods,null,new,array,list,allowed,methods,null,if,collection,utils,is,empty,allowed,methods,this,resolved,methods,new,array,list,allowed,methods,size,for,string,method,allowed,methods,if,all,equals,method,this,resolved,methods,null,break,this,resolved,methods,add,http,method,resolve,method,else,this,resolved,methods
CorsConfiguration -> public void setAllowedMethods(@Nullable List<String> allowedMethods);1522354261;Set the HTTP methods to allow, e.g. {@code "GET"}, {@code "POST"},_{@code "PUT"}, etc._<p>The special value {@code "*"} allows all methods._<p>If not set, only {@code "GET"} and {@code "HEAD"} are allowed._<p>By default this is not set._<p><strong>Note:</strong> CORS checks use values from "Forwarded"_(<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>),_"X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" headers,_if present, in order to reflect the client-originated address._Consider using the {@code ForwardedHeaderFilter} in order to choose from a_central place whether to extract and use, or to discard such headers._See the Spring Framework reference for more on this filter.;public void setAllowedMethods(@Nullable List<String> allowedMethods) {_		this.allowedMethods = (allowedMethods != null ? new ArrayList<>(allowedMethods) : null)__		if (!CollectionUtils.isEmpty(allowedMethods)) {_			this.resolvedMethods = new ArrayList<>(allowedMethods.size())__			for (String method : allowedMethods) {_				if (ALL.equals(method)) {_					this.resolvedMethods = null__					break__				}_				this.resolvedMethods.add(HttpMethod.resolve(method))__			}_		}_		else {_			this.resolvedMethods = DEFAULT_METHODS__		}_	};set,the,http,methods,to,allow,e,g,code,get,code,post,code,put,etc,p,the,special,value,code,allows,all,methods,p,if,not,set,only,code,get,and,code,head,are,allowed,p,by,default,this,is,not,set,p,strong,note,strong,cors,checks,use,values,from,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,headers,if,present,in,order,to,reflect,the,client,originated,address,consider,using,the,code,forwarded,header,filter,in,order,to,choose,from,a,central,place,whether,to,extract,and,use,or,to,discard,such,headers,see,the,spring,framework,reference,for,more,on,this,filter;public,void,set,allowed,methods,nullable,list,string,allowed,methods,this,allowed,methods,allowed,methods,null,new,array,list,allowed,methods,null,if,collection,utils,is,empty,allowed,methods,this,resolved,methods,new,array,list,allowed,methods,size,for,string,method,allowed,methods,if,all,equals,method,this,resolved,methods,null,break,this,resolved,methods,add,http,method,resolve,method,else,this,resolved,methods
CorsConfiguration -> public List<String> getAllowedOrigins();1427983931;@see #setAllowedOrigins(java.util.List);public List<String> getAllowedOrigins() {_		if (this.allowedOrigins != null) {_			return this.allowedOrigins.contains("*") ? Arrays.asList("*") : Collections.unmodifiableList(this.allowedOrigins)__		}_		return null__	};see,set,allowed,origins,java,util,list;public,list,string,get,allowed,origins,if,this,allowed,origins,null,return,this,allowed,origins,contains,arrays,as,list,collections,unmodifiable,list,this,allowed,origins,return,null
CorsConfiguration -> public List<String> getAllowedOrigins();1428073011;@see #setAllowedOrigins(java.util.List);public List<String> getAllowedOrigins() {_		if (this.allowedOrigins != null) {_			return this.allowedOrigins.contains("*") ? Arrays.asList("*") : Collections.unmodifiableList(this.allowedOrigins)__		}_		return null__	};see,set,allowed,origins,java,util,list;public,list,string,get,allowed,origins,if,this,allowed,origins,null,return,this,allowed,origins,contains,arrays,as,list,collections,unmodifiable,list,this,allowed,origins,return,null
CorsConfiguration -> public List<String> getAllowedOrigins();1430811101;Return the configured origins to allow, possibly {@code null}.;public List<String> getAllowedOrigins() {_		return this.allowedOrigins__	};return,the,configured,origins,to,allow,possibly,code,null;public,list,string,get,allowed,origins,return,this,allowed,origins
CorsConfiguration -> public List<String> getAllowedOrigins();1431730371;Return the configured origins to allow, possibly {@code null}.;public List<String> getAllowedOrigins() {_		return this.allowedOrigins__	};return,the,configured,origins,to,allow,possibly,code,null;public,list,string,get,allowed,origins,return,this,allowed,origins
CorsConfiguration -> public List<String> getAllowedOrigins();1432857824;Return the configured origins to allow, possibly {@code null}.;public List<String> getAllowedOrigins() {_		return this.allowedOrigins__	};return,the,configured,origins,to,allow,possibly,code,null;public,list,string,get,allowed,origins,return,this,allowed,origins
CorsConfiguration -> public List<String> getAllowedOrigins();1433088837;Return the configured origins to allow, possibly {@code null}.;public List<String> getAllowedOrigins() {_		return this.allowedOrigins__	};return,the,configured,origins,to,allow,possibly,code,null;public,list,string,get,allowed,origins,return,this,allowed,origins
CorsConfiguration -> public List<String> getAllowedOrigins();1434809538;Return the configured origins to allow, possibly {@code null}._@see #addAllowedOrigin(String)_@see #setAllowedOrigins(List);public List<String> getAllowedOrigins() {_		return this.allowedOrigins__	};return,the,configured,origins,to,allow,possibly,code,null,see,add,allowed,origin,string,see,set,allowed,origins,list;public,list,string,get,allowed,origins,return,this,allowed,origins
CorsConfiguration -> public List<String> getAllowedOrigins();1436539370;Return the configured origins to allow, possibly {@code null}._@see #addAllowedOrigin(String)_@see #setAllowedOrigins(List);public List<String> getAllowedOrigins() {_		return this.allowedOrigins__	};return,the,configured,origins,to,allow,possibly,code,null,see,add,allowed,origin,string,see,set,allowed,origins,list;public,list,string,get,allowed,origins,return,this,allowed,origins
CorsConfiguration -> public List<String> getAllowedOrigins();1438251419;Return the configured origins to allow, possibly {@code null}._@see #addAllowedOrigin(String)_@see #setAllowedOrigins(List);public List<String> getAllowedOrigins() {_		return this.allowedOrigins__	};return,the,configured,origins,to,allow,possibly,code,null,see,add,allowed,origin,string,see,set,allowed,origins,list;public,list,string,get,allowed,origins,return,this,allowed,origins
CorsConfiguration -> public List<String> getAllowedOrigins();1447321232;Return the configured origins to allow, possibly {@code null}._@see #addAllowedOrigin(String)_@see #setAllowedOrigins(List);public List<String> getAllowedOrigins() {_		return this.allowedOrigins__	};return,the,configured,origins,to,allow,possibly,code,null,see,add,allowed,origin,string,see,set,allowed,origins,list;public,list,string,get,allowed,origins,return,this,allowed,origins
CorsConfiguration -> public List<String> getAllowedOrigins();1449660404;Return the configured origins to allow, possibly {@code null}._@see #addAllowedOrigin(String)_@see #setAllowedOrigins(List);public List<String> getAllowedOrigins() {_		return this.allowedOrigins__	};return,the,configured,origins,to,allow,possibly,code,null,see,add,allowed,origin,string,see,set,allowed,origins,list;public,list,string,get,allowed,origins,return,this,allowed,origins
CorsConfiguration -> public List<String> getAllowedOrigins();1453684721;Return the configured origins to allow, possibly {@code null}._@see #addAllowedOrigin(String)_@see #setAllowedOrigins(List);public List<String> getAllowedOrigins() {_		return this.allowedOrigins__	};return,the,configured,origins,to,allow,possibly,code,null,see,add,allowed,origin,string,see,set,allowed,origins,list;public,list,string,get,allowed,origins,return,this,allowed,origins
CorsConfiguration -> public List<String> getAllowedOrigins();1467730834;Return the configured origins to allow, possibly {@code null}._@see #addAllowedOrigin(String)_@see #setAllowedOrigins(List);public List<String> getAllowedOrigins() {_		return this.allowedOrigins__	};return,the,configured,origins,to,allow,possibly,code,null,see,add,allowed,origin,string,see,set,allowed,origins,list;public,list,string,get,allowed,origins,return,this,allowed,origins
CorsConfiguration -> public List<String> getAllowedOrigins();1472031618;Return the configured origins to allow, possibly {@code null}._@see #addAllowedOrigin(String)_@see #setAllowedOrigins(List);public List<String> getAllowedOrigins() {_		return this.allowedOrigins__	};return,the,configured,origins,to,allow,possibly,code,null,see,add,allowed,origin,string,see,set,allowed,origins,list;public,list,string,get,allowed,origins,return,this,allowed,origins
CorsConfiguration -> public List<String> getAllowedOrigins();1476175114;Return the configured origins to allow, possibly {@code null}._@see #addAllowedOrigin(String)_@see #setAllowedOrigins(List);public List<String> getAllowedOrigins() {_		return this.allowedOrigins__	};return,the,configured,origins,to,allow,possibly,code,null,see,add,allowed,origin,string,see,set,allowed,origins,list;public,list,string,get,allowed,origins,return,this,allowed,origins
CorsConfiguration -> public List<String> getAllowedOrigins();1476909116;Return the configured origins to allow, possibly {@code null}._@see #addAllowedOrigin(String)_@see #setAllowedOrigins(List);public List<String> getAllowedOrigins() {_		return this.allowedOrigins__	};return,the,configured,origins,to,allow,possibly,code,null,see,add,allowed,origin,string,see,set,allowed,origins,list;public,list,string,get,allowed,origins,return,this,allowed,origins
CorsConfiguration -> public List<String> getAllowedOrigins();1487713300;Return the configured origins to allow, or {@code null} if none._@see #addAllowedOrigin(String)_@see #setAllowedOrigins(List);public List<String> getAllowedOrigins() {_		return this.allowedOrigins__	};return,the,configured,origins,to,allow,or,code,null,if,none,see,add,allowed,origin,string,see,set,allowed,origins,list;public,list,string,get,allowed,origins,return,this,allowed,origins
CorsConfiguration -> public void setAllowedOrigins(List<String> origins);1430811101;Configure origins to allow, e.g. "http://domain1.com". The special value_"*" allows all domains._<p>By default this is not set.;public void setAllowedOrigins(List<String> origins) {_		this.allowedOrigins = origins__	};configure,origins,to,allow,e,g,http,domain1,com,the,special,value,allows,all,domains,p,by,default,this,is,not,set;public,void,set,allowed,origins,list,string,origins,this,allowed,origins,origins
CorsConfiguration -> public void setAllowedOrigins(List<String> origins);1431730371;Configure origins to allow, e.g. "http://domain1.com". The special value_"*" allows all domains._<p>By default this is not set.;public void setAllowedOrigins(List<String> origins) {_		this.allowedOrigins = origins__	};configure,origins,to,allow,e,g,http,domain1,com,the,special,value,allows,all,domains,p,by,default,this,is,not,set;public,void,set,allowed,origins,list,string,origins,this,allowed,origins,origins
CorsConfiguration -> public void setAllowedOrigins(List<String> origins);1432857824;Configure origins to allow, e.g. "http://domain1.com". The special value_"*" allows all domains._<p>By default this is not set.;public void setAllowedOrigins(List<String> origins) {_		this.allowedOrigins = origins__	};configure,origins,to,allow,e,g,http,domain1,com,the,special,value,allows,all,domains,p,by,default,this,is,not,set;public,void,set,allowed,origins,list,string,origins,this,allowed,origins,origins
CorsConfiguration -> public void setAllowedOrigins(List<String> origins);1433088837;Configure origins to allow, e.g. "http://domain1.com". The special value_"*" allows all domains._<p>By default this is not set.;public void setAllowedOrigins(List<String> origins) {_		this.allowedOrigins = origins__	};configure,origins,to,allow,e,g,http,domain1,com,the,special,value,allows,all,domains,p,by,default,this,is,not,set;public,void,set,allowed,origins,list,string,origins,this,allowed,origins,origins
CorsConfiguration -> public List<HttpMethod> checkHttpMethod(HttpMethod requestMethod);1430811101;Check the request HTTP method (or the method from the_Access-Control-Request-Method header on a pre-flight request) against the_configured allowed methods._@param requestMethod the HTTP method to check._@return the list of HTTP methods to list in the response of a pre-flight_request, or {@code null} if the requestMethod is not allowed.;public List<HttpMethod> checkHttpMethod(HttpMethod requestMethod) {_		if (requestMethod == null) {_			return null__		}_		List<String> allowedMethods = this.allowedMethods == null ?_				new ArrayList<String>() : this.allowedMethods__		if (allowedMethods.contains("*")) {_			return Arrays.asList(requestMethod)__		}_		if (allowedMethods.isEmpty()) {_			allowedMethods.add(HttpMethod.GET.name())__		}_		List<HttpMethod> result = new ArrayList<HttpMethod>(allowedMethods.size())__		boolean allowed = false__		for (String method : allowedMethods) {_			if (method.equals(requestMethod.name())) {_				allowed = true__			}_			result.add(HttpMethod.valueOf(method))__		}_		return allowed ? result : null__	};check,the,request,http,method,or,the,method,from,the,access,control,request,method,header,on,a,pre,flight,request,against,the,configured,allowed,methods,param,request,method,the,http,method,to,check,return,the,list,of,http,methods,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,the,request,method,is,not,allowed;public,list,http,method,check,http,method,http,method,request,method,if,request,method,null,return,null,list,string,allowed,methods,this,allowed,methods,null,new,array,list,string,this,allowed,methods,if,allowed,methods,contains,return,arrays,as,list,request,method,if,allowed,methods,is,empty,allowed,methods,add,http,method,get,name,list,http,method,result,new,array,list,http,method,allowed,methods,size,boolean,allowed,false,for,string,method,allowed,methods,if,method,equals,request,method,name,allowed,true,result,add,http,method,value,of,method,return,allowed,result,null
CorsConfiguration -> public List<HttpMethod> checkHttpMethod(HttpMethod requestMethod);1431730371;Check the request HTTP method (or the method from the_Access-Control-Request-Method header on a pre-flight request) against the_configured allowed methods._@param requestMethod the HTTP method to check._@return the list of HTTP methods to list in the response of a pre-flight_request, or {@code null} if the requestMethod is not allowed.;public List<HttpMethod> checkHttpMethod(HttpMethod requestMethod) {_		if (requestMethod == null) {_			return null__		}_		List<String> allowedMethods = this.allowedMethods == null ?_				new ArrayList<String>() : this.allowedMethods__		if (allowedMethods.contains("*")) {_			return Arrays.asList(requestMethod)__		}_		if (allowedMethods.isEmpty()) {_			allowedMethods.add(HttpMethod.GET.name())__		}_		List<HttpMethod> result = new ArrayList<HttpMethod>(allowedMethods.size())__		boolean allowed = false__		for (String method : allowedMethods) {_			if (method.equals(requestMethod.name())) {_				allowed = true__			}_			result.add(HttpMethod.valueOf(method))__		}_		return allowed ? result : null__	};check,the,request,http,method,or,the,method,from,the,access,control,request,method,header,on,a,pre,flight,request,against,the,configured,allowed,methods,param,request,method,the,http,method,to,check,return,the,list,of,http,methods,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,the,request,method,is,not,allowed;public,list,http,method,check,http,method,http,method,request,method,if,request,method,null,return,null,list,string,allowed,methods,this,allowed,methods,null,new,array,list,string,this,allowed,methods,if,allowed,methods,contains,return,arrays,as,list,request,method,if,allowed,methods,is,empty,allowed,methods,add,http,method,get,name,list,http,method,result,new,array,list,http,method,allowed,methods,size,boolean,allowed,false,for,string,method,allowed,methods,if,method,equals,request,method,name,allowed,true,result,add,http,method,value,of,method,return,allowed,result,null
CorsConfiguration -> public List<HttpMethod> checkHttpMethod(HttpMethod requestMethod);1432857824;Check the request HTTP method (or the method from the_Access-Control-Request-Method header on a pre-flight request) against the_configured allowed methods._@param requestMethod the HTTP method to check._@return the list of HTTP methods to list in the response of a pre-flight_request, or {@code null} if the requestMethod is not allowed.;public List<HttpMethod> checkHttpMethod(HttpMethod requestMethod) {_		if (requestMethod == null) {_			return null__		}_		List<String> allowedMethods = this.allowedMethods == null ?_				new ArrayList<String>() : this.allowedMethods__		if (allowedMethods.contains("*")) {_			return Arrays.asList(requestMethod)__		}_		if (allowedMethods.isEmpty()) {_			allowedMethods.add(HttpMethod.GET.name())__		}_		List<HttpMethod> result = new ArrayList<HttpMethod>(allowedMethods.size())__		boolean allowed = false__		for (String method : allowedMethods) {_			if (method.equals(requestMethod.name())) {_				allowed = true__			}_			result.add(HttpMethod.valueOf(method))__		}_		return allowed ? result : null__	};check,the,request,http,method,or,the,method,from,the,access,control,request,method,header,on,a,pre,flight,request,against,the,configured,allowed,methods,param,request,method,the,http,method,to,check,return,the,list,of,http,methods,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,the,request,method,is,not,allowed;public,list,http,method,check,http,method,http,method,request,method,if,request,method,null,return,null,list,string,allowed,methods,this,allowed,methods,null,new,array,list,string,this,allowed,methods,if,allowed,methods,contains,return,arrays,as,list,request,method,if,allowed,methods,is,empty,allowed,methods,add,http,method,get,name,list,http,method,result,new,array,list,http,method,allowed,methods,size,boolean,allowed,false,for,string,method,allowed,methods,if,method,equals,request,method,name,allowed,true,result,add,http,method,value,of,method,return,allowed,result,null
CorsConfiguration -> public List<HttpMethod> checkHttpMethod(HttpMethod requestMethod);1433088837;Check the request HTTP method (or the method from the_Access-Control-Request-Method header on a pre-flight request) against the_configured allowed methods._@param requestMethod the HTTP method to check._@return the list of HTTP methods to list in the response of a pre-flight_request, or {@code null} if the requestMethod is not allowed.;public List<HttpMethod> checkHttpMethod(HttpMethod requestMethod) {_		if (requestMethod == null) {_			return null__		}_		List<String> allowedMethods = this.allowedMethods == null ?_				new ArrayList<String>() : this.allowedMethods__		if (allowedMethods.contains("*")) {_			return Arrays.asList(requestMethod)__		}_		if (allowedMethods.isEmpty()) {_			allowedMethods.add(HttpMethod.GET.name())__		}_		List<HttpMethod> result = new ArrayList<HttpMethod>(allowedMethods.size())__		boolean allowed = false__		for (String method : allowedMethods) {_			if (method.equals(requestMethod.name())) {_				allowed = true__			}_			result.add(HttpMethod.valueOf(method))__		}_		return allowed ? result : null__	};check,the,request,http,method,or,the,method,from,the,access,control,request,method,header,on,a,pre,flight,request,against,the,configured,allowed,methods,param,request,method,the,http,method,to,check,return,the,list,of,http,methods,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,the,request,method,is,not,allowed;public,list,http,method,check,http,method,http,method,request,method,if,request,method,null,return,null,list,string,allowed,methods,this,allowed,methods,null,new,array,list,string,this,allowed,methods,if,allowed,methods,contains,return,arrays,as,list,request,method,if,allowed,methods,is,empty,allowed,methods,add,http,method,get,name,list,http,method,result,new,array,list,http,method,allowed,methods,size,boolean,allowed,false,for,string,method,allowed,methods,if,method,equals,request,method,name,allowed,true,result,add,http,method,value,of,method,return,allowed,result,null
CorsConfiguration -> public List<HttpMethod> checkHttpMethod(HttpMethod requestMethod);1434809538;Check the HTTP request method (or the method from the_{@code Access-Control-Request-Method} header on a pre-flight request)_against the configured allowed methods._@param requestMethod the HTTP request method to check_@return the list of HTTP methods to list in the response of a pre-flight_request, or {@code null} if the supplied {@code requestMethod} is not allowed;public List<HttpMethod> checkHttpMethod(HttpMethod requestMethod) {_		if (requestMethod == null) {_			return null__		}_		List<String> allowedMethods = (this.allowedMethods == null ? new ArrayList<String>() : this.allowedMethods)__		if (allowedMethods.contains(ALL)) {_			return Arrays.asList(requestMethod)__		}_		if (allowedMethods.isEmpty()) {_			allowedMethods.add(HttpMethod.GET.name())__		}_		List<HttpMethod> result = new ArrayList<HttpMethod>(allowedMethods.size())__		boolean allowed = false__		for (String method : allowedMethods) {_			if (requestMethod.name().equals(method)) {_				allowed = true__			}_			result.add(HttpMethod.valueOf(method))__		}_		return (allowed ? result : null)__	};check,the,http,request,method,or,the,method,from,the,code,access,control,request,method,header,on,a,pre,flight,request,against,the,configured,allowed,methods,param,request,method,the,http,request,method,to,check,return,the,list,of,http,methods,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,the,supplied,code,request,method,is,not,allowed;public,list,http,method,check,http,method,http,method,request,method,if,request,method,null,return,null,list,string,allowed,methods,this,allowed,methods,null,new,array,list,string,this,allowed,methods,if,allowed,methods,contains,all,return,arrays,as,list,request,method,if,allowed,methods,is,empty,allowed,methods,add,http,method,get,name,list,http,method,result,new,array,list,http,method,allowed,methods,size,boolean,allowed,false,for,string,method,allowed,methods,if,request,method,name,equals,method,allowed,true,result,add,http,method,value,of,method,return,allowed,result,null
CorsConfiguration -> public List<HttpMethod> checkHttpMethod(HttpMethod requestMethod);1436539370;Check the HTTP request method (or the method from the_{@code Access-Control-Request-Method} header on a pre-flight request)_against the configured allowed methods._@param requestMethod the HTTP request method to check_@return the list of HTTP methods to list in the response of a pre-flight_request, or {@code null} if the supplied {@code requestMethod} is not allowed;public List<HttpMethod> checkHttpMethod(HttpMethod requestMethod) {_		if (requestMethod == null) {_			return null__		}_		List<String> allowedMethods = (this.allowedMethods == null ? new ArrayList<String>() : this.allowedMethods)__		if (allowedMethods.contains(ALL)) {_			return Arrays.asList(requestMethod)__		}_		if (allowedMethods.isEmpty()) {_			allowedMethods.add(HttpMethod.GET.name())__		}_		List<HttpMethod> result = new ArrayList<HttpMethod>(allowedMethods.size())__		boolean allowed = false__		for (String method : allowedMethods) {_			if (requestMethod.name().equals(method)) {_				allowed = true__			}_			result.add(HttpMethod.valueOf(method))__		}_		return (allowed ? result : null)__	};check,the,http,request,method,or,the,method,from,the,code,access,control,request,method,header,on,a,pre,flight,request,against,the,configured,allowed,methods,param,request,method,the,http,request,method,to,check,return,the,list,of,http,methods,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,the,supplied,code,request,method,is,not,allowed;public,list,http,method,check,http,method,http,method,request,method,if,request,method,null,return,null,list,string,allowed,methods,this,allowed,methods,null,new,array,list,string,this,allowed,methods,if,allowed,methods,contains,all,return,arrays,as,list,request,method,if,allowed,methods,is,empty,allowed,methods,add,http,method,get,name,list,http,method,result,new,array,list,http,method,allowed,methods,size,boolean,allowed,false,for,string,method,allowed,methods,if,request,method,name,equals,method,allowed,true,result,add,http,method,value,of,method,return,allowed,result,null
CorsConfiguration -> public List<HttpMethod> checkHttpMethod(HttpMethod requestMethod);1438251419;Check the HTTP request method (or the method from the_{@code Access-Control-Request-Method} header on a pre-flight request)_against the configured allowed methods._@param requestMethod the HTTP request method to check_@return the list of HTTP methods to list in the response of a pre-flight_request, or {@code null} if the supplied {@code requestMethod} is not allowed;public List<HttpMethod> checkHttpMethod(HttpMethod requestMethod) {_		if (requestMethod == null) {_			return null__		}_		List<String> allowedMethods =_				(this.allowedMethods != null ? this.allowedMethods : new ArrayList<String>())__		if (allowedMethods.contains(ALL)) {_			return Collections.singletonList(requestMethod)__		}_		if (allowedMethods.isEmpty()) {_			allowedMethods.add(HttpMethod.GET.name())__		}_		List<HttpMethod> result = new ArrayList<HttpMethod>(allowedMethods.size())__		boolean allowed = false__		for (String method : allowedMethods) {_			if (requestMethod.name().equals(method)) {_				allowed = true__			}_			result.add(HttpMethod.valueOf(method))__		}_		return (allowed ? result : null)__	};check,the,http,request,method,or,the,method,from,the,code,access,control,request,method,header,on,a,pre,flight,request,against,the,configured,allowed,methods,param,request,method,the,http,request,method,to,check,return,the,list,of,http,methods,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,the,supplied,code,request,method,is,not,allowed;public,list,http,method,check,http,method,http,method,request,method,if,request,method,null,return,null,list,string,allowed,methods,this,allowed,methods,null,this,allowed,methods,new,array,list,string,if,allowed,methods,contains,all,return,collections,singleton,list,request,method,if,allowed,methods,is,empty,allowed,methods,add,http,method,get,name,list,http,method,result,new,array,list,http,method,allowed,methods,size,boolean,allowed,false,for,string,method,allowed,methods,if,request,method,name,equals,method,allowed,true,result,add,http,method,value,of,method,return,allowed,result,null
CorsConfiguration -> public List<HttpMethod> checkHttpMethod(HttpMethod requestMethod);1447321232;Check the HTTP request method (or the method from the_{@code Access-Control-Request-Method} header on a pre-flight request)_against the configured allowed methods._@param requestMethod the HTTP request method to check_@return the list of HTTP methods to list in the response of a pre-flight_request, or {@code null} if the supplied {@code requestMethod} is not allowed;public List<HttpMethod> checkHttpMethod(HttpMethod requestMethod) {_		if (requestMethod == null) {_			return null__		}_		List<String> allowedMethods =_				(this.allowedMethods != null ? this.allowedMethods : new ArrayList<String>())__		if (allowedMethods.contains(ALL)) {_			return Collections.singletonList(requestMethod)__		}_		if (allowedMethods.isEmpty()) {_			allowedMethods.add(HttpMethod.GET.name())__		}_		List<HttpMethod> result = new ArrayList<HttpMethod>(allowedMethods.size())__		boolean allowed = false__		for (String method : allowedMethods) {_			if (requestMethod.name().equals(method)) {_				allowed = true__			}_			result.add(HttpMethod.valueOf(method))__		}_		return (allowed ? result : null)__	};check,the,http,request,method,or,the,method,from,the,code,access,control,request,method,header,on,a,pre,flight,request,against,the,configured,allowed,methods,param,request,method,the,http,request,method,to,check,return,the,list,of,http,methods,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,the,supplied,code,request,method,is,not,allowed;public,list,http,method,check,http,method,http,method,request,method,if,request,method,null,return,null,list,string,allowed,methods,this,allowed,methods,null,this,allowed,methods,new,array,list,string,if,allowed,methods,contains,all,return,collections,singleton,list,request,method,if,allowed,methods,is,empty,allowed,methods,add,http,method,get,name,list,http,method,result,new,array,list,http,method,allowed,methods,size,boolean,allowed,false,for,string,method,allowed,methods,if,request,method,name,equals,method,allowed,true,result,add,http,method,value,of,method,return,allowed,result,null
CorsConfiguration -> public List<HttpMethod> checkHttpMethod(HttpMethod requestMethod);1449660404;Check the HTTP request method (or the method from the_{@code Access-Control-Request-Method} header on a pre-flight request)_against the configured allowed methods._@param requestMethod the HTTP request method to check_@return the list of HTTP methods to list in the response of a pre-flight_request, or {@code null} if the supplied {@code requestMethod} is not allowed;public List<HttpMethod> checkHttpMethod(HttpMethod requestMethod) {_		if (requestMethod == null) {_			return null__		}_		List<String> allowedMethods =_				(this.allowedMethods != null ? this.allowedMethods : new ArrayList<String>())__		if (allowedMethods.contains(ALL)) {_			return Collections.singletonList(requestMethod)__		}_		if (allowedMethods.isEmpty()) {_			allowedMethods.add(HttpMethod.GET.name())__		}_		List<HttpMethod> result = new ArrayList<HttpMethod>(allowedMethods.size())__		boolean allowed = false__		for (String method : allowedMethods) {_			if (requestMethod.matches(method)) {_				allowed = true__			}_			HttpMethod resolved = HttpMethod.resolve(method)__			if (resolved != null) {_				result.add(resolved)__			}_		}_		return (allowed ? result : null)__	};check,the,http,request,method,or,the,method,from,the,code,access,control,request,method,header,on,a,pre,flight,request,against,the,configured,allowed,methods,param,request,method,the,http,request,method,to,check,return,the,list,of,http,methods,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,the,supplied,code,request,method,is,not,allowed;public,list,http,method,check,http,method,http,method,request,method,if,request,method,null,return,null,list,string,allowed,methods,this,allowed,methods,null,this,allowed,methods,new,array,list,string,if,allowed,methods,contains,all,return,collections,singleton,list,request,method,if,allowed,methods,is,empty,allowed,methods,add,http,method,get,name,list,http,method,result,new,array,list,http,method,allowed,methods,size,boolean,allowed,false,for,string,method,allowed,methods,if,request,method,matches,method,allowed,true,http,method,resolved,http,method,resolve,method,if,resolved,null,result,add,resolved,return,allowed,result,null
CorsConfiguration -> public List<HttpMethod> checkHttpMethod(HttpMethod requestMethod);1453684721;Check the HTTP request method (or the method from the_{@code Access-Control-Request-Method} header on a pre-flight request)_against the configured allowed methods._@param requestMethod the HTTP request method to check_@return the list of HTTP methods to list in the response of a pre-flight_request, or {@code null} if the supplied {@code requestMethod} is not allowed;public List<HttpMethod> checkHttpMethod(HttpMethod requestMethod) {_		if (requestMethod == null) {_			return null__		}_		List<String> allowedMethods =_				(this.allowedMethods != null ? this.allowedMethods : new ArrayList<String>())__		if (allowedMethods.contains(ALL)) {_			return Collections.singletonList(requestMethod)__		}_		if (allowedMethods.isEmpty()) {_			allowedMethods.add(HttpMethod.GET.name())__			allowedMethods.add(HttpMethod.HEAD.name())__		}_		List<HttpMethod> result = new ArrayList<HttpMethod>(allowedMethods.size())__		boolean allowed = false__		for (String method : allowedMethods) {_			if (requestMethod.matches(method)) {_				allowed = true__			}_			HttpMethod resolved = HttpMethod.resolve(method)__			if (resolved != null) {_				result.add(resolved)__			}_		}_		return (allowed ? result : null)__	};check,the,http,request,method,or,the,method,from,the,code,access,control,request,method,header,on,a,pre,flight,request,against,the,configured,allowed,methods,param,request,method,the,http,request,method,to,check,return,the,list,of,http,methods,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,the,supplied,code,request,method,is,not,allowed;public,list,http,method,check,http,method,http,method,request,method,if,request,method,null,return,null,list,string,allowed,methods,this,allowed,methods,null,this,allowed,methods,new,array,list,string,if,allowed,methods,contains,all,return,collections,singleton,list,request,method,if,allowed,methods,is,empty,allowed,methods,add,http,method,get,name,allowed,methods,add,http,method,head,name,list,http,method,result,new,array,list,http,method,allowed,methods,size,boolean,allowed,false,for,string,method,allowed,methods,if,request,method,matches,method,allowed,true,http,method,resolved,http,method,resolve,method,if,resolved,null,result,add,resolved,return,allowed,result,null
CorsConfiguration -> public List<HttpMethod> checkHttpMethod(HttpMethod requestMethod);1467730834;Check the HTTP request method (or the method from the_{@code Access-Control-Request-Method} header on a pre-flight request)_against the configured allowed methods._@param requestMethod the HTTP request method to check_@return the list of HTTP methods to list in the response of a pre-flight_request, or {@code null} if the supplied {@code requestMethod} is not allowed;public List<HttpMethod> checkHttpMethod(HttpMethod requestMethod) {_		if (requestMethod == null) {_			return null__		}_		List<String> allowedMethods =_				(this.allowedMethods != null ? this.allowedMethods : new ArrayList<>())__		if (allowedMethods.contains(ALL)) {_			return Collections.singletonList(requestMethod)__		}_		if (allowedMethods.isEmpty()) {_			allowedMethods.add(HttpMethod.GET.name())__			allowedMethods.add(HttpMethod.HEAD.name())__		}_		List<HttpMethod> result = new ArrayList<>(allowedMethods.size())__		boolean allowed = false__		for (String method : allowedMethods) {_			if (requestMethod.matches(method)) {_				allowed = true__			}_			HttpMethod resolved = HttpMethod.resolve(method)__			if (resolved != null) {_				result.add(resolved)__			}_		}_		return (allowed ? result : null)__	};check,the,http,request,method,or,the,method,from,the,code,access,control,request,method,header,on,a,pre,flight,request,against,the,configured,allowed,methods,param,request,method,the,http,request,method,to,check,return,the,list,of,http,methods,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,the,supplied,code,request,method,is,not,allowed;public,list,http,method,check,http,method,http,method,request,method,if,request,method,null,return,null,list,string,allowed,methods,this,allowed,methods,null,this,allowed,methods,new,array,list,if,allowed,methods,contains,all,return,collections,singleton,list,request,method,if,allowed,methods,is,empty,allowed,methods,add,http,method,get,name,allowed,methods,add,http,method,head,name,list,http,method,result,new,array,list,allowed,methods,size,boolean,allowed,false,for,string,method,allowed,methods,if,request,method,matches,method,allowed,true,http,method,resolved,http,method,resolve,method,if,resolved,null,result,add,resolved,return,allowed,result,null
CorsConfiguration -> public List<HttpMethod> checkHttpMethod(HttpMethod requestMethod);1472031618;Check the HTTP request method (or the method from the_{@code Access-Control-Request-Method} header on a pre-flight request)_against the configured allowed methods._@param requestMethod the HTTP request method to check_@return the list of HTTP methods to list in the response of a pre-flight_request, or {@code null} if the supplied {@code requestMethod} is not allowed;public List<HttpMethod> checkHttpMethod(HttpMethod requestMethod) {_		if (requestMethod == null) {_			return null__		}_		if (this.resolvedMethods == null) {_			return Collections.singletonList(requestMethod)__		}_		return (this.resolvedMethods.contains(requestMethod) ? this.resolvedMethods : null)__	};check,the,http,request,method,or,the,method,from,the,code,access,control,request,method,header,on,a,pre,flight,request,against,the,configured,allowed,methods,param,request,method,the,http,request,method,to,check,return,the,list,of,http,methods,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,the,supplied,code,request,method,is,not,allowed;public,list,http,method,check,http,method,http,method,request,method,if,request,method,null,return,null,if,this,resolved,methods,null,return,collections,singleton,list,request,method,return,this,resolved,methods,contains,request,method,this,resolved,methods,null
CorsConfiguration -> public List<HttpMethod> checkHttpMethod(HttpMethod requestMethod);1476175114;Check the HTTP request method (or the method from the_{@code Access-Control-Request-Method} header on a pre-flight request)_against the configured allowed methods._@param requestMethod the HTTP request method to check_@return the list of HTTP methods to list in the response of a pre-flight_request, or {@code null} if the supplied {@code requestMethod} is not allowed;public List<HttpMethod> checkHttpMethod(HttpMethod requestMethod) {_		if (requestMethod == null) {_			return null__		}_		if (this.resolvedMethods == null) {_			return Collections.singletonList(requestMethod)__		}_		return (this.resolvedMethods.contains(requestMethod) ? this.resolvedMethods : null)__	};check,the,http,request,method,or,the,method,from,the,code,access,control,request,method,header,on,a,pre,flight,request,against,the,configured,allowed,methods,param,request,method,the,http,request,method,to,check,return,the,list,of,http,methods,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,the,supplied,code,request,method,is,not,allowed;public,list,http,method,check,http,method,http,method,request,method,if,request,method,null,return,null,if,this,resolved,methods,null,return,collections,singleton,list,request,method,return,this,resolved,methods,contains,request,method,this,resolved,methods,null
CorsConfiguration -> public List<HttpMethod> checkHttpMethod(HttpMethod requestMethod);1476909116;Check the HTTP request method (or the method from the_{@code Access-Control-Request-Method} header on a pre-flight request)_against the configured allowed methods._@param requestMethod the HTTP request method to check_@return the list of HTTP methods to list in the response of a pre-flight_request, or {@code null} if the supplied {@code requestMethod} is not allowed;public List<HttpMethod> checkHttpMethod(HttpMethod requestMethod) {_		if (requestMethod == null) {_			return null__		}_		if (this.resolvedMethods == null) {_			return Collections.singletonList(requestMethod)__		}_		return (this.resolvedMethods.contains(requestMethod) ? this.resolvedMethods : null)__	};check,the,http,request,method,or,the,method,from,the,code,access,control,request,method,header,on,a,pre,flight,request,against,the,configured,allowed,methods,param,request,method,the,http,request,method,to,check,return,the,list,of,http,methods,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,the,supplied,code,request,method,is,not,allowed;public,list,http,method,check,http,method,http,method,request,method,if,request,method,null,return,null,if,this,resolved,methods,null,return,collections,singleton,list,request,method,return,this,resolved,methods,contains,request,method,this,resolved,methods,null
CorsConfiguration -> public List<HttpMethod> checkHttpMethod(HttpMethod requestMethod);1487713300;Check the HTTP request method (or the method from the_{@code Access-Control-Request-Method} header on a pre-flight request)_against the configured allowed methods._@param requestMethod the HTTP request method to check_@return the list of HTTP methods to list in the response of a pre-flight_request, or {@code null} if the supplied {@code requestMethod} is not allowed;public List<HttpMethod> checkHttpMethod(HttpMethod requestMethod) {_		if (requestMethod == null) {_			return null__		}_		if (this.resolvedMethods == null) {_			return Collections.singletonList(requestMethod)__		}_		return (this.resolvedMethods.contains(requestMethod) ? this.resolvedMethods : null)__	};check,the,http,request,method,or,the,method,from,the,code,access,control,request,method,header,on,a,pre,flight,request,against,the,configured,allowed,methods,param,request,method,the,http,request,method,to,check,return,the,list,of,http,methods,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,the,supplied,code,request,method,is,not,allowed;public,list,http,method,check,http,method,http,method,request,method,if,request,method,null,return,null,if,this,resolved,methods,null,return,collections,singleton,list,request,method,return,this,resolved,methods,contains,request,method,this,resolved,methods,null
CorsConfiguration -> public void addAllowedOrigin(String origin);1430811101;Add an origin to allow.;public void addAllowedOrigin(String origin) {_		if (this.allowedOrigins == null) {_			this.allowedOrigins = new ArrayList<String>()__		}_		this.allowedOrigins.add(origin)__	};add,an,origin,to,allow;public,void,add,allowed,origin,string,origin,if,this,allowed,origins,null,this,allowed,origins,new,array,list,string,this,allowed,origins,add,origin
CorsConfiguration -> public void addAllowedOrigin(String origin);1431730371;Add an origin to allow.;public void addAllowedOrigin(String origin) {_		if (this.allowedOrigins == null) {_			this.allowedOrigins = new ArrayList<String>()__		}_		this.allowedOrigins.add(origin)__	};add,an,origin,to,allow;public,void,add,allowed,origin,string,origin,if,this,allowed,origins,null,this,allowed,origins,new,array,list,string,this,allowed,origins,add,origin
CorsConfiguration -> public void addAllowedOrigin(String origin);1432857824;Add an origin to allow.;public void addAllowedOrigin(String origin) {_		if (this.allowedOrigins == null) {_			this.allowedOrigins = new ArrayList<String>()__		}_		this.allowedOrigins.add(origin)__	};add,an,origin,to,allow;public,void,add,allowed,origin,string,origin,if,this,allowed,origins,null,this,allowed,origins,new,array,list,string,this,allowed,origins,add,origin
CorsConfiguration -> public void addAllowedOrigin(String origin);1433088837;Add an origin to allow.;public void addAllowedOrigin(String origin) {_		if (this.allowedOrigins == null) {_			this.allowedOrigins = new ArrayList<String>()__		}_		this.allowedOrigins.add(origin)__	};add,an,origin,to,allow;public,void,add,allowed,origin,string,origin,if,this,allowed,origins,null,this,allowed,origins,new,array,list,string,this,allowed,origins,add,origin
CorsConfiguration -> public void addAllowedOrigin(String origin);1434809538;Add an origin to allow.;public void addAllowedOrigin(String origin) {_		if (this.allowedOrigins == null) {_			this.allowedOrigins = new ArrayList<String>()__		}_		this.allowedOrigins.add(origin)__	};add,an,origin,to,allow;public,void,add,allowed,origin,string,origin,if,this,allowed,origins,null,this,allowed,origins,new,array,list,string,this,allowed,origins,add,origin
CorsConfiguration -> public void addAllowedOrigin(String origin);1436539370;Add an origin to allow.;public void addAllowedOrigin(String origin) {_		if (this.allowedOrigins == null) {_			this.allowedOrigins = new ArrayList<String>()__		}_		this.allowedOrigins.add(origin)__	};add,an,origin,to,allow;public,void,add,allowed,origin,string,origin,if,this,allowed,origins,null,this,allowed,origins,new,array,list,string,this,allowed,origins,add,origin
CorsConfiguration -> public void addAllowedOrigin(String origin);1438251419;Add an origin to allow.;public void addAllowedOrigin(String origin) {_		if (this.allowedOrigins == null) {_			this.allowedOrigins = new ArrayList<String>()__		}_		this.allowedOrigins.add(origin)__	};add,an,origin,to,allow;public,void,add,allowed,origin,string,origin,if,this,allowed,origins,null,this,allowed,origins,new,array,list,string,this,allowed,origins,add,origin
CorsConfiguration -> public void addAllowedOrigin(String origin);1447321232;Add an origin to allow.;public void addAllowedOrigin(String origin) {_		if (this.allowedOrigins == null) {_			this.allowedOrigins = new ArrayList<String>()__		}_		this.allowedOrigins.add(origin)__	};add,an,origin,to,allow;public,void,add,allowed,origin,string,origin,if,this,allowed,origins,null,this,allowed,origins,new,array,list,string,this,allowed,origins,add,origin
CorsConfiguration -> public void addAllowedOrigin(String origin);1449660404;Add an origin to allow.;public void addAllowedOrigin(String origin) {_		if (this.allowedOrigins == null) {_			this.allowedOrigins = new ArrayList<String>()__		}_		this.allowedOrigins.add(origin)__	};add,an,origin,to,allow;public,void,add,allowed,origin,string,origin,if,this,allowed,origins,null,this,allowed,origins,new,array,list,string,this,allowed,origins,add,origin
CorsConfiguration -> public void addAllowedOrigin(String origin);1453684721;Add an origin to allow.;public void addAllowedOrigin(String origin) {_		if (this.allowedOrigins == null) {_			this.allowedOrigins = new ArrayList<String>()__		}_		this.allowedOrigins.add(origin)__	};add,an,origin,to,allow;public,void,add,allowed,origin,string,origin,if,this,allowed,origins,null,this,allowed,origins,new,array,list,string,this,allowed,origins,add,origin
CorsConfiguration -> public void addAllowedOrigin(String origin);1467730834;Add an origin to allow.;public void addAllowedOrigin(String origin) {_		if (this.allowedOrigins == null) {_			this.allowedOrigins = new ArrayList<>()__		}_		this.allowedOrigins.add(origin)__	};add,an,origin,to,allow;public,void,add,allowed,origin,string,origin,if,this,allowed,origins,null,this,allowed,origins,new,array,list,this,allowed,origins,add,origin
CorsConfiguration -> public void addAllowedOrigin(String origin);1472031618;Add an origin to allow.;public void addAllowedOrigin(String origin) {_		if (this.allowedOrigins == null) {_			this.allowedOrigins = new ArrayList<>(4)__		}_		this.allowedOrigins.add(origin)__	};add,an,origin,to,allow;public,void,add,allowed,origin,string,origin,if,this,allowed,origins,null,this,allowed,origins,new,array,list,4,this,allowed,origins,add,origin
CorsConfiguration -> public void addAllowedOrigin(String origin);1476175114;Add an origin to allow.;public void addAllowedOrigin(String origin) {_		if (this.allowedOrigins == null) {_			this.allowedOrigins = new ArrayList<>(4)__		}_		this.allowedOrigins.add(origin)__	};add,an,origin,to,allow;public,void,add,allowed,origin,string,origin,if,this,allowed,origins,null,this,allowed,origins,new,array,list,4,this,allowed,origins,add,origin
CorsConfiguration -> public void addAllowedOrigin(String origin);1476909116;Add an origin to allow.;public void addAllowedOrigin(String origin) {_		if (this.allowedOrigins == null) {_			this.allowedOrigins = new ArrayList<>(4)__		}_		this.allowedOrigins.add(origin)__	};add,an,origin,to,allow;public,void,add,allowed,origin,string,origin,if,this,allowed,origins,null,this,allowed,origins,new,array,list,4,this,allowed,origins,add,origin
CorsConfiguration -> public void addAllowedOrigin(String origin);1487713300;Add an origin to allow.;public void addAllowedOrigin(String origin) {_		if (this.allowedOrigins == null) {_			this.allowedOrigins = new ArrayList<>(4)__		}_		this.allowedOrigins.add(origin)__	};add,an,origin,to,allow;public,void,add,allowed,origin,string,origin,if,this,allowed,origins,null,this,allowed,origins,new,array,list,4,this,allowed,origins,add,origin
CorsConfiguration -> public void addAllowedOrigin(String origin);1495868221;Add an origin to allow.;public void addAllowedOrigin(String origin) {_		if (this.allowedOrigins == null) {_			this.allowedOrigins = new ArrayList<>(4)__		}_		this.allowedOrigins.add(origin)__	};add,an,origin,to,allow;public,void,add,allowed,origin,string,origin,if,this,allowed,origins,null,this,allowed,origins,new,array,list,4,this,allowed,origins,add,origin
CorsConfiguration -> public void addAllowedOrigin(String origin);1496837955;Add an origin to allow.;public void addAllowedOrigin(String origin) {_		if (this.allowedOrigins == null) {_			this.allowedOrigins = new ArrayList<>(4)__		}_		this.allowedOrigins.add(origin)__	};add,an,origin,to,allow;public,void,add,allowed,origin,string,origin,if,this,allowed,origins,null,this,allowed,origins,new,array,list,4,this,allowed,origins,add,origin
CorsConfiguration -> public void addAllowedOrigin(String origin);1498780456;Add an origin to allow.;public void addAllowedOrigin(String origin) {_		if (this.allowedOrigins == null) {_			this.allowedOrigins = new ArrayList<>(4)__		}_		this.allowedOrigins.add(origin)__	};add,an,origin,to,allow;public,void,add,allowed,origin,string,origin,if,this,allowed,origins,null,this,allowed,origins,new,array,list,4,this,allowed,origins,add,origin
CorsConfiguration -> public void addAllowedOrigin(String origin);1500448076;Add an origin to allow.;public void addAllowedOrigin(String origin) {_		if (this.allowedOrigins == null) {_			this.allowedOrigins = new ArrayList<>(4)__		}_		this.allowedOrigins.add(origin)__	};add,an,origin,to,allow;public,void,add,allowed,origin,string,origin,if,this,allowed,origins,null,this,allowed,origins,new,array,list,4,this,allowed,origins,add,origin
CorsConfiguration -> public void addAllowedOrigin(String origin);1511387204;Add an origin to allow.;public void addAllowedOrigin(String origin) {_		if (this.allowedOrigins == null) {_			this.allowedOrigins = new ArrayList<>(4)__		}_		this.allowedOrigins.add(origin)__	};add,an,origin,to,allow;public,void,add,allowed,origin,string,origin,if,this,allowed,origins,null,this,allowed,origins,new,array,list,4,this,allowed,origins,add,origin
CorsConfiguration -> public void addAllowedOrigin(String origin);1511925367;Add an origin to allow.;public void addAllowedOrigin(String origin) {_		if (this.allowedOrigins == null) {_			this.allowedOrigins = new ArrayList<>(4)__		}_		this.allowedOrigins.add(origin)__	};add,an,origin,to,allow;public,void,add,allowed,origin,string,origin,if,this,allowed,origins,null,this,allowed,origins,new,array,list,4,this,allowed,origins,add,origin
CorsConfiguration -> public void addAllowedOrigin(String origin);1513805881;Add an origin to allow.;public void addAllowedOrigin(String origin) {_		if (this.allowedOrigins == null) {_			this.allowedOrigins = new ArrayList<>(4)__		}_		else if (this.allowedOrigins == DEFAULT_PERMIT_ALL) {_			setAllowedOrigins(DEFAULT_PERMIT_ALL)__		}_		this.allowedOrigins.add(origin)__	};add,an,origin,to,allow;public,void,add,allowed,origin,string,origin,if,this,allowed,origins,null,this,allowed,origins,new,array,list,4,else,if,this,allowed,origins,set,allowed,origins,this,allowed,origins,add,origin
CorsConfiguration -> public void addAllowedOrigin(String origin);1522354261;Add an origin to allow.;public void addAllowedOrigin(String origin) {_		if (this.allowedOrigins == null) {_			this.allowedOrigins = new ArrayList<>(4)__		}_		else if (this.allowedOrigins == DEFAULT_PERMIT_ALL) {_			setAllowedOrigins(DEFAULT_PERMIT_ALL)__		}_		this.allowedOrigins.add(origin)__	};add,an,origin,to,allow;public,void,add,allowed,origin,string,origin,if,this,allowed,origins,null,this,allowed,origins,new,array,list,4,else,if,this,allowed,origins,set,allowed,origins,this,allowed,origins,add,origin
CorsConfiguration -> public List<String> checkHeaders(List<String> requestHeaders);1430811101;Check the request headers (or the headers listed in the_Access-Control-Request-Headers of a pre-flight request) against the_configured allowed headers._@param requestHeaders the headers to check._@return the list of allowed headers to list in the response of a pre-flight_request, or {@code null} if a requestHeader is not allowed.;public List<String> checkHeaders(List<String> requestHeaders) {_		if (requestHeaders == null) {_			return null__		}_		if (requestHeaders.isEmpty()) {_			return Collections.emptyList()__		}_		List<String> allowedHeaders = this.allowedHeaders == null ?_				new ArrayList<String>() : this.allowedHeaders__		boolean allowAnyHeader = allowedHeaders.contains("*")__		List<String> result = new ArrayList<String>()__		for (String requestHeader : requestHeaders) {_			requestHeader = requestHeader.trim()__			for (String allowedHeader : allowedHeaders) {_				if (allowAnyHeader || requestHeader.equalsIgnoreCase(allowedHeader)) {_					result.add(requestHeader)__					break__				}_			}_		}_		return result.isEmpty() ? null : result__	};check,the,request,headers,or,the,headers,listed,in,the,access,control,request,headers,of,a,pre,flight,request,against,the,configured,allowed,headers,param,request,headers,the,headers,to,check,return,the,list,of,allowed,headers,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,a,request,header,is,not,allowed;public,list,string,check,headers,list,string,request,headers,if,request,headers,null,return,null,if,request,headers,is,empty,return,collections,empty,list,list,string,allowed,headers,this,allowed,headers,null,new,array,list,string,this,allowed,headers,boolean,allow,any,header,allowed,headers,contains,list,string,result,new,array,list,string,for,string,request,header,request,headers,request,header,request,header,trim,for,string,allowed,header,allowed,headers,if,allow,any,header,request,header,equals,ignore,case,allowed,header,result,add,request,header,break,return,result,is,empty,null,result
CorsConfiguration -> public List<String> checkHeaders(List<String> requestHeaders);1431730371;Check the request headers (or the headers listed in the_Access-Control-Request-Headers of a pre-flight request) against the_configured allowed headers._@param requestHeaders the headers to check._@return the list of allowed headers to list in the response of a pre-flight_request, or {@code null} if a requestHeader is not allowed.;public List<String> checkHeaders(List<String> requestHeaders) {_		if (requestHeaders == null) {_			return null__		}_		if (requestHeaders.isEmpty()) {_			return Collections.emptyList()__		}_		List<String> allowedHeaders = this.allowedHeaders == null ?_				new ArrayList<String>() : this.allowedHeaders__		boolean allowAnyHeader = allowedHeaders.contains("*")__		List<String> result = new ArrayList<String>()__		for (String requestHeader : requestHeaders) {_			requestHeader = requestHeader.trim()__			for (String allowedHeader : allowedHeaders) {_				if (allowAnyHeader || requestHeader.equalsIgnoreCase(allowedHeader)) {_					result.add(requestHeader)__					break__				}_			}_		}_		return result.isEmpty() ? null : result__	};check,the,request,headers,or,the,headers,listed,in,the,access,control,request,headers,of,a,pre,flight,request,against,the,configured,allowed,headers,param,request,headers,the,headers,to,check,return,the,list,of,allowed,headers,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,a,request,header,is,not,allowed;public,list,string,check,headers,list,string,request,headers,if,request,headers,null,return,null,if,request,headers,is,empty,return,collections,empty,list,list,string,allowed,headers,this,allowed,headers,null,new,array,list,string,this,allowed,headers,boolean,allow,any,header,allowed,headers,contains,list,string,result,new,array,list,string,for,string,request,header,request,headers,request,header,request,header,trim,for,string,allowed,header,allowed,headers,if,allow,any,header,request,header,equals,ignore,case,allowed,header,result,add,request,header,break,return,result,is,empty,null,result
CorsConfiguration -> public List<String> checkHeaders(List<String> requestHeaders);1432857824;Check the request headers (or the headers listed in the_Access-Control-Request-Headers of a pre-flight request) against the_configured allowed headers._@param requestHeaders the headers to check._@return the list of allowed headers to list in the response of a pre-flight_request, or {@code null} if a requestHeader is not allowed.;public List<String> checkHeaders(List<String> requestHeaders) {_		if (requestHeaders == null) {_			return null__		}_		if (requestHeaders.isEmpty()) {_			return Collections.emptyList()__		}_		List<String> allowedHeaders = this.allowedHeaders == null ?_				new ArrayList<String>() : this.allowedHeaders__		boolean allowAnyHeader = allowedHeaders.contains("*")__		List<String> result = new ArrayList<String>()__		for (String requestHeader : requestHeaders) {_			requestHeader = requestHeader.trim()__			for (String allowedHeader : allowedHeaders) {_				if (allowAnyHeader || requestHeader.equalsIgnoreCase(allowedHeader)) {_					result.add(requestHeader)__					break__				}_			}_		}_		return result.isEmpty() ? null : result__	};check,the,request,headers,or,the,headers,listed,in,the,access,control,request,headers,of,a,pre,flight,request,against,the,configured,allowed,headers,param,request,headers,the,headers,to,check,return,the,list,of,allowed,headers,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,a,request,header,is,not,allowed;public,list,string,check,headers,list,string,request,headers,if,request,headers,null,return,null,if,request,headers,is,empty,return,collections,empty,list,list,string,allowed,headers,this,allowed,headers,null,new,array,list,string,this,allowed,headers,boolean,allow,any,header,allowed,headers,contains,list,string,result,new,array,list,string,for,string,request,header,request,headers,request,header,request,header,trim,for,string,allowed,header,allowed,headers,if,allow,any,header,request,header,equals,ignore,case,allowed,header,result,add,request,header,break,return,result,is,empty,null,result
CorsConfiguration -> public List<String> checkHeaders(List<String> requestHeaders);1433088837;Check the request headers (or the headers listed in the_Access-Control-Request-Headers of a pre-flight request) against the_configured allowed headers._@param requestHeaders the headers to check._@return the list of allowed headers to list in the response of a pre-flight_request, or {@code null} if a requestHeader is not allowed.;public List<String> checkHeaders(List<String> requestHeaders) {_		if (requestHeaders == null) {_			return null__		}_		if (requestHeaders.isEmpty()) {_			return Collections.emptyList()__		}_		List<String> allowedHeaders = this.allowedHeaders == null ?_				new ArrayList<String>() : this.allowedHeaders__		boolean allowAnyHeader = allowedHeaders.contains("*")__		List<String> result = new ArrayList<String>()__		for (String requestHeader : requestHeaders) {_			requestHeader = requestHeader.trim()__			for (String allowedHeader : allowedHeaders) {_				if (allowAnyHeader || requestHeader.equalsIgnoreCase(allowedHeader)) {_					result.add(requestHeader)__					break__				}_			}_		}_		return result.isEmpty() ? null : result__	};check,the,request,headers,or,the,headers,listed,in,the,access,control,request,headers,of,a,pre,flight,request,against,the,configured,allowed,headers,param,request,headers,the,headers,to,check,return,the,list,of,allowed,headers,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,a,request,header,is,not,allowed;public,list,string,check,headers,list,string,request,headers,if,request,headers,null,return,null,if,request,headers,is,empty,return,collections,empty,list,list,string,allowed,headers,this,allowed,headers,null,new,array,list,string,this,allowed,headers,boolean,allow,any,header,allowed,headers,contains,list,string,result,new,array,list,string,for,string,request,header,request,headers,request,header,request,header,trim,for,string,allowed,header,allowed,headers,if,allow,any,header,request,header,equals,ignore,case,allowed,header,result,add,request,header,break,return,result,is,empty,null,result
CorsConfiguration -> public List<String> checkHeaders(List<String> requestHeaders);1434809538;Check the supplied request headers (or the headers listed in the_{@code Access-Control-Request-Headers} of a pre-flight request) against_the configured allowed headers._@param requestHeaders the request headers to check_@return the list of allowed headers to list in the response of a pre-flight_request, or {@code null} if none of the supplied request headers is allowed;public List<String> checkHeaders(List<String> requestHeaders) {_		if (requestHeaders == null) {_			return null__		}_		if (requestHeaders.isEmpty()) {_			return Collections.emptyList()__		}_		if (ObjectUtils.isEmpty(this.allowedHeaders)) {_			return null__		}__		boolean allowAnyHeader = this.allowedHeaders.contains(ALL)__		List<String> result = new ArrayList<String>()__		for (String requestHeader : requestHeaders) {_			if (StringUtils.hasText(requestHeader)) {_				requestHeader = requestHeader.trim()__				for (String allowedHeader : this.allowedHeaders) {_					if (allowAnyHeader || requestHeader.equalsIgnoreCase(allowedHeader)) {_						result.add(requestHeader)__						break__					}_				}_			}_		}_		return (result.isEmpty() ? null : result)__	};check,the,supplied,request,headers,or,the,headers,listed,in,the,code,access,control,request,headers,of,a,pre,flight,request,against,the,configured,allowed,headers,param,request,headers,the,request,headers,to,check,return,the,list,of,allowed,headers,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,none,of,the,supplied,request,headers,is,allowed;public,list,string,check,headers,list,string,request,headers,if,request,headers,null,return,null,if,request,headers,is,empty,return,collections,empty,list,if,object,utils,is,empty,this,allowed,headers,return,null,boolean,allow,any,header,this,allowed,headers,contains,all,list,string,result,new,array,list,string,for,string,request,header,request,headers,if,string,utils,has,text,request,header,request,header,request,header,trim,for,string,allowed,header,this,allowed,headers,if,allow,any,header,request,header,equals,ignore,case,allowed,header,result,add,request,header,break,return,result,is,empty,null,result
CorsConfiguration -> public List<String> checkHeaders(List<String> requestHeaders);1436539370;Check the supplied request headers (or the headers listed in the_{@code Access-Control-Request-Headers} of a pre-flight request) against_the configured allowed headers._@param requestHeaders the request headers to check_@return the list of allowed headers to list in the response of a pre-flight_request, or {@code null} if none of the supplied request headers is allowed;public List<String> checkHeaders(List<String> requestHeaders) {_		if (requestHeaders == null) {_			return null__		}_		if (requestHeaders.isEmpty()) {_			return Collections.emptyList()__		}_		if (ObjectUtils.isEmpty(this.allowedHeaders)) {_			return null__		}__		boolean allowAnyHeader = this.allowedHeaders.contains(ALL)__		List<String> result = new ArrayList<String>()__		for (String requestHeader : requestHeaders) {_			if (StringUtils.hasText(requestHeader)) {_				requestHeader = requestHeader.trim()__				for (String allowedHeader : this.allowedHeaders) {_					if (allowAnyHeader || requestHeader.equalsIgnoreCase(allowedHeader)) {_						result.add(requestHeader)__						break__					}_				}_			}_		}_		return (result.isEmpty() ? null : result)__	};check,the,supplied,request,headers,or,the,headers,listed,in,the,code,access,control,request,headers,of,a,pre,flight,request,against,the,configured,allowed,headers,param,request,headers,the,request,headers,to,check,return,the,list,of,allowed,headers,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,none,of,the,supplied,request,headers,is,allowed;public,list,string,check,headers,list,string,request,headers,if,request,headers,null,return,null,if,request,headers,is,empty,return,collections,empty,list,if,object,utils,is,empty,this,allowed,headers,return,null,boolean,allow,any,header,this,allowed,headers,contains,all,list,string,result,new,array,list,string,for,string,request,header,request,headers,if,string,utils,has,text,request,header,request,header,request,header,trim,for,string,allowed,header,this,allowed,headers,if,allow,any,header,request,header,equals,ignore,case,allowed,header,result,add,request,header,break,return,result,is,empty,null,result
CorsConfiguration -> public List<String> checkHeaders(List<String> requestHeaders);1438251419;Check the supplied request headers (or the headers listed in the_{@code Access-Control-Request-Headers} of a pre-flight request) against_the configured allowed headers._@param requestHeaders the request headers to check_@return the list of allowed headers to list in the response of a pre-flight_request, or {@code null} if none of the supplied request headers is allowed;public List<String> checkHeaders(List<String> requestHeaders) {_		if (requestHeaders == null) {_			return null__		}_		if (requestHeaders.isEmpty()) {_			return Collections.emptyList()__		}_		if (ObjectUtils.isEmpty(this.allowedHeaders)) {_			return null__		}__		boolean allowAnyHeader = this.allowedHeaders.contains(ALL)__		List<String> result = new ArrayList<String>()__		for (String requestHeader : requestHeaders) {_			if (StringUtils.hasText(requestHeader)) {_				requestHeader = requestHeader.trim()__				for (String allowedHeader : this.allowedHeaders) {_					if (allowAnyHeader || requestHeader.equalsIgnoreCase(allowedHeader)) {_						result.add(requestHeader)__						break__					}_				}_			}_		}_		return (result.isEmpty() ? null : result)__	};check,the,supplied,request,headers,or,the,headers,listed,in,the,code,access,control,request,headers,of,a,pre,flight,request,against,the,configured,allowed,headers,param,request,headers,the,request,headers,to,check,return,the,list,of,allowed,headers,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,none,of,the,supplied,request,headers,is,allowed;public,list,string,check,headers,list,string,request,headers,if,request,headers,null,return,null,if,request,headers,is,empty,return,collections,empty,list,if,object,utils,is,empty,this,allowed,headers,return,null,boolean,allow,any,header,this,allowed,headers,contains,all,list,string,result,new,array,list,string,for,string,request,header,request,headers,if,string,utils,has,text,request,header,request,header,request,header,trim,for,string,allowed,header,this,allowed,headers,if,allow,any,header,request,header,equals,ignore,case,allowed,header,result,add,request,header,break,return,result,is,empty,null,result
CorsConfiguration -> public List<String> checkHeaders(List<String> requestHeaders);1447321232;Check the supplied request headers (or the headers listed in the_{@code Access-Control-Request-Headers} of a pre-flight request) against_the configured allowed headers._@param requestHeaders the request headers to check_@return the list of allowed headers to list in the response of a pre-flight_request, or {@code null} if none of the supplied request headers is allowed;public List<String> checkHeaders(List<String> requestHeaders) {_		if (requestHeaders == null) {_			return null__		}_		if (requestHeaders.isEmpty()) {_			return Collections.emptyList()__		}_		if (ObjectUtils.isEmpty(this.allowedHeaders)) {_			return null__		}__		boolean allowAnyHeader = this.allowedHeaders.contains(ALL)__		List<String> result = new ArrayList<String>()__		for (String requestHeader : requestHeaders) {_			if (StringUtils.hasText(requestHeader)) {_				requestHeader = requestHeader.trim()__				for (String allowedHeader : this.allowedHeaders) {_					if (allowAnyHeader || requestHeader.equalsIgnoreCase(allowedHeader)) {_						result.add(requestHeader)__						break__					}_				}_			}_		}_		return (result.isEmpty() ? null : result)__	};check,the,supplied,request,headers,or,the,headers,listed,in,the,code,access,control,request,headers,of,a,pre,flight,request,against,the,configured,allowed,headers,param,request,headers,the,request,headers,to,check,return,the,list,of,allowed,headers,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,none,of,the,supplied,request,headers,is,allowed;public,list,string,check,headers,list,string,request,headers,if,request,headers,null,return,null,if,request,headers,is,empty,return,collections,empty,list,if,object,utils,is,empty,this,allowed,headers,return,null,boolean,allow,any,header,this,allowed,headers,contains,all,list,string,result,new,array,list,string,for,string,request,header,request,headers,if,string,utils,has,text,request,header,request,header,request,header,trim,for,string,allowed,header,this,allowed,headers,if,allow,any,header,request,header,equals,ignore,case,allowed,header,result,add,request,header,break,return,result,is,empty,null,result
CorsConfiguration -> public List<String> checkHeaders(List<String> requestHeaders);1449660404;Check the supplied request headers (or the headers listed in the_{@code Access-Control-Request-Headers} of a pre-flight request) against_the configured allowed headers._@param requestHeaders the request headers to check_@return the list of allowed headers to list in the response of a pre-flight_request, or {@code null} if none of the supplied request headers is allowed;public List<String> checkHeaders(List<String> requestHeaders) {_		if (requestHeaders == null) {_			return null__		}_		if (requestHeaders.isEmpty()) {_			return Collections.emptyList()__		}_		if (ObjectUtils.isEmpty(this.allowedHeaders)) {_			return null__		}__		boolean allowAnyHeader = this.allowedHeaders.contains(ALL)__		List<String> result = new ArrayList<String>()__		for (String requestHeader : requestHeaders) {_			if (StringUtils.hasText(requestHeader)) {_				requestHeader = requestHeader.trim()__				for (String allowedHeader : this.allowedHeaders) {_					if (allowAnyHeader || requestHeader.equalsIgnoreCase(allowedHeader)) {_						result.add(requestHeader)__						break__					}_				}_			}_		}_		return (result.isEmpty() ? null : result)__	};check,the,supplied,request,headers,or,the,headers,listed,in,the,code,access,control,request,headers,of,a,pre,flight,request,against,the,configured,allowed,headers,param,request,headers,the,request,headers,to,check,return,the,list,of,allowed,headers,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,none,of,the,supplied,request,headers,is,allowed;public,list,string,check,headers,list,string,request,headers,if,request,headers,null,return,null,if,request,headers,is,empty,return,collections,empty,list,if,object,utils,is,empty,this,allowed,headers,return,null,boolean,allow,any,header,this,allowed,headers,contains,all,list,string,result,new,array,list,string,for,string,request,header,request,headers,if,string,utils,has,text,request,header,request,header,request,header,trim,for,string,allowed,header,this,allowed,headers,if,allow,any,header,request,header,equals,ignore,case,allowed,header,result,add,request,header,break,return,result,is,empty,null,result
CorsConfiguration -> public List<String> checkHeaders(List<String> requestHeaders);1453684721;Check the supplied request headers (or the headers listed in the_{@code Access-Control-Request-Headers} of a pre-flight request) against_the configured allowed headers._@param requestHeaders the request headers to check_@return the list of allowed headers to list in the response of a pre-flight_request, or {@code null} if none of the supplied request headers is allowed;public List<String> checkHeaders(List<String> requestHeaders) {_		if (requestHeaders == null) {_			return null__		}_		if (requestHeaders.isEmpty()) {_			return Collections.emptyList()__		}_		if (ObjectUtils.isEmpty(this.allowedHeaders)) {_			return null__		}__		boolean allowAnyHeader = this.allowedHeaders.contains(ALL)__		List<String> result = new ArrayList<String>()__		for (String requestHeader : requestHeaders) {_			if (StringUtils.hasText(requestHeader)) {_				requestHeader = requestHeader.trim()__				for (String allowedHeader : this.allowedHeaders) {_					if (allowAnyHeader || requestHeader.equalsIgnoreCase(allowedHeader)) {_						result.add(requestHeader)__						break__					}_				}_			}_		}_		return (result.isEmpty() ? null : result)__	};check,the,supplied,request,headers,or,the,headers,listed,in,the,code,access,control,request,headers,of,a,pre,flight,request,against,the,configured,allowed,headers,param,request,headers,the,request,headers,to,check,return,the,list,of,allowed,headers,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,none,of,the,supplied,request,headers,is,allowed;public,list,string,check,headers,list,string,request,headers,if,request,headers,null,return,null,if,request,headers,is,empty,return,collections,empty,list,if,object,utils,is,empty,this,allowed,headers,return,null,boolean,allow,any,header,this,allowed,headers,contains,all,list,string,result,new,array,list,string,for,string,request,header,request,headers,if,string,utils,has,text,request,header,request,header,request,header,trim,for,string,allowed,header,this,allowed,headers,if,allow,any,header,request,header,equals,ignore,case,allowed,header,result,add,request,header,break,return,result,is,empty,null,result
CorsConfiguration -> public List<String> checkHeaders(List<String> requestHeaders);1467730834;Check the supplied request headers (or the headers listed in the_{@code Access-Control-Request-Headers} of a pre-flight request) against_the configured allowed headers._@param requestHeaders the request headers to check_@return the list of allowed headers to list in the response of a pre-flight_request, or {@code null} if none of the supplied request headers is allowed;public List<String> checkHeaders(List<String> requestHeaders) {_		if (requestHeaders == null) {_			return null__		}_		if (requestHeaders.isEmpty()) {_			return Collections.emptyList()__		}_		if (ObjectUtils.isEmpty(this.allowedHeaders)) {_			return null__		}__		boolean allowAnyHeader = this.allowedHeaders.contains(ALL)__		List<String> result = new ArrayList<>()__		for (String requestHeader : requestHeaders) {_			if (StringUtils.hasText(requestHeader)) {_				requestHeader = requestHeader.trim()__				for (String allowedHeader : this.allowedHeaders) {_					if (allowAnyHeader || requestHeader.equalsIgnoreCase(allowedHeader)) {_						result.add(requestHeader)__						break__					}_				}_			}_		}_		return (result.isEmpty() ? null : result)__	};check,the,supplied,request,headers,or,the,headers,listed,in,the,code,access,control,request,headers,of,a,pre,flight,request,against,the,configured,allowed,headers,param,request,headers,the,request,headers,to,check,return,the,list,of,allowed,headers,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,none,of,the,supplied,request,headers,is,allowed;public,list,string,check,headers,list,string,request,headers,if,request,headers,null,return,null,if,request,headers,is,empty,return,collections,empty,list,if,object,utils,is,empty,this,allowed,headers,return,null,boolean,allow,any,header,this,allowed,headers,contains,all,list,string,result,new,array,list,for,string,request,header,request,headers,if,string,utils,has,text,request,header,request,header,request,header,trim,for,string,allowed,header,this,allowed,headers,if,allow,any,header,request,header,equals,ignore,case,allowed,header,result,add,request,header,break,return,result,is,empty,null,result
CorsConfiguration -> public List<String> checkHeaders(List<String> requestHeaders);1472031618;Check the supplied request headers (or the headers listed in the_{@code Access-Control-Request-Headers} of a pre-flight request) against_the configured allowed headers._@param requestHeaders the request headers to check_@return the list of allowed headers to list in the response of a pre-flight_request, or {@code null} if none of the supplied request headers is allowed;public List<String> checkHeaders(List<String> requestHeaders) {_		if (requestHeaders == null) {_			return null__		}_		if (requestHeaders.isEmpty()) {_			return Collections.emptyList()__		}_		if (ObjectUtils.isEmpty(this.allowedHeaders)) {_			return null__		}__		boolean allowAnyHeader = this.allowedHeaders.contains(ALL)__		List<String> result = new ArrayList<>(requestHeaders.size())__		for (String requestHeader : requestHeaders) {_			if (StringUtils.hasText(requestHeader)) {_				requestHeader = requestHeader.trim()__				if (allowAnyHeader) {_					result.add(requestHeader)__				}_				else {_					for (String allowedHeader : this.allowedHeaders) {_						if (requestHeader.equalsIgnoreCase(allowedHeader)) {_							result.add(requestHeader)__							break__						}_					}_				}_			}_		}_		return (result.isEmpty() ? null : result)__	};check,the,supplied,request,headers,or,the,headers,listed,in,the,code,access,control,request,headers,of,a,pre,flight,request,against,the,configured,allowed,headers,param,request,headers,the,request,headers,to,check,return,the,list,of,allowed,headers,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,none,of,the,supplied,request,headers,is,allowed;public,list,string,check,headers,list,string,request,headers,if,request,headers,null,return,null,if,request,headers,is,empty,return,collections,empty,list,if,object,utils,is,empty,this,allowed,headers,return,null,boolean,allow,any,header,this,allowed,headers,contains,all,list,string,result,new,array,list,request,headers,size,for,string,request,header,request,headers,if,string,utils,has,text,request,header,request,header,request,header,trim,if,allow,any,header,result,add,request,header,else,for,string,allowed,header,this,allowed,headers,if,request,header,equals,ignore,case,allowed,header,result,add,request,header,break,return,result,is,empty,null,result
CorsConfiguration -> public List<String> checkHeaders(List<String> requestHeaders);1476175114;Check the supplied request headers (or the headers listed in the_{@code Access-Control-Request-Headers} of a pre-flight request) against_the configured allowed headers._@param requestHeaders the request headers to check_@return the list of allowed headers to list in the response of a pre-flight_request, or {@code null} if none of the supplied request headers is allowed;public List<String> checkHeaders(List<String> requestHeaders) {_		if (requestHeaders == null) {_			return null__		}_		if (requestHeaders.isEmpty()) {_			return Collections.emptyList()__		}_		if (ObjectUtils.isEmpty(this.allowedHeaders)) {_			return null__		}__		boolean allowAnyHeader = this.allowedHeaders.contains(ALL)__		List<String> result = new ArrayList<>(requestHeaders.size())__		for (String requestHeader : requestHeaders) {_			if (StringUtils.hasText(requestHeader)) {_				requestHeader = requestHeader.trim()__				if (allowAnyHeader) {_					result.add(requestHeader)__				}_				else {_					for (String allowedHeader : this.allowedHeaders) {_						if (requestHeader.equalsIgnoreCase(allowedHeader)) {_							result.add(requestHeader)__							break__						}_					}_				}_			}_		}_		return (result.isEmpty() ? null : result)__	};check,the,supplied,request,headers,or,the,headers,listed,in,the,code,access,control,request,headers,of,a,pre,flight,request,against,the,configured,allowed,headers,param,request,headers,the,request,headers,to,check,return,the,list,of,allowed,headers,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,none,of,the,supplied,request,headers,is,allowed;public,list,string,check,headers,list,string,request,headers,if,request,headers,null,return,null,if,request,headers,is,empty,return,collections,empty,list,if,object,utils,is,empty,this,allowed,headers,return,null,boolean,allow,any,header,this,allowed,headers,contains,all,list,string,result,new,array,list,request,headers,size,for,string,request,header,request,headers,if,string,utils,has,text,request,header,request,header,request,header,trim,if,allow,any,header,result,add,request,header,else,for,string,allowed,header,this,allowed,headers,if,request,header,equals,ignore,case,allowed,header,result,add,request,header,break,return,result,is,empty,null,result
CorsConfiguration -> public List<String> checkHeaders(List<String> requestHeaders);1476909116;Check the supplied request headers (or the headers listed in the_{@code Access-Control-Request-Headers} of a pre-flight request) against_the configured allowed headers._@param requestHeaders the request headers to check_@return the list of allowed headers to list in the response of a pre-flight_request, or {@code null} if none of the supplied request headers is allowed;public List<String> checkHeaders(List<String> requestHeaders) {_		if (requestHeaders == null) {_			return null__		}_		if (requestHeaders.isEmpty()) {_			return Collections.emptyList()__		}_		if (ObjectUtils.isEmpty(this.allowedHeaders)) {_			return null__		}__		boolean allowAnyHeader = this.allowedHeaders.contains(ALL)__		List<String> result = new ArrayList<>(requestHeaders.size())__		for (String requestHeader : requestHeaders) {_			if (StringUtils.hasText(requestHeader)) {_				requestHeader = requestHeader.trim()__				if (allowAnyHeader) {_					result.add(requestHeader)__				}_				else {_					for (String allowedHeader : this.allowedHeaders) {_						if (requestHeader.equalsIgnoreCase(allowedHeader)) {_							result.add(requestHeader)__							break__						}_					}_				}_			}_		}_		return (result.isEmpty() ? null : result)__	};check,the,supplied,request,headers,or,the,headers,listed,in,the,code,access,control,request,headers,of,a,pre,flight,request,against,the,configured,allowed,headers,param,request,headers,the,request,headers,to,check,return,the,list,of,allowed,headers,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,none,of,the,supplied,request,headers,is,allowed;public,list,string,check,headers,list,string,request,headers,if,request,headers,null,return,null,if,request,headers,is,empty,return,collections,empty,list,if,object,utils,is,empty,this,allowed,headers,return,null,boolean,allow,any,header,this,allowed,headers,contains,all,list,string,result,new,array,list,request,headers,size,for,string,request,header,request,headers,if,string,utils,has,text,request,header,request,header,request,header,trim,if,allow,any,header,result,add,request,header,else,for,string,allowed,header,this,allowed,headers,if,request,header,equals,ignore,case,allowed,header,result,add,request,header,break,return,result,is,empty,null,result
CorsConfiguration -> public List<String> checkHeaders(List<String> requestHeaders);1487713300;Check the supplied request headers (or the headers listed in the_{@code Access-Control-Request-Headers} of a pre-flight request) against_the configured allowed headers._@param requestHeaders the request headers to check_@return the list of allowed headers to list in the response of a pre-flight_request, or {@code null} if none of the supplied request headers is allowed;public List<String> checkHeaders(List<String> requestHeaders) {_		if (requestHeaders == null) {_			return null__		}_		if (requestHeaders.isEmpty()) {_			return Collections.emptyList()__		}_		if (ObjectUtils.isEmpty(this.allowedHeaders)) {_			return null__		}__		boolean allowAnyHeader = this.allowedHeaders.contains(ALL)__		List<String> result = new ArrayList<>(requestHeaders.size())__		for (String requestHeader : requestHeaders) {_			if (StringUtils.hasText(requestHeader)) {_				requestHeader = requestHeader.trim()__				if (allowAnyHeader) {_					result.add(requestHeader)__				}_				else {_					for (String allowedHeader : this.allowedHeaders) {_						if (requestHeader.equalsIgnoreCase(allowedHeader)) {_							result.add(requestHeader)__							break__						}_					}_				}_			}_		}_		return (result.isEmpty() ? null : result)__	};check,the,supplied,request,headers,or,the,headers,listed,in,the,code,access,control,request,headers,of,a,pre,flight,request,against,the,configured,allowed,headers,param,request,headers,the,request,headers,to,check,return,the,list,of,allowed,headers,to,list,in,the,response,of,a,pre,flight,request,or,code,null,if,none,of,the,supplied,request,headers,is,allowed;public,list,string,check,headers,list,string,request,headers,if,request,headers,null,return,null,if,request,headers,is,empty,return,collections,empty,list,if,object,utils,is,empty,this,allowed,headers,return,null,boolean,allow,any,header,this,allowed,headers,contains,all,list,string,result,new,array,list,request,headers,size,for,string,request,header,request,headers,if,string,utils,has,text,request,header,request,header,request,header,trim,if,allow,any,header,result,add,request,header,else,for,string,allowed,header,this,allowed,headers,if,request,header,equals,ignore,case,allowed,header,result,add,request,header,break,return,result,is,empty,null,result
CorsConfiguration -> public void addAllowedMethod(String allowedMethod);1427983931;@see #setAllowedMethods(java.util.List);public void addAllowedMethod(String allowedMethod) {_		if (this.allowedMethods == null) {_			this.allowedMethods = new ArrayList<String>()__		}_		this.allowedMethods.add(allowedMethod)__	};see,set,allowed,methods,java,util,list;public,void,add,allowed,method,string,allowed,method,if,this,allowed,methods,null,this,allowed,methods,new,array,list,string,this,allowed,methods,add,allowed,method
CorsConfiguration -> public void addAllowedMethod(String allowedMethod);1428073011;@see #setAllowedMethods(java.util.List);public void addAllowedMethod(String allowedMethod) {_		if (this.allowedMethods == null) {_			this.allowedMethods = new ArrayList<String>()__		}_		this.allowedMethods.add(allowedMethod)__	};see,set,allowed,methods,java,util,list;public,void,add,allowed,method,string,allowed,method,if,this,allowed,methods,null,this,allowed,methods,new,array,list,string,this,allowed,methods,add,allowed,method
CorsConfiguration -> public void setAllowCredentials(@Nullable Boolean allowCredentials);1500448076;Whether user credentials are supported._<p>By default this is not set (i.e. user credentials are not supported).;public void setAllowCredentials(@Nullable Boolean allowCredentials) {_		this.allowCredentials = allowCredentials__	};whether,user,credentials,are,supported,p,by,default,this,is,not,set,i,e,user,credentials,are,not,supported;public,void,set,allow,credentials,nullable,boolean,allow,credentials,this,allow,credentials,allow,credentials
CorsConfiguration -> public void setAllowCredentials(@Nullable Boolean allowCredentials);1511387204;Whether user credentials are supported._<p>By default this is not set (i.e. user credentials are not supported).;public void setAllowCredentials(@Nullable Boolean allowCredentials) {_		this.allowCredentials = allowCredentials__	};whether,user,credentials,are,supported,p,by,default,this,is,not,set,i,e,user,credentials,are,not,supported;public,void,set,allow,credentials,nullable,boolean,allow,credentials,this,allow,credentials,allow,credentials
CorsConfiguration -> public void setAllowCredentials(@Nullable Boolean allowCredentials);1511925367;Whether user credentials are supported._<p>By default this is not set (i.e. user credentials are not supported).;public void setAllowCredentials(@Nullable Boolean allowCredentials) {_		this.allowCredentials = allowCredentials__	};whether,user,credentials,are,supported,p,by,default,this,is,not,set,i,e,user,credentials,are,not,supported;public,void,set,allow,credentials,nullable,boolean,allow,credentials,this,allow,credentials,allow,credentials
CorsConfiguration -> public void setAllowCredentials(@Nullable Boolean allowCredentials);1513805881;Whether user credentials are supported._<p>By default this is not set (i.e. user credentials are not supported).;public void setAllowCredentials(@Nullable Boolean allowCredentials) {_		this.allowCredentials = allowCredentials__	};whether,user,credentials,are,supported,p,by,default,this,is,not,set,i,e,user,credentials,are,not,supported;public,void,set,allow,credentials,nullable,boolean,allow,credentials,this,allow,credentials,allow,credentials
CorsConfiguration -> public void setAllowCredentials(@Nullable Boolean allowCredentials);1522354261;Whether user credentials are supported._<p>By default this is not set (i.e. user credentials are not supported).;public void setAllowCredentials(@Nullable Boolean allowCredentials) {_		this.allowCredentials = allowCredentials__	};whether,user,credentials,are,supported,p,by,default,this,is,not,set,i,e,user,credentials,are,not,supported;public,void,set,allow,credentials,nullable,boolean,allow,credentials,this,allow,credentials,allow,credentials
CorsConfiguration -> @Nullable 	public List<String> getAllowedOrigins();1495868221;Return the configured origins to allow, or {@code null} if none._@see #addAllowedOrigin(String)_@see #setAllowedOrigins(List);@Nullable_	public List<String> getAllowedOrigins() {_		return this.allowedOrigins__	};return,the,configured,origins,to,allow,or,code,null,if,none,see,add,allowed,origin,string,see,set,allowed,origins,list;nullable,public,list,string,get,allowed,origins,return,this,allowed,origins
CorsConfiguration -> @Nullable 	public List<String> getAllowedOrigins();1496837955;Return the configured origins to allow, or {@code null} if none._@see #addAllowedOrigin(String)_@see #setAllowedOrigins(List);@Nullable_	public List<String> getAllowedOrigins() {_		return this.allowedOrigins__	};return,the,configured,origins,to,allow,or,code,null,if,none,see,add,allowed,origin,string,see,set,allowed,origins,list;nullable,public,list,string,get,allowed,origins,return,this,allowed,origins
CorsConfiguration -> @Nullable 	public List<String> getAllowedOrigins();1498780456;Return the configured origins to allow, or {@code null} if none._@see #addAllowedOrigin(String)_@see #setAllowedOrigins(List);@Nullable_	public List<String> getAllowedOrigins() {_		return this.allowedOrigins__	};return,the,configured,origins,to,allow,or,code,null,if,none,see,add,allowed,origin,string,see,set,allowed,origins,list;nullable,public,list,string,get,allowed,origins,return,this,allowed,origins
CorsConfiguration -> @Nullable 	public List<String> getAllowedOrigins();1500448076;Return the configured origins to allow, or {@code null} if none._@see #addAllowedOrigin(String)_@see #setAllowedOrigins(List);@Nullable_	public List<String> getAllowedOrigins() {_		return this.allowedOrigins__	};return,the,configured,origins,to,allow,or,code,null,if,none,see,add,allowed,origin,string,see,set,allowed,origins,list;nullable,public,list,string,get,allowed,origins,return,this,allowed,origins
CorsConfiguration -> @Nullable 	public List<String> getAllowedOrigins();1511387204;Return the configured origins to allow, or {@code null} if none._@see #addAllowedOrigin(String)_@see #setAllowedOrigins(List);@Nullable_	public List<String> getAllowedOrigins() {_		return this.allowedOrigins__	};return,the,configured,origins,to,allow,or,code,null,if,none,see,add,allowed,origin,string,see,set,allowed,origins,list;nullable,public,list,string,get,allowed,origins,return,this,allowed,origins
CorsConfiguration -> @Nullable 	public List<String> getAllowedOrigins();1511925367;Return the configured origins to allow, or {@code null} if none._@see #addAllowedOrigin(String)_@see #setAllowedOrigins(List);@Nullable_	public List<String> getAllowedOrigins() {_		return this.allowedOrigins__	};return,the,configured,origins,to,allow,or,code,null,if,none,see,add,allowed,origin,string,see,set,allowed,origins,list;nullable,public,list,string,get,allowed,origins,return,this,allowed,origins
CorsConfiguration -> @Nullable 	public List<String> getAllowedOrigins();1513805881;Return the configured origins to allow, or {@code null} if none._@see #addAllowedOrigin(String)_@see #setAllowedOrigins(List);@Nullable_	public List<String> getAllowedOrigins() {_		return this.allowedOrigins__	};return,the,configured,origins,to,allow,or,code,null,if,none,see,add,allowed,origin,string,see,set,allowed,origins,list;nullable,public,list,string,get,allowed,origins,return,this,allowed,origins
CorsConfiguration -> @Nullable 	public List<String> getAllowedOrigins();1522354261;Return the configured origins to allow, or {@code null} if none._@see #addAllowedOrigin(String)_@see #setAllowedOrigins(List);@Nullable_	public List<String> getAllowedOrigins() {_		return this.allowedOrigins__	};return,the,configured,origins,to,allow,or,code,null,if,none,see,add,allowed,origin,string,see,set,allowed,origins,list;nullable,public,list,string,get,allowed,origins,return,this,allowed,origins
CorsConfiguration -> public void addExposedHeader(String exposedHeader);1427983931;@see #setExposedHeaders(java.util.List);public void addExposedHeader(String exposedHeader) {_		if (this.exposedHeaders == null) {_			this.exposedHeaders = new ArrayList<String>()__		}_		this.exposedHeaders.add(exposedHeader)__	};see,set,exposed,headers,java,util,list;public,void,add,exposed,header,string,exposed,header,if,this,exposed,headers,null,this,exposed,headers,new,array,list,string,this,exposed,headers,add,exposed,header
CorsConfiguration -> public void addExposedHeader(String exposedHeader);1428073011;@see #setExposedHeaders(java.util.List);public void addExposedHeader(String exposedHeader) {_		if (this.exposedHeaders == null) {_			this.exposedHeaders = new ArrayList<String>()__		}_		this.exposedHeaders.add(exposedHeader)__	};see,set,exposed,headers,java,util,list;public,void,add,exposed,header,string,exposed,header,if,this,exposed,headers,null,this,exposed,headers,new,array,list,string,this,exposed,headers,add,exposed,header
CorsConfiguration -> public void addExposedHeader(String exposedHeader);1430811101;Add a single response header to expose.;public void addExposedHeader(String exposedHeader) {_		if (this.exposedHeaders == null) {_			this.exposedHeaders = new ArrayList<String>()__		}_		this.exposedHeaders.add(exposedHeader)__	};add,a,single,response,header,to,expose;public,void,add,exposed,header,string,exposed,header,if,this,exposed,headers,null,this,exposed,headers,new,array,list,string,this,exposed,headers,add,exposed,header
CorsConfiguration -> public void addExposedHeader(String exposedHeader);1431730371;Add a single response header to expose.;public void addExposedHeader(String exposedHeader) {_		if ("*".equals(exposedHeader)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		if (this.exposedHeaders == null) {_			this.exposedHeaders = new ArrayList<String>()__		}_		this.exposedHeaders.add(exposedHeader)__	};add,a,single,response,header,to,expose;public,void,add,exposed,header,string,exposed,header,if,equals,exposed,header,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,if,this,exposed,headers,null,this,exposed,headers,new,array,list,string,this,exposed,headers,add,exposed,header
CorsConfiguration -> public void addExposedHeader(String exposedHeader);1432857824;Add a single response header to expose.;public void addExposedHeader(String exposedHeader) {_		if ("*".equals(exposedHeader)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		if (this.exposedHeaders == null) {_			this.exposedHeaders = new ArrayList<String>()__		}_		this.exposedHeaders.add(exposedHeader)__	};add,a,single,response,header,to,expose;public,void,add,exposed,header,string,exposed,header,if,equals,exposed,header,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,if,this,exposed,headers,null,this,exposed,headers,new,array,list,string,this,exposed,headers,add,exposed,header
CorsConfiguration -> public void addExposedHeader(String exposedHeader);1433088837;Add a single response header to expose.;public void addExposedHeader(String exposedHeader) {_		if ("*".equals(exposedHeader)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		if (this.exposedHeaders == null) {_			this.exposedHeaders = new ArrayList<String>()__		}_		this.exposedHeaders.add(exposedHeader)__	};add,a,single,response,header,to,expose;public,void,add,exposed,header,string,exposed,header,if,equals,exposed,header,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,if,this,exposed,headers,null,this,exposed,headers,new,array,list,string,this,exposed,headers,add,exposed,header
CorsConfiguration -> public void addExposedHeader(String exposedHeader);1434809538;Add a response header to expose._<p>Note that {@code "*"} is not a valid exposed header value.;public void addExposedHeader(String exposedHeader) {_		if (ALL.equals(exposedHeader)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		if (this.exposedHeaders == null) {_			this.exposedHeaders = new ArrayList<String>()__		}_		this.exposedHeaders.add(exposedHeader)__	};add,a,response,header,to,expose,p,note,that,code,is,not,a,valid,exposed,header,value;public,void,add,exposed,header,string,exposed,header,if,all,equals,exposed,header,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,if,this,exposed,headers,null,this,exposed,headers,new,array,list,string,this,exposed,headers,add,exposed,header
CorsConfiguration -> public void addExposedHeader(String exposedHeader);1436539370;Add a response header to expose._<p>Note that {@code "*"} is not a valid exposed header value.;public void addExposedHeader(String exposedHeader) {_		if (ALL.equals(exposedHeader)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		if (this.exposedHeaders == null) {_			this.exposedHeaders = new ArrayList<String>()__		}_		this.exposedHeaders.add(exposedHeader)__	};add,a,response,header,to,expose,p,note,that,code,is,not,a,valid,exposed,header,value;public,void,add,exposed,header,string,exposed,header,if,all,equals,exposed,header,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,if,this,exposed,headers,null,this,exposed,headers,new,array,list,string,this,exposed,headers,add,exposed,header
CorsConfiguration -> public void addExposedHeader(String exposedHeader);1438251419;Add a response header to expose._<p>Note that {@code "*"} is not a valid exposed header value.;public void addExposedHeader(String exposedHeader) {_		if (ALL.equals(exposedHeader)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		if (this.exposedHeaders == null) {_			this.exposedHeaders = new ArrayList<String>()__		}_		this.exposedHeaders.add(exposedHeader)__	};add,a,response,header,to,expose,p,note,that,code,is,not,a,valid,exposed,header,value;public,void,add,exposed,header,string,exposed,header,if,all,equals,exposed,header,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,if,this,exposed,headers,null,this,exposed,headers,new,array,list,string,this,exposed,headers,add,exposed,header
CorsConfiguration -> public void addExposedHeader(String exposedHeader);1447321232;Add a response header to expose._<p>Note that {@code "*"} is not a valid exposed header value.;public void addExposedHeader(String exposedHeader) {_		if (ALL.equals(exposedHeader)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		if (this.exposedHeaders == null) {_			this.exposedHeaders = new ArrayList<String>()__		}_		this.exposedHeaders.add(exposedHeader)__	};add,a,response,header,to,expose,p,note,that,code,is,not,a,valid,exposed,header,value;public,void,add,exposed,header,string,exposed,header,if,all,equals,exposed,header,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,if,this,exposed,headers,null,this,exposed,headers,new,array,list,string,this,exposed,headers,add,exposed,header
CorsConfiguration -> public void addExposedHeader(String exposedHeader);1449660404;Add a response header to expose._<p>Note that {@code "*"} is not a valid exposed header value.;public void addExposedHeader(String exposedHeader) {_		if (ALL.equals(exposedHeader)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		if (this.exposedHeaders == null) {_			this.exposedHeaders = new ArrayList<String>()__		}_		this.exposedHeaders.add(exposedHeader)__	};add,a,response,header,to,expose,p,note,that,code,is,not,a,valid,exposed,header,value;public,void,add,exposed,header,string,exposed,header,if,all,equals,exposed,header,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,if,this,exposed,headers,null,this,exposed,headers,new,array,list,string,this,exposed,headers,add,exposed,header
CorsConfiguration -> public void addExposedHeader(String exposedHeader);1453684721;Add a response header to expose._<p>Note that {@code "*"} is not a valid exposed header value.;public void addExposedHeader(String exposedHeader) {_		if (ALL.equals(exposedHeader)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		if (this.exposedHeaders == null) {_			this.exposedHeaders = new ArrayList<String>()__		}_		this.exposedHeaders.add(exposedHeader)__	};add,a,response,header,to,expose,p,note,that,code,is,not,a,valid,exposed,header,value;public,void,add,exposed,header,string,exposed,header,if,all,equals,exposed,header,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,if,this,exposed,headers,null,this,exposed,headers,new,array,list,string,this,exposed,headers,add,exposed,header
CorsConfiguration -> public void addExposedHeader(String exposedHeader);1467730834;Add a response header to expose._<p>Note that {@code "*"} is not a valid exposed header value.;public void addExposedHeader(String exposedHeader) {_		if (ALL.equals(exposedHeader)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		if (this.exposedHeaders == null) {_			this.exposedHeaders = new ArrayList<>()__		}_		this.exposedHeaders.add(exposedHeader)__	};add,a,response,header,to,expose,p,note,that,code,is,not,a,valid,exposed,header,value;public,void,add,exposed,header,string,exposed,header,if,all,equals,exposed,header,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,if,this,exposed,headers,null,this,exposed,headers,new,array,list,this,exposed,headers,add,exposed,header
CorsConfiguration -> public void addExposedHeader(String exposedHeader);1472031618;Add a response header to expose._<p>Note that {@code "*"} is not a valid exposed header value.;public void addExposedHeader(String exposedHeader) {_		if (ALL.equals(exposedHeader)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		if (this.exposedHeaders == null) {_			this.exposedHeaders = new ArrayList<>(4)__		}_		this.exposedHeaders.add(exposedHeader)__	};add,a,response,header,to,expose,p,note,that,code,is,not,a,valid,exposed,header,value;public,void,add,exposed,header,string,exposed,header,if,all,equals,exposed,header,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,if,this,exposed,headers,null,this,exposed,headers,new,array,list,4,this,exposed,headers,add,exposed,header
CorsConfiguration -> public void addExposedHeader(String exposedHeader);1476175114;Add a response header to expose._<p>Note that {@code "*"} is not a valid exposed header value.;public void addExposedHeader(String exposedHeader) {_		if (ALL.equals(exposedHeader)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		if (this.exposedHeaders == null) {_			this.exposedHeaders = new ArrayList<>(4)__		}_		this.exposedHeaders.add(exposedHeader)__	};add,a,response,header,to,expose,p,note,that,code,is,not,a,valid,exposed,header,value;public,void,add,exposed,header,string,exposed,header,if,all,equals,exposed,header,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,if,this,exposed,headers,null,this,exposed,headers,new,array,list,4,this,exposed,headers,add,exposed,header
CorsConfiguration -> public void addExposedHeader(String exposedHeader);1476909116;Add a response header to expose._<p>Note that {@code "*"} is not a valid exposed header value.;public void addExposedHeader(String exposedHeader) {_		if (ALL.equals(exposedHeader)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		if (this.exposedHeaders == null) {_			this.exposedHeaders = new ArrayList<>(4)__		}_		this.exposedHeaders.add(exposedHeader)__	};add,a,response,header,to,expose,p,note,that,code,is,not,a,valid,exposed,header,value;public,void,add,exposed,header,string,exposed,header,if,all,equals,exposed,header,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,if,this,exposed,headers,null,this,exposed,headers,new,array,list,4,this,exposed,headers,add,exposed,header
CorsConfiguration -> public void addExposedHeader(String exposedHeader);1487713300;Add a response header to expose._<p>Note that {@code "*"} is not a valid exposed header value.;public void addExposedHeader(String exposedHeader) {_		if (ALL.equals(exposedHeader)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		if (this.exposedHeaders == null) {_			this.exposedHeaders = new ArrayList<>(4)__		}_		this.exposedHeaders.add(exposedHeader)__	};add,a,response,header,to,expose,p,note,that,code,is,not,a,valid,exposed,header,value;public,void,add,exposed,header,string,exposed,header,if,all,equals,exposed,header,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,if,this,exposed,headers,null,this,exposed,headers,new,array,list,4,this,exposed,headers,add,exposed,header
CorsConfiguration -> public void addExposedHeader(String exposedHeader);1495868221;Add a response header to expose._<p>Note that {@code "*"} is not a valid exposed header value.;public void addExposedHeader(String exposedHeader) {_		if (ALL.equals(exposedHeader)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		if (this.exposedHeaders == null) {_			this.exposedHeaders = new ArrayList<>(4)__		}_		this.exposedHeaders.add(exposedHeader)__	};add,a,response,header,to,expose,p,note,that,code,is,not,a,valid,exposed,header,value;public,void,add,exposed,header,string,exposed,header,if,all,equals,exposed,header,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,if,this,exposed,headers,null,this,exposed,headers,new,array,list,4,this,exposed,headers,add,exposed,header
CorsConfiguration -> public void addExposedHeader(String exposedHeader);1496837955;Add a response header to expose._<p>Note that {@code "*"} is not a valid exposed header value.;public void addExposedHeader(String exposedHeader) {_		if (ALL.equals(exposedHeader)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		if (this.exposedHeaders == null) {_			this.exposedHeaders = new ArrayList<>(4)__		}_		this.exposedHeaders.add(exposedHeader)__	};add,a,response,header,to,expose,p,note,that,code,is,not,a,valid,exposed,header,value;public,void,add,exposed,header,string,exposed,header,if,all,equals,exposed,header,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,if,this,exposed,headers,null,this,exposed,headers,new,array,list,4,this,exposed,headers,add,exposed,header
CorsConfiguration -> public void addExposedHeader(String exposedHeader);1498780456;Add a response header to expose._<p>Note that {@code "*"} is not a valid exposed header value.;public void addExposedHeader(String exposedHeader) {_		if (ALL.equals(exposedHeader)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		if (this.exposedHeaders == null) {_			this.exposedHeaders = new ArrayList<>(4)__		}_		this.exposedHeaders.add(exposedHeader)__	};add,a,response,header,to,expose,p,note,that,code,is,not,a,valid,exposed,header,value;public,void,add,exposed,header,string,exposed,header,if,all,equals,exposed,header,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,if,this,exposed,headers,null,this,exposed,headers,new,array,list,4,this,exposed,headers,add,exposed,header
CorsConfiguration -> public void addExposedHeader(String exposedHeader);1500448076;Add a response header to expose._<p>Note that {@code "*"} is not a valid exposed header value.;public void addExposedHeader(String exposedHeader) {_		if (ALL.equals(exposedHeader)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		if (this.exposedHeaders == null) {_			this.exposedHeaders = new ArrayList<>(4)__		}_		this.exposedHeaders.add(exposedHeader)__	};add,a,response,header,to,expose,p,note,that,code,is,not,a,valid,exposed,header,value;public,void,add,exposed,header,string,exposed,header,if,all,equals,exposed,header,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,if,this,exposed,headers,null,this,exposed,headers,new,array,list,4,this,exposed,headers,add,exposed,header
CorsConfiguration -> public void addExposedHeader(String exposedHeader);1511387204;Add a response header to expose._<p>Note that {@code "*"} is not a valid exposed header value.;public void addExposedHeader(String exposedHeader) {_		if (ALL.equals(exposedHeader)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		if (this.exposedHeaders == null) {_			this.exposedHeaders = new ArrayList<>(4)__		}_		this.exposedHeaders.add(exposedHeader)__	};add,a,response,header,to,expose,p,note,that,code,is,not,a,valid,exposed,header,value;public,void,add,exposed,header,string,exposed,header,if,all,equals,exposed,header,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,if,this,exposed,headers,null,this,exposed,headers,new,array,list,4,this,exposed,headers,add,exposed,header
CorsConfiguration -> public void addExposedHeader(String exposedHeader);1511925367;Add a response header to expose._<p>Note that {@code "*"} is not a valid exposed header value.;public void addExposedHeader(String exposedHeader) {_		if (ALL.equals(exposedHeader)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		if (this.exposedHeaders == null) {_			this.exposedHeaders = new ArrayList<>(4)__		}_		this.exposedHeaders.add(exposedHeader)__	};add,a,response,header,to,expose,p,note,that,code,is,not,a,valid,exposed,header,value;public,void,add,exposed,header,string,exposed,header,if,all,equals,exposed,header,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,if,this,exposed,headers,null,this,exposed,headers,new,array,list,4,this,exposed,headers,add,exposed,header
CorsConfiguration -> public void addExposedHeader(String exposedHeader);1513805881;Add a response header to expose._<p>Note that {@code "*"} is not a valid exposed header value.;public void addExposedHeader(String exposedHeader) {_		if (ALL.equals(exposedHeader)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		if (this.exposedHeaders == null) {_			this.exposedHeaders = new ArrayList<>(4)__		}_		this.exposedHeaders.add(exposedHeader)__	};add,a,response,header,to,expose,p,note,that,code,is,not,a,valid,exposed,header,value;public,void,add,exposed,header,string,exposed,header,if,all,equals,exposed,header,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,if,this,exposed,headers,null,this,exposed,headers,new,array,list,4,this,exposed,headers,add,exposed,header
CorsConfiguration -> public void addExposedHeader(String exposedHeader);1522354261;Add a response header to expose._<p>Note that {@code "*"} is not a valid exposed header value.;public void addExposedHeader(String exposedHeader) {_		if (ALL.equals(exposedHeader)) {_			throw new IllegalArgumentException("'*' is not a valid exposed header value")__		}_		if (this.exposedHeaders == null) {_			this.exposedHeaders = new ArrayList<>(4)__		}_		this.exposedHeaders.add(exposedHeader)__	};add,a,response,header,to,expose,p,note,that,code,is,not,a,valid,exposed,header,value;public,void,add,exposed,header,string,exposed,header,if,all,equals,exposed,header,throw,new,illegal,argument,exception,is,not,a,valid,exposed,header,value,if,this,exposed,headers,null,this,exposed,headers,new,array,list,4,this,exposed,headers,add,exposed,header
CorsConfiguration -> public void setAllowedMethods(List<String> methods);1430811101;Configure HTTP methods to allow, e.g. "GET", "POST", "PUT". The special_value "*" allows all method. When not set only "GET is allowed._<p>By default this is not set.;public void setAllowedMethods(List<String> methods) {_		this.allowedMethods = methods__	};configure,http,methods,to,allow,e,g,get,post,put,the,special,value,allows,all,method,when,not,set,only,get,is,allowed,p,by,default,this,is,not,set;public,void,set,allowed,methods,list,string,methods,this,allowed,methods,methods
CorsConfiguration -> public void setAllowedMethods(List<String> methods);1431730371;Configure HTTP methods to allow, e.g. "GET", "POST", "PUT". The special_value "*" allows all method. When not set only "GET is allowed._<p>By default this is not set.;public void setAllowedMethods(List<String> methods) {_		this.allowedMethods = methods__	};configure,http,methods,to,allow,e,g,get,post,put,the,special,value,allows,all,method,when,not,set,only,get,is,allowed,p,by,default,this,is,not,set;public,void,set,allowed,methods,list,string,methods,this,allowed,methods,methods
CorsConfiguration -> public void setAllowedMethods(List<String> methods);1432857824;Configure HTTP methods to allow, e.g. "GET", "POST", "PUT". The special_value "*" allows all method. When not set only "GET is allowed._<p>By default this is not set.;public void setAllowedMethods(List<String> methods) {_		this.allowedMethods = methods__	};configure,http,methods,to,allow,e,g,get,post,put,the,special,value,allows,all,method,when,not,set,only,get,is,allowed,p,by,default,this,is,not,set;public,void,set,allowed,methods,list,string,methods,this,allowed,methods,methods
CorsConfiguration -> public void setAllowedMethods(List<String> methods);1433088837;Configure HTTP methods to allow, e.g. "GET", "POST", "PUT". The special_value "*" allows all method. When not set only "GET is allowed._<p>By default this is not set.;public void setAllowedMethods(List<String> methods) {_		this.allowedMethods = methods__	};configure,http,methods,to,allow,e,g,get,post,put,the,special,value,allows,all,method,when,not,set,only,get,is,allowed,p,by,default,this,is,not,set;public,void,set,allowed,methods,list,string,methods,this,allowed,methods,methods
