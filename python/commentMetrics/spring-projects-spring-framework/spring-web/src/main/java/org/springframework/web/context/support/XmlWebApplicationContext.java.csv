# id;timestamp;commentText;codeText;commentWords;codeWords
XmlWebApplicationContext -> @Override 	protected void loadBeanDefinitions(DefaultListableBeanFactory beanFactory) throws BeansException, IOException;1328020251;Loads the bean definitions via an XmlBeanDefinitionReader._@see org.springframework.beans.factory.xml.XmlBeanDefinitionReader_@see #initBeanDefinitionReader_@see #loadBeanDefinitions;@Override_	protected void loadBeanDefinitions(DefaultListableBeanFactory beanFactory) throws BeansException, IOException {_		_		XmlBeanDefinitionReader beanDefinitionReader = new XmlBeanDefinitionReader(beanFactory)___		_		_		beanDefinitionReader.setEnvironment(this.getEnvironment())__		beanDefinitionReader.setResourceLoader(this)__		beanDefinitionReader.setEntityResolver(new ResourceEntityResolver(this))___		_		_		initBeanDefinitionReader(beanDefinitionReader)__		loadBeanDefinitions(beanDefinitionReader)__	};loads,the,bean,definitions,via,an,xml,bean,definition,reader,see,org,springframework,beans,factory,xml,xml,bean,definition,reader,see,init,bean,definition,reader,see,load,bean,definitions;override,protected,void,load,bean,definitions,default,listable,bean,factory,bean,factory,throws,beans,exception,ioexception,xml,bean,definition,reader,bean,definition,reader,new,xml,bean,definition,reader,bean,factory,bean,definition,reader,set,environment,this,get,environment,bean,definition,reader,set,resource,loader,this,bean,definition,reader,set,entity,resolver,new,resource,entity,resolver,this,init,bean,definition,reader,bean,definition,reader,load,bean,definitions,bean,definition,reader
XmlWebApplicationContext -> @Override 	protected void loadBeanDefinitions(DefaultListableBeanFactory beanFactory) throws BeansException, IOException;1390432589;Loads the bean definitions via an XmlBeanDefinitionReader._@see org.springframework.beans.factory.xml.XmlBeanDefinitionReader_@see #initBeanDefinitionReader_@see #loadBeanDefinitions;@Override_	protected void loadBeanDefinitions(DefaultListableBeanFactory beanFactory) throws BeansException, IOException {_		_		XmlBeanDefinitionReader beanDefinitionReader = new XmlBeanDefinitionReader(beanFactory)___		_		_		beanDefinitionReader.setEnvironment(getEnvironment())__		beanDefinitionReader.setResourceLoader(this)__		beanDefinitionReader.setEntityResolver(new ResourceEntityResolver(this))___		_		_		initBeanDefinitionReader(beanDefinitionReader)__		loadBeanDefinitions(beanDefinitionReader)__	};loads,the,bean,definitions,via,an,xml,bean,definition,reader,see,org,springframework,beans,factory,xml,xml,bean,definition,reader,see,init,bean,definition,reader,see,load,bean,definitions;override,protected,void,load,bean,definitions,default,listable,bean,factory,bean,factory,throws,beans,exception,ioexception,xml,bean,definition,reader,bean,definition,reader,new,xml,bean,definition,reader,bean,factory,bean,definition,reader,set,environment,get,environment,bean,definition,reader,set,resource,loader,this,bean,definition,reader,set,entity,resolver,new,resource,entity,resolver,this,init,bean,definition,reader,bean,definition,reader,load,bean,definitions,bean,definition,reader
XmlWebApplicationContext -> @Override 	protected void loadBeanDefinitions(DefaultListableBeanFactory beanFactory) throws BeansException, IOException;1401464100;Loads the bean definitions via an XmlBeanDefinitionReader._@see org.springframework.beans.factory.xml.XmlBeanDefinitionReader_@see #initBeanDefinitionReader_@see #loadBeanDefinitions;@Override_	protected void loadBeanDefinitions(DefaultListableBeanFactory beanFactory) throws BeansException, IOException {_		_		XmlBeanDefinitionReader beanDefinitionReader = new XmlBeanDefinitionReader(beanFactory)___		_		_		beanDefinitionReader.setEnvironment(getEnvironment())__		beanDefinitionReader.setResourceLoader(this)__		beanDefinitionReader.setEntityResolver(new ResourceEntityResolver(this))___		_		_		initBeanDefinitionReader(beanDefinitionReader)__		loadBeanDefinitions(beanDefinitionReader)__	};loads,the,bean,definitions,via,an,xml,bean,definition,reader,see,org,springframework,beans,factory,xml,xml,bean,definition,reader,see,init,bean,definition,reader,see,load,bean,definitions;override,protected,void,load,bean,definitions,default,listable,bean,factory,bean,factory,throws,beans,exception,ioexception,xml,bean,definition,reader,bean,definition,reader,new,xml,bean,definition,reader,bean,factory,bean,definition,reader,set,environment,get,environment,bean,definition,reader,set,resource,loader,this,bean,definition,reader,set,entity,resolver,new,resource,entity,resolver,this,init,bean,definition,reader,bean,definition,reader,load,bean,definitions,bean,definition,reader
XmlWebApplicationContext -> @Override 	protected void loadBeanDefinitions(DefaultListableBeanFactory beanFactory) throws BeansException, IOException;1530174524;Loads the bean definitions via an XmlBeanDefinitionReader._@see org.springframework.beans.factory.xml.XmlBeanDefinitionReader_@see #initBeanDefinitionReader_@see #loadBeanDefinitions;@Override_	protected void loadBeanDefinitions(DefaultListableBeanFactory beanFactory) throws BeansException, IOException {_		_		XmlBeanDefinitionReader beanDefinitionReader = new XmlBeanDefinitionReader(beanFactory)___		_		_		beanDefinitionReader.setEnvironment(getEnvironment())__		beanDefinitionReader.setResourceLoader(this)__		beanDefinitionReader.setEntityResolver(new ResourceEntityResolver(this))___		_		_		initBeanDefinitionReader(beanDefinitionReader)__		loadBeanDefinitions(beanDefinitionReader)__	};loads,the,bean,definitions,via,an,xml,bean,definition,reader,see,org,springframework,beans,factory,xml,xml,bean,definition,reader,see,init,bean,definition,reader,see,load,bean,definitions;override,protected,void,load,bean,definitions,default,listable,bean,factory,bean,factory,throws,beans,exception,ioexception,xml,bean,definition,reader,bean,definition,reader,new,xml,bean,definition,reader,bean,factory,bean,definition,reader,set,environment,get,environment,bean,definition,reader,set,resource,loader,this,bean,definition,reader,set,entity,resolver,new,resource,entity,resolver,this,init,bean,definition,reader,bean,definition,reader,load,bean,definitions,bean,definition,reader
XmlWebApplicationContext -> protected void loadBeanDefinitions(XmlBeanDefinitionReader reader) throws IOException;1328020251;Load the bean definitions with the given XmlBeanDefinitionReader._<p>The lifecycle of the bean factory is handled by the refreshBeanFactory method__therefore this method is just supposed to load and/or register bean definitions._<p>Delegates to a ResourcePatternResolver for resolving location patterns_into Resource instances._@throws java.io.IOException if the required XML document isn't found_@see #refreshBeanFactory_@see #getConfigLocations_@see #getResources_@see #getResourcePatternResolver;protected void loadBeanDefinitions(XmlBeanDefinitionReader reader) throws IOException {_		String[] configLocations = getConfigLocations()__		if (configLocations != null) {_			for (String configLocation : configLocations) {_				reader.loadBeanDefinitions(configLocation)__			}_		}_	};load,the,bean,definitions,with,the,given,xml,bean,definition,reader,p,the,lifecycle,of,the,bean,factory,is,handled,by,the,refresh,bean,factory,method,therefore,this,method,is,just,supposed,to,load,and,or,register,bean,definitions,p,delegates,to,a,resource,pattern,resolver,for,resolving,location,patterns,into,resource,instances,throws,java,io,ioexception,if,the,required,xml,document,isn,t,found,see,refresh,bean,factory,see,get,config,locations,see,get,resources,see,get,resource,pattern,resolver;protected,void,load,bean,definitions,xml,bean,definition,reader,reader,throws,ioexception,string,config,locations,get,config,locations,if,config,locations,null,for,string,config,location,config,locations,reader,load,bean,definitions,config,location
XmlWebApplicationContext -> protected void loadBeanDefinitions(XmlBeanDefinitionReader reader) throws IOException;1390432589;Load the bean definitions with the given XmlBeanDefinitionReader._<p>The lifecycle of the bean factory is handled by the refreshBeanFactory method__therefore this method is just supposed to load and/or register bean definitions._<p>Delegates to a ResourcePatternResolver for resolving location patterns_into Resource instances._@throws java.io.IOException if the required XML document isn't found_@see #refreshBeanFactory_@see #getConfigLocations_@see #getResources_@see #getResourcePatternResolver;protected void loadBeanDefinitions(XmlBeanDefinitionReader reader) throws IOException {_		String[] configLocations = getConfigLocations()__		if (configLocations != null) {_			for (String configLocation : configLocations) {_				reader.loadBeanDefinitions(configLocation)__			}_		}_	};load,the,bean,definitions,with,the,given,xml,bean,definition,reader,p,the,lifecycle,of,the,bean,factory,is,handled,by,the,refresh,bean,factory,method,therefore,this,method,is,just,supposed,to,load,and,or,register,bean,definitions,p,delegates,to,a,resource,pattern,resolver,for,resolving,location,patterns,into,resource,instances,throws,java,io,ioexception,if,the,required,xml,document,isn,t,found,see,refresh,bean,factory,see,get,config,locations,see,get,resources,see,get,resource,pattern,resolver;protected,void,load,bean,definitions,xml,bean,definition,reader,reader,throws,ioexception,string,config,locations,get,config,locations,if,config,locations,null,for,string,config,location,config,locations,reader,load,bean,definitions,config,location
XmlWebApplicationContext -> protected void loadBeanDefinitions(XmlBeanDefinitionReader reader) throws IOException;1401464100;Load the bean definitions with the given XmlBeanDefinitionReader._<p>The lifecycle of the bean factory is handled by the refreshBeanFactory method__therefore this method is just supposed to load and/or register bean definitions._<p>Delegates to a ResourcePatternResolver for resolving location patterns_into Resource instances._@throws IOException if the required XML document isn't found_@see #refreshBeanFactory_@see #getConfigLocations_@see #getResources_@see #getResourcePatternResolver;protected void loadBeanDefinitions(XmlBeanDefinitionReader reader) throws IOException {_		String[] configLocations = getConfigLocations()__		if (configLocations != null) {_			for (String configLocation : configLocations) {_				reader.loadBeanDefinitions(configLocation)__			}_		}_	};load,the,bean,definitions,with,the,given,xml,bean,definition,reader,p,the,lifecycle,of,the,bean,factory,is,handled,by,the,refresh,bean,factory,method,therefore,this,method,is,just,supposed,to,load,and,or,register,bean,definitions,p,delegates,to,a,resource,pattern,resolver,for,resolving,location,patterns,into,resource,instances,throws,ioexception,if,the,required,xml,document,isn,t,found,see,refresh,bean,factory,see,get,config,locations,see,get,resources,see,get,resource,pattern,resolver;protected,void,load,bean,definitions,xml,bean,definition,reader,reader,throws,ioexception,string,config,locations,get,config,locations,if,config,locations,null,for,string,config,location,config,locations,reader,load,bean,definitions,config,location
XmlWebApplicationContext -> protected void loadBeanDefinitions(XmlBeanDefinitionReader reader) throws IOException;1530174524;Load the bean definitions with the given XmlBeanDefinitionReader._<p>The lifecycle of the bean factory is handled by the refreshBeanFactory method__therefore this method is just supposed to load and/or register bean definitions._<p>Delegates to a ResourcePatternResolver for resolving location patterns_into Resource instances._@throws IOException if the required XML document isn't found_@see #refreshBeanFactory_@see #getConfigLocations_@see #getResources_@see #getResourcePatternResolver;protected void loadBeanDefinitions(XmlBeanDefinitionReader reader) throws IOException {_		String[] configLocations = getConfigLocations()__		if (configLocations != null) {_			for (String configLocation : configLocations) {_				reader.loadBeanDefinitions(configLocation)__			}_		}_	};load,the,bean,definitions,with,the,given,xml,bean,definition,reader,p,the,lifecycle,of,the,bean,factory,is,handled,by,the,refresh,bean,factory,method,therefore,this,method,is,just,supposed,to,load,and,or,register,bean,definitions,p,delegates,to,a,resource,pattern,resolver,for,resolving,location,patterns,into,resource,instances,throws,ioexception,if,the,required,xml,document,isn,t,found,see,refresh,bean,factory,see,get,config,locations,see,get,resources,see,get,resource,pattern,resolver;protected,void,load,bean,definitions,xml,bean,definition,reader,reader,throws,ioexception,string,config,locations,get,config,locations,if,config,locations,null,for,string,config,location,config,locations,reader,load,bean,definitions,config,location
XmlWebApplicationContext -> protected void initBeanDefinitionReader(XmlBeanDefinitionReader beanDefinitionReader);1328020251;Initialize the bean definition reader used for loading the bean_definitions of this context. Default implementation is empty._<p>Can be overridden in subclasses, e.g. for turning off XML validation_or using a different XmlBeanDefinitionParser implementation._@param beanDefinitionReader the bean definition reader used by this context_@see org.springframework.beans.factory.xml.XmlBeanDefinitionReader#setValidationMode_@see org.springframework.beans.factory.xml.XmlBeanDefinitionReader#setDocumentReaderClass;protected void initBeanDefinitionReader(XmlBeanDefinitionReader beanDefinitionReader) {_	};initialize,the,bean,definition,reader,used,for,loading,the,bean,definitions,of,this,context,default,implementation,is,empty,p,can,be,overridden,in,subclasses,e,g,for,turning,off,xml,validation,or,using,a,different,xml,bean,definition,parser,implementation,param,bean,definition,reader,the,bean,definition,reader,used,by,this,context,see,org,springframework,beans,factory,xml,xml,bean,definition,reader,set,validation,mode,see,org,springframework,beans,factory,xml,xml,bean,definition,reader,set,document,reader,class;protected,void,init,bean,definition,reader,xml,bean,definition,reader,bean,definition,reader
XmlWebApplicationContext -> protected void initBeanDefinitionReader(XmlBeanDefinitionReader beanDefinitionReader);1390432589;Initialize the bean definition reader used for loading the bean_definitions of this context. Default implementation is empty._<p>Can be overridden in subclasses, e.g. for turning off XML validation_or using a different XmlBeanDefinitionParser implementation._@param beanDefinitionReader the bean definition reader used by this context_@see org.springframework.beans.factory.xml.XmlBeanDefinitionReader#setValidationMode_@see org.springframework.beans.factory.xml.XmlBeanDefinitionReader#setDocumentReaderClass;protected void initBeanDefinitionReader(XmlBeanDefinitionReader beanDefinitionReader) {_	};initialize,the,bean,definition,reader,used,for,loading,the,bean,definitions,of,this,context,default,implementation,is,empty,p,can,be,overridden,in,subclasses,e,g,for,turning,off,xml,validation,or,using,a,different,xml,bean,definition,parser,implementation,param,bean,definition,reader,the,bean,definition,reader,used,by,this,context,see,org,springframework,beans,factory,xml,xml,bean,definition,reader,set,validation,mode,see,org,springframework,beans,factory,xml,xml,bean,definition,reader,set,document,reader,class;protected,void,init,bean,definition,reader,xml,bean,definition,reader,bean,definition,reader
XmlWebApplicationContext -> protected void initBeanDefinitionReader(XmlBeanDefinitionReader beanDefinitionReader);1401464100;Initialize the bean definition reader used for loading the bean_definitions of this context. Default implementation is empty._<p>Can be overridden in subclasses, e.g. for turning off XML validation_or using a different XmlBeanDefinitionParser implementation._@param beanDefinitionReader the bean definition reader used by this context_@see org.springframework.beans.factory.xml.XmlBeanDefinitionReader#setValidationMode_@see org.springframework.beans.factory.xml.XmlBeanDefinitionReader#setDocumentReaderClass;protected void initBeanDefinitionReader(XmlBeanDefinitionReader beanDefinitionReader) {_	};initialize,the,bean,definition,reader,used,for,loading,the,bean,definitions,of,this,context,default,implementation,is,empty,p,can,be,overridden,in,subclasses,e,g,for,turning,off,xml,validation,or,using,a,different,xml,bean,definition,parser,implementation,param,bean,definition,reader,the,bean,definition,reader,used,by,this,context,see,org,springframework,beans,factory,xml,xml,bean,definition,reader,set,validation,mode,see,org,springframework,beans,factory,xml,xml,bean,definition,reader,set,document,reader,class;protected,void,init,bean,definition,reader,xml,bean,definition,reader,bean,definition,reader
XmlWebApplicationContext -> protected void initBeanDefinitionReader(XmlBeanDefinitionReader beanDefinitionReader);1530174524;Initialize the bean definition reader used for loading the bean_definitions of this context. Default implementation is empty._<p>Can be overridden in subclasses, e.g. for turning off XML validation_or using a different XmlBeanDefinitionParser implementation._@param beanDefinitionReader the bean definition reader used by this context_@see org.springframework.beans.factory.xml.XmlBeanDefinitionReader#setValidationMode_@see org.springframework.beans.factory.xml.XmlBeanDefinitionReader#setDocumentReaderClass;protected void initBeanDefinitionReader(XmlBeanDefinitionReader beanDefinitionReader) {_	};initialize,the,bean,definition,reader,used,for,loading,the,bean,definitions,of,this,context,default,implementation,is,empty,p,can,be,overridden,in,subclasses,e,g,for,turning,off,xml,validation,or,using,a,different,xml,bean,definition,parser,implementation,param,bean,definition,reader,the,bean,definition,reader,used,by,this,context,see,org,springframework,beans,factory,xml,xml,bean,definition,reader,set,validation,mode,see,org,springframework,beans,factory,xml,xml,bean,definition,reader,set,document,reader,class;protected,void,init,bean,definition,reader,xml,bean,definition,reader,bean,definition,reader
XmlWebApplicationContext -> @Override 	protected String[] getDefaultConfigLocations();1328020251;The default location for the root context is "/WEB-INF/applicationContext.xml",_and "/WEB-INF/test-servlet.xml" for a context with the namespace "test-servlet"_(like for a DispatcherServlet instance with the servlet-name "test").;@Override_	protected String[] getDefaultConfigLocations() {_		if (getNamespace() != null) {_			return new String[] {DEFAULT_CONFIG_LOCATION_PREFIX + getNamespace() + DEFAULT_CONFIG_LOCATION_SUFFIX}__		}_		else {_			return new String[] {DEFAULT_CONFIG_LOCATION}__		}_	};the,default,location,for,the,root,context,is,web,inf,application,context,xml,and,web,inf,test,servlet,xml,for,a,context,with,the,namespace,test,servlet,like,for,a,dispatcher,servlet,instance,with,the,servlet,name,test;override,protected,string,get,default,config,locations,if,get,namespace,null,return,new,string,get,namespace,else,return,new,string
XmlWebApplicationContext -> @Override 	protected String[] getDefaultConfigLocations();1390432589;The default location for the root context is "/WEB-INF/applicationContext.xml",_and "/WEB-INF/test-servlet.xml" for a context with the namespace "test-servlet"_(like for a DispatcherServlet instance with the servlet-name "test").;@Override_	protected String[] getDefaultConfigLocations() {_		if (getNamespace() != null) {_			return new String[] {DEFAULT_CONFIG_LOCATION_PREFIX + getNamespace() + DEFAULT_CONFIG_LOCATION_SUFFIX}__		}_		else {_			return new String[] {DEFAULT_CONFIG_LOCATION}__		}_	};the,default,location,for,the,root,context,is,web,inf,application,context,xml,and,web,inf,test,servlet,xml,for,a,context,with,the,namespace,test,servlet,like,for,a,dispatcher,servlet,instance,with,the,servlet,name,test;override,protected,string,get,default,config,locations,if,get,namespace,null,return,new,string,get,namespace,else,return,new,string
XmlWebApplicationContext -> @Override 	protected String[] getDefaultConfigLocations();1401464100;The default location for the root context is "/WEB-INF/applicationContext.xml",_and "/WEB-INF/test-servlet.xml" for a context with the namespace "test-servlet"_(like for a DispatcherServlet instance with the servlet-name "test").;@Override_	protected String[] getDefaultConfigLocations() {_		if (getNamespace() != null) {_			return new String[] {DEFAULT_CONFIG_LOCATION_PREFIX + getNamespace() + DEFAULT_CONFIG_LOCATION_SUFFIX}__		}_		else {_			return new String[] {DEFAULT_CONFIG_LOCATION}__		}_	};the,default,location,for,the,root,context,is,web,inf,application,context,xml,and,web,inf,test,servlet,xml,for,a,context,with,the,namespace,test,servlet,like,for,a,dispatcher,servlet,instance,with,the,servlet,name,test;override,protected,string,get,default,config,locations,if,get,namespace,null,return,new,string,get,namespace,else,return,new,string
XmlWebApplicationContext -> @Override 	protected String[] getDefaultConfigLocations();1530174524;The default location for the root context is "/WEB-INF/applicationContext.xml",_and "/WEB-INF/test-servlet.xml" for a context with the namespace "test-servlet"_(like for a DispatcherServlet instance with the servlet-name "test").;@Override_	protected String[] getDefaultConfigLocations() {_		if (getNamespace() != null) {_			return new String[] {DEFAULT_CONFIG_LOCATION_PREFIX + getNamespace() + DEFAULT_CONFIG_LOCATION_SUFFIX}__		}_		else {_			return new String[] {DEFAULT_CONFIG_LOCATION}__		}_	};the,default,location,for,the,root,context,is,web,inf,application,context,xml,and,web,inf,test,servlet,xml,for,a,context,with,the,namespace,test,servlet,like,for,a,dispatcher,servlet,instance,with,the,servlet,name,test;override,protected,string,get,default,config,locations,if,get,namespace,null,return,new,string,get,namespace,else,return,new,string
