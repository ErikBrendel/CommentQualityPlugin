# id;timestamp;commentText;codeText;commentWords;codeWords
DefaultCorsProcessor -> protected List<HttpMethod> checkMethods(CorsConfiguration config, HttpMethod requestMethod);1430811101;Check the HTTP method and determine the methods for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)};protected List<HttpMethod> checkMethods(CorsConfiguration config, HttpMethod requestMethod) {_		return config.checkHttpMethod(requestMethod)__	};check,the,http,method,and,determine,the,methods,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;protected,list,http,method,check,methods,cors,configuration,config,http,method,request,method,return,config,check,http,method,request,method
DefaultCorsProcessor -> protected List<HttpMethod> checkMethods(CorsConfiguration config, HttpMethod requestMethod);1431966054;Check the HTTP method and determine the methods for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)};protected List<HttpMethod> checkMethods(CorsConfiguration config, HttpMethod requestMethod) {_		return config.checkHttpMethod(requestMethod)__	};check,the,http,method,and,determine,the,methods,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;protected,list,http,method,check,methods,cors,configuration,config,http,method,request,method,return,config,check,http,method,request,method
DefaultCorsProcessor -> protected List<HttpMethod> checkMethods(CorsConfiguration config, HttpMethod requestMethod);1436200220;Check the HTTP method and determine the methods for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)};protected List<HttpMethod> checkMethods(CorsConfiguration config, HttpMethod requestMethod) {_		return config.checkHttpMethod(requestMethod)__	};check,the,http,method,and,determine,the,methods,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;protected,list,http,method,check,methods,cors,configuration,config,http,method,request,method,return,config,check,http,method,request,method
DefaultCorsProcessor -> protected List<HttpMethod> checkMethods(CorsConfiguration config, HttpMethod requestMethod);1436777959;Check the HTTP method and determine the methods for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)};protected List<HttpMethod> checkMethods(CorsConfiguration config, HttpMethod requestMethod) {_		return config.checkHttpMethod(requestMethod)__	};check,the,http,method,and,determine,the,methods,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;protected,list,http,method,check,methods,cors,configuration,config,http,method,request,method,return,config,check,http,method,request,method
DefaultCorsProcessor -> protected List<HttpMethod> checkMethods(CorsConfiguration config, HttpMethod requestMethod);1438251419;Check the HTTP method and determine the methods for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)};protected List<HttpMethod> checkMethods(CorsConfiguration config, HttpMethod requestMethod) {_		return config.checkHttpMethod(requestMethod)__	};check,the,http,method,and,determine,the,methods,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;protected,list,http,method,check,methods,cors,configuration,config,http,method,request,method,return,config,check,http,method,request,method
DefaultCorsProcessor -> protected List<HttpMethod> checkMethods(CorsConfiguration config, HttpMethod requestMethod);1443047594;Check the HTTP method and determine the methods for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)};protected List<HttpMethod> checkMethods(CorsConfiguration config, HttpMethod requestMethod) {_		return config.checkHttpMethod(requestMethod)__	};check,the,http,method,and,determine,the,methods,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;protected,list,http,method,check,methods,cors,configuration,config,http,method,request,method,return,config,check,http,method,request,method
DefaultCorsProcessor -> protected List<HttpMethod> checkMethods(CorsConfiguration config, HttpMethod requestMethod);1450380453;Check the HTTP method and determine the methods for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)};protected List<HttpMethod> checkMethods(CorsConfiguration config, HttpMethod requestMethod) {_		return config.checkHttpMethod(requestMethod)__	};check,the,http,method,and,determine,the,methods,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;protected,list,http,method,check,methods,cors,configuration,config,http,method,request,method,return,config,check,http,method,request,method
DefaultCorsProcessor -> protected List<HttpMethod> checkMethods(CorsConfiguration config, HttpMethod requestMethod);1458828499;Check the HTTP method and determine the methods for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)}.;protected List<HttpMethod> checkMethods(CorsConfiguration config, HttpMethod requestMethod) {_		return config.checkHttpMethod(requestMethod)__	};check,the,http,method,and,determine,the,methods,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;protected,list,http,method,check,methods,cors,configuration,config,http,method,request,method,return,config,check,http,method,request,method
DefaultCorsProcessor -> protected List<HttpMethod> checkMethods(CorsConfiguration config, HttpMethod requestMethod);1467730834;Check the HTTP method and determine the methods for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)}.;protected List<HttpMethod> checkMethods(CorsConfiguration config, HttpMethod requestMethod) {_		return config.checkHttpMethod(requestMethod)__	};check,the,http,method,and,determine,the,methods,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;protected,list,http,method,check,methods,cors,configuration,config,http,method,request,method,return,config,check,http,method,request,method
DefaultCorsProcessor -> protected List<HttpMethod> checkMethods(CorsConfiguration config, HttpMethod requestMethod);1468964586;Check the HTTP method and determine the methods for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)}.;protected List<HttpMethod> checkMethods(CorsConfiguration config, HttpMethod requestMethod) {_		return config.checkHttpMethod(requestMethod)__	};check,the,http,method,and,determine,the,methods,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;protected,list,http,method,check,methods,cors,configuration,config,http,method,request,method,return,config,check,http,method,request,method
DefaultCorsProcessor -> protected List<HttpMethod> checkMethods(CorsConfiguration config, HttpMethod requestMethod);1496242568;Check the HTTP method and determine the methods for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)}.;protected List<HttpMethod> checkMethods(CorsConfiguration config, HttpMethod requestMethod) {_		return config.checkHttpMethod(requestMethod)__	};check,the,http,method,and,determine,the,methods,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;protected,list,http,method,check,methods,cors,configuration,config,http,method,request,method,return,config,check,http,method,request,method
DefaultCorsProcessor -> protected boolean handleInternal(ServerHttpRequest request, ServerHttpResponse response, 			CorsConfiguration config, boolean preFlightRequest) throws IOException;1431966054;Handle the given request.;protected boolean handleInternal(ServerHttpRequest request, ServerHttpResponse response,_			CorsConfiguration config, boolean preFlightRequest) throws IOException {__		String requestOrigin = request.getHeaders().getOrigin()__		String allowOrigin = checkOrigin(config, requestOrigin)___		HttpMethod requestMethod = getMethodToUse(request, preFlightRequest)__		List<HttpMethod> allowMethods = checkMethods(config, requestMethod)___		List<String> requestHeaders = getHeadersToUse(request, preFlightRequest)__		List<String> allowHeaders = checkHeaders(config, requestHeaders)___		if (allowOrigin == null || allowMethods == null || (preFlightRequest && allowHeaders == null)) {_			rejectRequest(response)__			return false__		}__		HttpHeaders responseHeaders = response.getHeaders()__		responseHeaders.setAccessControlAllowOrigin(allowOrigin)__		responseHeaders.add(HttpHeaders.VARY, HttpHeaders.ORIGIN)___		if (preFlightRequest) {_			responseHeaders.setAccessControlAllowMethods(allowMethods)__		}__		if (preFlightRequest && !allowHeaders.isEmpty()) {_			responseHeaders.setAccessControlAllowHeaders(allowHeaders)__		}__		if (!CollectionUtils.isEmpty(config.getExposedHeaders())) {_			responseHeaders.setAccessControlExposeHeaders(config.getExposedHeaders())__		}__		if (Boolean.TRUE.equals(config.getAllowCredentials())) {_			responseHeaders.setAccessControlAllowCredentials(true)__		}__		if (preFlightRequest && config.getMaxAge() != null) {_			responseHeaders.setAccessControlMaxAge(config.getMaxAge())__		}__		response.flush()__		return true__	};handle,the,given,request;protected,boolean,handle,internal,server,http,request,request,server,http,response,response,cors,configuration,config,boolean,pre,flight,request,throws,ioexception,string,request,origin,request,get,headers,get,origin,string,allow,origin,check,origin,config,request,origin,http,method,request,method,get,method,to,use,request,pre,flight,request,list,http,method,allow,methods,check,methods,config,request,method,list,string,request,headers,get,headers,to,use,request,pre,flight,request,list,string,allow,headers,check,headers,config,request,headers,if,allow,origin,null,allow,methods,null,pre,flight,request,allow,headers,null,reject,request,response,return,false,http,headers,response,headers,response,get,headers,response,headers,set,access,control,allow,origin,allow,origin,response,headers,add,http,headers,vary,http,headers,origin,if,pre,flight,request,response,headers,set,access,control,allow,methods,allow,methods,if,pre,flight,request,allow,headers,is,empty,response,headers,set,access,control,allow,headers,allow,headers,if,collection,utils,is,empty,config,get,exposed,headers,response,headers,set,access,control,expose,headers,config,get,exposed,headers,if,boolean,true,equals,config,get,allow,credentials,response,headers,set,access,control,allow,credentials,true,if,pre,flight,request,config,get,max,age,null,response,headers,set,access,control,max,age,config,get,max,age,response,flush,return,true
DefaultCorsProcessor -> protected boolean handleInternal(ServerHttpRequest request, ServerHttpResponse response, 			CorsConfiguration config, boolean preFlightRequest) throws IOException;1436200220;Handle the given request.;protected boolean handleInternal(ServerHttpRequest request, ServerHttpResponse response,_			CorsConfiguration config, boolean preFlightRequest) throws IOException {__		String requestOrigin = request.getHeaders().getOrigin()__		String allowOrigin = checkOrigin(config, requestOrigin)___		HttpMethod requestMethod = getMethodToUse(request, preFlightRequest)__		List<HttpMethod> allowMethods = checkMethods(config, requestMethod)___		List<String> requestHeaders = getHeadersToUse(request, preFlightRequest)__		List<String> allowHeaders = checkHeaders(config, requestHeaders)___		if (allowOrigin == null || allowMethods == null || (preFlightRequest && allowHeaders == null)) {_			rejectRequest(response)__			return false__		}__		HttpHeaders responseHeaders = response.getHeaders()__		responseHeaders.setAccessControlAllowOrigin(allowOrigin)__		responseHeaders.add(HttpHeaders.VARY, HttpHeaders.ORIGIN)___		if (preFlightRequest) {_			responseHeaders.setAccessControlAllowMethods(allowMethods)__		}__		if (preFlightRequest && !allowHeaders.isEmpty()) {_			responseHeaders.setAccessControlAllowHeaders(allowHeaders)__		}__		if (!CollectionUtils.isEmpty(config.getExposedHeaders())) {_			responseHeaders.setAccessControlExposeHeaders(config.getExposedHeaders())__		}__		if (Boolean.TRUE.equals(config.getAllowCredentials())) {_			responseHeaders.setAccessControlAllowCredentials(true)__		}__		if (preFlightRequest && config.getMaxAge() != null) {_			responseHeaders.setAccessControlMaxAge(config.getMaxAge())__		}__		response.flush()__		return true__	};handle,the,given,request;protected,boolean,handle,internal,server,http,request,request,server,http,response,response,cors,configuration,config,boolean,pre,flight,request,throws,ioexception,string,request,origin,request,get,headers,get,origin,string,allow,origin,check,origin,config,request,origin,http,method,request,method,get,method,to,use,request,pre,flight,request,list,http,method,allow,methods,check,methods,config,request,method,list,string,request,headers,get,headers,to,use,request,pre,flight,request,list,string,allow,headers,check,headers,config,request,headers,if,allow,origin,null,allow,methods,null,pre,flight,request,allow,headers,null,reject,request,response,return,false,http,headers,response,headers,response,get,headers,response,headers,set,access,control,allow,origin,allow,origin,response,headers,add,http,headers,vary,http,headers,origin,if,pre,flight,request,response,headers,set,access,control,allow,methods,allow,methods,if,pre,flight,request,allow,headers,is,empty,response,headers,set,access,control,allow,headers,allow,headers,if,collection,utils,is,empty,config,get,exposed,headers,response,headers,set,access,control,expose,headers,config,get,exposed,headers,if,boolean,true,equals,config,get,allow,credentials,response,headers,set,access,control,allow,credentials,true,if,pre,flight,request,config,get,max,age,null,response,headers,set,access,control,max,age,config,get,max,age,response,flush,return,true
DefaultCorsProcessor -> protected boolean handleInternal(ServerHttpRequest request, ServerHttpResponse response, 			CorsConfiguration config, boolean preFlightRequest) throws IOException;1436777959;Handle the given request.;protected boolean handleInternal(ServerHttpRequest request, ServerHttpResponse response,_			CorsConfiguration config, boolean preFlightRequest) throws IOException {__		String requestOrigin = request.getHeaders().getOrigin()__		String allowOrigin = checkOrigin(config, requestOrigin)___		HttpMethod requestMethod = getMethodToUse(request, preFlightRequest)__		List<HttpMethod> allowMethods = checkMethods(config, requestMethod)___		List<String> requestHeaders = getHeadersToUse(request, preFlightRequest)__		List<String> allowHeaders = checkHeaders(config, requestHeaders)___		if (allowOrigin == null || allowMethods == null || (preFlightRequest && allowHeaders == null)) {_			rejectRequest(response)__			return false__		}__		HttpHeaders responseHeaders = response.getHeaders()__		responseHeaders.setAccessControlAllowOrigin(allowOrigin)__		responseHeaders.add(HttpHeaders.VARY, HttpHeaders.ORIGIN)___		if (preFlightRequest) {_			responseHeaders.setAccessControlAllowMethods(allowMethods)__		}__		if (preFlightRequest && !allowHeaders.isEmpty()) {_			responseHeaders.setAccessControlAllowHeaders(allowHeaders)__		}__		if (!CollectionUtils.isEmpty(config.getExposedHeaders())) {_			responseHeaders.setAccessControlExposeHeaders(config.getExposedHeaders())__		}__		if (Boolean.TRUE.equals(config.getAllowCredentials())) {_			responseHeaders.setAccessControlAllowCredentials(true)__		}__		if (preFlightRequest && config.getMaxAge() != null) {_			responseHeaders.setAccessControlMaxAge(config.getMaxAge())__		}__		response.flush()__		return true__	};handle,the,given,request;protected,boolean,handle,internal,server,http,request,request,server,http,response,response,cors,configuration,config,boolean,pre,flight,request,throws,ioexception,string,request,origin,request,get,headers,get,origin,string,allow,origin,check,origin,config,request,origin,http,method,request,method,get,method,to,use,request,pre,flight,request,list,http,method,allow,methods,check,methods,config,request,method,list,string,request,headers,get,headers,to,use,request,pre,flight,request,list,string,allow,headers,check,headers,config,request,headers,if,allow,origin,null,allow,methods,null,pre,flight,request,allow,headers,null,reject,request,response,return,false,http,headers,response,headers,response,get,headers,response,headers,set,access,control,allow,origin,allow,origin,response,headers,add,http,headers,vary,http,headers,origin,if,pre,flight,request,response,headers,set,access,control,allow,methods,allow,methods,if,pre,flight,request,allow,headers,is,empty,response,headers,set,access,control,allow,headers,allow,headers,if,collection,utils,is,empty,config,get,exposed,headers,response,headers,set,access,control,expose,headers,config,get,exposed,headers,if,boolean,true,equals,config,get,allow,credentials,response,headers,set,access,control,allow,credentials,true,if,pre,flight,request,config,get,max,age,null,response,headers,set,access,control,max,age,config,get,max,age,response,flush,return,true
DefaultCorsProcessor -> protected boolean handleInternal(ServerHttpRequest request, ServerHttpResponse response, 			CorsConfiguration config, boolean preFlightRequest) throws IOException;1438251419;Handle the given request.;protected boolean handleInternal(ServerHttpRequest request, ServerHttpResponse response,_			CorsConfiguration config, boolean preFlightRequest) throws IOException {__		String requestOrigin = request.getHeaders().getOrigin()__		String allowOrigin = checkOrigin(config, requestOrigin)___		HttpMethod requestMethod = getMethodToUse(request, preFlightRequest)__		List<HttpMethod> allowMethods = checkMethods(config, requestMethod)___		List<String> requestHeaders = getHeadersToUse(request, preFlightRequest)__		List<String> allowHeaders = checkHeaders(config, requestHeaders)___		if (allowOrigin == null || allowMethods == null || (preFlightRequest && allowHeaders == null)) {_			rejectRequest(response)__			return false__		}__		HttpHeaders responseHeaders = response.getHeaders()__		responseHeaders.setAccessControlAllowOrigin(allowOrigin)__		responseHeaders.add(HttpHeaders.VARY, HttpHeaders.ORIGIN)___		if (preFlightRequest) {_			responseHeaders.setAccessControlAllowMethods(allowMethods)__		}__		if (preFlightRequest && !allowHeaders.isEmpty()) {_			responseHeaders.setAccessControlAllowHeaders(allowHeaders)__		}__		if (!CollectionUtils.isEmpty(config.getExposedHeaders())) {_			responseHeaders.setAccessControlExposeHeaders(config.getExposedHeaders())__		}__		if (Boolean.TRUE.equals(config.getAllowCredentials())) {_			responseHeaders.setAccessControlAllowCredentials(true)__		}__		if (preFlightRequest && config.getMaxAge() != null) {_			responseHeaders.setAccessControlMaxAge(config.getMaxAge())__		}__		response.flush()__		return true__	};handle,the,given,request;protected,boolean,handle,internal,server,http,request,request,server,http,response,response,cors,configuration,config,boolean,pre,flight,request,throws,ioexception,string,request,origin,request,get,headers,get,origin,string,allow,origin,check,origin,config,request,origin,http,method,request,method,get,method,to,use,request,pre,flight,request,list,http,method,allow,methods,check,methods,config,request,method,list,string,request,headers,get,headers,to,use,request,pre,flight,request,list,string,allow,headers,check,headers,config,request,headers,if,allow,origin,null,allow,methods,null,pre,flight,request,allow,headers,null,reject,request,response,return,false,http,headers,response,headers,response,get,headers,response,headers,set,access,control,allow,origin,allow,origin,response,headers,add,http,headers,vary,http,headers,origin,if,pre,flight,request,response,headers,set,access,control,allow,methods,allow,methods,if,pre,flight,request,allow,headers,is,empty,response,headers,set,access,control,allow,headers,allow,headers,if,collection,utils,is,empty,config,get,exposed,headers,response,headers,set,access,control,expose,headers,config,get,exposed,headers,if,boolean,true,equals,config,get,allow,credentials,response,headers,set,access,control,allow,credentials,true,if,pre,flight,request,config,get,max,age,null,response,headers,set,access,control,max,age,config,get,max,age,response,flush,return,true
DefaultCorsProcessor -> protected boolean handleInternal(ServerHttpRequest request, ServerHttpResponse response, 			CorsConfiguration config, boolean preFlightRequest) throws IOException;1443047594;Handle the given request.;protected boolean handleInternal(ServerHttpRequest request, ServerHttpResponse response,_			CorsConfiguration config, boolean preFlightRequest) throws IOException {__		String requestOrigin = request.getHeaders().getOrigin()__		String allowOrigin = checkOrigin(config, requestOrigin)___		HttpMethod requestMethod = getMethodToUse(request, preFlightRequest)__		List<HttpMethod> allowMethods = checkMethods(config, requestMethod)___		List<String> requestHeaders = getHeadersToUse(request, preFlightRequest)__		List<String> allowHeaders = checkHeaders(config, requestHeaders)___		if (allowOrigin == null || allowMethods == null || (preFlightRequest && allowHeaders == null)) {_			rejectRequest(response)__			return false__		}__		HttpHeaders responseHeaders = response.getHeaders()__		responseHeaders.setAccessControlAllowOrigin(allowOrigin)__		responseHeaders.add(HttpHeaders.VARY, HttpHeaders.ORIGIN)___		if (preFlightRequest) {_			responseHeaders.setAccessControlAllowMethods(allowMethods)__		}__		if (preFlightRequest && !allowHeaders.isEmpty()) {_			responseHeaders.setAccessControlAllowHeaders(allowHeaders)__		}__		if (!CollectionUtils.isEmpty(config.getExposedHeaders())) {_			responseHeaders.setAccessControlExposeHeaders(config.getExposedHeaders())__		}__		if (Boolean.TRUE.equals(config.getAllowCredentials())) {_			responseHeaders.setAccessControlAllowCredentials(true)__		}__		if (preFlightRequest && config.getMaxAge() != null) {_			responseHeaders.setAccessControlMaxAge(config.getMaxAge())__		}__		response.flush()__		return true__	};handle,the,given,request;protected,boolean,handle,internal,server,http,request,request,server,http,response,response,cors,configuration,config,boolean,pre,flight,request,throws,ioexception,string,request,origin,request,get,headers,get,origin,string,allow,origin,check,origin,config,request,origin,http,method,request,method,get,method,to,use,request,pre,flight,request,list,http,method,allow,methods,check,methods,config,request,method,list,string,request,headers,get,headers,to,use,request,pre,flight,request,list,string,allow,headers,check,headers,config,request,headers,if,allow,origin,null,allow,methods,null,pre,flight,request,allow,headers,null,reject,request,response,return,false,http,headers,response,headers,response,get,headers,response,headers,set,access,control,allow,origin,allow,origin,response,headers,add,http,headers,vary,http,headers,origin,if,pre,flight,request,response,headers,set,access,control,allow,methods,allow,methods,if,pre,flight,request,allow,headers,is,empty,response,headers,set,access,control,allow,headers,allow,headers,if,collection,utils,is,empty,config,get,exposed,headers,response,headers,set,access,control,expose,headers,config,get,exposed,headers,if,boolean,true,equals,config,get,allow,credentials,response,headers,set,access,control,allow,credentials,true,if,pre,flight,request,config,get,max,age,null,response,headers,set,access,control,max,age,config,get,max,age,response,flush,return,true
DefaultCorsProcessor -> protected boolean handleInternal(ServerHttpRequest request, ServerHttpResponse response, 			CorsConfiguration config, boolean preFlightRequest) throws IOException;1450380453;Handle the given request.;protected boolean handleInternal(ServerHttpRequest request, ServerHttpResponse response,_			CorsConfiguration config, boolean preFlightRequest) throws IOException {__		String requestOrigin = request.getHeaders().getOrigin()__		String allowOrigin = checkOrigin(config, requestOrigin)___		HttpMethod requestMethod = getMethodToUse(request, preFlightRequest)__		List<HttpMethod> allowMethods = checkMethods(config, requestMethod)___		List<String> requestHeaders = getHeadersToUse(request, preFlightRequest)__		List<String> allowHeaders = checkHeaders(config, requestHeaders)___		if (allowOrigin == null || allowMethods == null || (preFlightRequest && allowHeaders == null)) {_			rejectRequest(response)__			return false__		}__		HttpHeaders responseHeaders = response.getHeaders()__		responseHeaders.setAccessControlAllowOrigin(allowOrigin)__		responseHeaders.add(HttpHeaders.VARY, HttpHeaders.ORIGIN)___		if (preFlightRequest) {_			responseHeaders.setAccessControlAllowMethods(allowMethods)__		}__		if (preFlightRequest && !allowHeaders.isEmpty()) {_			responseHeaders.setAccessControlAllowHeaders(allowHeaders)__		}__		if (!CollectionUtils.isEmpty(config.getExposedHeaders())) {_			responseHeaders.setAccessControlExposeHeaders(config.getExposedHeaders())__		}__		if (Boolean.TRUE.equals(config.getAllowCredentials())) {_			responseHeaders.setAccessControlAllowCredentials(true)__		}__		if (preFlightRequest && config.getMaxAge() != null) {_			responseHeaders.setAccessControlMaxAge(config.getMaxAge())__		}__		response.flush()__		return true__	};handle,the,given,request;protected,boolean,handle,internal,server,http,request,request,server,http,response,response,cors,configuration,config,boolean,pre,flight,request,throws,ioexception,string,request,origin,request,get,headers,get,origin,string,allow,origin,check,origin,config,request,origin,http,method,request,method,get,method,to,use,request,pre,flight,request,list,http,method,allow,methods,check,methods,config,request,method,list,string,request,headers,get,headers,to,use,request,pre,flight,request,list,string,allow,headers,check,headers,config,request,headers,if,allow,origin,null,allow,methods,null,pre,flight,request,allow,headers,null,reject,request,response,return,false,http,headers,response,headers,response,get,headers,response,headers,set,access,control,allow,origin,allow,origin,response,headers,add,http,headers,vary,http,headers,origin,if,pre,flight,request,response,headers,set,access,control,allow,methods,allow,methods,if,pre,flight,request,allow,headers,is,empty,response,headers,set,access,control,allow,headers,allow,headers,if,collection,utils,is,empty,config,get,exposed,headers,response,headers,set,access,control,expose,headers,config,get,exposed,headers,if,boolean,true,equals,config,get,allow,credentials,response,headers,set,access,control,allow,credentials,true,if,pre,flight,request,config,get,max,age,null,response,headers,set,access,control,max,age,config,get,max,age,response,flush,return,true
DefaultCorsProcessor -> protected boolean handleInternal(ServerHttpRequest request, ServerHttpResponse response, 			CorsConfiguration config, boolean preFlightRequest) throws IOException;1458828499;Handle the given request.;protected boolean handleInternal(ServerHttpRequest request, ServerHttpResponse response,_			CorsConfiguration config, boolean preFlightRequest) throws IOException {__		String requestOrigin = request.getHeaders().getOrigin()__		String allowOrigin = checkOrigin(config, requestOrigin)___		HttpMethod requestMethod = getMethodToUse(request, preFlightRequest)__		List<HttpMethod> allowMethods = checkMethods(config, requestMethod)___		List<String> requestHeaders = getHeadersToUse(request, preFlightRequest)__		List<String> allowHeaders = checkHeaders(config, requestHeaders)___		if (allowOrigin == null || allowMethods == null || (preFlightRequest && allowHeaders == null)) {_			rejectRequest(response)__			return false__		}__		HttpHeaders responseHeaders = response.getHeaders()__		responseHeaders.setAccessControlAllowOrigin(allowOrigin)__		responseHeaders.add(HttpHeaders.VARY, HttpHeaders.ORIGIN)___		if (preFlightRequest) {_			responseHeaders.setAccessControlAllowMethods(allowMethods)__		}__		if (preFlightRequest && !allowHeaders.isEmpty()) {_			responseHeaders.setAccessControlAllowHeaders(allowHeaders)__		}__		if (!CollectionUtils.isEmpty(config.getExposedHeaders())) {_			responseHeaders.setAccessControlExposeHeaders(config.getExposedHeaders())__		}__		if (Boolean.TRUE.equals(config.getAllowCredentials())) {_			responseHeaders.setAccessControlAllowCredentials(true)__		}__		if (preFlightRequest && config.getMaxAge() != null) {_			responseHeaders.setAccessControlMaxAge(config.getMaxAge())__		}__		response.flush()__		return true__	};handle,the,given,request;protected,boolean,handle,internal,server,http,request,request,server,http,response,response,cors,configuration,config,boolean,pre,flight,request,throws,ioexception,string,request,origin,request,get,headers,get,origin,string,allow,origin,check,origin,config,request,origin,http,method,request,method,get,method,to,use,request,pre,flight,request,list,http,method,allow,methods,check,methods,config,request,method,list,string,request,headers,get,headers,to,use,request,pre,flight,request,list,string,allow,headers,check,headers,config,request,headers,if,allow,origin,null,allow,methods,null,pre,flight,request,allow,headers,null,reject,request,response,return,false,http,headers,response,headers,response,get,headers,response,headers,set,access,control,allow,origin,allow,origin,response,headers,add,http,headers,vary,http,headers,origin,if,pre,flight,request,response,headers,set,access,control,allow,methods,allow,methods,if,pre,flight,request,allow,headers,is,empty,response,headers,set,access,control,allow,headers,allow,headers,if,collection,utils,is,empty,config,get,exposed,headers,response,headers,set,access,control,expose,headers,config,get,exposed,headers,if,boolean,true,equals,config,get,allow,credentials,response,headers,set,access,control,allow,credentials,true,if,pre,flight,request,config,get,max,age,null,response,headers,set,access,control,max,age,config,get,max,age,response,flush,return,true
DefaultCorsProcessor -> protected boolean handleInternal(ServerHttpRequest request, ServerHttpResponse response, 			CorsConfiguration config, boolean preFlightRequest) throws IOException;1467730834;Handle the given request.;protected boolean handleInternal(ServerHttpRequest request, ServerHttpResponse response,_			CorsConfiguration config, boolean preFlightRequest) throws IOException {__		String requestOrigin = request.getHeaders().getOrigin()__		String allowOrigin = checkOrigin(config, requestOrigin)___		HttpMethod requestMethod = getMethodToUse(request, preFlightRequest)__		List<HttpMethod> allowMethods = checkMethods(config, requestMethod)___		List<String> requestHeaders = getHeadersToUse(request, preFlightRequest)__		List<String> allowHeaders = checkHeaders(config, requestHeaders)___		if (allowOrigin == null || allowMethods == null || (preFlightRequest && allowHeaders == null)) {_			rejectRequest(response)__			return false__		}__		HttpHeaders responseHeaders = response.getHeaders()__		responseHeaders.setAccessControlAllowOrigin(allowOrigin)__		responseHeaders.add(HttpHeaders.VARY, HttpHeaders.ORIGIN)___		if (preFlightRequest) {_			responseHeaders.setAccessControlAllowMethods(allowMethods)__		}__		if (preFlightRequest && !allowHeaders.isEmpty()) {_			responseHeaders.setAccessControlAllowHeaders(allowHeaders)__		}__		if (!CollectionUtils.isEmpty(config.getExposedHeaders())) {_			responseHeaders.setAccessControlExposeHeaders(config.getExposedHeaders())__		}__		if (Boolean.TRUE.equals(config.getAllowCredentials())) {_			responseHeaders.setAccessControlAllowCredentials(true)__		}__		if (preFlightRequest && config.getMaxAge() != null) {_			responseHeaders.setAccessControlMaxAge(config.getMaxAge())__		}__		response.flush()__		return true__	};handle,the,given,request;protected,boolean,handle,internal,server,http,request,request,server,http,response,response,cors,configuration,config,boolean,pre,flight,request,throws,ioexception,string,request,origin,request,get,headers,get,origin,string,allow,origin,check,origin,config,request,origin,http,method,request,method,get,method,to,use,request,pre,flight,request,list,http,method,allow,methods,check,methods,config,request,method,list,string,request,headers,get,headers,to,use,request,pre,flight,request,list,string,allow,headers,check,headers,config,request,headers,if,allow,origin,null,allow,methods,null,pre,flight,request,allow,headers,null,reject,request,response,return,false,http,headers,response,headers,response,get,headers,response,headers,set,access,control,allow,origin,allow,origin,response,headers,add,http,headers,vary,http,headers,origin,if,pre,flight,request,response,headers,set,access,control,allow,methods,allow,methods,if,pre,flight,request,allow,headers,is,empty,response,headers,set,access,control,allow,headers,allow,headers,if,collection,utils,is,empty,config,get,exposed,headers,response,headers,set,access,control,expose,headers,config,get,exposed,headers,if,boolean,true,equals,config,get,allow,credentials,response,headers,set,access,control,allow,credentials,true,if,pre,flight,request,config,get,max,age,null,response,headers,set,access,control,max,age,config,get,max,age,response,flush,return,true
DefaultCorsProcessor -> protected boolean handleInternal(ServerHttpRequest request, ServerHttpResponse response, 			CorsConfiguration config, boolean preFlightRequest) throws IOException;1468964586;Handle the given request.;protected boolean handleInternal(ServerHttpRequest request, ServerHttpResponse response,_			CorsConfiguration config, boolean preFlightRequest) throws IOException {__		String requestOrigin = request.getHeaders().getOrigin()__		String allowOrigin = checkOrigin(config, requestOrigin)___		HttpMethod requestMethod = getMethodToUse(request, preFlightRequest)__		List<HttpMethod> allowMethods = checkMethods(config, requestMethod)___		List<String> requestHeaders = getHeadersToUse(request, preFlightRequest)__		List<String> allowHeaders = checkHeaders(config, requestHeaders)___		if (allowOrigin == null || allowMethods == null || (preFlightRequest && allowHeaders == null)) {_			rejectRequest(response)__			return false__		}__		HttpHeaders responseHeaders = response.getHeaders()__		responseHeaders.setAccessControlAllowOrigin(allowOrigin)__		responseHeaders.add(HttpHeaders.VARY, HttpHeaders.ORIGIN)___		if (preFlightRequest) {_			responseHeaders.setAccessControlAllowMethods(allowMethods)__		}__		if (preFlightRequest && !allowHeaders.isEmpty()) {_			responseHeaders.setAccessControlAllowHeaders(allowHeaders)__		}__		if (!CollectionUtils.isEmpty(config.getExposedHeaders())) {_			responseHeaders.setAccessControlExposeHeaders(config.getExposedHeaders())__		}__		if (Boolean.TRUE.equals(config.getAllowCredentials())) {_			responseHeaders.setAccessControlAllowCredentials(true)__		}__		if (preFlightRequest && config.getMaxAge() != null) {_			responseHeaders.setAccessControlMaxAge(config.getMaxAge())__		}__		response.flush()__		return true__	};handle,the,given,request;protected,boolean,handle,internal,server,http,request,request,server,http,response,response,cors,configuration,config,boolean,pre,flight,request,throws,ioexception,string,request,origin,request,get,headers,get,origin,string,allow,origin,check,origin,config,request,origin,http,method,request,method,get,method,to,use,request,pre,flight,request,list,http,method,allow,methods,check,methods,config,request,method,list,string,request,headers,get,headers,to,use,request,pre,flight,request,list,string,allow,headers,check,headers,config,request,headers,if,allow,origin,null,allow,methods,null,pre,flight,request,allow,headers,null,reject,request,response,return,false,http,headers,response,headers,response,get,headers,response,headers,set,access,control,allow,origin,allow,origin,response,headers,add,http,headers,vary,http,headers,origin,if,pre,flight,request,response,headers,set,access,control,allow,methods,allow,methods,if,pre,flight,request,allow,headers,is,empty,response,headers,set,access,control,allow,headers,allow,headers,if,collection,utils,is,empty,config,get,exposed,headers,response,headers,set,access,control,expose,headers,config,get,exposed,headers,if,boolean,true,equals,config,get,allow,credentials,response,headers,set,access,control,allow,credentials,true,if,pre,flight,request,config,get,max,age,null,response,headers,set,access,control,max,age,config,get,max,age,response,flush,return,true
DefaultCorsProcessor -> protected boolean handleInternal(ServerHttpRequest request, ServerHttpResponse response, 			CorsConfiguration config, boolean preFlightRequest) throws IOException;1496242568;Handle the given request.;protected boolean handleInternal(ServerHttpRequest request, ServerHttpResponse response,_			CorsConfiguration config, boolean preFlightRequest) throws IOException {__		String requestOrigin = request.getHeaders().getOrigin()__		String allowOrigin = checkOrigin(config, requestOrigin)___		HttpMethod requestMethod = getMethodToUse(request, preFlightRequest)__		List<HttpMethod> allowMethods = checkMethods(config, requestMethod)___		List<String> requestHeaders = getHeadersToUse(request, preFlightRequest)__		List<String> allowHeaders = checkHeaders(config, requestHeaders)___		if (allowOrigin == null || allowMethods == null || (preFlightRequest && allowHeaders == null)) {_			rejectRequest(response)__			return false__		}__		HttpHeaders responseHeaders = response.getHeaders()__		responseHeaders.setAccessControlAllowOrigin(allowOrigin)__		responseHeaders.add(HttpHeaders.VARY, HttpHeaders.ORIGIN)___		if (preFlightRequest) {_			responseHeaders.setAccessControlAllowMethods(allowMethods)__		}__		if (preFlightRequest && !allowHeaders.isEmpty()) {_			responseHeaders.setAccessControlAllowHeaders(allowHeaders)__		}__		if (!CollectionUtils.isEmpty(config.getExposedHeaders())) {_			responseHeaders.setAccessControlExposeHeaders(config.getExposedHeaders())__		}__		if (Boolean.TRUE.equals(config.getAllowCredentials())) {_			responseHeaders.setAccessControlAllowCredentials(true)__		}__		if (preFlightRequest && config.getMaxAge() != null) {_			responseHeaders.setAccessControlMaxAge(config.getMaxAge())__		}__		response.flush()__		return true__	};handle,the,given,request;protected,boolean,handle,internal,server,http,request,request,server,http,response,response,cors,configuration,config,boolean,pre,flight,request,throws,ioexception,string,request,origin,request,get,headers,get,origin,string,allow,origin,check,origin,config,request,origin,http,method,request,method,get,method,to,use,request,pre,flight,request,list,http,method,allow,methods,check,methods,config,request,method,list,string,request,headers,get,headers,to,use,request,pre,flight,request,list,string,allow,headers,check,headers,config,request,headers,if,allow,origin,null,allow,methods,null,pre,flight,request,allow,headers,null,reject,request,response,return,false,http,headers,response,headers,response,get,headers,response,headers,set,access,control,allow,origin,allow,origin,response,headers,add,http,headers,vary,http,headers,origin,if,pre,flight,request,response,headers,set,access,control,allow,methods,allow,methods,if,pre,flight,request,allow,headers,is,empty,response,headers,set,access,control,allow,headers,allow,headers,if,collection,utils,is,empty,config,get,exposed,headers,response,headers,set,access,control,expose,headers,config,get,exposed,headers,if,boolean,true,equals,config,get,allow,credentials,response,headers,set,access,control,allow,credentials,true,if,pre,flight,request,config,get,max,age,null,response,headers,set,access,control,max,age,config,get,max,age,response,flush,return,true
DefaultCorsProcessor -> protected boolean handleInternal(ServerHttpRequest request, ServerHttpResponse response, 			CorsConfiguration config, boolean preFlightRequest) throws IOException;1496837955;Handle the given request.;protected boolean handleInternal(ServerHttpRequest request, ServerHttpResponse response,_			CorsConfiguration config, boolean preFlightRequest) throws IOException {__		String requestOrigin = request.getHeaders().getOrigin()__		String allowOrigin = checkOrigin(config, requestOrigin)___		HttpMethod requestMethod = getMethodToUse(request, preFlightRequest)__		List<HttpMethod> allowMethods = checkMethods(config, requestMethod)___		List<String> requestHeaders = getHeadersToUse(request, preFlightRequest)__		List<String> allowHeaders = checkHeaders(config, requestHeaders)___		if (allowOrigin == null || allowMethods == null || (preFlightRequest && allowHeaders == null)) {_			rejectRequest(response)__			return false__		}__		HttpHeaders responseHeaders = response.getHeaders()__		responseHeaders.setAccessControlAllowOrigin(allowOrigin)__		responseHeaders.add(HttpHeaders.VARY, HttpHeaders.ORIGIN)___		if (preFlightRequest) {_			responseHeaders.setAccessControlAllowMethods(allowMethods)__		}__		if (preFlightRequest && !allowHeaders.isEmpty()) {_			responseHeaders.setAccessControlAllowHeaders(allowHeaders)__		}__		if (!CollectionUtils.isEmpty(config.getExposedHeaders())) {_			responseHeaders.setAccessControlExposeHeaders(config.getExposedHeaders())__		}__		if (Boolean.TRUE.equals(config.getAllowCredentials())) {_			responseHeaders.setAccessControlAllowCredentials(true)__		}__		if (preFlightRequest && config.getMaxAge() != null) {_			responseHeaders.setAccessControlMaxAge(config.getMaxAge())__		}__		response.flush()__		return true__	};handle,the,given,request;protected,boolean,handle,internal,server,http,request,request,server,http,response,response,cors,configuration,config,boolean,pre,flight,request,throws,ioexception,string,request,origin,request,get,headers,get,origin,string,allow,origin,check,origin,config,request,origin,http,method,request,method,get,method,to,use,request,pre,flight,request,list,http,method,allow,methods,check,methods,config,request,method,list,string,request,headers,get,headers,to,use,request,pre,flight,request,list,string,allow,headers,check,headers,config,request,headers,if,allow,origin,null,allow,methods,null,pre,flight,request,allow,headers,null,reject,request,response,return,false,http,headers,response,headers,response,get,headers,response,headers,set,access,control,allow,origin,allow,origin,response,headers,add,http,headers,vary,http,headers,origin,if,pre,flight,request,response,headers,set,access,control,allow,methods,allow,methods,if,pre,flight,request,allow,headers,is,empty,response,headers,set,access,control,allow,headers,allow,headers,if,collection,utils,is,empty,config,get,exposed,headers,response,headers,set,access,control,expose,headers,config,get,exposed,headers,if,boolean,true,equals,config,get,allow,credentials,response,headers,set,access,control,allow,credentials,true,if,pre,flight,request,config,get,max,age,null,response,headers,set,access,control,max,age,config,get,max,age,response,flush,return,true
DefaultCorsProcessor -> protected boolean handleInternal(ServerHttpRequest request, ServerHttpResponse response, 			CorsConfiguration config, boolean preFlightRequest) throws IOException;1499068063;Handle the given request.;protected boolean handleInternal(ServerHttpRequest request, ServerHttpResponse response,_			CorsConfiguration config, boolean preFlightRequest) throws IOException {__		String requestOrigin = request.getHeaders().getOrigin()__		String allowOrigin = checkOrigin(config, requestOrigin)__		if (allowOrigin == null) {_			logger.debug("Rejecting CORS request because '" + requestOrigin + "' origin is not allowed")__			rejectRequest(response)__			return false__		}__		HttpMethod requestMethod = getMethodToUse(request, preFlightRequest)__		List<HttpMethod> allowMethods = checkMethods(config, requestMethod)__		if (allowMethods == null) {_			logger.debug("Rejecting CORS request because '" + requestMethod + "' request method is not allowed")__			rejectRequest(response)__			return false__		}__		List<String> requestHeaders = getHeadersToUse(request, preFlightRequest)__		List<String> allowHeaders = checkHeaders(config, requestHeaders)__		if (preFlightRequest && allowHeaders == null) {_			logger.debug("Rejecting CORS request because '" + requestHeaders + "' request headers are not allowed")__			rejectRequest(response)__			return false__		}__		HttpHeaders responseHeaders = response.getHeaders()__		responseHeaders.setAccessControlAllowOrigin(allowOrigin)__		responseHeaders.add(HttpHeaders.VARY, HttpHeaders.ORIGIN)___		if (preFlightRequest) {_			responseHeaders.setAccessControlAllowMethods(allowMethods)__		}__		if (preFlightRequest && !allowHeaders.isEmpty()) {_			responseHeaders.setAccessControlAllowHeaders(allowHeaders)__		}__		if (!CollectionUtils.isEmpty(config.getExposedHeaders())) {_			responseHeaders.setAccessControlExposeHeaders(config.getExposedHeaders())__		}__		if (Boolean.TRUE.equals(config.getAllowCredentials())) {_			responseHeaders.setAccessControlAllowCredentials(true)__		}__		if (preFlightRequest && config.getMaxAge() != null) {_			responseHeaders.setAccessControlMaxAge(config.getMaxAge())__		}__		response.flush()__		return true__	};handle,the,given,request;protected,boolean,handle,internal,server,http,request,request,server,http,response,response,cors,configuration,config,boolean,pre,flight,request,throws,ioexception,string,request,origin,request,get,headers,get,origin,string,allow,origin,check,origin,config,request,origin,if,allow,origin,null,logger,debug,rejecting,cors,request,because,request,origin,origin,is,not,allowed,reject,request,response,return,false,http,method,request,method,get,method,to,use,request,pre,flight,request,list,http,method,allow,methods,check,methods,config,request,method,if,allow,methods,null,logger,debug,rejecting,cors,request,because,request,method,request,method,is,not,allowed,reject,request,response,return,false,list,string,request,headers,get,headers,to,use,request,pre,flight,request,list,string,allow,headers,check,headers,config,request,headers,if,pre,flight,request,allow,headers,null,logger,debug,rejecting,cors,request,because,request,headers,request,headers,are,not,allowed,reject,request,response,return,false,http,headers,response,headers,response,get,headers,response,headers,set,access,control,allow,origin,allow,origin,response,headers,add,http,headers,vary,http,headers,origin,if,pre,flight,request,response,headers,set,access,control,allow,methods,allow,methods,if,pre,flight,request,allow,headers,is,empty,response,headers,set,access,control,allow,headers,allow,headers,if,collection,utils,is,empty,config,get,exposed,headers,response,headers,set,access,control,expose,headers,config,get,exposed,headers,if,boolean,true,equals,config,get,allow,credentials,response,headers,set,access,control,allow,credentials,true,if,pre,flight,request,config,get,max,age,null,response,headers,set,access,control,max,age,config,get,max,age,response,flush,return,true
DefaultCorsProcessor -> protected boolean handleInternal(ServerHttpRequest request, ServerHttpResponse response, 			CorsConfiguration config, boolean preFlightRequest) throws IOException;1508532146;Handle the given request.;protected boolean handleInternal(ServerHttpRequest request, ServerHttpResponse response,_			CorsConfiguration config, boolean preFlightRequest) throws IOException {__		String requestOrigin = request.getHeaders().getOrigin()__		String allowOrigin = checkOrigin(config, requestOrigin)__		if (allowOrigin == null) {_			logger.debug("Rejecting CORS request because '" + requestOrigin + "' origin is not allowed")__			rejectRequest(response)__			return false__		}__		HttpMethod requestMethod = getMethodToUse(request, preFlightRequest)__		List<HttpMethod> allowMethods = checkMethods(config, requestMethod)__		if (allowMethods == null) {_			logger.debug("Rejecting CORS request because '" + requestMethod + "' request method is not allowed")__			rejectRequest(response)__			return false__		}__		List<String> requestHeaders = getHeadersToUse(request, preFlightRequest)__		List<String> allowHeaders = checkHeaders(config, requestHeaders)__		if (preFlightRequest && allowHeaders == null) {_			logger.debug("Rejecting CORS request because '" + requestHeaders + "' request headers are not allowed")__			rejectRequest(response)__			return false__		}__		HttpHeaders responseHeaders = response.getHeaders()__		responseHeaders.setAccessControlAllowOrigin(allowOrigin)__		responseHeaders.add(HttpHeaders.VARY, HttpHeaders.ORIGIN)___		if (preFlightRequest) {_			responseHeaders.setAccessControlAllowMethods(allowMethods)__		}__		if (preFlightRequest && !allowHeaders.isEmpty()) {_			responseHeaders.setAccessControlAllowHeaders(allowHeaders)__		}__		if (!CollectionUtils.isEmpty(config.getExposedHeaders())) {_			responseHeaders.setAccessControlExposeHeaders(config.getExposedHeaders())__		}__		if (Boolean.TRUE.equals(config.getAllowCredentials())) {_			responseHeaders.setAccessControlAllowCredentials(true)__		}__		if (preFlightRequest && config.getMaxAge() != null) {_			responseHeaders.setAccessControlMaxAge(config.getMaxAge())__		}__		response.flush()__		return true__	};handle,the,given,request;protected,boolean,handle,internal,server,http,request,request,server,http,response,response,cors,configuration,config,boolean,pre,flight,request,throws,ioexception,string,request,origin,request,get,headers,get,origin,string,allow,origin,check,origin,config,request,origin,if,allow,origin,null,logger,debug,rejecting,cors,request,because,request,origin,origin,is,not,allowed,reject,request,response,return,false,http,method,request,method,get,method,to,use,request,pre,flight,request,list,http,method,allow,methods,check,methods,config,request,method,if,allow,methods,null,logger,debug,rejecting,cors,request,because,request,method,request,method,is,not,allowed,reject,request,response,return,false,list,string,request,headers,get,headers,to,use,request,pre,flight,request,list,string,allow,headers,check,headers,config,request,headers,if,pre,flight,request,allow,headers,null,logger,debug,rejecting,cors,request,because,request,headers,request,headers,are,not,allowed,reject,request,response,return,false,http,headers,response,headers,response,get,headers,response,headers,set,access,control,allow,origin,allow,origin,response,headers,add,http,headers,vary,http,headers,origin,if,pre,flight,request,response,headers,set,access,control,allow,methods,allow,methods,if,pre,flight,request,allow,headers,is,empty,response,headers,set,access,control,allow,headers,allow,headers,if,collection,utils,is,empty,config,get,exposed,headers,response,headers,set,access,control,expose,headers,config,get,exposed,headers,if,boolean,true,equals,config,get,allow,credentials,response,headers,set,access,control,allow,credentials,true,if,pre,flight,request,config,get,max,age,null,response,headers,set,access,control,max,age,config,get,max,age,response,flush,return,true
DefaultCorsProcessor -> protected boolean handleInternal(ServerHttpRequest request, ServerHttpResponse response, 			CorsConfiguration config, boolean preFlightRequest) throws IOException;1511387213;Handle the given request.;protected boolean handleInternal(ServerHttpRequest request, ServerHttpResponse response,_			CorsConfiguration config, boolean preFlightRequest) throws IOException {__		String requestOrigin = request.getHeaders().getOrigin()__		String allowOrigin = checkOrigin(config, requestOrigin)__		HttpHeaders responseHeaders = response.getHeaders()___		responseHeaders.add(HttpHeaders.VARY, HttpHeaders.ORIGIN)___		if (allowOrigin == null) {_			logger.debug("Rejecting CORS request because '" + requestOrigin + "' origin is not allowed")__			rejectRequest(response)__			return false__		}__		HttpMethod requestMethod = getMethodToUse(request, preFlightRequest)__		List<HttpMethod> allowMethods = checkMethods(config, requestMethod)__		if (allowMethods == null) {_			logger.debug("Rejecting CORS request because '" + requestMethod + "' request method is not allowed")__			rejectRequest(response)__			return false__		}__		List<String> requestHeaders = getHeadersToUse(request, preFlightRequest)__		List<String> allowHeaders = checkHeaders(config, requestHeaders)__		if (preFlightRequest && allowHeaders == null) {_			logger.debug("Rejecting CORS request because '" + requestHeaders + "' request headers are not allowed")__			rejectRequest(response)__			return false__		}__		responseHeaders.setAccessControlAllowOrigin(allowOrigin)___		if (preFlightRequest) {_			responseHeaders.setAccessControlAllowMethods(allowMethods)__		}__		if (preFlightRequest && !allowHeaders.isEmpty()) {_			responseHeaders.setAccessControlAllowHeaders(allowHeaders)__		}__		if (!CollectionUtils.isEmpty(config.getExposedHeaders())) {_			responseHeaders.setAccessControlExposeHeaders(config.getExposedHeaders())__		}__		if (Boolean.TRUE.equals(config.getAllowCredentials())) {_			responseHeaders.setAccessControlAllowCredentials(true)__		}__		if (preFlightRequest && config.getMaxAge() != null) {_			responseHeaders.setAccessControlMaxAge(config.getMaxAge())__		}__		response.flush()__		return true__	};handle,the,given,request;protected,boolean,handle,internal,server,http,request,request,server,http,response,response,cors,configuration,config,boolean,pre,flight,request,throws,ioexception,string,request,origin,request,get,headers,get,origin,string,allow,origin,check,origin,config,request,origin,http,headers,response,headers,response,get,headers,response,headers,add,http,headers,vary,http,headers,origin,if,allow,origin,null,logger,debug,rejecting,cors,request,because,request,origin,origin,is,not,allowed,reject,request,response,return,false,http,method,request,method,get,method,to,use,request,pre,flight,request,list,http,method,allow,methods,check,methods,config,request,method,if,allow,methods,null,logger,debug,rejecting,cors,request,because,request,method,request,method,is,not,allowed,reject,request,response,return,false,list,string,request,headers,get,headers,to,use,request,pre,flight,request,list,string,allow,headers,check,headers,config,request,headers,if,pre,flight,request,allow,headers,null,logger,debug,rejecting,cors,request,because,request,headers,request,headers,are,not,allowed,reject,request,response,return,false,response,headers,set,access,control,allow,origin,allow,origin,if,pre,flight,request,response,headers,set,access,control,allow,methods,allow,methods,if,pre,flight,request,allow,headers,is,empty,response,headers,set,access,control,allow,headers,allow,headers,if,collection,utils,is,empty,config,get,exposed,headers,response,headers,set,access,control,expose,headers,config,get,exposed,headers,if,boolean,true,equals,config,get,allow,credentials,response,headers,set,access,control,allow,credentials,true,if,pre,flight,request,config,get,max,age,null,response,headers,set,access,control,max,age,config,get,max,age,response,flush,return,true
DefaultCorsProcessor -> protected boolean handleInternal(ServerHttpRequest request, ServerHttpResponse response, 			CorsConfiguration config, boolean preFlightRequest) throws IOException;1517328032;Handle the given request.;protected boolean handleInternal(ServerHttpRequest request, ServerHttpResponse response,_			CorsConfiguration config, boolean preFlightRequest) throws IOException {__		String requestOrigin = request.getHeaders().getOrigin()__		String allowOrigin = checkOrigin(config, requestOrigin)__		HttpHeaders responseHeaders = response.getHeaders()___		responseHeaders.addAll(HttpHeaders.VARY, Arrays.asList(HttpHeaders.ORIGIN,_				HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS))___		if (allowOrigin == null) {_			logger.debug("Rejecting CORS request because '" + requestOrigin + "' origin is not allowed")__			rejectRequest(response)__			return false__		}__		HttpMethod requestMethod = getMethodToUse(request, preFlightRequest)__		List<HttpMethod> allowMethods = checkMethods(config, requestMethod)__		if (allowMethods == null) {_			logger.debug("Rejecting CORS request because '" + requestMethod + "' request method is not allowed")__			rejectRequest(response)__			return false__		}__		List<String> requestHeaders = getHeadersToUse(request, preFlightRequest)__		List<String> allowHeaders = checkHeaders(config, requestHeaders)__		if (preFlightRequest && allowHeaders == null) {_			logger.debug("Rejecting CORS request because '" + requestHeaders + "' request headers are not allowed")__			rejectRequest(response)__			return false__		}__		responseHeaders.setAccessControlAllowOrigin(allowOrigin)___		if (preFlightRequest) {_			responseHeaders.setAccessControlAllowMethods(allowMethods)__		}__		if (preFlightRequest && !allowHeaders.isEmpty()) {_			responseHeaders.setAccessControlAllowHeaders(allowHeaders)__		}__		if (!CollectionUtils.isEmpty(config.getExposedHeaders())) {_			responseHeaders.setAccessControlExposeHeaders(config.getExposedHeaders())__		}__		if (Boolean.TRUE.equals(config.getAllowCredentials())) {_			responseHeaders.setAccessControlAllowCredentials(true)__		}__		if (preFlightRequest && config.getMaxAge() != null) {_			responseHeaders.setAccessControlMaxAge(config.getMaxAge())__		}__		response.flush()__		return true__	};handle,the,given,request;protected,boolean,handle,internal,server,http,request,request,server,http,response,response,cors,configuration,config,boolean,pre,flight,request,throws,ioexception,string,request,origin,request,get,headers,get,origin,string,allow,origin,check,origin,config,request,origin,http,headers,response,headers,response,get,headers,response,headers,add,all,http,headers,vary,arrays,as,list,http,headers,origin,http,headers,http,headers,if,allow,origin,null,logger,debug,rejecting,cors,request,because,request,origin,origin,is,not,allowed,reject,request,response,return,false,http,method,request,method,get,method,to,use,request,pre,flight,request,list,http,method,allow,methods,check,methods,config,request,method,if,allow,methods,null,logger,debug,rejecting,cors,request,because,request,method,request,method,is,not,allowed,reject,request,response,return,false,list,string,request,headers,get,headers,to,use,request,pre,flight,request,list,string,allow,headers,check,headers,config,request,headers,if,pre,flight,request,allow,headers,null,logger,debug,rejecting,cors,request,because,request,headers,request,headers,are,not,allowed,reject,request,response,return,false,response,headers,set,access,control,allow,origin,allow,origin,if,pre,flight,request,response,headers,set,access,control,allow,methods,allow,methods,if,pre,flight,request,allow,headers,is,empty,response,headers,set,access,control,allow,headers,allow,headers,if,collection,utils,is,empty,config,get,exposed,headers,response,headers,set,access,control,expose,headers,config,get,exposed,headers,if,boolean,true,equals,config,get,allow,credentials,response,headers,set,access,control,allow,credentials,true,if,pre,flight,request,config,get,max,age,null,response,headers,set,access,control,max,age,config,get,max,age,response,flush,return,true
DefaultCorsProcessor -> protected boolean handleInternal(ServerHttpRequest request, ServerHttpResponse response, 			CorsConfiguration config, boolean preFlightRequest) throws IOException;1529361191;Handle the given request.;protected boolean handleInternal(ServerHttpRequest request, ServerHttpResponse response,_			CorsConfiguration config, boolean preFlightRequest) throws IOException {__		String requestOrigin = request.getHeaders().getOrigin()__		String allowOrigin = checkOrigin(config, requestOrigin)__		HttpHeaders responseHeaders = response.getHeaders()___		responseHeaders.addAll(HttpHeaders.VARY, Arrays.asList(HttpHeaders.ORIGIN,_				HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS))___		if (allowOrigin == null) {_			logger.debug("Rejecting CORS request because '" + requestOrigin + "' origin is not allowed")__			rejectRequest(response)__			return false__		}__		HttpMethod requestMethod = getMethodToUse(request, preFlightRequest)__		List<HttpMethod> allowMethods = checkMethods(config, requestMethod)__		if (allowMethods == null) {_			logger.debug("Rejecting CORS request because '" + requestMethod + "' request method is not allowed")__			rejectRequest(response)__			return false__		}__		List<String> requestHeaders = getHeadersToUse(request, preFlightRequest)__		List<String> allowHeaders = checkHeaders(config, requestHeaders)__		if (preFlightRequest && allowHeaders == null) {_			logger.debug("Rejecting CORS request because '" + requestHeaders + "' request headers are not allowed")__			rejectRequest(response)__			return false__		}__		responseHeaders.setAccessControlAllowOrigin(allowOrigin)___		if (preFlightRequest) {_			responseHeaders.setAccessControlAllowMethods(allowMethods)__		}__		if (preFlightRequest && !allowHeaders.isEmpty()) {_			responseHeaders.setAccessControlAllowHeaders(allowHeaders)__		}__		if (!CollectionUtils.isEmpty(config.getExposedHeaders())) {_			responseHeaders.setAccessControlExposeHeaders(config.getExposedHeaders())__		}__		if (Boolean.TRUE.equals(config.getAllowCredentials())) {_			responseHeaders.setAccessControlAllowCredentials(true)__		}__		if (preFlightRequest && config.getMaxAge() != null) {_			responseHeaders.setAccessControlMaxAge(config.getMaxAge())__		}__		response.flush()__		return true__	};handle,the,given,request;protected,boolean,handle,internal,server,http,request,request,server,http,response,response,cors,configuration,config,boolean,pre,flight,request,throws,ioexception,string,request,origin,request,get,headers,get,origin,string,allow,origin,check,origin,config,request,origin,http,headers,response,headers,response,get,headers,response,headers,add,all,http,headers,vary,arrays,as,list,http,headers,origin,http,headers,http,headers,if,allow,origin,null,logger,debug,rejecting,cors,request,because,request,origin,origin,is,not,allowed,reject,request,response,return,false,http,method,request,method,get,method,to,use,request,pre,flight,request,list,http,method,allow,methods,check,methods,config,request,method,if,allow,methods,null,logger,debug,rejecting,cors,request,because,request,method,request,method,is,not,allowed,reject,request,response,return,false,list,string,request,headers,get,headers,to,use,request,pre,flight,request,list,string,allow,headers,check,headers,config,request,headers,if,pre,flight,request,allow,headers,null,logger,debug,rejecting,cors,request,because,request,headers,request,headers,are,not,allowed,reject,request,response,return,false,response,headers,set,access,control,allow,origin,allow,origin,if,pre,flight,request,response,headers,set,access,control,allow,methods,allow,methods,if,pre,flight,request,allow,headers,is,empty,response,headers,set,access,control,allow,headers,allow,headers,if,collection,utils,is,empty,config,get,exposed,headers,response,headers,set,access,control,expose,headers,config,get,exposed,headers,if,boolean,true,equals,config,get,allow,credentials,response,headers,set,access,control,allow,credentials,true,if,pre,flight,request,config,get,max,age,null,response,headers,set,access,control,max,age,config,get,max,age,response,flush,return,true
DefaultCorsProcessor -> protected boolean handleInternal(ServerHttpRequest request, ServerHttpResponse response, 			CorsConfiguration config, boolean preFlightRequest) throws IOException;1529721864;Handle the given request.;protected boolean handleInternal(ServerHttpRequest request, ServerHttpResponse response,_			CorsConfiguration config, boolean preFlightRequest) throws IOException {__		String requestOrigin = request.getHeaders().getOrigin()__		String allowOrigin = checkOrigin(config, requestOrigin)__		HttpHeaders responseHeaders = response.getHeaders()___		responseHeaders.addAll(HttpHeaders.VARY, Arrays.asList(HttpHeaders.ORIGIN,_				HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS))___		if (allowOrigin == null) {_			logger.debug("Reject: '" + requestOrigin + "' origin is not allowed")__			rejectRequest(response)__			return false__		}__		HttpMethod requestMethod = getMethodToUse(request, preFlightRequest)__		List<HttpMethod> allowMethods = checkMethods(config, requestMethod)__		if (allowMethods == null) {_			logger.debug("Reject: HTTP '" + requestMethod + "' is not allowed")__			rejectRequest(response)__			return false__		}__		List<String> requestHeaders = getHeadersToUse(request, preFlightRequest)__		List<String> allowHeaders = checkHeaders(config, requestHeaders)__		if (preFlightRequest && allowHeaders == null) {_			logger.debug("Reject: headers '" + requestHeaders + "' are not allowed")__			rejectRequest(response)__			return false__		}__		responseHeaders.setAccessControlAllowOrigin(allowOrigin)___		if (preFlightRequest) {_			responseHeaders.setAccessControlAllowMethods(allowMethods)__		}__		if (preFlightRequest && !allowHeaders.isEmpty()) {_			responseHeaders.setAccessControlAllowHeaders(allowHeaders)__		}__		if (!CollectionUtils.isEmpty(config.getExposedHeaders())) {_			responseHeaders.setAccessControlExposeHeaders(config.getExposedHeaders())__		}__		if (Boolean.TRUE.equals(config.getAllowCredentials())) {_			responseHeaders.setAccessControlAllowCredentials(true)__		}__		if (preFlightRequest && config.getMaxAge() != null) {_			responseHeaders.setAccessControlMaxAge(config.getMaxAge())__		}__		response.flush()__		return true__	};handle,the,given,request;protected,boolean,handle,internal,server,http,request,request,server,http,response,response,cors,configuration,config,boolean,pre,flight,request,throws,ioexception,string,request,origin,request,get,headers,get,origin,string,allow,origin,check,origin,config,request,origin,http,headers,response,headers,response,get,headers,response,headers,add,all,http,headers,vary,arrays,as,list,http,headers,origin,http,headers,http,headers,if,allow,origin,null,logger,debug,reject,request,origin,origin,is,not,allowed,reject,request,response,return,false,http,method,request,method,get,method,to,use,request,pre,flight,request,list,http,method,allow,methods,check,methods,config,request,method,if,allow,methods,null,logger,debug,reject,http,request,method,is,not,allowed,reject,request,response,return,false,list,string,request,headers,get,headers,to,use,request,pre,flight,request,list,string,allow,headers,check,headers,config,request,headers,if,pre,flight,request,allow,headers,null,logger,debug,reject,headers,request,headers,are,not,allowed,reject,request,response,return,false,response,headers,set,access,control,allow,origin,allow,origin,if,pre,flight,request,response,headers,set,access,control,allow,methods,allow,methods,if,pre,flight,request,allow,headers,is,empty,response,headers,set,access,control,allow,headers,allow,headers,if,collection,utils,is,empty,config,get,exposed,headers,response,headers,set,access,control,expose,headers,config,get,exposed,headers,if,boolean,true,equals,config,get,allow,credentials,response,headers,set,access,control,allow,credentials,true,if,pre,flight,request,config,get,max,age,null,response,headers,set,access,control,max,age,config,get,max,age,response,flush,return,true
DefaultCorsProcessor -> @Nullable 	protected String checkOrigin(CorsConfiguration config, @Nullable String requestOrigin);1496837955;Check the origin and determine the origin for the response. The default_implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)}.;@Nullable_	protected String checkOrigin(CorsConfiguration config, @Nullable String requestOrigin) {_		return config.checkOrigin(requestOrigin)__	};check,the,origin,and,determine,the,origin,for,the,response,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;nullable,protected,string,check,origin,cors,configuration,config,nullable,string,request,origin,return,config,check,origin,request,origin
DefaultCorsProcessor -> @Nullable 	protected String checkOrigin(CorsConfiguration config, @Nullable String requestOrigin);1499068063;Check the origin and determine the origin for the response. The default_implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)}.;@Nullable_	protected String checkOrigin(CorsConfiguration config, @Nullable String requestOrigin) {_		return config.checkOrigin(requestOrigin)__	};check,the,origin,and,determine,the,origin,for,the,response,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;nullable,protected,string,check,origin,cors,configuration,config,nullable,string,request,origin,return,config,check,origin,request,origin
DefaultCorsProcessor -> @Nullable 	protected String checkOrigin(CorsConfiguration config, @Nullable String requestOrigin);1508532146;Check the origin and determine the origin for the response. The default_implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)}.;@Nullable_	protected String checkOrigin(CorsConfiguration config, @Nullable String requestOrigin) {_		return config.checkOrigin(requestOrigin)__	};check,the,origin,and,determine,the,origin,for,the,response,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;nullable,protected,string,check,origin,cors,configuration,config,nullable,string,request,origin,return,config,check,origin,request,origin
DefaultCorsProcessor -> @Nullable 	protected String checkOrigin(CorsConfiguration config, @Nullable String requestOrigin);1511387213;Check the origin and determine the origin for the response. The default_implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)}.;@Nullable_	protected String checkOrigin(CorsConfiguration config, @Nullable String requestOrigin) {_		return config.checkOrigin(requestOrigin)__	};check,the,origin,and,determine,the,origin,for,the,response,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;nullable,protected,string,check,origin,cors,configuration,config,nullable,string,request,origin,return,config,check,origin,request,origin
DefaultCorsProcessor -> @Nullable 	protected String checkOrigin(CorsConfiguration config, @Nullable String requestOrigin);1517328032;Check the origin and determine the origin for the response. The default_implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)}.;@Nullable_	protected String checkOrigin(CorsConfiguration config, @Nullable String requestOrigin) {_		return config.checkOrigin(requestOrigin)__	};check,the,origin,and,determine,the,origin,for,the,response,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;nullable,protected,string,check,origin,cors,configuration,config,nullable,string,request,origin,return,config,check,origin,request,origin
DefaultCorsProcessor -> @Nullable 	protected String checkOrigin(CorsConfiguration config, @Nullable String requestOrigin);1529361191;Check the origin and determine the origin for the response. The default_implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)}.;@Nullable_	protected String checkOrigin(CorsConfiguration config, @Nullable String requestOrigin) {_		return config.checkOrigin(requestOrigin)__	};check,the,origin,and,determine,the,origin,for,the,response,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;nullable,protected,string,check,origin,cors,configuration,config,nullable,string,request,origin,return,config,check,origin,request,origin
DefaultCorsProcessor -> @Nullable 	protected String checkOrigin(CorsConfiguration config, @Nullable String requestOrigin);1529721864;Check the origin and determine the origin for the response. The default_implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)}.;@Nullable_	protected String checkOrigin(CorsConfiguration config, @Nullable String requestOrigin) {_		return config.checkOrigin(requestOrigin)__	};check,the,origin,and,determine,the,origin,for,the,response,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;nullable,protected,string,check,origin,cors,configuration,config,nullable,string,request,origin,return,config,check,origin,request,origin
DefaultCorsProcessor -> protected String checkOrigin(CorsConfiguration config, String requestOrigin);1430811101;Check the origin and determine the origin for the response. The default_implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)};protected String checkOrigin(CorsConfiguration config, String requestOrigin) {_		return config.checkOrigin(requestOrigin)__	};check,the,origin,and,determine,the,origin,for,the,response,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;protected,string,check,origin,cors,configuration,config,string,request,origin,return,config,check,origin,request,origin
DefaultCorsProcessor -> protected String checkOrigin(CorsConfiguration config, String requestOrigin);1431966054;Check the origin and determine the origin for the response. The default_implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)};protected String checkOrigin(CorsConfiguration config, String requestOrigin) {_		return config.checkOrigin(requestOrigin)__	};check,the,origin,and,determine,the,origin,for,the,response,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;protected,string,check,origin,cors,configuration,config,string,request,origin,return,config,check,origin,request,origin
DefaultCorsProcessor -> protected String checkOrigin(CorsConfiguration config, String requestOrigin);1436200220;Check the origin and determine the origin for the response. The default_implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)};protected String checkOrigin(CorsConfiguration config, String requestOrigin) {_		return config.checkOrigin(requestOrigin)__	};check,the,origin,and,determine,the,origin,for,the,response,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;protected,string,check,origin,cors,configuration,config,string,request,origin,return,config,check,origin,request,origin
DefaultCorsProcessor -> protected String checkOrigin(CorsConfiguration config, String requestOrigin);1436777959;Check the origin and determine the origin for the response. The default_implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)};protected String checkOrigin(CorsConfiguration config, String requestOrigin) {_		return config.checkOrigin(requestOrigin)__	};check,the,origin,and,determine,the,origin,for,the,response,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;protected,string,check,origin,cors,configuration,config,string,request,origin,return,config,check,origin,request,origin
DefaultCorsProcessor -> protected String checkOrigin(CorsConfiguration config, String requestOrigin);1438251419;Check the origin and determine the origin for the response. The default_implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)};protected String checkOrigin(CorsConfiguration config, String requestOrigin) {_		return config.checkOrigin(requestOrigin)__	};check,the,origin,and,determine,the,origin,for,the,response,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;protected,string,check,origin,cors,configuration,config,string,request,origin,return,config,check,origin,request,origin
DefaultCorsProcessor -> protected String checkOrigin(CorsConfiguration config, String requestOrigin);1443047594;Check the origin and determine the origin for the response. The default_implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)};protected String checkOrigin(CorsConfiguration config, String requestOrigin) {_		return config.checkOrigin(requestOrigin)__	};check,the,origin,and,determine,the,origin,for,the,response,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;protected,string,check,origin,cors,configuration,config,string,request,origin,return,config,check,origin,request,origin
DefaultCorsProcessor -> protected String checkOrigin(CorsConfiguration config, String requestOrigin);1450380453;Check the origin and determine the origin for the response. The default_implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)};protected String checkOrigin(CorsConfiguration config, String requestOrigin) {_		return config.checkOrigin(requestOrigin)__	};check,the,origin,and,determine,the,origin,for,the,response,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;protected,string,check,origin,cors,configuration,config,string,request,origin,return,config,check,origin,request,origin
DefaultCorsProcessor -> protected String checkOrigin(CorsConfiguration config, String requestOrigin);1458828499;Check the origin and determine the origin for the response. The default_implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)}.;protected String checkOrigin(CorsConfiguration config, String requestOrigin) {_		return config.checkOrigin(requestOrigin)__	};check,the,origin,and,determine,the,origin,for,the,response,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;protected,string,check,origin,cors,configuration,config,string,request,origin,return,config,check,origin,request,origin
DefaultCorsProcessor -> protected String checkOrigin(CorsConfiguration config, String requestOrigin);1467730834;Check the origin and determine the origin for the response. The default_implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)}.;protected String checkOrigin(CorsConfiguration config, String requestOrigin) {_		return config.checkOrigin(requestOrigin)__	};check,the,origin,and,determine,the,origin,for,the,response,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;protected,string,check,origin,cors,configuration,config,string,request,origin,return,config,check,origin,request,origin
DefaultCorsProcessor -> protected String checkOrigin(CorsConfiguration config, String requestOrigin);1468964586;Check the origin and determine the origin for the response. The default_implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)}.;protected String checkOrigin(CorsConfiguration config, String requestOrigin) {_		return config.checkOrigin(requestOrigin)__	};check,the,origin,and,determine,the,origin,for,the,response,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;protected,string,check,origin,cors,configuration,config,string,request,origin,return,config,check,origin,request,origin
DefaultCorsProcessor -> protected String checkOrigin(CorsConfiguration config, String requestOrigin);1496242568;Check the origin and determine the origin for the response. The default_implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)}.;protected String checkOrigin(CorsConfiguration config, String requestOrigin) {_		return config.checkOrigin(requestOrigin)__	};check,the,origin,and,determine,the,origin,for,the,response,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;protected,string,check,origin,cors,configuration,config,string,request,origin,return,config,check,origin,request,origin
DefaultCorsProcessor -> protected void rejectRequest(ServerHttpResponse response) throws IOException;1431966054;Invoked when one of the CORS checks failed._The default implementation sets the response status to 403 and writes_"Invalid CORS request" to the response.;protected void rejectRequest(ServerHttpResponse response) throws IOException {_		response.setStatusCode(HttpStatus.FORBIDDEN)__		response.getBody().write("Invalid CORS request".getBytes(UTF8_CHARSET))__	};invoked,when,one,of,the,cors,checks,failed,the,default,implementation,sets,the,response,status,to,403,and,writes,invalid,cors,request,to,the,response;protected,void,reject,request,server,http,response,response,throws,ioexception,response,set,status,code,http,status,forbidden,response,get,body,write,invalid,cors,request,get,bytes
DefaultCorsProcessor -> protected void rejectRequest(ServerHttpResponse response) throws IOException;1436200220;Invoked when one of the CORS checks failed._The default implementation sets the response status to 403 and writes_"Invalid CORS request" to the response.;protected void rejectRequest(ServerHttpResponse response) throws IOException {_		response.setStatusCode(HttpStatus.FORBIDDEN)__		response.getBody().write("Invalid CORS request".getBytes(UTF8_CHARSET))__	};invoked,when,one,of,the,cors,checks,failed,the,default,implementation,sets,the,response,status,to,403,and,writes,invalid,cors,request,to,the,response;protected,void,reject,request,server,http,response,response,throws,ioexception,response,set,status,code,http,status,forbidden,response,get,body,write,invalid,cors,request,get,bytes
DefaultCorsProcessor -> protected void rejectRequest(ServerHttpResponse response) throws IOException;1436777959;Invoked when one of the CORS checks failed._The default implementation sets the response status to 403 and writes_"Invalid CORS request" to the response.;protected void rejectRequest(ServerHttpResponse response) throws IOException {_		response.setStatusCode(HttpStatus.FORBIDDEN)__		response.getBody().write("Invalid CORS request".getBytes(UTF8_CHARSET))__	};invoked,when,one,of,the,cors,checks,failed,the,default,implementation,sets,the,response,status,to,403,and,writes,invalid,cors,request,to,the,response;protected,void,reject,request,server,http,response,response,throws,ioexception,response,set,status,code,http,status,forbidden,response,get,body,write,invalid,cors,request,get,bytes
DefaultCorsProcessor -> protected void rejectRequest(ServerHttpResponse response) throws IOException;1438251419;Invoked when one of the CORS checks failed._The default implementation sets the response status to 403 and writes_"Invalid CORS request" to the response.;protected void rejectRequest(ServerHttpResponse response) throws IOException {_		response.setStatusCode(HttpStatus.FORBIDDEN)__		response.getBody().write("Invalid CORS request".getBytes(UTF8_CHARSET))__	};invoked,when,one,of,the,cors,checks,failed,the,default,implementation,sets,the,response,status,to,403,and,writes,invalid,cors,request,to,the,response;protected,void,reject,request,server,http,response,response,throws,ioexception,response,set,status,code,http,status,forbidden,response,get,body,write,invalid,cors,request,get,bytes
DefaultCorsProcessor -> protected void rejectRequest(ServerHttpResponse response) throws IOException;1443047594;Invoked when one of the CORS checks failed._The default implementation sets the response status to 403 and writes_"Invalid CORS request" to the response.;protected void rejectRequest(ServerHttpResponse response) throws IOException {_		response.setStatusCode(HttpStatus.FORBIDDEN)__		response.getBody().write("Invalid CORS request".getBytes(UTF8_CHARSET))__	};invoked,when,one,of,the,cors,checks,failed,the,default,implementation,sets,the,response,status,to,403,and,writes,invalid,cors,request,to,the,response;protected,void,reject,request,server,http,response,response,throws,ioexception,response,set,status,code,http,status,forbidden,response,get,body,write,invalid,cors,request,get,bytes
DefaultCorsProcessor -> protected void rejectRequest(ServerHttpResponse response) throws IOException;1450380453;Invoked when one of the CORS checks failed._The default implementation sets the response status to 403 and writes_"Invalid CORS request" to the response.;protected void rejectRequest(ServerHttpResponse response) throws IOException {_		response.setStatusCode(HttpStatus.FORBIDDEN)__		response.getBody().write("Invalid CORS request".getBytes(UTF8_CHARSET))__	};invoked,when,one,of,the,cors,checks,failed,the,default,implementation,sets,the,response,status,to,403,and,writes,invalid,cors,request,to,the,response;protected,void,reject,request,server,http,response,response,throws,ioexception,response,set,status,code,http,status,forbidden,response,get,body,write,invalid,cors,request,get,bytes
DefaultCorsProcessor -> protected void rejectRequest(ServerHttpResponse response) throws IOException;1458828499;Invoked when one of the CORS checks failed._The default implementation sets the response status to 403 and writes_"Invalid CORS request" to the response.;protected void rejectRequest(ServerHttpResponse response) throws IOException {_		response.setStatusCode(HttpStatus.FORBIDDEN)__		response.getBody().write("Invalid CORS request".getBytes(UTF8_CHARSET))__	};invoked,when,one,of,the,cors,checks,failed,the,default,implementation,sets,the,response,status,to,403,and,writes,invalid,cors,request,to,the,response;protected,void,reject,request,server,http,response,response,throws,ioexception,response,set,status,code,http,status,forbidden,response,get,body,write,invalid,cors,request,get,bytes
DefaultCorsProcessor -> protected void rejectRequest(ServerHttpResponse response) throws IOException;1467730834;Invoked when one of the CORS checks failed._The default implementation sets the response status to 403 and writes_"Invalid CORS request" to the response.;protected void rejectRequest(ServerHttpResponse response) throws IOException {_		response.setStatusCode(HttpStatus.FORBIDDEN)__		response.getBody().write("Invalid CORS request".getBytes(UTF8_CHARSET))__	};invoked,when,one,of,the,cors,checks,failed,the,default,implementation,sets,the,response,status,to,403,and,writes,invalid,cors,request,to,the,response;protected,void,reject,request,server,http,response,response,throws,ioexception,response,set,status,code,http,status,forbidden,response,get,body,write,invalid,cors,request,get,bytes
DefaultCorsProcessor -> protected void rejectRequest(ServerHttpResponse response) throws IOException;1468964586;Invoked when one of the CORS checks failed._The default implementation sets the response status to 403 and writes_"Invalid CORS request" to the response.;protected void rejectRequest(ServerHttpResponse response) throws IOException {_		response.setStatusCode(HttpStatus.FORBIDDEN)__		response.getBody().write("Invalid CORS request".getBytes(StandardCharsets.UTF_8))__	};invoked,when,one,of,the,cors,checks,failed,the,default,implementation,sets,the,response,status,to,403,and,writes,invalid,cors,request,to,the,response;protected,void,reject,request,server,http,response,response,throws,ioexception,response,set,status,code,http,status,forbidden,response,get,body,write,invalid,cors,request,get,bytes,standard,charsets
DefaultCorsProcessor -> protected void rejectRequest(ServerHttpResponse response) throws IOException;1496242568;Invoked when one of the CORS checks failed._The default implementation sets the response status to 403 and writes_"Invalid CORS request" to the response.;protected void rejectRequest(ServerHttpResponse response) throws IOException {_		response.setStatusCode(HttpStatus.FORBIDDEN)__		response.getBody().write("Invalid CORS request".getBytes(StandardCharsets.UTF_8))__	};invoked,when,one,of,the,cors,checks,failed,the,default,implementation,sets,the,response,status,to,403,and,writes,invalid,cors,request,to,the,response;protected,void,reject,request,server,http,response,response,throws,ioexception,response,set,status,code,http,status,forbidden,response,get,body,write,invalid,cors,request,get,bytes,standard,charsets
DefaultCorsProcessor -> protected void rejectRequest(ServerHttpResponse response) throws IOException;1496837955;Invoked when one of the CORS checks failed._The default implementation sets the response status to 403 and writes_"Invalid CORS request" to the response.;protected void rejectRequest(ServerHttpResponse response) throws IOException {_		response.setStatusCode(HttpStatus.FORBIDDEN)__		response.getBody().write("Invalid CORS request".getBytes(StandardCharsets.UTF_8))__	};invoked,when,one,of,the,cors,checks,failed,the,default,implementation,sets,the,response,status,to,403,and,writes,invalid,cors,request,to,the,response;protected,void,reject,request,server,http,response,response,throws,ioexception,response,set,status,code,http,status,forbidden,response,get,body,write,invalid,cors,request,get,bytes,standard,charsets
DefaultCorsProcessor -> protected void rejectRequest(ServerHttpResponse response) throws IOException;1499068063;Invoked when one of the CORS checks failed._The default implementation sets the response status to 403 and writes_"Invalid CORS request" to the response.;protected void rejectRequest(ServerHttpResponse response) throws IOException {_		response.setStatusCode(HttpStatus.FORBIDDEN)__		response.getBody().write("Invalid CORS request".getBytes(StandardCharsets.UTF_8))__	};invoked,when,one,of,the,cors,checks,failed,the,default,implementation,sets,the,response,status,to,403,and,writes,invalid,cors,request,to,the,response;protected,void,reject,request,server,http,response,response,throws,ioexception,response,set,status,code,http,status,forbidden,response,get,body,write,invalid,cors,request,get,bytes,standard,charsets
DefaultCorsProcessor -> protected void rejectRequest(ServerHttpResponse response) throws IOException;1508532146;Invoked when one of the CORS checks failed._The default implementation sets the response status to 403 and writes_"Invalid CORS request" to the response.;protected void rejectRequest(ServerHttpResponse response) throws IOException {_		response.setStatusCode(HttpStatus.FORBIDDEN)__		response.getBody().write("Invalid CORS request".getBytes(StandardCharsets.UTF_8))__	};invoked,when,one,of,the,cors,checks,failed,the,default,implementation,sets,the,response,status,to,403,and,writes,invalid,cors,request,to,the,response;protected,void,reject,request,server,http,response,response,throws,ioexception,response,set,status,code,http,status,forbidden,response,get,body,write,invalid,cors,request,get,bytes,standard,charsets
DefaultCorsProcessor -> protected void rejectRequest(ServerHttpResponse response) throws IOException;1511387213;Invoked when one of the CORS checks failed._The default implementation sets the response status to 403 and writes_"Invalid CORS request" to the response.;protected void rejectRequest(ServerHttpResponse response) throws IOException {_		response.setStatusCode(HttpStatus.FORBIDDEN)__		response.getBody().write("Invalid CORS request".getBytes(StandardCharsets.UTF_8))__	};invoked,when,one,of,the,cors,checks,failed,the,default,implementation,sets,the,response,status,to,403,and,writes,invalid,cors,request,to,the,response;protected,void,reject,request,server,http,response,response,throws,ioexception,response,set,status,code,http,status,forbidden,response,get,body,write,invalid,cors,request,get,bytes,standard,charsets
DefaultCorsProcessor -> protected void rejectRequest(ServerHttpResponse response) throws IOException;1517328032;Invoked when one of the CORS checks failed._The default implementation sets the response status to 403 and writes_"Invalid CORS request" to the response.;protected void rejectRequest(ServerHttpResponse response) throws IOException {_		response.setStatusCode(HttpStatus.FORBIDDEN)__		response.getBody().write("Invalid CORS request".getBytes(StandardCharsets.UTF_8))__	};invoked,when,one,of,the,cors,checks,failed,the,default,implementation,sets,the,response,status,to,403,and,writes,invalid,cors,request,to,the,response;protected,void,reject,request,server,http,response,response,throws,ioexception,response,set,status,code,http,status,forbidden,response,get,body,write,invalid,cors,request,get,bytes,standard,charsets
DefaultCorsProcessor -> protected void rejectRequest(ServerHttpResponse response) throws IOException;1529361191;Invoked when one of the CORS checks failed._The default implementation sets the response status to 403 and writes_"Invalid CORS request" to the response.;protected void rejectRequest(ServerHttpResponse response) throws IOException {_		response.setStatusCode(HttpStatus.FORBIDDEN)__		response.getBody().write("Invalid CORS request".getBytes(StandardCharsets.UTF_8))__	};invoked,when,one,of,the,cors,checks,failed,the,default,implementation,sets,the,response,status,to,403,and,writes,invalid,cors,request,to,the,response;protected,void,reject,request,server,http,response,response,throws,ioexception,response,set,status,code,http,status,forbidden,response,get,body,write,invalid,cors,request,get,bytes,standard,charsets
DefaultCorsProcessor -> protected void rejectRequest(ServerHttpResponse response) throws IOException;1529721864;Invoked when one of the CORS checks failed._The default implementation sets the response status to 403 and writes_"Invalid CORS request" to the response.;protected void rejectRequest(ServerHttpResponse response) throws IOException {_		response.setStatusCode(HttpStatus.FORBIDDEN)__		response.getBody().write("Invalid CORS request".getBytes(StandardCharsets.UTF_8))__	};invoked,when,one,of,the,cors,checks,failed,the,default,implementation,sets,the,response,status,to,403,and,writes,invalid,cors,request,to,the,response;protected,void,reject,request,server,http,response,response,throws,ioexception,response,set,status,code,http,status,forbidden,response,get,body,write,invalid,cors,request,get,bytes,standard,charsets
DefaultCorsProcessor -> protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders);1430811101;Check the headers and determine the headers for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)};protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders) {_		return config.checkHeaders(requestHeaders)__	};check,the,headers,and,determine,the,headers,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;protected,list,string,check,headers,cors,configuration,config,list,string,request,headers,return,config,check,headers,request,headers
DefaultCorsProcessor -> protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders);1431966054;Check the headers and determine the headers for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)};protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders) {_		return config.checkHeaders(requestHeaders)__	};check,the,headers,and,determine,the,headers,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;protected,list,string,check,headers,cors,configuration,config,list,string,request,headers,return,config,check,headers,request,headers
DefaultCorsProcessor -> protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders);1436200220;Check the headers and determine the headers for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)};protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders) {_		return config.checkHeaders(requestHeaders)__	};check,the,headers,and,determine,the,headers,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;protected,list,string,check,headers,cors,configuration,config,list,string,request,headers,return,config,check,headers,request,headers
DefaultCorsProcessor -> protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders);1436777959;Check the headers and determine the headers for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)};protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders) {_		return config.checkHeaders(requestHeaders)__	};check,the,headers,and,determine,the,headers,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;protected,list,string,check,headers,cors,configuration,config,list,string,request,headers,return,config,check,headers,request,headers
DefaultCorsProcessor -> protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders);1438251419;Check the headers and determine the headers for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)};protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders) {_		return config.checkHeaders(requestHeaders)__	};check,the,headers,and,determine,the,headers,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;protected,list,string,check,headers,cors,configuration,config,list,string,request,headers,return,config,check,headers,request,headers
DefaultCorsProcessor -> protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders);1443047594;Check the headers and determine the headers for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)};protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders) {_		return config.checkHeaders(requestHeaders)__	};check,the,headers,and,determine,the,headers,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;protected,list,string,check,headers,cors,configuration,config,list,string,request,headers,return,config,check,headers,request,headers
DefaultCorsProcessor -> protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders);1450380453;Check the headers and determine the headers for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)};protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders) {_		return config.checkHeaders(requestHeaders)__	};check,the,headers,and,determine,the,headers,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;protected,list,string,check,headers,cors,configuration,config,list,string,request,headers,return,config,check,headers,request,headers
DefaultCorsProcessor -> protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders);1458828499;Check the headers and determine the headers for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)}.;protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders) {_		return config.checkHeaders(requestHeaders)__	};check,the,headers,and,determine,the,headers,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;protected,list,string,check,headers,cors,configuration,config,list,string,request,headers,return,config,check,headers,request,headers
DefaultCorsProcessor -> protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders);1467730834;Check the headers and determine the headers for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)}.;protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders) {_		return config.checkHeaders(requestHeaders)__	};check,the,headers,and,determine,the,headers,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;protected,list,string,check,headers,cors,configuration,config,list,string,request,headers,return,config,check,headers,request,headers
DefaultCorsProcessor -> protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders);1468964586;Check the headers and determine the headers for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)}.;protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders) {_		return config.checkHeaders(requestHeaders)__	};check,the,headers,and,determine,the,headers,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;protected,list,string,check,headers,cors,configuration,config,list,string,request,headers,return,config,check,headers,request,headers
DefaultCorsProcessor -> protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders);1496242568;Check the headers and determine the headers for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)}.;protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders) {_		return config.checkHeaders(requestHeaders)__	};check,the,headers,and,determine,the,headers,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;protected,list,string,check,headers,cors,configuration,config,list,string,request,headers,return,config,check,headers,request,headers
DefaultCorsProcessor -> @Nullable 	protected List<HttpMethod> checkMethods(CorsConfiguration config, @Nullable HttpMethod requestMethod);1496837955;Check the HTTP method and determine the methods for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)}.;@Nullable_	protected List<HttpMethod> checkMethods(CorsConfiguration config, @Nullable HttpMethod requestMethod) {_		return config.checkHttpMethod(requestMethod)__	};check,the,http,method,and,determine,the,methods,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;nullable,protected,list,http,method,check,methods,cors,configuration,config,nullable,http,method,request,method,return,config,check,http,method,request,method
DefaultCorsProcessor -> @Nullable 	protected List<HttpMethod> checkMethods(CorsConfiguration config, @Nullable HttpMethod requestMethod);1499068063;Check the HTTP method and determine the methods for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)}.;@Nullable_	protected List<HttpMethod> checkMethods(CorsConfiguration config, @Nullable HttpMethod requestMethod) {_		return config.checkHttpMethod(requestMethod)__	};check,the,http,method,and,determine,the,methods,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;nullable,protected,list,http,method,check,methods,cors,configuration,config,nullable,http,method,request,method,return,config,check,http,method,request,method
DefaultCorsProcessor -> @Nullable 	protected List<HttpMethod> checkMethods(CorsConfiguration config, @Nullable HttpMethod requestMethod);1508532146;Check the HTTP method and determine the methods for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)}.;@Nullable_	protected List<HttpMethod> checkMethods(CorsConfiguration config, @Nullable HttpMethod requestMethod) {_		return config.checkHttpMethod(requestMethod)__	};check,the,http,method,and,determine,the,methods,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;nullable,protected,list,http,method,check,methods,cors,configuration,config,nullable,http,method,request,method,return,config,check,http,method,request,method
DefaultCorsProcessor -> @Nullable 	protected List<HttpMethod> checkMethods(CorsConfiguration config, @Nullable HttpMethod requestMethod);1511387213;Check the HTTP method and determine the methods for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)}.;@Nullable_	protected List<HttpMethod> checkMethods(CorsConfiguration config, @Nullable HttpMethod requestMethod) {_		return config.checkHttpMethod(requestMethod)__	};check,the,http,method,and,determine,the,methods,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;nullable,protected,list,http,method,check,methods,cors,configuration,config,nullable,http,method,request,method,return,config,check,http,method,request,method
DefaultCorsProcessor -> @Nullable 	protected List<HttpMethod> checkMethods(CorsConfiguration config, @Nullable HttpMethod requestMethod);1517328032;Check the HTTP method and determine the methods for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)}.;@Nullable_	protected List<HttpMethod> checkMethods(CorsConfiguration config, @Nullable HttpMethod requestMethod) {_		return config.checkHttpMethod(requestMethod)__	};check,the,http,method,and,determine,the,methods,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;nullable,protected,list,http,method,check,methods,cors,configuration,config,nullable,http,method,request,method,return,config,check,http,method,request,method
DefaultCorsProcessor -> @Nullable 	protected List<HttpMethod> checkMethods(CorsConfiguration config, @Nullable HttpMethod requestMethod);1529361191;Check the HTTP method and determine the methods for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)}.;@Nullable_	protected List<HttpMethod> checkMethods(CorsConfiguration config, @Nullable HttpMethod requestMethod) {_		return config.checkHttpMethod(requestMethod)__	};check,the,http,method,and,determine,the,methods,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;nullable,protected,list,http,method,check,methods,cors,configuration,config,nullable,http,method,request,method,return,config,check,http,method,request,method
DefaultCorsProcessor -> @Nullable 	protected List<HttpMethod> checkMethods(CorsConfiguration config, @Nullable HttpMethod requestMethod);1529721864;Check the HTTP method and determine the methods for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)}.;@Nullable_	protected List<HttpMethod> checkMethods(CorsConfiguration config, @Nullable HttpMethod requestMethod) {_		return config.checkHttpMethod(requestMethod)__	};check,the,http,method,and,determine,the,methods,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;nullable,protected,list,http,method,check,methods,cors,configuration,config,nullable,http,method,request,method,return,config,check,http,method,request,method
DefaultCorsProcessor -> @Nullable 	protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders);1496837955;Check the headers and determine the headers for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)}.;@Nullable_	protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders) {_		return config.checkHeaders(requestHeaders)__	};check,the,headers,and,determine,the,headers,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;nullable,protected,list,string,check,headers,cors,configuration,config,list,string,request,headers,return,config,check,headers,request,headers
DefaultCorsProcessor -> @Nullable 	protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders);1499068063;Check the headers and determine the headers for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)}.;@Nullable_	protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders) {_		return config.checkHeaders(requestHeaders)__	};check,the,headers,and,determine,the,headers,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;nullable,protected,list,string,check,headers,cors,configuration,config,list,string,request,headers,return,config,check,headers,request,headers
DefaultCorsProcessor -> @Nullable 	protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders);1508532146;Check the headers and determine the headers for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)}.;@Nullable_	protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders) {_		return config.checkHeaders(requestHeaders)__	};check,the,headers,and,determine,the,headers,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;nullable,protected,list,string,check,headers,cors,configuration,config,list,string,request,headers,return,config,check,headers,request,headers
DefaultCorsProcessor -> @Nullable 	protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders);1511387213;Check the headers and determine the headers for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)}.;@Nullable_	protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders) {_		return config.checkHeaders(requestHeaders)__	};check,the,headers,and,determine,the,headers,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;nullable,protected,list,string,check,headers,cors,configuration,config,list,string,request,headers,return,config,check,headers,request,headers
DefaultCorsProcessor -> @Nullable 	protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders);1517328032;Check the headers and determine the headers for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)}.;@Nullable_	protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders) {_		return config.checkHeaders(requestHeaders)__	};check,the,headers,and,determine,the,headers,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;nullable,protected,list,string,check,headers,cors,configuration,config,list,string,request,headers,return,config,check,headers,request,headers
DefaultCorsProcessor -> @Nullable 	protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders);1529361191;Check the headers and determine the headers for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)}.;@Nullable_	protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders) {_		return config.checkHeaders(requestHeaders)__	};check,the,headers,and,determine,the,headers,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;nullable,protected,list,string,check,headers,cors,configuration,config,list,string,request,headers,return,config,check,headers,request,headers
DefaultCorsProcessor -> @Nullable 	protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders);1529721864;Check the headers and determine the headers for the response of a_pre-flight request. The default implementation simply delegates to_{@link org.springframework.web.cors.CorsConfiguration#checkOrigin(String)}.;@Nullable_	protected List<String> checkHeaders(CorsConfiguration config, List<String> requestHeaders) {_		return config.checkHeaders(requestHeaders)__	};check,the,headers,and,determine,the,headers,for,the,response,of,a,pre,flight,request,the,default,implementation,simply,delegates,to,link,org,springframework,web,cors,cors,configuration,check,origin,string;nullable,protected,list,string,check,headers,cors,configuration,config,list,string,request,headers,return,config,check,headers,request,headers
