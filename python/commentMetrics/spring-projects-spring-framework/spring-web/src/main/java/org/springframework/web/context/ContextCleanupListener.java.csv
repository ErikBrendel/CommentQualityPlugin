# id;timestamp;commentText;codeText;commentWords;codeWords
ContextCleanupListener -> static void cleanupAttributes(ServletContext sc);1328020251;Find all ServletContext attributes which implement {@link DisposableBean}_and destroy them, removing all affected ServletContext attributes eventually._@param sc the ServletContext to check;static void cleanupAttributes(ServletContext sc) {_		Enumeration attrNames = sc.getAttributeNames()__		while (attrNames.hasMoreElements()) {_			String attrName = (String) attrNames.nextElement()__			if (attrName.startsWith("org.springframework.")) {_				Object attrValue = sc.getAttribute(attrName)__				if (attrValue instanceof DisposableBean) {_					try {_						((DisposableBean) attrValue).destroy()__					}_					catch (Throwable ex) {_						logger.error("Couldn't invoke destroy method of attribute with name '" + attrName + "'", ex)__					}_				}_			}_		}_	};find,all,servlet,context,attributes,which,implement,link,disposable,bean,and,destroy,them,removing,all,affected,servlet,context,attributes,eventually,param,sc,the,servlet,context,to,check;static,void,cleanup,attributes,servlet,context,sc,enumeration,attr,names,sc,get,attribute,names,while,attr,names,has,more,elements,string,attr,name,string,attr,names,next,element,if,attr,name,starts,with,org,springframework,object,attr,value,sc,get,attribute,attr,name,if,attr,value,instanceof,disposable,bean,try,disposable,bean,attr,value,destroy,catch,throwable,ex,logger,error,couldn,t,invoke,destroy,method,of,attribute,with,name,attr,name,ex
ContextCleanupListener -> static void cleanupAttributes(ServletContext sc);1356735495;Find all ServletContext attributes which implement {@link DisposableBean}_and destroy them, removing all affected ServletContext attributes eventually._@param sc the ServletContext to check;static void cleanupAttributes(ServletContext sc) {_		Enumeration attrNames = sc.getAttributeNames()__		while (attrNames.hasMoreElements()) {_			String attrName = (String) attrNames.nextElement()__			if (attrName.startsWith("org.springframework.")) {_				Object attrValue = sc.getAttribute(attrName)__				if (attrValue instanceof DisposableBean) {_					try {_						((DisposableBean) attrValue).destroy()__					}_					catch (Throwable ex) {_						logger.error("Couldn't invoke destroy method of attribute with name '" + attrName + "'", ex)__					}_				}_			}_		}_	};find,all,servlet,context,attributes,which,implement,link,disposable,bean,and,destroy,them,removing,all,affected,servlet,context,attributes,eventually,param,sc,the,servlet,context,to,check;static,void,cleanup,attributes,servlet,context,sc,enumeration,attr,names,sc,get,attribute,names,while,attr,names,has,more,elements,string,attr,name,string,attr,names,next,element,if,attr,name,starts,with,org,springframework,object,attr,value,sc,get,attribute,attr,name,if,attr,value,instanceof,disposable,bean,try,disposable,bean,attr,value,destroy,catch,throwable,ex,logger,error,couldn,t,invoke,destroy,method,of,attribute,with,name,attr,name,ex
ContextCleanupListener -> static void cleanupAttributes(ServletContext sc);1357119239;Find all ServletContext attributes which implement {@link DisposableBean}_and destroy them, removing all affected ServletContext attributes eventually._@param sc the ServletContext to check;static void cleanupAttributes(ServletContext sc) {_		Enumeration attrNames = sc.getAttributeNames()__		while (attrNames.hasMoreElements()) {_			String attrName = (String) attrNames.nextElement()__			if (attrName.startsWith("org.springframework.")) {_				Object attrValue = sc.getAttribute(attrName)__				if (attrValue instanceof DisposableBean) {_					try {_						((DisposableBean) attrValue).destroy()__					}_					catch (Throwable ex) {_						logger.error("Couldn't invoke destroy method of attribute with name '" + attrName + "'", ex)__					}_				}_			}_		}_	};find,all,servlet,context,attributes,which,implement,link,disposable,bean,and,destroy,them,removing,all,affected,servlet,context,attributes,eventually,param,sc,the,servlet,context,to,check;static,void,cleanup,attributes,servlet,context,sc,enumeration,attr,names,sc,get,attribute,names,while,attr,names,has,more,elements,string,attr,name,string,attr,names,next,element,if,attr,name,starts,with,org,springframework,object,attr,value,sc,get,attribute,attr,name,if,attr,value,instanceof,disposable,bean,try,disposable,bean,attr,value,destroy,catch,throwable,ex,logger,error,couldn,t,invoke,destroy,method,of,attribute,with,name,attr,name,ex
ContextCleanupListener -> static void cleanupAttributes(ServletContext sc);1368482696;Find all ServletContext attributes which implement {@link DisposableBean}_and destroy them, removing all affected ServletContext attributes eventually._@param sc the ServletContext to check;static void cleanupAttributes(ServletContext sc) {_		Enumeration attrNames = sc.getAttributeNames()__		while (attrNames.hasMoreElements()) {_			String attrName = (String) attrNames.nextElement()__			if (attrName.startsWith("org.springframework.")) {_				Object attrValue = sc.getAttribute(attrName)__				if (attrValue instanceof DisposableBean) {_					try {_						((DisposableBean) attrValue).destroy()__					}_					catch (Throwable ex) {_						logger.error("Couldn't invoke destroy method of attribute with name '" + attrName + "'", ex)__					}_				}_			}_		}_	};find,all,servlet,context,attributes,which,implement,link,disposable,bean,and,destroy,them,removing,all,affected,servlet,context,attributes,eventually,param,sc,the,servlet,context,to,check;static,void,cleanup,attributes,servlet,context,sc,enumeration,attr,names,sc,get,attribute,names,while,attr,names,has,more,elements,string,attr,name,string,attr,names,next,element,if,attr,name,starts,with,org,springframework,object,attr,value,sc,get,attribute,attr,name,if,attr,value,instanceof,disposable,bean,try,disposable,bean,attr,value,destroy,catch,throwable,ex,logger,error,couldn,t,invoke,destroy,method,of,attribute,with,name,attr,name,ex
ContextCleanupListener -> static void cleanupAttributes(ServletContext sc);1385412762;Find all ServletContext attributes which implement {@link DisposableBean}_and destroy them, removing all affected ServletContext attributes eventually._@param sc the ServletContext to check;static void cleanupAttributes(ServletContext sc) {_		Enumeration<String> attrNames = sc.getAttributeNames()__		while (attrNames.hasMoreElements()) {_			String attrName = attrNames.nextElement()__			if (attrName.startsWith("org.springframework.")) {_				Object attrValue = sc.getAttribute(attrName)__				if (attrValue instanceof DisposableBean) {_					try {_						((DisposableBean) attrValue).destroy()__					}_					catch (Throwable ex) {_						logger.error("Couldn't invoke destroy method of attribute with name '" + attrName + "'", ex)__					}_				}_			}_		}_	};find,all,servlet,context,attributes,which,implement,link,disposable,bean,and,destroy,them,removing,all,affected,servlet,context,attributes,eventually,param,sc,the,servlet,context,to,check;static,void,cleanup,attributes,servlet,context,sc,enumeration,string,attr,names,sc,get,attribute,names,while,attr,names,has,more,elements,string,attr,name,attr,names,next,element,if,attr,name,starts,with,org,springframework,object,attr,value,sc,get,attribute,attr,name,if,attr,value,instanceof,disposable,bean,try,disposable,bean,attr,value,destroy,catch,throwable,ex,logger,error,couldn,t,invoke,destroy,method,of,attribute,with,name,attr,name,ex
