commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * Returns the portion of the URL path that represents the application.  * The context path is always at the beginning of the path and starts but  * does not end with "/". It is shared for URLs of the same application.  * <p>The context path may come from the underlying runtime API such as  * when deploying as a WAR to a Servlet container or it may be assigned in  * a WebFlux application through the use of  * {@link org.springframework.http.server.reactive.ContextPathCompositeHandler  * ContextPathCompositeHandler}.  */ ;/**  * Returns the portion of the URL path that represents the application.  * The context path is always at the beginning of the path and starts but  * does not end with "/". It is shared for URLs of the same application.  * <p>The context path may come from the underlying runtime API such as  * when deploying as a WAR to a Servlet container or it may be assigned in  * a WebFlux application through the use of  * {@link org.springframework.http.server.reactive.ContextPathCompositeHandler  * ContextPathCompositeHandler}.  */ PathContainer contextPath().
true;;0;1;/**  * The portion of the request path after the context path.  */ ;/**  * The portion of the request path after the context path.  */ PathContainer pathWithinApplication().
true;;1;1;/**  * Return a new {@code RequestPath} instance with a modified context path.  * The new context path must match 0 or more path segments at the start.  * @param contextPath the new context path  * @return a new {@code RequestPath} instance  */ ;/**  * Return a new {@code RequestPath} instance with a modified context path.  * The new context path must match 0 or more path segments at the start.  * @param contextPath the new context path  * @return a new {@code RequestPath} instance  */ RequestPath modifyContextPath(String contextPath).
true;static;2;3;/**  * Create a new {@code RequestPath} with the given parameters.  */ ;/**  * Create a new {@code RequestPath} with the given parameters.  */ static RequestPath parse(URI uri, @Nullable String contextPath) {     return new DefaultRequestPath(uri, contextPath). }
