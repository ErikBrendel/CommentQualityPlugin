commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public void onStartup(ServletContext servletContext) throws ServletException {     registerContextLoaderListener(servletContext). }
true;protected;1;12;/**  * Register a {@link ContextLoaderListener} against the given servlet context. The  * {@code ContextLoaderListener} is initialized with the application context returned  * from the {@link #createRootApplicationContext()} template method.  * @param servletContext the servlet context to register the listener against  */ ;/**  * Register a {@link ContextLoaderListener} against the given servlet context. The  * {@code ContextLoaderListener} is initialized with the application context returned  * from the {@link #createRootApplicationContext()} template method.  * @param servletContext the servlet context to register the listener against  */ protected void registerContextLoaderListener(ServletContext servletContext) {     WebApplicationContext rootAppContext = createRootApplicationContext().     if (rootAppContext != null) {         ContextLoaderListener listener = new ContextLoaderListener(rootAppContext).         listener.setContextInitializers(getRootApplicationContextInitializers()).         servletContext.addListener(listener).     } else {         logger.debug("No ContextLoaderListener registered, as " + "createRootApplicationContext() did not return an application context").     } }
true;protected,abstract;0;2;/**  * Create the "<strong>root</strong>" application context to be provided to the  * {@code ContextLoaderListener}.  * <p>The returned context is delegated to  * {@link ContextLoaderListener#ContextLoaderListener(WebApplicationContext)} and will  * be established as the parent context for any {@code DispatcherServlet} application  * contexts. As such, it typically contains middle-tier services, data sources, etc.  * @return the root application context, or {@code null} if a root context is not  * desired  * @see org.springframework.web.servlet.support.AbstractDispatcherServletInitializer  */ ;/**  * Create the "<strong>root</strong>" application context to be provided to the  * {@code ContextLoaderListener}.  * <p>The returned context is delegated to  * {@link ContextLoaderListener#ContextLoaderListener(WebApplicationContext)} and will  * be established as the parent context for any {@code DispatcherServlet} application  * contexts. As such, it typically contains middle-tier services, data sources, etc.  * @return the root application context, or {@code null} if a root context is not  * desired  * @see org.springframework.web.servlet.support.AbstractDispatcherServletInitializer  */ @Nullable protected abstract WebApplicationContext createRootApplicationContext().
true;protected;0;4;/**  * Specify application context initializers to be applied to the root application  * context that the {@code ContextLoaderListener} is being created with.  * @since 4.2  * @see #createRootApplicationContext()  * @see ContextLoaderListener#setContextInitializers  */ ;/**  * Specify application context initializers to be applied to the root application  * context that the {@code ContextLoaderListener} is being created with.  * @since 4.2  * @see #createRootApplicationContext()  * @see ContextLoaderListener#setContextInitializers  */ @Nullable protected ApplicationContextInitializer<?>[] getRootApplicationContextInitializers() {     return null. }
