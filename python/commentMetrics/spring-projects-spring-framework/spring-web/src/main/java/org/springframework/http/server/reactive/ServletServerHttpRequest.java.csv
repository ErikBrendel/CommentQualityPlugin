# id;timestamp;commentText;codeText;commentWords;codeWords
ServletServerHttpRequest -> void handleAsyncListenerComplete();1476901704;Handle a complete callback from the Servlet container;void handleAsyncListenerComplete() {_		if (this.bodyPublisher != null) {_			this.bodyPublisher.onAllDataRead()__		}_	};handle,a,complete,callback,from,the,servlet,container;void,handle,async,listener,complete,if,this,body,publisher,null,this,body,publisher,on,all,data,read
ServletServerHttpRequest -> void handleAsyncListenerComplete();1477077448;Handle a complete callback from the Servlet container;void handleAsyncListenerComplete() {_		if (this.bodyPublisher != null) {_			this.bodyPublisher.onAllDataRead()__		}_	};handle,a,complete,callback,from,the,servlet,container;void,handle,async,listener,complete,if,this,body,publisher,null,this,body,publisher,on,all,data,read
ServletServerHttpRequest -> void handleAsyncListenerComplete();1477078197;Handle a complete callback from the Servlet container;void handleAsyncListenerComplete() {_		if (this.bodyPublisher != null) {_			this.bodyPublisher.onAllDataRead()__		}_	};handle,a,complete,callback,from,the,servlet,container;void,handle,async,listener,complete,if,this,body,publisher,null,this,body,publisher,on,all,data,read
ServletServerHttpRequest -> void handleAsyncListenerComplete();1481583450;Handle a complete callback from the Servlet container;void handleAsyncListenerComplete() {_		if (this.bodyPublisher != null) {_			this.bodyPublisher.onAllDataRead()__		}_	};handle,a,complete,callback,from,the,servlet,container;void,handle,async,listener,complete,if,this,body,publisher,null,this,body,publisher,on,all,data,read
ServletServerHttpRequest -> protected DataBuffer readFromInputStream() throws IOException;1485434266;Read from the request body InputStream and return a DataBuffer._Invoked only when {@link ServletInputStream#isReady()} returns "true".;protected DataBuffer readFromInputStream() throws IOException {_		int read = this.request.getInputStream().read(this.buffer)__		if (logger.isTraceEnabled()) {_			logger.trace("read:" + read)__		}__		if (read > 0) {_			DataBuffer dataBuffer = this.bufferFactory.allocateBuffer(read)__			dataBuffer.write(this.buffer, 0, read)__			return dataBuffer__		}__		return null__	};read,from,the,request,body,input,stream,and,return,a,data,buffer,invoked,only,when,link,servlet,input,stream,is,ready,returns,true;protected,data,buffer,read,from,input,stream,throws,ioexception,int,read,this,request,get,input,stream,read,this,buffer,if,logger,is,trace,enabled,logger,trace,read,read,if,read,0,data,buffer,data,buffer,this,buffer,factory,allocate,buffer,read,data,buffer,write,this,buffer,0,read,return,data,buffer,return,null
ServletServerHttpRequest -> protected DataBuffer readFromInputStream() throws IOException;1485893064;Read from the request body InputStream and return a DataBuffer._Invoked only when {@link ServletInputStream#isReady()} returns "true".;protected DataBuffer readFromInputStream() throws IOException {_		int read = this.request.getInputStream().read(this.buffer)__		if (logger.isTraceEnabled()) {_			logger.trace("read:" + read)__		}__		if (read > 0) {_			DataBuffer dataBuffer = this.bufferFactory.allocateBuffer(read)__			dataBuffer.write(this.buffer, 0, read)__			return dataBuffer__		}__		return null__	};read,from,the,request,body,input,stream,and,return,a,data,buffer,invoked,only,when,link,servlet,input,stream,is,ready,returns,true;protected,data,buffer,read,from,input,stream,throws,ioexception,int,read,this,request,get,input,stream,read,this,buffer,if,logger,is,trace,enabled,logger,trace,read,read,if,read,0,data,buffer,data,buffer,this,buffer,factory,allocate,buffer,read,data,buffer,write,this,buffer,0,read,return,data,buffer,return,null
ServletServerHttpRequest -> protected DataBuffer readFromInputStream() throws IOException;1495569915;Read from the request body InputStream and return a DataBuffer._Invoked only when {@link ServletInputStream#isReady()} returns "true".;protected DataBuffer readFromInputStream() throws IOException {_		int read = this.request.getInputStream().read(this.buffer)__		if (logger.isTraceEnabled()) {_			logger.trace("read:" + read)__		}__		if (read > 0) {_			DataBuffer dataBuffer = this.bufferFactory.allocateBuffer(read)__			dataBuffer.write(this.buffer, 0, read)__			return dataBuffer__		}__		return null__	};read,from,the,request,body,input,stream,and,return,a,data,buffer,invoked,only,when,link,servlet,input,stream,is,ready,returns,true;protected,data,buffer,read,from,input,stream,throws,ioexception,int,read,this,request,get,input,stream,read,this,buffer,if,logger,is,trace,enabled,logger,trace,read,read,if,read,0,data,buffer,data,buffer,this,buffer,factory,allocate,buffer,read,data,buffer,write,this,buffer,0,read,return,data,buffer,return,null
ServletServerHttpRequest -> protected DataBuffer readFromInputStream() throws IOException;1495636618;Read from the request body InputStream and return a DataBuffer._Invoked only when {@link ServletInputStream#isReady()} returns "true".;protected DataBuffer readFromInputStream() throws IOException {_		int read = this.request.getInputStream().read(this.buffer)__		if (logger.isTraceEnabled()) {_			logger.trace("read:" + read)__		}__		if (read > 0) {_			DataBuffer dataBuffer = this.bufferFactory.allocateBuffer(read)__			dataBuffer.write(this.buffer, 0, read)__			return dataBuffer__		}__		return null__	};read,from,the,request,body,input,stream,and,return,a,data,buffer,invoked,only,when,link,servlet,input,stream,is,ready,returns,true;protected,data,buffer,read,from,input,stream,throws,ioexception,int,read,this,request,get,input,stream,read,this,buffer,if,logger,is,trace,enabled,logger,trace,read,read,if,read,0,data,buffer,data,buffer,this,buffer,factory,allocate,buffer,read,data,buffer,write,this,buffer,0,read,return,data,buffer,return,null
ServletServerHttpRequest -> void handleAsyncListenerError(Throwable ex);1476390802;Handle a timeout/error callback from the Servlet container;void handleAsyncListenerError(Throwable ex) {_		if (this.bodyPublisher != null) {_			this.bodyPublisher.onError(ex)__		}_	};handle,a,timeout,error,callback,from,the,servlet,container;void,handle,async,listener,error,throwable,ex,if,this,body,publisher,null,this,body,publisher,on,error,ex
ServletServerHttpRequest -> void handleAsyncListenerError(Throwable ex);1476901704;Handle a timeout/error callback from the Servlet container;void handleAsyncListenerError(Throwable ex) {_		if (this.bodyPublisher != null) {_			this.bodyPublisher.onError(ex)__		}_	};handle,a,timeout,error,callback,from,the,servlet,container;void,handle,async,listener,error,throwable,ex,if,this,body,publisher,null,this,body,publisher,on,error,ex
ServletServerHttpRequest -> void handleAsyncListenerError(Throwable ex);1477077448;Handle a timeout/error callback from the Servlet container;void handleAsyncListenerError(Throwable ex) {_		if (this.bodyPublisher != null) {_			this.bodyPublisher.onError(ex)__		}_	};handle,a,timeout,error,callback,from,the,servlet,container;void,handle,async,listener,error,throwable,ex,if,this,body,publisher,null,this,body,publisher,on,error,ex
ServletServerHttpRequest -> void handleAsyncListenerError(Throwable ex);1477078197;Handle a timeout/error callback from the Servlet container;void handleAsyncListenerError(Throwable ex) {_		if (this.bodyPublisher != null) {_			this.bodyPublisher.onError(ex)__		}_	};handle,a,timeout,error,callback,from,the,servlet,container;void,handle,async,listener,error,throwable,ex,if,this,body,publisher,null,this,body,publisher,on,error,ex
ServletServerHttpRequest -> void handleAsyncListenerError(Throwable ex);1481583450;Handle a timeout/error callback from the Servlet container;void handleAsyncListenerError(Throwable ex) {_		if (this.bodyPublisher != null) {_			this.bodyPublisher.onError(ex)__		}_	};handle,a,timeout,error,callback,from,the,servlet,container;void,handle,async,listener,error,throwable,ex,if,this,body,publisher,null,this,body,publisher,on,error,ex
ServletServerHttpRequest -> @Nullable 	protected DataBuffer readFromInputStream() throws IOException;1495868221;Read from the request body InputStream and return a DataBuffer._Invoked only when {@link ServletInputStream#isReady()} returns "true".;@Nullable_	protected DataBuffer readFromInputStream() throws IOException {_		int read = this.request.getInputStream().read(this.buffer)__		if (logger.isTraceEnabled()) {_			logger.trace("read:" + read)__		}__		if (read > 0) {_			DataBuffer dataBuffer = this.bufferFactory.allocateBuffer(read)__			dataBuffer.write(this.buffer, 0, read)__			return dataBuffer__		}__		return null__	};read,from,the,request,body,input,stream,and,return,a,data,buffer,invoked,only,when,link,servlet,input,stream,is,ready,returns,true;nullable,protected,data,buffer,read,from,input,stream,throws,ioexception,int,read,this,request,get,input,stream,read,this,buffer,if,logger,is,trace,enabled,logger,trace,read,read,if,read,0,data,buffer,data,buffer,this,buffer,factory,allocate,buffer,read,data,buffer,write,this,buffer,0,read,return,data,buffer,return,null
ServletServerHttpRequest -> @Nullable 	protected DataBuffer readFromInputStream() throws IOException;1497232764;Read from the request body InputStream and return a DataBuffer._Invoked only when {@link ServletInputStream#isReady()} returns "true".;@Nullable_	protected DataBuffer readFromInputStream() throws IOException {_		int read = this.request.getInputStream().read(this.buffer)__		if (logger.isTraceEnabled()) {_			logger.trace("read:" + read)__		}__		if (read > 0) {_			DataBuffer dataBuffer = this.bufferFactory.allocateBuffer(read)__			dataBuffer.write(this.buffer, 0, read)__			return dataBuffer__		}__		return null__	};read,from,the,request,body,input,stream,and,return,a,data,buffer,invoked,only,when,link,servlet,input,stream,is,ready,returns,true;nullable,protected,data,buffer,read,from,input,stream,throws,ioexception,int,read,this,request,get,input,stream,read,this,buffer,if,logger,is,trace,enabled,logger,trace,read,read,if,read,0,data,buffer,data,buffer,this,buffer,factory,allocate,buffer,read,data,buffer,write,this,buffer,0,read,return,data,buffer,return,null
ServletServerHttpRequest -> @Nullable 	protected DataBuffer readFromInputStream() throws IOException;1502974979;Read from the request body InputStream and return a DataBuffer._Invoked only when {@link ServletInputStream#isReady()} returns "true".;@Nullable_	protected DataBuffer readFromInputStream() throws IOException {_		int read = this.request.getInputStream().read(this.buffer)__		if (logger.isTraceEnabled()) {_			logger.trace("read:" + read)__		}__		if (read > 0) {_			DataBuffer dataBuffer = this.bufferFactory.allocateBuffer(read)__			dataBuffer.write(this.buffer, 0, read)__			return dataBuffer__		}__		return null__	};read,from,the,request,body,input,stream,and,return,a,data,buffer,invoked,only,when,link,servlet,input,stream,is,ready,returns,true;nullable,protected,data,buffer,read,from,input,stream,throws,ioexception,int,read,this,request,get,input,stream,read,this,buffer,if,logger,is,trace,enabled,logger,trace,read,read,if,read,0,data,buffer,data,buffer,this,buffer,factory,allocate,buffer,read,data,buffer,write,this,buffer,0,read,return,data,buffer,return,null
ServletServerHttpRequest -> @Nullable 	protected DataBuffer readFromInputStream() throws IOException;1506704643;Read from the request body InputStream and return a DataBuffer._Invoked only when {@link ServletInputStream#isReady()} returns "true".;@Nullable_	protected DataBuffer readFromInputStream() throws IOException {_		int read = this.request.getInputStream().read(this.buffer)__		if (logger.isTraceEnabled()) {_			logger.trace("read:" + read)__		}__		if (read > 0) {_			DataBuffer dataBuffer = this.bufferFactory.allocateBuffer(read)__			dataBuffer.write(this.buffer, 0, read)__			return dataBuffer__		}__		return null__	};read,from,the,request,body,input,stream,and,return,a,data,buffer,invoked,only,when,link,servlet,input,stream,is,ready,returns,true;nullable,protected,data,buffer,read,from,input,stream,throws,ioexception,int,read,this,request,get,input,stream,read,this,buffer,if,logger,is,trace,enabled,logger,trace,read,read,if,read,0,data,buffer,data,buffer,this,buffer,factory,allocate,buffer,read,data,buffer,write,this,buffer,0,read,return,data,buffer,return,null
ServletServerHttpRequest -> @Nullable 	protected DataBuffer readFromInputStream() throws IOException;1509670406;Read from the request body InputStream and return a DataBuffer._Invoked only when {@link ServletInputStream#isReady()} returns "true".;@Nullable_	protected DataBuffer readFromInputStream() throws IOException {_		int read = this.request.getInputStream().read(this.buffer)__		if (logger.isTraceEnabled()) {_			logger.trace("read:" + read)__		}__		if (read > 0) {_			DataBuffer dataBuffer = this.bufferFactory.allocateBuffer(read)__			dataBuffer.write(this.buffer, 0, read)__			return dataBuffer__		}__		return null__	};read,from,the,request,body,input,stream,and,return,a,data,buffer,invoked,only,when,link,servlet,input,stream,is,ready,returns,true;nullable,protected,data,buffer,read,from,input,stream,throws,ioexception,int,read,this,request,get,input,stream,read,this,buffer,if,logger,is,trace,enabled,logger,trace,read,read,if,read,0,data,buffer,data,buffer,this,buffer,factory,allocate,buffer,read,data,buffer,write,this,buffer,0,read,return,data,buffer,return,null
ServletServerHttpRequest -> @Nullable 	protected DataBuffer readFromInputStream() throws IOException;1510350192;Read from the request body InputStream and return a DataBuffer._Invoked only when {@link ServletInputStream#isReady()} returns "true".;@Nullable_	protected DataBuffer readFromInputStream() throws IOException {_		int read = this.request.getInputStream().read(this.buffer)__		if (logger.isTraceEnabled()) {_			logger.trace("read:" + read)__		}__		if (read > 0) {_			DataBuffer dataBuffer = this.bufferFactory.allocateBuffer(read)__			dataBuffer.write(this.buffer, 0, read)__			return dataBuffer__		}__		return null__	};read,from,the,request,body,input,stream,and,return,a,data,buffer,invoked,only,when,link,servlet,input,stream,is,ready,returns,true;nullable,protected,data,buffer,read,from,input,stream,throws,ioexception,int,read,this,request,get,input,stream,read,this,buffer,if,logger,is,trace,enabled,logger,trace,read,read,if,read,0,data,buffer,data,buffer,this,buffer,factory,allocate,buffer,read,data,buffer,write,this,buffer,0,read,return,data,buffer,return,null
ServletServerHttpRequest -> @Nullable 	protected DataBuffer readFromInputStream() throws IOException;1511324413;Read from the request body InputStream and return a DataBuffer._Invoked only when {@link ServletInputStream#isReady()} returns "true".;@Nullable_	protected DataBuffer readFromInputStream() throws IOException {_		int read = this.request.getInputStream().read(this.buffer)__		if (logger.isTraceEnabled()) {_			logger.trace("read:" + read)__		}__		if (read > 0) {_			DataBuffer dataBuffer = this.bufferFactory.allocateBuffer(read)__			dataBuffer.write(this.buffer, 0, read)__			return dataBuffer__		}__		return null__	};read,from,the,request,body,input,stream,and,return,a,data,buffer,invoked,only,when,link,servlet,input,stream,is,ready,returns,true;nullable,protected,data,buffer,read,from,input,stream,throws,ioexception,int,read,this,request,get,input,stream,read,this,buffer,if,logger,is,trace,enabled,logger,trace,read,read,if,read,0,data,buffer,data,buffer,this,buffer,factory,allocate,buffer,read,data,buffer,write,this,buffer,0,read,return,data,buffer,return,null
ServletServerHttpRequest -> @Nullable 	protected DataBuffer readFromInputStream() throws IOException;1511390883;Read from the request body InputStream and return a DataBuffer._Invoked only when {@link ServletInputStream#isReady()} returns "true".;@Nullable_	protected DataBuffer readFromInputStream() throws IOException {_		int read = this.request.getInputStream().read(this.buffer)__		if (logger.isTraceEnabled()) {_			logger.trace("read:" + read)__		}__		if (read > 0) {_			DataBuffer dataBuffer = this.bufferFactory.allocateBuffer(read)__			dataBuffer.write(this.buffer, 0, read)__			return dataBuffer__		}__		return null__	};read,from,the,request,body,input,stream,and,return,a,data,buffer,invoked,only,when,link,servlet,input,stream,is,ready,returns,true;nullable,protected,data,buffer,read,from,input,stream,throws,ioexception,int,read,this,request,get,input,stream,read,this,buffer,if,logger,is,trace,enabled,logger,trace,read,read,if,read,0,data,buffer,data,buffer,this,buffer,factory,allocate,buffer,read,data,buffer,write,this,buffer,0,read,return,data,buffer,return,null
ServletServerHttpRequest -> @Nullable 	protected DataBuffer readFromInputStream() throws IOException;1511411136;Read from the request body InputStream and return a DataBuffer._Invoked only when {@link ServletInputStream#isReady()} returns "true".;@Nullable_	protected DataBuffer readFromInputStream() throws IOException {_		int read = this.request.getInputStream().read(this.buffer)__		if (logger.isTraceEnabled()) {_			logger.trace("InputStream read returned " + read + (read != -1 ? " bytes" : ""))__		}__		if (read > 0) {_			DataBuffer dataBuffer = this.bufferFactory.allocateBuffer(read)__			dataBuffer.write(this.buffer, 0, read)__			return dataBuffer__		}__		return null__	};read,from,the,request,body,input,stream,and,return,a,data,buffer,invoked,only,when,link,servlet,input,stream,is,ready,returns,true;nullable,protected,data,buffer,read,from,input,stream,throws,ioexception,int,read,this,request,get,input,stream,read,this,buffer,if,logger,is,trace,enabled,logger,trace,input,stream,read,returned,read,read,1,bytes,if,read,0,data,buffer,data,buffer,this,buffer,factory,allocate,buffer,read,data,buffer,write,this,buffer,0,read,return,data,buffer,return,null
ServletServerHttpRequest -> @Nullable 	protected DataBuffer readFromInputStream() throws IOException;1518792317;Read from the request body InputStream and return a DataBuffer._Invoked only when {@link ServletInputStream#isReady()} returns "true".;@Nullable_	protected DataBuffer readFromInputStream() throws IOException {_		int read = this.request.getInputStream().read(this.buffer)__		if (logger.isTraceEnabled()) {_			logger.trace("InputStream read returned " + read + (read != -1 ? " bytes" : ""))__		}__		if (read > 0) {_			DataBuffer dataBuffer = this.bufferFactory.allocateBuffer(read)__			dataBuffer.write(this.buffer, 0, read)__			return dataBuffer__		}__		return null__	};read,from,the,request,body,input,stream,and,return,a,data,buffer,invoked,only,when,link,servlet,input,stream,is,ready,returns,true;nullable,protected,data,buffer,read,from,input,stream,throws,ioexception,int,read,this,request,get,input,stream,read,this,buffer,if,logger,is,trace,enabled,logger,trace,input,stream,read,returned,read,read,1,bytes,if,read,0,data,buffer,data,buffer,this,buffer,factory,allocate,buffer,read,data,buffer,write,this,buffer,0,read,return,data,buffer,return,null
ServletServerHttpRequest -> @Nullable 	DataBuffer readFromInputStream() throws IOException;1519224264;Read from the request body InputStream and return a DataBuffer._Invoked only when {@link ServletInputStream#isReady()} returns "true".;@Nullable_	DataBuffer readFromInputStream() throws IOException {_		int read = this.request.getInputStream().read(this.buffer)__		if (logger.isTraceEnabled()) {_			logger.trace("InputStream read returned " + read + (read != -1 ? " bytes" : ""))__		}__		if (read > 0) {_			DataBuffer dataBuffer = this.bufferFactory.allocateBuffer(read)__			dataBuffer.write(this.buffer, 0, read)__			return dataBuffer__		}_		else if (read == -1) {_			return EOF_BUFFER__		}__		return null__	};read,from,the,request,body,input,stream,and,return,a,data,buffer,invoked,only,when,link,servlet,input,stream,is,ready,returns,true;nullable,data,buffer,read,from,input,stream,throws,ioexception,int,read,this,request,get,input,stream,read,this,buffer,if,logger,is,trace,enabled,logger,trace,input,stream,read,returned,read,read,1,bytes,if,read,0,data,buffer,data,buffer,this,buffer,factory,allocate,buffer,read,data,buffer,write,this,buffer,0,read,return,data,buffer,else,if,read,1,return,return,null
ServletServerHttpRequest -> @Nullable 	DataBuffer readFromInputStream() throws IOException;1520439790;Read from the request body InputStream and return a DataBuffer._Invoked only when {@link ServletInputStream#isReady()} returns "true".;@Nullable_	DataBuffer readFromInputStream() throws IOException {_		int read = this.request.getInputStream().read(this.buffer)__		if (logger.isTraceEnabled()) {_			logger.trace("InputStream read returned " + read + (read != -1 ? " bytes" : ""))__		}__		if (read > 0) {_			DataBuffer dataBuffer = this.bufferFactory.allocateBuffer(read)__			dataBuffer.write(this.buffer, 0, read)__			return dataBuffer__		}_		else if (read == -1) {_			return EOF_BUFFER__		}__		return null__	};read,from,the,request,body,input,stream,and,return,a,data,buffer,invoked,only,when,link,servlet,input,stream,is,ready,returns,true;nullable,data,buffer,read,from,input,stream,throws,ioexception,int,read,this,request,get,input,stream,read,this,buffer,if,logger,is,trace,enabled,logger,trace,input,stream,read,returned,read,read,1,bytes,if,read,0,data,buffer,data,buffer,this,buffer,factory,allocate,buffer,read,data,buffer,write,this,buffer,0,read,return,data,buffer,else,if,read,1,return,return,null
ServletServerHttpRequest -> @Nullable 	DataBuffer readFromInputStream() throws IOException;1523887174;Read from the request body InputStream and return a DataBuffer._Invoked only when {@link ServletInputStream#isReady()} returns "true"._@return a DataBuffer with data read, or {@link #EOF_BUFFER} if the input_stream returned -1, or null if 0 bytes were read.;@Nullable_	DataBuffer readFromInputStream() throws IOException {_		int read = this.request.getInputStream().read(this.buffer)__		if (logger.isTraceEnabled()) {_			logger.trace("InputStream read returned " + read + (read != -1 ? " bytes" : ""))__		}__		if (read > 0) {_			DataBuffer dataBuffer = this.bufferFactory.allocateBuffer(read)__			dataBuffer.write(this.buffer, 0, read)__			return dataBuffer__		}__		if (read == -1) {_			return EOF_BUFFER__		}__		return null__	};read,from,the,request,body,input,stream,and,return,a,data,buffer,invoked,only,when,link,servlet,input,stream,is,ready,returns,true,return,a,data,buffer,with,data,read,or,link,if,the,input,stream,returned,1,or,null,if,0,bytes,were,read;nullable,data,buffer,read,from,input,stream,throws,ioexception,int,read,this,request,get,input,stream,read,this,buffer,if,logger,is,trace,enabled,logger,trace,input,stream,read,returned,read,read,1,bytes,if,read,0,data,buffer,data,buffer,this,buffer,factory,allocate,buffer,read,data,buffer,write,this,buffer,0,read,return,data,buffer,if,read,1,return,return,null
ServletServerHttpRequest -> @Nullable 	DataBuffer readFromInputStream() throws IOException;1525136556;Read from the request body InputStream and return a DataBuffer._Invoked only when {@link ServletInputStream#isReady()} returns "true"._@return a DataBuffer with data read, or {@link #EOF_BUFFER} if the input_stream returned -1, or null if 0 bytes were read.;@Nullable_	DataBuffer readFromInputStream() throws IOException {_		int read = this.request.getInputStream().read(this.buffer)__		if (logger.isTraceEnabled()) {_			logger.trace("InputStream read returned " + read + (read != -1 ? " bytes" : ""))__		}__		if (read > 0) {_			DataBuffer dataBuffer = this.bufferFactory.allocateBuffer(read)__			dataBuffer.write(this.buffer, 0, read)__			return dataBuffer__		}__		if (read == -1) {_			return EOF_BUFFER__		}__		return null__	};read,from,the,request,body,input,stream,and,return,a,data,buffer,invoked,only,when,link,servlet,input,stream,is,ready,returns,true,return,a,data,buffer,with,data,read,or,link,if,the,input,stream,returned,1,or,null,if,0,bytes,were,read;nullable,data,buffer,read,from,input,stream,throws,ioexception,int,read,this,request,get,input,stream,read,this,buffer,if,logger,is,trace,enabled,logger,trace,input,stream,read,returned,read,read,1,bytes,if,read,0,data,buffer,data,buffer,this,buffer,factory,allocate,buffer,read,data,buffer,write,this,buffer,0,read,return,data,buffer,if,read,1,return,return,null
ServletServerHttpRequest -> @Nullable 	DataBuffer readFromInputStream() throws IOException;1527125003;Read from the request body InputStream and return a DataBuffer._Invoked only when {@link ServletInputStream#isReady()} returns "true"._@return a DataBuffer with data read, or {@link #EOF_BUFFER} if the input_stream returned -1, or null if 0 bytes were read.;@Nullable_	DataBuffer readFromInputStream() throws IOException {_		int read = this.request.getInputStream().read(this.buffer)__		if (logger.isTraceEnabled()) {_			logger.trace("InputStream read returned " + read + (read != -1 ? " bytes" : ""))__		}__		if (read > 0) {_			DataBuffer dataBuffer = this.bufferFactory.allocateBuffer(read)__			dataBuffer.write(this.buffer, 0, read)__			return dataBuffer__		}__		if (read == -1) {_			return EOF_BUFFER__		}__		return null__	};read,from,the,request,body,input,stream,and,return,a,data,buffer,invoked,only,when,link,servlet,input,stream,is,ready,returns,true,return,a,data,buffer,with,data,read,or,link,if,the,input,stream,returned,1,or,null,if,0,bytes,were,read;nullable,data,buffer,read,from,input,stream,throws,ioexception,int,read,this,request,get,input,stream,read,this,buffer,if,logger,is,trace,enabled,logger,trace,input,stream,read,returned,read,read,1,bytes,if,read,0,data,buffer,data,buffer,this,buffer,factory,allocate,buffer,read,data,buffer,write,this,buffer,0,read,return,data,buffer,if,read,1,return,return,null
ServletServerHttpRequest -> @Nullable 	DataBuffer readFromInputStream() throws IOException;1529721864;Read from the request body InputStream and return a DataBuffer._Invoked only when {@link ServletInputStream#isReady()} returns "true"._@return a DataBuffer with data read, or {@link #EOF_BUFFER} if the input_stream returned -1, or null if 0 bytes were read.;@Nullable_	DataBuffer readFromInputStream() throws IOException {_		int read = this.request.getInputStream().read(this.buffer)__		if (logger.isTraceEnabled()) {_			logger.trace("InputStream.read returned " + read + (read != -1 ? " bytes" : ""))__		}__		if (read > 0) {_			DataBuffer dataBuffer = this.bufferFactory.allocateBuffer(read)__			dataBuffer.write(this.buffer, 0, read)__			return dataBuffer__		}__		if (read == -1) {_			return EOF_BUFFER__		}__		return null__	};read,from,the,request,body,input,stream,and,return,a,data,buffer,invoked,only,when,link,servlet,input,stream,is,ready,returns,true,return,a,data,buffer,with,data,read,or,link,if,the,input,stream,returned,1,or,null,if,0,bytes,were,read;nullable,data,buffer,read,from,input,stream,throws,ioexception,int,read,this,request,get,input,stream,read,this,buffer,if,logger,is,trace,enabled,logger,trace,input,stream,read,returned,read,read,1,bytes,if,read,0,data,buffer,data,buffer,this,buffer,factory,allocate,buffer,read,data,buffer,write,this,buffer,0,read,return,data,buffer,if,read,1,return,return,null
ServletServerHttpRequest -> @Nullable 	DataBuffer readFromInputStream() throws IOException;1530174524;Read from the request body InputStream and return a DataBuffer._Invoked only when {@link ServletInputStream#isReady()} returns "true"._@return a DataBuffer with data read, or {@link #EOF_BUFFER} if the input_stream returned -1, or null if 0 bytes were read.;@Nullable_	DataBuffer readFromInputStream() throws IOException {_		int read = this.request.getInputStream().read(this.buffer)__		if (logger.isTraceEnabled()) {_			logger.trace("InputStream.read returned " + read + (read != -1 ? " bytes" : ""))__		}__		if (read > 0) {_			DataBuffer dataBuffer = this.bufferFactory.allocateBuffer(read)__			dataBuffer.write(this.buffer, 0, read)__			return dataBuffer__		}__		if (read == -1) {_			return EOF_BUFFER__		}__		return null__	};read,from,the,request,body,input,stream,and,return,a,data,buffer,invoked,only,when,link,servlet,input,stream,is,ready,returns,true,return,a,data,buffer,with,data,read,or,link,if,the,input,stream,returned,1,or,null,if,0,bytes,were,read;nullable,data,buffer,read,from,input,stream,throws,ioexception,int,read,this,request,get,input,stream,read,this,buffer,if,logger,is,trace,enabled,logger,trace,input,stream,read,returned,read,read,1,bytes,if,read,0,data,buffer,data,buffer,this,buffer,factory,allocate,buffer,read,data,buffer,write,this,buffer,0,read,return,data,buffer,if,read,1,return,return,null
ServletServerHttpRequest -> @Nullable 	DataBuffer readFromInputStream() throws IOException;1530906258;Read from the request body InputStream and return a DataBuffer._Invoked only when {@link ServletInputStream#isReady()} returns "true"._@return a DataBuffer with data read, or {@link #EOF_BUFFER} if the input_stream returned -1, or null if 0 bytes were read.;@Nullable_	DataBuffer readFromInputStream() throws IOException {_		int read = this.request.getInputStream().read(this.buffer)__		if (logger.isTraceEnabled()) {_			logger.trace(getLogPrefix() + "InputStream.read returned " + read + (read != -1 ? " bytes" : ""))__		}__		if (read > 0) {_			DataBuffer dataBuffer = this.bufferFactory.allocateBuffer(read)__			dataBuffer.write(this.buffer, 0, read)__			return dataBuffer__		}__		if (read == -1) {_			return EOF_BUFFER__		}__		return null__	};read,from,the,request,body,input,stream,and,return,a,data,buffer,invoked,only,when,link,servlet,input,stream,is,ready,returns,true,return,a,data,buffer,with,data,read,or,link,if,the,input,stream,returned,1,or,null,if,0,bytes,were,read;nullable,data,buffer,read,from,input,stream,throws,ioexception,int,read,this,request,get,input,stream,read,this,buffer,if,logger,is,trace,enabled,logger,trace,get,log,prefix,input,stream,read,returned,read,read,1,bytes,if,read,0,data,buffer,data,buffer,this,buffer,factory,allocate,buffer,read,data,buffer,write,this,buffer,0,read,return,data,buffer,if,read,1,return,return,null
ServletServerHttpRequest -> @Nullable 	DataBuffer readFromInputStream() throws IOException;1530912796;Read from the request body InputStream and return a DataBuffer._Invoked only when {@link ServletInputStream#isReady()} returns "true"._@return a DataBuffer with data read, or {@link #EOF_BUFFER} if the input_stream returned -1, or null if 0 bytes were read.;@Nullable_	DataBuffer readFromInputStream() throws IOException {_		int read = this.request.getInputStream().read(this.buffer)__		if (logger.isTraceEnabled()) {_			logger.trace(getLogPrefix() + "Read " + read + (read != -1 ? " bytes" : ""))__		}_		else {_			Log rsReadLogger = AbstractListenerReadPublisher.rsReadLogger__			if (rsReadLogger.isTraceEnabled()) {_				rsReadLogger.trace(getLogPrefix() + "Read " + read + (read != -1 ? " bytes" : ""))__			}_		}__		if (read > 0) {_			DataBuffer dataBuffer = this.bufferFactory.allocateBuffer(read)__			dataBuffer.write(this.buffer, 0, read)__			return dataBuffer__		}__		if (read == -1) {_			return EOF_BUFFER__		}__		return null__	};read,from,the,request,body,input,stream,and,return,a,data,buffer,invoked,only,when,link,servlet,input,stream,is,ready,returns,true,return,a,data,buffer,with,data,read,or,link,if,the,input,stream,returned,1,or,null,if,0,bytes,were,read;nullable,data,buffer,read,from,input,stream,throws,ioexception,int,read,this,request,get,input,stream,read,this,buffer,if,logger,is,trace,enabled,logger,trace,get,log,prefix,read,read,read,1,bytes,else,log,rs,read,logger,abstract,listener,read,publisher,rs,read,logger,if,rs,read,logger,is,trace,enabled,rs,read,logger,trace,get,log,prefix,read,read,read,1,bytes,if,read,0,data,buffer,data,buffer,this,buffer,factory,allocate,buffer,read,data,buffer,write,this,buffer,0,read,return,data,buffer,if,read,1,return,return,null
ServletServerHttpRequest -> @Nullable 	DataBuffer readFromInputStream() throws IOException;1531321803;Read from the request body InputStream and return a DataBuffer._Invoked only when {@link ServletInputStream#isReady()} returns "true"._@return a DataBuffer with data read, or {@link #EOF_BUFFER} if the input_stream returned -1, or null if 0 bytes were read.;@Nullable_	DataBuffer readFromInputStream() throws IOException {_		int read = this.request.getInputStream().read(this.buffer)__		logBytesRead(read)___		if (read > 0) {_			DataBuffer dataBuffer = this.bufferFactory.allocateBuffer(read)__			dataBuffer.write(this.buffer, 0, read)__			return dataBuffer__		}__		if (read == -1) {_			return EOF_BUFFER__		}__		return null__	};read,from,the,request,body,input,stream,and,return,a,data,buffer,invoked,only,when,link,servlet,input,stream,is,ready,returns,true,return,a,data,buffer,with,data,read,or,link,if,the,input,stream,returned,1,or,null,if,0,bytes,were,read;nullable,data,buffer,read,from,input,stream,throws,ioexception,int,read,this,request,get,input,stream,read,this,buffer,log,bytes,read,read,if,read,0,data,buffer,data,buffer,this,buffer,factory,allocate,buffer,read,data,buffer,write,this,buffer,0,read,return,data,buffer,if,read,1,return,return,null
ServletServerHttpRequest -> @Nullable 	DataBuffer readFromInputStream() throws IOException;1539252707;Read from the request body InputStream and return a DataBuffer._Invoked only when {@link ServletInputStream#isReady()} returns "true"._@return a DataBuffer with data read, or {@link #EOF_BUFFER} if the input_stream returned -1, or null if 0 bytes were read.;@Nullable_	DataBuffer readFromInputStream() throws IOException {_		int read = this.request.getInputStream().read(this.buffer)__		logBytesRead(read)___		if (read > 0) {_			DataBuffer dataBuffer = this.bufferFactory.allocateBuffer(read)__			dataBuffer.write(this.buffer, 0, read)__			return dataBuffer__		}__		if (read == -1) {_			return EOF_BUFFER__		}__		return null__	};read,from,the,request,body,input,stream,and,return,a,data,buffer,invoked,only,when,link,servlet,input,stream,is,ready,returns,true,return,a,data,buffer,with,data,read,or,link,if,the,input,stream,returned,1,or,null,if,0,bytes,were,read;nullable,data,buffer,read,from,input,stream,throws,ioexception,int,read,this,request,get,input,stream,read,this,buffer,log,bytes,read,read,if,read,0,data,buffer,data,buffer,this,buffer,factory,allocate,buffer,read,data,buffer,write,this,buffer,0,read,return,data,buffer,if,read,1,return,return,null
ServletServerHttpRequest -> @Nullable 	DataBuffer readFromInputStream() throws IOException;1539999914;Read from the request body InputStream and return a DataBuffer._Invoked only when {@link ServletInputStream#isReady()} returns "true"._@return a DataBuffer with data read, or {@link #EOF_BUFFER} if the input_stream returned -1, or null if 0 bytes were read.;@Nullable_	DataBuffer readFromInputStream() throws IOException {_		int read = this.request.getInputStream().read(this.buffer)__		logBytesRead(read)___		if (read > 0) {_			DataBuffer dataBuffer = this.bufferFactory.allocateBuffer(read)__			dataBuffer.write(this.buffer, 0, read)__			return dataBuffer__		}__		if (read == -1) {_			return EOF_BUFFER__		}__		return null__	};read,from,the,request,body,input,stream,and,return,a,data,buffer,invoked,only,when,link,servlet,input,stream,is,ready,returns,true,return,a,data,buffer,with,data,read,or,link,if,the,input,stream,returned,1,or,null,if,0,bytes,were,read;nullable,data,buffer,read,from,input,stream,throws,ioexception,int,read,this,request,get,input,stream,read,this,buffer,log,bytes,read,read,if,read,0,data,buffer,data,buffer,this,buffer,factory,allocate,buffer,read,data,buffer,write,this,buffer,0,read,return,data,buffer,if,read,1,return,return,null
