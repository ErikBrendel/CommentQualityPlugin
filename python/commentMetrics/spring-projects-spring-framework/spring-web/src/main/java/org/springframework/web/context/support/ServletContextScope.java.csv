# id;timestamp;commentText;codeText;commentWords;codeWords
ServletContextScope -> public ServletContextScope(ServletContext servletContext);1328020251;Create a new Scope wrapper for the given ServletContext._@param servletContext the ServletContext to wrap;public ServletContextScope(ServletContext servletContext) {_		Assert.notNull(servletContext, "ServletContext must not be null")__		this.servletContext = servletContext__	};create,a,new,scope,wrapper,for,the,given,servlet,context,param,servlet,context,the,servlet,context,to,wrap;public,servlet,context,scope,servlet,context,servlet,context,assert,not,null,servlet,context,servlet,context,must,not,be,null,this,servlet,context,servlet,context
ServletContextScope -> public ServletContextScope(ServletContext servletContext);1356735495;Create a new Scope wrapper for the given ServletContext._@param servletContext the ServletContext to wrap;public ServletContextScope(ServletContext servletContext) {_		Assert.notNull(servletContext, "ServletContext must not be null")__		this.servletContext = servletContext__	};create,a,new,scope,wrapper,for,the,given,servlet,context,param,servlet,context,the,servlet,context,to,wrap;public,servlet,context,scope,servlet,context,servlet,context,assert,not,null,servlet,context,servlet,context,must,not,be,null,this,servlet,context,servlet,context
ServletContextScope -> public ServletContextScope(ServletContext servletContext);1357119239;Create a new Scope wrapper for the given ServletContext._@param servletContext the ServletContext to wrap;public ServletContextScope(ServletContext servletContext) {_		Assert.notNull(servletContext, "ServletContext must not be null")__		this.servletContext = servletContext__	};create,a,new,scope,wrapper,for,the,given,servlet,context,param,servlet,context,the,servlet,context,to,wrap;public,servlet,context,scope,servlet,context,servlet,context,assert,not,null,servlet,context,servlet,context,must,not,be,null,this,servlet,context,servlet,context
ServletContextScope -> public ServletContextScope(ServletContext servletContext);1368482696;Create a new Scope wrapper for the given ServletContext._@param servletContext the ServletContext to wrap;public ServletContextScope(ServletContext servletContext) {_		Assert.notNull(servletContext, "ServletContext must not be null")__		this.servletContext = servletContext__	};create,a,new,scope,wrapper,for,the,given,servlet,context,param,servlet,context,the,servlet,context,to,wrap;public,servlet,context,scope,servlet,context,servlet,context,assert,not,null,servlet,context,servlet,context,must,not,be,null,this,servlet,context,servlet,context
ServletContextScope -> public ServletContextScope(ServletContext servletContext);1467730834;Create a new Scope wrapper for the given ServletContext._@param servletContext the ServletContext to wrap;public ServletContextScope(ServletContext servletContext) {_		Assert.notNull(servletContext, "ServletContext must not be null")__		this.servletContext = servletContext__	};create,a,new,scope,wrapper,for,the,given,servlet,context,param,servlet,context,the,servlet,context,to,wrap;public,servlet,context,scope,servlet,context,servlet,context,assert,not,null,servlet,context,servlet,context,must,not,be,null,this,servlet,context,servlet,context
ServletContextScope -> public ServletContextScope(ServletContext servletContext);1496837955;Create a new Scope wrapper for the given ServletContext._@param servletContext the ServletContext to wrap;public ServletContextScope(ServletContext servletContext) {_		Assert.notNull(servletContext, "ServletContext must not be null")__		this.servletContext = servletContext__	};create,a,new,scope,wrapper,for,the,given,servlet,context,param,servlet,context,the,servlet,context,to,wrap;public,servlet,context,scope,servlet,context,servlet,context,assert,not,null,servlet,context,servlet,context,must,not,be,null,this,servlet,context,servlet,context
ServletContextScope -> public ServletContextScope(ServletContext servletContext);1502974979;Create a new Scope wrapper for the given ServletContext._@param servletContext the ServletContext to wrap;public ServletContextScope(ServletContext servletContext) {_		Assert.notNull(servletContext, "ServletContext must not be null")__		this.servletContext = servletContext__	};create,a,new,scope,wrapper,for,the,given,servlet,context,param,servlet,context,the,servlet,context,to,wrap;public,servlet,context,scope,servlet,context,servlet,context,assert,not,null,servlet,context,servlet,context,must,not,be,null,this,servlet,context,servlet,context
ServletContextScope -> public ServletContextScope(ServletContext servletContext);1503007895;Create a new Scope wrapper for the given ServletContext._@param servletContext the ServletContext to wrap;public ServletContextScope(ServletContext servletContext) {_		Assert.notNull(servletContext, "ServletContext must not be null")__		this.servletContext = servletContext__	};create,a,new,scope,wrapper,for,the,given,servlet,context,param,servlet,context,the,servlet,context,to,wrap;public,servlet,context,scope,servlet,context,servlet,context,assert,not,null,servlet,context,servlet,context,must,not,be,null,this,servlet,context,servlet,context
ServletContextScope -> @Override 	public void destroy();1356735495;Invoke all registered destruction callbacks._To be called on ServletContext shutdown._@see org.springframework.web.context.ContextCleanupListener;@Override_	public void destroy() {_		for (Runnable runnable : this.destructionCallbacks.values()) {_			runnable.run()__		}_		this.destructionCallbacks.clear()__	};invoke,all,registered,destruction,callbacks,to,be,called,on,servlet,context,shutdown,see,org,springframework,web,context,context,cleanup,listener;override,public,void,destroy,for,runnable,runnable,this,destruction,callbacks,values,runnable,run,this,destruction,callbacks,clear
ServletContextScope -> @Override 	public void destroy();1368482696;Invoke all registered destruction callbacks._To be called on ServletContext shutdown._@see org.springframework.web.context.ContextCleanupListener;@Override_	public void destroy() {_		for (Runnable runnable : this.destructionCallbacks.values()) {_			runnable.run()__		}_		this.destructionCallbacks.clear()__	};invoke,all,registered,destruction,callbacks,to,be,called,on,servlet,context,shutdown,see,org,springframework,web,context,context,cleanup,listener;override,public,void,destroy,for,runnable,runnable,this,destruction,callbacks,values,runnable,run,this,destruction,callbacks,clear
ServletContextScope -> @Override 	public void destroy();1467730834;Invoke all registered destruction callbacks._To be called on ServletContext shutdown._@see org.springframework.web.context.ContextCleanupListener;@Override_	public void destroy() {_		for (Runnable runnable : this.destructionCallbacks.values()) {_			runnable.run()__		}_		this.destructionCallbacks.clear()__	};invoke,all,registered,destruction,callbacks,to,be,called,on,servlet,context,shutdown,see,org,springframework,web,context,context,cleanup,listener;override,public,void,destroy,for,runnable,runnable,this,destruction,callbacks,values,runnable,run,this,destruction,callbacks,clear
ServletContextScope -> @Override 	public void destroy();1496837955;Invoke all registered destruction callbacks._To be called on ServletContext shutdown._@see org.springframework.web.context.ContextCleanupListener;@Override_	public void destroy() {_		for (Runnable runnable : this.destructionCallbacks.values()) {_			runnable.run()__		}_		this.destructionCallbacks.clear()__	};invoke,all,registered,destruction,callbacks,to,be,called,on,servlet,context,shutdown,see,org,springframework,web,context,context,cleanup,listener;override,public,void,destroy,for,runnable,runnable,this,destruction,callbacks,values,runnable,run,this,destruction,callbacks,clear
ServletContextScope -> @Override 	public void destroy();1502974979;Invoke all registered destruction callbacks._To be called on ServletContext shutdown._@see org.springframework.web.context.ContextCleanupListener;@Override_	public void destroy() {_		for (Runnable runnable : this.destructionCallbacks.values()) {_			runnable.run()__		}_		this.destructionCallbacks.clear()__	};invoke,all,registered,destruction,callbacks,to,be,called,on,servlet,context,shutdown,see,org,springframework,web,context,context,cleanup,listener;override,public,void,destroy,for,runnable,runnable,this,destruction,callbacks,values,runnable,run,this,destruction,callbacks,clear
ServletContextScope -> @Override 	public void destroy();1503007895;Invoke all registered destruction callbacks._To be called on ServletContext shutdown._@see org.springframework.web.context.ContextCleanupListener;@Override_	public void destroy() {_		for (Runnable runnable : this.destructionCallbacks.values()) {_			runnable.run()__		}_		this.destructionCallbacks.clear()__	};invoke,all,registered,destruction,callbacks,to,be,called,on,servlet,context,shutdown,see,org,springframework,web,context,context,cleanup,listener;override,public,void,destroy,for,runnable,runnable,this,destruction,callbacks,values,runnable,run,this,destruction,callbacks,clear
ServletContextScope -> public void destroy();1328020251;Invoke all registered destruction callbacks._To be called on ServletContext shutdown._@see org.springframework.web.context.ContextCleanupListener;public void destroy() {_		for (Runnable runnable : this.destructionCallbacks.values()) {_			runnable.run()__		}_		this.destructionCallbacks.clear()__	};invoke,all,registered,destruction,callbacks,to,be,called,on,servlet,context,shutdown,see,org,springframework,web,context,context,cleanup,listener;public,void,destroy,for,runnable,runnable,this,destruction,callbacks,values,runnable,run,this,destruction,callbacks,clear
ServletContextScope -> public void destroy();1357119239;Invoke all registered destruction callbacks._To be called on ServletContext shutdown._@see org.springframework.web.context.ContextCleanupListener;public void destroy() {_		for (Runnable runnable : this.destructionCallbacks.values()) {_			runnable.run()__		}_		this.destructionCallbacks.clear()__	};invoke,all,registered,destruction,callbacks,to,be,called,on,servlet,context,shutdown,see,org,springframework,web,context,context,cleanup,listener;public,void,destroy,for,runnable,runnable,this,destruction,callbacks,values,runnable,run,this,destruction,callbacks,clear
