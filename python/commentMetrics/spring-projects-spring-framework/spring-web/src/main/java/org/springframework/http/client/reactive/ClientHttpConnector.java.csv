# id;timestamp;commentText;codeText;commentWords;codeWords
ClientHttpConnector -> Mono<ClientHttpResponse> connect(HttpMethod method, URI uri, 			Function<? super ClientHttpRequest, Mono<Void>> requestCallback)_;1468513835;Connect to the origin server using the given {@code HttpMethod} and {@code URI},_then apply the given {@code requestCallback} on the {@link ClientHttpRequest}_once the connection has been established._<p>Return a publisher of the {@link ClientHttpResponse}.__@param method the HTTP request method_@param uri the HTTP request URI_@param requestCallback a function that prepares and writes the request,_returning a publisher that signals when it's done interacting with the request._Implementations should return a {@code Mono<Void>} by calling_{@link ClientHttpRequest#writeWith} or {@link ClientHttpRequest#setComplete}._@return a publisher of the {@link ClientHttpResponse};Mono<ClientHttpResponse> connect(HttpMethod method, URI uri,_			Function<? super ClientHttpRequest, Mono<Void>> requestCallback)_;connect,to,the,origin,server,using,the,given,code,http,method,and,code,uri,then,apply,the,given,code,request,callback,on,the,link,client,http,request,once,the,connection,has,been,established,p,return,a,publisher,of,the,link,client,http,response,param,method,the,http,request,method,param,uri,the,http,request,uri,param,request,callback,a,function,that,prepares,and,writes,the,request,returning,a,publisher,that,signals,when,it,s,done,interacting,with,the,request,implementations,should,return,a,code,mono,void,by,calling,link,client,http,request,write,with,or,link,client,http,request,set,complete,return,a,publisher,of,the,link,client,http,response;mono,client,http,response,connect,http,method,method,uri,uri,function,super,client,http,request,mono,void,request,callback
ClientHttpConnector -> Mono<ClientHttpResponse> connect(HttpMethod method, URI uri, 			Function<? super ClientHttpRequest, Mono<Void>> requestCallback)_;1468532417;Connect to the origin server using the given {@code HttpMethod} and {@code URI},_then apply the given {@code requestCallback} on the {@link ClientHttpRequest}_once the connection has been established._<p>Return a publisher of the {@link ClientHttpResponse}.__@param method the HTTP request method_@param uri the HTTP request URI_@param requestCallback a function that prepares and writes the request,_returning a publisher that signals when it's done interacting with the request._Implementations should return a {@code Mono<Void>} by calling_{@link ClientHttpRequest#writeWith} or {@link ClientHttpRequest#setComplete}._@return a publisher of the {@link ClientHttpResponse};Mono<ClientHttpResponse> connect(HttpMethod method, URI uri,_			Function<? super ClientHttpRequest, Mono<Void>> requestCallback)_;connect,to,the,origin,server,using,the,given,code,http,method,and,code,uri,then,apply,the,given,code,request,callback,on,the,link,client,http,request,once,the,connection,has,been,established,p,return,a,publisher,of,the,link,client,http,response,param,method,the,http,request,method,param,uri,the,http,request,uri,param,request,callback,a,function,that,prepares,and,writes,the,request,returning,a,publisher,that,signals,when,it,s,done,interacting,with,the,request,implementations,should,return,a,code,mono,void,by,calling,link,client,http,request,write,with,or,link,client,http,request,set,complete,return,a,publisher,of,the,link,client,http,response;mono,client,http,response,connect,http,method,method,uri,uri,function,super,client,http,request,mono,void,request,callback
ClientHttpConnector -> Mono<ClientHttpResponse> connect(HttpMethod method, URI uri, 			Function<? super ClientHttpRequest, Mono<Void>> requestCallback)_;1468868355;Connect to the origin server using the given {@code HttpMethod} and_{@code URI}, then apply the given {@code requestCallback} on the_{@link ClientHttpRequest} once the connection has been established._<p>Return a publisher of the {@link ClientHttpResponse}.__@param method the HTTP request method_@param uri the HTTP request URI_@param requestCallback a function that prepares and writes the request,_returning a publisher that signals when it's done interacting with the_request. Implementations should return a {@code Mono<Void>} by calling_{@link ClientHttpRequest#writeWith} or {@link ClientHttpRequest#setComplete}._@return a publisher of the {@link ClientHttpResponse};Mono<ClientHttpResponse> connect(HttpMethod method, URI uri,_			Function<? super ClientHttpRequest, Mono<Void>> requestCallback)_;connect,to,the,origin,server,using,the,given,code,http,method,and,code,uri,then,apply,the,given,code,request,callback,on,the,link,client,http,request,once,the,connection,has,been,established,p,return,a,publisher,of,the,link,client,http,response,param,method,the,http,request,method,param,uri,the,http,request,uri,param,request,callback,a,function,that,prepares,and,writes,the,request,returning,a,publisher,that,signals,when,it,s,done,interacting,with,the,request,implementations,should,return,a,code,mono,void,by,calling,link,client,http,request,write,with,or,link,client,http,request,set,complete,return,a,publisher,of,the,link,client,http,response;mono,client,http,response,connect,http,method,method,uri,uri,function,super,client,http,request,mono,void,request,callback
ClientHttpConnector -> Mono<ClientHttpResponse> connect(HttpMethod method, URI uri, 			Function<? super ClientHttpRequest, Mono<Void>> requestCallback)_;1497380366;Connect to the origin server using the given {@code HttpMethod} and_{@code URI}, then apply the given {@code requestCallback} on the_{@link ClientHttpRequest} once the connection has been established._<p>Return a publisher of the {@link ClientHttpResponse}._@param method the HTTP request method_@param uri the HTTP request URI_@param requestCallback a function that prepares and writes the request,_returning a publisher that signals when it's done interacting with the_request. Implementations should return a {@code Mono<Void>} by calling_{@link ClientHttpRequest#writeWith} or {@link ClientHttpRequest#setComplete}._@return a publisher of the {@link ClientHttpResponse};Mono<ClientHttpResponse> connect(HttpMethod method, URI uri,_			Function<? super ClientHttpRequest, Mono<Void>> requestCallback)_;connect,to,the,origin,server,using,the,given,code,http,method,and,code,uri,then,apply,the,given,code,request,callback,on,the,link,client,http,request,once,the,connection,has,been,established,p,return,a,publisher,of,the,link,client,http,response,param,method,the,http,request,method,param,uri,the,http,request,uri,param,request,callback,a,function,that,prepares,and,writes,the,request,returning,a,publisher,that,signals,when,it,s,done,interacting,with,the,request,implementations,should,return,a,code,mono,void,by,calling,link,client,http,request,write,with,or,link,client,http,request,set,complete,return,a,publisher,of,the,link,client,http,response;mono,client,http,response,connect,http,method,method,uri,uri,function,super,client,http,request,mono,void,request,callback
ClientHttpConnector -> Mono<ClientHttpResponse> connect(HttpMethod method, URI uri, 			Function<? super ClientHttpRequest, Mono<Void>> requestCallback)_;1527795510;Connect to the origin server using the given {@code HttpMethod} and_{@code URI} and apply the given {@code requestCallback} when the HTTP_request of the underlying API can be initialized and written to._@param method the HTTP request method_@param uri the HTTP request URI_@param requestCallback a function that prepares and writes to the request,_returning a publisher that signals when it's done writing._Implementations can return a {@code Mono<Void>} by calling_{@link ClientHttpRequest#writeWith} or {@link ClientHttpRequest#setComplete}._@return publisher for the {@link ClientHttpResponse};Mono<ClientHttpResponse> connect(HttpMethod method, URI uri,_			Function<? super ClientHttpRequest, Mono<Void>> requestCallback)_;connect,to,the,origin,server,using,the,given,code,http,method,and,code,uri,and,apply,the,given,code,request,callback,when,the,http,request,of,the,underlying,api,can,be,initialized,and,written,to,param,method,the,http,request,method,param,uri,the,http,request,uri,param,request,callback,a,function,that,prepares,and,writes,to,the,request,returning,a,publisher,that,signals,when,it,s,done,writing,implementations,can,return,a,code,mono,void,by,calling,link,client,http,request,write,with,or,link,client,http,request,set,complete,return,publisher,for,the,link,client,http,response;mono,client,http,response,connect,http,method,method,uri,uri,function,super,client,http,request,mono,void,request,callback
