commented;modifiers;parameterAmount;loc;comment;code
true;public;1;3;/**  * Set the URL of the WSDL document that describes the service.  * @see #setWsdlDocumentResource(Resource)  */ ;/**  * Set the URL of the WSDL document that describes the service.  * @see #setWsdlDocumentResource(Resource)  */ public void setWsdlDocumentUrl(@Nullable URL wsdlDocumentUrl) {     this.wsdlDocumentUrl = wsdlDocumentUrl. }
true;public;1;4;/**  * Set the WSDL document URL as a {@link Resource}.  * @since 3.2  */ ;/**  * Set the WSDL document URL as a {@link Resource}.  * @since 3.2  */ public void setWsdlDocumentResource(Resource wsdlDocumentResource) throws IOException {     Assert.notNull(wsdlDocumentResource, "WSDL Resource must not be null").     this.wsdlDocumentUrl = wsdlDocumentResource.getURL(). }
true;public;0;4;/**  * Return the URL of the WSDL document that describes the service.  */ ;/**  * Return the URL of the WSDL document that describes the service.  */ @Nullable public URL getWsdlDocumentUrl() {     return this.wsdlDocumentUrl. }
true;public;1;3;/**  * Set the namespace URI of the service.  * Corresponds to the WSDL "targetNamespace".  */ ;/**  * Set the namespace URI of the service.  * Corresponds to the WSDL "targetNamespace".  */ public void setNamespaceUri(@Nullable String namespaceUri) {     this.namespaceUri = (namespaceUri != null ? namespaceUri.trim() : null). }
true;public;0;4;/**  * Return the namespace URI of the service.  */ ;/**  * Return the namespace URI of the service.  */ @Nullable public String getNamespaceUri() {     return this.namespaceUri. }
true;public;1;3;/**  * Set the name of the service to look up.  * Corresponds to the "wsdl:service" name.  */ ;/**  * Set the name of the service to look up.  * Corresponds to the "wsdl:service" name.  */ public void setServiceName(@Nullable String serviceName) {     this.serviceName = serviceName. }
true;public;0;4;/**  * Return the name of the service.  */ ;/**  * Return the name of the service.  */ @Nullable public String getServiceName() {     return this.serviceName. }
true;public;1;3;/**  * Specify WebServiceFeature objects (e.g. as inner bean definitions)  * to apply to JAX-WS service creation.  * @since 4.0  * @see Service#create(QName, WebServiceFeature...)  */ ;/**  * Specify WebServiceFeature objects (e.g. as inner bean definitions)  * to apply to JAX-WS service creation.  * @since 4.0  * @see Service#create(QName, WebServiceFeature...)  */ public void setServiceFeatures(WebServiceFeature... serviceFeatures) {     this.serviceFeatures = serviceFeatures. }
true;public;1;3;/**  * Set the JDK concurrent executor to use for asynchronous executions  * that require callbacks.  * @see javax.xml.ws.Service#setExecutor  */ ;/**  * Set the JDK concurrent executor to use for asynchronous executions  * that require callbacks.  * @see javax.xml.ws.Service#setExecutor  */ public void setExecutor(Executor executor) {     this.executor = executor. }
true;public;1;3;/**  * Set the JAX-WS HandlerResolver to use for all proxies and dispatchers  * created through this factory.  * @see javax.xml.ws.Service#setHandlerResolver  */ ;/**  * Set the JAX-WS HandlerResolver to use for all proxies and dispatchers  * created through this factory.  * @see javax.xml.ws.Service#setHandlerResolver  */ public void setHandlerResolver(HandlerResolver handlerResolver) {     this.handlerResolver = handlerResolver. }
true;public;0;24;/**  * Create a JAX-WS Service according to the parameters of this factory.  * @see #setServiceName  * @see #setWsdlDocumentUrl  */ ;/**  * Create a JAX-WS Service according to the parameters of this factory.  * @see #setServiceName  * @see #setWsdlDocumentUrl  */ public Service createJaxWsService() {     Assert.notNull(this.serviceName, "No service name specified").     Service service.     if (this.serviceFeatures != null) {         service = (this.wsdlDocumentUrl != null ? Service.create(this.wsdlDocumentUrl, getQName(this.serviceName), this.serviceFeatures) : Service.create(getQName(this.serviceName), this.serviceFeatures)).     } else {         service = (this.wsdlDocumentUrl != null ? Service.create(this.wsdlDocumentUrl, getQName(this.serviceName)) : Service.create(getQName(this.serviceName))).     }     if (this.executor != null) {         service.setExecutor(this.executor).     }     if (this.handlerResolver != null) {         service.setHandlerResolver(this.handlerResolver).     }     return service. }
true;protected;1;3;/**  * Return a QName for the given name, relative to the namespace URI  * of this factory, if given.  * @see #setNamespaceUri  */ ;/**  * Return a QName for the given name, relative to the namespace URI  * of this factory, if given.  * @see #setNamespaceUri  */ protected QName getQName(String name) {     return (getNamespaceUri() != null ? new QName(getNamespaceUri(), name) : new QName(name)). }
