commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * Return the HTTP status code of the response.  * @return the HTTP status as an HttpStatus enum value  * @throws IOException in case of I/O errors  * @throws IllegalArgumentException in case of an unknown HTTP status code  * @see HttpStatus#valueOf(int)  */ ;/**  * Return the HTTP status code of the response.  * @return the HTTP status as an HttpStatus enum value  * @throws IOException in case of I/O errors  * @throws IllegalArgumentException in case of an unknown HTTP status code  * @see HttpStatus#valueOf(int)  */ HttpStatus getStatusCode() throws IOException.
true;;0;1;/**  * Return the HTTP status code (potentially non-standard and not  * resolvable through the {@link HttpStatus} enum) as an integer.  * @return the HTTP status as an integer  * @throws IOException in case of I/O errors  * @since 3.1.1  * @see #getStatusCode()  * @see HttpStatus#resolve(int)  */ ;/**  * Return the HTTP status code (potentially non-standard and not  * resolvable through the {@link HttpStatus} enum) as an integer.  * @return the HTTP status as an integer  * @throws IOException in case of I/O errors  * @since 3.1.1  * @see #getStatusCode()  * @see HttpStatus#resolve(int)  */ int getRawStatusCode() throws IOException.
true;;0;1;/**  * Return the HTTP status text of the response.  * @return the HTTP status text  * @throws IOException in case of I/O errors  */ ;/**  * Return the HTTP status text of the response.  * @return the HTTP status text  * @throws IOException in case of I/O errors  */ String getStatusText() throws IOException.
true;;0;2;/**  * Close this response, freeing any resources created.  */ ;/**  * Close this response, freeing any resources created.  */ @Override void close().
