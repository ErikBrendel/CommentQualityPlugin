# id;timestamp;commentText;codeText;commentWords;codeWords
HtmlUtils -> public static String htmlEscapeHex(String input, String encoding);1413906577;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding numeric_reference in hex format (&#x<i>Hex</i>_) at least as required by the_specified encoding. In other words, if a special character does_not have to be escaped for the given encoding, it may not be._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@param encoding The name of a supported {@link java.nio.charset.Charset charset}_@return the escaped string;public static String htmlEscapeHex(String input, String encoding) {_		Assert.notNull(encoding, "encoding is required")__		if (input == null) {_			return null__		}_		StringBuilder escaped = new StringBuilder(input.length() * 2)__		for (int i = 0_ i < input.length()_ i++) {_			char character = input.charAt(i)__			if (characterEntityReferences.isMappedToReference(character, encoding)) {_				escaped.append(HtmlCharacterEntityReferences.HEX_REFERENCE_START)__				escaped.append(Integer.toString(character, 16))__				escaped.append(HtmlCharacterEntityReferences.REFERENCE_END)__			}_			else {_				escaped.append(character)__			}_		}_		return escaped.toString()__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,numeric,reference,in,hex,format,x,i,hex,i,at,least,as,required,by,the,specified,encoding,in,other,words,if,a,special,character,does,not,have,to,be,escaped,for,the,given,encoding,it,may,not,be,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,param,encoding,the,name,of,a,supported,link,java,nio,charset,charset,charset,return,the,escaped,string;public,static,string,html,escape,hex,string,input,string,encoding,assert,not,null,encoding,encoding,is,required,if,input,null,return,null,string,builder,escaped,new,string,builder,input,length,2,for,int,i,0,i,input,length,i,char,character,input,char,at,i,if,character,entity,references,is,mapped,to,reference,character,encoding,escaped,append,html,character,entity,references,escaped,append,integer,to,string,character,16,escaped,append,html,character,entity,references,else,escaped,append,character,return,escaped,to,string
HtmlUtils -> public static String htmlEscapeHex(String input, String encoding);1414077840;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding numeric_reference in hex format (&#x<i>Hex</i>_) at least as required by the_specified encoding. In other words, if a special character does_not have to be escaped for the given encoding, it may not be._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@param encoding The name of a supported {@link java.nio.charset.Charset charset}_@return the escaped string_@since 4.1.2;public static String htmlEscapeHex(String input, String encoding) {_		Assert.notNull(encoding, "Encoding is required")__		if (input == null) {_			return null__		}_		StringBuilder escaped = new StringBuilder(input.length() * 2)__		for (int i = 0_ i < input.length()_ i++) {_			char character = input.charAt(i)__			if (characterEntityReferences.isMappedToReference(character, encoding)) {_				escaped.append(HtmlCharacterEntityReferences.HEX_REFERENCE_START)__				escaped.append(Integer.toString(character, 16))__				escaped.append(HtmlCharacterEntityReferences.REFERENCE_END)__			}_			else {_				escaped.append(character)__			}_		}_		return escaped.toString()__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,numeric,reference,in,hex,format,x,i,hex,i,at,least,as,required,by,the,specified,encoding,in,other,words,if,a,special,character,does,not,have,to,be,escaped,for,the,given,encoding,it,may,not,be,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,param,encoding,the,name,of,a,supported,link,java,nio,charset,charset,charset,return,the,escaped,string,since,4,1,2;public,static,string,html,escape,hex,string,input,string,encoding,assert,not,null,encoding,encoding,is,required,if,input,null,return,null,string,builder,escaped,new,string,builder,input,length,2,for,int,i,0,i,input,length,i,char,character,input,char,at,i,if,character,entity,references,is,mapped,to,reference,character,encoding,escaped,append,html,character,entity,references,escaped,append,integer,to,string,character,16,escaped,append,html,character,entity,references,else,escaped,append,character,return,escaped,to,string
HtmlUtils -> public static String htmlEscapeHex(String input, String encoding);1414088972;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding numeric_reference in hex format (&#x<i>Hex</i>_) at least as required by the_specified encoding. In other words, if a special character does_not have to be escaped for the given encoding, it may not be._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@param encoding The name of a supported {@link java.nio.charset.Charset charset}_@return the escaped string_@since 4.1.2;public static String htmlEscapeHex(String input, String encoding) {_		Assert.notNull(encoding, "Encoding is required")__		if (input == null) {_			return null__		}_		StringBuilder escaped = new StringBuilder(input.length() * 2)__		for (int i = 0_ i < input.length()_ i++) {_			char character = input.charAt(i)__			if (characterEntityReferences.isMappedToReference(character, encoding)) {_				escaped.append(HtmlCharacterEntityReferences.HEX_REFERENCE_START)__				escaped.append(Integer.toString(character, 16))__				escaped.append(HtmlCharacterEntityReferences.REFERENCE_END)__			}_			else {_				escaped.append(character)__			}_		}_		return escaped.toString()__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,numeric,reference,in,hex,format,x,i,hex,i,at,least,as,required,by,the,specified,encoding,in,other,words,if,a,special,character,does,not,have,to,be,escaped,for,the,given,encoding,it,may,not,be,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,param,encoding,the,name,of,a,supported,link,java,nio,charset,charset,charset,return,the,escaped,string,since,4,1,2;public,static,string,html,escape,hex,string,input,string,encoding,assert,not,null,encoding,encoding,is,required,if,input,null,return,null,string,builder,escaped,new,string,builder,input,length,2,for,int,i,0,i,input,length,i,char,character,input,char,at,i,if,character,entity,references,is,mapped,to,reference,character,encoding,escaped,append,html,character,entity,references,escaped,append,integer,to,string,character,16,escaped,append,html,character,entity,references,else,escaped,append,character,return,escaped,to,string
HtmlUtils -> public static String htmlEscapeHex(String input, String encoding);1426267150;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding numeric_reference in hex format (&#x<i>Hex</i>_) at least as required by the_specified encoding. In other words, if a special character does_not have to be escaped for the given encoding, it may not be._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@param encoding The name of a supported {@link java.nio.charset.Charset charset}_@return the escaped string_@since 4.1.2;public static String htmlEscapeHex(String input, String encoding) {_		Assert.notNull(encoding, "Encoding is required")__		if (input == null) {_			return null__		}_		StringBuilder escaped = new StringBuilder(input.length() * 2)__		for (int i = 0_ i < input.length()_ i++) {_			char character = input.charAt(i)__			if (characterEntityReferences.isMappedToReference(character, encoding)) {_				escaped.append(HtmlCharacterEntityReferences.HEX_REFERENCE_START)__				escaped.append(Integer.toString(character, 16))__				escaped.append(HtmlCharacterEntityReferences.REFERENCE_END)__			}_			else {_				escaped.append(character)__			}_		}_		return escaped.toString()__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,numeric,reference,in,hex,format,x,i,hex,i,at,least,as,required,by,the,specified,encoding,in,other,words,if,a,special,character,does,not,have,to,be,escaped,for,the,given,encoding,it,may,not,be,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,param,encoding,the,name,of,a,supported,link,java,nio,charset,charset,charset,return,the,escaped,string,since,4,1,2;public,static,string,html,escape,hex,string,input,string,encoding,assert,not,null,encoding,encoding,is,required,if,input,null,return,null,string,builder,escaped,new,string,builder,input,length,2,for,int,i,0,i,input,length,i,char,character,input,char,at,i,if,character,entity,references,is,mapped,to,reference,character,encoding,escaped,append,html,character,entity,references,escaped,append,integer,to,string,character,16,escaped,append,html,character,entity,references,else,escaped,append,character,return,escaped,to,string
HtmlUtils -> public static String htmlEscapeHex(String input, String encoding);1468613531;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding numeric_reference in hex format (&#x<i>Hex</i>_) at least as required by the_specified encoding. In other words, if a special character does_not have to be escaped for the given encoding, it may not be._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@param encoding The name of a supported {@link java.nio.charset.Charset charset}_@return the escaped string_@since 4.1.2;public static String htmlEscapeHex(String input, String encoding) {_		Assert.notNull(encoding, "Encoding is required")__		if (input == null) {_			return null__		}_		StringBuilder escaped = new StringBuilder(input.length() * 2)__		for (int i = 0_ i < input.length()_ i++) {_			char character = input.charAt(i)__			if (characterEntityReferences.isMappedToReference(character, encoding)) {_				escaped.append(HtmlCharacterEntityReferences.HEX_REFERENCE_START)__				escaped.append(Integer.toString(character, 16))__				escaped.append(HtmlCharacterEntityReferences.REFERENCE_END)__			}_			else {_				escaped.append(character)__			}_		}_		return escaped.toString()__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,numeric,reference,in,hex,format,x,i,hex,i,at,least,as,required,by,the,specified,encoding,in,other,words,if,a,special,character,does,not,have,to,be,escaped,for,the,given,encoding,it,may,not,be,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,param,encoding,the,name,of,a,supported,link,java,nio,charset,charset,charset,return,the,escaped,string,since,4,1,2;public,static,string,html,escape,hex,string,input,string,encoding,assert,not,null,encoding,encoding,is,required,if,input,null,return,null,string,builder,escaped,new,string,builder,input,length,2,for,int,i,0,i,input,length,i,char,character,input,char,at,i,if,character,entity,references,is,mapped,to,reference,character,encoding,escaped,append,html,character,entity,references,escaped,append,integer,to,string,character,16,escaped,append,html,character,entity,references,else,escaped,append,character,return,escaped,to,string
HtmlUtils -> public static String htmlEscapeHex(String input, String encoding);1468964552;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding numeric_reference in hex format (&#x<i>Hex</i>_) at least as required by the_specified encoding. In other words, if a special character does_not have to be escaped for the given encoding, it may not be._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@param encoding the name of a supported {@link java.nio.charset.Charset charset}_@return the escaped string_@since 4.1.2;public static String htmlEscapeHex(String input, String encoding) {_		Assert.notNull(encoding, "Encoding is required")__		if (input == null) {_			return null__		}_		StringBuilder escaped = new StringBuilder(input.length() * 2)__		for (int i = 0_ i < input.length()_ i++) {_			char character = input.charAt(i)__			if (characterEntityReferences.isMappedToReference(character, encoding)) {_				escaped.append(HtmlCharacterEntityReferences.HEX_REFERENCE_START)__				escaped.append(Integer.toString(character, 16))__				escaped.append(HtmlCharacterEntityReferences.REFERENCE_END)__			}_			else {_				escaped.append(character)__			}_		}_		return escaped.toString()__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,numeric,reference,in,hex,format,x,i,hex,i,at,least,as,required,by,the,specified,encoding,in,other,words,if,a,special,character,does,not,have,to,be,escaped,for,the,given,encoding,it,may,not,be,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,param,encoding,the,name,of,a,supported,link,java,nio,charset,charset,charset,return,the,escaped,string,since,4,1,2;public,static,string,html,escape,hex,string,input,string,encoding,assert,not,null,encoding,encoding,is,required,if,input,null,return,null,string,builder,escaped,new,string,builder,input,length,2,for,int,i,0,i,input,length,i,char,character,input,char,at,i,if,character,entity,references,is,mapped,to,reference,character,encoding,escaped,append,html,character,entity,references,escaped,append,integer,to,string,character,16,escaped,append,html,character,entity,references,else,escaped,append,character,return,escaped,to,string
HtmlUtils -> public static String htmlEscapeHex(String input, String encoding);1496837955;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding numeric_reference in hex format (&#x<i>Hex</i>_) at least as required by the_specified encoding. In other words, if a special character does_not have to be escaped for the given encoding, it may not be._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@param encoding the name of a supported {@link java.nio.charset.Charset charset}_@return the escaped string_@since 4.1.2;public static String htmlEscapeHex(String input, String encoding) {_		Assert.notNull(input, "Input is required")__		Assert.notNull(encoding, "Encoding is required")__		StringBuilder escaped = new StringBuilder(input.length() * 2)__		for (int i = 0_ i < input.length()_ i++) {_			char character = input.charAt(i)__			if (characterEntityReferences.isMappedToReference(character, encoding)) {_				escaped.append(HtmlCharacterEntityReferences.HEX_REFERENCE_START)__				escaped.append(Integer.toString(character, 16))__				escaped.append(HtmlCharacterEntityReferences.REFERENCE_END)__			}_			else {_				escaped.append(character)__			}_		}_		return escaped.toString()__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,numeric,reference,in,hex,format,x,i,hex,i,at,least,as,required,by,the,specified,encoding,in,other,words,if,a,special,character,does,not,have,to,be,escaped,for,the,given,encoding,it,may,not,be,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,param,encoding,the,name,of,a,supported,link,java,nio,charset,charset,charset,return,the,escaped,string,since,4,1,2;public,static,string,html,escape,hex,string,input,string,encoding,assert,not,null,input,input,is,required,assert,not,null,encoding,encoding,is,required,string,builder,escaped,new,string,builder,input,length,2,for,int,i,0,i,input,length,i,char,character,input,char,at,i,if,character,entity,references,is,mapped,to,reference,character,encoding,escaped,append,html,character,entity,references,escaped,append,integer,to,string,character,16,escaped,append,html,character,entity,references,else,escaped,append,character,return,escaped,to,string
HtmlUtils -> public static String htmlEscapeDecimal(String input, String encoding);1413906577;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding numeric_reference in decimal format (&#<i>Decimal</i>_) at least as required by the_specified encoding. In other words, if a special character does_not have to be escaped for the given encoding, it may not be._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@param encoding The name of a supported {@link java.nio.charset.Charset charset}_@return the escaped string;public static String htmlEscapeDecimal(String input, String encoding) {_		Assert.notNull(encoding, "encoding is required")__		if (input == null) {_			return null__		}_		StringBuilder escaped = new StringBuilder(input.length() * 2)__		for (int i = 0_ i < input.length()_ i++) {_			char character = input.charAt(i)__			if (characterEntityReferences.isMappedToReference(character, encoding)) {_				escaped.append(HtmlCharacterEntityReferences.DECIMAL_REFERENCE_START)__				escaped.append((int) character)__				escaped.append(HtmlCharacterEntityReferences.REFERENCE_END)__			}_			else {_				escaped.append(character)__			}_		}_		return escaped.toString()__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,numeric,reference,in,decimal,format,i,decimal,i,at,least,as,required,by,the,specified,encoding,in,other,words,if,a,special,character,does,not,have,to,be,escaped,for,the,given,encoding,it,may,not,be,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,param,encoding,the,name,of,a,supported,link,java,nio,charset,charset,charset,return,the,escaped,string;public,static,string,html,escape,decimal,string,input,string,encoding,assert,not,null,encoding,encoding,is,required,if,input,null,return,null,string,builder,escaped,new,string,builder,input,length,2,for,int,i,0,i,input,length,i,char,character,input,char,at,i,if,character,entity,references,is,mapped,to,reference,character,encoding,escaped,append,html,character,entity,references,escaped,append,int,character,escaped,append,html,character,entity,references,else,escaped,append,character,return,escaped,to,string
HtmlUtils -> public static String htmlEscapeDecimal(String input, String encoding);1414077840;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding numeric_reference in decimal format (&#<i>Decimal</i>_) at least as required by the_specified encoding. In other words, if a special character does_not have to be escaped for the given encoding, it may not be._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@param encoding The name of a supported {@link java.nio.charset.Charset charset}_@return the escaped string_@since 4.1.2;public static String htmlEscapeDecimal(String input, String encoding) {_		Assert.notNull(encoding, "Encoding is required")__		if (input == null) {_			return null__		}_		StringBuilder escaped = new StringBuilder(input.length() * 2)__		for (int i = 0_ i < input.length()_ i++) {_			char character = input.charAt(i)__			if (characterEntityReferences.isMappedToReference(character, encoding)) {_				escaped.append(HtmlCharacterEntityReferences.DECIMAL_REFERENCE_START)__				escaped.append((int) character)__				escaped.append(HtmlCharacterEntityReferences.REFERENCE_END)__			}_			else {_				escaped.append(character)__			}_		}_		return escaped.toString()__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,numeric,reference,in,decimal,format,i,decimal,i,at,least,as,required,by,the,specified,encoding,in,other,words,if,a,special,character,does,not,have,to,be,escaped,for,the,given,encoding,it,may,not,be,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,param,encoding,the,name,of,a,supported,link,java,nio,charset,charset,charset,return,the,escaped,string,since,4,1,2;public,static,string,html,escape,decimal,string,input,string,encoding,assert,not,null,encoding,encoding,is,required,if,input,null,return,null,string,builder,escaped,new,string,builder,input,length,2,for,int,i,0,i,input,length,i,char,character,input,char,at,i,if,character,entity,references,is,mapped,to,reference,character,encoding,escaped,append,html,character,entity,references,escaped,append,int,character,escaped,append,html,character,entity,references,else,escaped,append,character,return,escaped,to,string
HtmlUtils -> public static String htmlEscapeDecimal(String input, String encoding);1414088972;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding numeric_reference in decimal format (&#<i>Decimal</i>_) at least as required by the_specified encoding. In other words, if a special character does_not have to be escaped for the given encoding, it may not be._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@param encoding The name of a supported {@link java.nio.charset.Charset charset}_@return the escaped string_@since 4.1.2;public static String htmlEscapeDecimal(String input, String encoding) {_		Assert.notNull(encoding, "Encoding is required")__		if (input == null) {_			return null__		}_		StringBuilder escaped = new StringBuilder(input.length() * 2)__		for (int i = 0_ i < input.length()_ i++) {_			char character = input.charAt(i)__			if (characterEntityReferences.isMappedToReference(character, encoding)) {_				escaped.append(HtmlCharacterEntityReferences.DECIMAL_REFERENCE_START)__				escaped.append((int) character)__				escaped.append(HtmlCharacterEntityReferences.REFERENCE_END)__			}_			else {_				escaped.append(character)__			}_		}_		return escaped.toString()__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,numeric,reference,in,decimal,format,i,decimal,i,at,least,as,required,by,the,specified,encoding,in,other,words,if,a,special,character,does,not,have,to,be,escaped,for,the,given,encoding,it,may,not,be,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,param,encoding,the,name,of,a,supported,link,java,nio,charset,charset,charset,return,the,escaped,string,since,4,1,2;public,static,string,html,escape,decimal,string,input,string,encoding,assert,not,null,encoding,encoding,is,required,if,input,null,return,null,string,builder,escaped,new,string,builder,input,length,2,for,int,i,0,i,input,length,i,char,character,input,char,at,i,if,character,entity,references,is,mapped,to,reference,character,encoding,escaped,append,html,character,entity,references,escaped,append,int,character,escaped,append,html,character,entity,references,else,escaped,append,character,return,escaped,to,string
HtmlUtils -> public static String htmlEscapeDecimal(String input, String encoding);1426267150;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding numeric_reference in decimal format (&#<i>Decimal</i>_) at least as required by the_specified encoding. In other words, if a special character does_not have to be escaped for the given encoding, it may not be._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@param encoding The name of a supported {@link java.nio.charset.Charset charset}_@return the escaped string_@since 4.1.2;public static String htmlEscapeDecimal(String input, String encoding) {_		Assert.notNull(encoding, "Encoding is required")__		if (input == null) {_			return null__		}_		StringBuilder escaped = new StringBuilder(input.length() * 2)__		for (int i = 0_ i < input.length()_ i++) {_			char character = input.charAt(i)__			if (characterEntityReferences.isMappedToReference(character, encoding)) {_				escaped.append(HtmlCharacterEntityReferences.DECIMAL_REFERENCE_START)__				escaped.append((int) character)__				escaped.append(HtmlCharacterEntityReferences.REFERENCE_END)__			}_			else {_				escaped.append(character)__			}_		}_		return escaped.toString()__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,numeric,reference,in,decimal,format,i,decimal,i,at,least,as,required,by,the,specified,encoding,in,other,words,if,a,special,character,does,not,have,to,be,escaped,for,the,given,encoding,it,may,not,be,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,param,encoding,the,name,of,a,supported,link,java,nio,charset,charset,charset,return,the,escaped,string,since,4,1,2;public,static,string,html,escape,decimal,string,input,string,encoding,assert,not,null,encoding,encoding,is,required,if,input,null,return,null,string,builder,escaped,new,string,builder,input,length,2,for,int,i,0,i,input,length,i,char,character,input,char,at,i,if,character,entity,references,is,mapped,to,reference,character,encoding,escaped,append,html,character,entity,references,escaped,append,int,character,escaped,append,html,character,entity,references,else,escaped,append,character,return,escaped,to,string
HtmlUtils -> public static String htmlEscapeDecimal(String input, String encoding);1468613531;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding numeric_reference in decimal format (&#<i>Decimal</i>_) at least as required by the_specified encoding. In other words, if a special character does_not have to be escaped for the given encoding, it may not be._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@param encoding The name of a supported {@link java.nio.charset.Charset charset}_@return the escaped string_@since 4.1.2;public static String htmlEscapeDecimal(String input, String encoding) {_		Assert.notNull(encoding, "Encoding is required")__		if (input == null) {_			return null__		}_		StringBuilder escaped = new StringBuilder(input.length() * 2)__		for (int i = 0_ i < input.length()_ i++) {_			char character = input.charAt(i)__			if (characterEntityReferences.isMappedToReference(character, encoding)) {_				escaped.append(HtmlCharacterEntityReferences.DECIMAL_REFERENCE_START)__				escaped.append((int) character)__				escaped.append(HtmlCharacterEntityReferences.REFERENCE_END)__			}_			else {_				escaped.append(character)__			}_		}_		return escaped.toString()__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,numeric,reference,in,decimal,format,i,decimal,i,at,least,as,required,by,the,specified,encoding,in,other,words,if,a,special,character,does,not,have,to,be,escaped,for,the,given,encoding,it,may,not,be,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,param,encoding,the,name,of,a,supported,link,java,nio,charset,charset,charset,return,the,escaped,string,since,4,1,2;public,static,string,html,escape,decimal,string,input,string,encoding,assert,not,null,encoding,encoding,is,required,if,input,null,return,null,string,builder,escaped,new,string,builder,input,length,2,for,int,i,0,i,input,length,i,char,character,input,char,at,i,if,character,entity,references,is,mapped,to,reference,character,encoding,escaped,append,html,character,entity,references,escaped,append,int,character,escaped,append,html,character,entity,references,else,escaped,append,character,return,escaped,to,string
HtmlUtils -> public static String htmlEscapeDecimal(String input, String encoding);1468964552;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding numeric_reference in decimal format (&#<i>Decimal</i>_) at least as required by the_specified encoding. In other words, if a special character does_not have to be escaped for the given encoding, it may not be._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@param encoding the name of a supported {@link java.nio.charset.Charset charset}_@return the escaped string_@since 4.1.2;public static String htmlEscapeDecimal(String input, String encoding) {_		Assert.notNull(encoding, "Encoding is required")__		if (input == null) {_			return null__		}_		StringBuilder escaped = new StringBuilder(input.length() * 2)__		for (int i = 0_ i < input.length()_ i++) {_			char character = input.charAt(i)__			if (characterEntityReferences.isMappedToReference(character, encoding)) {_				escaped.append(HtmlCharacterEntityReferences.DECIMAL_REFERENCE_START)__				escaped.append((int) character)__				escaped.append(HtmlCharacterEntityReferences.REFERENCE_END)__			}_			else {_				escaped.append(character)__			}_		}_		return escaped.toString()__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,numeric,reference,in,decimal,format,i,decimal,i,at,least,as,required,by,the,specified,encoding,in,other,words,if,a,special,character,does,not,have,to,be,escaped,for,the,given,encoding,it,may,not,be,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,param,encoding,the,name,of,a,supported,link,java,nio,charset,charset,charset,return,the,escaped,string,since,4,1,2;public,static,string,html,escape,decimal,string,input,string,encoding,assert,not,null,encoding,encoding,is,required,if,input,null,return,null,string,builder,escaped,new,string,builder,input,length,2,for,int,i,0,i,input,length,i,char,character,input,char,at,i,if,character,entity,references,is,mapped,to,reference,character,encoding,escaped,append,html,character,entity,references,escaped,append,int,character,escaped,append,html,character,entity,references,else,escaped,append,character,return,escaped,to,string
HtmlUtils -> public static String htmlEscapeDecimal(String input, String encoding);1496837955;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding numeric_reference in decimal format (&#<i>Decimal</i>_) at least as required by the_specified encoding. In other words, if a special character does_not have to be escaped for the given encoding, it may not be._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@param encoding the name of a supported {@link java.nio.charset.Charset charset}_@return the escaped string_@since 4.1.2;public static String htmlEscapeDecimal(String input, String encoding) {_		Assert.notNull(input, "Input is required")__		Assert.notNull(encoding, "Encoding is required")__		StringBuilder escaped = new StringBuilder(input.length() * 2)__		for (int i = 0_ i < input.length()_ i++) {_			char character = input.charAt(i)__			if (characterEntityReferences.isMappedToReference(character, encoding)) {_				escaped.append(HtmlCharacterEntityReferences.DECIMAL_REFERENCE_START)__				escaped.append((int) character)__				escaped.append(HtmlCharacterEntityReferences.REFERENCE_END)__			}_			else {_				escaped.append(character)__			}_		}_		return escaped.toString()__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,numeric,reference,in,decimal,format,i,decimal,i,at,least,as,required,by,the,specified,encoding,in,other,words,if,a,special,character,does,not,have,to,be,escaped,for,the,given,encoding,it,may,not,be,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,param,encoding,the,name,of,a,supported,link,java,nio,charset,charset,charset,return,the,escaped,string,since,4,1,2;public,static,string,html,escape,decimal,string,input,string,encoding,assert,not,null,input,input,is,required,assert,not,null,encoding,encoding,is,required,string,builder,escaped,new,string,builder,input,length,2,for,int,i,0,i,input,length,i,char,character,input,char,at,i,if,character,entity,references,is,mapped,to,reference,character,encoding,escaped,append,html,character,entity,references,escaped,append,int,character,escaped,append,html,character,entity,references,else,escaped,append,character,return,escaped,to,string
HtmlUtils -> public static String htmlEscapeDecimal(String input);1328020251;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding numeric_reference in decimal format (&#<i>Decimal</i>_)._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@return the escaped string;public static String htmlEscapeDecimal(String input) {_		if (input == null) {_			return null__		}_		StringBuilder escaped = new StringBuilder(input.length() * 2)__		for (int i = 0_ i < input.length()_ i++) {_			char character = input.charAt(i)__			if (characterEntityReferences.isMappedToReference(character)) {_				escaped.append(HtmlCharacterEntityReferences.DECIMAL_REFERENCE_START)__				escaped.append((int) character)__				escaped.append(HtmlCharacterEntityReferences.REFERENCE_END)__			}_			else {_				escaped.append(character)__			}_		}_		return escaped.toString()__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,numeric,reference,in,decimal,format,i,decimal,i,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,return,the,escaped,string;public,static,string,html,escape,decimal,string,input,if,input,null,return,null,string,builder,escaped,new,string,builder,input,length,2,for,int,i,0,i,input,length,i,char,character,input,char,at,i,if,character,entity,references,is,mapped,to,reference,character,escaped,append,html,character,entity,references,escaped,append,int,character,escaped,append,html,character,entity,references,else,escaped,append,character,return,escaped,to,string
HtmlUtils -> public static String htmlEscapeDecimal(String input);1356735495;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding numeric_reference in decimal format (&#<i>Decimal</i>_)._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@return the escaped string;public static String htmlEscapeDecimal(String input) {_		if (input == null) {_			return null__		}_		StringBuilder escaped = new StringBuilder(input.length() * 2)__		for (int i = 0_ i < input.length()_ i++) {_			char character = input.charAt(i)__			if (characterEntityReferences.isMappedToReference(character)) {_				escaped.append(HtmlCharacterEntityReferences.DECIMAL_REFERENCE_START)__				escaped.append((int) character)__				escaped.append(HtmlCharacterEntityReferences.REFERENCE_END)__			}_			else {_				escaped.append(character)__			}_		}_		return escaped.toString()__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,numeric,reference,in,decimal,format,i,decimal,i,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,return,the,escaped,string;public,static,string,html,escape,decimal,string,input,if,input,null,return,null,string,builder,escaped,new,string,builder,input,length,2,for,int,i,0,i,input,length,i,char,character,input,char,at,i,if,character,entity,references,is,mapped,to,reference,character,escaped,append,html,character,entity,references,escaped,append,int,character,escaped,append,html,character,entity,references,else,escaped,append,character,return,escaped,to,string
HtmlUtils -> public static String htmlEscapeDecimal(String input);1413906577;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding numeric_reference in decimal format (&#<i>Decimal</i>_)._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@return the escaped string;public static String htmlEscapeDecimal(String input) {_		return htmlEscapeDecimal(input, WebUtils.DEFAULT_CHARACTER_ENCODING)__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,numeric,reference,in,decimal,format,i,decimal,i,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,return,the,escaped,string;public,static,string,html,escape,decimal,string,input,return,html,escape,decimal,input,web,utils
HtmlUtils -> public static String htmlEscapeDecimal(String input);1414077840;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding numeric_reference in decimal format (&#<i>Decimal</i>_)._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@return the escaped string;public static String htmlEscapeDecimal(String input) {_		return htmlEscapeDecimal(input, WebUtils.DEFAULT_CHARACTER_ENCODING)__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,numeric,reference,in,decimal,format,i,decimal,i,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,return,the,escaped,string;public,static,string,html,escape,decimal,string,input,return,html,escape,decimal,input,web,utils
HtmlUtils -> public static String htmlEscapeDecimal(String input);1414088972;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding numeric_reference in decimal format (&#<i>Decimal</i>_)._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@return the escaped string;public static String htmlEscapeDecimal(String input) {_		return htmlEscapeDecimal(input, WebUtils.DEFAULT_CHARACTER_ENCODING)__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,numeric,reference,in,decimal,format,i,decimal,i,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,return,the,escaped,string;public,static,string,html,escape,decimal,string,input,return,html,escape,decimal,input,web,utils
HtmlUtils -> public static String htmlEscapeDecimal(String input);1426267150;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding numeric_reference in decimal format (&#<i>Decimal</i>_)._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@return the escaped string;public static String htmlEscapeDecimal(String input) {_		return htmlEscapeDecimal(input, WebUtils.DEFAULT_CHARACTER_ENCODING)__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,numeric,reference,in,decimal,format,i,decimal,i,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,return,the,escaped,string;public,static,string,html,escape,decimal,string,input,return,html,escape,decimal,input,web,utils
HtmlUtils -> public static String htmlEscapeDecimal(String input);1468613531;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding numeric_reference in decimal format (&#<i>Decimal</i>_)._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@return the escaped string;public static String htmlEscapeDecimal(String input) {_		return htmlEscapeDecimal(input, WebUtils.DEFAULT_CHARACTER_ENCODING)__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,numeric,reference,in,decimal,format,i,decimal,i,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,return,the,escaped,string;public,static,string,html,escape,decimal,string,input,return,html,escape,decimal,input,web,utils
HtmlUtils -> public static String htmlEscapeDecimal(String input);1468964552;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding numeric_reference in decimal format (&#<i>Decimal</i>_)._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@return the escaped string;public static String htmlEscapeDecimal(String input) {_		return htmlEscapeDecimal(input, WebUtils.DEFAULT_CHARACTER_ENCODING)__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,numeric,reference,in,decimal,format,i,decimal,i,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,return,the,escaped,string;public,static,string,html,escape,decimal,string,input,return,html,escape,decimal,input,web,utils
HtmlUtils -> public static String htmlEscapeDecimal(String input);1496837955;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding numeric_reference in decimal format (&#<i>Decimal</i>_)._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@return the escaped string;public static String htmlEscapeDecimal(String input) {_		return htmlEscapeDecimal(input, WebUtils.DEFAULT_CHARACTER_ENCODING)__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,numeric,reference,in,decimal,format,i,decimal,i,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,return,the,escaped,string;public,static,string,html,escape,decimal,string,input,return,html,escape,decimal,input,web,utils
HtmlUtils -> public static String htmlUnescape(String input);1328020251;Turn HTML character references into their plain text UNICODE equivalent._<p>Handles complete character set defined in HTML 4.01 recommendation_and all reference types (decimal, hex, and entity)._<p>Correctly converts the following formats:_<blockquote>_&amp_#<i>Entity</i>_ - <i>(Example: &amp_amp_) case sensitive</i>_&amp_#<i>Decimal</i>_ - <i>(Example: &amp_#68_)</i><br>_&amp_#x<i>Hex</i>_ - <i>(Example: &amp_#xE5_) case insensitive</i><br>_</blockquote>_Gracefully handles malformed character references by copying original_characters as is when encountered.<p>_<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (escaped) input string_@return the unescaped string;public static String htmlUnescape(String input) {_		if (input == null) {_			return null__		}_		return new HtmlCharacterEntityDecoder(characterEntityReferences, input).decode()__	};turn,html,character,references,into,their,plain,text,unicode,equivalent,p,handles,complete,character,set,defined,in,html,4,01,recommendation,and,all,reference,types,decimal,hex,and,entity,p,correctly,converts,the,following,formats,blockquote,amp,i,entity,i,i,example,amp,amp,case,sensitive,i,amp,i,decimal,i,i,example,amp,68,i,br,amp,x,i,hex,i,i,example,amp,x,e5,case,insensitive,i,br,blockquote,gracefully,handles,malformed,character,references,by,copying,original,characters,as,is,when,encountered,p,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,escaped,input,string,return,the,unescaped,string;public,static,string,html,unescape,string,input,if,input,null,return,null,return,new,html,character,entity,decoder,character,entity,references,input,decode
HtmlUtils -> public static String htmlUnescape(String input);1356735495;Turn HTML character references into their plain text UNICODE equivalent._<p>Handles complete character set defined in HTML 4.01 recommendation_and all reference types (decimal, hex, and entity)._<p>Correctly converts the following formats:_<blockquote>_&amp_#<i>Entity</i>_ - <i>(Example: &amp_amp_) case sensitive</i>_&amp_#<i>Decimal</i>_ - <i>(Example: &amp_#68_)</i><br>_&amp_#x<i>Hex</i>_ - <i>(Example: &amp_#xE5_) case insensitive</i><br>_</blockquote>_Gracefully handles malformed character references by copying original_characters as is when encountered.<p>_<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (escaped) input string_@return the unescaped string;public static String htmlUnescape(String input) {_		if (input == null) {_			return null__		}_		return new HtmlCharacterEntityDecoder(characterEntityReferences, input).decode()__	};turn,html,character,references,into,their,plain,text,unicode,equivalent,p,handles,complete,character,set,defined,in,html,4,01,recommendation,and,all,reference,types,decimal,hex,and,entity,p,correctly,converts,the,following,formats,blockquote,amp,i,entity,i,i,example,amp,amp,case,sensitive,i,amp,i,decimal,i,i,example,amp,68,i,br,amp,x,i,hex,i,i,example,amp,x,e5,case,insensitive,i,br,blockquote,gracefully,handles,malformed,character,references,by,copying,original,characters,as,is,when,encountered,p,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,escaped,input,string,return,the,unescaped,string;public,static,string,html,unescape,string,input,if,input,null,return,null,return,new,html,character,entity,decoder,character,entity,references,input,decode
HtmlUtils -> public static String htmlUnescape(String input);1413906577;Turn HTML character references into their plain text UNICODE equivalent._<p>Handles complete character set defined in HTML 4.01 recommendation_and all reference types (decimal, hex, and entity)._<p>Correctly converts the following formats:_<blockquote>_&amp_#<i>Entity</i>_ - <i>(Example: &amp_amp_) case sensitive</i>_&amp_#<i>Decimal</i>_ - <i>(Example: &amp_#68_)</i><br>_&amp_#x<i>Hex</i>_ - <i>(Example: &amp_#xE5_) case insensitive</i><br>_</blockquote>_Gracefully handles malformed character references by copying original_characters as is when encountered.<p>_<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (escaped) input string_@return the unescaped string;public static String htmlUnescape(String input) {_		if (input == null) {_			return null__		}_		return new HtmlCharacterEntityDecoder(characterEntityReferences, input).decode()__	};turn,html,character,references,into,their,plain,text,unicode,equivalent,p,handles,complete,character,set,defined,in,html,4,01,recommendation,and,all,reference,types,decimal,hex,and,entity,p,correctly,converts,the,following,formats,blockquote,amp,i,entity,i,i,example,amp,amp,case,sensitive,i,amp,i,decimal,i,i,example,amp,68,i,br,amp,x,i,hex,i,i,example,amp,x,e5,case,insensitive,i,br,blockquote,gracefully,handles,malformed,character,references,by,copying,original,characters,as,is,when,encountered,p,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,escaped,input,string,return,the,unescaped,string;public,static,string,html,unescape,string,input,if,input,null,return,null,return,new,html,character,entity,decoder,character,entity,references,input,decode
HtmlUtils -> public static String htmlUnescape(String input);1414077840;Turn HTML character references into their plain text UNICODE equivalent._<p>Handles complete character set defined in HTML 4.01 recommendation_and all reference types (decimal, hex, and entity)._<p>Correctly converts the following formats:_<blockquote>_&amp_#<i>Entity</i>_ - <i>(Example: &amp_amp_) case sensitive</i>_&amp_#<i>Decimal</i>_ - <i>(Example: &amp_#68_)</i><br>_&amp_#x<i>Hex</i>_ - <i>(Example: &amp_#xE5_) case insensitive</i><br>_</blockquote>_Gracefully handles malformed character references by copying original_characters as is when encountered.<p>_<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (escaped) input string_@return the unescaped string;public static String htmlUnescape(String input) {_		if (input == null) {_			return null__		}_		return new HtmlCharacterEntityDecoder(characterEntityReferences, input).decode()__	};turn,html,character,references,into,their,plain,text,unicode,equivalent,p,handles,complete,character,set,defined,in,html,4,01,recommendation,and,all,reference,types,decimal,hex,and,entity,p,correctly,converts,the,following,formats,blockquote,amp,i,entity,i,i,example,amp,amp,case,sensitive,i,amp,i,decimal,i,i,example,amp,68,i,br,amp,x,i,hex,i,i,example,amp,x,e5,case,insensitive,i,br,blockquote,gracefully,handles,malformed,character,references,by,copying,original,characters,as,is,when,encountered,p,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,escaped,input,string,return,the,unescaped,string;public,static,string,html,unescape,string,input,if,input,null,return,null,return,new,html,character,entity,decoder,character,entity,references,input,decode
HtmlUtils -> public static String htmlUnescape(String input);1414088972;Turn HTML character references into their plain text UNICODE equivalent._<p>Handles complete character set defined in HTML 4.01 recommendation_and all reference types (decimal, hex, and entity)._<p>Correctly converts the following formats:_<blockquote>_&amp_#<i>Entity</i>_ - <i>(Example: &amp_amp_) case sensitive</i>_&amp_#<i>Decimal</i>_ - <i>(Example: &amp_#68_)</i><br>_&amp_#x<i>Hex</i>_ - <i>(Example: &amp_#xE5_) case insensitive</i><br>_</blockquote>_Gracefully handles malformed character references by copying original_characters as is when encountered.<p>_<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (escaped) input string_@return the unescaped string;public static String htmlUnescape(String input) {_		if (input == null) {_			return null__		}_		return new HtmlCharacterEntityDecoder(characterEntityReferences, input).decode()__	};turn,html,character,references,into,their,plain,text,unicode,equivalent,p,handles,complete,character,set,defined,in,html,4,01,recommendation,and,all,reference,types,decimal,hex,and,entity,p,correctly,converts,the,following,formats,blockquote,amp,i,entity,i,i,example,amp,amp,case,sensitive,i,amp,i,decimal,i,i,example,amp,68,i,br,amp,x,i,hex,i,i,example,amp,x,e5,case,insensitive,i,br,blockquote,gracefully,handles,malformed,character,references,by,copying,original,characters,as,is,when,encountered,p,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,escaped,input,string,return,the,unescaped,string;public,static,string,html,unescape,string,input,if,input,null,return,null,return,new,html,character,entity,decoder,character,entity,references,input,decode
HtmlUtils -> public static String htmlUnescape(String input);1426267150;Turn HTML character references into their plain text UNICODE equivalent._<p>Handles complete character set defined in HTML 4.01 recommendation_and all reference types (decimal, hex, and entity)._<p>Correctly converts the following formats:_<blockquote>_&amp_#<i>Entity</i>_ - <i>(Example: &amp_amp_) case sensitive</i>_&amp_#<i>Decimal</i>_ - <i>(Example: &amp_#68_)</i><br>_&amp_#x<i>Hex</i>_ - <i>(Example: &amp_#xE5_) case insensitive</i><br>_</blockquote>_Gracefully handles malformed character references by copying original_characters as is when encountered.<p>_<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (escaped) input string_@return the unescaped string;public static String htmlUnescape(String input) {_		if (input == null) {_			return null__		}_		return new HtmlCharacterEntityDecoder(characterEntityReferences, input).decode()__	};turn,html,character,references,into,their,plain,text,unicode,equivalent,p,handles,complete,character,set,defined,in,html,4,01,recommendation,and,all,reference,types,decimal,hex,and,entity,p,correctly,converts,the,following,formats,blockquote,amp,i,entity,i,i,example,amp,amp,case,sensitive,i,amp,i,decimal,i,i,example,amp,68,i,br,amp,x,i,hex,i,i,example,amp,x,e5,case,insensitive,i,br,blockquote,gracefully,handles,malformed,character,references,by,copying,original,characters,as,is,when,encountered,p,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,escaped,input,string,return,the,unescaped,string;public,static,string,html,unescape,string,input,if,input,null,return,null,return,new,html,character,entity,decoder,character,entity,references,input,decode
HtmlUtils -> public static String htmlUnescape(String input);1468613531;Turn HTML character references into their plain text UNICODE equivalent._<p>Handles complete character set defined in HTML 4.01 recommendation_and all reference types (decimal, hex, and entity)._<p>Correctly converts the following formats:_<blockquote>_&amp_#<i>Entity</i>_ - <i>(Example: &amp_amp_) case sensitive</i>_&amp_#<i>Decimal</i>_ - <i>(Example: &amp_#68_)</i><br>_&amp_#x<i>Hex</i>_ - <i>(Example: &amp_#xE5_) case insensitive</i><br>_</blockquote>_Gracefully handles malformed character references by copying original_characters as is when encountered.<p>_<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (escaped) input string_@return the unescaped string;public static String htmlUnescape(String input) {_		if (input == null) {_			return null__		}_		return new HtmlCharacterEntityDecoder(characterEntityReferences, input).decode()__	};turn,html,character,references,into,their,plain,text,unicode,equivalent,p,handles,complete,character,set,defined,in,html,4,01,recommendation,and,all,reference,types,decimal,hex,and,entity,p,correctly,converts,the,following,formats,blockquote,amp,i,entity,i,i,example,amp,amp,case,sensitive,i,amp,i,decimal,i,i,example,amp,68,i,br,amp,x,i,hex,i,i,example,amp,x,e5,case,insensitive,i,br,blockquote,gracefully,handles,malformed,character,references,by,copying,original,characters,as,is,when,encountered,p,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,escaped,input,string,return,the,unescaped,string;public,static,string,html,unescape,string,input,if,input,null,return,null,return,new,html,character,entity,decoder,character,entity,references,input,decode
HtmlUtils -> public static String htmlUnescape(String input);1468964552;Turn HTML character references into their plain text UNICODE equivalent._<p>Handles complete character set defined in HTML 4.01 recommendation_and all reference types (decimal, hex, and entity)._<p>Correctly converts the following formats:_<blockquote>_&amp_#<i>Entity</i>_ - <i>(Example: &amp_amp_) case sensitive</i>_&amp_#<i>Decimal</i>_ - <i>(Example: &amp_#68_)</i><br>_&amp_#x<i>Hex</i>_ - <i>(Example: &amp_#xE5_) case insensitive</i><br>_</blockquote>_Gracefully handles malformed character references by copying original_characters as is when encountered.<p>_<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (escaped) input string_@return the unescaped string;public static String htmlUnescape(String input) {_		if (input == null) {_			return null__		}_		return new HtmlCharacterEntityDecoder(characterEntityReferences, input).decode()__	};turn,html,character,references,into,their,plain,text,unicode,equivalent,p,handles,complete,character,set,defined,in,html,4,01,recommendation,and,all,reference,types,decimal,hex,and,entity,p,correctly,converts,the,following,formats,blockquote,amp,i,entity,i,i,example,amp,amp,case,sensitive,i,amp,i,decimal,i,i,example,amp,68,i,br,amp,x,i,hex,i,i,example,amp,x,e5,case,insensitive,i,br,blockquote,gracefully,handles,malformed,character,references,by,copying,original,characters,as,is,when,encountered,p,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,escaped,input,string,return,the,unescaped,string;public,static,string,html,unescape,string,input,if,input,null,return,null,return,new,html,character,entity,decoder,character,entity,references,input,decode
HtmlUtils -> public static String htmlUnescape(String input);1496837955;Turn HTML character references into their plain text UNICODE equivalent._<p>Handles complete character set defined in HTML 4.01 recommendation_and all reference types (decimal, hex, and entity)._<p>Correctly converts the following formats:_<blockquote>_&amp_#<i>Entity</i>_ - <i>(Example: &amp_amp_) case sensitive</i>_&amp_#<i>Decimal</i>_ - <i>(Example: &amp_#68_)</i><br>_&amp_#x<i>Hex</i>_ - <i>(Example: &amp_#xE5_) case insensitive</i><br>_</blockquote>_Gracefully handles malformed character references by copying original_characters as is when encountered.<p>_<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (escaped) input string_@return the unescaped string;public static String htmlUnescape(String input) {_		return new HtmlCharacterEntityDecoder(characterEntityReferences, input).decode()__	};turn,html,character,references,into,their,plain,text,unicode,equivalent,p,handles,complete,character,set,defined,in,html,4,01,recommendation,and,all,reference,types,decimal,hex,and,entity,p,correctly,converts,the,following,formats,blockquote,amp,i,entity,i,i,example,amp,amp,case,sensitive,i,amp,i,decimal,i,i,example,amp,68,i,br,amp,x,i,hex,i,i,example,amp,x,e5,case,insensitive,i,br,blockquote,gracefully,handles,malformed,character,references,by,copying,original,characters,as,is,when,encountered,p,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,escaped,input,string,return,the,unescaped,string;public,static,string,html,unescape,string,input,return,new,html,character,entity,decoder,character,entity,references,input,decode
HtmlUtils -> public static String htmlEscape(String input);1328020251;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding_entity reference (e.g. <code>&lt_</code>)._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@return the escaped string;public static String htmlEscape(String input) {_		if (input == null) {_			return null__		}_		StringBuilder escaped = new StringBuilder(input.length() * 2)__		for (int i = 0_ i < input.length()_ i++) {_			char character = input.charAt(i)__			String reference = characterEntityReferences.convertToReference(character)__			if (reference != null) {_				escaped.append(reference)__			}_			else {_				escaped.append(character)__			}_		}_		return escaped.toString()__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,entity,reference,e,g,code,lt,code,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,return,the,escaped,string;public,static,string,html,escape,string,input,if,input,null,return,null,string,builder,escaped,new,string,builder,input,length,2,for,int,i,0,i,input,length,i,char,character,input,char,at,i,string,reference,character,entity,references,convert,to,reference,character,if,reference,null,escaped,append,reference,else,escaped,append,character,return,escaped,to,string
HtmlUtils -> public static String htmlEscape(String input);1356735495;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding_entity reference (e.g. {@code &lt_})._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@return the escaped string;public static String htmlEscape(String input) {_		if (input == null) {_			return null__		}_		StringBuilder escaped = new StringBuilder(input.length() * 2)__		for (int i = 0_ i < input.length()_ i++) {_			char character = input.charAt(i)__			String reference = characterEntityReferences.convertToReference(character)__			if (reference != null) {_				escaped.append(reference)__			}_			else {_				escaped.append(character)__			}_		}_		return escaped.toString()__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,entity,reference,e,g,code,lt,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,return,the,escaped,string;public,static,string,html,escape,string,input,if,input,null,return,null,string,builder,escaped,new,string,builder,input,length,2,for,int,i,0,i,input,length,i,char,character,input,char,at,i,string,reference,character,entity,references,convert,to,reference,character,if,reference,null,escaped,append,reference,else,escaped,append,character,return,escaped,to,string
HtmlUtils -> public static String htmlEscape(String input);1413906577;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding_entity reference (e.g. {@code &lt_})._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@return the escaped string;public static String htmlEscape(String input) {_		return htmlEscape(input, WebUtils.DEFAULT_CHARACTER_ENCODING)__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,entity,reference,e,g,code,lt,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,return,the,escaped,string;public,static,string,html,escape,string,input,return,html,escape,input,web,utils
HtmlUtils -> public static String htmlEscape(String input);1414077840;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding_entity reference (e.g. {@code &lt_})._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@return the escaped string;public static String htmlEscape(String input) {_		return htmlEscape(input, WebUtils.DEFAULT_CHARACTER_ENCODING)__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,entity,reference,e,g,code,lt,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,return,the,escaped,string;public,static,string,html,escape,string,input,return,html,escape,input,web,utils
HtmlUtils -> public static String htmlEscape(String input);1414088972;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding_entity reference (e.g. {@code &lt_})._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@return the escaped string;public static String htmlEscape(String input) {_		return htmlEscape(input, WebUtils.DEFAULT_CHARACTER_ENCODING)__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,entity,reference,e,g,code,lt,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,return,the,escaped,string;public,static,string,html,escape,string,input,return,html,escape,input,web,utils
HtmlUtils -> public static String htmlEscape(String input);1426267150;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding_entity reference (e.g. {@code &lt_})._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@return the escaped string;public static String htmlEscape(String input) {_		return htmlEscape(input, WebUtils.DEFAULT_CHARACTER_ENCODING)__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,entity,reference,e,g,code,lt,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,return,the,escaped,string;public,static,string,html,escape,string,input,return,html,escape,input,web,utils
HtmlUtils -> public static String htmlEscape(String input);1468613531;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding_entity reference (e.g. {@code &lt_})._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@return the escaped string;public static String htmlEscape(String input) {_		return htmlEscape(input, WebUtils.DEFAULT_CHARACTER_ENCODING)__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,entity,reference,e,g,code,lt,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,return,the,escaped,string;public,static,string,html,escape,string,input,return,html,escape,input,web,utils
HtmlUtils -> public static String htmlEscape(String input);1468964552;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding_entity reference (e.g. {@code &lt_})._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@return the escaped string;public static String htmlEscape(String input) {_		return htmlEscape(input, WebUtils.DEFAULT_CHARACTER_ENCODING)__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,entity,reference,e,g,code,lt,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,return,the,escaped,string;public,static,string,html,escape,string,input,return,html,escape,input,web,utils
HtmlUtils -> public static String htmlEscape(String input);1496837955;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding_entity reference (e.g. {@code &lt_})._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@return the escaped string;public static String htmlEscape(String input) {_		return htmlEscape(input, WebUtils.DEFAULT_CHARACTER_ENCODING)__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,entity,reference,e,g,code,lt,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,return,the,escaped,string;public,static,string,html,escape,string,input,return,html,escape,input,web,utils
HtmlUtils -> public static String htmlEscapeHex(String input);1328020251;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding numeric_reference in hex format (&#x<i>Hex</i>_)._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@return the escaped string;public static String htmlEscapeHex(String input) {_		if (input == null) {_			return null__		}_		StringBuilder escaped = new StringBuilder(input.length() * 2)__		for (int i = 0_ i < input.length()_ i++) {_			char character = input.charAt(i)__			if (characterEntityReferences.isMappedToReference(character)) {_				escaped.append(HtmlCharacterEntityReferences.HEX_REFERENCE_START)__				escaped.append(Integer.toString((int) character, 16))__				escaped.append(HtmlCharacterEntityReferences.REFERENCE_END)__			}_			else {_				escaped.append(character)__			}_		}_		return escaped.toString()__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,numeric,reference,in,hex,format,x,i,hex,i,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,return,the,escaped,string;public,static,string,html,escape,hex,string,input,if,input,null,return,null,string,builder,escaped,new,string,builder,input,length,2,for,int,i,0,i,input,length,i,char,character,input,char,at,i,if,character,entity,references,is,mapped,to,reference,character,escaped,append,html,character,entity,references,escaped,append,integer,to,string,int,character,16,escaped,append,html,character,entity,references,else,escaped,append,character,return,escaped,to,string
HtmlUtils -> public static String htmlEscapeHex(String input);1356735495;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding numeric_reference in hex format (&#x<i>Hex</i>_)._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@return the escaped string;public static String htmlEscapeHex(String input) {_		if (input == null) {_			return null__		}_		StringBuilder escaped = new StringBuilder(input.length() * 2)__		for (int i = 0_ i < input.length()_ i++) {_			char character = input.charAt(i)__			if (characterEntityReferences.isMappedToReference(character)) {_				escaped.append(HtmlCharacterEntityReferences.HEX_REFERENCE_START)__				escaped.append(Integer.toString(character, 16))__				escaped.append(HtmlCharacterEntityReferences.REFERENCE_END)__			}_			else {_				escaped.append(character)__			}_		}_		return escaped.toString()__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,numeric,reference,in,hex,format,x,i,hex,i,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,return,the,escaped,string;public,static,string,html,escape,hex,string,input,if,input,null,return,null,string,builder,escaped,new,string,builder,input,length,2,for,int,i,0,i,input,length,i,char,character,input,char,at,i,if,character,entity,references,is,mapped,to,reference,character,escaped,append,html,character,entity,references,escaped,append,integer,to,string,character,16,escaped,append,html,character,entity,references,else,escaped,append,character,return,escaped,to,string
HtmlUtils -> public static String htmlEscapeHex(String input);1413906577;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding numeric_reference in hex format (&#x<i>Hex</i>_)._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@return the escaped string;public static String htmlEscapeHex(String input) {_		return htmlEscapeHex(input, WebUtils.DEFAULT_CHARACTER_ENCODING)__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,numeric,reference,in,hex,format,x,i,hex,i,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,return,the,escaped,string;public,static,string,html,escape,hex,string,input,return,html,escape,hex,input,web,utils
HtmlUtils -> public static String htmlEscapeHex(String input);1414077840;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding numeric_reference in hex format (&#x<i>Hex</i>_)._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@return the escaped string;public static String htmlEscapeHex(String input) {_		return htmlEscapeHex(input, WebUtils.DEFAULT_CHARACTER_ENCODING)__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,numeric,reference,in,hex,format,x,i,hex,i,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,return,the,escaped,string;public,static,string,html,escape,hex,string,input,return,html,escape,hex,input,web,utils
HtmlUtils -> public static String htmlEscapeHex(String input);1414088972;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding numeric_reference in hex format (&#x<i>Hex</i>_)._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@return the escaped string;public static String htmlEscapeHex(String input) {_		return htmlEscapeHex(input, WebUtils.DEFAULT_CHARACTER_ENCODING)__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,numeric,reference,in,hex,format,x,i,hex,i,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,return,the,escaped,string;public,static,string,html,escape,hex,string,input,return,html,escape,hex,input,web,utils
HtmlUtils -> public static String htmlEscapeHex(String input);1426267150;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding numeric_reference in hex format (&#x<i>Hex</i>_)._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@return the escaped string;public static String htmlEscapeHex(String input) {_		return htmlEscapeHex(input, WebUtils.DEFAULT_CHARACTER_ENCODING)__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,numeric,reference,in,hex,format,x,i,hex,i,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,return,the,escaped,string;public,static,string,html,escape,hex,string,input,return,html,escape,hex,input,web,utils
HtmlUtils -> public static String htmlEscapeHex(String input);1468613531;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding numeric_reference in hex format (&#x<i>Hex</i>_)._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@return the escaped string;public static String htmlEscapeHex(String input) {_		return htmlEscapeHex(input, WebUtils.DEFAULT_CHARACTER_ENCODING)__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,numeric,reference,in,hex,format,x,i,hex,i,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,return,the,escaped,string;public,static,string,html,escape,hex,string,input,return,html,escape,hex,input,web,utils
HtmlUtils -> public static String htmlEscapeHex(String input);1468964552;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding numeric_reference in hex format (&#x<i>Hex</i>_)._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@return the escaped string;public static String htmlEscapeHex(String input) {_		return htmlEscapeHex(input, WebUtils.DEFAULT_CHARACTER_ENCODING)__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,numeric,reference,in,hex,format,x,i,hex,i,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,return,the,escaped,string;public,static,string,html,escape,hex,string,input,return,html,escape,hex,input,web,utils
HtmlUtils -> public static String htmlEscapeHex(String input);1496837955;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding numeric_reference in hex format (&#x<i>Hex</i>_)._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@return the escaped string;public static String htmlEscapeHex(String input) {_		return htmlEscapeHex(input, WebUtils.DEFAULT_CHARACTER_ENCODING)__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,numeric,reference,in,hex,format,x,i,hex,i,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,return,the,escaped,string;public,static,string,html,escape,hex,string,input,return,html,escape,hex,input,web,utils
HtmlUtils -> public static String htmlEscape(String input, String encoding);1413906577;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding_entity reference (e.g. {@code &lt_}) at least as required by the_specified encoding. In other words, if a special character does_not have to be escaped for the given encoding, it may not be._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@param encoding The name of a supported {@link java.nio.charset.Charset charset}_@return the escaped string;public static String htmlEscape(String input, String encoding) {_		Assert.notNull(encoding, "encoding is required")__		if (input == null) {_			return null__		}_		StringBuilder escaped = new StringBuilder(input.length() * 2)__		for (int i = 0_ i < input.length()_ i++) {_			char character = input.charAt(i)__			String reference = characterEntityReferences.convertToReference(character, encoding)__			if (reference != null) {_				escaped.append(reference)__			}_			else {_				escaped.append(character)__			}_		}_		return escaped.toString()__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,entity,reference,e,g,code,lt,at,least,as,required,by,the,specified,encoding,in,other,words,if,a,special,character,does,not,have,to,be,escaped,for,the,given,encoding,it,may,not,be,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,param,encoding,the,name,of,a,supported,link,java,nio,charset,charset,charset,return,the,escaped,string;public,static,string,html,escape,string,input,string,encoding,assert,not,null,encoding,encoding,is,required,if,input,null,return,null,string,builder,escaped,new,string,builder,input,length,2,for,int,i,0,i,input,length,i,char,character,input,char,at,i,string,reference,character,entity,references,convert,to,reference,character,encoding,if,reference,null,escaped,append,reference,else,escaped,append,character,return,escaped,to,string
HtmlUtils -> public static String htmlEscape(String input, String encoding);1414077840;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding_entity reference (e.g. {@code &lt_}) at least as required by the_specified encoding. In other words, if a special character does_not have to be escaped for the given encoding, it may not be._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@param encoding The name of a supported {@link java.nio.charset.Charset charset}_@return the escaped string_@since 4.1.2;public static String htmlEscape(String input, String encoding) {_		Assert.notNull(encoding, "Encoding is required")__		if (input == null) {_			return null__		}_		StringBuilder escaped = new StringBuilder(input.length() * 2)__		for (int i = 0_ i < input.length()_ i++) {_			char character = input.charAt(i)__			String reference = characterEntityReferences.convertToReference(character, encoding)__			if (reference != null) {_				escaped.append(reference)__			}_			else {_				escaped.append(character)__			}_		}_		return escaped.toString()__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,entity,reference,e,g,code,lt,at,least,as,required,by,the,specified,encoding,in,other,words,if,a,special,character,does,not,have,to,be,escaped,for,the,given,encoding,it,may,not,be,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,param,encoding,the,name,of,a,supported,link,java,nio,charset,charset,charset,return,the,escaped,string,since,4,1,2;public,static,string,html,escape,string,input,string,encoding,assert,not,null,encoding,encoding,is,required,if,input,null,return,null,string,builder,escaped,new,string,builder,input,length,2,for,int,i,0,i,input,length,i,char,character,input,char,at,i,string,reference,character,entity,references,convert,to,reference,character,encoding,if,reference,null,escaped,append,reference,else,escaped,append,character,return,escaped,to,string
HtmlUtils -> public static String htmlEscape(String input, String encoding);1414088972;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding_entity reference (e.g. {@code &lt_}) at least as required by the_specified encoding. In other words, if a special character does_not have to be escaped for the given encoding, it may not be._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@param encoding The name of a supported {@link java.nio.charset.Charset charset}_@return the escaped string_@since 4.1.2;public static String htmlEscape(String input, String encoding) {_		Assert.notNull(encoding, "Encoding is required")__		if (input == null) {_			return null__		}_		StringBuilder escaped = new StringBuilder(input.length() * 2)__		for (int i = 0_ i < input.length()_ i++) {_			char character = input.charAt(i)__			String reference = characterEntityReferences.convertToReference(character, encoding)__			if (reference != null) {_				escaped.append(reference)__			}_			else {_				escaped.append(character)__			}_		}_		return escaped.toString()__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,entity,reference,e,g,code,lt,at,least,as,required,by,the,specified,encoding,in,other,words,if,a,special,character,does,not,have,to,be,escaped,for,the,given,encoding,it,may,not,be,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,param,encoding,the,name,of,a,supported,link,java,nio,charset,charset,charset,return,the,escaped,string,since,4,1,2;public,static,string,html,escape,string,input,string,encoding,assert,not,null,encoding,encoding,is,required,if,input,null,return,null,string,builder,escaped,new,string,builder,input,length,2,for,int,i,0,i,input,length,i,char,character,input,char,at,i,string,reference,character,entity,references,convert,to,reference,character,encoding,if,reference,null,escaped,append,reference,else,escaped,append,character,return,escaped,to,string
HtmlUtils -> public static String htmlEscape(String input, String encoding);1426267150;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding_entity reference (e.g. {@code &lt_}) at least as required by the_specified encoding. In other words, if a special character does_not have to be escaped for the given encoding, it may not be._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@param encoding The name of a supported {@link java.nio.charset.Charset charset}_@return the escaped string_@since 4.1.2;public static String htmlEscape(String input, String encoding) {_		Assert.notNull(encoding, "Encoding is required")__		if (input == null) {_			return null__		}_		StringBuilder escaped = new StringBuilder(input.length() * 2)__		for (int i = 0_ i < input.length()_ i++) {_			char character = input.charAt(i)__			String reference = characterEntityReferences.convertToReference(character, encoding)__			if (reference != null) {_				escaped.append(reference)__			}_			else {_				escaped.append(character)__			}_		}_		return escaped.toString()__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,entity,reference,e,g,code,lt,at,least,as,required,by,the,specified,encoding,in,other,words,if,a,special,character,does,not,have,to,be,escaped,for,the,given,encoding,it,may,not,be,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,param,encoding,the,name,of,a,supported,link,java,nio,charset,charset,charset,return,the,escaped,string,since,4,1,2;public,static,string,html,escape,string,input,string,encoding,assert,not,null,encoding,encoding,is,required,if,input,null,return,null,string,builder,escaped,new,string,builder,input,length,2,for,int,i,0,i,input,length,i,char,character,input,char,at,i,string,reference,character,entity,references,convert,to,reference,character,encoding,if,reference,null,escaped,append,reference,else,escaped,append,character,return,escaped,to,string
HtmlUtils -> public static String htmlEscape(String input, String encoding);1468613531;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding_entity reference (e.g. {@code &lt_}) at least as required by the_specified encoding. In other words, if a special character does_not have to be escaped for the given encoding, it may not be._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@param encoding The name of a supported {@link java.nio.charset.Charset charset}_@return the escaped string_@since 4.1.2;public static String htmlEscape(String input, String encoding) {_		Assert.notNull(encoding, "Encoding is required")__		if (input == null) {_			return null__		}_		StringBuilder escaped = new StringBuilder(input.length() * 2)__		for (int i = 0_ i < input.length()_ i++) {_			char character = input.charAt(i)__			String reference = characterEntityReferences.convertToReference(character, encoding)__			if (reference != null) {_				escaped.append(reference)__			}_			else {_				escaped.append(character)__			}_		}_		return escaped.toString()__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,entity,reference,e,g,code,lt,at,least,as,required,by,the,specified,encoding,in,other,words,if,a,special,character,does,not,have,to,be,escaped,for,the,given,encoding,it,may,not,be,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,param,encoding,the,name,of,a,supported,link,java,nio,charset,charset,charset,return,the,escaped,string,since,4,1,2;public,static,string,html,escape,string,input,string,encoding,assert,not,null,encoding,encoding,is,required,if,input,null,return,null,string,builder,escaped,new,string,builder,input,length,2,for,int,i,0,i,input,length,i,char,character,input,char,at,i,string,reference,character,entity,references,convert,to,reference,character,encoding,if,reference,null,escaped,append,reference,else,escaped,append,character,return,escaped,to,string
HtmlUtils -> public static String htmlEscape(String input, String encoding);1468964552;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding_entity reference (e.g. {@code &lt_}) at least as required by the_specified encoding. In other words, if a special character does_not have to be escaped for the given encoding, it may not be._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@param encoding the name of a supported {@link java.nio.charset.Charset charset}_@return the escaped string_@since 4.1.2;public static String htmlEscape(String input, String encoding) {_		Assert.notNull(encoding, "Encoding is required")__		if (input == null) {_			return null__		}_		StringBuilder escaped = new StringBuilder(input.length() * 2)__		for (int i = 0_ i < input.length()_ i++) {_			char character = input.charAt(i)__			String reference = characterEntityReferences.convertToReference(character, encoding)__			if (reference != null) {_				escaped.append(reference)__			}_			else {_				escaped.append(character)__			}_		}_		return escaped.toString()__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,entity,reference,e,g,code,lt,at,least,as,required,by,the,specified,encoding,in,other,words,if,a,special,character,does,not,have,to,be,escaped,for,the,given,encoding,it,may,not,be,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,param,encoding,the,name,of,a,supported,link,java,nio,charset,charset,charset,return,the,escaped,string,since,4,1,2;public,static,string,html,escape,string,input,string,encoding,assert,not,null,encoding,encoding,is,required,if,input,null,return,null,string,builder,escaped,new,string,builder,input,length,2,for,int,i,0,i,input,length,i,char,character,input,char,at,i,string,reference,character,entity,references,convert,to,reference,character,encoding,if,reference,null,escaped,append,reference,else,escaped,append,character,return,escaped,to,string
HtmlUtils -> public static String htmlEscape(String input, String encoding);1496837955;Turn special characters into HTML character references._Handles complete character set defined in HTML 4.01 recommendation._<p>Escapes all special characters to their corresponding_entity reference (e.g. {@code &lt_}) at least as required by the_specified encoding. In other words, if a special character does_not have to be escaped for the given encoding, it may not be._<p>Reference:_<a href="http://www.w3.org/TR/html4/sgml/entities.html">_http://www.w3.org/TR/html4/sgml/entities.html_</a>_@param input the (unescaped) input string_@param encoding the name of a supported {@link java.nio.charset.Charset charset}_@return the escaped string_@since 4.1.2;public static String htmlEscape(String input, String encoding) {_		Assert.notNull(input, "Input is required")__		Assert.notNull(encoding, "Encoding is required")__		StringBuilder escaped = new StringBuilder(input.length() * 2)__		for (int i = 0_ i < input.length()_ i++) {_			char character = input.charAt(i)__			String reference = characterEntityReferences.convertToReference(character, encoding)__			if (reference != null) {_				escaped.append(reference)__			}_			else {_				escaped.append(character)__			}_		}_		return escaped.toString()__	};turn,special,characters,into,html,character,references,handles,complete,character,set,defined,in,html,4,01,recommendation,p,escapes,all,special,characters,to,their,corresponding,entity,reference,e,g,code,lt,at,least,as,required,by,the,specified,encoding,in,other,words,if,a,special,character,does,not,have,to,be,escaped,for,the,given,encoding,it,may,not,be,p,reference,a,href,http,www,w3,org,tr,html4,sgml,entities,html,http,www,w3,org,tr,html4,sgml,entities,html,a,param,input,the,unescaped,input,string,param,encoding,the,name,of,a,supported,link,java,nio,charset,charset,charset,return,the,escaped,string,since,4,1,2;public,static,string,html,escape,string,input,string,encoding,assert,not,null,input,input,is,required,assert,not,null,encoding,encoding,is,required,string,builder,escaped,new,string,builder,input,length,2,for,int,i,0,i,input,length,i,char,character,input,char,at,i,string,reference,character,entity,references,convert,to,reference,character,encoding,if,reference,null,escaped,append,reference,else,escaped,append,character,return,escaped,to,string
