# id;timestamp;commentText;codeText;commentWords;codeWords
CompositeFilter -> public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, 			ServletException;1328020251;Forms a temporary chain from the list of delegate filters supplied ({@link #setFilters(List)}) and executes them_in order. Each filter delegates to the next one in the list, achieving the normal behaviour of a_{@link FilterChain}, despite the fact that this is a {@link Filter}.__@see Filter#doFilter(ServletRequest, ServletResponse, FilterChain);public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException,_			ServletException {_		new VirtualFilterChain(chain, filters).doFilter(request, response)__	};forms,a,temporary,chain,from,the,list,of,delegate,filters,supplied,link,set,filters,list,and,executes,them,in,order,each,filter,delegates,to,the,next,one,in,the,list,achieving,the,normal,behaviour,of,a,link,filter,chain,despite,the,fact,that,this,is,a,link,filter,see,filter,do,filter,servlet,request,servlet,response,filter,chain;public,void,do,filter,servlet,request,request,servlet,response,response,filter,chain,chain,throws,ioexception,servlet,exception,new,virtual,filter,chain,chain,filters,do,filter,request,response
CompositeFilter -> public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, 			ServletException;1357119239;Forms a temporary chain from the list of delegate filters supplied ({@link #setFilters(List)}) and executes them_in order. Each filter delegates to the next one in the list, achieving the normal behaviour of a_{@link FilterChain}, despite the fact that this is a {@link Filter}.__@see Filter#doFilter(ServletRequest, ServletResponse, FilterChain);public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException,_			ServletException {_		new VirtualFilterChain(chain, filters).doFilter(request, response)__	};forms,a,temporary,chain,from,the,list,of,delegate,filters,supplied,link,set,filters,list,and,executes,them,in,order,each,filter,delegates,to,the,next,one,in,the,list,achieving,the,normal,behaviour,of,a,link,filter,chain,despite,the,fact,that,this,is,a,link,filter,see,filter,do,filter,servlet,request,servlet,response,filter,chain;public,void,do,filter,servlet,request,request,servlet,response,response,filter,chain,chain,throws,ioexception,servlet,exception,new,virtual,filter,chain,chain,filters,do,filter,request,response
CompositeFilter -> @Override 	public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, 			ServletException;1356735495;Forms a temporary chain from the list of delegate filters supplied ({@link #setFilters(List)}) and executes them_in order. Each filter delegates to the next one in the list, achieving the normal behaviour of a_{@link FilterChain}, despite the fact that this is a {@link Filter}.__@see Filter#doFilter(ServletRequest, ServletResponse, FilterChain);@Override_	public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException,_			ServletException {_		new VirtualFilterChain(chain, filters).doFilter(request, response)__	};forms,a,temporary,chain,from,the,list,of,delegate,filters,supplied,link,set,filters,list,and,executes,them,in,order,each,filter,delegates,to,the,next,one,in,the,list,achieving,the,normal,behaviour,of,a,link,filter,chain,despite,the,fact,that,this,is,a,link,filter,see,filter,do,filter,servlet,request,servlet,response,filter,chain;override,public,void,do,filter,servlet,request,request,servlet,response,response,filter,chain,chain,throws,ioexception,servlet,exception,new,virtual,filter,chain,chain,filters,do,filter,request,response
CompositeFilter -> @Override 	public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, 			ServletException;1368482696;Forms a temporary chain from the list of delegate filters supplied ({@link #setFilters(List)}) and executes them_in order. Each filter delegates to the next one in the list, achieving the normal behaviour of a_{@link FilterChain}, despite the fact that this is a {@link Filter}.__@see Filter#doFilter(ServletRequest, ServletResponse, FilterChain);@Override_	public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException,_			ServletException {_		new VirtualFilterChain(chain, filters).doFilter(request, response)__	};forms,a,temporary,chain,from,the,list,of,delegate,filters,supplied,link,set,filters,list,and,executes,them,in,order,each,filter,delegates,to,the,next,one,in,the,list,achieving,the,normal,behaviour,of,a,link,filter,chain,despite,the,fact,that,this,is,a,link,filter,see,filter,do,filter,servlet,request,servlet,response,filter,chain;override,public,void,do,filter,servlet,request,request,servlet,response,response,filter,chain,chain,throws,ioexception,servlet,exception,new,virtual,filter,chain,chain,filters,do,filter,request,response
CompositeFilter -> @Override 	public void init(FilterConfig config) throws ServletException;1356735495;Initialize all the filters, calling each one's init method in turn in the order supplied.__@see Filter#init(FilterConfig);@Override_	public void init(FilterConfig config) throws ServletException {_		for (Filter filter : filters) {_			filter.init(config)__		}_	};initialize,all,the,filters,calling,each,one,s,init,method,in,turn,in,the,order,supplied,see,filter,init,filter,config;override,public,void,init,filter,config,config,throws,servlet,exception,for,filter,filter,filters,filter,init,config
CompositeFilter -> @Override 	public void init(FilterConfig config) throws ServletException;1368482696;Initialize all the filters, calling each one's init method in turn in the order supplied.__@see Filter#init(FilterConfig);@Override_	public void init(FilterConfig config) throws ServletException {_		for (Filter filter : filters) {_			filter.init(config)__		}_	};initialize,all,the,filters,calling,each,one,s,init,method,in,turn,in,the,order,supplied,see,filter,init,filter,config;override,public,void,init,filter,config,config,throws,servlet,exception,for,filter,filter,filters,filter,init,config
CompositeFilter -> @Override 	public void init(FilterConfig config) throws ServletException;1405696918;Initialize all the filters, calling each one's init method in turn in the order supplied._@see Filter#init(FilterConfig);@Override_	public void init(FilterConfig config) throws ServletException {_		for (Filter filter : this.filters) {_			filter.init(config)__		}_	};initialize,all,the,filters,calling,each,one,s,init,method,in,turn,in,the,order,supplied,see,filter,init,filter,config;override,public,void,init,filter,config,config,throws,servlet,exception,for,filter,filter,this,filters,filter,init,config
CompositeFilter -> @Override 	public void init(FilterConfig config) throws ServletException;1467730834;Initialize all the filters, calling each one's init method in turn in the order supplied._@see Filter#init(FilterConfig);@Override_	public void init(FilterConfig config) throws ServletException {_		for (Filter filter : this.filters) {_			filter.init(config)__		}_	};initialize,all,the,filters,calling,each,one,s,init,method,in,turn,in,the,order,supplied,see,filter,init,filter,config;override,public,void,init,filter,config,config,throws,servlet,exception,for,filter,filter,this,filters,filter,init,config
CompositeFilter -> @Override 	public void init(FilterConfig config) throws ServletException;1497251962;Initialize all the filters, calling each one's init method in turn in the order supplied._@see Filter#init(FilterConfig);@Override_	public void init(FilterConfig config) throws ServletException {_		for (Filter filter : this.filters) {_			filter.init(config)__		}_	};initialize,all,the,filters,calling,each,one,s,init,method,in,turn,in,the,order,supplied,see,filter,init,filter,config;override,public,void,init,filter,config,config,throws,servlet,exception,for,filter,filter,this,filters,filter,init,config
CompositeFilter -> public void init(FilterConfig config) throws ServletException;1328020251;Initialize all the filters, calling each one's init method in turn in the order supplied.__@see Filter#init(FilterConfig);public void init(FilterConfig config) throws ServletException {_		for (Filter filter : filters) {_			filter.init(config)__		}_	};initialize,all,the,filters,calling,each,one,s,init,method,in,turn,in,the,order,supplied,see,filter,init,filter,config;public,void,init,filter,config,config,throws,servlet,exception,for,filter,filter,filters,filter,init,config
CompositeFilter -> public void init(FilterConfig config) throws ServletException;1357119239;Initialize all the filters, calling each one's init method in turn in the order supplied.__@see Filter#init(FilterConfig);public void init(FilterConfig config) throws ServletException {_		for (Filter filter : filters) {_			filter.init(config)__		}_	};initialize,all,the,filters,calling,each,one,s,init,method,in,turn,in,the,order,supplied,see,filter,init,filter,config;public,void,init,filter,config,config,throws,servlet,exception,for,filter,filter,filters,filter,init,config
CompositeFilter -> @Override 	public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) 			throws IOException, ServletException;1405696918;Forms a temporary chain from the list of delegate filters supplied ({@link #setFilters})_and executes them in order. Each filter delegates to the next one in the list, achieving_the normal behavior of a {@link FilterChain}, despite the fact that this is a {@link Filter}._@see Filter#doFilter(ServletRequest, ServletResponse, FilterChain);@Override_	public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)_			throws IOException, ServletException {__		new VirtualFilterChain(chain, this.filters).doFilter(request, response)__	};forms,a,temporary,chain,from,the,list,of,delegate,filters,supplied,link,set,filters,and,executes,them,in,order,each,filter,delegates,to,the,next,one,in,the,list,achieving,the,normal,behavior,of,a,link,filter,chain,despite,the,fact,that,this,is,a,link,filter,see,filter,do,filter,servlet,request,servlet,response,filter,chain;override,public,void,do,filter,servlet,request,request,servlet,response,response,filter,chain,chain,throws,ioexception,servlet,exception,new,virtual,filter,chain,chain,this,filters,do,filter,request,response
CompositeFilter -> @Override 	public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) 			throws IOException, ServletException;1467730834;Forms a temporary chain from the list of delegate filters supplied ({@link #setFilters})_and executes them in order. Each filter delegates to the next one in the list, achieving_the normal behavior of a {@link FilterChain}, despite the fact that this is a {@link Filter}._@see Filter#doFilter(ServletRequest, ServletResponse, FilterChain);@Override_	public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)_			throws IOException, ServletException {__		new VirtualFilterChain(chain, this.filters).doFilter(request, response)__	};forms,a,temporary,chain,from,the,list,of,delegate,filters,supplied,link,set,filters,and,executes,them,in,order,each,filter,delegates,to,the,next,one,in,the,list,achieving,the,normal,behavior,of,a,link,filter,chain,despite,the,fact,that,this,is,a,link,filter,see,filter,do,filter,servlet,request,servlet,response,filter,chain;override,public,void,do,filter,servlet,request,request,servlet,response,response,filter,chain,chain,throws,ioexception,servlet,exception,new,virtual,filter,chain,chain,this,filters,do,filter,request,response
CompositeFilter -> @Override 	public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) 			throws IOException, ServletException;1497251962;Forms a temporary chain from the list of delegate filters supplied ({@link #setFilters})_and executes them in order. Each filter delegates to the next one in the list, achieving_the normal behavior of a {@link FilterChain}, despite the fact that this is a {@link Filter}._@see Filter#doFilter(ServletRequest, ServletResponse, FilterChain);@Override_	public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)_			throws IOException, ServletException {__		new VirtualFilterChain(chain, this.filters).doFilter(request, response)__	};forms,a,temporary,chain,from,the,list,of,delegate,filters,supplied,link,set,filters,and,executes,them,in,order,each,filter,delegates,to,the,next,one,in,the,list,achieving,the,normal,behavior,of,a,link,filter,chain,despite,the,fact,that,this,is,a,link,filter,see,filter,do,filter,servlet,request,servlet,response,filter,chain;override,public,void,do,filter,servlet,request,request,servlet,response,response,filter,chain,chain,throws,ioexception,servlet,exception,new,virtual,filter,chain,chain,this,filters,do,filter,request,response
CompositeFilter -> @Override 	public void destroy();1356735495;Clean up all the filters supplied, calling each one's destroy method in turn, but in reverse order.__@see Filter#init(FilterConfig);@Override_	public void destroy() {_		for (int i = filters.size()_ i-- > 0_) {_			Filter filter = filters.get(i)__			filter.destroy()__		}_	};clean,up,all,the,filters,supplied,calling,each,one,s,destroy,method,in,turn,but,in,reverse,order,see,filter,init,filter,config;override,public,void,destroy,for,int,i,filters,size,i,0,filter,filter,filters,get,i,filter,destroy
CompositeFilter -> @Override 	public void destroy();1368482696;Clean up all the filters supplied, calling each one's destroy method in turn, but in reverse order.__@see Filter#init(FilterConfig);@Override_	public void destroy() {_		for (int i = filters.size()_ i-- > 0_) {_			Filter filter = filters.get(i)__			filter.destroy()__		}_	};clean,up,all,the,filters,supplied,calling,each,one,s,destroy,method,in,turn,but,in,reverse,order,see,filter,init,filter,config;override,public,void,destroy,for,int,i,filters,size,i,0,filter,filter,filters,get,i,filter,destroy
CompositeFilter -> @Override 	public void destroy();1405696918;Clean up all the filters supplied, calling each one's destroy method in turn, but in reverse order._@see Filter#init(FilterConfig);@Override_	public void destroy() {_		for (int i = this.filters.size()_ i-- > 0_) {_			Filter filter = this.filters.get(i)__			filter.destroy()__		}_	};clean,up,all,the,filters,supplied,calling,each,one,s,destroy,method,in,turn,but,in,reverse,order,see,filter,init,filter,config;override,public,void,destroy,for,int,i,this,filters,size,i,0,filter,filter,this,filters,get,i,filter,destroy
CompositeFilter -> @Override 	public void destroy();1467730834;Clean up all the filters supplied, calling each one's destroy method in turn, but in reverse order._@see Filter#init(FilterConfig);@Override_	public void destroy() {_		for (int i = this.filters.size()_ i-- > 0_) {_			Filter filter = this.filters.get(i)__			filter.destroy()__		}_	};clean,up,all,the,filters,supplied,calling,each,one,s,destroy,method,in,turn,but,in,reverse,order,see,filter,init,filter,config;override,public,void,destroy,for,int,i,this,filters,size,i,0,filter,filter,this,filters,get,i,filter,destroy
CompositeFilter -> @Override 	public void destroy();1497251962;Clean up all the filters supplied, calling each one's destroy method in turn, but in reverse order._@see Filter#init(FilterConfig);@Override_	public void destroy() {_		for (int i = this.filters.size()_ i-- > 0_) {_			Filter filter = this.filters.get(i)__			filter.destroy()__		}_	};clean,up,all,the,filters,supplied,calling,each,one,s,destroy,method,in,turn,but,in,reverse,order,see,filter,init,filter,config;override,public,void,destroy,for,int,i,this,filters,size,i,0,filter,filter,this,filters,get,i,filter,destroy
CompositeFilter -> public void destroy();1328020251;Clean up all the filters supplied, calling each one's destroy method in turn, but in reverse order.__@see Filter#init(FilterConfig);public void destroy() {_		for (int i = filters.size()_ i-- > 0_) {_			Filter filter = filters.get(i)__			filter.destroy()__		}_	};clean,up,all,the,filters,supplied,calling,each,one,s,destroy,method,in,turn,but,in,reverse,order,see,filter,init,filter,config;public,void,destroy,for,int,i,filters,size,i,0,filter,filter,filters,get,i,filter,destroy
CompositeFilter -> public void destroy();1357119239;Clean up all the filters supplied, calling each one's destroy method in turn, but in reverse order.__@see Filter#init(FilterConfig);public void destroy() {_		for (int i = filters.size()_ i-- > 0_) {_			Filter filter = filters.get(i)__			filter.destroy()__		}_	};clean,up,all,the,filters,supplied,calling,each,one,s,destroy,method,in,turn,but,in,reverse,order,see,filter,init,filter,config;public,void,destroy,for,int,i,filters,size,i,0,filter,filter,filters,get,i,filter,destroy
