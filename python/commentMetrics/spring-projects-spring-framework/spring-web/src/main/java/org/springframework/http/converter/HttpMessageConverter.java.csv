# id;timestamp;commentText;codeText;commentWords;codeWords
HttpMessageConverter -> boolean canRead(Class<?> clazz, @Nullable MediaType mediaType)_;1495868221;Indicates whether the given class can be read by this converter._@param clazz the class to test for readability_@param mediaType the media type to read (can be {@code null} if not specified)__typically the value of a {@code Content-Type} header._@return {@code true} if readable_ {@code false} otherwise;boolean canRead(Class<?> clazz, @Nullable MediaType mediaType)_;indicates,whether,the,given,class,can,be,read,by,this,converter,param,clazz,the,class,to,test,for,readability,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,readable,code,false,otherwise;boolean,can,read,class,clazz,nullable,media,type,media,type
HttpMessageConverter -> boolean canRead(Class<?> clazz, @Nullable MediaType mediaType)_;1496259743;Indicates whether the given class can be read by this converter._@param clazz the class to test for readability_@param mediaType the media type to read (can be {@code null} if not specified)__typically the value of a {@code Content-Type} header._@return {@code true} if readable_ {@code false} otherwise;boolean canRead(Class<?> clazz, @Nullable MediaType mediaType)_;indicates,whether,the,given,class,can,be,read,by,this,converter,param,clazz,the,class,to,test,for,readability,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,readable,code,false,otherwise;boolean,can,read,class,clazz,nullable,media,type,media,type
HttpMessageConverter -> boolean canRead(Class<?> clazz, @Nullable MediaType mediaType)_;1496837955;Indicates whether the given class can be read by this converter._@param clazz the class to test for readability_@param mediaType the media type to read (can be {@code null} if not specified)__typically the value of a {@code Content-Type} header._@return {@code true} if readable_ {@code false} otherwise;boolean canRead(Class<?> clazz, @Nullable MediaType mediaType)_;indicates,whether,the,given,class,can,be,read,by,this,converter,param,clazz,the,class,to,test,for,readability,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,readable,code,false,otherwise;boolean,can,read,class,clazz,nullable,media,type,media,type
HttpMessageConverter -> boolean canRead(Class<?> clazz, @Nullable MediaType mediaType)_;1530174524;Indicates whether the given class can be read by this converter._@param clazz the class to test for readability_@param mediaType the media type to read (can be {@code null} if not specified)__typically the value of a {@code Content-Type} header._@return {@code true} if readable_ {@code false} otherwise;boolean canRead(Class<?> clazz, @Nullable MediaType mediaType)_;indicates,whether,the,given,class,can,be,read,by,this,converter,param,clazz,the,class,to,test,for,readability,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,readable,code,false,otherwise;boolean,can,read,class,clazz,nullable,media,type,media,type
HttpMessageConverter -> boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType)_;1495868221;Indicates whether the given class can be written by this converter._@param clazz the class to test for writability_@param mediaType the media type to write (can be {@code null} if not specified)__typically the value of an {@code Accept} header._@return {@code true} if writable_ {@code false} otherwise;boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType)_;indicates,whether,the,given,class,can,be,written,by,this,converter,param,clazz,the,class,to,test,for,writability,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,writable,code,false,otherwise;boolean,can,write,class,clazz,nullable,media,type,media,type
HttpMessageConverter -> boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType)_;1496259743;Indicates whether the given class can be written by this converter._@param clazz the class to test for writability_@param mediaType the media type to write (can be {@code null} if not specified)__typically the value of an {@code Accept} header._@return {@code true} if writable_ {@code false} otherwise;boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType)_;indicates,whether,the,given,class,can,be,written,by,this,converter,param,clazz,the,class,to,test,for,writability,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,writable,code,false,otherwise;boolean,can,write,class,clazz,nullable,media,type,media,type
HttpMessageConverter -> boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType)_;1496837955;Indicates whether the given class can be written by this converter._@param clazz the class to test for writability_@param mediaType the media type to write (can be {@code null} if not specified)__typically the value of an {@code Accept} header._@return {@code true} if writable_ {@code false} otherwise;boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType)_;indicates,whether,the,given,class,can,be,written,by,this,converter,param,clazz,the,class,to,test,for,writability,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,writable,code,false,otherwise;boolean,can,write,class,clazz,nullable,media,type,media,type
HttpMessageConverter -> boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType)_;1530174524;Indicates whether the given class can be written by this converter._@param clazz the class to test for writability_@param mediaType the media type to write (can be {@code null} if not specified)__typically the value of an {@code Accept} header._@return {@code true} if writable_ {@code false} otherwise;boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType)_;indicates,whether,the,given,class,can,be,written,by,this,converter,param,clazz,the,class,to,test,for,writability,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,writable,code,false,otherwise;boolean,can,write,class,clazz,nullable,media,type,media,type
HttpMessageConverter -> boolean canRead(Class<?> clazz, MediaType mediaType)_;1328020251;Indicates whether the given class can be read by this converter._@param clazz the class to test for readability_@param mediaType the media type to read, can be {@code null} if not specified._Typically the value of a {@code Content-Type} header._@return {@code true} if readable_ {@code false} otherwise;boolean canRead(Class<?> clazz, MediaType mediaType)_;indicates,whether,the,given,class,can,be,read,by,this,converter,param,clazz,the,class,to,test,for,readability,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,readable,code,false,otherwise;boolean,can,read,class,clazz,media,type,media,type
HttpMessageConverter -> boolean canRead(Class<?> clazz, MediaType mediaType)_;1491831405;Indicates whether the given class can be read by this converter._@param clazz the class to test for readability_@param mediaType the media type to read (can be {@code null} if not specified)__typically the value of a {@code Content-Type} header._@return {@code true} if readable_ {@code false} otherwise;boolean canRead(Class<?> clazz, MediaType mediaType)_;indicates,whether,the,given,class,can,be,read,by,this,converter,param,clazz,the,class,to,test,for,readability,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,readable,code,false,otherwise;boolean,can,read,class,clazz,media,type,media,type
HttpMessageConverter -> boolean canRead(Class<?> clazz, MediaType mediaType)_;1495284618;Indicates whether the given class can be read by this converter._@param clazz the class to test for readability_@param mediaType the media type to read (can be {@code null} if not specified)__typically the value of a {@code Content-Type} header._@return {@code true} if readable_ {@code false} otherwise;boolean canRead(Class<?> clazz, MediaType mediaType)_;indicates,whether,the,given,class,can,be,read,by,this,converter,param,clazz,the,class,to,test,for,readability,param,media,type,the,media,type,to,read,can,be,code,null,if,not,specified,typically,the,value,of,a,code,content,type,header,return,code,true,if,readable,code,false,otherwise;boolean,can,read,class,clazz,media,type,media,type
HttpMessageConverter -> T read(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1328020251;Read an object of the given type form the given input message, and returns it._@param clazz the type of object to return. This type must have previously been passed to the_{@link #canRead canRead} method of this interface, which must have returned {@code true}._@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;T read(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;read,an,object,of,the,given,type,form,the,given,input,message,and,returns,it,param,clazz,the,type,of,object,to,return,this,type,must,have,previously,been,passed,to,the,link,can,read,can,read,method,of,this,interface,which,must,have,returned,code,true,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
HttpMessageConverter -> T read(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1491831405;Read an object of the given type form the given input message, and returns it._@param clazz the type of object to return. This type must have previously been passed to the_{@link #canRead canRead} method of this interface, which must have returned {@code true}._@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;T read(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;read,an,object,of,the,given,type,form,the,given,input,message,and,returns,it,param,clazz,the,type,of,object,to,return,this,type,must,have,previously,been,passed,to,the,link,can,read,can,read,method,of,this,interface,which,must,have,returned,code,true,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
HttpMessageConverter -> T read(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1495284618;Read an object of the given type from the given input message, and returns it._@param clazz the type of object to return. This type must have previously been passed to the_{@link #canRead canRead} method of this interface, which must have returned {@code true}._@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;T read(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;read,an,object,of,the,given,type,from,the,given,input,message,and,returns,it,param,clazz,the,type,of,object,to,return,this,type,must,have,previously,been,passed,to,the,link,can,read,can,read,method,of,this,interface,which,must,have,returned,code,true,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
HttpMessageConverter -> T read(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1495868221;Read an object of the given type from the given input message, and returns it._@param clazz the type of object to return. This type must have previously been passed to the_{@link #canRead canRead} method of this interface, which must have returned {@code true}._@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;T read(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;read,an,object,of,the,given,type,from,the,given,input,message,and,returns,it,param,clazz,the,type,of,object,to,return,this,type,must,have,previously,been,passed,to,the,link,can,read,can,read,method,of,this,interface,which,must,have,returned,code,true,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
HttpMessageConverter -> T read(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1496837955;Read an object of the given type from the given input message, and returns it._@param clazz the type of object to return. This type must have previously been passed to the_{@link #canRead canRead} method of this interface, which must have returned {@code true}._@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;T read(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;read,an,object,of,the,given,type,from,the,given,input,message,and,returns,it,param,clazz,the,type,of,object,to,return,this,type,must,have,previously,been,passed,to,the,link,can,read,can,read,method,of,this,interface,which,must,have,returned,code,true,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
HttpMessageConverter -> T read(Class<? extends T> clazz, HttpInputMessage inputMessage) 			throws IOException, HttpMessageNotReadableException_;1530174524;Read an object of the given type from the given input message, and returns it._@param clazz the type of object to return. This type must have previously been passed to the_{@link #canRead canRead} method of this interface, which must have returned {@code true}._@param inputMessage the HTTP input message to read from_@return the converted object_@throws IOException in case of I/O errors_@throws HttpMessageNotReadableException in case of conversion errors;T read(Class<? extends T> clazz, HttpInputMessage inputMessage)_			throws IOException, HttpMessageNotReadableException_;read,an,object,of,the,given,type,from,the,given,input,message,and,returns,it,param,clazz,the,type,of,object,to,return,this,type,must,have,previously,been,passed,to,the,link,can,read,can,read,method,of,this,interface,which,must,have,returned,code,true,param,input,message,the,http,input,message,to,read,from,return,the,converted,object,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,readable,exception,in,case,of,conversion,errors;t,read,class,extends,t,clazz,http,input,message,input,message,throws,ioexception,http,message,not,readable,exception
HttpMessageConverter -> List<MediaType> getSupportedMediaTypes()_;1328020251;Return the list of {@link MediaType} objects supported by this converter._@return the list of supported media types;List<MediaType> getSupportedMediaTypes()_;return,the,list,of,link,media,type,objects,supported,by,this,converter,return,the,list,of,supported,media,types;list,media,type,get,supported,media,types
HttpMessageConverter -> List<MediaType> getSupportedMediaTypes()_;1491831405;Return the list of {@link MediaType} objects supported by this converter._@return the list of supported media types;List<MediaType> getSupportedMediaTypes()_;return,the,list,of,link,media,type,objects,supported,by,this,converter,return,the,list,of,supported,media,types;list,media,type,get,supported,media,types
HttpMessageConverter -> List<MediaType> getSupportedMediaTypes()_;1495284618;Return the list of {@link MediaType} objects supported by this converter._@return the list of supported media types;List<MediaType> getSupportedMediaTypes()_;return,the,list,of,link,media,type,objects,supported,by,this,converter,return,the,list,of,supported,media,types;list,media,type,get,supported,media,types
HttpMessageConverter -> List<MediaType> getSupportedMediaTypes()_;1495868221;Return the list of {@link MediaType} objects supported by this converter._@return the list of supported media types;List<MediaType> getSupportedMediaTypes()_;return,the,list,of,link,media,type,objects,supported,by,this,converter,return,the,list,of,supported,media,types;list,media,type,get,supported,media,types
HttpMessageConverter -> List<MediaType> getSupportedMediaTypes()_;1496259743;Return the list of {@link MediaType} objects supported by this converter._@return the list of supported media types;List<MediaType> getSupportedMediaTypes()_;return,the,list,of,link,media,type,objects,supported,by,this,converter,return,the,list,of,supported,media,types;list,media,type,get,supported,media,types
HttpMessageConverter -> List<MediaType> getSupportedMediaTypes()_;1496837955;Return the list of {@link MediaType} objects supported by this converter._@return the list of supported media types;List<MediaType> getSupportedMediaTypes()_;return,the,list,of,link,media,type,objects,supported,by,this,converter,return,the,list,of,supported,media,types;list,media,type,get,supported,media,types
HttpMessageConverter -> List<MediaType> getSupportedMediaTypes()_;1530174524;Return the list of {@link MediaType} objects supported by this converter._@return the list of supported media types;List<MediaType> getSupportedMediaTypes()_;return,the,list,of,link,media,type,objects,supported,by,this,converter,return,the,list,of,supported,media,types;list,media,type,get,supported,media,types
HttpMessageConverter -> boolean canWrite(Class<?> clazz, MediaType mediaType)_;1328020251;Indicates whether the given class can be written by this converter._@param clazz the class to test for writability_@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@return {@code true} if writable_ {@code false} otherwise;boolean canWrite(Class<?> clazz, MediaType mediaType)_;indicates,whether,the,given,class,can,be,written,by,this,converter,param,clazz,the,class,to,test,for,writability,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,writable,code,false,otherwise;boolean,can,write,class,clazz,media,type,media,type
HttpMessageConverter -> boolean canWrite(Class<?> clazz, MediaType mediaType)_;1491831405;Indicates whether the given class can be written by this converter._@param clazz the class to test for writability_@param mediaType the media type to write (can be {@code null} if not specified)__typically the value of an {@code Accept} header._@return {@code true} if writable_ {@code false} otherwise;boolean canWrite(Class<?> clazz, MediaType mediaType)_;indicates,whether,the,given,class,can,be,written,by,this,converter,param,clazz,the,class,to,test,for,writability,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,writable,code,false,otherwise;boolean,can,write,class,clazz,media,type,media,type
HttpMessageConverter -> boolean canWrite(Class<?> clazz, MediaType mediaType)_;1495284618;Indicates whether the given class can be written by this converter._@param clazz the class to test for writability_@param mediaType the media type to write (can be {@code null} if not specified)__typically the value of an {@code Accept} header._@return {@code true} if writable_ {@code false} otherwise;boolean canWrite(Class<?> clazz, MediaType mediaType)_;indicates,whether,the,given,class,can,be,written,by,this,converter,param,clazz,the,class,to,test,for,writability,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,writable,code,false,otherwise;boolean,can,write,class,clazz,media,type,media,type
HttpMessageConverter -> void write(T t, MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1328020251;Write an given object to the given output message._@param t the object to write to the output message. The type of this object must have previously been_passed to the {@link #canWrite canWrite} method of this interface, which must have returned {@code true}._@param contentType the content type to use when writing. May be {@code null} to indicate that the_default content type of the converter must be used. If not {@code null}, this media type must have_previously been passed to the {@link #canWrite canWrite} method of this interface, which must have_returned {@code true}._@param outputMessage the message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;void write(T t, MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;write,an,given,object,to,the,given,output,message,param,t,the,object,to,write,to,the,output,message,the,type,of,this,object,must,have,previously,been,passed,to,the,link,can,write,can,write,method,of,this,interface,which,must,have,returned,code,true,param,content,type,the,content,type,to,use,when,writing,may,be,code,null,to,indicate,that,the,default,content,type,of,the,converter,must,be,used,if,not,code,null,this,media,type,must,have,previously,been,passed,to,the,link,can,write,can,write,method,of,this,interface,which,must,have,returned,code,true,param,output,message,the,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;void,write,t,t,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
HttpMessageConverter -> void write(T t, MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1491831405;Write an given object to the given output message._@param t the object to write to the output message. The type of this object must have previously been_passed to the {@link #canWrite canWrite} method of this interface, which must have returned {@code true}._@param contentType the content type to use when writing. May be {@code null} to indicate that the_default content type of the converter must be used. If not {@code null}, this media type must have_previously been passed to the {@link #canWrite canWrite} method of this interface, which must have_returned {@code true}._@param outputMessage the message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;void write(T t, MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;write,an,given,object,to,the,given,output,message,param,t,the,object,to,write,to,the,output,message,the,type,of,this,object,must,have,previously,been,passed,to,the,link,can,write,can,write,method,of,this,interface,which,must,have,returned,code,true,param,content,type,the,content,type,to,use,when,writing,may,be,code,null,to,indicate,that,the,default,content,type,of,the,converter,must,be,used,if,not,code,null,this,media,type,must,have,previously,been,passed,to,the,link,can,write,can,write,method,of,this,interface,which,must,have,returned,code,true,param,output,message,the,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;void,write,t,t,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
HttpMessageConverter -> void write(T t, MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1495284618;Write an given object to the given output message._@param t the object to write to the output message. The type of this object must have previously been_passed to the {@link #canWrite canWrite} method of this interface, which must have returned {@code true}._@param contentType the content type to use when writing. May be {@code null} to indicate that the_default content type of the converter must be used. If not {@code null}, this media type must have_previously been passed to the {@link #canWrite canWrite} method of this interface, which must have_returned {@code true}._@param outputMessage the message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;void write(T t, MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;write,an,given,object,to,the,given,output,message,param,t,the,object,to,write,to,the,output,message,the,type,of,this,object,must,have,previously,been,passed,to,the,link,can,write,can,write,method,of,this,interface,which,must,have,returned,code,true,param,content,type,the,content,type,to,use,when,writing,may,be,code,null,to,indicate,that,the,default,content,type,of,the,converter,must,be,used,if,not,code,null,this,media,type,must,have,previously,been,passed,to,the,link,can,write,can,write,method,of,this,interface,which,must,have,returned,code,true,param,output,message,the,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;void,write,t,t,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
HttpMessageConverter -> void write(T t, @Nullable MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1495868221;Write an given object to the given output message._@param t the object to write to the output message. The type of this object must have previously been_passed to the {@link #canWrite canWrite} method of this interface, which must have returned {@code true}._@param contentType the content type to use when writing. May be {@code null} to indicate that the_default content type of the converter must be used. If not {@code null}, this media type must have_previously been passed to the {@link #canWrite canWrite} method of this interface, which must have_returned {@code true}._@param outputMessage the message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;void write(T t, @Nullable MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;write,an,given,object,to,the,given,output,message,param,t,the,object,to,write,to,the,output,message,the,type,of,this,object,must,have,previously,been,passed,to,the,link,can,write,can,write,method,of,this,interface,which,must,have,returned,code,true,param,content,type,the,content,type,to,use,when,writing,may,be,code,null,to,indicate,that,the,default,content,type,of,the,converter,must,be,used,if,not,code,null,this,media,type,must,have,previously,been,passed,to,the,link,can,write,can,write,method,of,this,interface,which,must,have,returned,code,true,param,output,message,the,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;void,write,t,t,nullable,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
HttpMessageConverter -> void write(T t, @Nullable MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1496259743;Write an given object to the given output message._@param t the object to write to the output message. The type of this object must have previously been_passed to the {@link #canWrite canWrite} method of this interface, which must have returned {@code true}._@param contentType the content type to use when writing. May be {@code null} to indicate that the_default content type of the converter must be used. If not {@code null}, this media type must have_previously been passed to the {@link #canWrite canWrite} method of this interface, which must have_returned {@code true}._@param outputMessage the message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;void write(T t, @Nullable MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;write,an,given,object,to,the,given,output,message,param,t,the,object,to,write,to,the,output,message,the,type,of,this,object,must,have,previously,been,passed,to,the,link,can,write,can,write,method,of,this,interface,which,must,have,returned,code,true,param,content,type,the,content,type,to,use,when,writing,may,be,code,null,to,indicate,that,the,default,content,type,of,the,converter,must,be,used,if,not,code,null,this,media,type,must,have,previously,been,passed,to,the,link,can,write,can,write,method,of,this,interface,which,must,have,returned,code,true,param,output,message,the,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;void,write,t,t,nullable,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
HttpMessageConverter -> void write(T t, @Nullable MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1496837955;Write an given object to the given output message._@param t the object to write to the output message. The type of this object must have previously been_passed to the {@link #canWrite canWrite} method of this interface, which must have returned {@code true}._@param contentType the content type to use when writing. May be {@code null} to indicate that the_default content type of the converter must be used. If not {@code null}, this media type must have_previously been passed to the {@link #canWrite canWrite} method of this interface, which must have_returned {@code true}._@param outputMessage the message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;void write(T t, @Nullable MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;write,an,given,object,to,the,given,output,message,param,t,the,object,to,write,to,the,output,message,the,type,of,this,object,must,have,previously,been,passed,to,the,link,can,write,can,write,method,of,this,interface,which,must,have,returned,code,true,param,content,type,the,content,type,to,use,when,writing,may,be,code,null,to,indicate,that,the,default,content,type,of,the,converter,must,be,used,if,not,code,null,this,media,type,must,have,previously,been,passed,to,the,link,can,write,can,write,method,of,this,interface,which,must,have,returned,code,true,param,output,message,the,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;void,write,t,t,nullable,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
HttpMessageConverter -> void write(T t, @Nullable MediaType contentType, HttpOutputMessage outputMessage) 			throws IOException, HttpMessageNotWritableException_;1530174524;Write an given object to the given output message._@param t the object to write to the output message. The type of this object must have previously been_passed to the {@link #canWrite canWrite} method of this interface, which must have returned {@code true}._@param contentType the content type to use when writing. May be {@code null} to indicate that the_default content type of the converter must be used. If not {@code null}, this media type must have_previously been passed to the {@link #canWrite canWrite} method of this interface, which must have_returned {@code true}._@param outputMessage the message to write to_@throws IOException in case of I/O errors_@throws HttpMessageNotWritableException in case of conversion errors;void write(T t, @Nullable MediaType contentType, HttpOutputMessage outputMessage)_			throws IOException, HttpMessageNotWritableException_;write,an,given,object,to,the,given,output,message,param,t,the,object,to,write,to,the,output,message,the,type,of,this,object,must,have,previously,been,passed,to,the,link,can,write,can,write,method,of,this,interface,which,must,have,returned,code,true,param,content,type,the,content,type,to,use,when,writing,may,be,code,null,to,indicate,that,the,default,content,type,of,the,converter,must,be,used,if,not,code,null,this,media,type,must,have,previously,been,passed,to,the,link,can,write,can,write,method,of,this,interface,which,must,have,returned,code,true,param,output,message,the,message,to,write,to,throws,ioexception,in,case,of,i,o,errors,throws,http,message,not,writable,exception,in,case,of,conversion,errors;void,write,t,t,nullable,media,type,content,type,http,output,message,output,message,throws,ioexception,http,message,not,writable,exception
