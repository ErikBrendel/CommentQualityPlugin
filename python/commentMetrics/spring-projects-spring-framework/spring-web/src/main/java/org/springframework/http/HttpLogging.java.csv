# id;timestamp;commentText;codeText;commentWords;codeWords
HttpLogging -> public static Log forLog(Log primaryLogger);1531942370;Wrap the given primary logger with a composite logger that delegates to_it or to the fallback logger "org.springframework.web.HttpLogging", if_the primary is not enabled._@param primaryLogger the primary logger to use_@return the resulting composite logger;public static Log forLog(Log primaryLogger) {_		return LogUtils.getCompositeLog(primaryLogger, fallbackLogger)__	};wrap,the,given,primary,logger,with,a,composite,logger,that,delegates,to,it,or,to,the,fallback,logger,org,springframework,web,http,logging,if,the,primary,is,not,enabled,param,primary,logger,the,primary,logger,to,use,return,the,resulting,composite,logger;public,static,log,for,log,log,primary,logger,return,log,utils,get,composite,log,primary,logger,fallback,logger
HttpLogging -> public static Log forLog(Log primaryLogger);1532436274;Wrap the given primary logger with a composite logger that delegates to_it or to the fallback logger "org.springframework.web.HttpLogging", if_the primary is not enabled._@param primaryLogger the primary logger to use_@return the resulting composite logger;public static Log forLog(Log primaryLogger) {_		return LogDelegateFactory.getCompositeLog(primaryLogger, fallbackLogger)__	};wrap,the,given,primary,logger,with,a,composite,logger,that,delegates,to,it,or,to,the,fallback,logger,org,springframework,web,http,logging,if,the,primary,is,not,enabled,param,primary,logger,the,primary,logger,to,use,return,the,resulting,composite,logger;public,static,log,for,log,log,primary,logger,return,log,delegate,factory,get,composite,log,primary,logger,fallback,logger
HttpLogging -> public static Log forLog(Log primaryLogger);1532520962;Wrap the given primary logger with a composite logger that delegates to_it or to the fallback logger "org.springframework.web.HttpLogging",_if the primary is not enabled._@param primaryLogger the primary logger to use_@return the resulting composite logger;public static Log forLog(Log primaryLogger) {_		return LogDelegateFactory.getCompositeLog(primaryLogger, fallbackLogger)__	};wrap,the,given,primary,logger,with,a,composite,logger,that,delegates,to,it,or,to,the,fallback,logger,org,springframework,web,http,logging,if,the,primary,is,not,enabled,param,primary,logger,the,primary,logger,to,use,return,the,resulting,composite,logger;public,static,log,for,log,log,primary,logger,return,log,delegate,factory,get,composite,log,primary,logger,fallback,logger
HttpLogging -> public static Log forLogName(Class<?> primaryLoggerClass);1531942370;Create a primary logger for the given class and wrap it with a composite_that delegates to it or to the fallback logger_"org.springframework.web.HttpLogging", if the primary is not enabled._@param primaryLoggerClass the class for the name of the primary logger_@return the resulting composite logger;public static Log forLogName(Class<?> primaryLoggerClass) {_		Log primaryLogger = LogFactory.getLog(primaryLoggerClass)__		return forLog(primaryLogger)__	};create,a,primary,logger,for,the,given,class,and,wrap,it,with,a,composite,that,delegates,to,it,or,to,the,fallback,logger,org,springframework,web,http,logging,if,the,primary,is,not,enabled,param,primary,logger,class,the,class,for,the,name,of,the,primary,logger,return,the,resulting,composite,logger;public,static,log,for,log,name,class,primary,logger,class,log,primary,logger,log,factory,get,log,primary,logger,class,return,for,log,primary,logger
HttpLogging -> public static Log forLogName(Class<?> primaryLoggerClass);1532436274;Create a primary logger for the given class and wrap it with a composite_that delegates to it or to the fallback logger_"org.springframework.web.HttpLogging", if the primary is not enabled._@param primaryLoggerClass the class for the name of the primary logger_@return the resulting composite logger;public static Log forLogName(Class<?> primaryLoggerClass) {_		Log primaryLogger = LogFactory.getLog(primaryLoggerClass)__		return forLog(primaryLogger)__	};create,a,primary,logger,for,the,given,class,and,wrap,it,with,a,composite,that,delegates,to,it,or,to,the,fallback,logger,org,springframework,web,http,logging,if,the,primary,is,not,enabled,param,primary,logger,class,the,class,for,the,name,of,the,primary,logger,return,the,resulting,composite,logger;public,static,log,for,log,name,class,primary,logger,class,log,primary,logger,log,factory,get,log,primary,logger,class,return,for,log,primary,logger
HttpLogging -> public static Log forLogName(Class<?> primaryLoggerClass);1532520962;Create a primary logger for the given class and wrap it with a composite_that delegates to it or to the fallback logger_"org.springframework.web.HttpLogging", if the primary is not enabled._@param primaryLoggerClass the class for the name of the primary logger_@return the resulting composite logger;public static Log forLogName(Class<?> primaryLoggerClass) {_		Log primaryLogger = LogFactory.getLog(primaryLoggerClass)__		return forLog(primaryLogger)__	};create,a,primary,logger,for,the,given,class,and,wrap,it,with,a,composite,that,delegates,to,it,or,to,the,fallback,logger,org,springframework,web,http,logging,if,the,primary,is,not,enabled,param,primary,logger,class,the,class,for,the,name,of,the,primary,logger,return,the,resulting,composite,logger;public,static,log,for,log,name,class,primary,logger,class,log,primary,logger,log,factory,get,log,primary,logger,class,return,for,log,primary,logger
