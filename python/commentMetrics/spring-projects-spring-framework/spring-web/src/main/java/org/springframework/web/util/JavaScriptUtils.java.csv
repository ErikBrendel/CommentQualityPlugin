commented;modifiers;parameterAmount;loc;comment;code
true;public,static;1;61;/**  * Turn JavaScript special characters into escaped characters.  * @param input the input string  * @return the string with escaped characters  */ ;/**  * Turn JavaScript special characters into escaped characters.  * @param input the input string  * @return the string with escaped characters  */ public static String javaScriptEscape(String input) {     StringBuilder filtered = new StringBuilder(input.length()).     char prevChar = '\u0000'.     char c.     for (int i = 0. i < input.length(). i++) {         c = input.charAt(i).         if (c == '"') {             filtered.append("\\\"").         } else if (c == '\'') {             filtered.append("\\'").         } else if (c == '\\') {             filtered.append("\\\\").         } else if (c == '/') {             filtered.append("\\/").         } else if (c == '\t') {             filtered.append("\\t").         } else if (c == '\n') {             if (prevChar != '\r') {                 filtered.append("\\n").             }         } else if (c == '\r') {             filtered.append("\\n").         } else if (c == '\f') {             filtered.append("\\f").         } else if (c == '\b') {             filtered.append("\\b").         } else // No '\v' in Java, use octal value for VT ascii char         if (c == '\013') {             filtered.append("\\v").         } else if (c == '<') {             filtered.append("\\u003C").         } else if (c == '>') {             filtered.append("\\u003E").         } else // Unicode for PS (line terminator in ECMA-262)         if (c == '\u2028') {             filtered.append("\\u2028").         } else // Unicode for LS (line terminator in ECMA-262)         if (c == '\u2029') {             filtered.append("\\u2029").         } else {             filtered.append(c).         }         prevChar = c.     }     return filtered.toString(). }
