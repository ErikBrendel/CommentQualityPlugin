commented;modifiers;parameterAmount;loc;comment;code
false;protected;2;8;;@Override protected ServletServerHttpRequest createRequest(HttpServletRequest request, AsyncContext asyncContext) throws IOException, URISyntaxException {     Assert.notNull(getServletPath(), "Servlet path is not initialized").     return new TomcatServerHttpRequest(request, asyncContext, getServletPath(), getDataBufferFactory(), getBufferSize()). }
false;protected;3;7;;@Override protected ServletServerHttpResponse createResponse(HttpServletResponse response, AsyncContext asyncContext, ServletServerHttpRequest request) throws IOException {     return new TomcatServerHttpResponse(response, asyncContext, getDataBufferFactory(), getBufferSize(), request). }
false;private,static;1;9;;private static HttpHeaders createTomcatHttpHeaders(HttpServletRequest request) {     RequestFacade requestFacade = getRequestFacade(request).     org.apache.catalina.connector.Request connectorRequest = (org.apache.catalina.connector.Request) ReflectionUtils.getField(COYOTE_REQUEST_FIELD, requestFacade).     Assert.state(connectorRequest != null, "No Tomcat connector request").     Request tomcatRequest = connectorRequest.getCoyoteRequest().     TomcatHeadersAdapter headers = new TomcatHeadersAdapter(tomcatRequest.getMimeHeaders()).     return new HttpHeaders(headers). }
false;private,static;1;14;;private static RequestFacade getRequestFacade(HttpServletRequest request) {     if (request instanceof RequestFacade) {         return (RequestFacade) request.     } else if (request instanceof HttpServletRequestWrapper) {         HttpServletRequestWrapper wrapper = (HttpServletRequestWrapper) request.         HttpServletRequest wrappedRequest = (HttpServletRequest) wrapper.getRequest().         return getRequestFacade(wrappedRequest).     } else {         throw new IllegalArgumentException("Cannot convert [" + request.getClass() + "] to org.apache.catalina.connector.RequestFacade").     } }
false;protected;0;28;;@Override protected DataBuffer readFromInputStream() throws IOException {     boolean release = true.     int capacity = this.bufferSize.     DataBuffer dataBuffer = this.factory.allocateBuffer(capacity).     try {         ByteBuffer byteBuffer = dataBuffer.asByteBuffer(0, capacity).         ServletRequest request = getNativeRequest().         int read = ((CoyoteInputStream) request.getInputStream()).read(byteBuffer).         logBytesRead(read).         if (read > 0) {             dataBuffer.writePosition(read).             release = false.             return dataBuffer.         } else if (read == -1) {             return EOF_BUFFER.         } else {             return null.         }     } finally {         if (release) {             DataBufferUtils.release(dataBuffer).         }     } }
false;private,static;1;9;;private static HttpHeaders createTomcatHttpHeaders(HttpServletResponse response) {     ResponseFacade responseFacade = getResponseFacade(response).     org.apache.catalina.connector.Response connectorResponse = (org.apache.catalina.connector.Response) ReflectionUtils.getField(COYOTE_RESPONSE_FIELD, responseFacade).     Assert.state(connectorResponse != null, "No Tomcat connector response").     Response tomcatResponse = connectorResponse.getCoyoteResponse().     TomcatHeadersAdapter headers = new TomcatHeadersAdapter(tomcatResponse.getMimeHeaders()).     return new HttpHeaders(headers). }
false;private,static;1;14;;private static ResponseFacade getResponseFacade(HttpServletResponse response) {     if (response instanceof ResponseFacade) {         return (ResponseFacade) response.     } else if (response instanceof HttpServletResponseWrapper) {         HttpServletResponseWrapper wrapper = (HttpServletResponseWrapper) response.         HttpServletResponse wrappedResponse = (HttpServletResponse) wrapper.getResponse().         return getResponseFacade(wrappedResponse).     } else {         throw new IllegalArgumentException("Cannot convert [" + response.getClass() + "] to org.apache.catalina.connector.ResponseFacade").     } }
false;protected;0;16;;@Override protected void applyHeaders() {     HttpServletResponse response = getNativeResponse().     MediaType contentType = getHeaders().getContentType().     if (response.getContentType() == null && contentType != null) {         response.setContentType(contentType.toString()).     }     Charset charset = (contentType != null ? contentType.getCharset() : null).     if (response.getCharacterEncoding() == null && charset != null) {         response.setCharacterEncoding(charset.name()).     }     long contentLength = getHeaders().getContentLength().     if (contentLength != -1) {         response.setContentLengthLong(contentLength).     } }
false;protected;1;8;;@Override protected int writeToOutputStream(DataBuffer dataBuffer) throws IOException {     ByteBuffer input = dataBuffer.asByteBuffer().     int len = input.remaining().     ServletResponse response = getNativeResponse().     ((CoyoteOutputStream) response.getOutputStream()).write(input).     return len. }
