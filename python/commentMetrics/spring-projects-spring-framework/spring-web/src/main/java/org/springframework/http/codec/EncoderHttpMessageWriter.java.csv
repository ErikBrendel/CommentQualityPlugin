# id;timestamp;commentText;codeText;commentWords;codeWords
EncoderHttpMessageWriter -> protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType, 			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);1496837955;Get additional hints for encoding for example based on the server request_or annotations from controller method parameters. By default, delegate to_the encoder if it is an instance of {@link HttpMessageEncoder}.;protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType,_			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {__		if (this.encoder instanceof HttpMessageEncoder) {_			HttpMessageEncoder<?> httpEncoder = (HttpMessageEncoder<?>) this.encoder__			return httpEncoder.getEncodeHints(streamType, elementType, mediaType, request, response)__		}_		return Collections.emptyMap()__	};get,additional,hints,for,encoding,for,example,based,on,the,server,request,or,annotations,from,controller,method,parameters,by,default,delegate,to,the,encoder,if,it,is,an,instance,of,link,http,message,encoder;protected,map,string,object,get,write,hints,resolvable,type,stream,type,resolvable,type,element,type,nullable,media,type,media,type,server,http,request,request,server,http,response,response,if,this,encoder,instanceof,http,message,encoder,http,message,encoder,http,encoder,http,message,encoder,this,encoder,return,http,encoder,get,encode,hints,stream,type,element,type,media,type,request,response,return,collections,empty,map
EncoderHttpMessageWriter -> protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType, 			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);1498780456;Get additional hints for encoding for example based on the server request_or annotations from controller method parameters. By default, delegate to_the encoder if it is an instance of {@link HttpMessageEncoder}.;protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType,_			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {__		if (this.encoder instanceof HttpMessageEncoder) {_			HttpMessageEncoder<?> httpEncoder = (HttpMessageEncoder<?>) this.encoder__			return httpEncoder.getEncodeHints(streamType, elementType, mediaType, request, response)__		}_		return Collections.emptyMap()__	};get,additional,hints,for,encoding,for,example,based,on,the,server,request,or,annotations,from,controller,method,parameters,by,default,delegate,to,the,encoder,if,it,is,an,instance,of,link,http,message,encoder;protected,map,string,object,get,write,hints,resolvable,type,stream,type,resolvable,type,element,type,nullable,media,type,media,type,server,http,request,request,server,http,response,response,if,this,encoder,instanceof,http,message,encoder,http,message,encoder,http,encoder,http,message,encoder,this,encoder,return,http,encoder,get,encode,hints,stream,type,element,type,media,type,request,response,return,collections,empty,map
EncoderHttpMessageWriter -> protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType, 			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);1506097334;Get additional hints for encoding for example based on the server request_or annotations from controller method parameters. By default, delegate to_the encoder if it is an instance of {@link HttpMessageEncoder}.;protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType,_			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {__		if (this.encoder instanceof HttpMessageEncoder) {_			HttpMessageEncoder<?> httpEncoder = (HttpMessageEncoder<?>) this.encoder__			return httpEncoder.getEncodeHints(streamType, elementType, mediaType, request, response)__		}_		return Collections.emptyMap()__	};get,additional,hints,for,encoding,for,example,based,on,the,server,request,or,annotations,from,controller,method,parameters,by,default,delegate,to,the,encoder,if,it,is,an,instance,of,link,http,message,encoder;protected,map,string,object,get,write,hints,resolvable,type,stream,type,resolvable,type,element,type,nullable,media,type,media,type,server,http,request,request,server,http,response,response,if,this,encoder,instanceof,http,message,encoder,http,message,encoder,http,encoder,http,message,encoder,this,encoder,return,http,encoder,get,encode,hints,stream,type,element,type,media,type,request,response,return,collections,empty,map
EncoderHttpMessageWriter -> protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType, 			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);1520381042;Get additional hints for encoding for example based on the server request_or annotations from controller method parameters. By default, delegate to_the encoder if it is an instance of {@link HttpMessageEncoder}.;protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType,_			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {__		if (this.encoder instanceof HttpMessageEncoder) {_			HttpMessageEncoder<?> httpEncoder = (HttpMessageEncoder<?>) this.encoder__			return httpEncoder.getEncodeHints(streamType, elementType, mediaType, request, response)__		}_		return Collections.emptyMap()__	};get,additional,hints,for,encoding,for,example,based,on,the,server,request,or,annotations,from,controller,method,parameters,by,default,delegate,to,the,encoder,if,it,is,an,instance,of,link,http,message,encoder;protected,map,string,object,get,write,hints,resolvable,type,stream,type,resolvable,type,element,type,nullable,media,type,media,type,server,http,request,request,server,http,response,response,if,this,encoder,instanceof,http,message,encoder,http,message,encoder,http,encoder,http,message,encoder,this,encoder,return,http,encoder,get,encode,hints,stream,type,element,type,media,type,request,response,return,collections,empty,map
EncoderHttpMessageWriter -> protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType, 			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);1524852408;Get additional hints for encoding for example based on the server request_or annotations from controller method parameters. By default, delegate to_the encoder if it is an instance of {@link HttpMessageEncoder}.;protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType,_			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {__		if (this.encoder instanceof HttpMessageEncoder) {_			HttpMessageEncoder<?> httpEncoder = (HttpMessageEncoder<?>) this.encoder__			return httpEncoder.getEncodeHints(streamType, elementType, mediaType, request, response)__		}_		return Collections.emptyMap()__	};get,additional,hints,for,encoding,for,example,based,on,the,server,request,or,annotations,from,controller,method,parameters,by,default,delegate,to,the,encoder,if,it,is,an,instance,of,link,http,message,encoder;protected,map,string,object,get,write,hints,resolvable,type,stream,type,resolvable,type,element,type,nullable,media,type,media,type,server,http,request,request,server,http,response,response,if,this,encoder,instanceof,http,message,encoder,http,message,encoder,http,encoder,http,message,encoder,this,encoder,return,http,encoder,get,encode,hints,stream,type,element,type,media,type,request,response,return,collections,empty,map
EncoderHttpMessageWriter -> protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType, 			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);1528141727;Get additional hints for encoding for example based on the server request_or annotations from controller method parameters. By default, delegate to_the encoder if it is an instance of {@link HttpMessageEncoder}.;protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType,_			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {__		if (this.encoder instanceof HttpMessageEncoder) {_			HttpMessageEncoder<?> httpEncoder = (HttpMessageEncoder<?>) this.encoder__			return httpEncoder.getEncodeHints(streamType, elementType, mediaType, request, response)__		}_		return Collections.emptyMap()__	};get,additional,hints,for,encoding,for,example,based,on,the,server,request,or,annotations,from,controller,method,parameters,by,default,delegate,to,the,encoder,if,it,is,an,instance,of,link,http,message,encoder;protected,map,string,object,get,write,hints,resolvable,type,stream,type,resolvable,type,element,type,nullable,media,type,media,type,server,http,request,request,server,http,response,response,if,this,encoder,instanceof,http,message,encoder,http,message,encoder,http,encoder,http,message,encoder,this,encoder,return,http,encoder,get,encode,hints,stream,type,element,type,media,type,request,response,return,collections,empty,map
EncoderHttpMessageWriter -> protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType, 			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);1529401905;Get additional hints for encoding for example based on the server request_or annotations from controller method parameters. By default, delegate to_the encoder if it is an instance of {@link HttpMessageEncoder}.;protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType,_			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {__		if (this.encoder instanceof HttpMessageEncoder) {_			HttpMessageEncoder<?> httpEncoder = (HttpMessageEncoder<?>) this.encoder__			return httpEncoder.getEncodeHints(streamType, elementType, mediaType, request, response)__		}_		return Collections.emptyMap()__	};get,additional,hints,for,encoding,for,example,based,on,the,server,request,or,annotations,from,controller,method,parameters,by,default,delegate,to,the,encoder,if,it,is,an,instance,of,link,http,message,encoder;protected,map,string,object,get,write,hints,resolvable,type,stream,type,resolvable,type,element,type,nullable,media,type,media,type,server,http,request,request,server,http,response,response,if,this,encoder,instanceof,http,message,encoder,http,message,encoder,http,encoder,http,message,encoder,this,encoder,return,http,encoder,get,encode,hints,stream,type,element,type,media,type,request,response,return,collections,empty,map
EncoderHttpMessageWriter -> protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType, 			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);1530174524;Get additional hints for encoding for example based on the server request_or annotations from controller method parameters. By default, delegate to_the encoder if it is an instance of {@link HttpMessageEncoder}.;protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType,_			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {__		if (this.encoder instanceof HttpMessageEncoder) {_			HttpMessageEncoder<?> httpEncoder = (HttpMessageEncoder<?>) this.encoder__			return httpEncoder.getEncodeHints(streamType, elementType, mediaType, request, response)__		}_		return Collections.emptyMap()__	};get,additional,hints,for,encoding,for,example,based,on,the,server,request,or,annotations,from,controller,method,parameters,by,default,delegate,to,the,encoder,if,it,is,an,instance,of,link,http,message,encoder;protected,map,string,object,get,write,hints,resolvable,type,stream,type,resolvable,type,element,type,nullable,media,type,media,type,server,http,request,request,server,http,response,response,if,this,encoder,instanceof,http,message,encoder,http,message,encoder,http,encoder,http,message,encoder,this,encoder,return,http,encoder,get,encode,hints,stream,type,element,type,media,type,request,response,return,collections,empty,map
EncoderHttpMessageWriter -> protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType, 			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);1530174524;Get additional hints for encoding for example based on the server request_or annotations from controller method parameters. By default, delegate to_the encoder if it is an instance of {@link HttpMessageEncoder}.;protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType,_			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {__		if (this.encoder instanceof HttpMessageEncoder) {_			HttpMessageEncoder<?> httpEncoder = (HttpMessageEncoder<?>) this.encoder__			return httpEncoder.getEncodeHints(streamType, elementType, mediaType, request, response)__		}_		return Collections.emptyMap()__	};get,additional,hints,for,encoding,for,example,based,on,the,server,request,or,annotations,from,controller,method,parameters,by,default,delegate,to,the,encoder,if,it,is,an,instance,of,link,http,message,encoder;protected,map,string,object,get,write,hints,resolvable,type,stream,type,resolvable,type,element,type,nullable,media,type,media,type,server,http,request,request,server,http,response,response,if,this,encoder,instanceof,http,message,encoder,http,message,encoder,http,encoder,http,message,encoder,this,encoder,return,http,encoder,get,encode,hints,stream,type,element,type,media,type,request,response,return,collections,empty,map
EncoderHttpMessageWriter -> protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType, 			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);1530793695;Get additional hints for encoding for example based on the server request_or annotations from controller method parameters. By default, delegate to_the encoder if it is an instance of {@link HttpMessageEncoder}.;protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType,_			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {__		if (this.encoder instanceof HttpMessageEncoder) {_			HttpMessageEncoder<?> encoder = (HttpMessageEncoder<?>) this.encoder__			return encoder.getEncodeHints(streamType, elementType, mediaType, request, response)__		}_		return Hints.none()__	};get,additional,hints,for,encoding,for,example,based,on,the,server,request,or,annotations,from,controller,method,parameters,by,default,delegate,to,the,encoder,if,it,is,an,instance,of,link,http,message,encoder;protected,map,string,object,get,write,hints,resolvable,type,stream,type,resolvable,type,element,type,nullable,media,type,media,type,server,http,request,request,server,http,response,response,if,this,encoder,instanceof,http,message,encoder,http,message,encoder,encoder,http,message,encoder,this,encoder,return,encoder,get,encode,hints,stream,type,element,type,media,type,request,response,return,hints,none
EncoderHttpMessageWriter -> protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType, 			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);1530975243;Get additional hints for encoding for example based on the server request_or annotations from controller method parameters. By default, delegate to_the encoder if it is an instance of {@link HttpMessageEncoder}.;protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType,_			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {__		if (this.encoder instanceof HttpMessageEncoder) {_			HttpMessageEncoder<?> encoder = (HttpMessageEncoder<?>) this.encoder__			return encoder.getEncodeHints(streamType, elementType, mediaType, request, response)__		}_		return Hints.none()__	};get,additional,hints,for,encoding,for,example,based,on,the,server,request,or,annotations,from,controller,method,parameters,by,default,delegate,to,the,encoder,if,it,is,an,instance,of,link,http,message,encoder;protected,map,string,object,get,write,hints,resolvable,type,stream,type,resolvable,type,element,type,nullable,media,type,media,type,server,http,request,request,server,http,response,response,if,this,encoder,instanceof,http,message,encoder,http,message,encoder,encoder,http,message,encoder,this,encoder,return,encoder,get,encode,hints,stream,type,element,type,media,type,request,response,return,hints,none
EncoderHttpMessageWriter -> protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType, 			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);1531942370;Get additional hints for encoding for example based on the server request_or annotations from controller method parameters. By default, delegate to_the encoder if it is an instance of {@link HttpMessageEncoder}.;protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType,_			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {__		if (this.encoder instanceof HttpMessageEncoder) {_			HttpMessageEncoder<?> encoder = (HttpMessageEncoder<?>) this.encoder__			return encoder.getEncodeHints(streamType, elementType, mediaType, request, response)__		}_		return Hints.none()__	};get,additional,hints,for,encoding,for,example,based,on,the,server,request,or,annotations,from,controller,method,parameters,by,default,delegate,to,the,encoder,if,it,is,an,instance,of,link,http,message,encoder;protected,map,string,object,get,write,hints,resolvable,type,stream,type,resolvable,type,element,type,nullable,media,type,media,type,server,http,request,request,server,http,response,response,if,this,encoder,instanceof,http,message,encoder,http,message,encoder,encoder,http,message,encoder,this,encoder,return,encoder,get,encode,hints,stream,type,element,type,media,type,request,response,return,hints,none
EncoderHttpMessageWriter -> protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType, 			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);1532474226;Get additional hints for encoding for example based on the server request_or annotations from controller method parameters. By default, delegate to_the encoder if it is an instance of {@link HttpMessageEncoder}.;protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType,_			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {__		if (this.encoder instanceof HttpMessageEncoder) {_			HttpMessageEncoder<?> encoder = (HttpMessageEncoder<?>) this.encoder__			return encoder.getEncodeHints(streamType, elementType, mediaType, request, response)__		}_		return Hints.none()__	};get,additional,hints,for,encoding,for,example,based,on,the,server,request,or,annotations,from,controller,method,parameters,by,default,delegate,to,the,encoder,if,it,is,an,instance,of,link,http,message,encoder;protected,map,string,object,get,write,hints,resolvable,type,stream,type,resolvable,type,element,type,nullable,media,type,media,type,server,http,request,request,server,http,response,response,if,this,encoder,instanceof,http,message,encoder,http,message,encoder,encoder,http,message,encoder,this,encoder,return,encoder,get,encode,hints,stream,type,element,type,media,type,request,response,return,hints,none
EncoderHttpMessageWriter -> protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType, 			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);1535397430;Get additional hints for encoding for example based on the server request_or annotations from controller method parameters. By default, delegate to_the encoder if it is an instance of {@link HttpMessageEncoder}.;protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType,_			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {__		if (this.encoder instanceof HttpMessageEncoder) {_			HttpMessageEncoder<?> encoder = (HttpMessageEncoder<?>) this.encoder__			return encoder.getEncodeHints(streamType, elementType, mediaType, request, response)__		}_		return Hints.none()__	};get,additional,hints,for,encoding,for,example,based,on,the,server,request,or,annotations,from,controller,method,parameters,by,default,delegate,to,the,encoder,if,it,is,an,instance,of,link,http,message,encoder;protected,map,string,object,get,write,hints,resolvable,type,stream,type,resolvable,type,element,type,nullable,media,type,media,type,server,http,request,request,server,http,response,response,if,this,encoder,instanceof,http,message,encoder,http,message,encoder,encoder,http,message,encoder,this,encoder,return,encoder,get,encode,hints,stream,type,element,type,media,type,request,response,return,hints,none
EncoderHttpMessageWriter -> protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType, 			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);1539722986;Get additional hints for encoding for example based on the server request_or annotations from controller method parameters. By default, delegate to_the encoder if it is an instance of {@link HttpMessageEncoder}.;protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType,_			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {__		if (this.encoder instanceof HttpMessageEncoder) {_			HttpMessageEncoder<?> encoder = (HttpMessageEncoder<?>) this.encoder__			return encoder.getEncodeHints(streamType, elementType, mediaType, request, response)__		}_		return Hints.none()__	};get,additional,hints,for,encoding,for,example,based,on,the,server,request,or,annotations,from,controller,method,parameters,by,default,delegate,to,the,encoder,if,it,is,an,instance,of,link,http,message,encoder;protected,map,string,object,get,write,hints,resolvable,type,stream,type,resolvable,type,element,type,nullable,media,type,media,type,server,http,request,request,server,http,response,response,if,this,encoder,instanceof,http,message,encoder,http,message,encoder,encoder,http,message,encoder,this,encoder,return,encoder,get,encode,hints,stream,type,element,type,media,type,request,response,return,hints,none
EncoderHttpMessageWriter -> protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType, 			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);1542638994;Get additional hints for encoding for example based on the server request_or annotations from controller method parameters. By default, delegate to_the encoder if it is an instance of {@link HttpMessageEncoder}.;protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType,_			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {__		if (this.encoder instanceof HttpMessageEncoder) {_			HttpMessageEncoder<?> encoder = (HttpMessageEncoder<?>) this.encoder__			return encoder.getEncodeHints(streamType, elementType, mediaType, request, response)__		}_		return Hints.none()__	};get,additional,hints,for,encoding,for,example,based,on,the,server,request,or,annotations,from,controller,method,parameters,by,default,delegate,to,the,encoder,if,it,is,an,instance,of,link,http,message,encoder;protected,map,string,object,get,write,hints,resolvable,type,stream,type,resolvable,type,element,type,nullable,media,type,media,type,server,http,request,request,server,http,response,response,if,this,encoder,instanceof,http,message,encoder,http,message,encoder,encoder,http,message,encoder,this,encoder,return,encoder,get,encode,hints,stream,type,element,type,media,type,request,response,return,hints,none
EncoderHttpMessageWriter -> protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType, 			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);1542664118;Get additional hints for encoding for example based on the server request_or annotations from controller method parameters. By default, delegate to_the encoder if it is an instance of {@link HttpMessageEncoder}.;protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType,_			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {__		if (this.encoder instanceof HttpMessageEncoder) {_			HttpMessageEncoder<?> encoder = (HttpMessageEncoder<?>) this.encoder__			return encoder.getEncodeHints(streamType, elementType, mediaType, request, response)__		}_		return Hints.none()__	};get,additional,hints,for,encoding,for,example,based,on,the,server,request,or,annotations,from,controller,method,parameters,by,default,delegate,to,the,encoder,if,it,is,an,instance,of,link,http,message,encoder;protected,map,string,object,get,write,hints,resolvable,type,stream,type,resolvable,type,element,type,nullable,media,type,media,type,server,http,request,request,server,http,response,response,if,this,encoder,instanceof,http,message,encoder,http,message,encoder,encoder,http,message,encoder,this,encoder,return,encoder,get,encode,hints,stream,type,element,type,media,type,request,response,return,hints,none
EncoderHttpMessageWriter -> protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType, 			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);1548427561;Get additional hints for encoding for example based on the server request_or annotations from controller method parameters. By default, delegate to_the encoder if it is an instance of {@link HttpMessageEncoder}.;protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType,_			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {__		if (this.encoder instanceof HttpMessageEncoder) {_			HttpMessageEncoder<?> encoder = (HttpMessageEncoder<?>) this.encoder__			return encoder.getEncodeHints(streamType, elementType, mediaType, request, response)__		}_		return Hints.none()__	};get,additional,hints,for,encoding,for,example,based,on,the,server,request,or,annotations,from,controller,method,parameters,by,default,delegate,to,the,encoder,if,it,is,an,instance,of,link,http,message,encoder;protected,map,string,object,get,write,hints,resolvable,type,stream,type,resolvable,type,element,type,nullable,media,type,media,type,server,http,request,request,server,http,response,response,if,this,encoder,instanceof,http,message,encoder,http,message,encoder,encoder,http,message,encoder,this,encoder,return,encoder,get,encode,hints,stream,type,element,type,media,type,request,response,return,hints,none
EncoderHttpMessageWriter -> protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType, 			MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);1490109321;Get additional hints for encoding for example based on the server request_or annotations from controller method parameters. By default, delegate to_the encoder if it is an instance of {@link ServerHttpEncoder}.;protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType,_			MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {__		if (this.encoder instanceof ServerHttpEncoder) {_			ServerHttpEncoder<?> httpEncoder = (ServerHttpEncoder<?>) this.encoder__			return httpEncoder.getEncodeHints(streamType, elementType, mediaType, request, response)__		}_		return Collections.emptyMap()__	};get,additional,hints,for,encoding,for,example,based,on,the,server,request,or,annotations,from,controller,method,parameters,by,default,delegate,to,the,encoder,if,it,is,an,instance,of,link,server,http,encoder;protected,map,string,object,get,write,hints,resolvable,type,stream,type,resolvable,type,element,type,media,type,media,type,server,http,request,request,server,http,response,response,if,this,encoder,instanceof,server,http,encoder,server,http,encoder,http,encoder,server,http,encoder,this,encoder,return,http,encoder,get,encode,hints,stream,type,element,type,media,type,request,response,return,collections,empty,map
EncoderHttpMessageWriter -> protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType, 			MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);1490122306;Get additional hints for encoding for example based on the server request_or annotations from controller method parameters. By default, delegate to_the encoder if it is an instance of {@link ServerHttpEncoder}.;protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType,_			MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {__		if (this.encoder instanceof ServerHttpEncoder) {_			ServerHttpEncoder<?> httpEncoder = (ServerHttpEncoder<?>) this.encoder__			return httpEncoder.getEncodeHints(streamType, elementType, mediaType, request, response)__		}_		return Collections.emptyMap()__	};get,additional,hints,for,encoding,for,example,based,on,the,server,request,or,annotations,from,controller,method,parameters,by,default,delegate,to,the,encoder,if,it,is,an,instance,of,link,server,http,encoder;protected,map,string,object,get,write,hints,resolvable,type,stream,type,resolvable,type,element,type,media,type,media,type,server,http,request,request,server,http,response,response,if,this,encoder,instanceof,server,http,encoder,server,http,encoder,http,encoder,server,http,encoder,this,encoder,return,http,encoder,get,encode,hints,stream,type,element,type,media,type,request,response,return,collections,empty,map
EncoderHttpMessageWriter -> protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType, 			MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);1490220092;Get additional hints for encoding for example based on the server request_or annotations from controller method parameters. By default, delegate to_the encoder if it is an instance of {@link HttpEncoder}.;protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType,_			MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {__		if (this.encoder instanceof HttpEncoder) {_			HttpEncoder<?> httpEncoder = (HttpEncoder<?>) this.encoder__			return httpEncoder.getEncodeHints(streamType, elementType, mediaType, request, response)__		}_		return Collections.emptyMap()__	};get,additional,hints,for,encoding,for,example,based,on,the,server,request,or,annotations,from,controller,method,parameters,by,default,delegate,to,the,encoder,if,it,is,an,instance,of,link,http,encoder;protected,map,string,object,get,write,hints,resolvable,type,stream,type,resolvable,type,element,type,media,type,media,type,server,http,request,request,server,http,response,response,if,this,encoder,instanceof,http,encoder,http,encoder,http,encoder,http,encoder,this,encoder,return,http,encoder,get,encode,hints,stream,type,element,type,media,type,request,response,return,collections,empty,map
EncoderHttpMessageWriter -> protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType, 			MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);1490392946;Get additional hints for encoding for example based on the server request_or annotations from controller method parameters. By default, delegate to_the encoder if it is an instance of {@link HttpMessageEncoder}.;protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType,_			MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {__		if (this.encoder instanceof HttpMessageEncoder) {_			HttpMessageEncoder<?> httpEncoder = (HttpMessageEncoder<?>) this.encoder__			return httpEncoder.getEncodeHints(streamType, elementType, mediaType, request, response)__		}_		return Collections.emptyMap()__	};get,additional,hints,for,encoding,for,example,based,on,the,server,request,or,annotations,from,controller,method,parameters,by,default,delegate,to,the,encoder,if,it,is,an,instance,of,link,http,message,encoder;protected,map,string,object,get,write,hints,resolvable,type,stream,type,resolvable,type,element,type,media,type,media,type,server,http,request,request,server,http,response,response,if,this,encoder,instanceof,http,message,encoder,http,message,encoder,http,encoder,http,message,encoder,this,encoder,return,http,encoder,get,encode,hints,stream,type,element,type,media,type,request,response,return,collections,empty,map
EncoderHttpMessageWriter -> protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType, 			MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);1491833276;Get additional hints for encoding for example based on the server request_or annotations from controller method parameters. By default, delegate to_the encoder if it is an instance of {@link HttpMessageEncoder}.;protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType,_			MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {__		if (this.encoder instanceof HttpMessageEncoder) {_			HttpMessageEncoder<?> httpEncoder = (HttpMessageEncoder<?>) this.encoder__			return httpEncoder.getEncodeHints(streamType, elementType, mediaType, request, response)__		}_		return Collections.emptyMap()__	};get,additional,hints,for,encoding,for,example,based,on,the,server,request,or,annotations,from,controller,method,parameters,by,default,delegate,to,the,encoder,if,it,is,an,instance,of,link,http,message,encoder;protected,map,string,object,get,write,hints,resolvable,type,stream,type,resolvable,type,element,type,media,type,media,type,server,http,request,request,server,http,response,response,if,this,encoder,instanceof,http,message,encoder,http,message,encoder,http,encoder,http,message,encoder,this,encoder,return,http,encoder,get,encode,hints,stream,type,element,type,media,type,request,response,return,collections,empty,map
EncoderHttpMessageWriter -> protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType, 			MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);1492168700;Get additional hints for encoding for example based on the server request_or annotations from controller method parameters. By default, delegate to_the encoder if it is an instance of {@link HttpMessageEncoder}.;protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType,_			MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {__		if (this.encoder instanceof HttpMessageEncoder) {_			HttpMessageEncoder<?> httpEncoder = (HttpMessageEncoder<?>) this.encoder__			return httpEncoder.getEncodeHints(streamType, elementType, mediaType, request, response)__		}_		return Collections.emptyMap()__	};get,additional,hints,for,encoding,for,example,based,on,the,server,request,or,annotations,from,controller,method,parameters,by,default,delegate,to,the,encoder,if,it,is,an,instance,of,link,http,message,encoder;protected,map,string,object,get,write,hints,resolvable,type,stream,type,resolvable,type,element,type,media,type,media,type,server,http,request,request,server,http,response,response,if,this,encoder,instanceof,http,message,encoder,http,message,encoder,http,encoder,http,message,encoder,this,encoder,return,http,encoder,get,encode,hints,stream,type,element,type,media,type,request,response,return,collections,empty,map
EncoderHttpMessageWriter -> protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType, 			MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);1493991714;Get additional hints for encoding for example based on the server request_or annotations from controller method parameters. By default, delegate to_the encoder if it is an instance of {@link HttpMessageEncoder}.;protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType,_			MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {__		if (this.encoder instanceof HttpMessageEncoder) {_			HttpMessageEncoder<?> httpEncoder = (HttpMessageEncoder<?>) this.encoder__			return httpEncoder.getEncodeHints(streamType, elementType, mediaType, request, response)__		}_		return Collections.emptyMap()__	};get,additional,hints,for,encoding,for,example,based,on,the,server,request,or,annotations,from,controller,method,parameters,by,default,delegate,to,the,encoder,if,it,is,an,instance,of,link,http,message,encoder;protected,map,string,object,get,write,hints,resolvable,type,stream,type,resolvable,type,element,type,media,type,media,type,server,http,request,request,server,http,response,response,if,this,encoder,instanceof,http,message,encoder,http,message,encoder,http,encoder,http,message,encoder,this,encoder,return,http,encoder,get,encode,hints,stream,type,element,type,media,type,request,response,return,collections,empty,map
EncoderHttpMessageWriter -> protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType, 			MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);1494008983;Get additional hints for encoding for example based on the server request_or annotations from controller method parameters. By default, delegate to_the encoder if it is an instance of {@link HttpMessageEncoder}.;protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType,_			MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {__		if (this.encoder instanceof HttpMessageEncoder) {_			HttpMessageEncoder<?> httpEncoder = (HttpMessageEncoder<?>) this.encoder__			return httpEncoder.getEncodeHints(streamType, elementType, mediaType, request, response)__		}_		return Collections.emptyMap()__	};get,additional,hints,for,encoding,for,example,based,on,the,server,request,or,annotations,from,controller,method,parameters,by,default,delegate,to,the,encoder,if,it,is,an,instance,of,link,http,message,encoder;protected,map,string,object,get,write,hints,resolvable,type,stream,type,resolvable,type,element,type,media,type,media,type,server,http,request,request,server,http,response,response,if,this,encoder,instanceof,http,message,encoder,http,message,encoder,http,encoder,http,message,encoder,this,encoder,return,http,encoder,get,encode,hints,stream,type,element,type,media,type,request,response,return,collections,empty,map
EncoderHttpMessageWriter -> protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType, 			MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);1494019148;Get additional hints for encoding for example based on the server request_or annotations from controller method parameters. By default, delegate to_the encoder if it is an instance of {@link HttpMessageEncoder}.;protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType,_			MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {__		if (this.encoder instanceof HttpMessageEncoder) {_			HttpMessageEncoder<?> httpEncoder = (HttpMessageEncoder<?>) this.encoder__			return httpEncoder.getEncodeHints(streamType, elementType, mediaType, request, response)__		}_		return Collections.emptyMap()__	};get,additional,hints,for,encoding,for,example,based,on,the,server,request,or,annotations,from,controller,method,parameters,by,default,delegate,to,the,encoder,if,it,is,an,instance,of,link,http,message,encoder;protected,map,string,object,get,write,hints,resolvable,type,stream,type,resolvable,type,element,type,media,type,media,type,server,http,request,request,server,http,response,response,if,this,encoder,instanceof,http,message,encoder,http,message,encoder,http,encoder,http,message,encoder,this,encoder,return,http,encoder,get,encode,hints,stream,type,element,type,media,type,request,response,return,collections,empty,map
EncoderHttpMessageWriter -> protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType, 			MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);1496242568;Get additional hints for encoding for example based on the server request_or annotations from controller method parameters. By default, delegate to_the encoder if it is an instance of {@link HttpMessageEncoder}.;protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType,_			MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {__		if (this.encoder instanceof HttpMessageEncoder) {_			HttpMessageEncoder<?> httpEncoder = (HttpMessageEncoder<?>) this.encoder__			return httpEncoder.getEncodeHints(streamType, elementType, mediaType, request, response)__		}_		return Collections.emptyMap()__	};get,additional,hints,for,encoding,for,example,based,on,the,server,request,or,annotations,from,controller,method,parameters,by,default,delegate,to,the,encoder,if,it,is,an,instance,of,link,http,message,encoder;protected,map,string,object,get,write,hints,resolvable,type,stream,type,resolvable,type,element,type,media,type,media,type,server,http,request,request,server,http,response,response,if,this,encoder,instanceof,http,message,encoder,http,message,encoder,http,encoder,http,message,encoder,this,encoder,return,http,encoder,get,encode,hints,stream,type,element,type,media,type,request,response,return,collections,empty,map
EncoderHttpMessageWriter -> protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType, 			MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);1496259743;Get additional hints for encoding for example based on the server request_or annotations from controller method parameters. By default, delegate to_the encoder if it is an instance of {@link HttpMessageEncoder}.;protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType,_			MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {__		if (this.encoder instanceof HttpMessageEncoder) {_			HttpMessageEncoder<?> httpEncoder = (HttpMessageEncoder<?>) this.encoder__			return httpEncoder.getEncodeHints(streamType, elementType, mediaType, request, response)__		}_		return Collections.emptyMap()__	};get,additional,hints,for,encoding,for,example,based,on,the,server,request,or,annotations,from,controller,method,parameters,by,default,delegate,to,the,encoder,if,it,is,an,instance,of,link,http,message,encoder;protected,map,string,object,get,write,hints,resolvable,type,stream,type,resolvable,type,element,type,media,type,media,type,server,http,request,request,server,http,response,response,if,this,encoder,instanceof,http,message,encoder,http,message,encoder,http,encoder,http,message,encoder,this,encoder,return,http,encoder,get,encode,hints,stream,type,element,type,media,type,request,response,return,collections,empty,map
EncoderHttpMessageWriter -> public void setStreamingMediaTypes(List<MediaType> mediaTypes);1490109321;Configure "streaming" media types for which flushing should be performed_automatically vs at the end of the input stream._<p>By default this is set to {@link #DEFAULT_STREAMING_MEDIA_TYPES}._@param mediaTypes one or more media types to add to the list;public void setStreamingMediaTypes(List<MediaType> mediaTypes) {_		this.streamingMediaTypes.addAll(mediaTypes)__	};configure,streaming,media,types,for,which,flushing,should,be,performed,automatically,vs,at,the,end,of,the,input,stream,p,by,default,this,is,set,to,link,param,media,types,one,or,more,media,types,to,add,to,the,list;public,void,set,streaming,media,types,list,media,type,media,types,this,streaming,media,types,add,all,media,types
EncoderHttpMessageWriter -> public void setStreamingMediaTypes(List<MediaType> mediaTypes);1490122306;Configure "streaming" media types for which flushing should be performed_automatically vs at the end of the input stream._<p>By default this is set to {@link #DEFAULT_STREAMING_MEDIA_TYPES}._@param mediaTypes one or more media types to add to the list;public void setStreamingMediaTypes(List<MediaType> mediaTypes) {_		this.streamingMediaTypes.addAll(mediaTypes)__	};configure,streaming,media,types,for,which,flushing,should,be,performed,automatically,vs,at,the,end,of,the,input,stream,p,by,default,this,is,set,to,link,param,media,types,one,or,more,media,types,to,add,to,the,list;public,void,set,streaming,media,types,list,media,type,media,types,this,streaming,media,types,add,all,media,types
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1469211286;Create a {@code CodecHttpMessageConverter} with the given {@link Encoder}._@param encoder the encoder to use;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		this.encoder = encoder__		this.writableMediaTypes = (encoder != null ?_				MediaType.asMediaTypes(encoder.getEncodableMimeTypes()) : Collections.emptyList())__	};create,a,code,codec,http,message,converter,with,the,given,link,encoder,param,encoder,the,encoder,to,use;public,encoder,http,message,writer,encoder,t,encoder,this,encoder,encoder,this,writable,media,types,encoder,null,media,type,as,media,types,encoder,get,encodable,mime,types,collections,empty,list
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1473671607;Create a {@code CodecHttpMessageConverter} with the given {@link Encoder}._@param encoder the encoder to use;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		this.encoder = encoder__		this.writableMediaTypes = (encoder != null ?_				MediaType.asMediaTypes(encoder.getEncodableMimeTypes()) : Collections.emptyList())__	};create,a,code,codec,http,message,converter,with,the,given,link,encoder,param,encoder,the,encoder,to,use;public,encoder,http,message,writer,encoder,t,encoder,this,encoder,encoder,this,writable,media,types,encoder,null,media,type,as,media,types,encoder,get,encodable,mime,types,collections,empty,list
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1473771793;Create a {@code CodecHttpMessageConverter} with the given {@link Encoder}._@param encoder the encoder to use;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		this.encoder = encoder__		this.writableMediaTypes = (encoder != null ?_				MediaType.asMediaTypes(encoder.getEncodableMimeTypes()) : Collections.emptyList())__	};create,a,code,codec,http,message,converter,with,the,given,link,encoder,param,encoder,the,encoder,to,use;public,encoder,http,message,writer,encoder,t,encoder,this,encoder,encoder,this,writable,media,types,encoder,null,media,type,as,media,types,encoder,get,encodable,mime,types,collections,empty,list
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1474365351;Create a {@code CodecHttpMessageConverter} with the given {@link Encoder}._@param encoder the encoder to use;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		this.encoder = encoder__		this.writableMediaTypes = (encoder != null ?_				MediaType.asMediaTypes(encoder.getEncodableMimeTypes()) : Collections.emptyList())__	};create,a,code,codec,http,message,converter,with,the,given,link,encoder,param,encoder,the,encoder,to,use;public,encoder,http,message,writer,encoder,t,encoder,this,encoder,encoder,this,writable,media,types,encoder,null,media,type,as,media,types,encoder,get,encodable,mime,types,collections,empty,list
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1476479832;Create a {@code CodecHttpMessageConverter} with the given {@link Encoder}._@param encoder the encoder to use;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		this.encoder = encoder__		this.writableMediaTypes = (encoder != null ?_				MediaType.asMediaTypes(encoder.getEncodableMimeTypes()) : Collections.emptyList())__	};create,a,code,codec,http,message,converter,with,the,given,link,encoder,param,encoder,the,encoder,to,use;public,encoder,http,message,writer,encoder,t,encoder,this,encoder,encoder,this,writable,media,types,encoder,null,media,type,as,media,types,encoder,get,encodable,mime,types,collections,empty,list
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1486992019;Create a {@code CodecHttpMessageConverter} with the given {@link Encoder}._@param encoder the encoder to use;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		this.encoder = encoder__		this.writableMediaTypes = (encoder != null ?_				MediaType.asMediaTypes(encoder.getEncodableMimeTypes()) : Collections.emptyList())__	};create,a,code,codec,http,message,converter,with,the,given,link,encoder,param,encoder,the,encoder,to,use;public,encoder,http,message,writer,encoder,t,encoder,this,encoder,encoder,this,writable,media,types,encoder,null,media,type,as,media,types,encoder,get,encodable,mime,types,collections,empty,list
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1489769182;Create an instance wrapping the given {@link Encoder}.;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		Assert.notNull(encoder, "Encoder is required")__		this.encoder = encoder__		this.mediaTypes = MediaType.asMediaTypes(encoder.getEncodableMimeTypes())__	};create,an,instance,wrapping,the,given,link,encoder;public,encoder,http,message,writer,encoder,t,encoder,assert,not,null,encoder,encoder,is,required,this,encoder,encoder,this,media,types,media,type,as,media,types,encoder,get,encodable,mime,types
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1489769189;Create an instance wrapping the given {@link Encoder}.;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		Assert.notNull(encoder, "Encoder is required")__		this.encoder = encoder__		this.mediaTypes = MediaType.asMediaTypes(encoder.getEncodableMimeTypes())__		this.defaultMediaType = initDefaultMediaType(this.mediaTypes)__	};create,an,instance,wrapping,the,given,link,encoder;public,encoder,http,message,writer,encoder,t,encoder,assert,not,null,encoder,encoder,is,required,this,encoder,encoder,this,media,types,media,type,as,media,types,encoder,get,encodable,mime,types,this,default,media,type,init,default,media,type,this,media,types
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1489782813;Create an instance wrapping the given {@link Encoder}.;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		Assert.notNull(encoder, "Encoder is required")__		this.encoder = encoder__		this.mediaTypes = MediaType.asMediaTypes(encoder.getEncodableMimeTypes())__		this.defaultMediaType = initDefaultMediaType(this.mediaTypes)__	};create,an,instance,wrapping,the,given,link,encoder;public,encoder,http,message,writer,encoder,t,encoder,assert,not,null,encoder,encoder,is,required,this,encoder,encoder,this,media,types,media,type,as,media,types,encoder,get,encodable,mime,types,this,default,media,type,init,default,media,type,this,media,types
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1490109321;Create an instance wrapping the given {@link Encoder}.;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		Assert.notNull(encoder, "Encoder is required")__		this.encoder = encoder__		this.mediaTypes = MediaType.asMediaTypes(encoder.getEncodableMimeTypes())__		this.defaultMediaType = initDefaultMediaType(this.mediaTypes)__		this.streamingMediaTypes.addAll(DEFAULT_STREAMING_MEDIA_TYPES)__	};create,an,instance,wrapping,the,given,link,encoder;public,encoder,http,message,writer,encoder,t,encoder,assert,not,null,encoder,encoder,is,required,this,encoder,encoder,this,media,types,media,type,as,media,types,encoder,get,encodable,mime,types,this,default,media,type,init,default,media,type,this,media,types,this,streaming,media,types,add,all
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1490122306;Create an instance wrapping the given {@link Encoder}.;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		Assert.notNull(encoder, "Encoder is required")__		this.encoder = encoder__		this.mediaTypes = MediaType.asMediaTypes(encoder.getEncodableMimeTypes())__		this.defaultMediaType = initDefaultMediaType(this.mediaTypes)__		this.streamingMediaTypes.addAll(DEFAULT_STREAMING_MEDIA_TYPES)__	};create,an,instance,wrapping,the,given,link,encoder;public,encoder,http,message,writer,encoder,t,encoder,assert,not,null,encoder,encoder,is,required,this,encoder,encoder,this,media,types,media,type,as,media,types,encoder,get,encodable,mime,types,this,default,media,type,init,default,media,type,this,media,types,this,streaming,media,types,add,all
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1490220092;Create an instance wrapping the given {@link Encoder}.;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		Assert.notNull(encoder, "Encoder is required")__		this.encoder = encoder__		this.mediaTypes = MediaType.asMediaTypes(encoder.getEncodableMimeTypes())__		this.defaultMediaType = initDefaultMediaType(this.mediaTypes)__	};create,an,instance,wrapping,the,given,link,encoder;public,encoder,http,message,writer,encoder,t,encoder,assert,not,null,encoder,encoder,is,required,this,encoder,encoder,this,media,types,media,type,as,media,types,encoder,get,encodable,mime,types,this,default,media,type,init,default,media,type,this,media,types
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1490392946;Create an instance wrapping the given {@link Encoder}.;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		Assert.notNull(encoder, "Encoder is required")__		this.encoder = encoder__		this.mediaTypes = MediaType.asMediaTypes(encoder.getEncodableMimeTypes())__		this.defaultMediaType = initDefaultMediaType(this.mediaTypes)__	};create,an,instance,wrapping,the,given,link,encoder;public,encoder,http,message,writer,encoder,t,encoder,assert,not,null,encoder,encoder,is,required,this,encoder,encoder,this,media,types,media,type,as,media,types,encoder,get,encodable,mime,types,this,default,media,type,init,default,media,type,this,media,types
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1491833276;Create an instance wrapping the given {@link Encoder}.;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		Assert.notNull(encoder, "Encoder is required")__		this.encoder = encoder__		this.mediaTypes = MediaType.asMediaTypes(encoder.getEncodableMimeTypes())__		this.defaultMediaType = initDefaultMediaType(this.mediaTypes)__	};create,an,instance,wrapping,the,given,link,encoder;public,encoder,http,message,writer,encoder,t,encoder,assert,not,null,encoder,encoder,is,required,this,encoder,encoder,this,media,types,media,type,as,media,types,encoder,get,encodable,mime,types,this,default,media,type,init,default,media,type,this,media,types
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1492168700;Create an instance wrapping the given {@link Encoder}.;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		Assert.notNull(encoder, "Encoder is required")__		this.encoder = encoder__		this.mediaTypes = MediaType.asMediaTypes(encoder.getEncodableMimeTypes())__		this.defaultMediaType = initDefaultMediaType(this.mediaTypes)__	};create,an,instance,wrapping,the,given,link,encoder;public,encoder,http,message,writer,encoder,t,encoder,assert,not,null,encoder,encoder,is,required,this,encoder,encoder,this,media,types,media,type,as,media,types,encoder,get,encodable,mime,types,this,default,media,type,init,default,media,type,this,media,types
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1493991714;Create an instance wrapping the given {@link Encoder}.;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		Assert.notNull(encoder, "Encoder is required")__		this.encoder = encoder__		this.mediaTypes = MediaType.asMediaTypes(encoder.getEncodableMimeTypes())__		this.defaultMediaType = initDefaultMediaType(this.mediaTypes)__	};create,an,instance,wrapping,the,given,link,encoder;public,encoder,http,message,writer,encoder,t,encoder,assert,not,null,encoder,encoder,is,required,this,encoder,encoder,this,media,types,media,type,as,media,types,encoder,get,encodable,mime,types,this,default,media,type,init,default,media,type,this,media,types
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1494008983;Create an instance wrapping the given {@link Encoder}.;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		Assert.notNull(encoder, "Encoder is required")__		this.encoder = encoder__		this.mediaTypes = MediaType.asMediaTypes(encoder.getEncodableMimeTypes())__		this.defaultMediaType = initDefaultMediaType(this.mediaTypes)__	};create,an,instance,wrapping,the,given,link,encoder;public,encoder,http,message,writer,encoder,t,encoder,assert,not,null,encoder,encoder,is,required,this,encoder,encoder,this,media,types,media,type,as,media,types,encoder,get,encodable,mime,types,this,default,media,type,init,default,media,type,this,media,types
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1494019148;Create an instance wrapping the given {@link Encoder}.;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		Assert.notNull(encoder, "Encoder is required")__		this.encoder = encoder__		this.mediaTypes = MediaType.asMediaTypes(encoder.getEncodableMimeTypes())__		this.defaultMediaType = initDefaultMediaType(this.mediaTypes)__	};create,an,instance,wrapping,the,given,link,encoder;public,encoder,http,message,writer,encoder,t,encoder,assert,not,null,encoder,encoder,is,required,this,encoder,encoder,this,media,types,media,type,as,media,types,encoder,get,encodable,mime,types,this,default,media,type,init,default,media,type,this,media,types
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1496242568;Create an instance wrapping the given {@link Encoder}.;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		Assert.notNull(encoder, "Encoder is required")__		this.encoder = encoder__		this.mediaTypes = MediaType.asMediaTypes(encoder.getEncodableMimeTypes())__		this.defaultMediaType = initDefaultMediaType(this.mediaTypes)__	};create,an,instance,wrapping,the,given,link,encoder;public,encoder,http,message,writer,encoder,t,encoder,assert,not,null,encoder,encoder,is,required,this,encoder,encoder,this,media,types,media,type,as,media,types,encoder,get,encodable,mime,types,this,default,media,type,init,default,media,type,this,media,types
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1496259743;Create an instance wrapping the given {@link Encoder}.;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		Assert.notNull(encoder, "Encoder is required")__		this.encoder = encoder__		this.mediaTypes = MediaType.asMediaTypes(encoder.getEncodableMimeTypes())__		this.defaultMediaType = initDefaultMediaType(this.mediaTypes)__	};create,an,instance,wrapping,the,given,link,encoder;public,encoder,http,message,writer,encoder,t,encoder,assert,not,null,encoder,encoder,is,required,this,encoder,encoder,this,media,types,media,type,as,media,types,encoder,get,encodable,mime,types,this,default,media,type,init,default,media,type,this,media,types
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1496837955;Create an instance wrapping the given {@link Encoder}.;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		Assert.notNull(encoder, "Encoder is required")__		this.encoder = encoder__		this.mediaTypes = MediaType.asMediaTypes(encoder.getEncodableMimeTypes())__		this.defaultMediaType = initDefaultMediaType(this.mediaTypes)__	};create,an,instance,wrapping,the,given,link,encoder;public,encoder,http,message,writer,encoder,t,encoder,assert,not,null,encoder,encoder,is,required,this,encoder,encoder,this,media,types,media,type,as,media,types,encoder,get,encodable,mime,types,this,default,media,type,init,default,media,type,this,media,types
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1498780456;Create an instance wrapping the given {@link Encoder}.;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		Assert.notNull(encoder, "Encoder is required")__		this.encoder = encoder__		this.mediaTypes = MediaType.asMediaTypes(encoder.getEncodableMimeTypes())__		this.defaultMediaType = initDefaultMediaType(this.mediaTypes)__	};create,an,instance,wrapping,the,given,link,encoder;public,encoder,http,message,writer,encoder,t,encoder,assert,not,null,encoder,encoder,is,required,this,encoder,encoder,this,media,types,media,type,as,media,types,encoder,get,encodable,mime,types,this,default,media,type,init,default,media,type,this,media,types
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1506097334;Create an instance wrapping the given {@link Encoder}.;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		Assert.notNull(encoder, "Encoder is required")__		this.encoder = encoder__		this.mediaTypes = MediaType.asMediaTypes(encoder.getEncodableMimeTypes())__		this.defaultMediaType = initDefaultMediaType(this.mediaTypes)__	};create,an,instance,wrapping,the,given,link,encoder;public,encoder,http,message,writer,encoder,t,encoder,assert,not,null,encoder,encoder,is,required,this,encoder,encoder,this,media,types,media,type,as,media,types,encoder,get,encodable,mime,types,this,default,media,type,init,default,media,type,this,media,types
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1520381042;Create an instance wrapping the given {@link Encoder}.;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		Assert.notNull(encoder, "Encoder is required")__		this.encoder = encoder__		this.mediaTypes = MediaType.asMediaTypes(encoder.getEncodableMimeTypes())__		this.defaultMediaType = initDefaultMediaType(this.mediaTypes)__	};create,an,instance,wrapping,the,given,link,encoder;public,encoder,http,message,writer,encoder,t,encoder,assert,not,null,encoder,encoder,is,required,this,encoder,encoder,this,media,types,media,type,as,media,types,encoder,get,encodable,mime,types,this,default,media,type,init,default,media,type,this,media,types
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1524852408;Create an instance wrapping the given {@link Encoder}.;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		Assert.notNull(encoder, "Encoder is required")__		this.encoder = encoder__		this.mediaTypes = MediaType.asMediaTypes(encoder.getEncodableMimeTypes())__		this.defaultMediaType = initDefaultMediaType(this.mediaTypes)__	};create,an,instance,wrapping,the,given,link,encoder;public,encoder,http,message,writer,encoder,t,encoder,assert,not,null,encoder,encoder,is,required,this,encoder,encoder,this,media,types,media,type,as,media,types,encoder,get,encodable,mime,types,this,default,media,type,init,default,media,type,this,media,types
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1528141727;Create an instance wrapping the given {@link Encoder}.;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		Assert.notNull(encoder, "Encoder is required")__		this.encoder = encoder__		this.mediaTypes = MediaType.asMediaTypes(encoder.getEncodableMimeTypes())__		this.defaultMediaType = initDefaultMediaType(this.mediaTypes)__	};create,an,instance,wrapping,the,given,link,encoder;public,encoder,http,message,writer,encoder,t,encoder,assert,not,null,encoder,encoder,is,required,this,encoder,encoder,this,media,types,media,type,as,media,types,encoder,get,encodable,mime,types,this,default,media,type,init,default,media,type,this,media,types
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1529401905;Create an instance wrapping the given {@link Encoder}.;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		Assert.notNull(encoder, "Encoder is required")__		this.encoder = encoder__		this.mediaTypes = MediaType.asMediaTypes(encoder.getEncodableMimeTypes())__		this.defaultMediaType = initDefaultMediaType(this.mediaTypes)__	};create,an,instance,wrapping,the,given,link,encoder;public,encoder,http,message,writer,encoder,t,encoder,assert,not,null,encoder,encoder,is,required,this,encoder,encoder,this,media,types,media,type,as,media,types,encoder,get,encodable,mime,types,this,default,media,type,init,default,media,type,this,media,types
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1530174524;Create an instance wrapping the given {@link Encoder}.;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		Assert.notNull(encoder, "Encoder is required")__		this.encoder = encoder__		this.mediaTypes = MediaType.asMediaTypes(encoder.getEncodableMimeTypes())__		this.defaultMediaType = initDefaultMediaType(this.mediaTypes)__	};create,an,instance,wrapping,the,given,link,encoder;public,encoder,http,message,writer,encoder,t,encoder,assert,not,null,encoder,encoder,is,required,this,encoder,encoder,this,media,types,media,type,as,media,types,encoder,get,encodable,mime,types,this,default,media,type,init,default,media,type,this,media,types
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1530174524;Create an instance wrapping the given {@link Encoder}.;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		Assert.notNull(encoder, "Encoder is required")__		this.encoder = encoder__		this.mediaTypes = MediaType.asMediaTypes(encoder.getEncodableMimeTypes())__		this.defaultMediaType = initDefaultMediaType(this.mediaTypes)__	};create,an,instance,wrapping,the,given,link,encoder;public,encoder,http,message,writer,encoder,t,encoder,assert,not,null,encoder,encoder,is,required,this,encoder,encoder,this,media,types,media,type,as,media,types,encoder,get,encodable,mime,types,this,default,media,type,init,default,media,type,this,media,types
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1530793695;Create an instance wrapping the given {@link Encoder}.;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		Assert.notNull(encoder, "Encoder is required")__		this.encoder = encoder__		this.mediaTypes = MediaType.asMediaTypes(encoder.getEncodableMimeTypes())__		this.defaultMediaType = initDefaultMediaType(this.mediaTypes)__	};create,an,instance,wrapping,the,given,link,encoder;public,encoder,http,message,writer,encoder,t,encoder,assert,not,null,encoder,encoder,is,required,this,encoder,encoder,this,media,types,media,type,as,media,types,encoder,get,encodable,mime,types,this,default,media,type,init,default,media,type,this,media,types
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1530975243;Create an instance wrapping the given {@link Encoder}.;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		Assert.notNull(encoder, "Encoder is required")__		this.encoder = encoder__		this.mediaTypes = MediaType.asMediaTypes(encoder.getEncodableMimeTypes())__		this.defaultMediaType = initDefaultMediaType(this.mediaTypes)__		initLogger(encoder)__	};create,an,instance,wrapping,the,given,link,encoder;public,encoder,http,message,writer,encoder,t,encoder,assert,not,null,encoder,encoder,is,required,this,encoder,encoder,this,media,types,media,type,as,media,types,encoder,get,encodable,mime,types,this,default,media,type,init,default,media,type,this,media,types,init,logger,encoder
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1531942370;Create an instance wrapping the given {@link Encoder}.;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		Assert.notNull(encoder, "Encoder is required")__		this.encoder = encoder__		this.mediaTypes = MediaType.asMediaTypes(encoder.getEncodableMimeTypes())__		this.defaultMediaType = initDefaultMediaType(this.mediaTypes)__		initLogger(encoder)__	};create,an,instance,wrapping,the,given,link,encoder;public,encoder,http,message,writer,encoder,t,encoder,assert,not,null,encoder,encoder,is,required,this,encoder,encoder,this,media,types,media,type,as,media,types,encoder,get,encodable,mime,types,this,default,media,type,init,default,media,type,this,media,types,init,logger,encoder
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1532474226;Create an instance wrapping the given {@link Encoder}.;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		Assert.notNull(encoder, "Encoder is required")__		this.encoder = encoder__		this.mediaTypes = MediaType.asMediaTypes(encoder.getEncodableMimeTypes())__		this.defaultMediaType = initDefaultMediaType(this.mediaTypes)__		initLogger(encoder)__	};create,an,instance,wrapping,the,given,link,encoder;public,encoder,http,message,writer,encoder,t,encoder,assert,not,null,encoder,encoder,is,required,this,encoder,encoder,this,media,types,media,type,as,media,types,encoder,get,encodable,mime,types,this,default,media,type,init,default,media,type,this,media,types,init,logger,encoder
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1535397430;Create an instance wrapping the given {@link Encoder}.;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		Assert.notNull(encoder, "Encoder is required")__		this.encoder = encoder__		this.mediaTypes = MediaType.asMediaTypes(encoder.getEncodableMimeTypes())__		this.defaultMediaType = initDefaultMediaType(this.mediaTypes)__		initLogger(encoder)__	};create,an,instance,wrapping,the,given,link,encoder;public,encoder,http,message,writer,encoder,t,encoder,assert,not,null,encoder,encoder,is,required,this,encoder,encoder,this,media,types,media,type,as,media,types,encoder,get,encodable,mime,types,this,default,media,type,init,default,media,type,this,media,types,init,logger,encoder
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1539722986;Create an instance wrapping the given {@link Encoder}.;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		Assert.notNull(encoder, "Encoder is required")__		this.encoder = encoder__		this.mediaTypes = MediaType.asMediaTypes(encoder.getEncodableMimeTypes())__		this.defaultMediaType = initDefaultMediaType(this.mediaTypes)__		initLogger(encoder)__	};create,an,instance,wrapping,the,given,link,encoder;public,encoder,http,message,writer,encoder,t,encoder,assert,not,null,encoder,encoder,is,required,this,encoder,encoder,this,media,types,media,type,as,media,types,encoder,get,encodable,mime,types,this,default,media,type,init,default,media,type,this,media,types,init,logger,encoder
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1542638994;Create an instance wrapping the given {@link Encoder}.;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		Assert.notNull(encoder, "Encoder is required")__		this.encoder = encoder__		this.mediaTypes = MediaType.asMediaTypes(encoder.getEncodableMimeTypes())__		this.defaultMediaType = initDefaultMediaType(this.mediaTypes)__		initLogger(encoder)__	};create,an,instance,wrapping,the,given,link,encoder;public,encoder,http,message,writer,encoder,t,encoder,assert,not,null,encoder,encoder,is,required,this,encoder,encoder,this,media,types,media,type,as,media,types,encoder,get,encodable,mime,types,this,default,media,type,init,default,media,type,this,media,types,init,logger,encoder
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1542664118;Create an instance wrapping the given {@link Encoder}.;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		Assert.notNull(encoder, "Encoder is required")__		this.encoder = encoder__		this.mediaTypes = MediaType.asMediaTypes(encoder.getEncodableMimeTypes())__		this.defaultMediaType = initDefaultMediaType(this.mediaTypes)__		initLogger(encoder)__	};create,an,instance,wrapping,the,given,link,encoder;public,encoder,http,message,writer,encoder,t,encoder,assert,not,null,encoder,encoder,is,required,this,encoder,encoder,this,media,types,media,type,as,media,types,encoder,get,encodable,mime,types,this,default,media,type,init,default,media,type,this,media,types,init,logger,encoder
EncoderHttpMessageWriter -> public EncoderHttpMessageWriter(Encoder<T> encoder);1548427561;Create an instance wrapping the given {@link Encoder}.;public EncoderHttpMessageWriter(Encoder<T> encoder) {_		Assert.notNull(encoder, "Encoder is required")__		initLogger(encoder)__		this.encoder = encoder__		this.mediaTypes = MediaType.asMediaTypes(encoder.getEncodableMimeTypes())__		this.defaultMediaType = initDefaultMediaType(this.mediaTypes)__	};create,an,instance,wrapping,the,given,link,encoder;public,encoder,http,message,writer,encoder,t,encoder,assert,not,null,encoder,encoder,is,required,init,logger,encoder,this,encoder,encoder,this,media,types,media,type,as,media,types,encoder,get,encodable,mime,types,this,default,media,type,init,default,media,type,this,media,types
EncoderHttpMessageWriter -> public Encoder<T> getEncoder();1489769182;Return the {@code Encoder} of this writer.;public Encoder<T> getEncoder() {_		return this.encoder__	};return,the,code,encoder,of,this,writer;public,encoder,t,get,encoder,return,this,encoder
EncoderHttpMessageWriter -> public Encoder<T> getEncoder();1489769189;Return the {@code Encoder} of this writer.;public Encoder<T> getEncoder() {_		return this.encoder__	};return,the,code,encoder,of,this,writer;public,encoder,t,get,encoder,return,this,encoder
EncoderHttpMessageWriter -> public Encoder<T> getEncoder();1489782813;Return the {@code Encoder} of this writer.;public Encoder<T> getEncoder() {_		return this.encoder__	};return,the,code,encoder,of,this,writer;public,encoder,t,get,encoder,return,this,encoder
EncoderHttpMessageWriter -> public Encoder<T> getEncoder();1490109321;Return the {@code Encoder} of this writer.;public Encoder<T> getEncoder() {_		return this.encoder__	};return,the,code,encoder,of,this,writer;public,encoder,t,get,encoder,return,this,encoder
EncoderHttpMessageWriter -> public Encoder<T> getEncoder();1490122306;Return the {@code Encoder} of this writer.;public Encoder<T> getEncoder() {_		return this.encoder__	};return,the,code,encoder,of,this,writer;public,encoder,t,get,encoder,return,this,encoder
EncoderHttpMessageWriter -> public Encoder<T> getEncoder();1490220092;Return the {@code Encoder} of this writer.;public Encoder<T> getEncoder() {_		return this.encoder__	};return,the,code,encoder,of,this,writer;public,encoder,t,get,encoder,return,this,encoder
EncoderHttpMessageWriter -> public Encoder<T> getEncoder();1490392946;Return the {@code Encoder} of this writer.;public Encoder<T> getEncoder() {_		return this.encoder__	};return,the,code,encoder,of,this,writer;public,encoder,t,get,encoder,return,this,encoder
EncoderHttpMessageWriter -> public Encoder<T> getEncoder();1491833276;Return the {@code Encoder} of this writer.;public Encoder<T> getEncoder() {_		return this.encoder__	};return,the,code,encoder,of,this,writer;public,encoder,t,get,encoder,return,this,encoder
EncoderHttpMessageWriter -> public Encoder<T> getEncoder();1492168700;Return the {@code Encoder} of this writer.;public Encoder<T> getEncoder() {_		return this.encoder__	};return,the,code,encoder,of,this,writer;public,encoder,t,get,encoder,return,this,encoder
EncoderHttpMessageWriter -> public Encoder<T> getEncoder();1493991714;Return the {@code Encoder} of this writer.;public Encoder<T> getEncoder() {_		return this.encoder__	};return,the,code,encoder,of,this,writer;public,encoder,t,get,encoder,return,this,encoder
EncoderHttpMessageWriter -> public Encoder<T> getEncoder();1494008983;Return the {@code Encoder} of this writer.;public Encoder<T> getEncoder() {_		return this.encoder__	};return,the,code,encoder,of,this,writer;public,encoder,t,get,encoder,return,this,encoder
EncoderHttpMessageWriter -> public Encoder<T> getEncoder();1494019148;Return the {@code Encoder} of this writer.;public Encoder<T> getEncoder() {_		return this.encoder__	};return,the,code,encoder,of,this,writer;public,encoder,t,get,encoder,return,this,encoder
EncoderHttpMessageWriter -> public Encoder<T> getEncoder();1496242568;Return the {@code Encoder} of this writer.;public Encoder<T> getEncoder() {_		return this.encoder__	};return,the,code,encoder,of,this,writer;public,encoder,t,get,encoder,return,this,encoder
EncoderHttpMessageWriter -> public Encoder<T> getEncoder();1496259743;Return the {@code Encoder} of this writer.;public Encoder<T> getEncoder() {_		return this.encoder__	};return,the,code,encoder,of,this,writer;public,encoder,t,get,encoder,return,this,encoder
EncoderHttpMessageWriter -> public Encoder<T> getEncoder();1496837955;Return the {@code Encoder} of this writer.;public Encoder<T> getEncoder() {_		return this.encoder__	};return,the,code,encoder,of,this,writer;public,encoder,t,get,encoder,return,this,encoder
EncoderHttpMessageWriter -> public Encoder<T> getEncoder();1498780456;Return the {@code Encoder} of this writer.;public Encoder<T> getEncoder() {_		return this.encoder__	};return,the,code,encoder,of,this,writer;public,encoder,t,get,encoder,return,this,encoder
EncoderHttpMessageWriter -> public Encoder<T> getEncoder();1506097334;Return the {@code Encoder} of this writer.;public Encoder<T> getEncoder() {_		return this.encoder__	};return,the,code,encoder,of,this,writer;public,encoder,t,get,encoder,return,this,encoder
EncoderHttpMessageWriter -> public Encoder<T> getEncoder();1520381042;Return the {@code Encoder} of this writer.;public Encoder<T> getEncoder() {_		return this.encoder__	};return,the,code,encoder,of,this,writer;public,encoder,t,get,encoder,return,this,encoder
EncoderHttpMessageWriter -> public Encoder<T> getEncoder();1524852408;Return the {@code Encoder} of this writer.;public Encoder<T> getEncoder() {_		return this.encoder__	};return,the,code,encoder,of,this,writer;public,encoder,t,get,encoder,return,this,encoder
EncoderHttpMessageWriter -> public Encoder<T> getEncoder();1528141727;Return the {@code Encoder} of this writer.;public Encoder<T> getEncoder() {_		return this.encoder__	};return,the,code,encoder,of,this,writer;public,encoder,t,get,encoder,return,this,encoder
EncoderHttpMessageWriter -> public Encoder<T> getEncoder();1529401905;Return the {@code Encoder} of this writer.;public Encoder<T> getEncoder() {_		return this.encoder__	};return,the,code,encoder,of,this,writer;public,encoder,t,get,encoder,return,this,encoder
EncoderHttpMessageWriter -> public Encoder<T> getEncoder();1530174524;Return the {@code Encoder} of this writer.;public Encoder<T> getEncoder() {_		return this.encoder__	};return,the,code,encoder,of,this,writer;public,encoder,t,get,encoder,return,this,encoder
EncoderHttpMessageWriter -> public Encoder<T> getEncoder();1530174524;Return the {@code Encoder} of this writer.;public Encoder<T> getEncoder() {_		return this.encoder__	};return,the,code,encoder,of,this,writer;public,encoder,t,get,encoder,return,this,encoder
EncoderHttpMessageWriter -> public Encoder<T> getEncoder();1530793695;Return the {@code Encoder} of this writer.;public Encoder<T> getEncoder() {_		return this.encoder__	};return,the,code,encoder,of,this,writer;public,encoder,t,get,encoder,return,this,encoder
EncoderHttpMessageWriter -> public Encoder<T> getEncoder();1530975243;Return the {@code Encoder} of this writer.;public Encoder<T> getEncoder() {_		return this.encoder__	};return,the,code,encoder,of,this,writer;public,encoder,t,get,encoder,return,this,encoder
EncoderHttpMessageWriter -> public Encoder<T> getEncoder();1531942370;Return the {@code Encoder} of this writer.;public Encoder<T> getEncoder() {_		return this.encoder__	};return,the,code,encoder,of,this,writer;public,encoder,t,get,encoder,return,this,encoder
EncoderHttpMessageWriter -> public Encoder<T> getEncoder();1532474226;Return the {@code Encoder} of this writer.;public Encoder<T> getEncoder() {_		return this.encoder__	};return,the,code,encoder,of,this,writer;public,encoder,t,get,encoder,return,this,encoder
EncoderHttpMessageWriter -> public Encoder<T> getEncoder();1535397430;Return the {@code Encoder} of this writer.;public Encoder<T> getEncoder() {_		return this.encoder__	};return,the,code,encoder,of,this,writer;public,encoder,t,get,encoder,return,this,encoder
EncoderHttpMessageWriter -> public Encoder<T> getEncoder();1539722986;Return the {@code Encoder} of this writer.;public Encoder<T> getEncoder() {_		return this.encoder__	};return,the,code,encoder,of,this,writer;public,encoder,t,get,encoder,return,this,encoder
EncoderHttpMessageWriter -> public Encoder<T> getEncoder();1542638994;Return the {@code Encoder} of this writer.;public Encoder<T> getEncoder() {_		return this.encoder__	};return,the,code,encoder,of,this,writer;public,encoder,t,get,encoder,return,this,encoder
EncoderHttpMessageWriter -> public Encoder<T> getEncoder();1542664118;Return the {@code Encoder} of this writer.;public Encoder<T> getEncoder() {_		return this.encoder__	};return,the,code,encoder,of,this,writer;public,encoder,t,get,encoder,return,this,encoder
EncoderHttpMessageWriter -> public Encoder<T> getEncoder();1548427561;Return the {@code Encoder} of this writer.;public Encoder<T> getEncoder() {_		return this.encoder__	};return,the,code,encoder,of,this,writer;public,encoder,t,get,encoder,return,this,encoder
EncoderHttpMessageWriter -> public List<MediaType> getStreamingMediaTypes();1490109321;Return the configured list of "streaming" media types.;public List<MediaType> getStreamingMediaTypes() {_		return Collections.unmodifiableList(this.streamingMediaTypes)__	};return,the,configured,list,of,streaming,media,types;public,list,media,type,get,streaming,media,types,return,collections,unmodifiable,list,this,streaming,media,types
EncoderHttpMessageWriter -> public List<MediaType> getStreamingMediaTypes();1490122306;Return the configured list of "streaming" media types.;public List<MediaType> getStreamingMediaTypes() {_		return Collections.unmodifiableList(this.streamingMediaTypes)__	};return,the,configured,list,of,streaming,media,types;public,list,media,type,get,streaming,media,types,return,collections,unmodifiable,list,this,streaming,media,types
EncoderHttpMessageWriter -> protected MediaType getDefaultContentType(ResolvableType elementType);1469211286;Return the default content type for the given {@code ResolvableType}._Used when {@link #write} is called without a concrete content type.__<p>By default returns the first of {@link Encoder#getEncodableMimeTypes()_encodableMimeTypes}, if any.__@param elementType the type of element for encoding_@return the content type, or {@code null};protected MediaType getDefaultContentType(ResolvableType elementType) {_		return (!this.writableMediaTypes.isEmpty() ? this.writableMediaTypes.get(0) : null)__	};return,the,default,content,type,for,the,given,code,resolvable,type,used,when,link,write,is,called,without,a,concrete,content,type,p,by,default,returns,the,first,of,link,encoder,get,encodable,mime,types,encodable,mime,types,if,any,param,element,type,the,type,of,element,for,encoding,return,the,content,type,or,code,null;protected,media,type,get,default,content,type,resolvable,type,element,type,return,this,writable,media,types,is,empty,this,writable,media,types,get,0,null
EncoderHttpMessageWriter -> protected MediaType getDefaultContentType(ResolvableType elementType);1473671607;Return the default content type for the given {@code ResolvableType}._Used when {@link #write} is called without a concrete content type.__<p>By default returns the first of {@link Encoder#getEncodableMimeTypes()_encodableMimeTypes}, if any.__@param elementType the type of element for encoding_@return the content type, or {@code null};protected MediaType getDefaultContentType(ResolvableType elementType) {_		return (!this.writableMediaTypes.isEmpty() ? this.writableMediaTypes.get(0) : null)__	};return,the,default,content,type,for,the,given,code,resolvable,type,used,when,link,write,is,called,without,a,concrete,content,type,p,by,default,returns,the,first,of,link,encoder,get,encodable,mime,types,encodable,mime,types,if,any,param,element,type,the,type,of,element,for,encoding,return,the,content,type,or,code,null;protected,media,type,get,default,content,type,resolvable,type,element,type,return,this,writable,media,types,is,empty,this,writable,media,types,get,0,null
EncoderHttpMessageWriter -> protected MediaType getDefaultContentType(ResolvableType elementType);1473771793;Return the default content type for the given {@code ResolvableType}._Used when {@link #write} is called without a concrete content type.__<p>By default returns the first of {@link Encoder#getEncodableMimeTypes()_encodableMimeTypes}, if any.__@param elementType the type of element for encoding_@return the content type, or {@code null};protected MediaType getDefaultContentType(ResolvableType elementType) {_		return (!this.writableMediaTypes.isEmpty() ? this.writableMediaTypes.get(0) : null)__	};return,the,default,content,type,for,the,given,code,resolvable,type,used,when,link,write,is,called,without,a,concrete,content,type,p,by,default,returns,the,first,of,link,encoder,get,encodable,mime,types,encodable,mime,types,if,any,param,element,type,the,type,of,element,for,encoding,return,the,content,type,or,code,null;protected,media,type,get,default,content,type,resolvable,type,element,type,return,this,writable,media,types,is,empty,this,writable,media,types,get,0,null
EncoderHttpMessageWriter -> protected MediaType getDefaultContentType(ResolvableType elementType);1474365351;Return the default content type for the given {@code ResolvableType}._Used when {@link #write} is called without a concrete content type.__<p>By default returns the first of {@link Encoder#getEncodableMimeTypes()_encodableMimeTypes}, if any.__@param elementType the type of element for encoding_@return the content type, or {@code null};protected MediaType getDefaultContentType(ResolvableType elementType) {_		return (!this.writableMediaTypes.isEmpty() ? this.writableMediaTypes.get(0) : null)__	};return,the,default,content,type,for,the,given,code,resolvable,type,used,when,link,write,is,called,without,a,concrete,content,type,p,by,default,returns,the,first,of,link,encoder,get,encodable,mime,types,encodable,mime,types,if,any,param,element,type,the,type,of,element,for,encoding,return,the,content,type,or,code,null;protected,media,type,get,default,content,type,resolvable,type,element,type,return,this,writable,media,types,is,empty,this,writable,media,types,get,0,null
EncoderHttpMessageWriter -> protected MediaType getDefaultContentType(ResolvableType elementType);1476479832;Return the default content type for the given {@code ResolvableType}._Used when {@link #write} is called without a concrete content type.__<p>By default returns the first of {@link Encoder#getEncodableMimeTypes()_encodableMimeTypes} that is concrete({@link MediaType#isConcrete()}), if any.__@param elementType the type of element for encoding_@return the content type, or {@code null};protected MediaType getDefaultContentType(ResolvableType elementType) {_		return writableMediaTypes.stream()_				.filter(MediaType::isConcrete)_				.findFirst().orElse(null)__	};return,the,default,content,type,for,the,given,code,resolvable,type,used,when,link,write,is,called,without,a,concrete,content,type,p,by,default,returns,the,first,of,link,encoder,get,encodable,mime,types,encodable,mime,types,that,is,concrete,link,media,type,is,concrete,if,any,param,element,type,the,type,of,element,for,encoding,return,the,content,type,or,code,null;protected,media,type,get,default,content,type,resolvable,type,element,type,return,writable,media,types,stream,filter,media,type,is,concrete,find,first,or,else,null
EncoderHttpMessageWriter -> protected MediaType getDefaultContentType(ResolvableType elementType);1486992019;Return the default content type for the given {@code ResolvableType}._Used when {@link #write} is called without a concrete content type.__<p>By default returns the first of {@link Encoder#getEncodableMimeTypes()_encodableMimeTypes} that is concrete({@link MediaType#isConcrete()}), if any.__@param elementType the type of element for encoding_@return the content type, or {@code null};protected MediaType getDefaultContentType(ResolvableType elementType) {_		return writableMediaTypes.stream()_				.filter(MediaType::isConcrete)_				.findFirst().orElse(null)__	};return,the,default,content,type,for,the,given,code,resolvable,type,used,when,link,write,is,called,without,a,concrete,content,type,p,by,default,returns,the,first,of,link,encoder,get,encodable,mime,types,encodable,mime,types,that,is,concrete,link,media,type,is,concrete,if,any,param,element,type,the,type,of,element,for,encoding,return,the,content,type,or,code,null;protected,media,type,get,default,content,type,resolvable,type,element,type,return,writable,media,types,stream,filter,media,type,is,concrete,find,first,or,else,null
EncoderHttpMessageWriter -> protected MediaType getDefaultContentType(ResolvableType elementType);1489769182;Return the default content type for the given {@code ResolvableType}._Used when {@link #write} is called without a concrete content type.__<p>By default returns the first of {@link Encoder#getEncodableMimeTypes()_encodableMimeTypes} that is concrete({@link MediaType#isConcrete()}), if any.__@param elementType the type of element for encoding_@return the content type, or {@code null};protected MediaType getDefaultContentType(ResolvableType elementType) {_		return this.mediaTypes.stream().filter(MediaType::isConcrete).findFirst().orElse(null)__	};return,the,default,content,type,for,the,given,code,resolvable,type,used,when,link,write,is,called,without,a,concrete,content,type,p,by,default,returns,the,first,of,link,encoder,get,encodable,mime,types,encodable,mime,types,that,is,concrete,link,media,type,is,concrete,if,any,param,element,type,the,type,of,element,for,encoding,return,the,content,type,or,code,null;protected,media,type,get,default,content,type,resolvable,type,element,type,return,this,media,types,stream,filter,media,type,is,concrete,find,first,or,else,null
