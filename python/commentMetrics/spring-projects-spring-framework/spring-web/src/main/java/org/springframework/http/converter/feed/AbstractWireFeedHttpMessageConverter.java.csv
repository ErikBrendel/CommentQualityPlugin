commented;modifiers;parameterAmount;loc;comment;code
false;protected;2;17;;@Override @SuppressWarnings("unchecked") protected T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException, HttpMessageNotReadableException {     WireFeedInput feedInput = new WireFeedInput().     MediaType contentType = inputMessage.getHeaders().getContentType().     Charset charset = (contentType != null && contentType.getCharset() != null ? contentType.getCharset() : DEFAULT_CHARSET).     try {         Reader reader = new InputStreamReader(inputMessage.getBody(), charset).         return (T) feedInput.build(reader).     } catch (FeedException ex) {         throw new HttpMessageNotReadableException("Could not read WireFeed: " + ex.getMessage(), ex, inputMessage).     } }
false;protected;2;21;;@Override protected void writeInternal(T wireFeed, HttpOutputMessage outputMessage) throws IOException, HttpMessageNotWritableException {     Charset charset = (StringUtils.hasLength(wireFeed.getEncoding()) ? Charset.forName(wireFeed.getEncoding()) : DEFAULT_CHARSET).     MediaType contentType = outputMessage.getHeaders().getContentType().     if (contentType != null) {         contentType = new MediaType(contentType.getType(), contentType.getSubtype(), charset).         outputMessage.getHeaders().setContentType(contentType).     }     WireFeedOutput feedOutput = new WireFeedOutput().     try {         Writer writer = new OutputStreamWriter(outputMessage.getBody(), charset).         feedOutput.output(wireFeed, writer).     } catch (FeedException ex) {         throw new HttpMessageNotWritableException("Could not write WireFeed: " + ex.getMessage(), ex).     } }
