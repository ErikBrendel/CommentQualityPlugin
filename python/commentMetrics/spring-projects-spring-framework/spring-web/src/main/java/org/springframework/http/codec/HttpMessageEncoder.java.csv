commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * Return "streaming" media types for which flushing should be performed  * automatically vs at the end of the input stream.  */ ;/**  * Return "streaming" media types for which flushing should be performed  * automatically vs at the end of the input stream.  */ List<MediaType> getStreamingMediaTypes().
true;default;5;5;/**  * Get decoding hints based on the server request or annotations on the  * target controller method parameter.  * @param actualType the actual source type to encode, possibly a reactive  * wrapper and sourced from {@link org.springframework.core.MethodParameter},  * i.e. providing access to method annotations.  * @param elementType the element type within {@code Flux/Mono} that we're  * trying to encode.  * @param request the current request  * @param response the current response  * @return a Map with hints, possibly empty  */ ;/**  * Get decoding hints based on the server request or annotations on the  * target controller method parameter.  * @param actualType the actual source type to encode, possibly a reactive  * wrapper and sourced from {@link org.springframework.core.MethodParameter},  * i.e. providing access to method annotations.  * @param elementType the element type within {@code Flux/Mono} that we're  * trying to encode.  * @param request the current request  * @param response the current response  * @return a Map with hints, possibly empty  */ default Map<String, Object> getEncodeHints(ResolvableType actualType, ResolvableType elementType, @Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {     return Hints.none(). }
