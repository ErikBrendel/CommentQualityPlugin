# id;timestamp;commentText;codeText;commentWords;codeWords
HttpMessageEncoder -> List<MediaType> getStreamingMediaTypes()_;1490392946;Return "streaming" media types for which flushing should be performed_automatically vs at the end of the input stream.;List<MediaType> getStreamingMediaTypes()_;return,streaming,media,types,for,which,flushing,should,be,performed,automatically,vs,at,the,end,of,the,input,stream;list,media,type,get,streaming,media,types
HttpMessageEncoder -> List<MediaType> getStreamingMediaTypes()_;1494019148;Return "streaming" media types for which flushing should be performed_automatically vs at the end of the input stream.;List<MediaType> getStreamingMediaTypes()_;return,streaming,media,types,for,which,flushing,should,be,performed,automatically,vs,at,the,end,of,the,input,stream;list,media,type,get,streaming,media,types
HttpMessageEncoder -> List<MediaType> getStreamingMediaTypes()_;1496837955;Return "streaming" media types for which flushing should be performed_automatically vs at the end of the input stream.;List<MediaType> getStreamingMediaTypes()_;return,streaming,media,types,for,which,flushing,should,be,performed,automatically,vs,at,the,end,of,the,input,stream;list,media,type,get,streaming,media,types
HttpMessageEncoder -> List<MediaType> getStreamingMediaTypes()_;1530174524;Return "streaming" media types for which flushing should be performed_automatically vs at the end of the input stream.;List<MediaType> getStreamingMediaTypes()_;return,streaming,media,types,for,which,flushing,should,be,performed,automatically,vs,at,the,end,of,the,input,stream;list,media,type,get,streaming,media,types
HttpMessageEncoder -> List<MediaType> getStreamingMediaTypes()_;1530793695;Return "streaming" media types for which flushing should be performed_automatically vs at the end of the input stream.;List<MediaType> getStreamingMediaTypes()_;return,streaming,media,types,for,which,flushing,should,be,performed,automatically,vs,at,the,end,of,the,input,stream;list,media,type,get,streaming,media,types
HttpMessageEncoder -> default Map<String, Object> getEncodeHints(ResolvableType actualType, ResolvableType elementType, 			MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);1490392946;Get decoding hints based on the server request or annotations on the_target controller method parameter.__@param actualType the actual source type to encode, possibly a reactive_wrapper and sourced from {@link org.springframework.core.MethodParameter},_i.e. providing access to method annotations._@param elementType the element type within {@code Flux/Mono} that we're_trying to encode._@param request the current request_@param response the current response_@return a Map with hints, possibly empty;default Map<String, Object> getEncodeHints(ResolvableType actualType, ResolvableType elementType,_			MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {__		return Collections.emptyMap()__	};get,decoding,hints,based,on,the,server,request,or,annotations,on,the,target,controller,method,parameter,param,actual,type,the,actual,source,type,to,encode,possibly,a,reactive,wrapper,and,sourced,from,link,org,springframework,core,method,parameter,i,e,providing,access,to,method,annotations,param,element,type,the,element,type,within,code,flux,mono,that,we,re,trying,to,encode,param,request,the,current,request,param,response,the,current,response,return,a,map,with,hints,possibly,empty;default,map,string,object,get,encode,hints,resolvable,type,actual,type,resolvable,type,element,type,media,type,media,type,server,http,request,request,server,http,response,response,return,collections,empty,map
HttpMessageEncoder -> default Map<String, Object> getEncodeHints(ResolvableType actualType, ResolvableType elementType, 			MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);1494019148;Get decoding hints based on the server request or annotations on the_target controller method parameter._@param actualType the actual source type to encode, possibly a reactive_wrapper and sourced from {@link org.springframework.core.MethodParameter},_i.e. providing access to method annotations._@param elementType the element type within {@code Flux/Mono} that we're_trying to encode._@param request the current request_@param response the current response_@return a Map with hints, possibly empty;default Map<String, Object> getEncodeHints(ResolvableType actualType, ResolvableType elementType,_			MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {__		return Collections.emptyMap()__	};get,decoding,hints,based,on,the,server,request,or,annotations,on,the,target,controller,method,parameter,param,actual,type,the,actual,source,type,to,encode,possibly,a,reactive,wrapper,and,sourced,from,link,org,springframework,core,method,parameter,i,e,providing,access,to,method,annotations,param,element,type,the,element,type,within,code,flux,mono,that,we,re,trying,to,encode,param,request,the,current,request,param,response,the,current,response,return,a,map,with,hints,possibly,empty;default,map,string,object,get,encode,hints,resolvable,type,actual,type,resolvable,type,element,type,media,type,media,type,server,http,request,request,server,http,response,response,return,collections,empty,map
HttpMessageEncoder -> default Map<String, Object> getEncodeHints(ResolvableType actualType, ResolvableType elementType, 			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);1496837955;Get decoding hints based on the server request or annotations on the_target controller method parameter._@param actualType the actual source type to encode, possibly a reactive_wrapper and sourced from {@link org.springframework.core.MethodParameter},_i.e. providing access to method annotations._@param elementType the element type within {@code Flux/Mono} that we're_trying to encode._@param request the current request_@param response the current response_@return a Map with hints, possibly empty;default Map<String, Object> getEncodeHints(ResolvableType actualType, ResolvableType elementType,_			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {__		return Collections.emptyMap()__	};get,decoding,hints,based,on,the,server,request,or,annotations,on,the,target,controller,method,parameter,param,actual,type,the,actual,source,type,to,encode,possibly,a,reactive,wrapper,and,sourced,from,link,org,springframework,core,method,parameter,i,e,providing,access,to,method,annotations,param,element,type,the,element,type,within,code,flux,mono,that,we,re,trying,to,encode,param,request,the,current,request,param,response,the,current,response,return,a,map,with,hints,possibly,empty;default,map,string,object,get,encode,hints,resolvable,type,actual,type,resolvable,type,element,type,nullable,media,type,media,type,server,http,request,request,server,http,response,response,return,collections,empty,map
HttpMessageEncoder -> default Map<String, Object> getEncodeHints(ResolvableType actualType, ResolvableType elementType, 			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);1530174524;Get decoding hints based on the server request or annotations on the_target controller method parameter._@param actualType the actual source type to encode, possibly a reactive_wrapper and sourced from {@link org.springframework.core.MethodParameter},_i.e. providing access to method annotations._@param elementType the element type within {@code Flux/Mono} that we're_trying to encode._@param request the current request_@param response the current response_@return a Map with hints, possibly empty;default Map<String, Object> getEncodeHints(ResolvableType actualType, ResolvableType elementType,_			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {__		return Collections.emptyMap()__	};get,decoding,hints,based,on,the,server,request,or,annotations,on,the,target,controller,method,parameter,param,actual,type,the,actual,source,type,to,encode,possibly,a,reactive,wrapper,and,sourced,from,link,org,springframework,core,method,parameter,i,e,providing,access,to,method,annotations,param,element,type,the,element,type,within,code,flux,mono,that,we,re,trying,to,encode,param,request,the,current,request,param,response,the,current,response,return,a,map,with,hints,possibly,empty;default,map,string,object,get,encode,hints,resolvable,type,actual,type,resolvable,type,element,type,nullable,media,type,media,type,server,http,request,request,server,http,response,response,return,collections,empty,map
HttpMessageEncoder -> default Map<String, Object> getEncodeHints(ResolvableType actualType, ResolvableType elementType, 			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);1530793695;Get decoding hints based on the server request or annotations on the_target controller method parameter._@param actualType the actual source type to encode, possibly a reactive_wrapper and sourced from {@link org.springframework.core.MethodParameter},_i.e. providing access to method annotations._@param elementType the element type within {@code Flux/Mono} that we're_trying to encode._@param request the current request_@param response the current response_@return a Map with hints, possibly empty;default Map<String, Object> getEncodeHints(ResolvableType actualType, ResolvableType elementType,_			@Nullable MediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {__		return Hints.none()__	};get,decoding,hints,based,on,the,server,request,or,annotations,on,the,target,controller,method,parameter,param,actual,type,the,actual,source,type,to,encode,possibly,a,reactive,wrapper,and,sourced,from,link,org,springframework,core,method,parameter,i,e,providing,access,to,method,annotations,param,element,type,the,element,type,within,code,flux,mono,that,we,re,trying,to,encode,param,request,the,current,request,param,response,the,current,response,return,a,map,with,hints,possibly,empty;default,map,string,object,get,encode,hints,resolvable,type,actual,type,resolvable,type,element,type,nullable,media,type,media,type,server,http,request,request,server,http,response,response,return,hints,none
