commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;4;;@Override protected OutputStream getBodyInternal(HttpHeaders headers) throws IOException {     return this.bufferedOutput. }
false;protected;1;10;;@Override protected ClientHttpResponse executeInternal(HttpHeaders headers) throws IOException {     byte[] bytes = this.bufferedOutput.toByteArray().     if (headers.getContentLength() < 0) {         headers.setContentLength(bytes.length).     }     ClientHttpResponse result = executeInternal(headers, bytes).     this.bufferedOutput = new ByteArrayOutputStream(0).     return result. }
true;protected,abstract;2;2;/**  * Abstract template method that writes the given headers and content to the HTTP request.  * @param headers the HTTP headers  * @param bufferedOutput the body content  * @return the response object for the executed request  */ ;/**  * Abstract template method that writes the given headers and content to the HTTP request.  * @param headers the HTTP headers  * @param bufferedOutput the body content  * @return the response object for the executed request  */ protected abstract ClientHttpResponse executeInternal(HttpHeaders headers, byte[] bufferedOutput) throws IOException.
