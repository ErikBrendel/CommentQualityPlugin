# id;timestamp;commentText;codeText;commentWords;codeWords
DefaultWebSessionManager -> public WebSessionIdResolver getSessionIdResolver();1468513835;Return the configured {@link WebSessionIdResolver}.;public WebSessionIdResolver getSessionIdResolver() {_		return this.sessionIdResolver__	};return,the,configured,link,web,session,id,resolver;public,web,session,id,resolver,get,session,id,resolver,return,this,session,id,resolver
DefaultWebSessionManager -> public WebSessionIdResolver getSessionIdResolver();1468532417;Return the configured {@link WebSessionIdResolver}.;public WebSessionIdResolver getSessionIdResolver() {_		return this.sessionIdResolver__	};return,the,configured,link,web,session,id,resolver;public,web,session,id,resolver,get,session,id,resolver,return,this,session,id,resolver
DefaultWebSessionManager -> public WebSessionIdResolver getSessionIdResolver();1476396161;Return the configured {@link WebSessionIdResolver}.;public WebSessionIdResolver getSessionIdResolver() {_		return this.sessionIdResolver__	};return,the,configured,link,web,session,id,resolver;public,web,session,id,resolver,get,session,id,resolver,return,this,session,id,resolver
DefaultWebSessionManager -> public WebSessionIdResolver getSessionIdResolver();1491927184;Return the configured {@link WebSessionIdResolver}.;public WebSessionIdResolver getSessionIdResolver() {_		return this.sessionIdResolver__	};return,the,configured,link,web,session,id,resolver;public,web,session,id,resolver,get,session,id,resolver,return,this,session,id,resolver
DefaultWebSessionManager -> public WebSessionIdResolver getSessionIdResolver();1492090594;Return the configured {@link WebSessionIdResolver}.;public WebSessionIdResolver getSessionIdResolver() {_		return this.sessionIdResolver__	};return,the,configured,link,web,session,id,resolver;public,web,session,id,resolver,get,session,id,resolver,return,this,session,id,resolver
DefaultWebSessionManager -> public WebSessionIdResolver getSessionIdResolver();1498492881;Return the configured {@link WebSessionIdResolver}.;public WebSessionIdResolver getSessionIdResolver() {_		return this.sessionIdResolver__	};return,the,configured,link,web,session,id,resolver;public,web,session,id,resolver,get,session,id,resolver,return,this,session,id,resolver
DefaultWebSessionManager -> public WebSessionIdResolver getSessionIdResolver();1500065756;Return the configured {@link WebSessionIdResolver}.;public WebSessionIdResolver getSessionIdResolver() {_		return this.sessionIdResolver__	};return,the,configured,link,web,session,id,resolver;public,web,session,id,resolver,get,session,id,resolver,return,this,session,id,resolver
DefaultWebSessionManager -> public WebSessionIdResolver getSessionIdResolver();1500065756;Return the configured {@link WebSessionIdResolver}.;public WebSessionIdResolver getSessionIdResolver() {_		return this.sessionIdResolver__	};return,the,configured,link,web,session,id,resolver;public,web,session,id,resolver,get,session,id,resolver,return,this,session,id,resolver
DefaultWebSessionManager -> public WebSessionIdResolver getSessionIdResolver();1500282578;Return the configured {@link WebSessionIdResolver}.;public WebSessionIdResolver getSessionIdResolver() {_		return this.sessionIdResolver__	};return,the,configured,link,web,session,id,resolver;public,web,session,id,resolver,get,session,id,resolver,return,this,session,id,resolver
DefaultWebSessionManager -> public WebSessionIdResolver getSessionIdResolver();1504712897;Return the configured {@link WebSessionIdResolver}.;public WebSessionIdResolver getSessionIdResolver() {_		return this.sessionIdResolver__	};return,the,configured,link,web,session,id,resolver;public,web,session,id,resolver,get,session,id,resolver,return,this,session,id,resolver
DefaultWebSessionManager -> public WebSessionIdResolver getSessionIdResolver();1506481932;Return the configured {@link WebSessionIdResolver}.;public WebSessionIdResolver getSessionIdResolver() {_		return this.sessionIdResolver__	};return,the,configured,link,web,session,id,resolver;public,web,session,id,resolver,get,session,id,resolver,return,this,session,id,resolver
DefaultWebSessionManager -> public WebSessionIdResolver getSessionIdResolver();1506481978;Return the configured {@link WebSessionIdResolver}.;public WebSessionIdResolver getSessionIdResolver() {_		return this.sessionIdResolver__	};return,the,configured,link,web,session,id,resolver;public,web,session,id,resolver,get,session,id,resolver,return,this,session,id,resolver
DefaultWebSessionManager -> public WebSessionIdResolver getSessionIdResolver();1506485438;Return the configured {@link WebSessionIdResolver}.;public WebSessionIdResolver getSessionIdResolver() {_		return this.sessionIdResolver__	};return,the,configured,link,web,session,id,resolver;public,web,session,id,resolver,get,session,id,resolver,return,this,session,id,resolver
DefaultWebSessionManager -> public WebSessionIdResolver getSessionIdResolver();1516914749;Return the configured {@link WebSessionIdResolver}.;public WebSessionIdResolver getSessionIdResolver() {_		return this.sessionIdResolver__	};return,the,configured,link,web,session,id,resolver;public,web,session,id,resolver,get,session,id,resolver,return,this,session,id,resolver
DefaultWebSessionManager -> public WebSessionIdResolver getSessionIdResolver();1530174524;Return the configured {@link WebSessionIdResolver}.;public WebSessionIdResolver getSessionIdResolver() {_		return this.sessionIdResolver__	};return,the,configured,link,web,session,id,resolver;public,web,session,id,resolver,get,session,id,resolver,return,this,session,id,resolver
DefaultWebSessionManager -> public Clock getClock();1468513835;Return the configured clock for access to current time.;public Clock getClock() {_		return this.clock__	};return,the,configured,clock,for,access,to,current,time;public,clock,get,clock,return,this,clock
DefaultWebSessionManager -> public Clock getClock();1468532417;Return the configured clock for access to current time.;public Clock getClock() {_		return this.clock__	};return,the,configured,clock,for,access,to,current,time;public,clock,get,clock,return,this,clock
DefaultWebSessionManager -> public Clock getClock();1476396161;Return the configured clock for access to current time.;public Clock getClock() {_		return this.clock__	};return,the,configured,clock,for,access,to,current,time;public,clock,get,clock,return,this,clock
DefaultWebSessionManager -> public Clock getClock();1491927184;Return the configured clock for access to current time.;public Clock getClock() {_		return this.clock__	};return,the,configured,clock,for,access,to,current,time;public,clock,get,clock,return,this,clock
DefaultWebSessionManager -> public Clock getClock();1492090594;Return the configured clock for access to current time.;public Clock getClock() {_		return this.clock__	};return,the,configured,clock,for,access,to,current,time;public,clock,get,clock,return,this,clock
DefaultWebSessionManager -> public Clock getClock();1498492881;Return the configured clock for access to current time.;public Clock getClock() {_		return this.clock__	};return,the,configured,clock,for,access,to,current,time;public,clock,get,clock,return,this,clock
DefaultWebSessionManager -> public Clock getClock();1500065756;Return the configured clock for session lastAccessTime calculations.;public Clock getClock() {_		return this.clock__	};return,the,configured,clock,for,session,last,access,time,calculations;public,clock,get,clock,return,this,clock
DefaultWebSessionManager -> public Clock getClock();1500065756;Return the configured clock for session lastAccessTime calculations.;public Clock getClock() {_		return this.clock__	};return,the,configured,clock,for,session,last,access,time,calculations;public,clock,get,clock,return,this,clock
DefaultWebSessionManager -> public Clock getClock();1500282578;Return the configured clock for session lastAccessTime calculations.;public Clock getClock() {_		return this.clock__	};return,the,configured,clock,for,session,last,access,time,calculations;public,clock,get,clock,return,this,clock
DefaultWebSessionManager -> public void setSessionStore(WebSessionStore sessionStore);1468513835;Configure the session persistence strategy to use._<p>By default {@link InMemoryWebSessionStore} is used._@param sessionStore the persistence strategy;public void setSessionStore(WebSessionStore sessionStore) {_		Assert.notNull(sessionStore, "'sessionStore' is required.")__		this.sessionStore = sessionStore__	};configure,the,session,persistence,strategy,to,use,p,by,default,link,in,memory,web,session,store,is,used,param,session,store,the,persistence,strategy;public,void,set,session,store,web,session,store,session,store,assert,not,null,session,store,session,store,is,required,this,session,store,session,store
DefaultWebSessionManager -> public void setSessionStore(WebSessionStore sessionStore);1468532417;Configure the session persistence strategy to use._<p>By default {@link InMemoryWebSessionStore} is used._@param sessionStore the persistence strategy;public void setSessionStore(WebSessionStore sessionStore) {_		Assert.notNull(sessionStore, "'sessionStore' is required.")__		this.sessionStore = sessionStore__	};configure,the,session,persistence,strategy,to,use,p,by,default,link,in,memory,web,session,store,is,used,param,session,store,the,persistence,strategy;public,void,set,session,store,web,session,store,session,store,assert,not,null,session,store,session,store,is,required,this,session,store,session,store
DefaultWebSessionManager -> public void setSessionStore(WebSessionStore sessionStore);1476396161;Configure the session persistence strategy to use._<p>By default {@link InMemoryWebSessionStore} is used._@param sessionStore the persistence strategy;public void setSessionStore(WebSessionStore sessionStore) {_		Assert.notNull(sessionStore, "'sessionStore' is required.")__		this.sessionStore = sessionStore__	};configure,the,session,persistence,strategy,to,use,p,by,default,link,in,memory,web,session,store,is,used,param,session,store,the,persistence,strategy;public,void,set,session,store,web,session,store,session,store,assert,not,null,session,store,session,store,is,required,this,session,store,session,store
DefaultWebSessionManager -> public void setSessionStore(WebSessionStore sessionStore);1491927184;Configure the session persistence strategy to use._<p>By default {@link InMemoryWebSessionStore} is used._@param sessionStore the persistence strategy;public void setSessionStore(WebSessionStore sessionStore) {_		Assert.notNull(sessionStore, "'sessionStore' is required.")__		this.sessionStore = sessionStore__	};configure,the,session,persistence,strategy,to,use,p,by,default,link,in,memory,web,session,store,is,used,param,session,store,the,persistence,strategy;public,void,set,session,store,web,session,store,session,store,assert,not,null,session,store,session,store,is,required,this,session,store,session,store
DefaultWebSessionManager -> public void setSessionStore(WebSessionStore sessionStore);1492090594;Configure the session persistence strategy to use._<p>By default {@link InMemoryWebSessionStore} is used._@param sessionStore the persistence strategy;public void setSessionStore(WebSessionStore sessionStore) {_		Assert.notNull(sessionStore, "'sessionStore' is required.")__		this.sessionStore = sessionStore__	};configure,the,session,persistence,strategy,to,use,p,by,default,link,in,memory,web,session,store,is,used,param,session,store,the,persistence,strategy;public,void,set,session,store,web,session,store,session,store,assert,not,null,session,store,session,store,is,required,this,session,store,session,store
DefaultWebSessionManager -> public void setSessionStore(WebSessionStore sessionStore);1498492881;Configure the session persistence strategy to use._<p>By default {@link InMemoryWebSessionStore} is used._@param sessionStore the persistence strategy;public void setSessionStore(WebSessionStore sessionStore) {_		Assert.notNull(sessionStore, "'sessionStore' is required.")__		this.sessionStore = sessionStore__	};configure,the,session,persistence,strategy,to,use,p,by,default,link,in,memory,web,session,store,is,used,param,session,store,the,persistence,strategy;public,void,set,session,store,web,session,store,session,store,assert,not,null,session,store,session,store,is,required,this,session,store,session,store
DefaultWebSessionManager -> public void setSessionStore(WebSessionStore sessionStore);1500065756;Configure the persistence strategy._<p>By default an instance of {@link InMemoryWebSessionStore}._@param sessionStore the persistence strategy to use;public void setSessionStore(WebSessionStore sessionStore) {_		Assert.notNull(sessionStore, "WebSessionStore is required.")__		this.sessionStore = sessionStore__	};configure,the,persistence,strategy,p,by,default,an,instance,of,link,in,memory,web,session,store,param,session,store,the,persistence,strategy,to,use;public,void,set,session,store,web,session,store,session,store,assert,not,null,session,store,web,session,store,is,required,this,session,store,session,store
DefaultWebSessionManager -> public void setSessionStore(WebSessionStore sessionStore);1500065756;Configure the persistence strategy._<p>By default an instance of {@link InMemoryWebSessionStore}._@param sessionStore the persistence strategy to use;public void setSessionStore(WebSessionStore sessionStore) {_		Assert.notNull(sessionStore, "WebSessionStore is required.")__		this.sessionStore = sessionStore__	};configure,the,persistence,strategy,p,by,default,an,instance,of,link,in,memory,web,session,store,param,session,store,the,persistence,strategy,to,use;public,void,set,session,store,web,session,store,session,store,assert,not,null,session,store,web,session,store,is,required,this,session,store,session,store
DefaultWebSessionManager -> public void setSessionStore(WebSessionStore sessionStore);1500282578;Configure the persistence strategy._<p>By default an instance of {@link InMemoryWebSessionStore}._@param sessionStore the persistence strategy to use;public void setSessionStore(WebSessionStore sessionStore) {_		Assert.notNull(sessionStore, "WebSessionStore is required.")__		this.sessionStore = sessionStore__	};configure,the,persistence,strategy,p,by,default,an,instance,of,link,in,memory,web,session,store,param,session,store,the,persistence,strategy,to,use;public,void,set,session,store,web,session,store,session,store,assert,not,null,session,store,web,session,store,is,required,this,session,store,session,store
DefaultWebSessionManager -> public void setSessionStore(WebSessionStore sessionStore);1504712897;Configure the persistence strategy._<p>By default an instance of {@link InMemoryWebSessionStore}._@param sessionStore the persistence strategy to use;public void setSessionStore(WebSessionStore sessionStore) {_		Assert.notNull(sessionStore, "WebSessionStore is required.")__		this.sessionStore = sessionStore__	};configure,the,persistence,strategy,p,by,default,an,instance,of,link,in,memory,web,session,store,param,session,store,the,persistence,strategy,to,use;public,void,set,session,store,web,session,store,session,store,assert,not,null,session,store,web,session,store,is,required,this,session,store,session,store
DefaultWebSessionManager -> public void setSessionStore(WebSessionStore sessionStore);1506481932;Configure the persistence strategy._<p>By default an instance of {@link InMemoryWebSessionStore}._@param sessionStore the persistence strategy to use;public void setSessionStore(WebSessionStore sessionStore) {_		Assert.notNull(sessionStore, "WebSessionStore is required.")__		this.sessionStore = sessionStore__	};configure,the,persistence,strategy,p,by,default,an,instance,of,link,in,memory,web,session,store,param,session,store,the,persistence,strategy,to,use;public,void,set,session,store,web,session,store,session,store,assert,not,null,session,store,web,session,store,is,required,this,session,store,session,store
DefaultWebSessionManager -> public void setSessionStore(WebSessionStore sessionStore);1506481978;Configure the persistence strategy._<p>By default an instance of {@link InMemoryWebSessionStore}._@param sessionStore the persistence strategy to use;public void setSessionStore(WebSessionStore sessionStore) {_		Assert.notNull(sessionStore, "WebSessionStore is required.")__		this.sessionStore = sessionStore__	};configure,the,persistence,strategy,p,by,default,an,instance,of,link,in,memory,web,session,store,param,session,store,the,persistence,strategy,to,use;public,void,set,session,store,web,session,store,session,store,assert,not,null,session,store,web,session,store,is,required,this,session,store,session,store
DefaultWebSessionManager -> public void setSessionStore(WebSessionStore sessionStore);1506485438;Configure the persistence strategy._<p>By default an instance of {@link InMemoryWebSessionStore}._@param sessionStore the persistence strategy to use;public void setSessionStore(WebSessionStore sessionStore) {_		Assert.notNull(sessionStore, "WebSessionStore is required.")__		this.sessionStore = sessionStore__	};configure,the,persistence,strategy,p,by,default,an,instance,of,link,in,memory,web,session,store,param,session,store,the,persistence,strategy,to,use;public,void,set,session,store,web,session,store,session,store,assert,not,null,session,store,web,session,store,is,required,this,session,store,session,store
DefaultWebSessionManager -> public void setSessionStore(WebSessionStore sessionStore);1516914749;Configure the persistence strategy._<p>By default an instance of {@link InMemoryWebSessionStore}._@param sessionStore the persistence strategy to use;public void setSessionStore(WebSessionStore sessionStore) {_		Assert.notNull(sessionStore, "WebSessionStore is required")__		this.sessionStore = sessionStore__	};configure,the,persistence,strategy,p,by,default,an,instance,of,link,in,memory,web,session,store,param,session,store,the,persistence,strategy,to,use;public,void,set,session,store,web,session,store,session,store,assert,not,null,session,store,web,session,store,is,required,this,session,store,session,store
DefaultWebSessionManager -> public void setSessionStore(WebSessionStore sessionStore);1530174524;Configure the persistence strategy._<p>By default an instance of {@link InMemoryWebSessionStore}._@param sessionStore the persistence strategy to use;public void setSessionStore(WebSessionStore sessionStore) {_		Assert.notNull(sessionStore, "WebSessionStore is required")__		this.sessionStore = sessionStore__	};configure,the,persistence,strategy,p,by,default,an,instance,of,link,in,memory,web,session,store,param,session,store,the,persistence,strategy,to,use;public,void,set,session,store,web,session,store,session,store,assert,not,null,session,store,web,session,store,is,required,this,session,store,session,store
DefaultWebSessionManager -> public WebSessionStore getSessionStore();1468513835;Return the configured {@link WebSessionStore}.;public WebSessionStore getSessionStore() {_		return this.sessionStore__	};return,the,configured,link,web,session,store;public,web,session,store,get,session,store,return,this,session,store
DefaultWebSessionManager -> public WebSessionStore getSessionStore();1468532417;Return the configured {@link WebSessionStore}.;public WebSessionStore getSessionStore() {_		return this.sessionStore__	};return,the,configured,link,web,session,store;public,web,session,store,get,session,store,return,this,session,store
DefaultWebSessionManager -> public WebSessionStore getSessionStore();1476396161;Return the configured {@link WebSessionStore}.;public WebSessionStore getSessionStore() {_		return this.sessionStore__	};return,the,configured,link,web,session,store;public,web,session,store,get,session,store,return,this,session,store
DefaultWebSessionManager -> public WebSessionStore getSessionStore();1491927184;Return the configured {@link WebSessionStore}.;public WebSessionStore getSessionStore() {_		return this.sessionStore__	};return,the,configured,link,web,session,store;public,web,session,store,get,session,store,return,this,session,store
DefaultWebSessionManager -> public WebSessionStore getSessionStore();1492090594;Return the configured {@link WebSessionStore}.;public WebSessionStore getSessionStore() {_		return this.sessionStore__	};return,the,configured,link,web,session,store;public,web,session,store,get,session,store,return,this,session,store
DefaultWebSessionManager -> public WebSessionStore getSessionStore();1498492881;Return the configured {@link WebSessionStore}.;public WebSessionStore getSessionStore() {_		return this.sessionStore__	};return,the,configured,link,web,session,store;public,web,session,store,get,session,store,return,this,session,store
DefaultWebSessionManager -> public WebSessionStore getSessionStore();1500065756;Return the configured {@link WebSessionStore}.;public WebSessionStore getSessionStore() {_		return this.sessionStore__	};return,the,configured,link,web,session,store;public,web,session,store,get,session,store,return,this,session,store
DefaultWebSessionManager -> public WebSessionStore getSessionStore();1500065756;Return the configured {@link WebSessionStore}.;public WebSessionStore getSessionStore() {_		return this.sessionStore__	};return,the,configured,link,web,session,store;public,web,session,store,get,session,store,return,this,session,store
DefaultWebSessionManager -> public WebSessionStore getSessionStore();1500282578;Return the configured {@link WebSessionStore}.;public WebSessionStore getSessionStore() {_		return this.sessionStore__	};return,the,configured,link,web,session,store;public,web,session,store,get,session,store,return,this,session,store
DefaultWebSessionManager -> public WebSessionStore getSessionStore();1504712897;Return the configured {@link WebSessionStore}.;public WebSessionStore getSessionStore() {_		return this.sessionStore__	};return,the,configured,link,web,session,store;public,web,session,store,get,session,store,return,this,session,store
DefaultWebSessionManager -> public WebSessionStore getSessionStore();1506481932;Return the configured {@link WebSessionStore}.;public WebSessionStore getSessionStore() {_		return this.sessionStore__	};return,the,configured,link,web,session,store;public,web,session,store,get,session,store,return,this,session,store
DefaultWebSessionManager -> public WebSessionStore getSessionStore();1506481978;Return the configured {@link WebSessionStore}.;public WebSessionStore getSessionStore() {_		return this.sessionStore__	};return,the,configured,link,web,session,store;public,web,session,store,get,session,store,return,this,session,store
DefaultWebSessionManager -> public WebSessionStore getSessionStore();1506485438;Return the configured {@link WebSessionStore}.;public WebSessionStore getSessionStore() {_		return this.sessionStore__	};return,the,configured,link,web,session,store;public,web,session,store,get,session,store,return,this,session,store
DefaultWebSessionManager -> public WebSessionStore getSessionStore();1516914749;Return the configured {@link WebSessionStore}.;public WebSessionStore getSessionStore() {_		return this.sessionStore__	};return,the,configured,link,web,session,store;public,web,session,store,get,session,store,return,this,session,store
DefaultWebSessionManager -> public WebSessionStore getSessionStore();1530174524;Return the configured {@link WebSessionStore}.;public WebSessionStore getSessionStore() {_		return this.sessionStore__	};return,the,configured,link,web,session,store;public,web,session,store,get,session,store,return,this,session,store
DefaultWebSessionManager -> public void setClock(Clock clock);1468513835;Configure the {@link Clock} for access to current time. During tests you_may use {code Clock.offset(clock, Duration.ofMinutes(-31))} to set the_clock back for example to test changes after sessions expire._<p>By default {@link Clock#systemDefaultZone()} is used._@param clock the clock to use;public void setClock(Clock clock) {_		Assert.notNull(clock, "'clock' is required.")__		this.clock = clock__	};configure,the,link,clock,for,access,to,current,time,during,tests,you,may,use,code,clock,offset,clock,duration,of,minutes,31,to,set,the,clock,back,for,example,to,test,changes,after,sessions,expire,p,by,default,link,clock,system,default,zone,is,used,param,clock,the,clock,to,use;public,void,set,clock,clock,clock,assert,not,null,clock,clock,is,required,this,clock,clock
DefaultWebSessionManager -> public void setClock(Clock clock);1468532417;Configure the {@link Clock} for access to current time. During tests you_may use {code Clock.offset(clock, Duration.ofMinutes(-31))} to set the_clock back for example to test changes after sessions expire._<p>By default {@link Clock#systemDefaultZone()} is used._@param clock the clock to use;public void setClock(Clock clock) {_		Assert.notNull(clock, "'clock' is required.")__		this.clock = clock__	};configure,the,link,clock,for,access,to,current,time,during,tests,you,may,use,code,clock,offset,clock,duration,of,minutes,31,to,set,the,clock,back,for,example,to,test,changes,after,sessions,expire,p,by,default,link,clock,system,default,zone,is,used,param,clock,the,clock,to,use;public,void,set,clock,clock,clock,assert,not,null,clock,clock,is,required,this,clock,clock
DefaultWebSessionManager -> public void setClock(Clock clock);1476396161;Configure the {@link Clock} for access to current time. During tests you_may use {code Clock.offset(clock, Duration.ofMinutes(-31))} to set the_clock back for example to test changes after sessions expire._<p>By default {@link Clock#systemDefaultZone()} is used._@param clock the clock to use;public void setClock(Clock clock) {_		Assert.notNull(clock, "'clock' is required.")__		this.clock = clock__	};configure,the,link,clock,for,access,to,current,time,during,tests,you,may,use,code,clock,offset,clock,duration,of,minutes,31,to,set,the,clock,back,for,example,to,test,changes,after,sessions,expire,p,by,default,link,clock,system,default,zone,is,used,param,clock,the,clock,to,use;public,void,set,clock,clock,clock,assert,not,null,clock,clock,is,required,this,clock,clock
DefaultWebSessionManager -> public void setClock(Clock clock);1491927184;Configure the {@link Clock} for access to current time. During tests you_may use {code Clock.offset(clock, Duration.ofMinutes(-31))} to set the_clock back for example to test changes after sessions expire._<p>By default {@link Clock#systemDefaultZone()} is used._@param clock the clock to use;public void setClock(Clock clock) {_		Assert.notNull(clock, "'clock' is required.")__		this.clock = clock__	};configure,the,link,clock,for,access,to,current,time,during,tests,you,may,use,code,clock,offset,clock,duration,of,minutes,31,to,set,the,clock,back,for,example,to,test,changes,after,sessions,expire,p,by,default,link,clock,system,default,zone,is,used,param,clock,the,clock,to,use;public,void,set,clock,clock,clock,assert,not,null,clock,clock,is,required,this,clock,clock
DefaultWebSessionManager -> public void setClock(Clock clock);1492090594;Configure the {@link Clock} for access to current time. During tests you_may use {code Clock.offset(clock, Duration.ofMinutes(-31))} to set the_clock back for example to test changes after sessions expire._<p>By default {@link Clock#systemDefaultZone()} is used._@param clock the clock to use;public void setClock(Clock clock) {_		Assert.notNull(clock, "'clock' is required.")__		this.clock = clock__	};configure,the,link,clock,for,access,to,current,time,during,tests,you,may,use,code,clock,offset,clock,duration,of,minutes,31,to,set,the,clock,back,for,example,to,test,changes,after,sessions,expire,p,by,default,link,clock,system,default,zone,is,used,param,clock,the,clock,to,use;public,void,set,clock,clock,clock,assert,not,null,clock,clock,is,required,this,clock,clock
DefaultWebSessionManager -> public void setClock(Clock clock);1498492881;Configure the {@link Clock} for access to current time. During tests you_may use {code Clock.offset(clock, Duration.ofMinutes(-31))} to set the_clock back for example to test changes after sessions expire._<p>By default {@code Clock.system(ZoneId.of("GMT"))} is used._@param clock the clock to use;public void setClock(Clock clock) {_		Assert.notNull(clock, "'clock' is required.")__		this.clock = clock__	};configure,the,link,clock,for,access,to,current,time,during,tests,you,may,use,code,clock,offset,clock,duration,of,minutes,31,to,set,the,clock,back,for,example,to,test,changes,after,sessions,expire,p,by,default,code,clock,system,zone,id,of,gmt,is,used,param,clock,the,clock,to,use;public,void,set,clock,clock,clock,assert,not,null,clock,clock,is,required,this,clock,clock
DefaultWebSessionManager -> public void setClock(Clock clock);1500065756;Configure the {@link Clock} to use to set lastAccessTime on every created_session and to calculate if it is expired._<p>This may be useful to align to different timezone or to set the clock_back in a test, e.g. {@code Clock.offset(clock, Duration.ofMinutes(-31))}_in order to simulate session expiration._<p>By default this is {@code Clock.system(ZoneId.of("GMT"))}._@param clock the clock to use;public void setClock(Clock clock) {_		Assert.notNull(clock, "'clock' is required.")__		this.clock = clock__	};configure,the,link,clock,to,use,to,set,last,access,time,on,every,created,session,and,to,calculate,if,it,is,expired,p,this,may,be,useful,to,align,to,different,timezone,or,to,set,the,clock,back,in,a,test,e,g,code,clock,offset,clock,duration,of,minutes,31,in,order,to,simulate,session,expiration,p,by,default,this,is,code,clock,system,zone,id,of,gmt,param,clock,the,clock,to,use;public,void,set,clock,clock,clock,assert,not,null,clock,clock,is,required,this,clock,clock
DefaultWebSessionManager -> public void setClock(Clock clock);1500065756;Configure the {@link Clock} to use to set lastAccessTime on every created_session and to calculate if it is expired._<p>This may be useful to align to different timezone or to set the clock_back in a test, e.g. {@code Clock.offset(clock, Duration.ofMinutes(-31))}_in order to simulate session expiration._<p>By default this is {@code Clock.system(ZoneId.of("GMT"))}._@param clock the clock to use;public void setClock(Clock clock) {_		Assert.notNull(clock, "'clock' is required.")__		this.clock = clock__	};configure,the,link,clock,to,use,to,set,last,access,time,on,every,created,session,and,to,calculate,if,it,is,expired,p,this,may,be,useful,to,align,to,different,timezone,or,to,set,the,clock,back,in,a,test,e,g,code,clock,offset,clock,duration,of,minutes,31,in,order,to,simulate,session,expiration,p,by,default,this,is,code,clock,system,zone,id,of,gmt,param,clock,the,clock,to,use;public,void,set,clock,clock,clock,assert,not,null,clock,clock,is,required,this,clock,clock
DefaultWebSessionManager -> public void setClock(Clock clock);1500282578;Configure the {@link Clock} to use to set lastAccessTime on every created_session and to calculate if it is expired._<p>This may be useful to align to different timezone or to set the clock_back in a test, e.g. {@code Clock.offset(clock, Duration.ofMinutes(-31))}_in order to simulate session expiration._<p>By default this is {@code Clock.system(ZoneId.of("GMT"))}._@param clock the clock to use;public void setClock(Clock clock) {_		Assert.notNull(clock, "'clock' is required.")__		this.clock = clock__	};configure,the,link,clock,to,use,to,set,last,access,time,on,every,created,session,and,to,calculate,if,it,is,expired,p,this,may,be,useful,to,align,to,different,timezone,or,to,set,the,clock,back,in,a,test,e,g,code,clock,offset,clock,duration,of,minutes,31,in,order,to,simulate,session,expiration,p,by,default,this,is,code,clock,system,zone,id,of,gmt,param,clock,the,clock,to,use;public,void,set,clock,clock,clock,assert,not,null,clock,clock,is,required,this,clock,clock
DefaultWebSessionManager -> public void setSessionIdResolver(WebSessionIdResolver sessionIdResolver);1468513835;Configure the session id resolution strategy to use._<p>By default {@link CookieWebSessionIdResolver} is used._@param sessionIdResolver the resolver;public void setSessionIdResolver(WebSessionIdResolver sessionIdResolver) {_		Assert.notNull(sessionIdResolver, "'sessionIdResolver' is required.")__		this.sessionIdResolver = sessionIdResolver__	};configure,the,session,id,resolution,strategy,to,use,p,by,default,link,cookie,web,session,id,resolver,is,used,param,session,id,resolver,the,resolver;public,void,set,session,id,resolver,web,session,id,resolver,session,id,resolver,assert,not,null,session,id,resolver,session,id,resolver,is,required,this,session,id,resolver,session,id,resolver
DefaultWebSessionManager -> public void setSessionIdResolver(WebSessionIdResolver sessionIdResolver);1468532417;Configure the session id resolution strategy to use._<p>By default {@link CookieWebSessionIdResolver} is used._@param sessionIdResolver the resolver;public void setSessionIdResolver(WebSessionIdResolver sessionIdResolver) {_		Assert.notNull(sessionIdResolver, "'sessionIdResolver' is required.")__		this.sessionIdResolver = sessionIdResolver__	};configure,the,session,id,resolution,strategy,to,use,p,by,default,link,cookie,web,session,id,resolver,is,used,param,session,id,resolver,the,resolver;public,void,set,session,id,resolver,web,session,id,resolver,session,id,resolver,assert,not,null,session,id,resolver,session,id,resolver,is,required,this,session,id,resolver,session,id,resolver
DefaultWebSessionManager -> public void setSessionIdResolver(WebSessionIdResolver sessionIdResolver);1476396161;Configure the session id resolution strategy to use._<p>By default {@link CookieWebSessionIdResolver} is used._@param sessionIdResolver the resolver;public void setSessionIdResolver(WebSessionIdResolver sessionIdResolver) {_		Assert.notNull(sessionIdResolver, "'sessionIdResolver' is required.")__		this.sessionIdResolver = sessionIdResolver__	};configure,the,session,id,resolution,strategy,to,use,p,by,default,link,cookie,web,session,id,resolver,is,used,param,session,id,resolver,the,resolver;public,void,set,session,id,resolver,web,session,id,resolver,session,id,resolver,assert,not,null,session,id,resolver,session,id,resolver,is,required,this,session,id,resolver,session,id,resolver
DefaultWebSessionManager -> public void setSessionIdResolver(WebSessionIdResolver sessionIdResolver);1491927184;Configure the session id resolution strategy to use._<p>By default {@link CookieWebSessionIdResolver} is used._@param sessionIdResolver the resolver;public void setSessionIdResolver(WebSessionIdResolver sessionIdResolver) {_		Assert.notNull(sessionIdResolver, "'sessionIdResolver' is required.")__		this.sessionIdResolver = sessionIdResolver__	};configure,the,session,id,resolution,strategy,to,use,p,by,default,link,cookie,web,session,id,resolver,is,used,param,session,id,resolver,the,resolver;public,void,set,session,id,resolver,web,session,id,resolver,session,id,resolver,assert,not,null,session,id,resolver,session,id,resolver,is,required,this,session,id,resolver,session,id,resolver
DefaultWebSessionManager -> public void setSessionIdResolver(WebSessionIdResolver sessionIdResolver);1492090594;Configure the session id resolution strategy to use._<p>By default {@link CookieWebSessionIdResolver} is used._@param sessionIdResolver the resolver;public void setSessionIdResolver(WebSessionIdResolver sessionIdResolver) {_		Assert.notNull(sessionIdResolver, "'sessionIdResolver' is required.")__		this.sessionIdResolver = sessionIdResolver__	};configure,the,session,id,resolution,strategy,to,use,p,by,default,link,cookie,web,session,id,resolver,is,used,param,session,id,resolver,the,resolver;public,void,set,session,id,resolver,web,session,id,resolver,session,id,resolver,assert,not,null,session,id,resolver,session,id,resolver,is,required,this,session,id,resolver,session,id,resolver
DefaultWebSessionManager -> public void setSessionIdResolver(WebSessionIdResolver sessionIdResolver);1498492881;Configure the session id resolution strategy to use._<p>By default {@link CookieWebSessionIdResolver} is used._@param sessionIdResolver the resolver;public void setSessionIdResolver(WebSessionIdResolver sessionIdResolver) {_		Assert.notNull(sessionIdResolver, "'sessionIdResolver' is required.")__		this.sessionIdResolver = sessionIdResolver__	};configure,the,session,id,resolution,strategy,to,use,p,by,default,link,cookie,web,session,id,resolver,is,used,param,session,id,resolver,the,resolver;public,void,set,session,id,resolver,web,session,id,resolver,session,id,resolver,assert,not,null,session,id,resolver,session,id,resolver,is,required,this,session,id,resolver,session,id,resolver
DefaultWebSessionManager -> public void setSessionIdResolver(WebSessionIdResolver sessionIdResolver);1500065756;Configure the id resolution strategy._<p>By default an instance of {@link CookieWebSessionIdResolver}._@param sessionIdResolver the resolver to use;public void setSessionIdResolver(WebSessionIdResolver sessionIdResolver) {_		Assert.notNull(sessionIdResolver, "WebSessionIdResolver is required.")__		this.sessionIdResolver = sessionIdResolver__	};configure,the,id,resolution,strategy,p,by,default,an,instance,of,link,cookie,web,session,id,resolver,param,session,id,resolver,the,resolver,to,use;public,void,set,session,id,resolver,web,session,id,resolver,session,id,resolver,assert,not,null,session,id,resolver,web,session,id,resolver,is,required,this,session,id,resolver,session,id,resolver
DefaultWebSessionManager -> public void setSessionIdResolver(WebSessionIdResolver sessionIdResolver);1500065756;Configure the id resolution strategy._<p>By default an instance of {@link CookieWebSessionIdResolver}._@param sessionIdResolver the resolver to use;public void setSessionIdResolver(WebSessionIdResolver sessionIdResolver) {_		Assert.notNull(sessionIdResolver, "WebSessionIdResolver is required.")__		this.sessionIdResolver = sessionIdResolver__	};configure,the,id,resolution,strategy,p,by,default,an,instance,of,link,cookie,web,session,id,resolver,param,session,id,resolver,the,resolver,to,use;public,void,set,session,id,resolver,web,session,id,resolver,session,id,resolver,assert,not,null,session,id,resolver,web,session,id,resolver,is,required,this,session,id,resolver,session,id,resolver
DefaultWebSessionManager -> public void setSessionIdResolver(WebSessionIdResolver sessionIdResolver);1500282578;Configure the id resolution strategy._<p>By default an instance of {@link CookieWebSessionIdResolver}._@param sessionIdResolver the resolver to use;public void setSessionIdResolver(WebSessionIdResolver sessionIdResolver) {_		Assert.notNull(sessionIdResolver, "WebSessionIdResolver is required.")__		this.sessionIdResolver = sessionIdResolver__	};configure,the,id,resolution,strategy,p,by,default,an,instance,of,link,cookie,web,session,id,resolver,param,session,id,resolver,the,resolver,to,use;public,void,set,session,id,resolver,web,session,id,resolver,session,id,resolver,assert,not,null,session,id,resolver,web,session,id,resolver,is,required,this,session,id,resolver,session,id,resolver
DefaultWebSessionManager -> public void setSessionIdResolver(WebSessionIdResolver sessionIdResolver);1504712897;Configure the id resolution strategy._<p>By default an instance of {@link CookieWebSessionIdResolver}._@param sessionIdResolver the resolver to use;public void setSessionIdResolver(WebSessionIdResolver sessionIdResolver) {_		Assert.notNull(sessionIdResolver, "WebSessionIdResolver is required.")__		this.sessionIdResolver = sessionIdResolver__	};configure,the,id,resolution,strategy,p,by,default,an,instance,of,link,cookie,web,session,id,resolver,param,session,id,resolver,the,resolver,to,use;public,void,set,session,id,resolver,web,session,id,resolver,session,id,resolver,assert,not,null,session,id,resolver,web,session,id,resolver,is,required,this,session,id,resolver,session,id,resolver
DefaultWebSessionManager -> public void setSessionIdResolver(WebSessionIdResolver sessionIdResolver);1506481932;Configure the id resolution strategy._<p>By default an instance of {@link CookieWebSessionIdResolver}._@param sessionIdResolver the resolver to use;public void setSessionIdResolver(WebSessionIdResolver sessionIdResolver) {_		Assert.notNull(sessionIdResolver, "WebSessionIdResolver is required.")__		this.sessionIdResolver = sessionIdResolver__	};configure,the,id,resolution,strategy,p,by,default,an,instance,of,link,cookie,web,session,id,resolver,param,session,id,resolver,the,resolver,to,use;public,void,set,session,id,resolver,web,session,id,resolver,session,id,resolver,assert,not,null,session,id,resolver,web,session,id,resolver,is,required,this,session,id,resolver,session,id,resolver
DefaultWebSessionManager -> public void setSessionIdResolver(WebSessionIdResolver sessionIdResolver);1506481978;Configure the id resolution strategy._<p>By default an instance of {@link CookieWebSessionIdResolver}._@param sessionIdResolver the resolver to use;public void setSessionIdResolver(WebSessionIdResolver sessionIdResolver) {_		Assert.notNull(sessionIdResolver, "WebSessionIdResolver is required.")__		this.sessionIdResolver = sessionIdResolver__	};configure,the,id,resolution,strategy,p,by,default,an,instance,of,link,cookie,web,session,id,resolver,param,session,id,resolver,the,resolver,to,use;public,void,set,session,id,resolver,web,session,id,resolver,session,id,resolver,assert,not,null,session,id,resolver,web,session,id,resolver,is,required,this,session,id,resolver,session,id,resolver
DefaultWebSessionManager -> public void setSessionIdResolver(WebSessionIdResolver sessionIdResolver);1506485438;Configure the id resolution strategy._<p>By default an instance of {@link CookieWebSessionIdResolver}._@param sessionIdResolver the resolver to use;public void setSessionIdResolver(WebSessionIdResolver sessionIdResolver) {_		Assert.notNull(sessionIdResolver, "WebSessionIdResolver is required.")__		this.sessionIdResolver = sessionIdResolver__	};configure,the,id,resolution,strategy,p,by,default,an,instance,of,link,cookie,web,session,id,resolver,param,session,id,resolver,the,resolver,to,use;public,void,set,session,id,resolver,web,session,id,resolver,session,id,resolver,assert,not,null,session,id,resolver,web,session,id,resolver,is,required,this,session,id,resolver,session,id,resolver
DefaultWebSessionManager -> public void setSessionIdResolver(WebSessionIdResolver sessionIdResolver);1516914749;Configure the id resolution strategy._<p>By default an instance of {@link CookieWebSessionIdResolver}._@param sessionIdResolver the resolver to use;public void setSessionIdResolver(WebSessionIdResolver sessionIdResolver) {_		Assert.notNull(sessionIdResolver, "WebSessionIdResolver is required")__		this.sessionIdResolver = sessionIdResolver__	};configure,the,id,resolution,strategy,p,by,default,an,instance,of,link,cookie,web,session,id,resolver,param,session,id,resolver,the,resolver,to,use;public,void,set,session,id,resolver,web,session,id,resolver,session,id,resolver,assert,not,null,session,id,resolver,web,session,id,resolver,is,required,this,session,id,resolver,session,id,resolver
DefaultWebSessionManager -> public void setSessionIdResolver(WebSessionIdResolver sessionIdResolver);1530174524;Configure the id resolution strategy._<p>By default an instance of {@link CookieWebSessionIdResolver}._@param sessionIdResolver the resolver to use;public void setSessionIdResolver(WebSessionIdResolver sessionIdResolver) {_		Assert.notNull(sessionIdResolver, "WebSessionIdResolver is required")__		this.sessionIdResolver = sessionIdResolver__	};configure,the,id,resolution,strategy,p,by,default,an,instance,of,link,cookie,web,session,id,resolver,param,session,id,resolver,the,resolver,to,use;public,void,set,session,id,resolver,web,session,id,resolver,session,id,resolver,assert,not,null,session,id,resolver,web,session,id,resolver,is,required,this,session,id,resolver,session,id,resolver
