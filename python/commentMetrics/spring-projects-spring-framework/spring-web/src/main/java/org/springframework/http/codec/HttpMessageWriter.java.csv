# id;timestamp;commentText;codeText;commentWords;codeWords
HttpMessageWriter -> Mono<Void> write(Publisher<? extends T> inputStream, ResolvableType elementType, 			@Nullable MediaType mediaType, ReactiveHttpOutputMessage message, Map<String, Object> hints)_;1495868221;Write an given stream of object to the output message._@param inputStream the objects to write_@param elementType the type of objects in the stream which must have been_previously checked via {@link #canWrite(ResolvableType, MediaType)}_@param mediaType the content type for the write, possibly {@code null} to_indicate that the default content type of the writer must be used._@param message the message to write to_@param hints additional information about how to encode and write_@return indicates completion or error;Mono<Void> write(Publisher<? extends T> inputStream, ResolvableType elementType,_			@Nullable MediaType mediaType, ReactiveHttpOutputMessage message, Map<String, Object> hints)_;write,an,given,stream,of,object,to,the,output,message,param,input,stream,the,objects,to,write,param,element,type,the,type,of,objects,in,the,stream,which,must,have,been,previously,checked,via,link,can,write,resolvable,type,media,type,param,media,type,the,content,type,for,the,write,possibly,code,null,to,indicate,that,the,default,content,type,of,the,writer,must,be,used,param,message,the,message,to,write,to,param,hints,additional,information,about,how,to,encode,and,write,return,indicates,completion,or,error;mono,void,write,publisher,extends,t,input,stream,resolvable,type,element,type,nullable,media,type,media,type,reactive,http,output,message,message,map,string,object,hints
HttpMessageWriter -> Mono<Void> write(Publisher<? extends T> inputStream, ResolvableType elementType, 			@Nullable MediaType mediaType, ReactiveHttpOutputMessage message, Map<String, Object> hints)_;1496259743;Write an given stream of object to the output message._@param inputStream the objects to write_@param elementType the type of objects in the stream which must have been_previously checked via {@link #canWrite(ResolvableType, MediaType)}_@param mediaType the content type for the write, possibly {@code null} to_indicate that the default content type of the writer must be used._@param message the message to write to_@param hints additional information about how to encode and write_@return indicates completion or error;Mono<Void> write(Publisher<? extends T> inputStream, ResolvableType elementType,_			@Nullable MediaType mediaType, ReactiveHttpOutputMessage message, Map<String, Object> hints)_;write,an,given,stream,of,object,to,the,output,message,param,input,stream,the,objects,to,write,param,element,type,the,type,of,objects,in,the,stream,which,must,have,been,previously,checked,via,link,can,write,resolvable,type,media,type,param,media,type,the,content,type,for,the,write,possibly,code,null,to,indicate,that,the,default,content,type,of,the,writer,must,be,used,param,message,the,message,to,write,to,param,hints,additional,information,about,how,to,encode,and,write,return,indicates,completion,or,error;mono,void,write,publisher,extends,t,input,stream,resolvable,type,element,type,nullable,media,type,media,type,reactive,http,output,message,message,map,string,object,hints
HttpMessageWriter -> Mono<Void> write(Publisher<? extends T> inputStream, ResolvableType elementType, 			@Nullable MediaType mediaType, ReactiveHttpOutputMessage message, Map<String, Object> hints)_;1496837955;Write an given stream of object to the output message._@param inputStream the objects to write_@param elementType the type of objects in the stream which must have been_previously checked via {@link #canWrite(ResolvableType, MediaType)}_@param mediaType the content type for the write, possibly {@code null} to_indicate that the default content type of the writer must be used._@param message the message to write to_@param hints additional information about how to encode and write_@return indicates completion or error;Mono<Void> write(Publisher<? extends T> inputStream, ResolvableType elementType,_			@Nullable MediaType mediaType, ReactiveHttpOutputMessage message, Map<String, Object> hints)_;write,an,given,stream,of,object,to,the,output,message,param,input,stream,the,objects,to,write,param,element,type,the,type,of,objects,in,the,stream,which,must,have,been,previously,checked,via,link,can,write,resolvable,type,media,type,param,media,type,the,content,type,for,the,write,possibly,code,null,to,indicate,that,the,default,content,type,of,the,writer,must,be,used,param,message,the,message,to,write,to,param,hints,additional,information,about,how,to,encode,and,write,return,indicates,completion,or,error;mono,void,write,publisher,extends,t,input,stream,resolvable,type,element,type,nullable,media,type,media,type,reactive,http,output,message,message,map,string,object,hints
HttpMessageWriter -> Mono<Void> write(Publisher<? extends T> inputStream, ResolvableType elementType, 			@Nullable MediaType mediaType, ReactiveHttpOutputMessage message, Map<String, Object> hints)_;1530174524;Write an given stream of object to the output message._@param inputStream the objects to write_@param elementType the type of objects in the stream which must have been_previously checked via {@link #canWrite(ResolvableType, MediaType)}_@param mediaType the content type for the write, possibly {@code null} to_indicate that the default content type of the writer must be used._@param message the message to write to_@param hints additional information about how to encode and write_@return indicates completion or error;Mono<Void> write(Publisher<? extends T> inputStream, ResolvableType elementType,_			@Nullable MediaType mediaType, ReactiveHttpOutputMessage message, Map<String, Object> hints)_;write,an,given,stream,of,object,to,the,output,message,param,input,stream,the,objects,to,write,param,element,type,the,type,of,objects,in,the,stream,which,must,have,been,previously,checked,via,link,can,write,resolvable,type,media,type,param,media,type,the,content,type,for,the,write,possibly,code,null,to,indicate,that,the,default,content,type,of,the,writer,must,be,used,param,message,the,message,to,write,to,param,hints,additional,information,about,how,to,encode,and,write,return,indicates,completion,or,error;mono,void,write,publisher,extends,t,input,stream,resolvable,type,element,type,nullable,media,type,media,type,reactive,http,output,message,message,map,string,object,hints
HttpMessageWriter -> List<MediaType> getWritableMediaTypes()_;1469211286;Return the list of {@link MediaType} objects that can be written by this converter._@return the list of supported readable media types;List<MediaType> getWritableMediaTypes()_;return,the,list,of,link,media,type,objects,that,can,be,written,by,this,converter,return,the,list,of,supported,readable,media,types;list,media,type,get,writable,media,types
HttpMessageWriter -> List<MediaType> getWritableMediaTypes()_;1473671607;Return the list of {@link MediaType} objects that can be written by this converter._@return the list of supported readable media types;List<MediaType> getWritableMediaTypes()_;return,the,list,of,link,media,type,objects,that,can,be,written,by,this,converter,return,the,list,of,supported,readable,media,types;list,media,type,get,writable,media,types
HttpMessageWriter -> List<MediaType> getWritableMediaTypes()_;1473771793;Return the list of {@link MediaType} objects that can be written by this converter._@return the list of supported readable media types;List<MediaType> getWritableMediaTypes()_;return,the,list,of,link,media,type,objects,that,can,be,written,by,this,converter,return,the,list,of,supported,readable,media,types;list,media,type,get,writable,media,types
HttpMessageWriter -> List<MediaType> getWritableMediaTypes()_;1474295570;Return the list of {@link MediaType} objects that can be written by this converter._@return the list of supported readable media types;List<MediaType> getWritableMediaTypes()_;return,the,list,of,link,media,type,objects,that,can,be,written,by,this,converter,return,the,list,of,supported,readable,media,types;list,media,type,get,writable,media,types
HttpMessageWriter -> List<MediaType> getWritableMediaTypes()_;1474365351;Return the list of {@link MediaType} objects that can be written by this converter._@return the list of supported readable media types;List<MediaType> getWritableMediaTypes()_;return,the,list,of,link,media,type,objects,that,can,be,written,by,this,converter,return,the,list,of,supported,readable,media,types;list,media,type,get,writable,media,types
HttpMessageWriter -> List<MediaType> getWritableMediaTypes()_;1490109321;Return the {@link MediaType}'s that this writer supports.;List<MediaType> getWritableMediaTypes()_;return,the,link,media,type,s,that,this,writer,supports;list,media,type,get,writable,media,types
HttpMessageWriter -> List<MediaType> getWritableMediaTypes()_;1490392946;Return the {@link MediaType}'s that this writer supports.;List<MediaType> getWritableMediaTypes()_;return,the,link,media,type,s,that,this,writer,supports;list,media,type,get,writable,media,types
HttpMessageWriter -> List<MediaType> getWritableMediaTypes()_;1494019148;Return the {@link MediaType}'s that this writer supports.;List<MediaType> getWritableMediaTypes()_;return,the,link,media,type,s,that,this,writer,supports;list,media,type,get,writable,media,types
HttpMessageWriter -> List<MediaType> getWritableMediaTypes()_;1495868221;Return the {@link MediaType}'s that this writer supports.;List<MediaType> getWritableMediaTypes()_;return,the,link,media,type,s,that,this,writer,supports;list,media,type,get,writable,media,types
HttpMessageWriter -> List<MediaType> getWritableMediaTypes()_;1496259743;Return the {@link MediaType}'s that this writer supports.;List<MediaType> getWritableMediaTypes()_;return,the,link,media,type,s,that,this,writer,supports;list,media,type,get,writable,media,types
HttpMessageWriter -> List<MediaType> getWritableMediaTypes()_;1496837955;Return the {@link MediaType}'s that this writer supports.;List<MediaType> getWritableMediaTypes()_;return,the,link,media,type,s,that,this,writer,supports;list,media,type,get,writable,media,types
HttpMessageWriter -> List<MediaType> getWritableMediaTypes()_;1530174524;Return the {@link MediaType}'s that this writer supports.;List<MediaType> getWritableMediaTypes()_;return,the,link,media,type,s,that,this,writer,supports;list,media,type,get,writable,media,types
HttpMessageWriter -> default Mono<Void> write(Publisher<? extends T> inputStream, ResolvableType actualType, 			ResolvableType elementType, MediaType mediaType, ServerHttpRequest request, 			ServerHttpResponse response, Map<String, Object> hints);1490392946;Server-side only alternative to_{@link #write(Publisher, ResolvableType, MediaType, ReactiveHttpOutputMessage, Map)}_with additional context available.__@param actualType the actual return type of the method that returned the_value_ for annotated controllers, the {@link MethodParameter} can be_accessed via {@link ResolvableType#getSource()}._@param elementType the type of Objects in the input stream_@param mediaType the content type to use, possibly {@code null} indicating_the default content type of the writer should be used._@param request the current request_@param response the current response_@return a {@link Mono} that indicates completion of writing or error;default Mono<Void> write(Publisher<? extends T> inputStream, ResolvableType actualType,_			ResolvableType elementType, MediaType mediaType, ServerHttpRequest request,_			ServerHttpResponse response, Map<String, Object> hints) {__		return write(inputStream, elementType, mediaType, response, hints)__	};server,side,only,alternative,to,link,write,publisher,resolvable,type,media,type,reactive,http,output,message,map,with,additional,context,available,param,actual,type,the,actual,return,type,of,the,method,that,returned,the,value,for,annotated,controllers,the,link,method,parameter,can,be,accessed,via,link,resolvable,type,get,source,param,element,type,the,type,of,objects,in,the,input,stream,param,media,type,the,content,type,to,use,possibly,code,null,indicating,the,default,content,type,of,the,writer,should,be,used,param,request,the,current,request,param,response,the,current,response,return,a,link,mono,that,indicates,completion,of,writing,or,error;default,mono,void,write,publisher,extends,t,input,stream,resolvable,type,actual,type,resolvable,type,element,type,media,type,media,type,server,http,request,request,server,http,response,response,map,string,object,hints,return,write,input,stream,element,type,media,type,response,hints
HttpMessageWriter -> default Mono<Void> write(Publisher<? extends T> inputStream, ResolvableType actualType, 			ResolvableType elementType, MediaType mediaType, ServerHttpRequest request, 			ServerHttpResponse response, Map<String, Object> hints);1494019148;Server-side only alternative to_{@link #write(Publisher, ResolvableType, MediaType, ReactiveHttpOutputMessage, Map)}_with additional context available.__@param actualType the actual return type of the method that returned the_value_ for annotated controllers, the {@link MethodParameter} can be_accessed via {@link ResolvableType#getSource()}._@param elementType the type of Objects in the input stream_@param mediaType the content type to use, possibly {@code null} indicating_the default content type of the writer should be used._@param request the current request_@param response the current response_@return a {@link Mono} that indicates completion of writing or error;default Mono<Void> write(Publisher<? extends T> inputStream, ResolvableType actualType,_			ResolvableType elementType, MediaType mediaType, ServerHttpRequest request,_			ServerHttpResponse response, Map<String, Object> hints) {__		return write(inputStream, elementType, mediaType, response, hints)__	};server,side,only,alternative,to,link,write,publisher,resolvable,type,media,type,reactive,http,output,message,map,with,additional,context,available,param,actual,type,the,actual,return,type,of,the,method,that,returned,the,value,for,annotated,controllers,the,link,method,parameter,can,be,accessed,via,link,resolvable,type,get,source,param,element,type,the,type,of,objects,in,the,input,stream,param,media,type,the,content,type,to,use,possibly,code,null,indicating,the,default,content,type,of,the,writer,should,be,used,param,request,the,current,request,param,response,the,current,response,return,a,link,mono,that,indicates,completion,of,writing,or,error;default,mono,void,write,publisher,extends,t,input,stream,resolvable,type,actual,type,resolvable,type,element,type,media,type,media,type,server,http,request,request,server,http,response,response,map,string,object,hints,return,write,input,stream,element,type,media,type,response,hints
HttpMessageWriter -> boolean canWrite(ResolvableType elementType, @Nullable MediaType mediaType)_;1496259743;Whether the given object type is supported by this writer._@param elementType the type of object to check_@param mediaType the media type for the write, possibly {@code null}_@return {@code true} if writable, {@code false} otherwise;boolean canWrite(ResolvableType elementType, @Nullable MediaType mediaType)_;whether,the,given,object,type,is,supported,by,this,writer,param,element,type,the,type,of,object,to,check,param,media,type,the,media,type,for,the,write,possibly,code,null,return,code,true,if,writable,code,false,otherwise;boolean,can,write,resolvable,type,element,type,nullable,media,type,media,type
HttpMessageWriter -> boolean canWrite(ResolvableType elementType, @Nullable MediaType mediaType)_;1496837955;Whether the given object type is supported by this writer._@param elementType the type of object to check_@param mediaType the media type for the write, possibly {@code null}_@return {@code true} if writable, {@code false} otherwise;boolean canWrite(ResolvableType elementType, @Nullable MediaType mediaType)_;whether,the,given,object,type,is,supported,by,this,writer,param,element,type,the,type,of,object,to,check,param,media,type,the,media,type,for,the,write,possibly,code,null,return,code,true,if,writable,code,false,otherwise;boolean,can,write,resolvable,type,element,type,nullable,media,type,media,type
HttpMessageWriter -> boolean canWrite(ResolvableType elementType, @Nullable MediaType mediaType)_;1530174524;Whether the given object type is supported by this writer._@param elementType the type of object to check_@param mediaType the media type for the write, possibly {@code null}_@return {@code true} if writable, {@code false} otherwise;boolean canWrite(ResolvableType elementType, @Nullable MediaType mediaType)_;whether,the,given,object,type,is,supported,by,this,writer,param,element,type,the,type,of,object,to,check,param,media,type,the,media,type,for,the,write,possibly,code,null,return,code,true,if,writable,code,false,otherwise;boolean,can,write,resolvable,type,element,type,nullable,media,type,media,type
HttpMessageWriter -> Mono<Void> write(Publisher<? extends T> inputStream, ResolvableType elementType, 			MediaType mediaType, ReactiveHttpOutputMessage outputMessage, Map<String, Object> hints)_;1473771793;Write an given object to the given output message._@param inputStream the input stream to write_@param elementType the stream element type to process. This type must have previously_been passed to the {@link #canWrite} canWrite} method of this interface, which must_have returned {@code true}._@param mediaType the content type to use when writing, typically the value of an_{@code Accept} header. May be {@code null} to indicate that the default content_type of the converter must be used._@param outputMessage the message to write to_@param hints additional information about how to write_@return the converted {@link Mono} of object;Mono<Void> write(Publisher<? extends T> inputStream, ResolvableType elementType,_			MediaType mediaType, ReactiveHttpOutputMessage outputMessage, Map<String, Object> hints)_;write,an,given,object,to,the,given,output,message,param,input,stream,the,input,stream,to,write,param,element,type,the,stream,element,type,to,process,this,type,must,have,previously,been,passed,to,the,link,can,write,can,write,method,of,this,interface,which,must,have,returned,code,true,param,media,type,the,content,type,to,use,when,writing,typically,the,value,of,an,code,accept,header,may,be,code,null,to,indicate,that,the,default,content,type,of,the,converter,must,be,used,param,output,message,the,message,to,write,to,param,hints,additional,information,about,how,to,write,return,the,converted,link,mono,of,object;mono,void,write,publisher,extends,t,input,stream,resolvable,type,element,type,media,type,media,type,reactive,http,output,message,output,message,map,string,object,hints
HttpMessageWriter -> Mono<Void> write(Publisher<? extends T> inputStream, ResolvableType elementType, 			MediaType mediaType, ReactiveHttpOutputMessage outputMessage, Map<String, Object> hints)_;1474295570;Write an given object to the given output message._@param inputStream the input stream to write_@param elementType the stream element type to process. This type must have previously_been passed to the {@link #canWrite} canWrite} method of this interface, which must_have returned {@code true}._@param mediaType the content type to use when writing, typically the value of an_{@code Accept} header. May be {@code null} to indicate that the default content_type of the converter must be used._@param outputMessage the message to write to_@param hints additional information about how to write_@return a {@link Mono} that indicates completion or error;Mono<Void> write(Publisher<? extends T> inputStream, ResolvableType elementType,_			MediaType mediaType, ReactiveHttpOutputMessage outputMessage, Map<String, Object> hints)_;write,an,given,object,to,the,given,output,message,param,input,stream,the,input,stream,to,write,param,element,type,the,stream,element,type,to,process,this,type,must,have,previously,been,passed,to,the,link,can,write,can,write,method,of,this,interface,which,must,have,returned,code,true,param,media,type,the,content,type,to,use,when,writing,typically,the,value,of,an,code,accept,header,may,be,code,null,to,indicate,that,the,default,content,type,of,the,converter,must,be,used,param,output,message,the,message,to,write,to,param,hints,additional,information,about,how,to,write,return,a,link,mono,that,indicates,completion,or,error;mono,void,write,publisher,extends,t,input,stream,resolvable,type,element,type,media,type,media,type,reactive,http,output,message,output,message,map,string,object,hints
HttpMessageWriter -> Mono<Void> write(Publisher<? extends T> inputStream, ResolvableType elementType, 			MediaType mediaType, ReactiveHttpOutputMessage outputMessage, Map<String, Object> hints)_;1474365351;Write an given object to the given output message._@param inputStream the input stream to write_@param elementType the stream element type to process. This type must have previously_been passed to the {@link #canWrite} canWrite} method of this interface, which must_have returned {@code true}._@param mediaType the content type to use when writing, typically the value of an_{@code Accept} header. May be {@code null} to indicate that the default content_type of the converter must be used._@param outputMessage the message to write to_@param hints additional information about how to write_@return a {@link Mono} that indicates completion or error;Mono<Void> write(Publisher<? extends T> inputStream, ResolvableType elementType,_			MediaType mediaType, ReactiveHttpOutputMessage outputMessage, Map<String, Object> hints)_;write,an,given,object,to,the,given,output,message,param,input,stream,the,input,stream,to,write,param,element,type,the,stream,element,type,to,process,this,type,must,have,previously,been,passed,to,the,link,can,write,can,write,method,of,this,interface,which,must,have,returned,code,true,param,media,type,the,content,type,to,use,when,writing,typically,the,value,of,an,code,accept,header,may,be,code,null,to,indicate,that,the,default,content,type,of,the,converter,must,be,used,param,output,message,the,message,to,write,to,param,hints,additional,information,about,how,to,write,return,a,link,mono,that,indicates,completion,or,error;mono,void,write,publisher,extends,t,input,stream,resolvable,type,element,type,media,type,media,type,reactive,http,output,message,output,message,map,string,object,hints
HttpMessageWriter -> default Mono<Void> write(Publisher<? extends T> inputStream, ResolvableType actualType, 			ResolvableType elementType, @Nullable MediaType mediaType, ServerHttpRequest request, 			ServerHttpResponse response, Map<String, Object> hints);1495868221;Server-side only alternative to_{@link #write(Publisher, ResolvableType, MediaType, ReactiveHttpOutputMessage, Map)}_with additional context available.__@param actualType the actual return type of the method that returned the_value_ for annotated controllers, the {@link MethodParameter} can be_accessed via {@link ResolvableType#getSource()}._@param elementType the type of Objects in the input stream_@param mediaType the content type to use, possibly {@code null} indicating_the default content type of the writer should be used._@param request the current request_@param response the current response_@return a {@link Mono} that indicates completion of writing or error;default Mono<Void> write(Publisher<? extends T> inputStream, ResolvableType actualType,_			ResolvableType elementType, @Nullable MediaType mediaType, ServerHttpRequest request,_			ServerHttpResponse response, Map<String, Object> hints) {__		return write(inputStream, elementType, mediaType, response, hints)__	};server,side,only,alternative,to,link,write,publisher,resolvable,type,media,type,reactive,http,output,message,map,with,additional,context,available,param,actual,type,the,actual,return,type,of,the,method,that,returned,the,value,for,annotated,controllers,the,link,method,parameter,can,be,accessed,via,link,resolvable,type,get,source,param,element,type,the,type,of,objects,in,the,input,stream,param,media,type,the,content,type,to,use,possibly,code,null,indicating,the,default,content,type,of,the,writer,should,be,used,param,request,the,current,request,param,response,the,current,response,return,a,link,mono,that,indicates,completion,of,writing,or,error;default,mono,void,write,publisher,extends,t,input,stream,resolvable,type,actual,type,resolvable,type,element,type,nullable,media,type,media,type,server,http,request,request,server,http,response,response,map,string,object,hints,return,write,input,stream,element,type,media,type,response,hints
HttpMessageWriter -> default Mono<Void> write(Publisher<? extends T> inputStream, ResolvableType actualType, 			ResolvableType elementType, @Nullable MediaType mediaType, ServerHttpRequest request, 			ServerHttpResponse response, Map<String, Object> hints);1496837955;Server-side only alternative to_{@link #write(Publisher, ResolvableType, MediaType, ReactiveHttpOutputMessage, Map)}_with additional context available._@param actualType the actual return type of the method that returned the_value_ for annotated controllers, the {@link MethodParameter} can be_accessed via {@link ResolvableType#getSource()}._@param elementType the type of Objects in the input stream_@param mediaType the content type to use, possibly {@code null} indicating_the default content type of the writer should be used._@param request the current request_@param response the current response_@return a {@link Mono} that indicates completion of writing or error;default Mono<Void> write(Publisher<? extends T> inputStream, ResolvableType actualType,_			ResolvableType elementType, @Nullable MediaType mediaType, ServerHttpRequest request,_			ServerHttpResponse response, Map<String, Object> hints) {__		return write(inputStream, elementType, mediaType, response, hints)__	};server,side,only,alternative,to,link,write,publisher,resolvable,type,media,type,reactive,http,output,message,map,with,additional,context,available,param,actual,type,the,actual,return,type,of,the,method,that,returned,the,value,for,annotated,controllers,the,link,method,parameter,can,be,accessed,via,link,resolvable,type,get,source,param,element,type,the,type,of,objects,in,the,input,stream,param,media,type,the,content,type,to,use,possibly,code,null,indicating,the,default,content,type,of,the,writer,should,be,used,param,request,the,current,request,param,response,the,current,response,return,a,link,mono,that,indicates,completion,of,writing,or,error;default,mono,void,write,publisher,extends,t,input,stream,resolvable,type,actual,type,resolvable,type,element,type,nullable,media,type,media,type,server,http,request,request,server,http,response,response,map,string,object,hints,return,write,input,stream,element,type,media,type,response,hints
HttpMessageWriter -> default Mono<Void> write(Publisher<? extends T> inputStream, ResolvableType actualType, 			ResolvableType elementType, @Nullable MediaType mediaType, ServerHttpRequest request, 			ServerHttpResponse response, Map<String, Object> hints);1530174524;Server-side only alternative to_{@link #write(Publisher, ResolvableType, MediaType, ReactiveHttpOutputMessage, Map)}_with additional context available._@param actualType the actual return type of the method that returned the_value_ for annotated controllers, the {@link MethodParameter} can be_accessed via {@link ResolvableType#getSource()}._@param elementType the type of Objects in the input stream_@param mediaType the content type to use, possibly {@code null} indicating_the default content type of the writer should be used._@param request the current request_@param response the current response_@return a {@link Mono} that indicates completion of writing or error;default Mono<Void> write(Publisher<? extends T> inputStream, ResolvableType actualType,_			ResolvableType elementType, @Nullable MediaType mediaType, ServerHttpRequest request,_			ServerHttpResponse response, Map<String, Object> hints) {__		return write(inputStream, elementType, mediaType, response, hints)__	};server,side,only,alternative,to,link,write,publisher,resolvable,type,media,type,reactive,http,output,message,map,with,additional,context,available,param,actual,type,the,actual,return,type,of,the,method,that,returned,the,value,for,annotated,controllers,the,link,method,parameter,can,be,accessed,via,link,resolvable,type,get,source,param,element,type,the,type,of,objects,in,the,input,stream,param,media,type,the,content,type,to,use,possibly,code,null,indicating,the,default,content,type,of,the,writer,should,be,used,param,request,the,current,request,param,response,the,current,response,return,a,link,mono,that,indicates,completion,of,writing,or,error;default,mono,void,write,publisher,extends,t,input,stream,resolvable,type,actual,type,resolvable,type,element,type,nullable,media,type,media,type,server,http,request,request,server,http,response,response,map,string,object,hints,return,write,input,stream,element,type,media,type,response,hints
HttpMessageWriter -> boolean canWrite(ResolvableType elementType, MediaType mediaType)_;1474365351;Indicates whether the given class can be written by this converter._@param elementType the stream element type to test for writability_@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@return {@code true} if writable_ {@code false} otherwise;boolean canWrite(ResolvableType elementType, MediaType mediaType)_;indicates,whether,the,given,class,can,be,written,by,this,converter,param,element,type,the,stream,element,type,to,test,for,writability,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,return,code,true,if,writable,code,false,otherwise;boolean,can,write,resolvable,type,element,type,media,type,media,type
HttpMessageWriter -> boolean canWrite(ResolvableType elementType, MediaType mediaType)_;1490109321;Whether the given object type is supported by this writer._@param elementType the type of object to check_@param mediaType the media type for the write, possibly {@code null}_@return {@code true} if writable, {@code false} otherwise;boolean canWrite(ResolvableType elementType, MediaType mediaType)_;whether,the,given,object,type,is,supported,by,this,writer,param,element,type,the,type,of,object,to,check,param,media,type,the,media,type,for,the,write,possibly,code,null,return,code,true,if,writable,code,false,otherwise;boolean,can,write,resolvable,type,element,type,media,type,media,type
HttpMessageWriter -> boolean canWrite(ResolvableType elementType, MediaType mediaType)_;1490392946;Whether the given object type is supported by this writer._@param elementType the type of object to check_@param mediaType the media type for the write, possibly {@code null}_@return {@code true} if writable, {@code false} otherwise;boolean canWrite(ResolvableType elementType, MediaType mediaType)_;whether,the,given,object,type,is,supported,by,this,writer,param,element,type,the,type,of,object,to,check,param,media,type,the,media,type,for,the,write,possibly,code,null,return,code,true,if,writable,code,false,otherwise;boolean,can,write,resolvable,type,element,type,media,type,media,type
HttpMessageWriter -> boolean canWrite(ResolvableType elementType, MediaType mediaType)_;1494019148;Whether the given object type is supported by this writer._@param elementType the type of object to check_@param mediaType the media type for the write, possibly {@code null}_@return {@code true} if writable, {@code false} otherwise;boolean canWrite(ResolvableType elementType, MediaType mediaType)_;whether,the,given,object,type,is,supported,by,this,writer,param,element,type,the,type,of,object,to,check,param,media,type,the,media,type,for,the,write,possibly,code,null,return,code,true,if,writable,code,false,otherwise;boolean,can,write,resolvable,type,element,type,media,type,media,type
HttpMessageWriter -> boolean canWrite(ResolvableType elementType, MediaType mediaType)_;1495868221;Whether the given object type is supported by this writer._@param elementType the type of object to check_@param mediaType the media type for the write, possibly {@code null}_@return {@code true} if writable, {@code false} otherwise;boolean canWrite(ResolvableType elementType, MediaType mediaType)_;whether,the,given,object,type,is,supported,by,this,writer,param,element,type,the,type,of,object,to,check,param,media,type,the,media,type,for,the,write,possibly,code,null,return,code,true,if,writable,code,false,otherwise;boolean,can,write,resolvable,type,element,type,media,type,media,type
HttpMessageWriter -> boolean canWrite(ResolvableType elementType, MediaType mediaType, Map<String, Object> hints)_;1473771793;Indicates whether the given class can be written by this converter._@param elementType the stream element type to test for writability_@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@param hints additional information about how to write_@return {@code true} if writable_ {@code false} otherwise;boolean canWrite(ResolvableType elementType, MediaType mediaType, Map<String, Object> hints)_;indicates,whether,the,given,class,can,be,written,by,this,converter,param,element,type,the,stream,element,type,to,test,for,writability,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,param,hints,additional,information,about,how,to,write,return,code,true,if,writable,code,false,otherwise;boolean,can,write,resolvable,type,element,type,media,type,media,type,map,string,object,hints
HttpMessageWriter -> boolean canWrite(ResolvableType elementType, MediaType mediaType, Map<String, Object> hints)_;1474295570;Indicates whether the given class can be written by this converter._@param elementType the stream element type to test for writability_@param mediaType the media type to write, can be {@code null} if not specified._Typically the value of an {@code Accept} header._@param hints additional information about how to write_@return {@code true} if writable_ {@code false} otherwise;boolean canWrite(ResolvableType elementType, MediaType mediaType, Map<String, Object> hints)_;indicates,whether,the,given,class,can,be,written,by,this,converter,param,element,type,the,stream,element,type,to,test,for,writability,param,media,type,the,media,type,to,write,can,be,code,null,if,not,specified,typically,the,value,of,an,code,accept,header,param,hints,additional,information,about,how,to,write,return,code,true,if,writable,code,false,otherwise;boolean,can,write,resolvable,type,element,type,media,type,media,type,map,string,object,hints
HttpMessageWriter -> Mono<Void> write(Publisher<? extends T> inputStream, ResolvableType elementType, 			MediaType mediaType, ReactiveHttpOutputMessage message, Map<String, Object> hints)_;1490109321;Write an given stream of object to the output message._@param inputStream the objects to write_@param elementType the type of objects in the stream which must have been_previously checked via {@link #canWrite(ResolvableType, MediaType)}_@param mediaType the content type for the write, possibly {@code null} to_indicate that the default content type of the writer must be used._@param message the message to write to_@param hints additional information about how to encode and write_@return indicates completion or error;Mono<Void> write(Publisher<? extends T> inputStream, ResolvableType elementType,_			MediaType mediaType, ReactiveHttpOutputMessage message, Map<String, Object> hints)_;write,an,given,stream,of,object,to,the,output,message,param,input,stream,the,objects,to,write,param,element,type,the,type,of,objects,in,the,stream,which,must,have,been,previously,checked,via,link,can,write,resolvable,type,media,type,param,media,type,the,content,type,for,the,write,possibly,code,null,to,indicate,that,the,default,content,type,of,the,writer,must,be,used,param,message,the,message,to,write,to,param,hints,additional,information,about,how,to,encode,and,write,return,indicates,completion,or,error;mono,void,write,publisher,extends,t,input,stream,resolvable,type,element,type,media,type,media,type,reactive,http,output,message,message,map,string,object,hints
HttpMessageWriter -> Mono<Void> write(Publisher<? extends T> inputStream, ResolvableType elementType, 			MediaType mediaType, ReactiveHttpOutputMessage message, Map<String, Object> hints)_;1490392946;Write an given stream of object to the output message._@param inputStream the objects to write_@param elementType the type of objects in the stream which must have been_previously checked via {@link #canWrite(ResolvableType, MediaType)}_@param mediaType the content type for the write, possibly {@code null} to_indicate that the default content type of the writer must be used._@param message the message to write to_@param hints additional information about how to encode and write_@return indicates completion or error;Mono<Void> write(Publisher<? extends T> inputStream, ResolvableType elementType,_			MediaType mediaType, ReactiveHttpOutputMessage message, Map<String, Object> hints)_;write,an,given,stream,of,object,to,the,output,message,param,input,stream,the,objects,to,write,param,element,type,the,type,of,objects,in,the,stream,which,must,have,been,previously,checked,via,link,can,write,resolvable,type,media,type,param,media,type,the,content,type,for,the,write,possibly,code,null,to,indicate,that,the,default,content,type,of,the,writer,must,be,used,param,message,the,message,to,write,to,param,hints,additional,information,about,how,to,encode,and,write,return,indicates,completion,or,error;mono,void,write,publisher,extends,t,input,stream,resolvable,type,element,type,media,type,media,type,reactive,http,output,message,message,map,string,object,hints
HttpMessageWriter -> Mono<Void> write(Publisher<? extends T> inputStream, ResolvableType elementType, 			MediaType mediaType, ReactiveHttpOutputMessage message, Map<String, Object> hints)_;1494019148;Write an given stream of object to the output message._@param inputStream the objects to write_@param elementType the type of objects in the stream which must have been_previously checked via {@link #canWrite(ResolvableType, MediaType)}_@param mediaType the content type for the write, possibly {@code null} to_indicate that the default content type of the writer must be used._@param message the message to write to_@param hints additional information about how to encode and write_@return indicates completion or error;Mono<Void> write(Publisher<? extends T> inputStream, ResolvableType elementType,_			MediaType mediaType, ReactiveHttpOutputMessage message, Map<String, Object> hints)_;write,an,given,stream,of,object,to,the,output,message,param,input,stream,the,objects,to,write,param,element,type,the,type,of,objects,in,the,stream,which,must,have,been,previously,checked,via,link,can,write,resolvable,type,media,type,param,media,type,the,content,type,for,the,write,possibly,code,null,to,indicate,that,the,default,content,type,of,the,writer,must,be,used,param,message,the,message,to,write,to,param,hints,additional,information,about,how,to,encode,and,write,return,indicates,completion,or,error;mono,void,write,publisher,extends,t,input,stream,resolvable,type,element,type,media,type,media,type,reactive,http,output,message,message,map,string,object,hints
