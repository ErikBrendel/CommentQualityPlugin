# id;timestamp;commentText;codeText;commentWords;codeWords
BaseDefaultCodecs -> final List<HttpMessageReader<?>> getObjectReaders();1526951444;Return Object readers (JSON, XML, SSE).;final List<HttpMessageReader<?>> getObjectReaders() {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageReader<?>> readers = new ArrayList<>()__		if (jackson2Present) {_			readers.add(new DecoderHttpMessageReader<>(getJackson2JsonDecoder()))__		}_		if (jackson2SmilePresent) {_			readers.add(new DecoderHttpMessageReader<>(new Jackson2SmileDecoder()))__		}_		if (jaxb2Present) {_			readers.add(new DecoderHttpMessageReader<>(new Jaxb2XmlDecoder()))__		}_		extendObjectReaders(readers)__		return readers__	};return,object,readers,json,xml,sse;final,list,http,message,reader,get,object,readers,if,this,register,defaults,return,collections,empty,list,list,http,message,reader,readers,new,array,list,if,jackson2present,readers,add,new,decoder,http,message,reader,get,jackson2json,decoder,if,jackson2smile,present,readers,add,new,decoder,http,message,reader,new,jackson2smile,decoder,if,jaxb2present,readers,add,new,decoder,http,message,reader,new,jaxb2xml,decoder,extend,object,readers,readers,return,readers
BaseDefaultCodecs -> final List<HttpMessageReader<?>> getObjectReaders();1529721864;Return Object readers (JSON, XML, SSE).;final List<HttpMessageReader<?>> getObjectReaders() {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageReader<?>> readers = new ArrayList<>()__		if (jackson2Present) {_			readers.add(new DecoderHttpMessageReader<>(getJackson2JsonDecoder()))__		}_		if (jackson2SmilePresent) {_			readers.add(new DecoderHttpMessageReader<>(new Jackson2SmileDecoder()))__		}_		if (jaxb2Present) {_			readers.add(new DecoderHttpMessageReader<>(new Jaxb2XmlDecoder()))__		}_		extendObjectReaders(readers)__		return readers__	};return,object,readers,json,xml,sse;final,list,http,message,reader,get,object,readers,if,this,register,defaults,return,collections,empty,list,list,http,message,reader,readers,new,array,list,if,jackson2present,readers,add,new,decoder,http,message,reader,get,jackson2json,decoder,if,jackson2smile,present,readers,add,new,decoder,http,message,reader,new,jackson2smile,decoder,if,jaxb2present,readers,add,new,decoder,http,message,reader,new,jaxb2xml,decoder,extend,object,readers,readers,return,readers
BaseDefaultCodecs -> final List<HttpMessageReader<?>> getObjectReaders();1531321803;Return Object readers (JSON, XML, SSE).;final List<HttpMessageReader<?>> getObjectReaders() {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageReader<?>> readers = new ArrayList<>()__		if (jackson2Present) {_			readers.add(new DecoderHttpMessageReader<>(getJackson2JsonDecoder()))__		}_		if (jackson2SmilePresent) {_			readers.add(new DecoderHttpMessageReader<>(new Jackson2SmileDecoder()))__		}_		if (jaxb2Present) {_			readers.add(new DecoderHttpMessageReader<>(new Jaxb2XmlDecoder()))__		}_		extendObjectReaders(readers)__		return readers__	};return,object,readers,json,xml,sse;final,list,http,message,reader,get,object,readers,if,this,register,defaults,return,collections,empty,list,list,http,message,reader,readers,new,array,list,if,jackson2present,readers,add,new,decoder,http,message,reader,get,jackson2json,decoder,if,jackson2smile,present,readers,add,new,decoder,http,message,reader,new,jackson2smile,decoder,if,jaxb2present,readers,add,new,decoder,http,message,reader,new,jaxb2xml,decoder,extend,object,readers,readers,return,readers
BaseDefaultCodecs -> final List<HttpMessageReader<?>> getObjectReaders();1532474226;Return Object readers (JSON, XML, SSE).;final List<HttpMessageReader<?>> getObjectReaders() {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageReader<?>> readers = new ArrayList<>()__		if (jackson2Present) {_			readers.add(new DecoderHttpMessageReader<>(getJackson2JsonDecoder()))__		}_		if (jackson2SmilePresent) {_			readers.add(new DecoderHttpMessageReader<>(new Jackson2SmileDecoder()))__		}_		if (jaxb2Present) {_			readers.add(new DecoderHttpMessageReader<>(new Jaxb2XmlDecoder()))__		}_		extendObjectReaders(readers)__		return readers__	};return,object,readers,json,xml,sse;final,list,http,message,reader,get,object,readers,if,this,register,defaults,return,collections,empty,list,list,http,message,reader,readers,new,array,list,if,jackson2present,readers,add,new,decoder,http,message,reader,get,jackson2json,decoder,if,jackson2smile,present,readers,add,new,decoder,http,message,reader,new,jackson2smile,decoder,if,jaxb2present,readers,add,new,decoder,http,message,reader,new,jaxb2xml,decoder,extend,object,readers,readers,return,readers
BaseDefaultCodecs -> final List<HttpMessageReader<?>> getObjectReaders();1532509782;Return Object readers (JSON, XML, SSE).;final List<HttpMessageReader<?>> getObjectReaders() {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageReader<?>> readers = new ArrayList<>()__		if (jackson2Present) {_			readers.add(new DecoderHttpMessageReader<>(getJackson2JsonDecoder()))__		}_		if (jackson2SmilePresent) {_			readers.add(new DecoderHttpMessageReader<>(new Jackson2SmileDecoder()))__		}_		if (jaxb2Present) {_			readers.add(new DecoderHttpMessageReader<>(new Jaxb2XmlDecoder()))__		}_		extendObjectReaders(readers)__		return readers__	};return,object,readers,json,xml,sse;final,list,http,message,reader,get,object,readers,if,this,register,defaults,return,collections,empty,list,list,http,message,reader,readers,new,array,list,if,jackson2present,readers,add,new,decoder,http,message,reader,get,jackson2json,decoder,if,jackson2smile,present,readers,add,new,decoder,http,message,reader,new,jackson2smile,decoder,if,jaxb2present,readers,add,new,decoder,http,message,reader,new,jaxb2xml,decoder,extend,object,readers,readers,return,readers
BaseDefaultCodecs -> final List<HttpMessageReader<?>> getObjectReaders();1532520950;Return Object readers (JSON, XML, SSE).;final List<HttpMessageReader<?>> getObjectReaders() {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageReader<?>> readers = new ArrayList<>()__		if (jackson2Present) {_			readers.add(new DecoderHttpMessageReader<>(getJackson2JsonDecoder()))__		}_		if (jackson2SmilePresent) {_			readers.add(new DecoderHttpMessageReader<>(new Jackson2SmileDecoder()))__		}_		if (jaxb2Present) {_			readers.add(new DecoderHttpMessageReader<>(new Jaxb2XmlDecoder()))__		}_		extendObjectReaders(readers)__		return readers__	};return,object,readers,json,xml,sse;final,list,http,message,reader,get,object,readers,if,this,register,defaults,return,collections,empty,list,list,http,message,reader,readers,new,array,list,if,jackson2present,readers,add,new,decoder,http,message,reader,get,jackson2json,decoder,if,jackson2smile,present,readers,add,new,decoder,http,message,reader,new,jackson2smile,decoder,if,jaxb2present,readers,add,new,decoder,http,message,reader,new,jaxb2xml,decoder,extend,object,readers,readers,return,readers
BaseDefaultCodecs -> final List<HttpMessageReader<?>> getObjectReaders();1542146216;Return Object readers (JSON, XML, SSE).;final List<HttpMessageReader<?>> getObjectReaders() {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageReader<?>> readers = new ArrayList<>()__		if (jackson2Present) {_			readers.add(new DecoderHttpMessageReader<>(getJackson2JsonDecoder()))__		}_		if (jackson2SmilePresent) {_			readers.add(new DecoderHttpMessageReader<>(new Jackson2SmileDecoder()))__		}_		if (jaxb2Present) {_			Decoder<?> decoder = this.jaxb2Decoder != null ? this.jaxb2Decoder : new Jaxb2XmlDecoder()__			readers.add(new DecoderHttpMessageReader<>(decoder))__		}_		extendObjectReaders(readers)__		return readers__	};return,object,readers,json,xml,sse;final,list,http,message,reader,get,object,readers,if,this,register,defaults,return,collections,empty,list,list,http,message,reader,readers,new,array,list,if,jackson2present,readers,add,new,decoder,http,message,reader,get,jackson2json,decoder,if,jackson2smile,present,readers,add,new,decoder,http,message,reader,new,jackson2smile,decoder,if,jaxb2present,decoder,decoder,this,jaxb2decoder,null,this,jaxb2decoder,new,jaxb2xml,decoder,readers,add,new,decoder,http,message,reader,decoder,extend,object,readers,readers,return,readers
BaseDefaultCodecs -> final List<HttpMessageWriter<?>> getTypedWriters(boolean forMultipart);1526951444;Return writers that support specific types._@param forMultipart whether to returns writers for general use ("false"),_or for multipart requests only ("true"). Generally the two sets are the_same except for the multipart writer itself.;final List<HttpMessageWriter<?>> getTypedWriters(boolean forMultipart) {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageWriter<?>> writers = new ArrayList<>()__		writers.add(new EncoderHttpMessageWriter<>(new ByteArrayEncoder()))__		writers.add(new EncoderHttpMessageWriter<>(new ByteBufferEncoder()))__		writers.add(new EncoderHttpMessageWriter<>(new DataBufferEncoder()))__		writers.add(new ResourceHttpMessageWriter())__		writers.add(new EncoderHttpMessageWriter<>(CharSequenceEncoder.textPlainOnly()))__		_		if (!forMultipart) {_			extendTypedWriters(writers)__		}_		return writers__	};return,writers,that,support,specific,types,param,for,multipart,whether,to,returns,writers,for,general,use,false,or,for,multipart,requests,only,true,generally,the,two,sets,are,the,same,except,for,the,multipart,writer,itself;final,list,http,message,writer,get,typed,writers,boolean,for,multipart,if,this,register,defaults,return,collections,empty,list,list,http,message,writer,writers,new,array,list,writers,add,new,encoder,http,message,writer,new,byte,array,encoder,writers,add,new,encoder,http,message,writer,new,byte,buffer,encoder,writers,add,new,encoder,http,message,writer,new,data,buffer,encoder,writers,add,new,resource,http,message,writer,writers,add,new,encoder,http,message,writer,char,sequence,encoder,text,plain,only,if,for,multipart,extend,typed,writers,writers,return,writers
BaseDefaultCodecs -> final List<HttpMessageWriter<?>> getTypedWriters(boolean forMultipart);1529721864;Return writers that support specific types._@param forMultipart whether to returns writers for general use ("false"),_or for multipart requests only ("true"). Generally the two sets are the_same except for the multipart writer itself.;final List<HttpMessageWriter<?>> getTypedWriters(boolean forMultipart) {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageWriter<?>> writers = new ArrayList<>()__		writers.add(new EncoderHttpMessageWriter<>(new ByteArrayEncoder()))__		writers.add(new EncoderHttpMessageWriter<>(new ByteBufferEncoder()))__		writers.add(new EncoderHttpMessageWriter<>(new DataBufferEncoder()))__		writers.add(new ResourceHttpMessageWriter())__		writers.add(new EncoderHttpMessageWriter<>(CharSequenceEncoder.textPlainOnly()))__		_		if (!forMultipart) {_			extendTypedWriters(writers)__		}_		return writers__	};return,writers,that,support,specific,types,param,for,multipart,whether,to,returns,writers,for,general,use,false,or,for,multipart,requests,only,true,generally,the,two,sets,are,the,same,except,for,the,multipart,writer,itself;final,list,http,message,writer,get,typed,writers,boolean,for,multipart,if,this,register,defaults,return,collections,empty,list,list,http,message,writer,writers,new,array,list,writers,add,new,encoder,http,message,writer,new,byte,array,encoder,writers,add,new,encoder,http,message,writer,new,byte,buffer,encoder,writers,add,new,encoder,http,message,writer,new,data,buffer,encoder,writers,add,new,resource,http,message,writer,writers,add,new,encoder,http,message,writer,char,sequence,encoder,text,plain,only,if,for,multipart,extend,typed,writers,writers,return,writers
BaseDefaultCodecs -> final List<HttpMessageWriter<?>> getTypedWriters(boolean forMultipart);1531321803;Return writers that support specific types._@param forMultipart whether to returns writers for general use ("false"),_or for multipart requests only ("true"). Generally the two sets are the_same except for the multipart writer itself.;final List<HttpMessageWriter<?>> getTypedWriters(boolean forMultipart) {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageWriter<?>> writers = new ArrayList<>()__		writers.add(new EncoderHttpMessageWriter<>(new ByteArrayEncoder()))__		writers.add(new EncoderHttpMessageWriter<>(new ByteBufferEncoder()))__		writers.add(new EncoderHttpMessageWriter<>(new DataBufferEncoder()))__		writers.add(new ResourceHttpMessageWriter())__		writers.add(new EncoderHttpMessageWriter<>(CharSequenceEncoder.textPlainOnly()))__		_		if (!forMultipart) {_			extendTypedWriters(writers)__		}_		return writers__	};return,writers,that,support,specific,types,param,for,multipart,whether,to,returns,writers,for,general,use,false,or,for,multipart,requests,only,true,generally,the,two,sets,are,the,same,except,for,the,multipart,writer,itself;final,list,http,message,writer,get,typed,writers,boolean,for,multipart,if,this,register,defaults,return,collections,empty,list,list,http,message,writer,writers,new,array,list,writers,add,new,encoder,http,message,writer,new,byte,array,encoder,writers,add,new,encoder,http,message,writer,new,byte,buffer,encoder,writers,add,new,encoder,http,message,writer,new,data,buffer,encoder,writers,add,new,resource,http,message,writer,writers,add,new,encoder,http,message,writer,char,sequence,encoder,text,plain,only,if,for,multipart,extend,typed,writers,writers,return,writers
BaseDefaultCodecs -> final List<HttpMessageWriter<?>> getTypedWriters(boolean forMultipart);1532474226;Return writers that support specific types._@param forMultipart whether to returns writers for general use ("false"),_or for multipart requests only ("true"). Generally the two sets are the_same except for the multipart writer itself.;final List<HttpMessageWriter<?>> getTypedWriters(boolean forMultipart) {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageWriter<?>> writers = new ArrayList<>()__		writers.add(new EncoderHttpMessageWriter<>(new ByteArrayEncoder()))__		writers.add(new EncoderHttpMessageWriter<>(new ByteBufferEncoder()))__		writers.add(new EncoderHttpMessageWriter<>(new DataBufferEncoder()))__		writers.add(new ResourceHttpMessageWriter())__		writers.add(new EncoderHttpMessageWriter<>(CharSequenceEncoder.textPlainOnly()))__		_		if (!forMultipart) {_			extendTypedWriters(writers)__		}_		if (protobufPresent) {_			writers.add(getProtobufWriter())__		}_		return writers__	};return,writers,that,support,specific,types,param,for,multipart,whether,to,returns,writers,for,general,use,false,or,for,multipart,requests,only,true,generally,the,two,sets,are,the,same,except,for,the,multipart,writer,itself;final,list,http,message,writer,get,typed,writers,boolean,for,multipart,if,this,register,defaults,return,collections,empty,list,list,http,message,writer,writers,new,array,list,writers,add,new,encoder,http,message,writer,new,byte,array,encoder,writers,add,new,encoder,http,message,writer,new,byte,buffer,encoder,writers,add,new,encoder,http,message,writer,new,data,buffer,encoder,writers,add,new,resource,http,message,writer,writers,add,new,encoder,http,message,writer,char,sequence,encoder,text,plain,only,if,for,multipart,extend,typed,writers,writers,if,protobuf,present,writers,add,get,protobuf,writer,return,writers
BaseDefaultCodecs -> final List<HttpMessageWriter<?>> getTypedWriters(boolean forMultipart);1532509782;Return writers that support specific types._@param forMultipart whether to returns writers for general use ("false"),_or for multipart requests only ("true"). Generally the two sets are the_same except for the multipart writer itself.;final List<HttpMessageWriter<?>> getTypedWriters(boolean forMultipart) {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageWriter<?>> writers = new ArrayList<>()__		writers.add(new EncoderHttpMessageWriter<>(new ByteArrayEncoder()))__		writers.add(new EncoderHttpMessageWriter<>(new ByteBufferEncoder()))__		writers.add(new EncoderHttpMessageWriter<>(new DataBufferEncoder()))__		writers.add(new ResourceHttpMessageWriter())__		writers.add(new EncoderHttpMessageWriter<>(CharSequenceEncoder.textPlainOnly()))__		_		if (!forMultipart) {_			extendTypedWriters(writers)__		}_		if (protobufPresent) {_			writers.add(getProtobufWriter())__		}_		return writers__	};return,writers,that,support,specific,types,param,for,multipart,whether,to,returns,writers,for,general,use,false,or,for,multipart,requests,only,true,generally,the,two,sets,are,the,same,except,for,the,multipart,writer,itself;final,list,http,message,writer,get,typed,writers,boolean,for,multipart,if,this,register,defaults,return,collections,empty,list,list,http,message,writer,writers,new,array,list,writers,add,new,encoder,http,message,writer,new,byte,array,encoder,writers,add,new,encoder,http,message,writer,new,byte,buffer,encoder,writers,add,new,encoder,http,message,writer,new,data,buffer,encoder,writers,add,new,resource,http,message,writer,writers,add,new,encoder,http,message,writer,char,sequence,encoder,text,plain,only,if,for,multipart,extend,typed,writers,writers,if,protobuf,present,writers,add,get,protobuf,writer,return,writers
BaseDefaultCodecs -> void registerDefaults(boolean registerDefaults);1526951382;Delegate method used from {@link BaseCodecConfigurer#registerDefaults}.;void registerDefaults(boolean registerDefaults) {_		this.registerDefaults = registerDefaults__	};delegate,method,used,from,link,base,codec,configurer,register,defaults;void,register,defaults,boolean,register,defaults,this,register,defaults,register,defaults
BaseDefaultCodecs -> void registerDefaults(boolean registerDefaults);1526951444;Delegate method used from {@link BaseCodecConfigurer#registerDefaults}.;void registerDefaults(boolean registerDefaults) {_		this.registerDefaults = registerDefaults__	};delegate,method,used,from,link,base,codec,configurer,register,defaults;void,register,defaults,boolean,register,defaults,this,register,defaults,register,defaults
BaseDefaultCodecs -> void registerDefaults(boolean registerDefaults);1529721864;Delegate method used from {@link BaseCodecConfigurer#registerDefaults}.;void registerDefaults(boolean registerDefaults) {_		this.registerDefaults = registerDefaults__	};delegate,method,used,from,link,base,codec,configurer,register,defaults;void,register,defaults,boolean,register,defaults,this,register,defaults,register,defaults
BaseDefaultCodecs -> void registerDefaults(boolean registerDefaults);1531321803;Delegate method used from {@link BaseCodecConfigurer#registerDefaults}.;void registerDefaults(boolean registerDefaults) {_		this.registerDefaults = registerDefaults__	};delegate,method,used,from,link,base,codec,configurer,register,defaults;void,register,defaults,boolean,register,defaults,this,register,defaults,register,defaults
BaseDefaultCodecs -> void registerDefaults(boolean registerDefaults);1532474226;Delegate method used from {@link BaseCodecConfigurer#registerDefaults}.;void registerDefaults(boolean registerDefaults) {_		this.registerDefaults = registerDefaults__	};delegate,method,used,from,link,base,codec,configurer,register,defaults;void,register,defaults,boolean,register,defaults,this,register,defaults,register,defaults
BaseDefaultCodecs -> void registerDefaults(boolean registerDefaults);1532509782;Delegate method used from {@link BaseCodecConfigurer#registerDefaults}.;void registerDefaults(boolean registerDefaults) {_		this.registerDefaults = registerDefaults__	};delegate,method,used,from,link,base,codec,configurer,register,defaults;void,register,defaults,boolean,register,defaults,this,register,defaults,register,defaults
BaseDefaultCodecs -> void registerDefaults(boolean registerDefaults);1532520950;Delegate method used from {@link BaseCodecConfigurer#registerDefaults}.;void registerDefaults(boolean registerDefaults) {_		this.registerDefaults = registerDefaults__	};delegate,method,used,from,link,base,codec,configurer,register,defaults;void,register,defaults,boolean,register,defaults,this,register,defaults,register,defaults
BaseDefaultCodecs -> void registerDefaults(boolean registerDefaults);1542146216;Delegate method used from {@link BaseCodecConfigurer#registerDefaults}.;void registerDefaults(boolean registerDefaults) {_		this.registerDefaults = registerDefaults__	};delegate,method,used,from,link,base,codec,configurer,register,defaults;void,register,defaults,boolean,register,defaults,this,register,defaults,register,defaults
BaseDefaultCodecs -> @SuppressWarnings("unchecked") 	final List<HttpMessageWriter<?>> getTypedWriters(boolean forMultipart);1532520950;Return writers that support specific types._@param forMultipart whether to returns writers for general use ("false"),_or for multipart requests only ("true"). Generally the two sets are the_same except for the multipart writer itself.;@SuppressWarnings("unchecked")_	final List<HttpMessageWriter<?>> getTypedWriters(boolean forMultipart) {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageWriter<?>> writers = new ArrayList<>()__		writers.add(new EncoderHttpMessageWriter<>(new ByteArrayEncoder()))__		writers.add(new EncoderHttpMessageWriter<>(new ByteBufferEncoder()))__		writers.add(new EncoderHttpMessageWriter<>(new DataBufferEncoder()))__		writers.add(new ResourceHttpMessageWriter())__		writers.add(new EncoderHttpMessageWriter<>(CharSequenceEncoder.textPlainOnly()))__		_		if (!forMultipart) {_			extendTypedWriters(writers)__		}_		if (protobufPresent) {_			writers.add(new ProtobufHttpMessageWriter((Encoder) getProtobufEncoder()))__		}_		return writers__	};return,writers,that,support,specific,types,param,for,multipart,whether,to,returns,writers,for,general,use,false,or,for,multipart,requests,only,true,generally,the,two,sets,are,the,same,except,for,the,multipart,writer,itself;suppress,warnings,unchecked,final,list,http,message,writer,get,typed,writers,boolean,for,multipart,if,this,register,defaults,return,collections,empty,list,list,http,message,writer,writers,new,array,list,writers,add,new,encoder,http,message,writer,new,byte,array,encoder,writers,add,new,encoder,http,message,writer,new,byte,buffer,encoder,writers,add,new,encoder,http,message,writer,new,data,buffer,encoder,writers,add,new,resource,http,message,writer,writers,add,new,encoder,http,message,writer,char,sequence,encoder,text,plain,only,if,for,multipart,extend,typed,writers,writers,if,protobuf,present,writers,add,new,protobuf,http,message,writer,encoder,get,protobuf,encoder,return,writers
BaseDefaultCodecs -> @SuppressWarnings("unchecked") 	final List<HttpMessageWriter<?>> getTypedWriters(boolean forMultipart);1542146216;Return writers that support specific types._@param forMultipart whether to returns writers for general use ("false"),_or for multipart requests only ("true"). Generally the two sets are the_same except for the multipart writer itself.;@SuppressWarnings("unchecked")_	final List<HttpMessageWriter<?>> getTypedWriters(boolean forMultipart) {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageWriter<?>> writers = new ArrayList<>()__		writers.add(new EncoderHttpMessageWriter<>(new ByteArrayEncoder()))__		writers.add(new EncoderHttpMessageWriter<>(new ByteBufferEncoder()))__		writers.add(new EncoderHttpMessageWriter<>(new DataBufferEncoder()))__		writers.add(new ResourceHttpMessageWriter())__		writers.add(new EncoderHttpMessageWriter<>(CharSequenceEncoder.textPlainOnly()))__		_		if (!forMultipart) {_			extendTypedWriters(writers)__		}_		if (protobufPresent) {_			Encoder<?> encoder = this.protobufEncoder != null ? this.protobufEncoder : new ProtobufEncoder()__			writers.add(new ProtobufHttpMessageWriter((Encoder) encoder))__		}_		return writers__	};return,writers,that,support,specific,types,param,for,multipart,whether,to,returns,writers,for,general,use,false,or,for,multipart,requests,only,true,generally,the,two,sets,are,the,same,except,for,the,multipart,writer,itself;suppress,warnings,unchecked,final,list,http,message,writer,get,typed,writers,boolean,for,multipart,if,this,register,defaults,return,collections,empty,list,list,http,message,writer,writers,new,array,list,writers,add,new,encoder,http,message,writer,new,byte,array,encoder,writers,add,new,encoder,http,message,writer,new,byte,buffer,encoder,writers,add,new,encoder,http,message,writer,new,data,buffer,encoder,writers,add,new,resource,http,message,writer,writers,add,new,encoder,http,message,writer,char,sequence,encoder,text,plain,only,if,for,multipart,extend,typed,writers,writers,if,protobuf,present,encoder,encoder,this,protobuf,encoder,null,this,protobuf,encoder,new,protobuf,encoder,writers,add,new,protobuf,http,message,writer,encoder,encoder,return,writers
BaseDefaultCodecs -> protected void extendObjectWriters(List<HttpMessageWriter<?>> objectWriters);1526951444;Hook for client or server specific Object writers.;protected void extendObjectWriters(List<HttpMessageWriter<?>> objectWriters) {_	};hook,for,client,or,server,specific,object,writers;protected,void,extend,object,writers,list,http,message,writer,object,writers
BaseDefaultCodecs -> protected void extendObjectWriters(List<HttpMessageWriter<?>> objectWriters);1529721864;Hook for client or server specific Object writers.;protected void extendObjectWriters(List<HttpMessageWriter<?>> objectWriters) {_	};hook,for,client,or,server,specific,object,writers;protected,void,extend,object,writers,list,http,message,writer,object,writers
BaseDefaultCodecs -> protected void extendObjectWriters(List<HttpMessageWriter<?>> objectWriters);1531321803;Hook for client or server specific Object writers.;protected void extendObjectWriters(List<HttpMessageWriter<?>> objectWriters) {_	};hook,for,client,or,server,specific,object,writers;protected,void,extend,object,writers,list,http,message,writer,object,writers
BaseDefaultCodecs -> protected void extendObjectWriters(List<HttpMessageWriter<?>> objectWriters);1532474226;Hook for client or server specific Object writers.;protected void extendObjectWriters(List<HttpMessageWriter<?>> objectWriters) {_	};hook,for,client,or,server,specific,object,writers;protected,void,extend,object,writers,list,http,message,writer,object,writers
BaseDefaultCodecs -> protected void extendObjectWriters(List<HttpMessageWriter<?>> objectWriters);1532509782;Hook for client or server specific Object writers.;protected void extendObjectWriters(List<HttpMessageWriter<?>> objectWriters) {_	};hook,for,client,or,server,specific,object,writers;protected,void,extend,object,writers,list,http,message,writer,object,writers
BaseDefaultCodecs -> protected void extendObjectWriters(List<HttpMessageWriter<?>> objectWriters);1532520950;Hook for client or server specific Object writers.;protected void extendObjectWriters(List<HttpMessageWriter<?>> objectWriters) {_	};hook,for,client,or,server,specific,object,writers;protected,void,extend,object,writers,list,http,message,writer,object,writers
BaseDefaultCodecs -> protected void extendObjectWriters(List<HttpMessageWriter<?>> objectWriters);1542146216;Hook for client or server specific Object writers.;protected void extendObjectWriters(List<HttpMessageWriter<?>> objectWriters) {_	};hook,for,client,or,server,specific,object,writers;protected,void,extend,object,writers,list,http,message,writer,object,writers
BaseDefaultCodecs -> protected void extendTypedReaders(List<HttpMessageReader<?>> typedReaders);1526951444;Hook for client or server specific typed readers.;protected void extendTypedReaders(List<HttpMessageReader<?>> typedReaders) {_	};hook,for,client,or,server,specific,typed,readers;protected,void,extend,typed,readers,list,http,message,reader,typed,readers
BaseDefaultCodecs -> protected void extendTypedReaders(List<HttpMessageReader<?>> typedReaders);1529721864;Hook for client or server specific typed readers.;protected void extendTypedReaders(List<HttpMessageReader<?>> typedReaders) {_	};hook,for,client,or,server,specific,typed,readers;protected,void,extend,typed,readers,list,http,message,reader,typed,readers
BaseDefaultCodecs -> protected void extendTypedReaders(List<HttpMessageReader<?>> typedReaders);1531321803;Hook for client or server specific typed readers.;protected void extendTypedReaders(List<HttpMessageReader<?>> typedReaders) {_	};hook,for,client,or,server,specific,typed,readers;protected,void,extend,typed,readers,list,http,message,reader,typed,readers
BaseDefaultCodecs -> protected void extendTypedReaders(List<HttpMessageReader<?>> typedReaders);1532474226;Hook for client or server specific typed readers.;protected void extendTypedReaders(List<HttpMessageReader<?>> typedReaders) {_	};hook,for,client,or,server,specific,typed,readers;protected,void,extend,typed,readers,list,http,message,reader,typed,readers
BaseDefaultCodecs -> protected void extendTypedReaders(List<HttpMessageReader<?>> typedReaders);1532509782;Hook for client or server specific typed readers.;protected void extendTypedReaders(List<HttpMessageReader<?>> typedReaders) {_	};hook,for,client,or,server,specific,typed,readers;protected,void,extend,typed,readers,list,http,message,reader,typed,readers
BaseDefaultCodecs -> protected void extendTypedReaders(List<HttpMessageReader<?>> typedReaders);1532520950;Hook for client or server specific typed readers.;protected void extendTypedReaders(List<HttpMessageReader<?>> typedReaders) {_	};hook,for,client,or,server,specific,typed,readers;protected,void,extend,typed,readers,list,http,message,reader,typed,readers
BaseDefaultCodecs -> protected void extendTypedReaders(List<HttpMessageReader<?>> typedReaders);1542146216;Hook for client or server specific typed readers.;protected void extendTypedReaders(List<HttpMessageReader<?>> typedReaders) {_	};hook,for,client,or,server,specific,typed,readers;protected,void,extend,typed,readers,list,http,message,reader,typed,readers
BaseDefaultCodecs -> protected void extendObjectReaders(List<HttpMessageReader<?>> objectReaders);1526951444;Hook for client or server specific Object readers.;protected void extendObjectReaders(List<HttpMessageReader<?>> objectReaders) {_	};hook,for,client,or,server,specific,object,readers;protected,void,extend,object,readers,list,http,message,reader,object,readers
BaseDefaultCodecs -> protected void extendObjectReaders(List<HttpMessageReader<?>> objectReaders);1529721864;Hook for client or server specific Object readers.;protected void extendObjectReaders(List<HttpMessageReader<?>> objectReaders) {_	};hook,for,client,or,server,specific,object,readers;protected,void,extend,object,readers,list,http,message,reader,object,readers
BaseDefaultCodecs -> protected void extendObjectReaders(List<HttpMessageReader<?>> objectReaders);1531321803;Hook for client or server specific Object readers.;protected void extendObjectReaders(List<HttpMessageReader<?>> objectReaders) {_	};hook,for,client,or,server,specific,object,readers;protected,void,extend,object,readers,list,http,message,reader,object,readers
BaseDefaultCodecs -> protected void extendObjectReaders(List<HttpMessageReader<?>> objectReaders);1532474226;Hook for client or server specific Object readers.;protected void extendObjectReaders(List<HttpMessageReader<?>> objectReaders) {_	};hook,for,client,or,server,specific,object,readers;protected,void,extend,object,readers,list,http,message,reader,object,readers
BaseDefaultCodecs -> protected void extendObjectReaders(List<HttpMessageReader<?>> objectReaders);1532509782;Hook for client or server specific Object readers.;protected void extendObjectReaders(List<HttpMessageReader<?>> objectReaders) {_	};hook,for,client,or,server,specific,object,readers;protected,void,extend,object,readers,list,http,message,reader,object,readers
BaseDefaultCodecs -> protected void extendObjectReaders(List<HttpMessageReader<?>> objectReaders);1532520950;Hook for client or server specific Object readers.;protected void extendObjectReaders(List<HttpMessageReader<?>> objectReaders) {_	};hook,for,client,or,server,specific,object,readers;protected,void,extend,object,readers,list,http,message,reader,object,readers
BaseDefaultCodecs -> protected void extendObjectReaders(List<HttpMessageReader<?>> objectReaders);1542146216;Hook for client or server specific Object readers.;protected void extendObjectReaders(List<HttpMessageReader<?>> objectReaders) {_	};hook,for,client,or,server,specific,object,readers;protected,void,extend,object,readers,list,http,message,reader,object,readers
BaseDefaultCodecs -> List<HttpMessageWriter<?>> getCatchAllWriters();1526951444;Return writers that need to be at the end, after all others.;List<HttpMessageWriter<?>> getCatchAllWriters() {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageWriter<?>> result = new ArrayList<>()__		result.add(new EncoderHttpMessageWriter<>(CharSequenceEncoder.allMimeTypes()))__		return result__	};return,writers,that,need,to,be,at,the,end,after,all,others;list,http,message,writer,get,catch,all,writers,if,this,register,defaults,return,collections,empty,list,list,http,message,writer,result,new,array,list,result,add,new,encoder,http,message,writer,char,sequence,encoder,all,mime,types,return,result
BaseDefaultCodecs -> List<HttpMessageWriter<?>> getCatchAllWriters();1529721864;Return writers that need to be at the end, after all others.;List<HttpMessageWriter<?>> getCatchAllWriters() {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageWriter<?>> result = new ArrayList<>()__		result.add(new EncoderHttpMessageWriter<>(CharSequenceEncoder.allMimeTypes()))__		return result__	};return,writers,that,need,to,be,at,the,end,after,all,others;list,http,message,writer,get,catch,all,writers,if,this,register,defaults,return,collections,empty,list,list,http,message,writer,result,new,array,list,result,add,new,encoder,http,message,writer,char,sequence,encoder,all,mime,types,return,result
BaseDefaultCodecs -> List<HttpMessageWriter<?>> getCatchAllWriters();1531321803;Return writers that need to be at the end, after all others.;List<HttpMessageWriter<?>> getCatchAllWriters() {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageWriter<?>> result = new ArrayList<>()__		result.add(new EncoderHttpMessageWriter<>(CharSequenceEncoder.allMimeTypes()))__		return result__	};return,writers,that,need,to,be,at,the,end,after,all,others;list,http,message,writer,get,catch,all,writers,if,this,register,defaults,return,collections,empty,list,list,http,message,writer,result,new,array,list,result,add,new,encoder,http,message,writer,char,sequence,encoder,all,mime,types,return,result
BaseDefaultCodecs -> List<HttpMessageWriter<?>> getCatchAllWriters();1532474226;Return writers that need to be at the end, after all others.;List<HttpMessageWriter<?>> getCatchAllWriters() {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageWriter<?>> result = new ArrayList<>()__		result.add(new EncoderHttpMessageWriter<>(CharSequenceEncoder.allMimeTypes()))__		return result__	};return,writers,that,need,to,be,at,the,end,after,all,others;list,http,message,writer,get,catch,all,writers,if,this,register,defaults,return,collections,empty,list,list,http,message,writer,result,new,array,list,result,add,new,encoder,http,message,writer,char,sequence,encoder,all,mime,types,return,result
BaseDefaultCodecs -> List<HttpMessageWriter<?>> getCatchAllWriters();1532509782;Return writers that need to be at the end, after all others.;List<HttpMessageWriter<?>> getCatchAllWriters() {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageWriter<?>> result = new ArrayList<>()__		result.add(new EncoderHttpMessageWriter<>(CharSequenceEncoder.allMimeTypes()))__		return result__	};return,writers,that,need,to,be,at,the,end,after,all,others;list,http,message,writer,get,catch,all,writers,if,this,register,defaults,return,collections,empty,list,list,http,message,writer,result,new,array,list,result,add,new,encoder,http,message,writer,char,sequence,encoder,all,mime,types,return,result
BaseDefaultCodecs -> List<HttpMessageWriter<?>> getCatchAllWriters();1532520950;Return writers that need to be at the end, after all others.;List<HttpMessageWriter<?>> getCatchAllWriters() {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageWriter<?>> result = new ArrayList<>()__		result.add(new EncoderHttpMessageWriter<>(CharSequenceEncoder.allMimeTypes()))__		return result__	};return,writers,that,need,to,be,at,the,end,after,all,others;list,http,message,writer,get,catch,all,writers,if,this,register,defaults,return,collections,empty,list,list,http,message,writer,result,new,array,list,result,add,new,encoder,http,message,writer,char,sequence,encoder,all,mime,types,return,result
BaseDefaultCodecs -> List<HttpMessageWriter<?>> getCatchAllWriters();1542146216;Return writers that need to be at the end, after all others.;List<HttpMessageWriter<?>> getCatchAllWriters() {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageWriter<?>> result = new ArrayList<>()__		result.add(new EncoderHttpMessageWriter<>(CharSequenceEncoder.allMimeTypes()))__		return result__	};return,writers,that,need,to,be,at,the,end,after,all,others;list,http,message,writer,get,catch,all,writers,if,this,register,defaults,return,collections,empty,list,list,http,message,writer,result,new,array,list,result,add,new,encoder,http,message,writer,char,sequence,encoder,all,mime,types,return,result
BaseDefaultCodecs -> final List<HttpMessageReader<?>> getCatchAllReaders();1526951444;Return readers that need to be at the end, after all others.;final List<HttpMessageReader<?>> getCatchAllReaders() {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageReader<?>> result = new ArrayList<>()__		result.add(new DecoderHttpMessageReader<>(StringDecoder.allMimeTypes()))__		return result__	};return,readers,that,need,to,be,at,the,end,after,all,others;final,list,http,message,reader,get,catch,all,readers,if,this,register,defaults,return,collections,empty,list,list,http,message,reader,result,new,array,list,result,add,new,decoder,http,message,reader,string,decoder,all,mime,types,return,result
BaseDefaultCodecs -> final List<HttpMessageReader<?>> getCatchAllReaders();1529721864;Return readers that need to be at the end, after all others.;final List<HttpMessageReader<?>> getCatchAllReaders() {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageReader<?>> result = new ArrayList<>()__		result.add(new DecoderHttpMessageReader<>(StringDecoder.allMimeTypes()))__		return result__	};return,readers,that,need,to,be,at,the,end,after,all,others;final,list,http,message,reader,get,catch,all,readers,if,this,register,defaults,return,collections,empty,list,list,http,message,reader,result,new,array,list,result,add,new,decoder,http,message,reader,string,decoder,all,mime,types,return,result
BaseDefaultCodecs -> final List<HttpMessageReader<?>> getCatchAllReaders();1531321803;Return readers that need to be at the end, after all others.;final List<HttpMessageReader<?>> getCatchAllReaders() {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageReader<?>> result = new ArrayList<>()__		result.add(new DecoderHttpMessageReader<>(StringDecoder.allMimeTypes()))__		return result__	};return,readers,that,need,to,be,at,the,end,after,all,others;final,list,http,message,reader,get,catch,all,readers,if,this,register,defaults,return,collections,empty,list,list,http,message,reader,result,new,array,list,result,add,new,decoder,http,message,reader,string,decoder,all,mime,types,return,result
BaseDefaultCodecs -> final List<HttpMessageReader<?>> getCatchAllReaders();1532474226;Return readers that need to be at the end, after all others.;final List<HttpMessageReader<?>> getCatchAllReaders() {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageReader<?>> result = new ArrayList<>()__		result.add(new DecoderHttpMessageReader<>(StringDecoder.allMimeTypes()))__		return result__	};return,readers,that,need,to,be,at,the,end,after,all,others;final,list,http,message,reader,get,catch,all,readers,if,this,register,defaults,return,collections,empty,list,list,http,message,reader,result,new,array,list,result,add,new,decoder,http,message,reader,string,decoder,all,mime,types,return,result
BaseDefaultCodecs -> final List<HttpMessageReader<?>> getCatchAllReaders();1532509782;Return readers that need to be at the end, after all others.;final List<HttpMessageReader<?>> getCatchAllReaders() {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageReader<?>> result = new ArrayList<>()__		result.add(new DecoderHttpMessageReader<>(StringDecoder.allMimeTypes()))__		return result__	};return,readers,that,need,to,be,at,the,end,after,all,others;final,list,http,message,reader,get,catch,all,readers,if,this,register,defaults,return,collections,empty,list,list,http,message,reader,result,new,array,list,result,add,new,decoder,http,message,reader,string,decoder,all,mime,types,return,result
BaseDefaultCodecs -> final List<HttpMessageReader<?>> getCatchAllReaders();1532520950;Return readers that need to be at the end, after all others.;final List<HttpMessageReader<?>> getCatchAllReaders() {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageReader<?>> result = new ArrayList<>()__		result.add(new DecoderHttpMessageReader<>(StringDecoder.allMimeTypes()))__		return result__	};return,readers,that,need,to,be,at,the,end,after,all,others;final,list,http,message,reader,get,catch,all,readers,if,this,register,defaults,return,collections,empty,list,list,http,message,reader,result,new,array,list,result,add,new,decoder,http,message,reader,string,decoder,all,mime,types,return,result
BaseDefaultCodecs -> final List<HttpMessageReader<?>> getCatchAllReaders();1542146216;Return readers that need to be at the end, after all others.;final List<HttpMessageReader<?>> getCatchAllReaders() {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageReader<?>> result = new ArrayList<>()__		result.add(new DecoderHttpMessageReader<>(StringDecoder.allMimeTypes()))__		return result__	};return,readers,that,need,to,be,at,the,end,after,all,others;final,list,http,message,reader,get,catch,all,readers,if,this,register,defaults,return,collections,empty,list,list,http,message,reader,result,new,array,list,result,add,new,decoder,http,message,reader,string,decoder,all,mime,types,return,result
BaseDefaultCodecs -> protected void extendTypedWriters(List<HttpMessageWriter<?>> typedWriters);1526951444;Hook for client or server specific typed writers.;protected void extendTypedWriters(List<HttpMessageWriter<?>> typedWriters) {_	};hook,for,client,or,server,specific,typed,writers;protected,void,extend,typed,writers,list,http,message,writer,typed,writers
BaseDefaultCodecs -> protected void extendTypedWriters(List<HttpMessageWriter<?>> typedWriters);1529721864;Hook for client or server specific typed writers.;protected void extendTypedWriters(List<HttpMessageWriter<?>> typedWriters) {_	};hook,for,client,or,server,specific,typed,writers;protected,void,extend,typed,writers,list,http,message,writer,typed,writers
BaseDefaultCodecs -> protected void extendTypedWriters(List<HttpMessageWriter<?>> typedWriters);1531321803;Hook for client or server specific typed writers.;protected void extendTypedWriters(List<HttpMessageWriter<?>> typedWriters) {_	};hook,for,client,or,server,specific,typed,writers;protected,void,extend,typed,writers,list,http,message,writer,typed,writers
BaseDefaultCodecs -> protected void extendTypedWriters(List<HttpMessageWriter<?>> typedWriters);1532474226;Hook for client or server specific typed writers.;protected void extendTypedWriters(List<HttpMessageWriter<?>> typedWriters) {_	};hook,for,client,or,server,specific,typed,writers;protected,void,extend,typed,writers,list,http,message,writer,typed,writers
BaseDefaultCodecs -> protected void extendTypedWriters(List<HttpMessageWriter<?>> typedWriters);1532509782;Hook for client or server specific typed writers.;protected void extendTypedWriters(List<HttpMessageWriter<?>> typedWriters) {_	};hook,for,client,or,server,specific,typed,writers;protected,void,extend,typed,writers,list,http,message,writer,typed,writers
BaseDefaultCodecs -> protected void extendTypedWriters(List<HttpMessageWriter<?>> typedWriters);1532520950;Hook for client or server specific typed writers.;protected void extendTypedWriters(List<HttpMessageWriter<?>> typedWriters) {_	};hook,for,client,or,server,specific,typed,writers;protected,void,extend,typed,writers,list,http,message,writer,typed,writers
BaseDefaultCodecs -> protected void extendTypedWriters(List<HttpMessageWriter<?>> typedWriters);1542146216;Hook for client or server specific typed writers.;protected void extendTypedWriters(List<HttpMessageWriter<?>> typedWriters) {_	};hook,for,client,or,server,specific,typed,writers;protected,void,extend,typed,writers,list,http,message,writer,typed,writers
BaseDefaultCodecs -> final List<HttpMessageWriter<?>> getObjectWriters(boolean forMultipart);1526951444;Return Object writers (JSON, XML, SSE)._@param forMultipart whether to returns writers for general use ("false"),_or for multipart requests only ("true"). Generally the two sets are the_same except for the multipart writer itself.;final List<HttpMessageWriter<?>> getObjectWriters(boolean forMultipart) {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageWriter<?>> writers = new ArrayList<>()__		if (jackson2Present) {_			writers.add(new EncoderHttpMessageWriter<>(getJackson2JsonEncoder()))__		}_		if (jackson2SmilePresent) {_			writers.add(new EncoderHttpMessageWriter<>(new Jackson2SmileEncoder()))__		}_		if (jaxb2Present) {_			writers.add(new EncoderHttpMessageWriter<>(new Jaxb2XmlEncoder()))__		}_		_		if (!forMultipart) {_			extendObjectWriters(writers)__		}_		return writers__	};return,object,writers,json,xml,sse,param,for,multipart,whether,to,returns,writers,for,general,use,false,or,for,multipart,requests,only,true,generally,the,two,sets,are,the,same,except,for,the,multipart,writer,itself;final,list,http,message,writer,get,object,writers,boolean,for,multipart,if,this,register,defaults,return,collections,empty,list,list,http,message,writer,writers,new,array,list,if,jackson2present,writers,add,new,encoder,http,message,writer,get,jackson2json,encoder,if,jackson2smile,present,writers,add,new,encoder,http,message,writer,new,jackson2smile,encoder,if,jaxb2present,writers,add,new,encoder,http,message,writer,new,jaxb2xml,encoder,if,for,multipart,extend,object,writers,writers,return,writers
BaseDefaultCodecs -> final List<HttpMessageWriter<?>> getObjectWriters(boolean forMultipart);1529721864;Return Object writers (JSON, XML, SSE)._@param forMultipart whether to returns writers for general use ("false"),_or for multipart requests only ("true"). Generally the two sets are the_same except for the multipart writer itself.;final List<HttpMessageWriter<?>> getObjectWriters(boolean forMultipart) {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageWriter<?>> writers = new ArrayList<>()__		if (jackson2Present) {_			writers.add(new EncoderHttpMessageWriter<>(getJackson2JsonEncoder()))__		}_		if (jackson2SmilePresent) {_			writers.add(new EncoderHttpMessageWriter<>(new Jackson2SmileEncoder()))__		}_		if (jaxb2Present) {_			writers.add(new EncoderHttpMessageWriter<>(new Jaxb2XmlEncoder()))__		}_		_		if (!forMultipart) {_			extendObjectWriters(writers)__		}_		return writers__	};return,object,writers,json,xml,sse,param,for,multipart,whether,to,returns,writers,for,general,use,false,or,for,multipart,requests,only,true,generally,the,two,sets,are,the,same,except,for,the,multipart,writer,itself;final,list,http,message,writer,get,object,writers,boolean,for,multipart,if,this,register,defaults,return,collections,empty,list,list,http,message,writer,writers,new,array,list,if,jackson2present,writers,add,new,encoder,http,message,writer,get,jackson2json,encoder,if,jackson2smile,present,writers,add,new,encoder,http,message,writer,new,jackson2smile,encoder,if,jaxb2present,writers,add,new,encoder,http,message,writer,new,jaxb2xml,encoder,if,for,multipart,extend,object,writers,writers,return,writers
BaseDefaultCodecs -> final List<HttpMessageWriter<?>> getObjectWriters(boolean forMultipart);1531321803;Return Object writers (JSON, XML, SSE)._@param forMultipart whether to returns writers for general use ("false"),_or for multipart requests only ("true"). Generally the two sets are the_same except for the multipart writer itself.;final List<HttpMessageWriter<?>> getObjectWriters(boolean forMultipart) {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageWriter<?>> writers = new ArrayList<>()__		if (jackson2Present) {_			writers.add(new EncoderHttpMessageWriter<>(getJackson2JsonEncoder()))__		}_		if (jackson2SmilePresent) {_			writers.add(new EncoderHttpMessageWriter<>(new Jackson2SmileEncoder()))__		}_		if (jaxb2Present) {_			writers.add(new EncoderHttpMessageWriter<>(new Jaxb2XmlEncoder()))__		}_		_		if (!forMultipart) {_			extendObjectWriters(writers)__		}_		return writers__	};return,object,writers,json,xml,sse,param,for,multipart,whether,to,returns,writers,for,general,use,false,or,for,multipart,requests,only,true,generally,the,two,sets,are,the,same,except,for,the,multipart,writer,itself;final,list,http,message,writer,get,object,writers,boolean,for,multipart,if,this,register,defaults,return,collections,empty,list,list,http,message,writer,writers,new,array,list,if,jackson2present,writers,add,new,encoder,http,message,writer,get,jackson2json,encoder,if,jackson2smile,present,writers,add,new,encoder,http,message,writer,new,jackson2smile,encoder,if,jaxb2present,writers,add,new,encoder,http,message,writer,new,jaxb2xml,encoder,if,for,multipart,extend,object,writers,writers,return,writers
BaseDefaultCodecs -> final List<HttpMessageWriter<?>> getObjectWriters(boolean forMultipart);1532474226;Return Object writers (JSON, XML, SSE)._@param forMultipart whether to returns writers for general use ("false"),_or for multipart requests only ("true"). Generally the two sets are the_same except for the multipart writer itself.;final List<HttpMessageWriter<?>> getObjectWriters(boolean forMultipart) {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageWriter<?>> writers = new ArrayList<>()__		if (jackson2Present) {_			writers.add(new EncoderHttpMessageWriter<>(getJackson2JsonEncoder()))__		}_		if (jackson2SmilePresent) {_			writers.add(new EncoderHttpMessageWriter<>(new Jackson2SmileEncoder()))__		}_		if (jaxb2Present) {_			writers.add(new EncoderHttpMessageWriter<>(new Jaxb2XmlEncoder()))__		}_		_		if (!forMultipart) {_			extendObjectWriters(writers)__		}_		return writers__	};return,object,writers,json,xml,sse,param,for,multipart,whether,to,returns,writers,for,general,use,false,or,for,multipart,requests,only,true,generally,the,two,sets,are,the,same,except,for,the,multipart,writer,itself;final,list,http,message,writer,get,object,writers,boolean,for,multipart,if,this,register,defaults,return,collections,empty,list,list,http,message,writer,writers,new,array,list,if,jackson2present,writers,add,new,encoder,http,message,writer,get,jackson2json,encoder,if,jackson2smile,present,writers,add,new,encoder,http,message,writer,new,jackson2smile,encoder,if,jaxb2present,writers,add,new,encoder,http,message,writer,new,jaxb2xml,encoder,if,for,multipart,extend,object,writers,writers,return,writers
BaseDefaultCodecs -> final List<HttpMessageWriter<?>> getObjectWriters(boolean forMultipart);1532509782;Return Object writers (JSON, XML, SSE)._@param forMultipart whether to returns writers for general use ("false"),_or for multipart requests only ("true"). Generally the two sets are the_same except for the multipart writer itself.;final List<HttpMessageWriter<?>> getObjectWriters(boolean forMultipart) {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageWriter<?>> writers = new ArrayList<>()__		if (jackson2Present) {_			writers.add(new EncoderHttpMessageWriter<>(getJackson2JsonEncoder()))__		}_		if (jackson2SmilePresent) {_			writers.add(new EncoderHttpMessageWriter<>(new Jackson2SmileEncoder()))__		}_		if (jaxb2Present) {_			writers.add(new EncoderHttpMessageWriter<>(new Jaxb2XmlEncoder()))__		}_		_		if (!forMultipart) {_			extendObjectWriters(writers)__		}_		return writers__	};return,object,writers,json,xml,sse,param,for,multipart,whether,to,returns,writers,for,general,use,false,or,for,multipart,requests,only,true,generally,the,two,sets,are,the,same,except,for,the,multipart,writer,itself;final,list,http,message,writer,get,object,writers,boolean,for,multipart,if,this,register,defaults,return,collections,empty,list,list,http,message,writer,writers,new,array,list,if,jackson2present,writers,add,new,encoder,http,message,writer,get,jackson2json,encoder,if,jackson2smile,present,writers,add,new,encoder,http,message,writer,new,jackson2smile,encoder,if,jaxb2present,writers,add,new,encoder,http,message,writer,new,jaxb2xml,encoder,if,for,multipart,extend,object,writers,writers,return,writers
BaseDefaultCodecs -> final List<HttpMessageWriter<?>> getObjectWriters(boolean forMultipart);1532520950;Return Object writers (JSON, XML, SSE)._@param forMultipart whether to returns writers for general use ("false"),_or for multipart requests only ("true"). Generally the two sets are the_same except for the multipart writer itself.;final List<HttpMessageWriter<?>> getObjectWriters(boolean forMultipart) {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageWriter<?>> writers = new ArrayList<>()__		if (jackson2Present) {_			writers.add(new EncoderHttpMessageWriter<>(getJackson2JsonEncoder()))__		}_		if (jackson2SmilePresent) {_			writers.add(new EncoderHttpMessageWriter<>(new Jackson2SmileEncoder()))__		}_		if (jaxb2Present) {_			writers.add(new EncoderHttpMessageWriter<>(new Jaxb2XmlEncoder()))__		}_		_		if (!forMultipart) {_			extendObjectWriters(writers)__		}_		return writers__	};return,object,writers,json,xml,sse,param,for,multipart,whether,to,returns,writers,for,general,use,false,or,for,multipart,requests,only,true,generally,the,two,sets,are,the,same,except,for,the,multipart,writer,itself;final,list,http,message,writer,get,object,writers,boolean,for,multipart,if,this,register,defaults,return,collections,empty,list,list,http,message,writer,writers,new,array,list,if,jackson2present,writers,add,new,encoder,http,message,writer,get,jackson2json,encoder,if,jackson2smile,present,writers,add,new,encoder,http,message,writer,new,jackson2smile,encoder,if,jaxb2present,writers,add,new,encoder,http,message,writer,new,jaxb2xml,encoder,if,for,multipart,extend,object,writers,writers,return,writers
BaseDefaultCodecs -> final List<HttpMessageWriter<?>> getObjectWriters(boolean forMultipart);1542146216;Return Object writers (JSON, XML, SSE)._@param forMultipart whether to returns writers for general use ("false"),_or for multipart requests only ("true"). Generally the two sets are the_same except for the multipart writer itself.;final List<HttpMessageWriter<?>> getObjectWriters(boolean forMultipart) {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageWriter<?>> writers = new ArrayList<>()__		if (jackson2Present) {_			writers.add(new EncoderHttpMessageWriter<>(getJackson2JsonEncoder()))__		}_		if (jackson2SmilePresent) {_			writers.add(new EncoderHttpMessageWriter<>(new Jackson2SmileEncoder()))__		}_		if (jaxb2Present) {_			Encoder<?> encoder = this.jaxb2Encoder != null ? this.jaxb2Encoder : new Jaxb2XmlEncoder()__			writers.add(new EncoderHttpMessageWriter<>(encoder))__		}_		_		if (!forMultipart) {_			extendObjectWriters(writers)__		}_		return writers__	};return,object,writers,json,xml,sse,param,for,multipart,whether,to,returns,writers,for,general,use,false,or,for,multipart,requests,only,true,generally,the,two,sets,are,the,same,except,for,the,multipart,writer,itself;final,list,http,message,writer,get,object,writers,boolean,for,multipart,if,this,register,defaults,return,collections,empty,list,list,http,message,writer,writers,new,array,list,if,jackson2present,writers,add,new,encoder,http,message,writer,get,jackson2json,encoder,if,jackson2smile,present,writers,add,new,encoder,http,message,writer,new,jackson2smile,encoder,if,jaxb2present,encoder,encoder,this,jaxb2encoder,null,this,jaxb2encoder,new,jaxb2xml,encoder,writers,add,new,encoder,http,message,writer,encoder,if,for,multipart,extend,object,writers,writers,return,writers
BaseDefaultCodecs -> final List<HttpMessageReader<?>> getTypedReaders();1526951444;Return readers that support specific types.;final List<HttpMessageReader<?>> getTypedReaders() {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageReader<?>> readers = new ArrayList<>()__		readers.add(new DecoderHttpMessageReader<>(new ByteArrayDecoder()))__		readers.add(new DecoderHttpMessageReader<>(new ByteBufferDecoder()))__		readers.add(new DecoderHttpMessageReader<>(new DataBufferDecoder()))__		readers.add(new DecoderHttpMessageReader<>(new ResourceDecoder()))__		readers.add(new DecoderHttpMessageReader<>(StringDecoder.textPlainOnly()))__		readers.add(new FormHttpMessageReader())__		extendTypedReaders(readers)__		return readers__	};return,readers,that,support,specific,types;final,list,http,message,reader,get,typed,readers,if,this,register,defaults,return,collections,empty,list,list,http,message,reader,readers,new,array,list,readers,add,new,decoder,http,message,reader,new,byte,array,decoder,readers,add,new,decoder,http,message,reader,new,byte,buffer,decoder,readers,add,new,decoder,http,message,reader,new,data,buffer,decoder,readers,add,new,decoder,http,message,reader,new,resource,decoder,readers,add,new,decoder,http,message,reader,string,decoder,text,plain,only,readers,add,new,form,http,message,reader,extend,typed,readers,readers,return,readers
BaseDefaultCodecs -> final List<HttpMessageReader<?>> getTypedReaders();1529721864;Return readers that support specific types.;final List<HttpMessageReader<?>> getTypedReaders() {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageReader<?>> readers = new ArrayList<>()__		readers.add(new DecoderHttpMessageReader<>(new ByteArrayDecoder()))__		readers.add(new DecoderHttpMessageReader<>(new ByteBufferDecoder()))__		readers.add(new DecoderHttpMessageReader<>(new DataBufferDecoder()))__		readers.add(new DecoderHttpMessageReader<>(new ResourceDecoder()))__		readers.add(new DecoderHttpMessageReader<>(StringDecoder.textPlainOnly()))___		FormHttpMessageReader formReader = new FormHttpMessageReader()__		formReader.setDisableLoggingRequestDetails(this.disableLoggingRequestDetails)__		readers.add(formReader)___		extendTypedReaders(readers)___		return readers__	};return,readers,that,support,specific,types;final,list,http,message,reader,get,typed,readers,if,this,register,defaults,return,collections,empty,list,list,http,message,reader,readers,new,array,list,readers,add,new,decoder,http,message,reader,new,byte,array,decoder,readers,add,new,decoder,http,message,reader,new,byte,buffer,decoder,readers,add,new,decoder,http,message,reader,new,data,buffer,decoder,readers,add,new,decoder,http,message,reader,new,resource,decoder,readers,add,new,decoder,http,message,reader,string,decoder,text,plain,only,form,http,message,reader,form,reader,new,form,http,message,reader,form,reader,set,disable,logging,request,details,this,disable,logging,request,details,readers,add,form,reader,extend,typed,readers,readers,return,readers
BaseDefaultCodecs -> final List<HttpMessageReader<?>> getTypedReaders();1531321803;Return readers that support specific types.;final List<HttpMessageReader<?>> getTypedReaders() {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageReader<?>> readers = new ArrayList<>()__		readers.add(new DecoderHttpMessageReader<>(new ByteArrayDecoder()))__		readers.add(new DecoderHttpMessageReader<>(new ByteBufferDecoder()))__		readers.add(new DecoderHttpMessageReader<>(new DataBufferDecoder()))__		readers.add(new DecoderHttpMessageReader<>(new ResourceDecoder()))__		readers.add(new DecoderHttpMessageReader<>(StringDecoder.textPlainOnly()))___		FormHttpMessageReader formReader = new FormHttpMessageReader()__		formReader.setEnableLoggingRequestDetails(this.enableLoggingRequestDetails)__		readers.add(formReader)___		extendTypedReaders(readers)___		return readers__	};return,readers,that,support,specific,types;final,list,http,message,reader,get,typed,readers,if,this,register,defaults,return,collections,empty,list,list,http,message,reader,readers,new,array,list,readers,add,new,decoder,http,message,reader,new,byte,array,decoder,readers,add,new,decoder,http,message,reader,new,byte,buffer,decoder,readers,add,new,decoder,http,message,reader,new,data,buffer,decoder,readers,add,new,decoder,http,message,reader,new,resource,decoder,readers,add,new,decoder,http,message,reader,string,decoder,text,plain,only,form,http,message,reader,form,reader,new,form,http,message,reader,form,reader,set,enable,logging,request,details,this,enable,logging,request,details,readers,add,form,reader,extend,typed,readers,readers,return,readers
BaseDefaultCodecs -> final List<HttpMessageReader<?>> getTypedReaders();1532474226;Return readers that support specific types.;final List<HttpMessageReader<?>> getTypedReaders() {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageReader<?>> readers = new ArrayList<>()__		readers.add(new DecoderHttpMessageReader<>(new ByteArrayDecoder()))__		readers.add(new DecoderHttpMessageReader<>(new ByteBufferDecoder()))__		readers.add(new DecoderHttpMessageReader<>(new DataBufferDecoder()))__		readers.add(new DecoderHttpMessageReader<>(new ResourceDecoder()))__		readers.add(new DecoderHttpMessageReader<>(StringDecoder.textPlainOnly()))__		if (protobufPresent) {_			readers.add(new DecoderHttpMessageReader<>(getProtobufDecoder()))__		}__		FormHttpMessageReader formReader = new FormHttpMessageReader()__		formReader.setEnableLoggingRequestDetails(this.enableLoggingRequestDetails)__		readers.add(formReader)___		extendTypedReaders(readers)___		return readers__	};return,readers,that,support,specific,types;final,list,http,message,reader,get,typed,readers,if,this,register,defaults,return,collections,empty,list,list,http,message,reader,readers,new,array,list,readers,add,new,decoder,http,message,reader,new,byte,array,decoder,readers,add,new,decoder,http,message,reader,new,byte,buffer,decoder,readers,add,new,decoder,http,message,reader,new,data,buffer,decoder,readers,add,new,decoder,http,message,reader,new,resource,decoder,readers,add,new,decoder,http,message,reader,string,decoder,text,plain,only,if,protobuf,present,readers,add,new,decoder,http,message,reader,get,protobuf,decoder,form,http,message,reader,form,reader,new,form,http,message,reader,form,reader,set,enable,logging,request,details,this,enable,logging,request,details,readers,add,form,reader,extend,typed,readers,readers,return,readers
BaseDefaultCodecs -> final List<HttpMessageReader<?>> getTypedReaders();1532509782;Return readers that support specific types.;final List<HttpMessageReader<?>> getTypedReaders() {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageReader<?>> readers = new ArrayList<>()__		readers.add(new DecoderHttpMessageReader<>(new ByteArrayDecoder()))__		readers.add(new DecoderHttpMessageReader<>(new ByteBufferDecoder()))__		readers.add(new DecoderHttpMessageReader<>(new DataBufferDecoder()))__		readers.add(new DecoderHttpMessageReader<>(new ResourceDecoder()))__		readers.add(new DecoderHttpMessageReader<>(StringDecoder.textPlainOnly()))__		if (protobufPresent) {_			readers.add(new DecoderHttpMessageReader<>(getProtobufDecoder()))__		}__		FormHttpMessageReader formReader = new FormHttpMessageReader()__		formReader.setEnableLoggingRequestDetails(this.enableLoggingRequestDetails)__		readers.add(formReader)___		extendTypedReaders(readers)___		return readers__	};return,readers,that,support,specific,types;final,list,http,message,reader,get,typed,readers,if,this,register,defaults,return,collections,empty,list,list,http,message,reader,readers,new,array,list,readers,add,new,decoder,http,message,reader,new,byte,array,decoder,readers,add,new,decoder,http,message,reader,new,byte,buffer,decoder,readers,add,new,decoder,http,message,reader,new,data,buffer,decoder,readers,add,new,decoder,http,message,reader,new,resource,decoder,readers,add,new,decoder,http,message,reader,string,decoder,text,plain,only,if,protobuf,present,readers,add,new,decoder,http,message,reader,get,protobuf,decoder,form,http,message,reader,form,reader,new,form,http,message,reader,form,reader,set,enable,logging,request,details,this,enable,logging,request,details,readers,add,form,reader,extend,typed,readers,readers,return,readers
BaseDefaultCodecs -> final List<HttpMessageReader<?>> getTypedReaders();1532520950;Return readers that support specific types.;final List<HttpMessageReader<?>> getTypedReaders() {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageReader<?>> readers = new ArrayList<>()__		readers.add(new DecoderHttpMessageReader<>(new ByteArrayDecoder()))__		readers.add(new DecoderHttpMessageReader<>(new ByteBufferDecoder()))__		readers.add(new DecoderHttpMessageReader<>(new DataBufferDecoder()))__		readers.add(new DecoderHttpMessageReader<>(new ResourceDecoder()))__		readers.add(new DecoderHttpMessageReader<>(StringDecoder.textPlainOnly()))__		if (protobufPresent) {_			readers.add(new DecoderHttpMessageReader<>(getProtobufDecoder()))__		}__		FormHttpMessageReader formReader = new FormHttpMessageReader()__		formReader.setEnableLoggingRequestDetails(this.enableLoggingRequestDetails)__		readers.add(formReader)___		extendTypedReaders(readers)___		return readers__	};return,readers,that,support,specific,types;final,list,http,message,reader,get,typed,readers,if,this,register,defaults,return,collections,empty,list,list,http,message,reader,readers,new,array,list,readers,add,new,decoder,http,message,reader,new,byte,array,decoder,readers,add,new,decoder,http,message,reader,new,byte,buffer,decoder,readers,add,new,decoder,http,message,reader,new,data,buffer,decoder,readers,add,new,decoder,http,message,reader,new,resource,decoder,readers,add,new,decoder,http,message,reader,string,decoder,text,plain,only,if,protobuf,present,readers,add,new,decoder,http,message,reader,get,protobuf,decoder,form,http,message,reader,form,reader,new,form,http,message,reader,form,reader,set,enable,logging,request,details,this,enable,logging,request,details,readers,add,form,reader,extend,typed,readers,readers,return,readers
BaseDefaultCodecs -> final List<HttpMessageReader<?>> getTypedReaders();1542146216;Return readers that support specific types.;final List<HttpMessageReader<?>> getTypedReaders() {_		if (!this.registerDefaults) {_			return Collections.emptyList()__		}_		List<HttpMessageReader<?>> readers = new ArrayList<>()__		readers.add(new DecoderHttpMessageReader<>(new ByteArrayDecoder()))__		readers.add(new DecoderHttpMessageReader<>(new ByteBufferDecoder()))__		readers.add(new DecoderHttpMessageReader<>(new DataBufferDecoder()))__		readers.add(new DecoderHttpMessageReader<>(new ResourceDecoder()))__		readers.add(new DecoderHttpMessageReader<>(StringDecoder.textPlainOnly()))__		if (protobufPresent) {_			Decoder<?> decoder = this.protobufDecoder != null ? this.protobufDecoder : new ProtobufDecoder()__			readers.add(new DecoderHttpMessageReader<>(decoder))__		}__		FormHttpMessageReader formReader = new FormHttpMessageReader()__		formReader.setEnableLoggingRequestDetails(this.enableLoggingRequestDetails)__		readers.add(formReader)___		extendTypedReaders(readers)___		return readers__	};return,readers,that,support,specific,types;final,list,http,message,reader,get,typed,readers,if,this,register,defaults,return,collections,empty,list,list,http,message,reader,readers,new,array,list,readers,add,new,decoder,http,message,reader,new,byte,array,decoder,readers,add,new,decoder,http,message,reader,new,byte,buffer,decoder,readers,add,new,decoder,http,message,reader,new,data,buffer,decoder,readers,add,new,decoder,http,message,reader,new,resource,decoder,readers,add,new,decoder,http,message,reader,string,decoder,text,plain,only,if,protobuf,present,decoder,decoder,this,protobuf,decoder,null,this,protobuf,decoder,new,protobuf,decoder,readers,add,new,decoder,http,message,reader,decoder,form,http,message,reader,form,reader,new,form,http,message,reader,form,reader,set,enable,logging,request,details,this,enable,logging,request,details,readers,add,form,reader,extend,typed,readers,readers,return,readers
