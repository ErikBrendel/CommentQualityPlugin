commented;modifiers;parameterAmount;loc;comment;code
true;public;1;3;/**  * Specify a prefix to use for the attribute names in the backend session.  * <p>Default is to use no prefix, storing the session attributes with the  * same name as in the model.  */ ;/**  * Specify a prefix to use for the attribute names in the backend session.  * <p>Default is to use no prefix, storing the session attributes with the  * same name as in the model.  */ public void setAttributeNamePrefix(@Nullable String attributeNamePrefix) {     this.attributeNamePrefix = (attributeNamePrefix != null ? attributeNamePrefix : ""). }
false;public;3;8;;@Override public void storeAttribute(WebRequest request, String attributeName, Object attributeValue) {     Assert.notNull(request, "WebRequest must not be null").     Assert.notNull(attributeName, "Attribute name must not be null").     Assert.notNull(attributeValue, "Attribute value must not be null").     String storeAttributeName = getAttributeNameInSession(request, attributeName).     request.setAttribute(storeAttributeName, attributeValue, WebRequest.SCOPE_SESSION). }
false;public;2;8;;@Override @Nullable public Object retrieveAttribute(WebRequest request, String attributeName) {     Assert.notNull(request, "WebRequest must not be null").     Assert.notNull(attributeName, "Attribute name must not be null").     String storeAttributeName = getAttributeNameInSession(request, attributeName).     return request.getAttribute(storeAttributeName, WebRequest.SCOPE_SESSION). }
false;public;2;7;;@Override public void cleanupAttribute(WebRequest request, String attributeName) {     Assert.notNull(request, "WebRequest must not be null").     Assert.notNull(attributeName, "Attribute name must not be null").     String storeAttributeName = getAttributeNameInSession(request, attributeName).     request.removeAttribute(storeAttributeName, WebRequest.SCOPE_SESSION). }
true;protected;2;3;/**  * Calculate the attribute name in the backend session.  * <p>The default implementation simply prepends the configured  * {@link #setAttributeNamePrefix "attributeNamePrefix"}, if any.  * @param request the current request  * @param attributeName the name of the attribute  * @return the attribute name in the backend session  */ ;/**  * Calculate the attribute name in the backend session.  * <p>The default implementation simply prepends the configured  * {@link #setAttributeNamePrefix "attributeNamePrefix"}, if any.  * @param request the current request  * @param attributeName the name of the attribute  * @return the attribute name in the backend session  */ protected String getAttributeNameInSession(WebRequest request, String attributeName) {     return this.attributeNamePrefix + attributeName. }
