commented;modifiers;parameterAmount;loc;comment;code
true;;1;1;/**  * Resolve the current locale context via the given exchange.  * <p>The returned context may be a  * {@link org.springframework.context.i18n.TimeZoneAwareLocaleContext},  * containing a locale with associated time zone information.  * Simply apply an {@code instanceof} check and downcast accordingly.  * <p>Custom resolver implementations may also return extra settings in  * the returned context, which again can be accessed through downcasting.  * @param exchange current server exchange  * @return the current locale context (never {@code null})  */ ;/**  * Resolve the current locale context via the given exchange.  * <p>The returned context may be a  * {@link org.springframework.context.i18n.TimeZoneAwareLocaleContext},  * containing a locale with associated time zone information.  * Simply apply an {@code instanceof} check and downcast accordingly.  * <p>Custom resolver implementations may also return extra settings in  * the returned context, which again can be accessed through downcasting.  * @param exchange current server exchange  * @return the current locale context (never {@code null})  */ LocaleContext resolveLocaleContext(ServerWebExchange exchange).
true;;2;1;/**  * Set the current locale context to the given one,  * potentially including a locale with associated time zone information.  * @param exchange current server exchange  * @param localeContext the new locale context, or {@code null} to clear the locale  * @throws UnsupportedOperationException if the LocaleResolver implementation  * does not support dynamic changing of the locale or time zone  * @see org.springframework.context.i18n.SimpleLocaleContext  * @see org.springframework.context.i18n.SimpleTimeZoneAwareLocaleContext  */ ;/**  * Set the current locale context to the given one,  * potentially including a locale with associated time zone information.  * @param exchange current server exchange  * @param localeContext the new locale context, or {@code null} to clear the locale  * @throws UnsupportedOperationException if the LocaleResolver implementation  * does not support dynamic changing of the locale or time zone  * @see org.springframework.context.i18n.SimpleLocaleContext  * @see org.springframework.context.i18n.SimpleTimeZoneAwareLocaleContext  */ void setLocaleContext(ServerWebExchange exchange, @Nullable LocaleContext localeContext).
