# id;timestamp;commentText;codeText;commentWords;codeWords
ReactorResourceFactory -> public void setLoopResources(@Nullable LoopResources loopResources);1534238971;Configure the {@link LoopResources} to use._<p>By default, initialized with {@link LoopResources#create(String)}._@param loopResources the loop resources to use;public void setLoopResources(@Nullable LoopResources loopResources) {_		this.loopResources = loopResources__	};configure,the,link,loop,resources,to,use,p,by,default,initialized,with,link,loop,resources,create,string,param,loop,resources,the,loop,resources,to,use;public,void,set,loop,resources,nullable,loop,resources,loop,resources,this,loop,resources,loop,resources
ReactorResourceFactory -> public void setLoopResources(@Nullable LoopResources loopResources);1534257257;Configure the {@link LoopResources} to use._<p>By default, initialized with {@link LoopResources#create(String)}._@param loopResources the loop resources to use;public void setLoopResources(@Nullable LoopResources loopResources) {_		this.loopResources = loopResources__	};configure,the,link,loop,resources,to,use,p,by,default,initialized,with,link,loop,resources,create,string,param,loop,resources,the,loop,resources,to,use;public,void,set,loop,resources,nullable,loop,resources,loop,resources,this,loop,resources,loop,resources
ReactorResourceFactory -> public void setLoopResources(@Nullable LoopResources loopResources);1534860988;Configure the {@link LoopResources} to use._<p>By default, initialized with {@link LoopResources#create(String)}._@param loopResources the loop resources to use;public void setLoopResources(@Nullable LoopResources loopResources) {_		this.loopResources = loopResources__	};configure,the,link,loop,resources,to,use,p,by,default,initialized,with,link,loop,resources,create,string,param,loop,resources,the,loop,resources,to,use;public,void,set,loop,resources,nullable,loop,resources,loop,resources,this,loop,resources,loop,resources
ReactorResourceFactory -> public void setLoopResources(@Nullable LoopResources loopResources);1536196624;Use this option when you want to provide an externally managed_{@link LoopResources} instance._@param loopResources the loop resources to use as is;public void setLoopResources(@Nullable LoopResources loopResources) {_		this.loopResources = loopResources__	};use,this,option,when,you,want,to,provide,an,externally,managed,link,loop,resources,instance,param,loop,resources,the,loop,resources,to,use,as,is;public,void,set,loop,resources,nullable,loop,resources,loop,resources,this,loop,resources,loop,resources
ReactorResourceFactory -> public void setLoopResources(@Nullable LoopResources loopResources);1536261361;Use this option when you want to provide an externally managed_{@link LoopResources} instance._@param loopResources the loop resources to use as is;public void setLoopResources(@Nullable LoopResources loopResources) {_		this.loopResources = loopResources__	};use,this,option,when,you,want,to,provide,an,externally,managed,link,loop,resources,instance,param,loop,resources,the,loop,resources,to,use,as,is;public,void,set,loop,resources,nullable,loop,resources,loop,resources,this,loop,resources,loop,resources
ReactorResourceFactory -> public void setLoopResourcesSupplier(@Nullable Supplier<LoopResources> supplier);1536196624;Use this option when you don't want to participate in global resources and_you want to customize the creation of the managed {@code LoopResources}._<p>By default, {@code LoopResources.create("reactor-http")} is used._<p>Note that this option is ignored if {@code userGlobalResources=false} or_{@link #setLoopResources(LoopResources)} is set._@param supplier the supplier to use;public void setLoopResourcesSupplier(@Nullable Supplier<LoopResources> supplier) {_		this.loopResourcesSupplier = supplier__	};use,this,option,when,you,don,t,want,to,participate,in,global,resources,and,you,want,to,customize,the,creation,of,the,managed,code,loop,resources,p,by,default,code,loop,resources,create,reactor,http,is,used,p,note,that,this,option,is,ignored,if,code,user,global,resources,false,or,link,set,loop,resources,loop,resources,is,set,param,supplier,the,supplier,to,use;public,void,set,loop,resources,supplier,nullable,supplier,loop,resources,supplier,this,loop,resources,supplier,supplier
ReactorResourceFactory -> public void setLoopResourcesSupplier(@Nullable Supplier<LoopResources> supplier);1536261361;Use this option when you don't want to participate in global resources and_you want to customize the creation of the managed {@code LoopResources}._<p>By default, {@code LoopResources.create("reactor-http")} is used._<p>Note that this option is ignored if {@code userGlobalResources=false} or_{@link #setLoopResources(LoopResources)} is set._@param supplier the supplier to use;public void setLoopResourcesSupplier(@Nullable Supplier<LoopResources> supplier) {_		this.loopResourcesSupplier = supplier__	};use,this,option,when,you,don,t,want,to,participate,in,global,resources,and,you,want,to,customize,the,creation,of,the,managed,code,loop,resources,p,by,default,code,loop,resources,create,reactor,http,is,used,p,note,that,this,option,is,ignored,if,code,user,global,resources,false,or,link,set,loop,resources,loop,resources,is,set,param,supplier,the,supplier,to,use;public,void,set,loop,resources,supplier,nullable,supplier,loop,resources,supplier,this,loop,resources,supplier,supplier
ReactorResourceFactory -> public void setConnectionProvider(@Nullable ConnectionProvider connectionProvider);1534238971;Configure the {@link ConnectionProvider} to use._<p>By default, initialized with {@link ConnectionProvider#elastic(String)}._@param connectionProvider the connection provider to use;public void setConnectionProvider(@Nullable ConnectionProvider connectionProvider) {_		this.connectionProvider = connectionProvider__	};configure,the,link,connection,provider,to,use,p,by,default,initialized,with,link,connection,provider,elastic,string,param,connection,provider,the,connection,provider,to,use;public,void,set,connection,provider,nullable,connection,provider,connection,provider,this,connection,provider,connection,provider
ReactorResourceFactory -> public void setConnectionProvider(@Nullable ConnectionProvider connectionProvider);1534257257;Configure the {@link ConnectionProvider} to use._<p>By default, initialized with {@link ConnectionProvider#elastic(String)}._@param connectionProvider the connection provider to use;public void setConnectionProvider(@Nullable ConnectionProvider connectionProvider) {_		this.connectionProvider = connectionProvider__	};configure,the,link,connection,provider,to,use,p,by,default,initialized,with,link,connection,provider,elastic,string,param,connection,provider,the,connection,provider,to,use;public,void,set,connection,provider,nullable,connection,provider,connection,provider,this,connection,provider,connection,provider
ReactorResourceFactory -> public void setConnectionProvider(@Nullable ConnectionProvider connectionProvider);1534860988;Configure the {@link ConnectionProvider} to use._<p>By default, initialized with {@link ConnectionProvider#elastic(String)}._@param connectionProvider the connection provider to use;public void setConnectionProvider(@Nullable ConnectionProvider connectionProvider) {_		this.connectionProvider = connectionProvider__	};configure,the,link,connection,provider,to,use,p,by,default,initialized,with,link,connection,provider,elastic,string,param,connection,provider,the,connection,provider,to,use;public,void,set,connection,provider,nullable,connection,provider,connection,provider,this,connection,provider,connection,provider
ReactorResourceFactory -> public void setConnectionProvider(@Nullable ConnectionProvider connectionProvider);1536196624;Use this option when you want to provide an externally managed_{@link ConnectionProvider} instance._@param connectionProvider the connection provider to use as is;public void setConnectionProvider(@Nullable ConnectionProvider connectionProvider) {_		this.connectionProvider = connectionProvider__	};use,this,option,when,you,want,to,provide,an,externally,managed,link,connection,provider,instance,param,connection,provider,the,connection,provider,to,use,as,is;public,void,set,connection,provider,nullable,connection,provider,connection,provider,this,connection,provider,connection,provider
ReactorResourceFactory -> public void setConnectionProvider(@Nullable ConnectionProvider connectionProvider);1536261361;Use this option when you want to provide an externally managed_{@link ConnectionProvider} instance._@param connectionProvider the connection provider to use as is;public void setConnectionProvider(@Nullable ConnectionProvider connectionProvider) {_		this.connectionProvider = connectionProvider__	};use,this,option,when,you,want,to,provide,an,externally,managed,link,connection,provider,instance,param,connection,provider,the,connection,provider,to,use,as,is;public,void,set,connection,provider,nullable,connection,provider,connection,provider,this,connection,provider,connection,provider
ReactorResourceFactory -> @Nullable 	public ConnectionProvider getConnectionProvider();1534238971;Return the configured {@link ConnectionProvider}.;@Nullable_	public ConnectionProvider getConnectionProvider() {_		return this.connectionProvider__	};return,the,configured,link,connection,provider;nullable,public,connection,provider,get,connection,provider,return,this,connection,provider
ReactorResourceFactory -> @Nullable 	public ConnectionProvider getConnectionProvider();1534257257;Return the configured {@link ConnectionProvider}.;@Nullable_	public ConnectionProvider getConnectionProvider() {_		return this.connectionProvider__	};return,the,configured,link,connection,provider;nullable,public,connection,provider,get,connection,provider,return,this,connection,provider
ReactorResourceFactory -> @Nullable 	public ConnectionProvider getConnectionProvider();1534860988;Return the configured {@link ConnectionProvider}.;@Nullable_	public ConnectionProvider getConnectionProvider() {_		return this.connectionProvider__	};return,the,configured,link,connection,provider;nullable,public,connection,provider,get,connection,provider,return,this,connection,provider
ReactorResourceFactory -> public void addGlobalResourcesConsumer(Consumer<HttpResources> consumer);1536196624;Add a Consumer for configuring the global Reactor Netty resources on_startup. When this option is used, {@link #setUseGlobalResources} is also_enabled._@param consumer the consumer to apply_@see #setUseGlobalResources(boolean);public void addGlobalResourcesConsumer(Consumer<HttpResources> consumer) {_		this.useGlobalResources = true__		this.globalResourcesConsumer = this.globalResourcesConsumer != null ?_				this.globalResourcesConsumer.andThen(consumer) : consumer__	};add,a,consumer,for,configuring,the,global,reactor,netty,resources,on,startup,when,this,option,is,used,link,set,use,global,resources,is,also,enabled,param,consumer,the,consumer,to,apply,see,set,use,global,resources,boolean;public,void,add,global,resources,consumer,consumer,http,resources,consumer,this,use,global,resources,true,this,global,resources,consumer,this,global,resources,consumer,null,this,global,resources,consumer,and,then,consumer,consumer
ReactorResourceFactory -> public void addGlobalResourcesConsumer(Consumer<HttpResources> consumer);1536261361;Add a Consumer for configuring the global Reactor Netty resources on_startup. When this option is used, {@link #setUseGlobalResources} is also_enabled._@param consumer the consumer to apply_@see #setUseGlobalResources(boolean);public void addGlobalResourcesConsumer(Consumer<HttpResources> consumer) {_		this.useGlobalResources = true__		this.globalResourcesConsumer = this.globalResourcesConsumer != null ?_				this.globalResourcesConsumer.andThen(consumer) : consumer__	};add,a,consumer,for,configuring,the,global,reactor,netty,resources,on,startup,when,this,option,is,used,link,set,use,global,resources,is,also,enabled,param,consumer,the,consumer,to,apply,see,set,use,global,resources,boolean;public,void,add,global,resources,consumer,consumer,http,resources,consumer,this,use,global,resources,true,this,global,resources,consumer,this,global,resources,consumer,null,this,global,resources,consumer,and,then,consumer,consumer
ReactorResourceFactory -> public void addGlobalResourcesConsumer(Consumer<HttpResources> consumer);1536317813;Add a Consumer for configuring the global Reactor Netty resources on_startup. When this option is used, {@link #setUseGlobalResources} is also_enabled._@param consumer the consumer to apply_@see #setUseGlobalResources(boolean);public void addGlobalResourcesConsumer(Consumer<HttpResources> consumer) {_		this.useGlobalResources = true__		this.globalResourcesConsumer = this.globalResourcesConsumer != null ?_				this.globalResourcesConsumer.andThen(consumer) : consumer__	};add,a,consumer,for,configuring,the,global,reactor,netty,resources,on,startup,when,this,option,is,used,link,set,use,global,resources,is,also,enabled,param,consumer,the,consumer,to,apply,see,set,use,global,resources,boolean;public,void,add,global,resources,consumer,consumer,http,resources,consumer,this,use,global,resources,true,this,global,resources,consumer,this,global,resources,consumer,null,this,global,resources,consumer,and,then,consumer,consumer
ReactorResourceFactory -> public boolean isGlobalResources();1534238971;Whether this factory exposes the global_{@link reactor.netty.http.HttpResources HttpResources} holder.;public boolean isGlobalResources() {_		return this.globalResources__	};whether,this,factory,exposes,the,global,link,reactor,netty,http,http,resources,http,resources,holder;public,boolean,is,global,resources,return,this,global,resources
ReactorResourceFactory -> public boolean isGlobalResources();1534257257;Whether this factory exposes the global_{@link reactor.netty.http.HttpResources HttpResources} holder.;public boolean isGlobalResources() {_		return this.globalResources__	};whether,this,factory,exposes,the,global,link,reactor,netty,http,http,resources,http,resources,holder;public,boolean,is,global,resources,return,this,global,resources
ReactorResourceFactory -> public boolean isGlobalResources();1534860988;Whether this factory exposes the global_{@link reactor.netty.http.HttpResources HttpResources} holder.;public boolean isGlobalResources() {_		return this.globalResources__	};whether,this,factory,exposes,the,global,link,reactor,netty,http,http,resources,http,resources,holder;public,boolean,is,global,resources,return,this,global,resources
ReactorResourceFactory -> public void setGlobalResources(boolean globalResources);1534238971;Whether to expose and manage the global Reactor Netty resources from the_{@link HttpResources} holder._<p>Default is "true" in which case this factory helps to configure and_shut down the global Reactor Netty resources within the lifecycle of a_Spring {@code ApplicationContext}._<p>If set to "false" then the factory creates and manages its own_{@link LoopResources} and {@link ConnectionProvider}, independent of the_global ones in the {@link HttpResources} holder._@param globalResources whether to expose and manage the global resources;public void setGlobalResources(boolean globalResources) {_		this.globalResources = globalResources__	};whether,to,expose,and,manage,the,global,reactor,netty,resources,from,the,link,http,resources,holder,p,default,is,true,in,which,case,this,factory,helps,to,configure,and,shut,down,the,global,reactor,netty,resources,within,the,lifecycle,of,a,spring,code,application,context,p,if,set,to,false,then,the,factory,creates,and,manages,its,own,link,loop,resources,and,link,connection,provider,independent,of,the,global,ones,in,the,link,http,resources,holder,param,global,resources,whether,to,expose,and,manage,the,global,resources;public,void,set,global,resources,boolean,global,resources,this,global,resources,global,resources
ReactorResourceFactory -> public void setGlobalResources(boolean globalResources);1534257257;Whether to expose and manage the global Reactor Netty resources from the_{@link HttpResources} holder._<p>Default is "true" in which case this factory helps to configure and_shut down the global Reactor Netty resources within the lifecycle of a_Spring {@code ApplicationContext}._<p>If set to "false" then the factory creates and manages its own_{@link LoopResources} and {@link ConnectionProvider}, independent of the_global ones in the {@link HttpResources} holder._@param globalResources whether to expose and manage the global resources;public void setGlobalResources(boolean globalResources) {_		this.globalResources = globalResources__	};whether,to,expose,and,manage,the,global,reactor,netty,resources,from,the,link,http,resources,holder,p,default,is,true,in,which,case,this,factory,helps,to,configure,and,shut,down,the,global,reactor,netty,resources,within,the,lifecycle,of,a,spring,code,application,context,p,if,set,to,false,then,the,factory,creates,and,manages,its,own,link,loop,resources,and,link,connection,provider,independent,of,the,global,ones,in,the,link,http,resources,holder,param,global,resources,whether,to,expose,and,manage,the,global,resources;public,void,set,global,resources,boolean,global,resources,this,global,resources,global,resources
ReactorResourceFactory -> public void setGlobalResources(boolean globalResources);1534860988;Whether to expose and manage the global Reactor Netty resources from the_{@link HttpResources} holder._<p>Default is "true" in which case this factory helps to configure and_shut down the global Reactor Netty resources within the lifecycle of a_Spring {@code ApplicationContext}._<p>If set to "false" then the factory creates and manages its own_{@link LoopResources} and {@link ConnectionProvider}, independent of the_global ones in the {@link HttpResources} holder._@param globalResources whether to expose and manage the global resources;public void setGlobalResources(boolean globalResources) {_		this.globalResources = globalResources__	};whether,to,expose,and,manage,the,global,reactor,netty,resources,from,the,link,http,resources,holder,p,default,is,true,in,which,case,this,factory,helps,to,configure,and,shut,down,the,global,reactor,netty,resources,within,the,lifecycle,of,a,spring,code,application,context,p,if,set,to,false,then,the,factory,creates,and,manages,its,own,link,loop,resources,and,link,connection,provider,independent,of,the,global,ones,in,the,link,http,resources,holder,param,global,resources,whether,to,expose,and,manage,the,global,resources;public,void,set,global,resources,boolean,global,resources,this,global,resources,global,resources
ReactorResourceFactory -> public String getThreadPrefix();1534238971;Return the configured prefix for event loop threads.;public String getThreadPrefix() {_		return this.threadPrefix__	};return,the,configured,prefix,for,event,loop,threads;public,string,get,thread,prefix,return,this,thread,prefix
ReactorResourceFactory -> public String getThreadPrefix();1534257257;Return the configured prefix for event loop threads.;public String getThreadPrefix() {_		return this.threadPrefix__	};return,the,configured,prefix,for,event,loop,threads;public,string,get,thread,prefix,return,this,thread,prefix
ReactorResourceFactory -> public String getThreadPrefix();1534860988;Return the configured prefix for event loop threads.;public String getThreadPrefix() {_		return this.threadPrefix__	};return,the,configured,prefix,for,event,loop,threads;public,string,get,thread,prefix,return,this,thread,prefix
ReactorResourceFactory -> public LoopResources getLoopResources();1536196624;Return the configured {@link LoopResources}.;public LoopResources getLoopResources() {_		Assert.notNull(this.loopResources, "LoopResources not initialized yet via InitializingBean.")__		return this.loopResources__	};return,the,configured,link,loop,resources;public,loop,resources,get,loop,resources,assert,not,null,this,loop,resources,loop,resources,not,initialized,yet,via,initializing,bean,return,this,loop,resources
ReactorResourceFactory -> public LoopResources getLoopResources();1536261361;Return the configured {@link LoopResources}.;public LoopResources getLoopResources() {_		Assert.notNull(this.loopResources, "LoopResources not initialized yet via InitializingBean.")__		return this.loopResources__	};return,the,configured,link,loop,resources;public,loop,resources,get,loop,resources,assert,not,null,this,loop,resources,loop,resources,not,initialized,yet,via,initializing,bean,return,this,loop,resources
ReactorResourceFactory -> public LoopResources getLoopResources();1536317813;Return the configured {@link LoopResources}.;public LoopResources getLoopResources() {_		Assert.state(this.loopResources != null, "LoopResources not initialized yet")__		return this.loopResources__	};return,the,configured,link,loop,resources;public,loop,resources,get,loop,resources,assert,state,this,loop,resources,null,loop,resources,not,initialized,yet,return,this,loop,resources
ReactorResourceFactory -> public boolean isUseGlobalResources();1536196624;Whether this factory exposes the global_{@link reactor.netty.http.HttpResources HttpResources} holder.;public boolean isUseGlobalResources() {_		return this.useGlobalResources__	};whether,this,factory,exposes,the,global,link,reactor,netty,http,http,resources,http,resources,holder;public,boolean,is,use,global,resources,return,this,use,global,resources
ReactorResourceFactory -> public boolean isUseGlobalResources();1536261361;Whether this factory exposes the global_{@link reactor.netty.http.HttpResources HttpResources} holder.;public boolean isUseGlobalResources() {_		return this.useGlobalResources__	};whether,this,factory,exposes,the,global,link,reactor,netty,http,http,resources,http,resources,holder;public,boolean,is,use,global,resources,return,this,use,global,resources
ReactorResourceFactory -> public boolean isUseGlobalResources();1536317813;Whether this factory exposes the global_{@link reactor.netty.http.HttpResources HttpResources} holder.;public boolean isUseGlobalResources() {_		return this.useGlobalResources__	};whether,this,factory,exposes,the,global,link,reactor,netty,http,http,resources,http,resources,holder;public,boolean,is,use,global,resources,return,this,use,global,resources
ReactorResourceFactory -> public void setThreadPrefix(String threadPrefix);1534238971;Configure the thread prefix to initialize {@link LoopResources} with. This_is used only when a {@link LoopResources} instance isn't_{@link #setLoopResources(LoopResources) provided}._<p>By default set to "reactor-http"._@param threadPrefix the thread prefix to use;public void setThreadPrefix(String threadPrefix) {_		Assert.notNull(threadPrefix, "Thread prefix is required")__		this.threadPrefix = threadPrefix__	};configure,the,thread,prefix,to,initialize,link,loop,resources,with,this,is,used,only,when,a,link,loop,resources,instance,isn,t,link,set,loop,resources,loop,resources,provided,p,by,default,set,to,reactor,http,param,thread,prefix,the,thread,prefix,to,use;public,void,set,thread,prefix,string,thread,prefix,assert,not,null,thread,prefix,thread,prefix,is,required,this,thread,prefix,thread,prefix
ReactorResourceFactory -> public void setThreadPrefix(String threadPrefix);1534257257;Configure the thread prefix to initialize {@link LoopResources} with. This_is used only when a {@link LoopResources} instance isn't_{@link #setLoopResources(LoopResources) provided}._<p>By default set to "reactor-http"._@param threadPrefix the thread prefix to use;public void setThreadPrefix(String threadPrefix) {_		Assert.notNull(threadPrefix, "Thread prefix is required")__		this.threadPrefix = threadPrefix__	};configure,the,thread,prefix,to,initialize,link,loop,resources,with,this,is,used,only,when,a,link,loop,resources,instance,isn,t,link,set,loop,resources,loop,resources,provided,p,by,default,set,to,reactor,http,param,thread,prefix,the,thread,prefix,to,use;public,void,set,thread,prefix,string,thread,prefix,assert,not,null,thread,prefix,thread,prefix,is,required,this,thread,prefix,thread,prefix
ReactorResourceFactory -> public void setThreadPrefix(String threadPrefix);1534860988;Configure the thread prefix to initialize {@link LoopResources} with. This_is used only when a {@link LoopResources} instance isn't_{@link #setLoopResources(LoopResources) provided}._<p>By default set to "reactor-http"._@param threadPrefix the thread prefix to use;public void setThreadPrefix(String threadPrefix) {_		Assert.notNull(threadPrefix, "Thread prefix is required")__		this.threadPrefix = threadPrefix__	};configure,the,thread,prefix,to,initialize,link,loop,resources,with,this,is,used,only,when,a,link,loop,resources,instance,isn,t,link,set,loop,resources,loop,resources,provided,p,by,default,set,to,reactor,http,param,thread,prefix,the,thread,prefix,to,use;public,void,set,thread,prefix,string,thread,prefix,assert,not,null,thread,prefix,thread,prefix,is,required,this,thread,prefix,thread,prefix
ReactorResourceFactory -> public void setConnectionProviderSupplier(@Nullable Supplier<ConnectionProvider> supplier);1536196624;Use this option when you don't want to participate in global resources and_you want to customize the creation of the managed {@code ConnectionProvider}._<p>By default, {@code ConnectionProvider.elastic("http")} is used._<p>Note that this option is ignored if {@code userGlobalResources=false} or_{@link #setConnectionProvider(ConnectionProvider)} is set._@param supplier the supplier to use;public void setConnectionProviderSupplier(@Nullable Supplier<ConnectionProvider> supplier) {_		this.connectionProviderSupplier = supplier__	};use,this,option,when,you,don,t,want,to,participate,in,global,resources,and,you,want,to,customize,the,creation,of,the,managed,code,connection,provider,p,by,default,code,connection,provider,elastic,http,is,used,p,note,that,this,option,is,ignored,if,code,user,global,resources,false,or,link,set,connection,provider,connection,provider,is,set,param,supplier,the,supplier,to,use;public,void,set,connection,provider,supplier,nullable,supplier,connection,provider,supplier,this,connection,provider,supplier,supplier
ReactorResourceFactory -> public void setConnectionProviderSupplier(@Nullable Supplier<ConnectionProvider> supplier);1536261361;Use this option when you don't want to participate in global resources and_you want to customize the creation of the managed {@code ConnectionProvider}._<p>By default, {@code ConnectionProvider.elastic("http")} is used._<p>Note that this option is ignored if {@code userGlobalResources=false} or_{@link #setConnectionProvider(ConnectionProvider)} is set._@param supplier the supplier to use;public void setConnectionProviderSupplier(@Nullable Supplier<ConnectionProvider> supplier) {_		this.connectionProviderSupplier = supplier__	};use,this,option,when,you,don,t,want,to,participate,in,global,resources,and,you,want,to,customize,the,creation,of,the,managed,code,connection,provider,p,by,default,code,connection,provider,elastic,http,is,used,p,note,that,this,option,is,ignored,if,code,user,global,resources,false,or,link,set,connection,provider,connection,provider,is,set,param,supplier,the,supplier,to,use;public,void,set,connection,provider,supplier,nullable,supplier,connection,provider,supplier,this,connection,provider,supplier,supplier
ReactorResourceFactory -> public ConnectionProvider getConnectionProvider();1536196624;Return the configured {@link ConnectionProvider}.;public ConnectionProvider getConnectionProvider() {_		Assert.notNull(this.connectionProvider, "ConnectionProvider not initialized yet via InitializingBean.")__		return this.connectionProvider__	};return,the,configured,link,connection,provider;public,connection,provider,get,connection,provider,assert,not,null,this,connection,provider,connection,provider,not,initialized,yet,via,initializing,bean,return,this,connection,provider
ReactorResourceFactory -> public ConnectionProvider getConnectionProvider();1536261361;Return the configured {@link ConnectionProvider}.;public ConnectionProvider getConnectionProvider() {_		Assert.notNull(this.connectionProvider, "ConnectionProvider not initialized yet via InitializingBean.")__		return this.connectionProvider__	};return,the,configured,link,connection,provider;public,connection,provider,get,connection,provider,assert,not,null,this,connection,provider,connection,provider,not,initialized,yet,via,initializing,bean,return,this,connection,provider
ReactorResourceFactory -> public ConnectionProvider getConnectionProvider();1536317813;Return the configured {@link ConnectionProvider}.;public ConnectionProvider getConnectionProvider() {_		Assert.state(this.connectionProvider != null, "ConnectionProvider not initialized yet")__		return this.connectionProvider__	};return,the,configured,link,connection,provider;public,connection,provider,get,connection,provider,assert,state,this,connection,provider,null,connection,provider,not,initialized,yet,return,this,connection,provider
ReactorResourceFactory -> public void setUseGlobalResources(boolean useGlobalResources);1536196624;Whether to use global Reactor Netty resources via {@link HttpResources}._<p>Default is "true" in which case this factory initializes and stops the_global Reactor Netty resources within Spring's {@code ApplicationContext}_lifecycle. If set to "false" the factory manages its resources independent_of the global ones._@param useGlobalResources whether to expose and manage the global resources_@see #addGlobalResourcesConsumer(Consumer);public void setUseGlobalResources(boolean useGlobalResources) {_		this.useGlobalResources = useGlobalResources__	};whether,to,use,global,reactor,netty,resources,via,link,http,resources,p,default,is,true,in,which,case,this,factory,initializes,and,stops,the,global,reactor,netty,resources,within,spring,s,code,application,context,lifecycle,if,set,to,false,the,factory,manages,its,resources,independent,of,the,global,ones,param,use,global,resources,whether,to,expose,and,manage,the,global,resources,see,add,global,resources,consumer,consumer;public,void,set,use,global,resources,boolean,use,global,resources,this,use,global,resources,use,global,resources
ReactorResourceFactory -> public void setUseGlobalResources(boolean useGlobalResources);1536261361;Whether to use global Reactor Netty resources via {@link HttpResources}._<p>Default is "true" in which case this factory initializes and stops the_global Reactor Netty resources within Spring's {@code ApplicationContext}_lifecycle. If set to "false" the factory manages its resources independent_of the global ones._@param useGlobalResources whether to expose and manage the global resources_@see #addGlobalResourcesConsumer(Consumer);public void setUseGlobalResources(boolean useGlobalResources) {_		this.useGlobalResources = useGlobalResources__	};whether,to,use,global,reactor,netty,resources,via,link,http,resources,p,default,is,true,in,which,case,this,factory,initializes,and,stops,the,global,reactor,netty,resources,within,spring,s,code,application,context,lifecycle,if,set,to,false,the,factory,manages,its,resources,independent,of,the,global,ones,param,use,global,resources,whether,to,expose,and,manage,the,global,resources,see,add,global,resources,consumer,consumer;public,void,set,use,global,resources,boolean,use,global,resources,this,use,global,resources,use,global,resources
ReactorResourceFactory -> public void setUseGlobalResources(boolean useGlobalResources);1536317813;Whether to use global Reactor Netty resources via {@link HttpResources}._<p>Default is "true" in which case this factory initializes and stops the_global Reactor Netty resources within Spring's {@code ApplicationContext}_lifecycle. If set to "false" the factory manages its resources independent_of the global ones._@param useGlobalResources whether to expose and manage the global resources_@see #addGlobalResourcesConsumer(Consumer);public void setUseGlobalResources(boolean useGlobalResources) {_		this.useGlobalResources = useGlobalResources__	};whether,to,use,global,reactor,netty,resources,via,link,http,resources,p,default,is,true,in,which,case,this,factory,initializes,and,stops,the,global,reactor,netty,resources,within,spring,s,code,application,context,lifecycle,if,set,to,false,the,factory,manages,its,resources,independent,of,the,global,ones,param,use,global,resources,whether,to,expose,and,manage,the,global,resources,see,add,global,resources,consumer,consumer;public,void,set,use,global,resources,boolean,use,global,resources,this,use,global,resources,use,global,resources
ReactorResourceFactory -> @Nullable 	public LoopResources getLoopResources();1534238971;Return the configured {@link LoopResources}.;@Nullable_	public LoopResources getLoopResources() {_		return this.loopResources__	};return,the,configured,link,loop,resources;nullable,public,loop,resources,get,loop,resources,return,this,loop,resources
ReactorResourceFactory -> @Nullable 	public LoopResources getLoopResources();1534257257;Return the configured {@link LoopResources}.;@Nullable_	public LoopResources getLoopResources() {_		return this.loopResources__	};return,the,configured,link,loop,resources;nullable,public,loop,resources,get,loop,resources,return,this,loop,resources
ReactorResourceFactory -> @Nullable 	public LoopResources getLoopResources();1534860988;Return the configured {@link LoopResources}.;@Nullable_	public LoopResources getLoopResources() {_		return this.loopResources__	};return,the,configured,link,loop,resources;nullable,public,loop,resources,get,loop,resources,return,this,loop,resources
