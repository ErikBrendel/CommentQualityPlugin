# id;timestamp;commentText;codeText;commentWords;codeWords
SimpleHessianServiceExporter -> @Override 	public void handle(HttpExchange exchange) throws IOException;1356735495;Processes the incoming Hessian request and creates a Hessian response.;@Override_	public void handle(HttpExchange exchange) throws IOException {_		if (!"POST".equals(exchange.getRequestMethod())) {_			exchange.getResponseHeaders().set("Allow", "POST")__			exchange.sendResponseHeaders(405, -1)__			return__		}__		ByteArrayOutputStream output = new ByteArrayOutputStream(1024)__		try {_			invoke(exchange.getRequestBody(), output)__		}_		catch (Throwable ex) {_			exchange.sendResponseHeaders(500, -1)__			logger.error("Hessian skeleton invocation failed", ex)__			return__		}__		exchange.getResponseHeaders().set("Content-Type", CONTENT_TYPE_HESSIAN)__		exchange.sendResponseHeaders(200, output.size())__		FileCopyUtils.copy(output.toByteArray(), exchange.getResponseBody())__	};processes,the,incoming,hessian,request,and,creates,a,hessian,response;override,public,void,handle,http,exchange,exchange,throws,ioexception,if,post,equals,exchange,get,request,method,exchange,get,response,headers,set,allow,post,exchange,send,response,headers,405,1,return,byte,array,output,stream,output,new,byte,array,output,stream,1024,try,invoke,exchange,get,request,body,output,catch,throwable,ex,exchange,send,response,headers,500,1,logger,error,hessian,skeleton,invocation,failed,ex,return,exchange,get,response,headers,set,content,type,exchange,send,response,headers,200,output,size,file,copy,utils,copy,output,to,byte,array,exchange,get,response,body
SimpleHessianServiceExporter -> @Override 	public void handle(HttpExchange exchange) throws IOException;1368482696;Processes the incoming Hessian request and creates a Hessian response.;@Override_	public void handle(HttpExchange exchange) throws IOException {_		if (!"POST".equals(exchange.getRequestMethod())) {_			exchange.getResponseHeaders().set("Allow", "POST")__			exchange.sendResponseHeaders(405, -1)__			return__		}__		ByteArrayOutputStream output = new ByteArrayOutputStream(1024)__		try {_			invoke(exchange.getRequestBody(), output)__		}_		catch (Throwable ex) {_			exchange.sendResponseHeaders(500, -1)__			logger.error("Hessian skeleton invocation failed", ex)__			return__		}__		exchange.getResponseHeaders().set("Content-Type", CONTENT_TYPE_HESSIAN)__		exchange.sendResponseHeaders(200, output.size())__		FileCopyUtils.copy(output.toByteArray(), exchange.getResponseBody())__	};processes,the,incoming,hessian,request,and,creates,a,hessian,response;override,public,void,handle,http,exchange,exchange,throws,ioexception,if,post,equals,exchange,get,request,method,exchange,get,response,headers,set,allow,post,exchange,send,response,headers,405,1,return,byte,array,output,stream,output,new,byte,array,output,stream,1024,try,invoke,exchange,get,request,body,output,catch,throwable,ex,exchange,send,response,headers,500,1,logger,error,hessian,skeleton,invocation,failed,ex,return,exchange,get,response,headers,set,content,type,exchange,send,response,headers,200,output,size,file,copy,utils,copy,output,to,byte,array,exchange,get,response,body
SimpleHessianServiceExporter -> @Override 	public void handle(HttpExchange exchange) throws IOException;1398858661;Processes the incoming Hessian request and creates a Hessian response.;@Override_	public void handle(HttpExchange exchange) throws IOException {_		if (!"POST".equals(exchange.getRequestMethod())) {_			exchange.getResponseHeaders().set("Allow", "POST")__			exchange.sendResponseHeaders(405, -1)__			return__		}__		ByteArrayOutputStream output = new ByteArrayOutputStream(1024)__		try {_			invoke(exchange.getRequestBody(), output)__		}_		catch (Throwable ex) {_			exchange.sendResponseHeaders(500, -1)__			logger.error("Hessian skeleton invocation failed", ex)__			return__		}__		exchange.getResponseHeaders().set("Content-Type", CONTENT_TYPE_HESSIAN)__		exchange.sendResponseHeaders(200, output.size())__		FileCopyUtils.copy(output.toByteArray(), exchange.getResponseBody())__	};processes,the,incoming,hessian,request,and,creates,a,hessian,response;override,public,void,handle,http,exchange,exchange,throws,ioexception,if,post,equals,exchange,get,request,method,exchange,get,response,headers,set,allow,post,exchange,send,response,headers,405,1,return,byte,array,output,stream,output,new,byte,array,output,stream,1024,try,invoke,exchange,get,request,body,output,catch,throwable,ex,exchange,send,response,headers,500,1,logger,error,hessian,skeleton,invocation,failed,ex,return,exchange,get,response,headers,set,content,type,exchange,send,response,headers,200,output,size,file,copy,utils,copy,output,to,byte,array,exchange,get,response,body
SimpleHessianServiceExporter -> @Override 	public void handle(HttpExchange exchange) throws IOException;1401910463;Processes the incoming Hessian request and creates a Hessian response.;@Override_	public void handle(HttpExchange exchange) throws IOException {_		if (!"POST".equals(exchange.getRequestMethod())) {_			exchange.getResponseHeaders().set("Allow", "POST")__			exchange.sendResponseHeaders(405, -1)__			return__		}__		ByteArrayOutputStream output = new ByteArrayOutputStream(1024)__		try {_			invoke(exchange.getRequestBody(), output)__		}_		catch (Throwable ex) {_			exchange.sendResponseHeaders(500, -1)__			logger.error("Hessian skeleton invocation failed", ex)__			return__		}__		exchange.getResponseHeaders().set("Content-Type", CONTENT_TYPE_HESSIAN)__		exchange.sendResponseHeaders(200, output.size())__		FileCopyUtils.copy(output.toByteArray(), exchange.getResponseBody())__	};processes,the,incoming,hessian,request,and,creates,a,hessian,response;override,public,void,handle,http,exchange,exchange,throws,ioexception,if,post,equals,exchange,get,request,method,exchange,get,response,headers,set,allow,post,exchange,send,response,headers,405,1,return,byte,array,output,stream,output,new,byte,array,output,stream,1024,try,invoke,exchange,get,request,body,output,catch,throwable,ex,exchange,send,response,headers,500,1,logger,error,hessian,skeleton,invocation,failed,ex,return,exchange,get,response,headers,set,content,type,exchange,send,response,headers,200,output,size,file,copy,utils,copy,output,to,byte,array,exchange,get,response,body
SimpleHessianServiceExporter -> @Override 	public void handle(HttpExchange exchange) throws IOException;1533666953;Processes the incoming Hessian request and creates a Hessian response.;@Override_	public void handle(HttpExchange exchange) throws IOException {_		if (!"POST".equals(exchange.getRequestMethod())) {_			exchange.getResponseHeaders().set("Allow", "POST")__			exchange.sendResponseHeaders(405, -1)__			return__		}__		ByteArrayOutputStream output = new ByteArrayOutputStream(1024)__		try {_			invoke(exchange.getRequestBody(), output)__		}_		catch (Throwable ex) {_			exchange.sendResponseHeaders(500, -1)__			logger.error("Hessian skeleton invocation failed", ex)__			return__		}__		exchange.getResponseHeaders().set("Content-Type", CONTENT_TYPE_HESSIAN)__		exchange.sendResponseHeaders(200, output.size())__		FileCopyUtils.copy(output.toByteArray(), exchange.getResponseBody())__	};processes,the,incoming,hessian,request,and,creates,a,hessian,response;override,public,void,handle,http,exchange,exchange,throws,ioexception,if,post,equals,exchange,get,request,method,exchange,get,response,headers,set,allow,post,exchange,send,response,headers,405,1,return,byte,array,output,stream,output,new,byte,array,output,stream,1024,try,invoke,exchange,get,request,body,output,catch,throwable,ex,exchange,send,response,headers,500,1,logger,error,hessian,skeleton,invocation,failed,ex,return,exchange,get,response,headers,set,content,type,exchange,send,response,headers,200,output,size,file,copy,utils,copy,output,to,byte,array,exchange,get,response,body
SimpleHessianServiceExporter -> public void handle(HttpExchange exchange) throws IOException;1328020251;Processes the incoming Hessian request and creates a Hessian response.;public void handle(HttpExchange exchange) throws IOException {_		if (!"POST".equals(exchange.getRequestMethod())) {_			exchange.getResponseHeaders().set("Allow", "POST")__			exchange.sendResponseHeaders(405, -1)__			return__		}__		ByteArrayOutputStream output = new ByteArrayOutputStream(1024)__		try {_			invoke(exchange.getRequestBody(), output)__		}_		catch (Throwable ex) {_			exchange.sendResponseHeaders(500, -1)__			logger.error("Hessian skeleton invocation failed", ex)__			return__		}__		exchange.getResponseHeaders().set("Content-Type", CONTENT_TYPE_HESSIAN)__		exchange.sendResponseHeaders(200, output.size())__		FileCopyUtils.copy(output.toByteArray(), exchange.getResponseBody())__	};processes,the,incoming,hessian,request,and,creates,a,hessian,response;public,void,handle,http,exchange,exchange,throws,ioexception,if,post,equals,exchange,get,request,method,exchange,get,response,headers,set,allow,post,exchange,send,response,headers,405,1,return,byte,array,output,stream,output,new,byte,array,output,stream,1024,try,invoke,exchange,get,request,body,output,catch,throwable,ex,exchange,send,response,headers,500,1,logger,error,hessian,skeleton,invocation,failed,ex,return,exchange,get,response,headers,set,content,type,exchange,send,response,headers,200,output,size,file,copy,utils,copy,output,to,byte,array,exchange,get,response,body
SimpleHessianServiceExporter -> public void handle(HttpExchange exchange) throws IOException;1357119239;Processes the incoming Hessian request and creates a Hessian response.;public void handle(HttpExchange exchange) throws IOException {_		if (!"POST".equals(exchange.getRequestMethod())) {_			exchange.getResponseHeaders().set("Allow", "POST")__			exchange.sendResponseHeaders(405, -1)__			return__		}__		ByteArrayOutputStream output = new ByteArrayOutputStream(1024)__		try {_			invoke(exchange.getRequestBody(), output)__		}_		catch (Throwable ex) {_			exchange.sendResponseHeaders(500, -1)__			logger.error("Hessian skeleton invocation failed", ex)__			return__		}__		exchange.getResponseHeaders().set("Content-Type", CONTENT_TYPE_HESSIAN)__		exchange.sendResponseHeaders(200, output.size())__		FileCopyUtils.copy(output.toByteArray(), exchange.getResponseBody())__	};processes,the,incoming,hessian,request,and,creates,a,hessian,response;public,void,handle,http,exchange,exchange,throws,ioexception,if,post,equals,exchange,get,request,method,exchange,get,response,headers,set,allow,post,exchange,send,response,headers,405,1,return,byte,array,output,stream,output,new,byte,array,output,stream,1024,try,invoke,exchange,get,request,body,output,catch,throwable,ex,exchange,send,response,headers,500,1,logger,error,hessian,skeleton,invocation,failed,ex,return,exchange,get,response,headers,set,content,type,exchange,send,response,headers,200,output,size,file,copy,utils,copy,output,to,byte,array,exchange,get,response,body
SimpleHessianServiceExporter -> public void handle(HttpExchange exchange) throws IOException;1367327603;Processes the incoming Hessian request and creates a Hessian response.;public void handle(HttpExchange exchange) throws IOException {_		if (!"POST".equals(exchange.getRequestMethod())) {_			exchange.getResponseHeaders().set("Allow", "POST")__			exchange.sendResponseHeaders(405, -1)__			return__		}__		ByteArrayOutputStream output = new ByteArrayOutputStream(1024)__		try {_			invoke(exchange.getRequestBody(), output)__		}_		catch (Throwable ex) {_			exchange.sendResponseHeaders(500, -1)__			logger.error("Hessian skeleton invocation failed", ex)__			return__		}__		exchange.getResponseHeaders().set("Content-Type", CONTENT_TYPE_HESSIAN)__		exchange.sendResponseHeaders(200, output.size())__		FileCopyUtils.copy(output.toByteArray(), exchange.getResponseBody())__	};processes,the,incoming,hessian,request,and,creates,a,hessian,response;public,void,handle,http,exchange,exchange,throws,ioexception,if,post,equals,exchange,get,request,method,exchange,get,response,headers,set,allow,post,exchange,send,response,headers,405,1,return,byte,array,output,stream,output,new,byte,array,output,stream,1024,try,invoke,exchange,get,request,body,output,catch,throwable,ex,exchange,send,response,headers,500,1,logger,error,hessian,skeleton,invocation,failed,ex,return,exchange,get,response,headers,set,content,type,exchange,send,response,headers,200,output,size,file,copy,utils,copy,output,to,byte,array,exchange,get,response,body
