# id;timestamp;commentText;codeText;commentWords;codeWords
BufferedImageHttpMessageConverter -> public void setDefaultContentType(MediaType defaultContentType);1328020251;Sets the default {@code Content-Type} to be used for writing._@throws IllegalArgumentException if the given content type is not supported by the Java Image I/O API;public void setDefaultContentType(MediaType defaultContentType) {_		Assert.notNull(defaultContentType, "'contentType' must not be null")__		Iterator<ImageWriter> imageWriters = ImageIO.getImageWritersByMIMEType(defaultContentType.toString())__		if (!imageWriters.hasNext()) {_			throw new IllegalArgumentException(_					"ContentType [" + defaultContentType + "] is not supported by the Java Image I/O API")__		}__		this.defaultContentType = defaultContentType__	};sets,the,default,code,content,type,to,be,used,for,writing,throws,illegal,argument,exception,if,the,given,content,type,is,not,supported,by,the,java,image,i,o,api;public,void,set,default,content,type,media,type,default,content,type,assert,not,null,default,content,type,content,type,must,not,be,null,iterator,image,writer,image,writers,image,io,get,image,writers,by,mimetype,default,content,type,to,string,if,image,writers,has,next,throw,new,illegal,argument,exception,content,type,default,content,type,is,not,supported,by,the,java,image,i,o,api,this,default,content,type,default,content,type
BufferedImageHttpMessageConverter -> public void setDefaultContentType(MediaType defaultContentType);1356735495;Sets the default {@code Content-Type} to be used for writing._@throws IllegalArgumentException if the given content type is not supported by the Java Image I/O API;public void setDefaultContentType(MediaType defaultContentType) {_		Assert.notNull(defaultContentType, "'contentType' must not be null")__		Iterator<ImageWriter> imageWriters = ImageIO.getImageWritersByMIMEType(defaultContentType.toString())__		if (!imageWriters.hasNext()) {_			throw new IllegalArgumentException(_					"ContentType [" + defaultContentType + "] is not supported by the Java Image I/O API")__		}__		this.defaultContentType = defaultContentType__	};sets,the,default,code,content,type,to,be,used,for,writing,throws,illegal,argument,exception,if,the,given,content,type,is,not,supported,by,the,java,image,i,o,api;public,void,set,default,content,type,media,type,default,content,type,assert,not,null,default,content,type,content,type,must,not,be,null,iterator,image,writer,image,writers,image,io,get,image,writers,by,mimetype,default,content,type,to,string,if,image,writers,has,next,throw,new,illegal,argument,exception,content,type,default,content,type,is,not,supported,by,the,java,image,i,o,api,this,default,content,type,default,content,type
BufferedImageHttpMessageConverter -> public void setDefaultContentType(MediaType defaultContentType);1357119239;Sets the default {@code Content-Type} to be used for writing._@throws IllegalArgumentException if the given content type is not supported by the Java Image I/O API;public void setDefaultContentType(MediaType defaultContentType) {_		Assert.notNull(defaultContentType, "'contentType' must not be null")__		Iterator<ImageWriter> imageWriters = ImageIO.getImageWritersByMIMEType(defaultContentType.toString())__		if (!imageWriters.hasNext()) {_			throw new IllegalArgumentException(_					"ContentType [" + defaultContentType + "] is not supported by the Java Image I/O API")__		}__		this.defaultContentType = defaultContentType__	};sets,the,default,code,content,type,to,be,used,for,writing,throws,illegal,argument,exception,if,the,given,content,type,is,not,supported,by,the,java,image,i,o,api;public,void,set,default,content,type,media,type,default,content,type,assert,not,null,default,content,type,content,type,must,not,be,null,iterator,image,writer,image,writers,image,io,get,image,writers,by,mimetype,default,content,type,to,string,if,image,writers,has,next,throw,new,illegal,argument,exception,content,type,default,content,type,is,not,supported,by,the,java,image,i,o,api,this,default,content,type,default,content,type
BufferedImageHttpMessageConverter -> public void setDefaultContentType(MediaType defaultContentType);1362408075;Sets the default {@code Content-Type} to be used for writing._@throws IllegalArgumentException if the given content type is not supported by the Java Image I/O API;public void setDefaultContentType(MediaType defaultContentType) {_		Assert.notNull(defaultContentType, "'contentType' must not be null")__		Iterator<ImageWriter> imageWriters = ImageIO.getImageWritersByMIMEType(defaultContentType.toString())__		if (!imageWriters.hasNext()) {_			throw new IllegalArgumentException(_					"ContentType [" + defaultContentType + "] is not supported by the Java Image I/O API")__		}__		this.defaultContentType = defaultContentType__	};sets,the,default,code,content,type,to,be,used,for,writing,throws,illegal,argument,exception,if,the,given,content,type,is,not,supported,by,the,java,image,i,o,api;public,void,set,default,content,type,media,type,default,content,type,assert,not,null,default,content,type,content,type,must,not,be,null,iterator,image,writer,image,writers,image,io,get,image,writers,by,mimetype,default,content,type,to,string,if,image,writers,has,next,throw,new,illegal,argument,exception,content,type,default,content,type,is,not,supported,by,the,java,image,i,o,api,this,default,content,type,default,content,type
BufferedImageHttpMessageConverter -> public void setDefaultContentType(MediaType defaultContentType);1368482696;Sets the default {@code Content-Type} to be used for writing._@throws IllegalArgumentException if the given content type is not supported by the Java Image I/O API;public void setDefaultContentType(MediaType defaultContentType) {_		Assert.notNull(defaultContentType, "'contentType' must not be null")__		Iterator<ImageWriter> imageWriters = ImageIO.getImageWritersByMIMEType(defaultContentType.toString())__		if (!imageWriters.hasNext()) {_			throw new IllegalArgumentException(_					"ContentType [" + defaultContentType + "] is not supported by the Java Image I/O API")__		}__		this.defaultContentType = defaultContentType__	};sets,the,default,code,content,type,to,be,used,for,writing,throws,illegal,argument,exception,if,the,given,content,type,is,not,supported,by,the,java,image,i,o,api;public,void,set,default,content,type,media,type,default,content,type,assert,not,null,default,content,type,content,type,must,not,be,null,iterator,image,writer,image,writers,image,io,get,image,writers,by,mimetype,default,content,type,to,string,if,image,writers,has,next,throw,new,illegal,argument,exception,content,type,default,content,type,is,not,supported,by,the,java,image,i,o,api,this,default,content,type,default,content,type
BufferedImageHttpMessageConverter -> public void setDefaultContentType(MediaType defaultContentType);1395409383;Sets the default {@code Content-Type} to be used for writing._@throws IllegalArgumentException if the given content type is not supported by the Java Image I/O API;public void setDefaultContentType(MediaType defaultContentType) {_		Assert.notNull(defaultContentType, "'contentType' must not be null")__		Iterator<ImageWriter> imageWriters = ImageIO.getImageWritersByMIMEType(defaultContentType.toString())__		if (!imageWriters.hasNext()) {_			throw new IllegalArgumentException(_					"Content-Type [" + defaultContentType + "] is not supported by the Java Image I/O API")__		}__		this.defaultContentType = defaultContentType__	};sets,the,default,code,content,type,to,be,used,for,writing,throws,illegal,argument,exception,if,the,given,content,type,is,not,supported,by,the,java,image,i,o,api;public,void,set,default,content,type,media,type,default,content,type,assert,not,null,default,content,type,content,type,must,not,be,null,iterator,image,writer,image,writers,image,io,get,image,writers,by,mimetype,default,content,type,to,string,if,image,writers,has,next,throw,new,illegal,argument,exception,content,type,default,content,type,is,not,supported,by,the,java,image,i,o,api,this,default,content,type,default,content,type
BufferedImageHttpMessageConverter -> public void setDefaultContentType(MediaType defaultContentType);1425613848;Sets the default {@code Content-Type} to be used for writing._@throws IllegalArgumentException if the given content type is not supported by the Java Image I/O API;public void setDefaultContentType(MediaType defaultContentType) {_		Assert.notNull(defaultContentType, "'contentType' must not be null")__		Iterator<ImageWriter> imageWriters = ImageIO.getImageWritersByMIMEType(defaultContentType.toString())__		if (!imageWriters.hasNext()) {_			throw new IllegalArgumentException(_					"Content-Type [" + defaultContentType + "] is not supported by the Java Image I/O API")__		}__		this.defaultContentType = defaultContentType__	};sets,the,default,code,content,type,to,be,used,for,writing,throws,illegal,argument,exception,if,the,given,content,type,is,not,supported,by,the,java,image,i,o,api;public,void,set,default,content,type,media,type,default,content,type,assert,not,null,default,content,type,content,type,must,not,be,null,iterator,image,writer,image,writers,image,io,get,image,writers,by,mimetype,default,content,type,to,string,if,image,writers,has,next,throw,new,illegal,argument,exception,content,type,default,content,type,is,not,supported,by,the,java,image,i,o,api,this,default,content,type,default,content,type
BufferedImageHttpMessageConverter -> public void setDefaultContentType(MediaType defaultContentType);1425613848;Sets the default {@code Content-Type} to be used for writing._@throws IllegalArgumentException if the given content type is not supported by the Java Image I/O API;public void setDefaultContentType(MediaType defaultContentType) {_		Assert.notNull(defaultContentType, "'contentType' must not be null")__		Iterator<ImageWriter> imageWriters = ImageIO.getImageWritersByMIMEType(defaultContentType.toString())__		if (!imageWriters.hasNext()) {_			throw new IllegalArgumentException(_					"Content-Type [" + defaultContentType + "] is not supported by the Java Image I/O API")__		}__		this.defaultContentType = defaultContentType__	};sets,the,default,code,content,type,to,be,used,for,writing,throws,illegal,argument,exception,if,the,given,content,type,is,not,supported,by,the,java,image,i,o,api;public,void,set,default,content,type,media,type,default,content,type,assert,not,null,default,content,type,content,type,must,not,be,null,iterator,image,writer,image,writers,image,io,get,image,writers,by,mimetype,default,content,type,to,string,if,image,writers,has,next,throw,new,illegal,argument,exception,content,type,default,content,type,is,not,supported,by,the,java,image,i,o,api,this,default,content,type,default,content,type
BufferedImageHttpMessageConverter -> public void setDefaultContentType(MediaType defaultContentType);1432125256;Sets the default {@code Content-Type} to be used for writing._@throws IllegalArgumentException if the given content type is not supported by the Java Image I/O API;public void setDefaultContentType(MediaType defaultContentType) {_		Assert.notNull(defaultContentType, "'contentType' must not be null")__		Iterator<ImageWriter> imageWriters = ImageIO.getImageWritersByMIMEType(defaultContentType.toString())__		if (!imageWriters.hasNext()) {_			throw new IllegalArgumentException(_					"Content-Type [" + defaultContentType + "] is not supported by the Java Image I/O API")__		}__		this.defaultContentType = defaultContentType__	};sets,the,default,code,content,type,to,be,used,for,writing,throws,illegal,argument,exception,if,the,given,content,type,is,not,supported,by,the,java,image,i,o,api;public,void,set,default,content,type,media,type,default,content,type,assert,not,null,default,content,type,content,type,must,not,be,null,iterator,image,writer,image,writers,image,io,get,image,writers,by,mimetype,default,content,type,to,string,if,image,writers,has,next,throw,new,illegal,argument,exception,content,type,default,content,type,is,not,supported,by,the,java,image,i,o,api,this,default,content,type,default,content,type
BufferedImageHttpMessageConverter -> public void setDefaultContentType(MediaType defaultContentType);1454615953;Sets the default {@code Content-Type} to be used for writing._@throws IllegalArgumentException if the given content type is not supported by the Java Image I/O API;public void setDefaultContentType(MediaType defaultContentType) {_		Assert.notNull(defaultContentType, "'contentType' must not be null")__		Iterator<ImageWriter> imageWriters = ImageIO.getImageWritersByMIMEType(defaultContentType.toString())__		if (!imageWriters.hasNext()) {_			throw new IllegalArgumentException(_					"Content-Type [" + defaultContentType + "] is not supported by the Java Image I/O API")__		}__		this.defaultContentType = defaultContentType__	};sets,the,default,code,content,type,to,be,used,for,writing,throws,illegal,argument,exception,if,the,given,content,type,is,not,supported,by,the,java,image,i,o,api;public,void,set,default,content,type,media,type,default,content,type,assert,not,null,default,content,type,content,type,must,not,be,null,iterator,image,writer,image,writers,image,io,get,image,writers,by,mimetype,default,content,type,to,string,if,image,writers,has,next,throw,new,illegal,argument,exception,content,type,default,content,type,is,not,supported,by,the,java,image,i,o,api,this,default,content,type,default,content,type
BufferedImageHttpMessageConverter -> public void setDefaultContentType(MediaType defaultContentType);1467730834;Sets the default {@code Content-Type} to be used for writing._@throws IllegalArgumentException if the given content type is not supported by the Java Image I/O API;public void setDefaultContentType(MediaType defaultContentType) {_		Assert.notNull(defaultContentType, "'contentType' must not be null")__		Iterator<ImageWriter> imageWriters = ImageIO.getImageWritersByMIMEType(defaultContentType.toString())__		if (!imageWriters.hasNext()) {_			throw new IllegalArgumentException(_					"Content-Type [" + defaultContentType + "] is not supported by the Java Image I/O API")__		}__		this.defaultContentType = defaultContentType__	};sets,the,default,code,content,type,to,be,used,for,writing,throws,illegal,argument,exception,if,the,given,content,type,is,not,supported,by,the,java,image,i,o,api;public,void,set,default,content,type,media,type,default,content,type,assert,not,null,default,content,type,content,type,must,not,be,null,iterator,image,writer,image,writers,image,io,get,image,writers,by,mimetype,default,content,type,to,string,if,image,writers,has,next,throw,new,illegal,argument,exception,content,type,default,content,type,is,not,supported,by,the,java,image,i,o,api,this,default,content,type,default,content,type
BufferedImageHttpMessageConverter -> public void setDefaultContentType(MediaType defaultContentType);1496242568;Sets the default {@code Content-Type} to be used for writing._@throws IllegalArgumentException if the given content type is not supported by the Java Image I/O API;public void setDefaultContentType(MediaType defaultContentType) {_		Assert.notNull(defaultContentType, "'contentType' must not be null")__		Iterator<ImageWriter> imageWriters = ImageIO.getImageWritersByMIMEType(defaultContentType.toString())__		if (!imageWriters.hasNext()) {_			throw new IllegalArgumentException(_					"Content-Type [" + defaultContentType + "] is not supported by the Java Image I/O API")__		}__		this.defaultContentType = defaultContentType__	};sets,the,default,code,content,type,to,be,used,for,writing,throws,illegal,argument,exception,if,the,given,content,type,is,not,supported,by,the,java,image,i,o,api;public,void,set,default,content,type,media,type,default,content,type,assert,not,null,default,content,type,content,type,must,not,be,null,iterator,image,writer,image,writers,image,io,get,image,writers,by,mimetype,default,content,type,to,string,if,image,writers,has,next,throw,new,illegal,argument,exception,content,type,default,content,type,is,not,supported,by,the,java,image,i,o,api,this,default,content,type,default,content,type
BufferedImageHttpMessageConverter -> public void setDefaultContentType(MediaType defaultContentType);1496259743;Sets the default {@code Content-Type} to be used for writing._@throws IllegalArgumentException if the given content type is not supported by the Java Image I/O API;public void setDefaultContentType(MediaType defaultContentType) {_		Assert.notNull(defaultContentType, "'contentType' must not be null")__		Iterator<ImageWriter> imageWriters = ImageIO.getImageWritersByMIMEType(defaultContentType.toString())__		if (!imageWriters.hasNext()) {_			throw new IllegalArgumentException(_					"Content-Type [" + defaultContentType + "] is not supported by the Java Image I/O API")__		}__		this.defaultContentType = defaultContentType__	};sets,the,default,code,content,type,to,be,used,for,writing,throws,illegal,argument,exception,if,the,given,content,type,is,not,supported,by,the,java,image,i,o,api;public,void,set,default,content,type,media,type,default,content,type,assert,not,null,default,content,type,content,type,must,not,be,null,iterator,image,writer,image,writers,image,io,get,image,writers,by,mimetype,default,content,type,to,string,if,image,writers,has,next,throw,new,illegal,argument,exception,content,type,default,content,type,is,not,supported,by,the,java,image,i,o,api,this,default,content,type,default,content,type
BufferedImageHttpMessageConverter -> public void setDefaultContentType(MediaType defaultContentType);1496837955;Sets the default {@code Content-Type} to be used for writing._@throws IllegalArgumentException if the given content type is not supported by the Java Image I/O API;public void setDefaultContentType(MediaType defaultContentType) {_		Assert.notNull(defaultContentType, "'contentType' must not be null")__		Iterator<ImageWriter> imageWriters = ImageIO.getImageWritersByMIMEType(defaultContentType.toString())__		if (!imageWriters.hasNext()) {_			throw new IllegalArgumentException(_					"Content-Type [" + defaultContentType + "] is not supported by the Java Image I/O API")__		}__		this.defaultContentType = defaultContentType__	};sets,the,default,code,content,type,to,be,used,for,writing,throws,illegal,argument,exception,if,the,given,content,type,is,not,supported,by,the,java,image,i,o,api;public,void,set,default,content,type,media,type,default,content,type,assert,not,null,default,content,type,content,type,must,not,be,null,iterator,image,writer,image,writers,image,io,get,image,writers,by,mimetype,default,content,type,to,string,if,image,writers,has,next,throw,new,illegal,argument,exception,content,type,default,content,type,is,not,supported,by,the,java,image,i,o,api,this,default,content,type,default,content,type
BufferedImageHttpMessageConverter -> public void setDefaultContentType(MediaType defaultContentType);1498780456;Sets the default {@code Content-Type} to be used for writing._@throws IllegalArgumentException if the given content type is not supported by the Java Image I/O API;public void setDefaultContentType(MediaType defaultContentType) {_		Assert.notNull(defaultContentType, "'contentType' must not be null")__		Iterator<ImageWriter> imageWriters = ImageIO.getImageWritersByMIMEType(defaultContentType.toString())__		if (!imageWriters.hasNext()) {_			throw new IllegalArgumentException(_					"Content-Type [" + defaultContentType + "] is not supported by the Java Image I/O API")__		}__		this.defaultContentType = defaultContentType__	};sets,the,default,code,content,type,to,be,used,for,writing,throws,illegal,argument,exception,if,the,given,content,type,is,not,supported,by,the,java,image,i,o,api;public,void,set,default,content,type,media,type,default,content,type,assert,not,null,default,content,type,content,type,must,not,be,null,iterator,image,writer,image,writers,image,io,get,image,writers,by,mimetype,default,content,type,to,string,if,image,writers,has,next,throw,new,illegal,argument,exception,content,type,default,content,type,is,not,supported,by,the,java,image,i,o,api,this,default,content,type,default,content,type
BufferedImageHttpMessageConverter -> protected void process(ImageReadParam irp);1328020251;Template method that allows for manipulating the {@link ImageReadParam} before it is used to read an image._<p>Default implementation is empty.;protected void process(ImageReadParam irp) {_	};template,method,that,allows,for,manipulating,the,link,image,read,param,before,it,is,used,to,read,an,image,p,default,implementation,is,empty;protected,void,process,image,read,param,irp
BufferedImageHttpMessageConverter -> protected void process(ImageReadParam irp);1356735495;Template method that allows for manipulating the {@link ImageReadParam} before it is used to read an image._<p>Default implementation is empty.;protected void process(ImageReadParam irp) {_	};template,method,that,allows,for,manipulating,the,link,image,read,param,before,it,is,used,to,read,an,image,p,default,implementation,is,empty;protected,void,process,image,read,param,irp
BufferedImageHttpMessageConverter -> protected void process(ImageReadParam irp);1357119239;Template method that allows for manipulating the {@link ImageReadParam} before it is used to read an image._<p>Default implementation is empty.;protected void process(ImageReadParam irp) {_	};template,method,that,allows,for,manipulating,the,link,image,read,param,before,it,is,used,to,read,an,image,p,default,implementation,is,empty;protected,void,process,image,read,param,irp
BufferedImageHttpMessageConverter -> protected void process(ImageReadParam irp);1362408075;Template method that allows for manipulating the {@link ImageReadParam} before it is used to read an image._<p>Default implementation is empty.;protected void process(ImageReadParam irp) {_	};template,method,that,allows,for,manipulating,the,link,image,read,param,before,it,is,used,to,read,an,image,p,default,implementation,is,empty;protected,void,process,image,read,param,irp
BufferedImageHttpMessageConverter -> protected void process(ImageReadParam irp);1368482696;Template method that allows for manipulating the {@link ImageReadParam} before it is used to read an image._<p>Default implementation is empty.;protected void process(ImageReadParam irp) {_	};template,method,that,allows,for,manipulating,the,link,image,read,param,before,it,is,used,to,read,an,image,p,default,implementation,is,empty;protected,void,process,image,read,param,irp
BufferedImageHttpMessageConverter -> protected void process(ImageReadParam irp);1395409383;Template method that allows for manipulating the {@link ImageReadParam}_before it is used to read an image._<p>The default implementation is empty.;protected void process(ImageReadParam irp) {_	};template,method,that,allows,for,manipulating,the,link,image,read,param,before,it,is,used,to,read,an,image,p,the,default,implementation,is,empty;protected,void,process,image,read,param,irp
BufferedImageHttpMessageConverter -> protected void process(ImageReadParam irp);1425613848;Template method that allows for manipulating the {@link ImageReadParam}_before it is used to read an image._<p>The default implementation is empty.;protected void process(ImageReadParam irp) {_	};template,method,that,allows,for,manipulating,the,link,image,read,param,before,it,is,used,to,read,an,image,p,the,default,implementation,is,empty;protected,void,process,image,read,param,irp
BufferedImageHttpMessageConverter -> protected void process(ImageReadParam irp);1425613848;Template method that allows for manipulating the {@link ImageReadParam}_before it is used to read an image._<p>The default implementation is empty.;protected void process(ImageReadParam irp) {_	};template,method,that,allows,for,manipulating,the,link,image,read,param,before,it,is,used,to,read,an,image,p,the,default,implementation,is,empty;protected,void,process,image,read,param,irp
BufferedImageHttpMessageConverter -> protected void process(ImageReadParam irp);1432125256;Template method that allows for manipulating the {@link ImageReadParam}_before it is used to read an image._<p>The default implementation is empty.;protected void process(ImageReadParam irp) {_	};template,method,that,allows,for,manipulating,the,link,image,read,param,before,it,is,used,to,read,an,image,p,the,default,implementation,is,empty;protected,void,process,image,read,param,irp
BufferedImageHttpMessageConverter -> protected void process(ImageReadParam irp);1454615953;Template method that allows for manipulating the {@link ImageReadParam}_before it is used to read an image._<p>The default implementation is empty.;protected void process(ImageReadParam irp) {_	};template,method,that,allows,for,manipulating,the,link,image,read,param,before,it,is,used,to,read,an,image,p,the,default,implementation,is,empty;protected,void,process,image,read,param,irp
BufferedImageHttpMessageConverter -> protected void process(ImageReadParam irp);1467730834;Template method that allows for manipulating the {@link ImageReadParam}_before it is used to read an image._<p>The default implementation is empty.;protected void process(ImageReadParam irp) {_	};template,method,that,allows,for,manipulating,the,link,image,read,param,before,it,is,used,to,read,an,image,p,the,default,implementation,is,empty;protected,void,process,image,read,param,irp
BufferedImageHttpMessageConverter -> protected void process(ImageReadParam irp);1496242568;Template method that allows for manipulating the {@link ImageReadParam}_before it is used to read an image._<p>The default implementation is empty.;protected void process(ImageReadParam irp) {_	};template,method,that,allows,for,manipulating,the,link,image,read,param,before,it,is,used,to,read,an,image,p,the,default,implementation,is,empty;protected,void,process,image,read,param,irp
BufferedImageHttpMessageConverter -> protected void process(ImageReadParam irp);1496259743;Template method that allows for manipulating the {@link ImageReadParam}_before it is used to read an image._<p>The default implementation is empty.;protected void process(ImageReadParam irp) {_	};template,method,that,allows,for,manipulating,the,link,image,read,param,before,it,is,used,to,read,an,image,p,the,default,implementation,is,empty;protected,void,process,image,read,param,irp
BufferedImageHttpMessageConverter -> protected void process(ImageReadParam irp);1496837955;Template method that allows for manipulating the {@link ImageReadParam}_before it is used to read an image._<p>The default implementation is empty.;protected void process(ImageReadParam irp) {_	};template,method,that,allows,for,manipulating,the,link,image,read,param,before,it,is,used,to,read,an,image,p,the,default,implementation,is,empty;protected,void,process,image,read,param,irp
BufferedImageHttpMessageConverter -> protected void process(ImageReadParam irp);1498780456;Template method that allows for manipulating the {@link ImageReadParam}_before it is used to read an image._<p>The default implementation is empty.;protected void process(ImageReadParam irp) {_	};template,method,that,allows,for,manipulating,the,link,image,read,param,before,it,is,used,to,read,an,image,p,the,default,implementation,is,empty;protected,void,process,image,read,param,irp
BufferedImageHttpMessageConverter -> protected void process(ImageReadParam irp);1500448076;Template method that allows for manipulating the {@link ImageReadParam}_before it is used to read an image._<p>The default implementation is empty.;protected void process(ImageReadParam irp) {_	};template,method,that,allows,for,manipulating,the,link,image,read,param,before,it,is,used,to,read,an,image,p,the,default,implementation,is,empty;protected,void,process,image,read,param,irp
BufferedImageHttpMessageConverter -> protected void process(ImageReadParam irp);1520890308;Template method that allows for manipulating the {@link ImageReadParam}_before it is used to read an image._<p>The default implementation is empty.;protected void process(ImageReadParam irp) {_	};template,method,that,allows,for,manipulating,the,link,image,read,param,before,it,is,used,to,read,an,image,p,the,default,implementation,is,empty;protected,void,process,image,read,param,irp
BufferedImageHttpMessageConverter -> protected void process(ImageReadParam irp);1522231598;Template method that allows for manipulating the {@link ImageReadParam}_before it is used to read an image._<p>The default implementation is empty.;protected void process(ImageReadParam irp) {_	};template,method,that,allows,for,manipulating,the,link,image,read,param,before,it,is,used,to,read,an,image,p,the,default,implementation,is,empty;protected,void,process,image,read,param,irp
BufferedImageHttpMessageConverter -> protected void process(ImageReadParam irp);1530174524;Template method that allows for manipulating the {@link ImageReadParam}_before it is used to read an image._<p>The default implementation is empty.;protected void process(ImageReadParam irp) {_	};template,method,that,allows,for,manipulating,the,link,image,read,param,before,it,is,used,to,read,an,image,p,the,default,implementation,is,empty;protected,void,process,image,read,param,irp
BufferedImageHttpMessageConverter -> protected void process(ImageReadParam irp);1530737169;Template method that allows for manipulating the {@link ImageReadParam}_before it is used to read an image._<p>The default implementation is empty.;protected void process(ImageReadParam irp) {_	};template,method,that,allows,for,manipulating,the,link,image,read,param,before,it,is,used,to,read,an,image,p,the,default,implementation,is,empty;protected,void,process,image,read,param,irp
BufferedImageHttpMessageConverter -> protected void process(ImageReadParam irp);1546457570;Template method that allows for manipulating the {@link ImageReadParam}_before it is used to read an image._<p>The default implementation is empty.;protected void process(ImageReadParam irp) {_	};template,method,that,allows,for,manipulating,the,link,image,read,param,before,it,is,used,to,read,an,image,p,the,default,implementation,is,empty;protected,void,process,image,read,param,irp
BufferedImageHttpMessageConverter -> public MediaType getDefaultContentType();1328020251;Returns the default {@code Content-Type} to be used for writing._Called when {@link #write} is invoked without a specified content type parameter.;public MediaType getDefaultContentType() {_		return this.defaultContentType__	};returns,the,default,code,content,type,to,be,used,for,writing,called,when,link,write,is,invoked,without,a,specified,content,type,parameter;public,media,type,get,default,content,type,return,this,default,content,type
BufferedImageHttpMessageConverter -> public MediaType getDefaultContentType();1356735495;Returns the default {@code Content-Type} to be used for writing._Called when {@link #write} is invoked without a specified content type parameter.;public MediaType getDefaultContentType() {_		return this.defaultContentType__	};returns,the,default,code,content,type,to,be,used,for,writing,called,when,link,write,is,invoked,without,a,specified,content,type,parameter;public,media,type,get,default,content,type,return,this,default,content,type
BufferedImageHttpMessageConverter -> public MediaType getDefaultContentType();1357119239;Returns the default {@code Content-Type} to be used for writing._Called when {@link #write} is invoked without a specified content type parameter.;public MediaType getDefaultContentType() {_		return this.defaultContentType__	};returns,the,default,code,content,type,to,be,used,for,writing,called,when,link,write,is,invoked,without,a,specified,content,type,parameter;public,media,type,get,default,content,type,return,this,default,content,type
BufferedImageHttpMessageConverter -> public MediaType getDefaultContentType();1362408075;Returns the default {@code Content-Type} to be used for writing._Called when {@link #write} is invoked without a specified content type parameter.;public MediaType getDefaultContentType() {_		return this.defaultContentType__	};returns,the,default,code,content,type,to,be,used,for,writing,called,when,link,write,is,invoked,without,a,specified,content,type,parameter;public,media,type,get,default,content,type,return,this,default,content,type
BufferedImageHttpMessageConverter -> public MediaType getDefaultContentType();1368482696;Returns the default {@code Content-Type} to be used for writing._Called when {@link #write} is invoked without a specified content type parameter.;public MediaType getDefaultContentType() {_		return this.defaultContentType__	};returns,the,default,code,content,type,to,be,used,for,writing,called,when,link,write,is,invoked,without,a,specified,content,type,parameter;public,media,type,get,default,content,type,return,this,default,content,type
BufferedImageHttpMessageConverter -> public MediaType getDefaultContentType();1395409383;Returns the default {@code Content-Type} to be used for writing._Called when {@link #write} is invoked without a specified content type parameter.;public MediaType getDefaultContentType() {_		return this.defaultContentType__	};returns,the,default,code,content,type,to,be,used,for,writing,called,when,link,write,is,invoked,without,a,specified,content,type,parameter;public,media,type,get,default,content,type,return,this,default,content,type
BufferedImageHttpMessageConverter -> public MediaType getDefaultContentType();1425613848;Returns the default {@code Content-Type} to be used for writing._Called when {@link #write} is invoked without a specified content type parameter.;public MediaType getDefaultContentType() {_		return this.defaultContentType__	};returns,the,default,code,content,type,to,be,used,for,writing,called,when,link,write,is,invoked,without,a,specified,content,type,parameter;public,media,type,get,default,content,type,return,this,default,content,type
BufferedImageHttpMessageConverter -> public MediaType getDefaultContentType();1425613848;Returns the default {@code Content-Type} to be used for writing._Called when {@link #write} is invoked without a specified content type parameter.;public MediaType getDefaultContentType() {_		return this.defaultContentType__	};returns,the,default,code,content,type,to,be,used,for,writing,called,when,link,write,is,invoked,without,a,specified,content,type,parameter;public,media,type,get,default,content,type,return,this,default,content,type
BufferedImageHttpMessageConverter -> public MediaType getDefaultContentType();1432125256;Returns the default {@code Content-Type} to be used for writing._Called when {@link #write} is invoked without a specified content type parameter.;public MediaType getDefaultContentType() {_		return this.defaultContentType__	};returns,the,default,code,content,type,to,be,used,for,writing,called,when,link,write,is,invoked,without,a,specified,content,type,parameter;public,media,type,get,default,content,type,return,this,default,content,type
BufferedImageHttpMessageConverter -> public MediaType getDefaultContentType();1454615953;Returns the default {@code Content-Type} to be used for writing._Called when {@link #write} is invoked without a specified content type parameter.;public MediaType getDefaultContentType() {_		return this.defaultContentType__	};returns,the,default,code,content,type,to,be,used,for,writing,called,when,link,write,is,invoked,without,a,specified,content,type,parameter;public,media,type,get,default,content,type,return,this,default,content,type
BufferedImageHttpMessageConverter -> public MediaType getDefaultContentType();1467730834;Returns the default {@code Content-Type} to be used for writing._Called when {@link #write} is invoked without a specified content type parameter.;public MediaType getDefaultContentType() {_		return this.defaultContentType__	};returns,the,default,code,content,type,to,be,used,for,writing,called,when,link,write,is,invoked,without,a,specified,content,type,parameter;public,media,type,get,default,content,type,return,this,default,content,type
BufferedImageHttpMessageConverter -> public MediaType getDefaultContentType();1496242568;Returns the default {@code Content-Type} to be used for writing._Called when {@link #write} is invoked without a specified content type parameter.;public MediaType getDefaultContentType() {_		return this.defaultContentType__	};returns,the,default,code,content,type,to,be,used,for,writing,called,when,link,write,is,invoked,without,a,specified,content,type,parameter;public,media,type,get,default,content,type,return,this,default,content,type
BufferedImageHttpMessageConverter -> public MediaType getDefaultContentType();1496259743;Returns the default {@code Content-Type} to be used for writing._Called when {@link #write} is invoked without a specified content type parameter.;public MediaType getDefaultContentType() {_		return this.defaultContentType__	};returns,the,default,code,content,type,to,be,used,for,writing,called,when,link,write,is,invoked,without,a,specified,content,type,parameter;public,media,type,get,default,content,type,return,this,default,content,type
BufferedImageHttpMessageConverter -> public MediaType getDefaultContentType();1496837955;Returns the default {@code Content-Type} to be used for writing._Called when {@link #write} is invoked without a specified content type parameter.;public MediaType getDefaultContentType() {_		return this.defaultContentType__	};returns,the,default,code,content,type,to,be,used,for,writing,called,when,link,write,is,invoked,without,a,specified,content,type,parameter;public,media,type,get,default,content,type,return,this,default,content,type
BufferedImageHttpMessageConverter -> @Nullable 	public MediaType getDefaultContentType();1498780456;Returns the default {@code Content-Type} to be used for writing._Called when {@link #write} is invoked without a specified content type parameter.;@Nullable_	public MediaType getDefaultContentType() {_		return this.defaultContentType__	};returns,the,default,code,content,type,to,be,used,for,writing,called,when,link,write,is,invoked,without,a,specified,content,type,parameter;nullable,public,media,type,get,default,content,type,return,this,default,content,type
BufferedImageHttpMessageConverter -> @Nullable 	public MediaType getDefaultContentType();1500448076;Returns the default {@code Content-Type} to be used for writing._Called when {@link #write} is invoked without a specified content type parameter.;@Nullable_	public MediaType getDefaultContentType() {_		return this.defaultContentType__	};returns,the,default,code,content,type,to,be,used,for,writing,called,when,link,write,is,invoked,without,a,specified,content,type,parameter;nullable,public,media,type,get,default,content,type,return,this,default,content,type
BufferedImageHttpMessageConverter -> @Nullable 	public MediaType getDefaultContentType();1520890308;Returns the default {@code Content-Type} to be used for writing._Called when {@link #write} is invoked without a specified content type parameter.;@Nullable_	public MediaType getDefaultContentType() {_		return this.defaultContentType__	};returns,the,default,code,content,type,to,be,used,for,writing,called,when,link,write,is,invoked,without,a,specified,content,type,parameter;nullable,public,media,type,get,default,content,type,return,this,default,content,type
BufferedImageHttpMessageConverter -> @Nullable 	public MediaType getDefaultContentType();1522231598;Returns the default {@code Content-Type} to be used for writing._Called when {@link #write} is invoked without a specified content type parameter.;@Nullable_	public MediaType getDefaultContentType() {_		return this.defaultContentType__	};returns,the,default,code,content,type,to,be,used,for,writing,called,when,link,write,is,invoked,without,a,specified,content,type,parameter;nullable,public,media,type,get,default,content,type,return,this,default,content,type
BufferedImageHttpMessageConverter -> @Nullable 	public MediaType getDefaultContentType();1530174524;Returns the default {@code Content-Type} to be used for writing._Called when {@link #write} is invoked without a specified content type parameter.;@Nullable_	public MediaType getDefaultContentType() {_		return this.defaultContentType__	};returns,the,default,code,content,type,to,be,used,for,writing,called,when,link,write,is,invoked,without,a,specified,content,type,parameter;nullable,public,media,type,get,default,content,type,return,this,default,content,type
BufferedImageHttpMessageConverter -> @Nullable 	public MediaType getDefaultContentType();1530737169;Returns the default {@code Content-Type} to be used for writing._Called when {@link #write} is invoked without a specified content type parameter.;@Nullable_	public MediaType getDefaultContentType() {_		return this.defaultContentType__	};returns,the,default,code,content,type,to,be,used,for,writing,called,when,link,write,is,invoked,without,a,specified,content,type,parameter;nullable,public,media,type,get,default,content,type,return,this,default,content,type
BufferedImageHttpMessageConverter -> @Nullable 	public MediaType getDefaultContentType();1546457570;Returns the default {@code Content-Type} to be used for writing._Called when {@link #write} is invoked without a specified content type parameter.;@Nullable_	public MediaType getDefaultContentType() {_		return this.defaultContentType__	};returns,the,default,code,content,type,to,be,used,for,writing,called,when,link,write,is,invoked,without,a,specified,content,type,parameter;nullable,public,media,type,get,default,content,type,return,this,default,content,type
BufferedImageHttpMessageConverter -> public void setCacheDir(File cacheDir);1328020251;Sets the cache directory. If this property is set to an existing directory,_this converter will cache image data.;public void setCacheDir(File cacheDir) {_		Assert.notNull(cacheDir, "'cacheDir' must not be null")__		Assert.isTrue(cacheDir.isDirectory(), "'cacheDir' is not a directory")__		this.cacheDir = cacheDir__	};sets,the,cache,directory,if,this,property,is,set,to,an,existing,directory,this,converter,will,cache,image,data;public,void,set,cache,dir,file,cache,dir,assert,not,null,cache,dir,cache,dir,must,not,be,null,assert,is,true,cache,dir,is,directory,cache,dir,is,not,a,directory,this,cache,dir,cache,dir
BufferedImageHttpMessageConverter -> public void setCacheDir(File cacheDir);1356735495;Sets the cache directory. If this property is set to an existing directory,_this converter will cache image data.;public void setCacheDir(File cacheDir) {_		Assert.notNull(cacheDir, "'cacheDir' must not be null")__		Assert.isTrue(cacheDir.isDirectory(), "'cacheDir' is not a directory")__		this.cacheDir = cacheDir__	};sets,the,cache,directory,if,this,property,is,set,to,an,existing,directory,this,converter,will,cache,image,data;public,void,set,cache,dir,file,cache,dir,assert,not,null,cache,dir,cache,dir,must,not,be,null,assert,is,true,cache,dir,is,directory,cache,dir,is,not,a,directory,this,cache,dir,cache,dir
BufferedImageHttpMessageConverter -> public void setCacheDir(File cacheDir);1357119239;Sets the cache directory. If this property is set to an existing directory,_this converter will cache image data.;public void setCacheDir(File cacheDir) {_		Assert.notNull(cacheDir, "'cacheDir' must not be null")__		Assert.isTrue(cacheDir.isDirectory(), "'cacheDir' is not a directory")__		this.cacheDir = cacheDir__	};sets,the,cache,directory,if,this,property,is,set,to,an,existing,directory,this,converter,will,cache,image,data;public,void,set,cache,dir,file,cache,dir,assert,not,null,cache,dir,cache,dir,must,not,be,null,assert,is,true,cache,dir,is,directory,cache,dir,is,not,a,directory,this,cache,dir,cache,dir
BufferedImageHttpMessageConverter -> public void setCacheDir(File cacheDir);1362408075;Sets the cache directory. If this property is set to an existing directory,_this converter will cache image data.;public void setCacheDir(File cacheDir) {_		Assert.notNull(cacheDir, "'cacheDir' must not be null")__		Assert.isTrue(cacheDir.isDirectory(), "'cacheDir' is not a directory")__		this.cacheDir = cacheDir__	};sets,the,cache,directory,if,this,property,is,set,to,an,existing,directory,this,converter,will,cache,image,data;public,void,set,cache,dir,file,cache,dir,assert,not,null,cache,dir,cache,dir,must,not,be,null,assert,is,true,cache,dir,is,directory,cache,dir,is,not,a,directory,this,cache,dir,cache,dir
BufferedImageHttpMessageConverter -> public void setCacheDir(File cacheDir);1368482696;Sets the cache directory. If this property is set to an existing directory,_this converter will cache image data.;public void setCacheDir(File cacheDir) {_		Assert.notNull(cacheDir, "'cacheDir' must not be null")__		Assert.isTrue(cacheDir.isDirectory(), "'cacheDir' is not a directory")__		this.cacheDir = cacheDir__	};sets,the,cache,directory,if,this,property,is,set,to,an,existing,directory,this,converter,will,cache,image,data;public,void,set,cache,dir,file,cache,dir,assert,not,null,cache,dir,cache,dir,must,not,be,null,assert,is,true,cache,dir,is,directory,cache,dir,is,not,a,directory,this,cache,dir,cache,dir
BufferedImageHttpMessageConverter -> public void setCacheDir(File cacheDir);1395409383;Sets the cache directory. If this property is set to an existing directory,_this converter will cache image data.;public void setCacheDir(File cacheDir) {_		Assert.notNull(cacheDir, "'cacheDir' must not be null")__		Assert.isTrue(cacheDir.isDirectory(), "'cacheDir' is not a directory")__		this.cacheDir = cacheDir__	};sets,the,cache,directory,if,this,property,is,set,to,an,existing,directory,this,converter,will,cache,image,data;public,void,set,cache,dir,file,cache,dir,assert,not,null,cache,dir,cache,dir,must,not,be,null,assert,is,true,cache,dir,is,directory,cache,dir,is,not,a,directory,this,cache,dir,cache,dir
BufferedImageHttpMessageConverter -> public void setCacheDir(File cacheDir);1425613848;Sets the cache directory. If this property is set to an existing directory,_this converter will cache image data.;public void setCacheDir(File cacheDir) {_		Assert.notNull(cacheDir, "'cacheDir' must not be null")__		Assert.isTrue(cacheDir.isDirectory(), "'cacheDir' is not a directory")__		this.cacheDir = cacheDir__	};sets,the,cache,directory,if,this,property,is,set,to,an,existing,directory,this,converter,will,cache,image,data;public,void,set,cache,dir,file,cache,dir,assert,not,null,cache,dir,cache,dir,must,not,be,null,assert,is,true,cache,dir,is,directory,cache,dir,is,not,a,directory,this,cache,dir,cache,dir
BufferedImageHttpMessageConverter -> public void setCacheDir(File cacheDir);1425613848;Sets the cache directory. If this property is set to an existing directory,_this converter will cache image data.;public void setCacheDir(File cacheDir) {_		Assert.notNull(cacheDir, "'cacheDir' must not be null")__		Assert.isTrue(cacheDir.isDirectory(), "'cacheDir' is not a directory")__		this.cacheDir = cacheDir__	};sets,the,cache,directory,if,this,property,is,set,to,an,existing,directory,this,converter,will,cache,image,data;public,void,set,cache,dir,file,cache,dir,assert,not,null,cache,dir,cache,dir,must,not,be,null,assert,is,true,cache,dir,is,directory,cache,dir,is,not,a,directory,this,cache,dir,cache,dir
BufferedImageHttpMessageConverter -> public void setCacheDir(File cacheDir);1432125256;Sets the cache directory. If this property is set to an existing directory,_this converter will cache image data.;public void setCacheDir(File cacheDir) {_		Assert.notNull(cacheDir, "'cacheDir' must not be null")__		Assert.isTrue(cacheDir.isDirectory(), "'cacheDir' is not a directory")__		this.cacheDir = cacheDir__	};sets,the,cache,directory,if,this,property,is,set,to,an,existing,directory,this,converter,will,cache,image,data;public,void,set,cache,dir,file,cache,dir,assert,not,null,cache,dir,cache,dir,must,not,be,null,assert,is,true,cache,dir,is,directory,cache,dir,is,not,a,directory,this,cache,dir,cache,dir
BufferedImageHttpMessageConverter -> public void setCacheDir(File cacheDir);1454615953;Sets the cache directory. If this property is set to an existing directory,_this converter will cache image data.;public void setCacheDir(File cacheDir) {_		Assert.notNull(cacheDir, "'cacheDir' must not be null")__		Assert.isTrue(cacheDir.isDirectory(), "'cacheDir' is not a directory")__		this.cacheDir = cacheDir__	};sets,the,cache,directory,if,this,property,is,set,to,an,existing,directory,this,converter,will,cache,image,data;public,void,set,cache,dir,file,cache,dir,assert,not,null,cache,dir,cache,dir,must,not,be,null,assert,is,true,cache,dir,is,directory,cache,dir,is,not,a,directory,this,cache,dir,cache,dir
BufferedImageHttpMessageConverter -> public void setCacheDir(File cacheDir);1467730834;Sets the cache directory. If this property is set to an existing directory,_this converter will cache image data.;public void setCacheDir(File cacheDir) {_		Assert.notNull(cacheDir, "'cacheDir' must not be null")__		Assert.isTrue(cacheDir.isDirectory(), "'cacheDir' is not a directory")__		this.cacheDir = cacheDir__	};sets,the,cache,directory,if,this,property,is,set,to,an,existing,directory,this,converter,will,cache,image,data;public,void,set,cache,dir,file,cache,dir,assert,not,null,cache,dir,cache,dir,must,not,be,null,assert,is,true,cache,dir,is,directory,cache,dir,is,not,a,directory,this,cache,dir,cache,dir
BufferedImageHttpMessageConverter -> public void setCacheDir(File cacheDir);1496242568;Sets the cache directory. If this property is set to an existing directory,_this converter will cache image data.;public void setCacheDir(File cacheDir) {_		Assert.notNull(cacheDir, "'cacheDir' must not be null")__		Assert.isTrue(cacheDir.isDirectory(), "'cacheDir' is not a directory")__		this.cacheDir = cacheDir__	};sets,the,cache,directory,if,this,property,is,set,to,an,existing,directory,this,converter,will,cache,image,data;public,void,set,cache,dir,file,cache,dir,assert,not,null,cache,dir,cache,dir,must,not,be,null,assert,is,true,cache,dir,is,directory,cache,dir,is,not,a,directory,this,cache,dir,cache,dir
BufferedImageHttpMessageConverter -> public void setCacheDir(File cacheDir);1496259743;Sets the cache directory. If this property is set to an existing directory,_this converter will cache image data.;public void setCacheDir(File cacheDir) {_		Assert.notNull(cacheDir, "'cacheDir' must not be null")__		Assert.isTrue(cacheDir.isDirectory(), "'cacheDir' is not a directory")__		this.cacheDir = cacheDir__	};sets,the,cache,directory,if,this,property,is,set,to,an,existing,directory,this,converter,will,cache,image,data;public,void,set,cache,dir,file,cache,dir,assert,not,null,cache,dir,cache,dir,must,not,be,null,assert,is,true,cache,dir,is,directory,cache,dir,is,not,a,directory,this,cache,dir,cache,dir
BufferedImageHttpMessageConverter -> public void setCacheDir(File cacheDir);1496837955;Sets the cache directory. If this property is set to an existing directory,_this converter will cache image data.;public void setCacheDir(File cacheDir) {_		Assert.notNull(cacheDir, "'cacheDir' must not be null")__		Assert.isTrue(cacheDir.isDirectory(), "'cacheDir' is not a directory")__		this.cacheDir = cacheDir__	};sets,the,cache,directory,if,this,property,is,set,to,an,existing,directory,this,converter,will,cache,image,data;public,void,set,cache,dir,file,cache,dir,assert,not,null,cache,dir,cache,dir,must,not,be,null,assert,is,true,cache,dir,is,directory,cache,dir,is,not,a,directory,this,cache,dir,cache,dir
BufferedImageHttpMessageConverter -> public void setCacheDir(File cacheDir);1498780456;Sets the cache directory. If this property is set to an existing directory,_this converter will cache image data.;public void setCacheDir(File cacheDir) {_		Assert.notNull(cacheDir, "'cacheDir' must not be null")__		Assert.isTrue(cacheDir.isDirectory(), "'cacheDir' is not a directory")__		this.cacheDir = cacheDir__	};sets,the,cache,directory,if,this,property,is,set,to,an,existing,directory,this,converter,will,cache,image,data;public,void,set,cache,dir,file,cache,dir,assert,not,null,cache,dir,cache,dir,must,not,be,null,assert,is,true,cache,dir,is,directory,cache,dir,is,not,a,directory,this,cache,dir,cache,dir
BufferedImageHttpMessageConverter -> public void setCacheDir(File cacheDir);1500448076;Sets the cache directory. If this property is set to an existing directory,_this converter will cache image data.;public void setCacheDir(File cacheDir) {_		Assert.notNull(cacheDir, "'cacheDir' must not be null")__		Assert.isTrue(cacheDir.isDirectory(), "'cacheDir' is not a directory")__		this.cacheDir = cacheDir__	};sets,the,cache,directory,if,this,property,is,set,to,an,existing,directory,this,converter,will,cache,image,data;public,void,set,cache,dir,file,cache,dir,assert,not,null,cache,dir,cache,dir,must,not,be,null,assert,is,true,cache,dir,is,directory,cache,dir,is,not,a,directory,this,cache,dir,cache,dir
BufferedImageHttpMessageConverter -> public void setCacheDir(File cacheDir);1520890308;Sets the cache directory. If this property is set to an existing directory,_this converter will cache image data.;public void setCacheDir(File cacheDir) {_		Assert.notNull(cacheDir, "'cacheDir' must not be null")__		Assert.isTrue(cacheDir.isDirectory(), "'cacheDir' is not a directory")__		this.cacheDir = cacheDir__	};sets,the,cache,directory,if,this,property,is,set,to,an,existing,directory,this,converter,will,cache,image,data;public,void,set,cache,dir,file,cache,dir,assert,not,null,cache,dir,cache,dir,must,not,be,null,assert,is,true,cache,dir,is,directory,cache,dir,is,not,a,directory,this,cache,dir,cache,dir
BufferedImageHttpMessageConverter -> public void setCacheDir(File cacheDir);1522231598;Sets the cache directory. If this property is set to an existing directory,_this converter will cache image data.;public void setCacheDir(File cacheDir) {_		Assert.notNull(cacheDir, "'cacheDir' must not be null")__		Assert.isTrue(cacheDir.isDirectory(), "'cacheDir' is not a directory")__		this.cacheDir = cacheDir__	};sets,the,cache,directory,if,this,property,is,set,to,an,existing,directory,this,converter,will,cache,image,data;public,void,set,cache,dir,file,cache,dir,assert,not,null,cache,dir,cache,dir,must,not,be,null,assert,is,true,cache,dir,is,directory,cache,dir,is,not,a,directory,this,cache,dir,cache,dir
BufferedImageHttpMessageConverter -> public void setCacheDir(File cacheDir);1530174524;Sets the cache directory. If this property is set to an existing directory,_this converter will cache image data.;public void setCacheDir(File cacheDir) {_		Assert.notNull(cacheDir, "'cacheDir' must not be null")__		Assert.isTrue(cacheDir.isDirectory(), "'cacheDir' is not a directory")__		this.cacheDir = cacheDir__	};sets,the,cache,directory,if,this,property,is,set,to,an,existing,directory,this,converter,will,cache,image,data;public,void,set,cache,dir,file,cache,dir,assert,not,null,cache,dir,cache,dir,must,not,be,null,assert,is,true,cache,dir,is,directory,cache,dir,is,not,a,directory,this,cache,dir,cache,dir
BufferedImageHttpMessageConverter -> public void setCacheDir(File cacheDir);1530737169;Sets the cache directory. If this property is set to an existing directory,_this converter will cache image data.;public void setCacheDir(File cacheDir) {_		Assert.notNull(cacheDir, "'cacheDir' must not be null")__		Assert.isTrue(cacheDir.isDirectory(), "'cacheDir' is not a directory")__		this.cacheDir = cacheDir__	};sets,the,cache,directory,if,this,property,is,set,to,an,existing,directory,this,converter,will,cache,image,data;public,void,set,cache,dir,file,cache,dir,assert,not,null,cache,dir,cache,dir,must,not,be,null,assert,is,true,cache,dir,is,directory,cache,dir,is,not,a,directory,this,cache,dir,cache,dir
BufferedImageHttpMessageConverter -> public void setCacheDir(File cacheDir);1546457570;Sets the cache directory. If this property is set to an existing directory,_this converter will cache image data.;public void setCacheDir(File cacheDir) {_		Assert.notNull(cacheDir, "'cacheDir' must not be null")__		Assert.isTrue(cacheDir.isDirectory(), "'cacheDir' is not a directory")__		this.cacheDir = cacheDir__	};sets,the,cache,directory,if,this,property,is,set,to,an,existing,directory,this,converter,will,cache,image,data;public,void,set,cache,dir,file,cache,dir,assert,not,null,cache,dir,cache,dir,must,not,be,null,assert,is,true,cache,dir,is,directory,cache,dir,is,not,a,directory,this,cache,dir,cache,dir
BufferedImageHttpMessageConverter -> public void setDefaultContentType(@Nullable MediaType defaultContentType);1500448076;Sets the default {@code Content-Type} to be used for writing._@throws IllegalArgumentException if the given content type is not supported by the Java Image I/O API;public void setDefaultContentType(@Nullable MediaType defaultContentType) {_		if (defaultContentType!= null) {_			Iterator<ImageWriter> imageWriters = ImageIO.getImageWritersByMIMEType(defaultContentType.toString())__			if (!imageWriters.hasNext()) {_				throw new IllegalArgumentException(_						"Content-Type [" + defaultContentType + "] is not supported by the Java Image I/O API")__			}_		}__		this.defaultContentType = defaultContentType__	};sets,the,default,code,content,type,to,be,used,for,writing,throws,illegal,argument,exception,if,the,given,content,type,is,not,supported,by,the,java,image,i,o,api;public,void,set,default,content,type,nullable,media,type,default,content,type,if,default,content,type,null,iterator,image,writer,image,writers,image,io,get,image,writers,by,mimetype,default,content,type,to,string,if,image,writers,has,next,throw,new,illegal,argument,exception,content,type,default,content,type,is,not,supported,by,the,java,image,i,o,api,this,default,content,type,default,content,type
BufferedImageHttpMessageConverter -> public void setDefaultContentType(@Nullable MediaType defaultContentType);1520890308;Sets the default {@code Content-Type} to be used for writing._@throws IllegalArgumentException if the given content type is not supported by the Java Image I/O API;public void setDefaultContentType(@Nullable MediaType defaultContentType) {_		if (defaultContentType!= null) {_			Iterator<ImageWriter> imageWriters = ImageIO.getImageWritersByMIMEType(defaultContentType.toString())__			if (!imageWriters.hasNext()) {_				throw new IllegalArgumentException(_						"Content-Type [" + defaultContentType + "] is not supported by the Java Image I/O API")__			}_		}__		this.defaultContentType = defaultContentType__	};sets,the,default,code,content,type,to,be,used,for,writing,throws,illegal,argument,exception,if,the,given,content,type,is,not,supported,by,the,java,image,i,o,api;public,void,set,default,content,type,nullable,media,type,default,content,type,if,default,content,type,null,iterator,image,writer,image,writers,image,io,get,image,writers,by,mimetype,default,content,type,to,string,if,image,writers,has,next,throw,new,illegal,argument,exception,content,type,default,content,type,is,not,supported,by,the,java,image,i,o,api,this,default,content,type,default,content,type
BufferedImageHttpMessageConverter -> public void setDefaultContentType(@Nullable MediaType defaultContentType);1522231598;Sets the default {@code Content-Type} to be used for writing._@throws IllegalArgumentException if the given content type is not supported by the Java Image I/O API;public void setDefaultContentType(@Nullable MediaType defaultContentType) {_		if (defaultContentType != null) {_			Iterator<ImageWriter> imageWriters = ImageIO.getImageWritersByMIMEType(defaultContentType.toString())__			if (!imageWriters.hasNext()) {_				throw new IllegalArgumentException(_						"Content-Type [" + defaultContentType + "] is not supported by the Java Image I/O API")__			}_		}__		this.defaultContentType = defaultContentType__	};sets,the,default,code,content,type,to,be,used,for,writing,throws,illegal,argument,exception,if,the,given,content,type,is,not,supported,by,the,java,image,i,o,api;public,void,set,default,content,type,nullable,media,type,default,content,type,if,default,content,type,null,iterator,image,writer,image,writers,image,io,get,image,writers,by,mimetype,default,content,type,to,string,if,image,writers,has,next,throw,new,illegal,argument,exception,content,type,default,content,type,is,not,supported,by,the,java,image,i,o,api,this,default,content,type,default,content,type
BufferedImageHttpMessageConverter -> public void setDefaultContentType(@Nullable MediaType defaultContentType);1530174524;Sets the default {@code Content-Type} to be used for writing._@throws IllegalArgumentException if the given content type is not supported by the Java Image I/O API;public void setDefaultContentType(@Nullable MediaType defaultContentType) {_		if (defaultContentType != null) {_			Iterator<ImageWriter> imageWriters = ImageIO.getImageWritersByMIMEType(defaultContentType.toString())__			if (!imageWriters.hasNext()) {_				throw new IllegalArgumentException(_						"Content-Type [" + defaultContentType + "] is not supported by the Java Image I/O API")__			}_		}__		this.defaultContentType = defaultContentType__	};sets,the,default,code,content,type,to,be,used,for,writing,throws,illegal,argument,exception,if,the,given,content,type,is,not,supported,by,the,java,image,i,o,api;public,void,set,default,content,type,nullable,media,type,default,content,type,if,default,content,type,null,iterator,image,writer,image,writers,image,io,get,image,writers,by,mimetype,default,content,type,to,string,if,image,writers,has,next,throw,new,illegal,argument,exception,content,type,default,content,type,is,not,supported,by,the,java,image,i,o,api,this,default,content,type,default,content,type
BufferedImageHttpMessageConverter -> public void setDefaultContentType(@Nullable MediaType defaultContentType);1530737169;Sets the default {@code Content-Type} to be used for writing._@throws IllegalArgumentException if the given content type is not supported by the Java Image I/O API;public void setDefaultContentType(@Nullable MediaType defaultContentType) {_		if (defaultContentType != null) {_			Iterator<ImageWriter> imageWriters = ImageIO.getImageWritersByMIMEType(defaultContentType.toString())__			if (!imageWriters.hasNext()) {_				throw new IllegalArgumentException(_						"Content-Type [" + defaultContentType + "] is not supported by the Java Image I/O API")__			}_		}__		this.defaultContentType = defaultContentType__	};sets,the,default,code,content,type,to,be,used,for,writing,throws,illegal,argument,exception,if,the,given,content,type,is,not,supported,by,the,java,image,i,o,api;public,void,set,default,content,type,nullable,media,type,default,content,type,if,default,content,type,null,iterator,image,writer,image,writers,image,io,get,image,writers,by,mimetype,default,content,type,to,string,if,image,writers,has,next,throw,new,illegal,argument,exception,content,type,default,content,type,is,not,supported,by,the,java,image,i,o,api,this,default,content,type,default,content,type
BufferedImageHttpMessageConverter -> public void setDefaultContentType(@Nullable MediaType defaultContentType);1546457570;Sets the default {@code Content-Type} to be used for writing._@throws IllegalArgumentException if the given content type is not supported by the Java Image I/O API;public void setDefaultContentType(@Nullable MediaType defaultContentType) {_		if (defaultContentType != null) {_			Iterator<ImageWriter> imageWriters = ImageIO.getImageWritersByMIMEType(defaultContentType.toString())__			if (!imageWriters.hasNext()) {_				throw new IllegalArgumentException(_						"Content-Type [" + defaultContentType + "] is not supported by the Java Image I/O API")__			}_		}__		this.defaultContentType = defaultContentType__	};sets,the,default,code,content,type,to,be,used,for,writing,throws,illegal,argument,exception,if,the,given,content,type,is,not,supported,by,the,java,image,i,o,api;public,void,set,default,content,type,nullable,media,type,default,content,type,if,default,content,type,null,iterator,image,writer,image,writers,image,io,get,image,writers,by,mimetype,default,content,type,to,string,if,image,writers,has,next,throw,new,illegal,argument,exception,content,type,default,content,type,is,not,supported,by,the,java,image,i,o,api,this,default,content,type,default,content,type
BufferedImageHttpMessageConverter -> protected void process(ImageWriteParam iwp);1328020251;Template method that allows for manipulating the {@link ImageWriteParam} before it is used to write an image._<p>Default implementation is empty.;protected void process(ImageWriteParam iwp) {_	};template,method,that,allows,for,manipulating,the,link,image,write,param,before,it,is,used,to,write,an,image,p,default,implementation,is,empty;protected,void,process,image,write,param,iwp
BufferedImageHttpMessageConverter -> protected void process(ImageWriteParam iwp);1356735495;Template method that allows for manipulating the {@link ImageWriteParam} before it is used to write an image._<p>Default implementation is empty.;protected void process(ImageWriteParam iwp) {_	};template,method,that,allows,for,manipulating,the,link,image,write,param,before,it,is,used,to,write,an,image,p,default,implementation,is,empty;protected,void,process,image,write,param,iwp
BufferedImageHttpMessageConverter -> protected void process(ImageWriteParam iwp);1357119239;Template method that allows for manipulating the {@link ImageWriteParam} before it is used to write an image._<p>Default implementation is empty.;protected void process(ImageWriteParam iwp) {_	};template,method,that,allows,for,manipulating,the,link,image,write,param,before,it,is,used,to,write,an,image,p,default,implementation,is,empty;protected,void,process,image,write,param,iwp
BufferedImageHttpMessageConverter -> protected void process(ImageWriteParam iwp);1362408075;Template method that allows for manipulating the {@link ImageWriteParam} before it is used to write an image._<p>Default implementation is empty.;protected void process(ImageWriteParam iwp) {_	};template,method,that,allows,for,manipulating,the,link,image,write,param,before,it,is,used,to,write,an,image,p,default,implementation,is,empty;protected,void,process,image,write,param,iwp
BufferedImageHttpMessageConverter -> protected void process(ImageWriteParam iwp);1368482696;Template method that allows for manipulating the {@link ImageWriteParam} before it is used to write an image._<p>Default implementation is empty.;protected void process(ImageWriteParam iwp) {_	};template,method,that,allows,for,manipulating,the,link,image,write,param,before,it,is,used,to,write,an,image,p,default,implementation,is,empty;protected,void,process,image,write,param,iwp
BufferedImageHttpMessageConverter -> protected void process(ImageWriteParam iwp);1395409383;Template method that allows for manipulating the {@link ImageWriteParam}_before it is used to write an image._<p>The default implementation is empty.;protected void process(ImageWriteParam iwp) {_	};template,method,that,allows,for,manipulating,the,link,image,write,param,before,it,is,used,to,write,an,image,p,the,default,implementation,is,empty;protected,void,process,image,write,param,iwp
BufferedImageHttpMessageConverter -> protected void process(ImageWriteParam iwp);1425613848;Template method that allows for manipulating the {@link ImageWriteParam}_before it is used to write an image._<p>The default implementation is empty.;protected void process(ImageWriteParam iwp) {_	};template,method,that,allows,for,manipulating,the,link,image,write,param,before,it,is,used,to,write,an,image,p,the,default,implementation,is,empty;protected,void,process,image,write,param,iwp
BufferedImageHttpMessageConverter -> protected void process(ImageWriteParam iwp);1425613848;Template method that allows for manipulating the {@link ImageWriteParam}_before it is used to write an image._<p>The default implementation is empty.;protected void process(ImageWriteParam iwp) {_	};template,method,that,allows,for,manipulating,the,link,image,write,param,before,it,is,used,to,write,an,image,p,the,default,implementation,is,empty;protected,void,process,image,write,param,iwp
BufferedImageHttpMessageConverter -> protected void process(ImageWriteParam iwp);1432125256;Template method that allows for manipulating the {@link ImageWriteParam}_before it is used to write an image._<p>The default implementation is empty.;protected void process(ImageWriteParam iwp) {_	};template,method,that,allows,for,manipulating,the,link,image,write,param,before,it,is,used,to,write,an,image,p,the,default,implementation,is,empty;protected,void,process,image,write,param,iwp
BufferedImageHttpMessageConverter -> protected void process(ImageWriteParam iwp);1454615953;Template method that allows for manipulating the {@link ImageWriteParam}_before it is used to write an image._<p>The default implementation is empty.;protected void process(ImageWriteParam iwp) {_	};template,method,that,allows,for,manipulating,the,link,image,write,param,before,it,is,used,to,write,an,image,p,the,default,implementation,is,empty;protected,void,process,image,write,param,iwp
BufferedImageHttpMessageConverter -> protected void process(ImageWriteParam iwp);1467730834;Template method that allows for manipulating the {@link ImageWriteParam}_before it is used to write an image._<p>The default implementation is empty.;protected void process(ImageWriteParam iwp) {_	};template,method,that,allows,for,manipulating,the,link,image,write,param,before,it,is,used,to,write,an,image,p,the,default,implementation,is,empty;protected,void,process,image,write,param,iwp
BufferedImageHttpMessageConverter -> protected void process(ImageWriteParam iwp);1496242568;Template method that allows for manipulating the {@link ImageWriteParam}_before it is used to write an image._<p>The default implementation is empty.;protected void process(ImageWriteParam iwp) {_	};template,method,that,allows,for,manipulating,the,link,image,write,param,before,it,is,used,to,write,an,image,p,the,default,implementation,is,empty;protected,void,process,image,write,param,iwp
BufferedImageHttpMessageConverter -> protected void process(ImageWriteParam iwp);1496259743;Template method that allows for manipulating the {@link ImageWriteParam}_before it is used to write an image._<p>The default implementation is empty.;protected void process(ImageWriteParam iwp) {_	};template,method,that,allows,for,manipulating,the,link,image,write,param,before,it,is,used,to,write,an,image,p,the,default,implementation,is,empty;protected,void,process,image,write,param,iwp
BufferedImageHttpMessageConverter -> protected void process(ImageWriteParam iwp);1496837955;Template method that allows for manipulating the {@link ImageWriteParam}_before it is used to write an image._<p>The default implementation is empty.;protected void process(ImageWriteParam iwp) {_	};template,method,that,allows,for,manipulating,the,link,image,write,param,before,it,is,used,to,write,an,image,p,the,default,implementation,is,empty;protected,void,process,image,write,param,iwp
BufferedImageHttpMessageConverter -> protected void process(ImageWriteParam iwp);1498780456;Template method that allows for manipulating the {@link ImageWriteParam}_before it is used to write an image._<p>The default implementation is empty.;protected void process(ImageWriteParam iwp) {_	};template,method,that,allows,for,manipulating,the,link,image,write,param,before,it,is,used,to,write,an,image,p,the,default,implementation,is,empty;protected,void,process,image,write,param,iwp
BufferedImageHttpMessageConverter -> protected void process(ImageWriteParam iwp);1500448076;Template method that allows for manipulating the {@link ImageWriteParam}_before it is used to write an image._<p>The default implementation is empty.;protected void process(ImageWriteParam iwp) {_	};template,method,that,allows,for,manipulating,the,link,image,write,param,before,it,is,used,to,write,an,image,p,the,default,implementation,is,empty;protected,void,process,image,write,param,iwp
BufferedImageHttpMessageConverter -> protected void process(ImageWriteParam iwp);1520890308;Template method that allows for manipulating the {@link ImageWriteParam}_before it is used to write an image._<p>The default implementation is empty.;protected void process(ImageWriteParam iwp) {_	};template,method,that,allows,for,manipulating,the,link,image,write,param,before,it,is,used,to,write,an,image,p,the,default,implementation,is,empty;protected,void,process,image,write,param,iwp
BufferedImageHttpMessageConverter -> protected void process(ImageWriteParam iwp);1522231598;Template method that allows for manipulating the {@link ImageWriteParam}_before it is used to write an image._<p>The default implementation is empty.;protected void process(ImageWriteParam iwp) {_	};template,method,that,allows,for,manipulating,the,link,image,write,param,before,it,is,used,to,write,an,image,p,the,default,implementation,is,empty;protected,void,process,image,write,param,iwp
BufferedImageHttpMessageConverter -> protected void process(ImageWriteParam iwp);1530174524;Template method that allows for manipulating the {@link ImageWriteParam}_before it is used to write an image._<p>The default implementation is empty.;protected void process(ImageWriteParam iwp) {_	};template,method,that,allows,for,manipulating,the,link,image,write,param,before,it,is,used,to,write,an,image,p,the,default,implementation,is,empty;protected,void,process,image,write,param,iwp
BufferedImageHttpMessageConverter -> protected void process(ImageWriteParam iwp);1530737169;Template method that allows for manipulating the {@link ImageWriteParam}_before it is used to write an image._<p>The default implementation is empty.;protected void process(ImageWriteParam iwp) {_	};template,method,that,allows,for,manipulating,the,link,image,write,param,before,it,is,used,to,write,an,image,p,the,default,implementation,is,empty;protected,void,process,image,write,param,iwp
BufferedImageHttpMessageConverter -> protected void process(ImageWriteParam iwp);1546457570;Template method that allows for manipulating the {@link ImageWriteParam}_before it is used to write an image._<p>The default implementation is empty.;protected void process(ImageWriteParam iwp) {_	};template,method,that,allows,for,manipulating,the,link,image,write,param,before,it,is,used,to,write,an,image,p,the,default,implementation,is,empty;protected,void,process,image,write,param,iwp
