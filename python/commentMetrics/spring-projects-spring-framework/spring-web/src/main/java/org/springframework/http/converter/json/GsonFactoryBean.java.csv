# id;timestamp;commentText;codeText;commentWords;codeWords
GsonFactoryBean -> public void setGsonBuilder(GsonBuilder gsonBuilder);1400811712;Set the GsonBuilder instance to use. If not set, the GsonBuilder will be created_using its default constructor.;public void setGsonBuilder(GsonBuilder gsonBuilder) {_		this.gsonBuilder = gsonBuilder__	};set,the,gson,builder,instance,to,use,if,not,set,the,gson,builder,will,be,created,using,its,default,constructor;public,void,set,gson,builder,gson,builder,gson,builder,this,gson,builder,gson,builder
GsonFactoryBean -> public void setGsonBuilder(GsonBuilder gsonBuilder);1400811712;Set the GsonBuilder instance to use. If not set, the GsonBuilder will be_created using its default constructor.;public void setGsonBuilder(GsonBuilder gsonBuilder) {_		this.gsonBuilder = gsonBuilder__	};set,the,gson,builder,instance,to,use,if,not,set,the,gson,builder,will,be,created,using,its,default,constructor;public,void,set,gson,builder,gson,builder,gson,builder,this,gson,builder,gson,builder
GsonFactoryBean -> public void setGsonBuilder(GsonBuilder gsonBuilder);1401208008;Set the GsonBuilder instance to use._If not set, the GsonBuilder will be created using its default constructor.;public void setGsonBuilder(GsonBuilder gsonBuilder) {_		this.gsonBuilder = gsonBuilder__	};set,the,gson,builder,instance,to,use,if,not,set,the,gson,builder,will,be,created,using,its,default,constructor;public,void,set,gson,builder,gson,builder,gson,builder,this,gson,builder,gson,builder
GsonFactoryBean -> @Override 	public Gson getObject() throws Exception;1400811712;Return the singleton Gson.;@Override_	public Gson getObject() throws Exception {_		return this.gson__	};return,the,singleton,gson;override,public,gson,get,object,throws,exception,return,this,gson
GsonFactoryBean -> @Override 	public Gson getObject() throws Exception;1400811712;Return the created Gson instance.;@Override_	public Gson getObject() throws Exception {_		return this.gson__	};return,the,created,gson,instance;override,public,gson,get,object,throws,exception,return,this,gson
GsonFactoryBean -> public void setDateFormatPattern(String dateFormatPattern);1401208008;Define the date/time format with a {@link SimpleDateFormat}-style pattern._This is a shortcut for setting up a {@code Gson} as follows:_<pre class="code">_new GsonBuilder().setDateFormat(dateFormatPattern).create()__</pre>;public void setDateFormatPattern(String dateFormatPattern) {_		this.dateFormatPattern = dateFormatPattern__	};define,the,date,time,format,with,a,link,simple,date,format,style,pattern,this,is,a,shortcut,for,setting,up,a,code,gson,as,follows,pre,class,code,new,gson,builder,set,date,format,date,format,pattern,create,pre;public,void,set,date,format,pattern,string,date,format,pattern,this,date,format,pattern,date,format,pattern
GsonFactoryBean -> public void setDateFormatPattern(String dateFormatPattern);1401880931;Define the date/time format with a {@link SimpleDateFormat}-style pattern._This is a shortcut for setting up a {@code Gson} as follows:_<pre class="code">_new GsonBuilder().setDateFormat(dateFormatPattern).create()__</pre>;public void setDateFormatPattern(String dateFormatPattern) {_		this.dateFormatPattern = dateFormatPattern__	};define,the,date,time,format,with,a,link,simple,date,format,style,pattern,this,is,a,shortcut,for,setting,up,a,code,gson,as,follows,pre,class,code,new,gson,builder,set,date,format,date,format,pattern,create,pre;public,void,set,date,format,pattern,string,date,format,pattern,this,date,format,pattern,date,format,pattern
GsonFactoryBean -> public void setDateFormatPattern(String dateFormatPattern);1491480646;Define the date/time format with a {@link SimpleDateFormat}-style pattern._This is a shortcut for setting up a {@code Gson} as follows:_<pre class="code">_new GsonBuilder().setDateFormat(dateFormatPattern).create()__</pre>;public void setDateFormatPattern(String dateFormatPattern) {_		this.dateFormatPattern = dateFormatPattern__	};define,the,date,time,format,with,a,link,simple,date,format,style,pattern,this,is,a,shortcut,for,setting,up,a,code,gson,as,follows,pre,class,code,new,gson,builder,set,date,format,date,format,pattern,create,pre;public,void,set,date,format,pattern,string,date,format,pattern,this,date,format,pattern,date,format,pattern
GsonFactoryBean -> public void setDateFormatPattern(String dateFormatPattern);1498780456;Define the date/time format with a {@link SimpleDateFormat}-style pattern._This is a shortcut for setting up a {@code Gson} as follows:_<pre class="code">_new GsonBuilder().setDateFormat(dateFormatPattern).create()__</pre>;public void setDateFormatPattern(String dateFormatPattern) {_		this.dateFormatPattern = dateFormatPattern__	};define,the,date,time,format,with,a,link,simple,date,format,style,pattern,this,is,a,shortcut,for,setting,up,a,code,gson,as,follows,pre,class,code,new,gson,builder,set,date,format,date,format,pattern,create,pre;public,void,set,date,format,pattern,string,date,format,pattern,this,date,format,pattern,date,format,pattern
GsonFactoryBean -> public void setDateFormatPattern(String dateFormatPattern);1502974979;Define the date/time format with a {@link SimpleDateFormat}-style pattern._This is a shortcut for setting up a {@code Gson} as follows:_<pre class="code">_new GsonBuilder().setDateFormat(dateFormatPattern).create()__</pre>;public void setDateFormatPattern(String dateFormatPattern) {_		this.dateFormatPattern = dateFormatPattern__	};define,the,date,time,format,with,a,link,simple,date,format,style,pattern,this,is,a,shortcut,for,setting,up,a,code,gson,as,follows,pre,class,code,new,gson,builder,set,date,format,date,format,pattern,create,pre;public,void,set,date,format,pattern,string,date,format,pattern,this,date,format,pattern,date,format,pattern
GsonFactoryBean -> public void setPrettyPrint(boolean prettyPrint);1400811712;Whether to use the {@link GsonBuilder#setPrettyPrinting()} when writing JSON. This_is a shortcut for setting up a {@code Gson} as follows:__<pre class="code">_new GsonBuilder().setPrettyPrinting().create()__</pre>;public void setPrettyPrint(boolean prettyPrint) {_		this.prettyPrint = prettyPrint__	};whether,to,use,the,link,gson,builder,set,pretty,printing,when,writing,json,this,is,a,shortcut,for,setting,up,a,code,gson,as,follows,pre,class,code,new,gson,builder,set,pretty,printing,create,pre;public,void,set,pretty,print,boolean,pretty,print,this,pretty,print,pretty,print
GsonFactoryBean -> public void setPrettyPrint(boolean prettyPrint);1400811712;Whether to use the {@link GsonBuilder#setPrettyPrinting()} when writing_JSON. This is a shortcut for setting up a {@code Gson} as follows:__<pre class="code">_new GsonBuilder().setPrettyPrinting().create()__</pre>;public void setPrettyPrint(boolean prettyPrint) {_		this.prettyPrint = prettyPrint__	};whether,to,use,the,link,gson,builder,set,pretty,printing,when,writing,json,this,is,a,shortcut,for,setting,up,a,code,gson,as,follows,pre,class,code,new,gson,builder,set,pretty,printing,create,pre;public,void,set,pretty,print,boolean,pretty,print,this,pretty,print,pretty,print
GsonFactoryBean -> public void setDisableHtmlEscaping(boolean disableHtmlEscaping);1400811712;Whether to use the {@link GsonBuilder#disableHtmlEscaping()} when writing JSON. Set_to {@code true} to disable HTML escaping in JSON. This is a shortcut for setting up_a {@code Gson} as follows:__<pre class="code">_new GsonBuilder().disableHtmlEscaping().create()__</pre>;public void setDisableHtmlEscaping(boolean disableHtmlEscaping) {_		this.disableHtmlEscaping = disableHtmlEscaping__	};whether,to,use,the,link,gson,builder,disable,html,escaping,when,writing,json,set,to,code,true,to,disable,html,escaping,in,json,this,is,a,shortcut,for,setting,up,a,code,gson,as,follows,pre,class,code,new,gson,builder,disable,html,escaping,create,pre;public,void,set,disable,html,escaping,boolean,disable,html,escaping,this,disable,html,escaping,disable,html,escaping
GsonFactoryBean -> public void setDisableHtmlEscaping(boolean disableHtmlEscaping);1400811712;Whether to use the {@link GsonBuilder#disableHtmlEscaping()} when writing_JSON. Set to {@code true} to disable HTML escaping in JSON. This is a_shortcut for setting up a {@code Gson} as follows:__<pre class="code">_new GsonBuilder().disableHtmlEscaping().create()__</pre>;public void setDisableHtmlEscaping(boolean disableHtmlEscaping) {_		this.disableHtmlEscaping = disableHtmlEscaping__	};whether,to,use,the,link,gson,builder,disable,html,escaping,when,writing,json,set,to,code,true,to,disable,html,escaping,in,json,this,is,a,shortcut,for,setting,up,a,code,gson,as,follows,pre,class,code,new,gson,builder,disable,html,escaping,create,pre;public,void,set,disable,html,escaping,boolean,disable,html,escaping,this,disable,html,escaping,disable,html,escaping
GsonFactoryBean -> public void setDisableHtmlEscaping(boolean disableHtmlEscaping);1401208008;Whether to use the {@link GsonBuilder#disableHtmlEscaping()} when writing_JSON. Set to {@code true} to disable HTML escaping in JSON. This is a_shortcut for setting up a {@code Gson} as follows:_<pre class="code">_new GsonBuilder().disableHtmlEscaping().create()__</pre>;public void setDisableHtmlEscaping(boolean disableHtmlEscaping) {_		this.disableHtmlEscaping = disableHtmlEscaping__	};whether,to,use,the,link,gson,builder,disable,html,escaping,when,writing,json,set,to,code,true,to,disable,html,escaping,in,json,this,is,a,shortcut,for,setting,up,a,code,gson,as,follows,pre,class,code,new,gson,builder,disable,html,escaping,create,pre;public,void,set,disable,html,escaping,boolean,disable,html,escaping,this,disable,html,escaping,disable,html,escaping
GsonFactoryBean -> public void setDisableHtmlEscaping(boolean disableHtmlEscaping);1401880931;Whether to use the {@link GsonBuilder#disableHtmlEscaping()} when writing_JSON. Set to {@code true} to disable HTML escaping in JSON. This is a_shortcut for setting up a {@code Gson} as follows:_<pre class="code">_new GsonBuilder().disableHtmlEscaping().create()__</pre>;public void setDisableHtmlEscaping(boolean disableHtmlEscaping) {_		this.disableHtmlEscaping = disableHtmlEscaping__	};whether,to,use,the,link,gson,builder,disable,html,escaping,when,writing,json,set,to,code,true,to,disable,html,escaping,in,json,this,is,a,shortcut,for,setting,up,a,code,gson,as,follows,pre,class,code,new,gson,builder,disable,html,escaping,create,pre;public,void,set,disable,html,escaping,boolean,disable,html,escaping,this,disable,html,escaping,disable,html,escaping
GsonFactoryBean -> public void setDisableHtmlEscaping(boolean disableHtmlEscaping);1491480646;Whether to use the {@link GsonBuilder#disableHtmlEscaping()} when writing_JSON. Set to {@code true} to disable HTML escaping in JSON. This is a_shortcut for setting up a {@code Gson} as follows:_<pre class="code">_new GsonBuilder().disableHtmlEscaping().create()__</pre>;public void setDisableHtmlEscaping(boolean disableHtmlEscaping) {_		this.disableHtmlEscaping = disableHtmlEscaping__	};whether,to,use,the,link,gson,builder,disable,html,escaping,when,writing,json,set,to,code,true,to,disable,html,escaping,in,json,this,is,a,shortcut,for,setting,up,a,code,gson,as,follows,pre,class,code,new,gson,builder,disable,html,escaping,create,pre;public,void,set,disable,html,escaping,boolean,disable,html,escaping,this,disable,html,escaping,disable,html,escaping
GsonFactoryBean -> public void setDisableHtmlEscaping(boolean disableHtmlEscaping);1498780456;Whether to use the {@link GsonBuilder#disableHtmlEscaping()} when writing_JSON. Set to {@code true} to disable HTML escaping in JSON. This is a_shortcut for setting up a {@code Gson} as follows:_<pre class="code">_new GsonBuilder().disableHtmlEscaping().create()__</pre>;public void setDisableHtmlEscaping(boolean disableHtmlEscaping) {_		this.disableHtmlEscaping = disableHtmlEscaping__	};whether,to,use,the,link,gson,builder,disable,html,escaping,when,writing,json,set,to,code,true,to,disable,html,escaping,in,json,this,is,a,shortcut,for,setting,up,a,code,gson,as,follows,pre,class,code,new,gson,builder,disable,html,escaping,create,pre;public,void,set,disable,html,escaping,boolean,disable,html,escaping,this,disable,html,escaping,disable,html,escaping
GsonFactoryBean -> public void setDisableHtmlEscaping(boolean disableHtmlEscaping);1502974979;Whether to use the {@link GsonBuilder#disableHtmlEscaping()} when writing_JSON. Set to {@code true} to disable HTML escaping in JSON. This is a_shortcut for setting up a {@code Gson} as follows:_<pre class="code">_new GsonBuilder().disableHtmlEscaping().create()__</pre>;public void setDisableHtmlEscaping(boolean disableHtmlEscaping) {_		this.disableHtmlEscaping = disableHtmlEscaping__	};whether,to,use,the,link,gson,builder,disable,html,escaping,when,writing,json,set,to,code,true,to,disable,html,escaping,in,json,this,is,a,shortcut,for,setting,up,a,code,gson,as,follows,pre,class,code,new,gson,builder,disable,html,escaping,create,pre;public,void,set,disable,html,escaping,boolean,disable,html,escaping,this,disable,html,escaping,disable,html,escaping
GsonFactoryBean -> public GsonBuilder getGsonBuilder();1400811712;Return the GsonBuilder instance being used._@return the GsonBuilder instance;public GsonBuilder getGsonBuilder() {_		return this.gsonBuilder__	};return,the,gson,builder,instance,being,used,return,the,gson,builder,instance;public,gson,builder,get,gson,builder,return,this,gson,builder
GsonFactoryBean -> public GsonBuilder getGsonBuilder();1400811712;Return the configured GsonBuilder instance to use, if any._@return the GsonBuilder instance;public GsonBuilder getGsonBuilder() {_		return this.gsonBuilder__	};return,the,configured,gson,builder,instance,to,use,if,any,return,the,gson,builder,instance;public,gson,builder,get,gson,builder,return,this,gson,builder
GsonFactoryBean -> @Override 	public Gson getObject();1401208008;Return the created Gson instance.;@Override_	public Gson getObject() {_		return this.gson__	};return,the,created,gson,instance;override,public,gson,get,object,return,this,gson
GsonFactoryBean -> @Override 	public Gson getObject();1401880931;Return the created Gson instance.;@Override_	public Gson getObject() {_		return this.gson__	};return,the,created,gson,instance;override,public,gson,get,object,return,this,gson
GsonFactoryBean -> @Override 	public Gson getObject();1491480646;Return the created Gson instance.;@Override_	public Gson getObject() {_		return this.gson__	};return,the,created,gson,instance;override,public,gson,get,object,return,this,gson
GsonFactoryBean -> @Override 	public Gson getObject();1498780456;Return the created Gson instance.;@Override_	public Gson getObject() {_		return this.gson__	};return,the,created,gson,instance;override,public,gson,get,object,return,this,gson
GsonFactoryBean -> public void setSimpleDateFormat(String format);1400811712;Define the date/time format with a {@link SimpleDateFormat}._This is a shortcut for setting up a {@code Gson} as follows:__<pre class="code">_new GsonBuilder().setDateFormat(dateFormatPattern).create()__</pre>__@see #setSimpleDateFormat(SimpleDateFormat);public void setSimpleDateFormat(String format) {_		this.dateFormat = new SimpleDateFormat(format)__	};define,the,date,time,format,with,a,link,simple,date,format,this,is,a,shortcut,for,setting,up,a,code,gson,as,follows,pre,class,code,new,gson,builder,set,date,format,date,format,pattern,create,pre,see,set,simple,date,format,simple,date,format;public,void,set,simple,date,format,string,format,this,date,format,new,simple,date,format,format
GsonFactoryBean -> public void setSimpleDateFormat(String format);1400811712;Define the date/time format with a {@link SimpleDateFormat}._This is a shortcut for setting up a {@code Gson} as follows:__<pre class="code">_new GsonBuilder().setDateFormat(dateFormatPattern).create()__</pre>__@see #setSimpleDateFormat(SimpleDateFormat);public void setSimpleDateFormat(String format) {_		this.dateFormat = new SimpleDateFormat(format)__	};define,the,date,time,format,with,a,link,simple,date,format,this,is,a,shortcut,for,setting,up,a,code,gson,as,follows,pre,class,code,new,gson,builder,set,date,format,date,format,pattern,create,pre,see,set,simple,date,format,simple,date,format;public,void,set,simple,date,format,string,format,this,date,format,new,simple,date,format,format
GsonFactoryBean -> public void setSerializeNulls(boolean serializeNulls);1400811712;Whether to use the {@link GsonBuilder#serializeNulls()} option when writing JSON._This is a shortcut for setting up a {@code Gson} as follows:__<pre class="code">_new GsonBuilder().serializeNulls().create()__</pre>;public void setSerializeNulls(boolean serializeNulls) {_		this.serializeNulls = serializeNulls__	};whether,to,use,the,link,gson,builder,serialize,nulls,option,when,writing,json,this,is,a,shortcut,for,setting,up,a,code,gson,as,follows,pre,class,code,new,gson,builder,serialize,nulls,create,pre;public,void,set,serialize,nulls,boolean,serialize,nulls,this,serialize,nulls,serialize,nulls
GsonFactoryBean -> public void setSerializeNulls(boolean serializeNulls);1400811712;Whether to use the {@link GsonBuilder#serializeNulls()} option when_writing JSON. This is a shortcut for setting up a {@code Gson} as_follows:__<pre class="code">_new GsonBuilder().serializeNulls().create()__</pre>;public void setSerializeNulls(boolean serializeNulls) {_		this.serializeNulls = serializeNulls__	};whether,to,use,the,link,gson,builder,serialize,nulls,option,when,writing,json,this,is,a,shortcut,for,setting,up,a,code,gson,as,follows,pre,class,code,new,gson,builder,serialize,nulls,create,pre;public,void,set,serialize,nulls,boolean,serialize,nulls,this,serialize,nulls,serialize,nulls
GsonFactoryBean -> public void setSerializeNulls(boolean serializeNulls);1401208008;Whether to use the {@link GsonBuilder#serializeNulls()} option when writing_JSON. This is a shortcut for setting up a {@code Gson} as follows:_<pre class="code">_new GsonBuilder().serializeNulls().create()__</pre>;public void setSerializeNulls(boolean serializeNulls) {_		this.serializeNulls = serializeNulls__	};whether,to,use,the,link,gson,builder,serialize,nulls,option,when,writing,json,this,is,a,shortcut,for,setting,up,a,code,gson,as,follows,pre,class,code,new,gson,builder,serialize,nulls,create,pre;public,void,set,serialize,nulls,boolean,serialize,nulls,this,serialize,nulls,serialize,nulls
GsonFactoryBean -> public void setSerializeNulls(boolean serializeNulls);1401880931;Whether to use the {@link GsonBuilder#serializeNulls()} option when writing_JSON. This is a shortcut for setting up a {@code Gson} as follows:_<pre class="code">_new GsonBuilder().serializeNulls().create()__</pre>;public void setSerializeNulls(boolean serializeNulls) {_		this.serializeNulls = serializeNulls__	};whether,to,use,the,link,gson,builder,serialize,nulls,option,when,writing,json,this,is,a,shortcut,for,setting,up,a,code,gson,as,follows,pre,class,code,new,gson,builder,serialize,nulls,create,pre;public,void,set,serialize,nulls,boolean,serialize,nulls,this,serialize,nulls,serialize,nulls
GsonFactoryBean -> public void setSerializeNulls(boolean serializeNulls);1491480646;Whether to use the {@link GsonBuilder#serializeNulls()} option when writing_JSON. This is a shortcut for setting up a {@code Gson} as follows:_<pre class="code">_new GsonBuilder().serializeNulls().create()__</pre>;public void setSerializeNulls(boolean serializeNulls) {_		this.serializeNulls = serializeNulls__	};whether,to,use,the,link,gson,builder,serialize,nulls,option,when,writing,json,this,is,a,shortcut,for,setting,up,a,code,gson,as,follows,pre,class,code,new,gson,builder,serialize,nulls,create,pre;public,void,set,serialize,nulls,boolean,serialize,nulls,this,serialize,nulls,serialize,nulls
GsonFactoryBean -> public void setSerializeNulls(boolean serializeNulls);1498780456;Whether to use the {@link GsonBuilder#serializeNulls()} option when writing_JSON. This is a shortcut for setting up a {@code Gson} as follows:_<pre class="code">_new GsonBuilder().serializeNulls().create()__</pre>;public void setSerializeNulls(boolean serializeNulls) {_		this.serializeNulls = serializeNulls__	};whether,to,use,the,link,gson,builder,serialize,nulls,option,when,writing,json,this,is,a,shortcut,for,setting,up,a,code,gson,as,follows,pre,class,code,new,gson,builder,serialize,nulls,create,pre;public,void,set,serialize,nulls,boolean,serialize,nulls,this,serialize,nulls,serialize,nulls
GsonFactoryBean -> public void setSerializeNulls(boolean serializeNulls);1502974979;Whether to use the {@link GsonBuilder#serializeNulls()} option when writing_JSON. This is a shortcut for setting up a {@code Gson} as follows:_<pre class="code">_new GsonBuilder().serializeNulls().create()__</pre>;public void setSerializeNulls(boolean serializeNulls) {_		this.serializeNulls = serializeNulls__	};whether,to,use,the,link,gson,builder,serialize,nulls,option,when,writing,json,this,is,a,shortcut,for,setting,up,a,code,gson,as,follows,pre,class,code,new,gson,builder,serialize,nulls,create,pre;public,void,set,serialize,nulls,boolean,serialize,nulls,this,serialize,nulls,serialize,nulls
GsonFactoryBean -> public void setPrettyPrinting(boolean prettyPrinting);1401208008;Whether to use the {@link GsonBuilder#setPrettyPrinting()} when writing_JSON. This is a shortcut for setting up a {@code Gson} as follows:_<pre class="code">_new GsonBuilder().setPrettyPrinting().create()__</pre>;public void setPrettyPrinting(boolean prettyPrinting) {_		this.prettyPrinting = prettyPrinting__	};whether,to,use,the,link,gson,builder,set,pretty,printing,when,writing,json,this,is,a,shortcut,for,setting,up,a,code,gson,as,follows,pre,class,code,new,gson,builder,set,pretty,printing,create,pre;public,void,set,pretty,printing,boolean,pretty,printing,this,pretty,printing,pretty,printing
GsonFactoryBean -> public void setPrettyPrinting(boolean prettyPrinting);1401880931;Whether to use the {@link GsonBuilder#setPrettyPrinting()} when writing_JSON. This is a shortcut for setting up a {@code Gson} as follows:_<pre class="code">_new GsonBuilder().setPrettyPrinting().create()__</pre>;public void setPrettyPrinting(boolean prettyPrinting) {_		this.prettyPrinting = prettyPrinting__	};whether,to,use,the,link,gson,builder,set,pretty,printing,when,writing,json,this,is,a,shortcut,for,setting,up,a,code,gson,as,follows,pre,class,code,new,gson,builder,set,pretty,printing,create,pre;public,void,set,pretty,printing,boolean,pretty,printing,this,pretty,printing,pretty,printing
GsonFactoryBean -> public void setPrettyPrinting(boolean prettyPrinting);1491480646;Whether to use the {@link GsonBuilder#setPrettyPrinting()} when writing_JSON. This is a shortcut for setting up a {@code Gson} as follows:_<pre class="code">_new GsonBuilder().setPrettyPrinting().create()__</pre>;public void setPrettyPrinting(boolean prettyPrinting) {_		this.prettyPrinting = prettyPrinting__	};whether,to,use,the,link,gson,builder,set,pretty,printing,when,writing,json,this,is,a,shortcut,for,setting,up,a,code,gson,as,follows,pre,class,code,new,gson,builder,set,pretty,printing,create,pre;public,void,set,pretty,printing,boolean,pretty,printing,this,pretty,printing,pretty,printing
GsonFactoryBean -> public void setPrettyPrinting(boolean prettyPrinting);1498780456;Whether to use the {@link GsonBuilder#setPrettyPrinting()} when writing_JSON. This is a shortcut for setting up a {@code Gson} as follows:_<pre class="code">_new GsonBuilder().setPrettyPrinting().create()__</pre>;public void setPrettyPrinting(boolean prettyPrinting) {_		this.prettyPrinting = prettyPrinting__	};whether,to,use,the,link,gson,builder,set,pretty,printing,when,writing,json,this,is,a,shortcut,for,setting,up,a,code,gson,as,follows,pre,class,code,new,gson,builder,set,pretty,printing,create,pre;public,void,set,pretty,printing,boolean,pretty,printing,this,pretty,printing,pretty,printing
GsonFactoryBean -> public void setPrettyPrinting(boolean prettyPrinting);1502974979;Whether to use the {@link GsonBuilder#setPrettyPrinting()} when writing_JSON. This is a shortcut for setting up a {@code Gson} as follows:_<pre class="code">_new GsonBuilder().setPrettyPrinting().create()__</pre>;public void setPrettyPrinting(boolean prettyPrinting) {_		this.prettyPrinting = prettyPrinting__	};whether,to,use,the,link,gson,builder,set,pretty,printing,when,writing,json,this,is,a,shortcut,for,setting,up,a,code,gson,as,follows,pre,class,code,new,gson,builder,set,pretty,printing,create,pre;public,void,set,pretty,printing,boolean,pretty,printing,this,pretty,printing,pretty,printing
GsonFactoryBean -> public void setSimpleDateFormat(SimpleDateFormat dateFormat);1400811712;Define the format for date/time with the given {@link SimpleDateFormat}._This is a shortcut for setting up a {@code Gson} as follows:__<pre class="code">_new GsonBuilder().setDateFormat(dateFormatPattern).create()__</pre>__@see #setSimpleDateFormat(String);public void setSimpleDateFormat(SimpleDateFormat dateFormat) {_		this.dateFormat = dateFormat__	};define,the,format,for,date,time,with,the,given,link,simple,date,format,this,is,a,shortcut,for,setting,up,a,code,gson,as,follows,pre,class,code,new,gson,builder,set,date,format,date,format,pattern,create,pre,see,set,simple,date,format,string;public,void,set,simple,date,format,simple,date,format,date,format,this,date,format,date,format
GsonFactoryBean -> public void setSimpleDateFormat(SimpleDateFormat dateFormat);1400811712;Define the format for date/time with the given {@link SimpleDateFormat}._This is a shortcut for setting up a {@code Gson} as follows:__<pre class="code">_new GsonBuilder().setDateFormat(dateFormatPattern).create()__</pre>__@see #setSimpleDateFormat(String);public void setSimpleDateFormat(SimpleDateFormat dateFormat) {_		this.dateFormat = dateFormat__	};define,the,format,for,date,time,with,the,given,link,simple,date,format,this,is,a,shortcut,for,setting,up,a,code,gson,as,follows,pre,class,code,new,gson,builder,set,date,format,date,format,pattern,create,pre,see,set,simple,date,format,string;public,void,set,simple,date,format,simple,date,format,date,format,this,date,format,date,format
GsonFactoryBean -> public void setBase64EncodeByteArrays(boolean base64EncodeByteArrays);1400811712;Whether to Base64 encode {@code byte[]} properties when reading and_writing JSON.__<p>When set to {@code true} a custom {@link com.google.gson.TypeAdapter}_is registered via {@link GsonBuilder#registerTypeHierarchyAdapter(Class, Object)}_that serializes a {@code byte[]} property to and from a Base64 encoded_string instead of a JSON array.__<p><strong>NOTE:</strong> Use of this option requires the presence of_Apache commons-codec on the classpath. Otherwise it is ignored.__@see org.springframework.http.converter.json.GsonBase64ByteArrayJsonTypeAdapter;public void setBase64EncodeByteArrays(boolean base64EncodeByteArrays) {_		this.base64EncodeByteArrays = base64EncodeByteArrays__	};whether,to,base64,encode,code,byte,properties,when,reading,and,writing,json,p,when,set,to,code,true,a,custom,link,com,google,gson,type,adapter,is,registered,via,link,gson,builder,register,type,hierarchy,adapter,class,object,that,serializes,a,code,byte,property,to,and,from,a,base64,encoded,string,instead,of,a,json,array,p,strong,note,strong,use,of,this,option,requires,the,presence,of,apache,commons,codec,on,the,classpath,otherwise,it,is,ignored,see,org,springframework,http,converter,json,gson,base64byte,array,json,type,adapter;public,void,set,base64encode,byte,arrays,boolean,base64encode,byte,arrays,this,base64encode,byte,arrays,base64encode,byte,arrays
GsonFactoryBean -> public void setBase64EncodeByteArrays(boolean base64EncodeByteArrays);1400811712;Whether to Base64 encode {@code byte[]} properties when reading and_writing JSON.__<p>When set to {@code true} a custom {@link com.google.gson.TypeAdapter}_is registered via_{@link GsonBuilder#registerTypeHierarchyAdapter(Class, Object)}_that serializes a {@code byte[]} property to and from a Base64 encoded_string instead of a JSON array.__<p><strong>NOTE:</strong> Use of this option requires the presence of_Apache commons-codec on the classpath. Otherwise it is ignored.__@see org.springframework.http.converter.json.GsonBase64ByteArrayJsonTypeAdapter;public void setBase64EncodeByteArrays(boolean base64EncodeByteArrays) {_		this.base64EncodeByteArrays = base64EncodeByteArrays__	};whether,to,base64,encode,code,byte,properties,when,reading,and,writing,json,p,when,set,to,code,true,a,custom,link,com,google,gson,type,adapter,is,registered,via,link,gson,builder,register,type,hierarchy,adapter,class,object,that,serializes,a,code,byte,property,to,and,from,a,base64,encoded,string,instead,of,a,json,array,p,strong,note,strong,use,of,this,option,requires,the,presence,of,apache,commons,codec,on,the,classpath,otherwise,it,is,ignored,see,org,springframework,http,converter,json,gson,base64byte,array,json,type,adapter;public,void,set,base64encode,byte,arrays,boolean,base64encode,byte,arrays,this,base64encode,byte,arrays,base64encode,byte,arrays
GsonFactoryBean -> public void setBase64EncodeByteArrays(boolean base64EncodeByteArrays);1401208008;Whether to Base64-encode {@code byte[]} properties when reading and_writing JSON._<p>When set to {@code true} a custom {@link com.google.gson.TypeAdapter} is_registered via {@link GsonBuilder#registerTypeHierarchyAdapter(Class, Object)}_that serializes a {@code byte[]} property to and from a Base64-encoded String_instead of a JSON array._<p><strong>NOTE:</strong> Use of this option requires the presence of the_Apache Commons Codec library on the classpath._@see GsonBase64ByteArrayJsonTypeAdapter;public void setBase64EncodeByteArrays(boolean base64EncodeByteArrays) {_		this.base64EncodeByteArrays = base64EncodeByteArrays__	};whether,to,base64,encode,code,byte,properties,when,reading,and,writing,json,p,when,set,to,code,true,a,custom,link,com,google,gson,type,adapter,is,registered,via,link,gson,builder,register,type,hierarchy,adapter,class,object,that,serializes,a,code,byte,property,to,and,from,a,base64,encoded,string,instead,of,a,json,array,p,strong,note,strong,use,of,this,option,requires,the,presence,of,the,apache,commons,codec,library,on,the,classpath,see,gson,base64byte,array,json,type,adapter;public,void,set,base64encode,byte,arrays,boolean,base64encode,byte,arrays,this,base64encode,byte,arrays,base64encode,byte,arrays
GsonFactoryBean -> public void setBase64EncodeByteArrays(boolean base64EncodeByteArrays);1401880931;Whether to Base64-encode {@code byte[]} properties when reading and_writing JSON._<p>When set to {@code true}, a custom {@link com.google.gson.TypeAdapter} will be_registered via {@link GsonBuilder#registerTypeHierarchyAdapter(Class, Object)}_which serializes a {@code byte[]} property to and from a Base64-encoded String_instead of a JSON array._<p><strong>NOTE:</strong> Use of this option requires the presence of the_Apache Commons Codec library on the classpath when running on Java 6 or 7._On Java 8, the standard {@link java.util.Base64} facility is used instead._@see GsonBuilderUtils#gsonBuilderWithBase64EncodedByteArrays();public void setBase64EncodeByteArrays(boolean base64EncodeByteArrays) {_		this.base64EncodeByteArrays = base64EncodeByteArrays__	};whether,to,base64,encode,code,byte,properties,when,reading,and,writing,json,p,when,set,to,code,true,a,custom,link,com,google,gson,type,adapter,will,be,registered,via,link,gson,builder,register,type,hierarchy,adapter,class,object,which,serializes,a,code,byte,property,to,and,from,a,base64,encoded,string,instead,of,a,json,array,p,strong,note,strong,use,of,this,option,requires,the,presence,of,the,apache,commons,codec,library,on,the,classpath,when,running,on,java,6,or,7,on,java,8,the,standard,link,java,util,base64,facility,is,used,instead,see,gson,builder,utils,gson,builder,with,base64encoded,byte,arrays;public,void,set,base64encode,byte,arrays,boolean,base64encode,byte,arrays,this,base64encode,byte,arrays,base64encode,byte,arrays
GsonFactoryBean -> public void setBase64EncodeByteArrays(boolean base64EncodeByteArrays);1491480646;Whether to Base64-encode {@code byte[]} properties when reading and_writing JSON._<p>When set to {@code true}, a custom {@link com.google.gson.TypeAdapter} will be_registered via {@link GsonBuilder#registerTypeHierarchyAdapter(Class, Object)}_which serializes a {@code byte[]} property to and from a Base64-encoded String_instead of a JSON array._@see GsonBuilderUtils#gsonBuilderWithBase64EncodedByteArrays();public void setBase64EncodeByteArrays(boolean base64EncodeByteArrays) {_		this.base64EncodeByteArrays = base64EncodeByteArrays__	};whether,to,base64,encode,code,byte,properties,when,reading,and,writing,json,p,when,set,to,code,true,a,custom,link,com,google,gson,type,adapter,will,be,registered,via,link,gson,builder,register,type,hierarchy,adapter,class,object,which,serializes,a,code,byte,property,to,and,from,a,base64,encoded,string,instead,of,a,json,array,see,gson,builder,utils,gson,builder,with,base64encoded,byte,arrays;public,void,set,base64encode,byte,arrays,boolean,base64encode,byte,arrays,this,base64encode,byte,arrays,base64encode,byte,arrays
GsonFactoryBean -> public void setBase64EncodeByteArrays(boolean base64EncodeByteArrays);1498780456;Whether to Base64-encode {@code byte[]} properties when reading and_writing JSON._<p>When set to {@code true}, a custom {@link com.google.gson.TypeAdapter} will be_registered via {@link GsonBuilder#registerTypeHierarchyAdapter(Class, Object)}_which serializes a {@code byte[]} property to and from a Base64-encoded String_instead of a JSON array._@see GsonBuilderUtils#gsonBuilderWithBase64EncodedByteArrays();public void setBase64EncodeByteArrays(boolean base64EncodeByteArrays) {_		this.base64EncodeByteArrays = base64EncodeByteArrays__	};whether,to,base64,encode,code,byte,properties,when,reading,and,writing,json,p,when,set,to,code,true,a,custom,link,com,google,gson,type,adapter,will,be,registered,via,link,gson,builder,register,type,hierarchy,adapter,class,object,which,serializes,a,code,byte,property,to,and,from,a,base64,encoded,string,instead,of,a,json,array,see,gson,builder,utils,gson,builder,with,base64encoded,byte,arrays;public,void,set,base64encode,byte,arrays,boolean,base64encode,byte,arrays,this,base64encode,byte,arrays,base64encode,byte,arrays
GsonFactoryBean -> public void setBase64EncodeByteArrays(boolean base64EncodeByteArrays);1502974979;Whether to Base64-encode {@code byte[]} properties when reading and_writing JSON._<p>When set to {@code true}, a custom {@link com.google.gson.TypeAdapter} will be_registered via {@link GsonBuilder#registerTypeHierarchyAdapter(Class, Object)}_which serializes a {@code byte[]} property to and from a Base64-encoded String_instead of a JSON array._@see GsonBuilderUtils#gsonBuilderWithBase64EncodedByteArrays();public void setBase64EncodeByteArrays(boolean base64EncodeByteArrays) {_		this.base64EncodeByteArrays = base64EncodeByteArrays__	};whether,to,base64,encode,code,byte,properties,when,reading,and,writing,json,p,when,set,to,code,true,a,custom,link,com,google,gson,type,adapter,will,be,registered,via,link,gson,builder,register,type,hierarchy,adapter,class,object,which,serializes,a,code,byte,property,to,and,from,a,base64,encoded,string,instead,of,a,json,array,see,gson,builder,utils,gson,builder,with,base64encoded,byte,arrays;public,void,set,base64encode,byte,arrays,boolean,base64encode,byte,arrays,this,base64encode,byte,arrays,base64encode,byte,arrays
