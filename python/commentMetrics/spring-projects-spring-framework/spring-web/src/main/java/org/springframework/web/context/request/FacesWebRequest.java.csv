commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public Object getNativeRequest() {     return getExternalContext().getRequest(). }
false;public;0;4;;@Override public Object getNativeResponse() {     return getExternalContext().getResponse(). }
false;public;1;11;;@Override @SuppressWarnings("unchecked") public <T> T getNativeRequest(@Nullable Class<T> requiredType) {     if (requiredType != null) {         Object request = getExternalContext().getRequest().         if (requiredType.isInstance(request)) {             return (T) request.         }     }     return null. }
false;public;1;11;;@Override @SuppressWarnings("unchecked") public <T> T getNativeResponse(@Nullable Class<T> requiredType) {     if (requiredType != null) {         Object response = getExternalContext().getResponse().         if (requiredType.isInstance(response)) {             return (T) response.         }     }     return null. }
false;public;1;5;;@Override @Nullable public String getHeader(String headerName) {     return getExternalContext().getRequestHeaderMap().get(headerName). }
false;public;1;5;;@Override @Nullable public String[] getHeaderValues(String headerName) {     return getExternalContext().getRequestHeaderValuesMap().get(headerName). }
false;public;0;4;;@Override public Iterator<String> getHeaderNames() {     return getExternalContext().getRequestHeaderMap().keySet().iterator(). }
false;public;1;5;;@Override @Nullable public String getParameter(String paramName) {     return getExternalContext().getRequestParameterMap().get(paramName). }
false;public;0;4;;@Override public Iterator<String> getParameterNames() {     return getExternalContext().getRequestParameterNames(). }
false;public;1;5;;@Override @Nullable public String[] getParameterValues(String paramName) {     return getExternalContext().getRequestParameterValuesMap().get(paramName). }
false;public;0;4;;@Override public Map<String, String[]> getParameterMap() {     return getExternalContext().getRequestParameterValuesMap(). }
false;public;0;4;;@Override public Locale getLocale() {     return getFacesContext().getExternalContext().getRequestLocale(). }
false;public;0;4;;@Override public String getContextPath() {     return getFacesContext().getExternalContext().getRequestContextPath(). }
false;public;0;5;;@Override @Nullable public String getRemoteUser() {     return getFacesContext().getExternalContext().getRemoteUser(). }
false;public;0;5;;@Override @Nullable public Principal getUserPrincipal() {     return getFacesContext().getExternalContext().getUserPrincipal(). }
false;public;1;4;;@Override public boolean isUserInRole(String role) {     return getFacesContext().getExternalContext().isUserInRole(role). }
false;public;0;4;;@Override public boolean isSecure() {     return false. }
false;public;1;4;;@Override public boolean checkNotModified(long lastModifiedTimestamp) {     return false. }
false;public;1;4;;@Override public boolean checkNotModified(@Nullable String eTag) {     return false. }
false;public;2;4;;@Override public boolean checkNotModified(@Nullable String etag, long lastModifiedTimestamp) {     return false. }
false;public;1;17;;@Override public String getDescription(boolean includeClientInfo) {     ExternalContext externalContext = getExternalContext().     StringBuilder sb = new StringBuilder().     sb.append("context=").append(externalContext.getRequestContextPath()).     if (includeClientInfo) {         Object session = externalContext.getSession(false).         if (session != null) {             sb.append(".session=").append(getSessionId()).         }         String user = externalContext.getRemoteUser().         if (StringUtils.hasLength(user)) {             sb.append(".user=").append(user).         }     }     return sb.toString(). }
false;public;0;4;;@Override public String toString() {     return "FacesWebRequest: " + getDescription(true). }
