# id;timestamp;commentText;codeText;commentWords;codeWords
UriTemplate -> public URI expand(Map<String, ?> uriVariables);1328020251;Given the Map of variables, expands this template into a URI. The Map keys represent variable names,_the Map values variable values. The order of variables is not significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__Map&lt_String, String&gt_ uriVariables = new HashMap&lt_String, String&gt_()__uriVariables.put("booking", "42")__uriVariables.put("hotel", "1")__System.out.println(template.expand(uriVariables))__</pre>_will print: <blockquote><code>http://example.com/hotels/1/bookings/42</code></blockquote>_@param uriVariables the map of URI variables_@return the expanded URI_@throws IllegalArgumentException if <code>uriVariables</code> is <code>null</code>__or if it does not contain values for all the variable names;public URI expand(Map<String, ?> uriVariables) {_        UriComponents expandedComponents = uriComponents.expand(uriVariables)__		UriComponents encodedComponents = expandedComponents.encode()__        return encodedComponents.toUri()__	};given,the,map,of,variables,expands,this,template,into,a,uri,the,map,keys,represent,variable,names,the,map,values,variable,values,the,order,of,variables,is,not,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,map,lt,string,string,gt,uri,variables,new,hash,map,lt,string,string,gt,uri,variables,put,booking,42,uri,variables,put,hotel,1,system,out,println,template,expand,uri,variables,pre,will,print,blockquote,code,http,example,com,hotels,1,bookings,42,code,blockquote,param,uri,variables,the,map,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,code,is,code,null,code,or,if,it,does,not,contain,values,for,all,the,variable,names;public,uri,expand,map,string,uri,variables,uri,components,expanded,components,uri,components,expand,uri,variables,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Map<String, ?> uriVariables);1356735495;Given the Map of variables, expands this template into a URI. The Map keys represent variable names,_the Map values variable values. The order of variables is not significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__Map&lt_String, String&gt_ uriVariables = new HashMap&lt_String, String&gt_()__uriVariables.put("booking", "42")__uriVariables.put("hotel", "1")__System.out.println(template.expand(uriVariables))__</pre>_will print: <blockquote>{@code http://example.com/hotels/1/bookings/42}</blockquote>_@param uriVariables the map of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}__or if it does not contain values for all the variable names;public URI expand(Map<String, ?> uriVariables) {_		UriComponents expandedComponents = uriComponents.expand(uriVariables)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,the,map,of,variables,expands,this,template,into,a,uri,the,map,keys,represent,variable,names,the,map,values,variable,values,the,order,of,variables,is,not,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,map,lt,string,string,gt,uri,variables,new,hash,map,lt,string,string,gt,uri,variables,put,booking,42,uri,variables,put,hotel,1,system,out,println,template,expand,uri,variables,pre,will,print,blockquote,code,http,example,com,hotels,1,bookings,42,blockquote,param,uri,variables,the,map,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,values,for,all,the,variable,names;public,uri,expand,map,string,uri,variables,uri,components,expanded,components,uri,components,expand,uri,variables,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Map<String, ?> uriVariables);1362408075;Given the Map of variables, expands this template into a URI. The Map keys represent variable names,_the Map values variable values. The order of variables is not significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__Map&lt_String, String&gt_ uriVariables = new HashMap&lt_String, String&gt_()__uriVariables.put("booking", "42")__uriVariables.put("hotel", "1")__System.out.println(template.expand(uriVariables))__</pre>_will print: <blockquote>{@code http://example.com/hotels/1/bookings/42}</blockquote>_@param uriVariables the map of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}__or if it does not contain values for all the variable names;public URI expand(Map<String, ?> uriVariables) {_		UriComponents expandedComponents = uriComponents.expand(uriVariables)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,the,map,of,variables,expands,this,template,into,a,uri,the,map,keys,represent,variable,names,the,map,values,variable,values,the,order,of,variables,is,not,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,map,lt,string,string,gt,uri,variables,new,hash,map,lt,string,string,gt,uri,variables,put,booking,42,uri,variables,put,hotel,1,system,out,println,template,expand,uri,variables,pre,will,print,blockquote,code,http,example,com,hotels,1,bookings,42,blockquote,param,uri,variables,the,map,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,values,for,all,the,variable,names;public,uri,expand,map,string,uri,variables,uri,components,expanded,components,uri,components,expand,uri,variables,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Map<String, ?> uriVariables);1367578939;Given the Map of variables, expands this template into a URI. The Map keys represent variable names,_the Map values variable values. The order of variables is not significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__Map&lt_String, String&gt_ uriVariables = new HashMap&lt_String, String&gt_()__uriVariables.put("booking", "42")__uriVariables.put("hotel", "1")__System.out.println(template.expand(uriVariables))__</pre>_will print: <blockquote>{@code http://example.com/hotels/1/bookings/42}</blockquote>_@param uriVariables the map of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}__or if it does not contain values for all the variable names;public URI expand(Map<String, ?> uriVariables) {_		UriComponents expandedComponents = uriComponents.expand(uriVariables)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,the,map,of,variables,expands,this,template,into,a,uri,the,map,keys,represent,variable,names,the,map,values,variable,values,the,order,of,variables,is,not,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,map,lt,string,string,gt,uri,variables,new,hash,map,lt,string,string,gt,uri,variables,put,booking,42,uri,variables,put,hotel,1,system,out,println,template,expand,uri,variables,pre,will,print,blockquote,code,http,example,com,hotels,1,bookings,42,blockquote,param,uri,variables,the,map,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,values,for,all,the,variable,names;public,uri,expand,map,string,uri,variables,uri,components,expanded,components,uri,components,expand,uri,variables,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Map<String, ?> uriVariables);1367581556;Given the Map of variables, expands this template into a URI. The Map keys represent variable names,_the Map values variable values. The order of variables is not significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__Map&lt_String, String&gt_ uriVariables = new HashMap&lt_String, String&gt_()__uriVariables.put("booking", "42")__uriVariables.put("hotel", "1")__System.out.println(template.expand(uriVariables))__</pre>_will print: <blockquote>{@code http://example.com/hotels/1/bookings/42}</blockquote>_@param uriVariables the map of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}__or if it does not contain values for all the variable names;public URI expand(Map<String, ?> uriVariables) {_		UriComponents expandedComponents = uriComponents.expand(uriVariables)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,the,map,of,variables,expands,this,template,into,a,uri,the,map,keys,represent,variable,names,the,map,values,variable,values,the,order,of,variables,is,not,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,map,lt,string,string,gt,uri,variables,new,hash,map,lt,string,string,gt,uri,variables,put,booking,42,uri,variables,put,hotel,1,system,out,println,template,expand,uri,variables,pre,will,print,blockquote,code,http,example,com,hotels,1,bookings,42,blockquote,param,uri,variables,the,map,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,values,for,all,the,variable,names;public,uri,expand,map,string,uri,variables,uri,components,expanded,components,uri,components,expand,uri,variables,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Map<String, ?> uriVariables);1385412762;Given the Map of variables, expands this template into a URI. The Map keys represent variable names,_the Map values variable values. The order of variables is not significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__Map&lt_String, String&gt_ uriVariables = new HashMap&lt_String, String&gt_()__uriVariables.put("booking", "42")__uriVariables.put("hotel", "1")__System.out.println(template.expand(uriVariables))__</pre>_will print: <blockquote>{@code http://example.com/hotels/1/bookings/42}</blockquote>_@param uriVariables the map of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}__or if it does not contain values for all the variable names;public URI expand(Map<String, ?> uriVariables) {_		UriComponents expandedComponents = uriComponents.expand(uriVariables)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,the,map,of,variables,expands,this,template,into,a,uri,the,map,keys,represent,variable,names,the,map,values,variable,values,the,order,of,variables,is,not,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,map,lt,string,string,gt,uri,variables,new,hash,map,lt,string,string,gt,uri,variables,put,booking,42,uri,variables,put,hotel,1,system,out,println,template,expand,uri,variables,pre,will,print,blockquote,code,http,example,com,hotels,1,bookings,42,blockquote,param,uri,variables,the,map,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,values,for,all,the,variable,names;public,uri,expand,map,string,uri,variables,uri,components,expanded,components,uri,components,expand,uri,variables,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Map<String, ?> uriVariables);1406840888;Given the Map of variables, expands this template into a URI. The Map keys represent variable names,_the Map values variable values. The order of variables is not significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__Map&lt_String, String&gt_ uriVariables = new HashMap&lt_String, String&gt_()__uriVariables.put("booking", "42")__uriVariables.put("hotel", "Rest & Relax")__System.out.println(template.expand(uriVariables))__</pre>_will print: <blockquote>{@code http://example.com/hotels/Rest%20%26%20Relax/bookings/42}</blockquote>_@param uriVariables the map of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}__or if it does not contain values for all the variable names;public URI expand(Map<String, ?> uriVariables) {_		UriComponents expandedComponents = uriComponents.expand(uriVariables)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,the,map,of,variables,expands,this,template,into,a,uri,the,map,keys,represent,variable,names,the,map,values,variable,values,the,order,of,variables,is,not,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,map,lt,string,string,gt,uri,variables,new,hash,map,lt,string,string,gt,uri,variables,put,booking,42,uri,variables,put,hotel,rest,relax,system,out,println,template,expand,uri,variables,pre,will,print,blockquote,code,http,example,com,hotels,rest,20,26,20relax,bookings,42,blockquote,param,uri,variables,the,map,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,values,for,all,the,variable,names;public,uri,expand,map,string,uri,variables,uri,components,expanded,components,uri,components,expand,uri,variables,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Map<String, ?> uriVariables);1409822411;Given the Map of variables, expands this template into a URI. The Map keys represent variable names,_the Map values variable values. The order of variables is not significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__Map&lt_String, String&gt_ uriVariables = new HashMap&lt_String, String&gt_()__uriVariables.put("booking", "42")__uriVariables.put("hotel", "Rest & Relax")__System.out.println(template.expand(uriVariables))__</pre>_will print: <blockquote>{@code http://example.com/hotels/Rest%20%26%20Relax/bookings/42}</blockquote>_@param uriVariables the map of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}__or if it does not contain values for all the variable names;public URI expand(Map<String, ?> uriVariables) {_		UriComponents expandedComponents = this.uriComponents.expand(uriVariables)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,the,map,of,variables,expands,this,template,into,a,uri,the,map,keys,represent,variable,names,the,map,values,variable,values,the,order,of,variables,is,not,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,map,lt,string,string,gt,uri,variables,new,hash,map,lt,string,string,gt,uri,variables,put,booking,42,uri,variables,put,hotel,rest,relax,system,out,println,template,expand,uri,variables,pre,will,print,blockquote,code,http,example,com,hotels,rest,20,26,20relax,bookings,42,blockquote,param,uri,variables,the,map,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,values,for,all,the,variable,names;public,uri,expand,map,string,uri,variables,uri,components,expanded,components,this,uri,components,expand,uri,variables,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Map<String, ?> uriVariables);1446471766;Given the Map of variables, expands this template into a URI. The Map keys represent variable names,_the Map values variable values. The order of variables is not significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__Map&lt_String, String&gt_ uriVariables = new HashMap&lt_String, String&gt_()__uriVariables.put("booking", "42")__uriVariables.put("hotel", "Rest & Relax")__System.out.println(template.expand(uriVariables))__</pre>_will print: <blockquote>{@code http://example.com/hotels/Rest%20%26%20Relax/bookings/42}</blockquote>_@param uriVariables the map of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}__or if it does not contain values for all the variable names;public URI expand(Map<String, ?> uriVariables) {_		UriComponents expandedComponents = this.uriComponents.expand(uriVariables)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,the,map,of,variables,expands,this,template,into,a,uri,the,map,keys,represent,variable,names,the,map,values,variable,values,the,order,of,variables,is,not,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,map,lt,string,string,gt,uri,variables,new,hash,map,lt,string,string,gt,uri,variables,put,booking,42,uri,variables,put,hotel,rest,relax,system,out,println,template,expand,uri,variables,pre,will,print,blockquote,code,http,example,com,hotels,rest,20,26,20relax,bookings,42,blockquote,param,uri,variables,the,map,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,values,for,all,the,variable,names;public,uri,expand,map,string,uri,variables,uri,components,expanded,components,this,uri,components,expand,uri,variables,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Map<String, ?> uriVariables);1446734350;Given the Map of variables, expands this template into a URI. The Map keys represent variable names,_the Map values variable values. The order of variables is not significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__Map&lt_String, String&gt_ uriVariables = new HashMap&lt_String, String&gt_()__uriVariables.put("booking", "42")__uriVariables.put("hotel", "Rest & Relax")__System.out.println(template.expand(uriVariables))__</pre>_will print: <blockquote>{@code http://example.com/hotels/Rest%20%26%20Relax/bookings/42}</blockquote>_@param uriVariables the map of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}__or if it does not contain values for all the variable names;public URI expand(Map<String, ?> uriVariables) {_		UriComponents expandedComponents = this.uriComponents.expand(uriVariables)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,the,map,of,variables,expands,this,template,into,a,uri,the,map,keys,represent,variable,names,the,map,values,variable,values,the,order,of,variables,is,not,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,map,lt,string,string,gt,uri,variables,new,hash,map,lt,string,string,gt,uri,variables,put,booking,42,uri,variables,put,hotel,rest,relax,system,out,println,template,expand,uri,variables,pre,will,print,blockquote,code,http,example,com,hotels,rest,20,26,20relax,bookings,42,blockquote,param,uri,variables,the,map,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,values,for,all,the,variable,names;public,uri,expand,map,string,uri,variables,uri,components,expanded,components,this,uri,components,expand,uri,variables,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Map<String, ?> uriVariables);1448923588;Given the Map of variables, expands this template into a URI. The Map keys represent variable names,_the Map values variable values. The order of variables is not significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__Map&lt_String, String&gt_ uriVariables = new HashMap&lt_String, String&gt_()__uriVariables.put("booking", "42")__uriVariables.put("hotel", "Rest & Relax")__System.out.println(template.expand(uriVariables))__</pre>_will print: <blockquote>{@code http://example.com/hotels/Rest%20%26%20Relax/bookings/42}</blockquote>_@param uriVariables the map of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}__or if it does not contain values for all the variable names;public URI expand(Map<String, ?> uriVariables) {_		UriComponents expandedComponents = this.uriComponents.expand(uriVariables)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,the,map,of,variables,expands,this,template,into,a,uri,the,map,keys,represent,variable,names,the,map,values,variable,values,the,order,of,variables,is,not,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,map,lt,string,string,gt,uri,variables,new,hash,map,lt,string,string,gt,uri,variables,put,booking,42,uri,variables,put,hotel,rest,relax,system,out,println,template,expand,uri,variables,pre,will,print,blockquote,code,http,example,com,hotels,rest,20,26,20relax,bookings,42,blockquote,param,uri,variables,the,map,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,values,for,all,the,variable,names;public,uri,expand,map,string,uri,variables,uri,components,expanded,components,this,uri,components,expand,uri,variables,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Map<String, ?> uriVariables);1460441863;Given the Map of variables, expands this template into a URI. The Map keys represent variable names,_the Map values variable values. The order of variables is not significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__Map&lt_String, String&gt_ uriVariables = new HashMap&lt_String, String&gt_()__uriVariables.put("booking", "42")__uriVariables.put("hotel", "Rest & Relax")__System.out.println(template.expand(uriVariables))__</pre>_will print: <blockquote>{@code http://example.com/hotels/Rest%20%26%20Relax/bookings/42}</blockquote>_@param uriVariables the map of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}__or if it does not contain values for all the variable names;public URI expand(Map<String, ?> uriVariables) {_		UriComponents expandedComponents = this.uriComponents.expand(uriVariables)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,the,map,of,variables,expands,this,template,into,a,uri,the,map,keys,represent,variable,names,the,map,values,variable,values,the,order,of,variables,is,not,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,map,lt,string,string,gt,uri,variables,new,hash,map,lt,string,string,gt,uri,variables,put,booking,42,uri,variables,put,hotel,rest,relax,system,out,println,template,expand,uri,variables,pre,will,print,blockquote,code,http,example,com,hotels,rest,20,26,20relax,bookings,42,blockquote,param,uri,variables,the,map,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,values,for,all,the,variable,names;public,uri,expand,map,string,uri,variables,uri,components,expanded,components,this,uri,components,expand,uri,variables,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Map<String, ?> uriVariables);1467730834;Given the Map of variables, expands this template into a URI. The Map keys represent variable names,_the Map values variable values. The order of variables is not significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__Map&lt_String, String&gt_ uriVariables = new HashMap&lt_String, String&gt_()__uriVariables.put("booking", "42")__uriVariables.put("hotel", "Rest & Relax")__System.out.println(template.expand(uriVariables))__</pre>_will print: <blockquote>{@code http://example.com/hotels/Rest%20%26%20Relax/bookings/42}</blockquote>_@param uriVariables the map of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}__or if it does not contain values for all the variable names;public URI expand(Map<String, ?> uriVariables) {_		UriComponents expandedComponents = this.uriComponents.expand(uriVariables)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,the,map,of,variables,expands,this,template,into,a,uri,the,map,keys,represent,variable,names,the,map,values,variable,values,the,order,of,variables,is,not,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,map,lt,string,string,gt,uri,variables,new,hash,map,lt,string,string,gt,uri,variables,put,booking,42,uri,variables,put,hotel,rest,relax,system,out,println,template,expand,uri,variables,pre,will,print,blockquote,code,http,example,com,hotels,rest,20,26,20relax,bookings,42,blockquote,param,uri,variables,the,map,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,values,for,all,the,variable,names;public,uri,expand,map,string,uri,variables,uri,components,expanded,components,this,uri,components,expand,uri,variables,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Map<String, ?> uriVariables);1479746164;Given the Map of variables, expands this template into a URI. The Map keys represent variable names,_the Map values variable values. The order of variables is not significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__Map&lt_String, String&gt_ uriVariables = new HashMap&lt_String, String&gt_()__uriVariables.put("booking", "42")__uriVariables.put("hotel", "Rest & Relax")__System.out.println(template.expand(uriVariables))__</pre>_will print: <blockquote>{@code http://example.com/hotels/Rest%20%26%20Relax/bookings/42}</blockquote>_@param uriVariables the map of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}__or if it does not contain values for all the variable names;public URI expand(Map<String, ?> uriVariables) {_		UriComponents expandedComponents = this.uriComponents.expand(uriVariables)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,the,map,of,variables,expands,this,template,into,a,uri,the,map,keys,represent,variable,names,the,map,values,variable,values,the,order,of,variables,is,not,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,map,lt,string,string,gt,uri,variables,new,hash,map,lt,string,string,gt,uri,variables,put,booking,42,uri,variables,put,hotel,rest,relax,system,out,println,template,expand,uri,variables,pre,will,print,blockquote,code,http,example,com,hotels,rest,20,26,20relax,bookings,42,blockquote,param,uri,variables,the,map,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,values,for,all,the,variable,names;public,uri,expand,map,string,uri,variables,uri,components,expanded,components,this,uri,components,expand,uri,variables,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Map<String, ?> uriVariables);1479823020;Given the Map of variables, expands this template into a URI. The Map keys represent variable names,_the Map values variable values. The order of variables is not significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__Map&lt_String, String&gt_ uriVariables = new HashMap&lt_String, String&gt_()__uriVariables.put("booking", "42")__uriVariables.put("hotel", "Rest & Relax")__System.out.println(template.expand(uriVariables))__</pre>_will print: <blockquote>{@code http://example.com/hotels/Rest%20%26%20Relax/bookings/42}</blockquote>_@param uriVariables the map of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}__or if it does not contain values for all the variable names;public URI expand(Map<String, ?> uriVariables) {_		UriComponents expandedComponents = this.uriComponents.expand(uriVariables)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,the,map,of,variables,expands,this,template,into,a,uri,the,map,keys,represent,variable,names,the,map,values,variable,values,the,order,of,variables,is,not,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,map,lt,string,string,gt,uri,variables,new,hash,map,lt,string,string,gt,uri,variables,put,booking,42,uri,variables,put,hotel,rest,relax,system,out,println,template,expand,uri,variables,pre,will,print,blockquote,code,http,example,com,hotels,rest,20,26,20relax,bookings,42,blockquote,param,uri,variables,the,map,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,values,for,all,the,variable,names;public,uri,expand,map,string,uri,variables,uri,components,expanded,components,this,uri,components,expand,uri,variables,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Map<String, ?> uriVariables);1490644160;Given the Map of variables, expands this template into a URI. The Map keys represent variable names,_the Map values variable values. The order of variables is not significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__Map&lt_String, String&gt_ uriVariables = new HashMap&lt_String, String&gt_()__uriVariables.put("booking", "42")__uriVariables.put("hotel", "Rest & Relax")__System.out.println(template.expand(uriVariables))__</pre>_will print: <blockquote>{@code http://example.com/hotels/Rest%20%26%20Relax/bookings/42}</blockquote>_@param uriVariables the map of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}__or if it does not contain values for all the variable names;public URI expand(Map<String, ?> uriVariables) {_		UriComponents expandedComponents = this.uriComponents.expand(uriVariables)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,the,map,of,variables,expands,this,template,into,a,uri,the,map,keys,represent,variable,names,the,map,values,variable,values,the,order,of,variables,is,not,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,map,lt,string,string,gt,uri,variables,new,hash,map,lt,string,string,gt,uri,variables,put,booking,42,uri,variables,put,hotel,rest,relax,system,out,println,template,expand,uri,variables,pre,will,print,blockquote,code,http,example,com,hotels,rest,20,26,20relax,bookings,42,blockquote,param,uri,variables,the,map,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,values,for,all,the,variable,names;public,uri,expand,map,string,uri,variables,uri,components,expanded,components,this,uri,components,expand,uri,variables,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Map<String, ?> uriVariables);1496837955;Given the Map of variables, expands this template into a URI. The Map keys represent variable names,_the Map values variable values. The order of variables is not significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__Map&lt_String, String&gt_ uriVariables = new HashMap&lt_String, String&gt_()__uriVariables.put("booking", "42")__uriVariables.put("hotel", "Rest & Relax")__System.out.println(template.expand(uriVariables))__</pre>_will print: <blockquote>{@code http://example.com/hotels/Rest%20%26%20Relax/bookings/42}</blockquote>_@param uriVariables the map of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}__or if it does not contain values for all the variable names;public URI expand(Map<String, ?> uriVariables) {_		UriComponents expandedComponents = this.uriComponents.expand(uriVariables)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,the,map,of,variables,expands,this,template,into,a,uri,the,map,keys,represent,variable,names,the,map,values,variable,values,the,order,of,variables,is,not,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,map,lt,string,string,gt,uri,variables,new,hash,map,lt,string,string,gt,uri,variables,put,booking,42,uri,variables,put,hotel,rest,relax,system,out,println,template,expand,uri,variables,pre,will,print,blockquote,code,http,example,com,hotels,rest,20,26,20relax,bookings,42,blockquote,param,uri,variables,the,map,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,values,for,all,the,variable,names;public,uri,expand,map,string,uri,variables,uri,components,expanded,components,this,uri,components,expand,uri,variables,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Map<String, ?> uriVariables);1510341623;Given the Map of variables, expands this template into a URI. The Map keys represent variable names,_the Map values variable values. The order of variables is not significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__Map&lt_String, String&gt_ uriVariables = new HashMap&lt_String, String&gt_()__uriVariables.put("booking", "42")__uriVariables.put("hotel", "Rest & Relax")__System.out.println(template.expand(uriVariables))__</pre>_will print: <blockquote>{@code http://example.com/hotels/Rest%20%26%20Relax/bookings/42}</blockquote>_@param uriVariables the map of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}__or if it does not contain values for all the variable names;public URI expand(Map<String, ?> uriVariables) {_		UriComponents expandedComponents = this.uriComponents.expand(uriVariables)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,the,map,of,variables,expands,this,template,into,a,uri,the,map,keys,represent,variable,names,the,map,values,variable,values,the,order,of,variables,is,not,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,map,lt,string,string,gt,uri,variables,new,hash,map,lt,string,string,gt,uri,variables,put,booking,42,uri,variables,put,hotel,rest,relax,system,out,println,template,expand,uri,variables,pre,will,print,blockquote,code,http,example,com,hotels,rest,20,26,20relax,bookings,42,blockquote,param,uri,variables,the,map,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,values,for,all,the,variable,names;public,uri,expand,map,string,uri,variables,uri,components,expanded,components,this,uri,components,expand,uri,variables,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Map<String, ?> uriVariables);1515706595;Given the Map of variables, expands this template into a URI. The Map keys represent variable names,_the Map values variable values. The order of variables is not significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__Map&lt_String, String&gt_ uriVariables = new HashMap&lt_String, String&gt_()__uriVariables.put("booking", "42")__uriVariables.put("hotel", "Rest & Relax")__System.out.println(template.expand(uriVariables))__</pre>_will print: <blockquote>{@code http://example.com/hotels/Rest%20%26%20Relax/bookings/42}</blockquote>_@param uriVariables the map of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}__or if it does not contain values for all the variable names;public URI expand(Map<String, ?> uriVariables) {_		UriComponents expandedComponents = this.uriComponents.expand(uriVariables)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,the,map,of,variables,expands,this,template,into,a,uri,the,map,keys,represent,variable,names,the,map,values,variable,values,the,order,of,variables,is,not,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,map,lt,string,string,gt,uri,variables,new,hash,map,lt,string,string,gt,uri,variables,put,booking,42,uri,variables,put,hotel,rest,relax,system,out,println,template,expand,uri,variables,pre,will,print,blockquote,code,http,example,com,hotels,rest,20,26,20relax,bookings,42,blockquote,param,uri,variables,the,map,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,values,for,all,the,variable,names;public,uri,expand,map,string,uri,variables,uri,components,expanded,components,this,uri,components,expand,uri,variables,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Map<String, ?> uriVariables);1530174524;Given the Map of variables, expands this template into a URI. The Map keys represent variable names,_the Map values variable values. The order of variables is not significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__Map&lt_String, String&gt_ uriVariables = new HashMap&lt_String, String&gt_()__uriVariables.put("booking", "42")__uriVariables.put("hotel", "Rest & Relax")__System.out.println(template.expand(uriVariables))__</pre>_will print: <blockquote>{@code http://example.com/hotels/Rest%20%26%20Relax/bookings/42}</blockquote>_@param uriVariables the map of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}__or if it does not contain values for all the variable names;public URI expand(Map<String, ?> uriVariables) {_		UriComponents expandedComponents = this.uriComponents.expand(uriVariables)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,the,map,of,variables,expands,this,template,into,a,uri,the,map,keys,represent,variable,names,the,map,values,variable,values,the,order,of,variables,is,not,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,map,lt,string,string,gt,uri,variables,new,hash,map,lt,string,string,gt,uri,variables,put,booking,42,uri,variables,put,hotel,rest,relax,system,out,println,template,expand,uri,variables,pre,will,print,blockquote,code,http,example,com,hotels,rest,20,26,20relax,bookings,42,blockquote,param,uri,variables,the,map,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,values,for,all,the,variable,names;public,uri,expand,map,string,uri,variables,uri,components,expanded,components,this,uri,components,expand,uri,variables,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Map<String, ?> uriVariables);1530174524;Given the Map of variables, expands this template into a URI. The Map keys represent variable names,_the Map values variable values. The order of variables is not significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__Map&lt_String, String&gt_ uriVariables = new HashMap&lt_String, String&gt_()__uriVariables.put("booking", "42")__uriVariables.put("hotel", "Rest & Relax")__System.out.println(template.expand(uriVariables))__</pre>_will print: <blockquote>{@code http://example.com/hotels/Rest%20%26%20Relax/bookings/42}</blockquote>_@param uriVariables the map of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}__or if it does not contain values for all the variable names;public URI expand(Map<String, ?> uriVariables) {_		UriComponents expandedComponents = this.uriComponents.expand(uriVariables)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,the,map,of,variables,expands,this,template,into,a,uri,the,map,keys,represent,variable,names,the,map,values,variable,values,the,order,of,variables,is,not,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,map,lt,string,string,gt,uri,variables,new,hash,map,lt,string,string,gt,uri,variables,put,booking,42,uri,variables,put,hotel,rest,relax,system,out,println,template,expand,uri,variables,pre,will,print,blockquote,code,http,example,com,hotels,rest,20,26,20relax,bookings,42,blockquote,param,uri,variables,the,map,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,values,for,all,the,variable,names;public,uri,expand,map,string,uri,variables,uri,components,expanded,components,this,uri,components,expand,uri,variables,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public Map<String, String> match(String uri);1328020251;Match the given URI to a map of variable values. Keys in the returned map are variable names,_values are variable values, as occurred in the given URI._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.match("http://example.com/hotels/1/bookings/42"))__</pre>_will print: <blockquote><code>{hotel=1, booking=42}</code></blockquote>_@param uri the URI to match to_@return a map of variable values;public Map<String, String> match(String uri) {_		Assert.notNull(uri, "'uri' must not be null")__		Map<String, String> result = new LinkedHashMap<String, String>(this.variableNames.size())__		Matcher matcher = this.matchPattern.matcher(uri)__		if (matcher.find()) {_			for (int i = 1_ i <= matcher.groupCount()_ i++) {_				String name = this.variableNames.get(i - 1)__				String value = matcher.group(i)__				result.put(name, value)__			}_		}_		return result__	};match,the,given,uri,to,a,map,of,variable,values,keys,in,the,returned,map,are,variable,names,values,are,variable,values,as,occurred,in,the,given,uri,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,match,http,example,com,hotels,1,bookings,42,pre,will,print,blockquote,code,hotel,1,booking,42,code,blockquote,param,uri,the,uri,to,match,to,return,a,map,of,variable,values;public,map,string,string,match,string,uri,assert,not,null,uri,uri,must,not,be,null,map,string,string,result,new,linked,hash,map,string,string,this,variable,names,size,matcher,matcher,this,match,pattern,matcher,uri,if,matcher,find,for,int,i,1,i,matcher,group,count,i,string,name,this,variable,names,get,i,1,string,value,matcher,group,i,result,put,name,value,return,result
UriTemplate -> public Map<String, String> match(String uri);1356735495;Match the given URI to a map of variable values. Keys in the returned map are variable names,_values are variable values, as occurred in the given URI._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.match("http://example.com/hotels/1/bookings/42"))__</pre>_will print: <blockquote>{@code {hotel=1, booking=42}}</blockquote>_@param uri the URI to match to_@return a map of variable values;public Map<String, String> match(String uri) {_		Assert.notNull(uri, "'uri' must not be null")__		Map<String, String> result = new LinkedHashMap<String, String>(this.variableNames.size())__		Matcher matcher = this.matchPattern.matcher(uri)__		if (matcher.find()) {_			for (int i = 1_ i <= matcher.groupCount()_ i++) {_				String name = this.variableNames.get(i - 1)__				String value = matcher.group(i)__				result.put(name, value)__			}_		}_		return result__	};match,the,given,uri,to,a,map,of,variable,values,keys,in,the,returned,map,are,variable,names,values,are,variable,values,as,occurred,in,the,given,uri,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,match,http,example,com,hotels,1,bookings,42,pre,will,print,blockquote,code,hotel,1,booking,42,blockquote,param,uri,the,uri,to,match,to,return,a,map,of,variable,values;public,map,string,string,match,string,uri,assert,not,null,uri,uri,must,not,be,null,map,string,string,result,new,linked,hash,map,string,string,this,variable,names,size,matcher,matcher,this,match,pattern,matcher,uri,if,matcher,find,for,int,i,1,i,matcher,group,count,i,string,name,this,variable,names,get,i,1,string,value,matcher,group,i,result,put,name,value,return,result
UriTemplate -> public Map<String, String> match(String uri);1362408075;Match the given URI to a map of variable values. Keys in the returned map are variable names,_values are variable values, as occurred in the given URI._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.match("http://example.com/hotels/1/bookings/42"))__</pre>_will print: <blockquote>{@code {hotel=1, booking=42}}</blockquote>_@param uri the URI to match to_@return a map of variable values;public Map<String, String> match(String uri) {_		Assert.notNull(uri, "'uri' must not be null")__		Map<String, String> result = new LinkedHashMap<String, String>(this.variableNames.size())__		Matcher matcher = this.matchPattern.matcher(uri)__		if (matcher.find()) {_			for (int i = 1_ i <= matcher.groupCount()_ i++) {_				String name = this.variableNames.get(i - 1)__				String value = matcher.group(i)__				result.put(name, value)__			}_		}_		return result__	};match,the,given,uri,to,a,map,of,variable,values,keys,in,the,returned,map,are,variable,names,values,are,variable,values,as,occurred,in,the,given,uri,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,match,http,example,com,hotels,1,bookings,42,pre,will,print,blockquote,code,hotel,1,booking,42,blockquote,param,uri,the,uri,to,match,to,return,a,map,of,variable,values;public,map,string,string,match,string,uri,assert,not,null,uri,uri,must,not,be,null,map,string,string,result,new,linked,hash,map,string,string,this,variable,names,size,matcher,matcher,this,match,pattern,matcher,uri,if,matcher,find,for,int,i,1,i,matcher,group,count,i,string,name,this,variable,names,get,i,1,string,value,matcher,group,i,result,put,name,value,return,result
UriTemplate -> public Map<String, String> match(String uri);1367578939;Match the given URI to a map of variable values. Keys in the returned map are variable names,_values are variable values, as occurred in the given URI._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.match("http://example.com/hotels/1/bookings/42"))__</pre>_will print: <blockquote>{@code {hotel=1, booking=42}}</blockquote>_@param uri the URI to match to_@return a map of variable values;public Map<String, String> match(String uri) {_		Assert.notNull(uri, "'uri' must not be null")__		Map<String, String> result = new LinkedHashMap<String, String>(this.variableNames.size())__		Matcher matcher = this.matchPattern.matcher(uri)__		if (matcher.find()) {_			for (int i = 1_ i <= matcher.groupCount()_ i++) {_				String name = this.variableNames.get(i - 1)__				String value = matcher.group(i)__				result.put(name, value)__			}_		}_		return result__	};match,the,given,uri,to,a,map,of,variable,values,keys,in,the,returned,map,are,variable,names,values,are,variable,values,as,occurred,in,the,given,uri,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,match,http,example,com,hotels,1,bookings,42,pre,will,print,blockquote,code,hotel,1,booking,42,blockquote,param,uri,the,uri,to,match,to,return,a,map,of,variable,values;public,map,string,string,match,string,uri,assert,not,null,uri,uri,must,not,be,null,map,string,string,result,new,linked,hash,map,string,string,this,variable,names,size,matcher,matcher,this,match,pattern,matcher,uri,if,matcher,find,for,int,i,1,i,matcher,group,count,i,string,name,this,variable,names,get,i,1,string,value,matcher,group,i,result,put,name,value,return,result
UriTemplate -> public Map<String, String> match(String uri);1367581556;Match the given URI to a map of variable values. Keys in the returned map are variable names,_values are variable values, as occurred in the given URI._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.match("http://example.com/hotels/1/bookings/42"))__</pre>_will print: <blockquote>{@code {hotel=1, booking=42}}</blockquote>_@param uri the URI to match to_@return a map of variable values;public Map<String, String> match(String uri) {_		Assert.notNull(uri, "'uri' must not be null")__		Map<String, String> result = new LinkedHashMap<String, String>(this.variableNames.size())__		Matcher matcher = this.matchPattern.matcher(uri)__		if (matcher.find()) {_			for (int i = 1_ i <= matcher.groupCount()_ i++) {_				String name = this.variableNames.get(i - 1)__				String value = matcher.group(i)__				result.put(name, value)__			}_		}_		return result__	};match,the,given,uri,to,a,map,of,variable,values,keys,in,the,returned,map,are,variable,names,values,are,variable,values,as,occurred,in,the,given,uri,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,match,http,example,com,hotels,1,bookings,42,pre,will,print,blockquote,code,hotel,1,booking,42,blockquote,param,uri,the,uri,to,match,to,return,a,map,of,variable,values;public,map,string,string,match,string,uri,assert,not,null,uri,uri,must,not,be,null,map,string,string,result,new,linked,hash,map,string,string,this,variable,names,size,matcher,matcher,this,match,pattern,matcher,uri,if,matcher,find,for,int,i,1,i,matcher,group,count,i,string,name,this,variable,names,get,i,1,string,value,matcher,group,i,result,put,name,value,return,result
UriTemplate -> public Map<String, String> match(String uri);1385412762;Match the given URI to a map of variable values. Keys in the returned map are variable names,_values are variable values, as occurred in the given URI._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.match("http://example.com/hotels/1/bookings/42"))__</pre>_will print: <blockquote>{@code {hotel=1, booking=42}}</blockquote>_@param uri the URI to match to_@return a map of variable values;public Map<String, String> match(String uri) {_		Assert.notNull(uri, "'uri' must not be null")__		Map<String, String> result = new LinkedHashMap<String, String>(this.variableNames.size())__		Matcher matcher = this.matchPattern.matcher(uri)__		if (matcher.find()) {_			for (int i = 1_ i <= matcher.groupCount()_ i++) {_				String name = this.variableNames.get(i - 1)__				String value = matcher.group(i)__				result.put(name, value)__			}_		}_		return result__	};match,the,given,uri,to,a,map,of,variable,values,keys,in,the,returned,map,are,variable,names,values,are,variable,values,as,occurred,in,the,given,uri,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,match,http,example,com,hotels,1,bookings,42,pre,will,print,blockquote,code,hotel,1,booking,42,blockquote,param,uri,the,uri,to,match,to,return,a,map,of,variable,values;public,map,string,string,match,string,uri,assert,not,null,uri,uri,must,not,be,null,map,string,string,result,new,linked,hash,map,string,string,this,variable,names,size,matcher,matcher,this,match,pattern,matcher,uri,if,matcher,find,for,int,i,1,i,matcher,group,count,i,string,name,this,variable,names,get,i,1,string,value,matcher,group,i,result,put,name,value,return,result
UriTemplate -> public Map<String, String> match(String uri);1406840888;Match the given URI to a map of variable values. Keys in the returned map are variable names,_values are variable values, as occurred in the given URI._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.match("http://example.com/hotels/1/bookings/42"))__</pre>_will print: <blockquote>{@code {hotel=1, booking=42}}</blockquote>_@param uri the URI to match to_@return a map of variable values;public Map<String, String> match(String uri) {_		Assert.notNull(uri, "'uri' must not be null")__		Map<String, String> result = new LinkedHashMap<String, String>(this.variableNames.size())__		Matcher matcher = this.matchPattern.matcher(uri)__		if (matcher.find()) {_			for (int i = 1_ i <= matcher.groupCount()_ i++) {_				String name = this.variableNames.get(i - 1)__				String value = matcher.group(i)__				result.put(name, value)__			}_		}_		return result__	};match,the,given,uri,to,a,map,of,variable,values,keys,in,the,returned,map,are,variable,names,values,are,variable,values,as,occurred,in,the,given,uri,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,match,http,example,com,hotels,1,bookings,42,pre,will,print,blockquote,code,hotel,1,booking,42,blockquote,param,uri,the,uri,to,match,to,return,a,map,of,variable,values;public,map,string,string,match,string,uri,assert,not,null,uri,uri,must,not,be,null,map,string,string,result,new,linked,hash,map,string,string,this,variable,names,size,matcher,matcher,this,match,pattern,matcher,uri,if,matcher,find,for,int,i,1,i,matcher,group,count,i,string,name,this,variable,names,get,i,1,string,value,matcher,group,i,result,put,name,value,return,result
UriTemplate -> public Map<String, String> match(String uri);1409822411;Match the given URI to a map of variable values. Keys in the returned map are variable names,_values are variable values, as occurred in the given URI._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.match("http://example.com/hotels/1/bookings/42"))__</pre>_will print: <blockquote>{@code {hotel=1, booking=42}}</blockquote>_@param uri the URI to match to_@return a map of variable values;public Map<String, String> match(String uri) {_		Assert.notNull(uri, "'uri' must not be null")__		Map<String, String> result = new LinkedHashMap<String, String>(this.variableNames.size())__		Matcher matcher = this.matchPattern.matcher(uri)__		if (matcher.find()) {_			for (int i = 1_ i <= matcher.groupCount()_ i++) {_				String name = this.variableNames.get(i - 1)__				String value = matcher.group(i)__				result.put(name, value)__			}_		}_		return result__	};match,the,given,uri,to,a,map,of,variable,values,keys,in,the,returned,map,are,variable,names,values,are,variable,values,as,occurred,in,the,given,uri,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,match,http,example,com,hotels,1,bookings,42,pre,will,print,blockquote,code,hotel,1,booking,42,blockquote,param,uri,the,uri,to,match,to,return,a,map,of,variable,values;public,map,string,string,match,string,uri,assert,not,null,uri,uri,must,not,be,null,map,string,string,result,new,linked,hash,map,string,string,this,variable,names,size,matcher,matcher,this,match,pattern,matcher,uri,if,matcher,find,for,int,i,1,i,matcher,group,count,i,string,name,this,variable,names,get,i,1,string,value,matcher,group,i,result,put,name,value,return,result
UriTemplate -> public Map<String, String> match(String uri);1446471766;Match the given URI to a map of variable values. Keys in the returned map are variable names,_values are variable values, as occurred in the given URI._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.match("http://example.com/hotels/1/bookings/42"))__</pre>_will print: <blockquote>{@code {hotel=1, booking=42}}</blockquote>_@param uri the URI to match to_@return a map of variable values;public Map<String, String> match(String uri) {_		Assert.notNull(uri, "'uri' must not be null")__		Map<String, String> result = new LinkedHashMap<String, String>(this.variableNames.size())__		Matcher matcher = this.matchPattern.matcher(uri)__		if (matcher.find()) {_			for (int i = 1_ i <= matcher.groupCount()_ i++) {_				String name = this.variableNames.get(i - 1)__				String value = matcher.group(i)__				result.put(name, value)__			}_		}_		return result__	};match,the,given,uri,to,a,map,of,variable,values,keys,in,the,returned,map,are,variable,names,values,are,variable,values,as,occurred,in,the,given,uri,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,match,http,example,com,hotels,1,bookings,42,pre,will,print,blockquote,code,hotel,1,booking,42,blockquote,param,uri,the,uri,to,match,to,return,a,map,of,variable,values;public,map,string,string,match,string,uri,assert,not,null,uri,uri,must,not,be,null,map,string,string,result,new,linked,hash,map,string,string,this,variable,names,size,matcher,matcher,this,match,pattern,matcher,uri,if,matcher,find,for,int,i,1,i,matcher,group,count,i,string,name,this,variable,names,get,i,1,string,value,matcher,group,i,result,put,name,value,return,result
UriTemplate -> public Map<String, String> match(String uri);1446734350;Match the given URI to a map of variable values. Keys in the returned map are variable names,_values are variable values, as occurred in the given URI._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.match("http://example.com/hotels/1/bookings/42"))__</pre>_will print: <blockquote>{@code {hotel=1, booking=42}}</blockquote>_@param uri the URI to match to_@return a map of variable values;public Map<String, String> match(String uri) {_		Assert.notNull(uri, "'uri' must not be null")__		Map<String, String> result = new LinkedHashMap<String, String>(this.variableNames.size())__		Matcher matcher = this.matchPattern.matcher(uri)__		if (matcher.find()) {_			for (int i = 1_ i <= matcher.groupCount()_ i++) {_				String name = this.variableNames.get(i - 1)__				String value = matcher.group(i)__				result.put(name, value)__			}_		}_		return result__	};match,the,given,uri,to,a,map,of,variable,values,keys,in,the,returned,map,are,variable,names,values,are,variable,values,as,occurred,in,the,given,uri,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,match,http,example,com,hotels,1,bookings,42,pre,will,print,blockquote,code,hotel,1,booking,42,blockquote,param,uri,the,uri,to,match,to,return,a,map,of,variable,values;public,map,string,string,match,string,uri,assert,not,null,uri,uri,must,not,be,null,map,string,string,result,new,linked,hash,map,string,string,this,variable,names,size,matcher,matcher,this,match,pattern,matcher,uri,if,matcher,find,for,int,i,1,i,matcher,group,count,i,string,name,this,variable,names,get,i,1,string,value,matcher,group,i,result,put,name,value,return,result
UriTemplate -> public Map<String, String> match(String uri);1448923588;Match the given URI to a map of variable values. Keys in the returned map are variable names,_values are variable values, as occurred in the given URI._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.match("http://example.com/hotels/1/bookings/42"))__</pre>_will print: <blockquote>{@code {hotel=1, booking=42}}</blockquote>_@param uri the URI to match to_@return a map of variable values;public Map<String, String> match(String uri) {_		Assert.notNull(uri, "'uri' must not be null")__		Map<String, String> result = new LinkedHashMap<String, String>(this.variableNames.size())__		Matcher matcher = this.matchPattern.matcher(uri)__		if (matcher.find()) {_			for (int i = 1_ i <= matcher.groupCount()_ i++) {_				String name = this.variableNames.get(i - 1)__				String value = matcher.group(i)__				result.put(name, value)__			}_		}_		return result__	};match,the,given,uri,to,a,map,of,variable,values,keys,in,the,returned,map,are,variable,names,values,are,variable,values,as,occurred,in,the,given,uri,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,match,http,example,com,hotels,1,bookings,42,pre,will,print,blockquote,code,hotel,1,booking,42,blockquote,param,uri,the,uri,to,match,to,return,a,map,of,variable,values;public,map,string,string,match,string,uri,assert,not,null,uri,uri,must,not,be,null,map,string,string,result,new,linked,hash,map,string,string,this,variable,names,size,matcher,matcher,this,match,pattern,matcher,uri,if,matcher,find,for,int,i,1,i,matcher,group,count,i,string,name,this,variable,names,get,i,1,string,value,matcher,group,i,result,put,name,value,return,result
UriTemplate -> public Map<String, String> match(String uri);1460441863;Match the given URI to a map of variable values. Keys in the returned map are variable names,_values are variable values, as occurred in the given URI._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.match("http://example.com/hotels/1/bookings/42"))__</pre>_will print: <blockquote>{@code {hotel=1, booking=42}}</blockquote>_@param uri the URI to match to_@return a map of variable values;public Map<String, String> match(String uri) {_		Assert.notNull(uri, "'uri' must not be null")__		Map<String, String> result = new LinkedHashMap<String, String>(this.variableNames.size())__		Matcher matcher = this.matchPattern.matcher(uri)__		if (matcher.find()) {_			for (int i = 1_ i <= matcher.groupCount()_ i++) {_				String name = this.variableNames.get(i - 1)__				String value = matcher.group(i)__				result.put(name, value)__			}_		}_		return result__	};match,the,given,uri,to,a,map,of,variable,values,keys,in,the,returned,map,are,variable,names,values,are,variable,values,as,occurred,in,the,given,uri,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,match,http,example,com,hotels,1,bookings,42,pre,will,print,blockquote,code,hotel,1,booking,42,blockquote,param,uri,the,uri,to,match,to,return,a,map,of,variable,values;public,map,string,string,match,string,uri,assert,not,null,uri,uri,must,not,be,null,map,string,string,result,new,linked,hash,map,string,string,this,variable,names,size,matcher,matcher,this,match,pattern,matcher,uri,if,matcher,find,for,int,i,1,i,matcher,group,count,i,string,name,this,variable,names,get,i,1,string,value,matcher,group,i,result,put,name,value,return,result
UriTemplate -> public Map<String, String> match(String uri);1467730834;Match the given URI to a map of variable values. Keys in the returned map are variable names,_values are variable values, as occurred in the given URI._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.match("http://example.com/hotels/1/bookings/42"))__</pre>_will print: <blockquote>{@code {hotel=1, booking=42}}</blockquote>_@param uri the URI to match to_@return a map of variable values;public Map<String, String> match(String uri) {_		Assert.notNull(uri, "'uri' must not be null")__		Map<String, String> result = new LinkedHashMap<>(this.variableNames.size())__		Matcher matcher = this.matchPattern.matcher(uri)__		if (matcher.find()) {_			for (int i = 1_ i <= matcher.groupCount()_ i++) {_				String name = this.variableNames.get(i - 1)__				String value = matcher.group(i)__				result.put(name, value)__			}_		}_		return result__	};match,the,given,uri,to,a,map,of,variable,values,keys,in,the,returned,map,are,variable,names,values,are,variable,values,as,occurred,in,the,given,uri,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,match,http,example,com,hotels,1,bookings,42,pre,will,print,blockquote,code,hotel,1,booking,42,blockquote,param,uri,the,uri,to,match,to,return,a,map,of,variable,values;public,map,string,string,match,string,uri,assert,not,null,uri,uri,must,not,be,null,map,string,string,result,new,linked,hash,map,this,variable,names,size,matcher,matcher,this,match,pattern,matcher,uri,if,matcher,find,for,int,i,1,i,matcher,group,count,i,string,name,this,variable,names,get,i,1,string,value,matcher,group,i,result,put,name,value,return,result
UriTemplate -> public Map<String, String> match(String uri);1479746164;Match the given URI to a map of variable values. Keys in the returned map are variable names,_values are variable values, as occurred in the given URI._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.match("http://example.com/hotels/1/bookings/42"))__</pre>_will print: <blockquote>{@code {hotel=1, booking=42}}</blockquote>_@param uri the URI to match to_@return a map of variable values;public Map<String, String> match(String uri) {_		Assert.notNull(uri, "'uri' must not be null")__		Map<String, String> result = new LinkedHashMap<>(this.variableNames.size())__		Matcher matcher = this.matchPattern.matcher(uri)__		if (matcher.find()) {_			for (int i = 1_ i <= matcher.groupCount()_ i++) {_				String name = this.variableNames.get(i - 1)__				String value = matcher.group(i)__				result.put(name, value)__			}_		}_		return result__	};match,the,given,uri,to,a,map,of,variable,values,keys,in,the,returned,map,are,variable,names,values,are,variable,values,as,occurred,in,the,given,uri,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,match,http,example,com,hotels,1,bookings,42,pre,will,print,blockquote,code,hotel,1,booking,42,blockquote,param,uri,the,uri,to,match,to,return,a,map,of,variable,values;public,map,string,string,match,string,uri,assert,not,null,uri,uri,must,not,be,null,map,string,string,result,new,linked,hash,map,this,variable,names,size,matcher,matcher,this,match,pattern,matcher,uri,if,matcher,find,for,int,i,1,i,matcher,group,count,i,string,name,this,variable,names,get,i,1,string,value,matcher,group,i,result,put,name,value,return,result
UriTemplate -> public Map<String, String> match(String uri);1479823020;Match the given URI to a map of variable values. Keys in the returned map are variable names,_values are variable values, as occurred in the given URI._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.match("http://example.com/hotels/1/bookings/42"))__</pre>_will print: <blockquote>{@code {hotel=1, booking=42}}</blockquote>_@param uri the URI to match to_@return a map of variable values;public Map<String, String> match(String uri) {_		Assert.notNull(uri, "'uri' must not be null")__		Map<String, String> result = new LinkedHashMap<>(this.variableNames.size())__		Matcher matcher = this.matchPattern.matcher(uri)__		if (matcher.find()) {_			for (int i = 1_ i <= matcher.groupCount()_ i++) {_				String name = this.variableNames.get(i - 1)__				String value = matcher.group(i)__				result.put(name, value)__			}_		}_		return result__	};match,the,given,uri,to,a,map,of,variable,values,keys,in,the,returned,map,are,variable,names,values,are,variable,values,as,occurred,in,the,given,uri,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,match,http,example,com,hotels,1,bookings,42,pre,will,print,blockquote,code,hotel,1,booking,42,blockquote,param,uri,the,uri,to,match,to,return,a,map,of,variable,values;public,map,string,string,match,string,uri,assert,not,null,uri,uri,must,not,be,null,map,string,string,result,new,linked,hash,map,this,variable,names,size,matcher,matcher,this,match,pattern,matcher,uri,if,matcher,find,for,int,i,1,i,matcher,group,count,i,string,name,this,variable,names,get,i,1,string,value,matcher,group,i,result,put,name,value,return,result
UriTemplate -> public Map<String, String> match(String uri);1490644160;Match the given URI to a map of variable values. Keys in the returned map are variable names,_values are variable values, as occurred in the given URI._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.match("http://example.com/hotels/1/bookings/42"))__</pre>_will print: <blockquote>{@code {hotel=1, booking=42}}</blockquote>_@param uri the URI to match to_@return a map of variable values;public Map<String, String> match(String uri) {_		Assert.notNull(uri, "'uri' must not be null")__		Map<String, String> result = new LinkedHashMap<>(this.variableNames.size())__		Matcher matcher = this.matchPattern.matcher(uri)__		if (matcher.find()) {_			for (int i = 1_ i <= matcher.groupCount()_ i++) {_				String name = this.variableNames.get(i - 1)__				String value = matcher.group(i)__				result.put(name, value)__			}_		}_		return result__	};match,the,given,uri,to,a,map,of,variable,values,keys,in,the,returned,map,are,variable,names,values,are,variable,values,as,occurred,in,the,given,uri,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,match,http,example,com,hotels,1,bookings,42,pre,will,print,blockquote,code,hotel,1,booking,42,blockquote,param,uri,the,uri,to,match,to,return,a,map,of,variable,values;public,map,string,string,match,string,uri,assert,not,null,uri,uri,must,not,be,null,map,string,string,result,new,linked,hash,map,this,variable,names,size,matcher,matcher,this,match,pattern,matcher,uri,if,matcher,find,for,int,i,1,i,matcher,group,count,i,string,name,this,variable,names,get,i,1,string,value,matcher,group,i,result,put,name,value,return,result
UriTemplate -> public Map<String, String> match(String uri);1496837955;Match the given URI to a map of variable values. Keys in the returned map are variable names,_values are variable values, as occurred in the given URI._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.match("http://example.com/hotels/1/bookings/42"))__</pre>_will print: <blockquote>{@code {hotel=1, booking=42}}</blockquote>_@param uri the URI to match to_@return a map of variable values;public Map<String, String> match(String uri) {_		Assert.notNull(uri, "'uri' must not be null")__		Map<String, String> result = new LinkedHashMap<>(this.variableNames.size())__		Matcher matcher = this.matchPattern.matcher(uri)__		if (matcher.find()) {_			for (int i = 1_ i <= matcher.groupCount()_ i++) {_				String name = this.variableNames.get(i - 1)__				String value = matcher.group(i)__				result.put(name, value)__			}_		}_		return result__	};match,the,given,uri,to,a,map,of,variable,values,keys,in,the,returned,map,are,variable,names,values,are,variable,values,as,occurred,in,the,given,uri,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,match,http,example,com,hotels,1,bookings,42,pre,will,print,blockquote,code,hotel,1,booking,42,blockquote,param,uri,the,uri,to,match,to,return,a,map,of,variable,values;public,map,string,string,match,string,uri,assert,not,null,uri,uri,must,not,be,null,map,string,string,result,new,linked,hash,map,this,variable,names,size,matcher,matcher,this,match,pattern,matcher,uri,if,matcher,find,for,int,i,1,i,matcher,group,count,i,string,name,this,variable,names,get,i,1,string,value,matcher,group,i,result,put,name,value,return,result
UriTemplate -> public Map<String, String> match(String uri);1510341623;Match the given URI to a map of variable values. Keys in the returned map are variable names,_values are variable values, as occurred in the given URI._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.match("http://example.com/hotels/1/bookings/42"))__</pre>_will print: <blockquote>{@code {hotel=1, booking=42}}</blockquote>_@param uri the URI to match to_@return a map of variable values;public Map<String, String> match(String uri) {_		Assert.notNull(uri, "'uri' must not be null")__		Map<String, String> result = new LinkedHashMap<>(this.variableNames.size())__		Matcher matcher = this.matchPattern.matcher(uri)__		if (matcher.find()) {_			for (int i = 1_ i <= matcher.groupCount()_ i++) {_				String name = this.variableNames.get(i - 1)__				String value = matcher.group(i)__				result.put(name, value)__			}_		}_		return result__	};match,the,given,uri,to,a,map,of,variable,values,keys,in,the,returned,map,are,variable,names,values,are,variable,values,as,occurred,in,the,given,uri,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,match,http,example,com,hotels,1,bookings,42,pre,will,print,blockquote,code,hotel,1,booking,42,blockquote,param,uri,the,uri,to,match,to,return,a,map,of,variable,values;public,map,string,string,match,string,uri,assert,not,null,uri,uri,must,not,be,null,map,string,string,result,new,linked,hash,map,this,variable,names,size,matcher,matcher,this,match,pattern,matcher,uri,if,matcher,find,for,int,i,1,i,matcher,group,count,i,string,name,this,variable,names,get,i,1,string,value,matcher,group,i,result,put,name,value,return,result
UriTemplate -> public Map<String, String> match(String uri);1515706595;Match the given URI to a map of variable values. Keys in the returned map are variable names,_values are variable values, as occurred in the given URI._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.match("http://example.com/hotels/1/bookings/42"))__</pre>_will print: <blockquote>{@code {hotel=1, booking=42}}</blockquote>_@param uri the URI to match to_@return a map of variable values;public Map<String, String> match(String uri) {_		Assert.notNull(uri, "'uri' must not be null")__		Map<String, String> result = new LinkedHashMap<>(this.variableNames.size())__		Matcher matcher = this.matchPattern.matcher(uri)__		if (matcher.find()) {_			for (int i = 1_ i <= matcher.groupCount()_ i++) {_				String name = this.variableNames.get(i - 1)__				String value = matcher.group(i)__				result.put(name, value)__			}_		}_		return result__	};match,the,given,uri,to,a,map,of,variable,values,keys,in,the,returned,map,are,variable,names,values,are,variable,values,as,occurred,in,the,given,uri,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,match,http,example,com,hotels,1,bookings,42,pre,will,print,blockquote,code,hotel,1,booking,42,blockquote,param,uri,the,uri,to,match,to,return,a,map,of,variable,values;public,map,string,string,match,string,uri,assert,not,null,uri,uri,must,not,be,null,map,string,string,result,new,linked,hash,map,this,variable,names,size,matcher,matcher,this,match,pattern,matcher,uri,if,matcher,find,for,int,i,1,i,matcher,group,count,i,string,name,this,variable,names,get,i,1,string,value,matcher,group,i,result,put,name,value,return,result
UriTemplate -> public Map<String, String> match(String uri);1530174524;Match the given URI to a map of variable values. Keys in the returned map are variable names,_values are variable values, as occurred in the given URI._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.match("http://example.com/hotels/1/bookings/42"))__</pre>_will print: <blockquote>{@code {hotel=1, booking=42}}</blockquote>_@param uri the URI to match to_@return a map of variable values;public Map<String, String> match(String uri) {_		Assert.notNull(uri, "'uri' must not be null")__		Map<String, String> result = new LinkedHashMap<>(this.variableNames.size())__		Matcher matcher = this.matchPattern.matcher(uri)__		if (matcher.find()) {_			for (int i = 1_ i <= matcher.groupCount()_ i++) {_				String name = this.variableNames.get(i - 1)__				String value = matcher.group(i)__				result.put(name, value)__			}_		}_		return result__	};match,the,given,uri,to,a,map,of,variable,values,keys,in,the,returned,map,are,variable,names,values,are,variable,values,as,occurred,in,the,given,uri,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,match,http,example,com,hotels,1,bookings,42,pre,will,print,blockquote,code,hotel,1,booking,42,blockquote,param,uri,the,uri,to,match,to,return,a,map,of,variable,values;public,map,string,string,match,string,uri,assert,not,null,uri,uri,must,not,be,null,map,string,string,result,new,linked,hash,map,this,variable,names,size,matcher,matcher,this,match,pattern,matcher,uri,if,matcher,find,for,int,i,1,i,matcher,group,count,i,string,name,this,variable,names,get,i,1,string,value,matcher,group,i,result,put,name,value,return,result
UriTemplate -> public Map<String, String> match(String uri);1530174524;Match the given URI to a map of variable values. Keys in the returned map are variable names,_values are variable values, as occurred in the given URI._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.match("http://example.com/hotels/1/bookings/42"))__</pre>_will print: <blockquote>{@code {hotel=1, booking=42}}</blockquote>_@param uri the URI to match to_@return a map of variable values;public Map<String, String> match(String uri) {_		Assert.notNull(uri, "'uri' must not be null")__		Map<String, String> result = new LinkedHashMap<>(this.variableNames.size())__		Matcher matcher = this.matchPattern.matcher(uri)__		if (matcher.find()) {_			for (int i = 1_ i <= matcher.groupCount()_ i++) {_				String name = this.variableNames.get(i - 1)__				String value = matcher.group(i)__				result.put(name, value)__			}_		}_		return result__	};match,the,given,uri,to,a,map,of,variable,values,keys,in,the,returned,map,are,variable,names,values,are,variable,values,as,occurred,in,the,given,uri,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,match,http,example,com,hotels,1,bookings,42,pre,will,print,blockquote,code,hotel,1,booking,42,blockquote,param,uri,the,uri,to,match,to,return,a,map,of,variable,values;public,map,string,string,match,string,uri,assert,not,null,uri,uri,must,not,be,null,map,string,string,result,new,linked,hash,map,this,variable,names,size,matcher,matcher,this,match,pattern,matcher,uri,if,matcher,find,for,int,i,1,i,matcher,group,count,i,string,name,this,variable,names,get,i,1,string,value,matcher,group,i,result,put,name,value,return,result
UriTemplate -> @Deprecated 	protected URI encodeUri(String uri);1328020251;Encodes the given String as URL._<p>Defaults to {@link UriUtils#encodeUri(String, String)}._@param uri the URI to encode_@return the encoded URI_@deprecated No longer in use, with no direct replacement;@Deprecated_	protected URI encodeUri(String uri) {_		try {_			String encoded = UriUtils.encodeUri(uri, "UTF-8")__			return new URI(encoded)__		}_		catch (UnsupportedEncodingException ex) {_			_			throw new IllegalStateException(ex)__		}_		catch (URISyntaxException ex) {_			throw new IllegalArgumentException("Could not create URI from [" + uri + "]: " + ex, ex)__		}_	};encodes,the,given,string,as,url,p,defaults,to,link,uri,utils,encode,uri,string,string,param,uri,the,uri,to,encode,return,the,encoded,uri,deprecated,no,longer,in,use,with,no,direct,replacement;deprecated,protected,uri,encode,uri,string,uri,try,string,encoded,uri,utils,encode,uri,uri,utf,8,return,new,uri,encoded,catch,unsupported,encoding,exception,ex,throw,new,illegal,state,exception,ex,catch,urisyntax,exception,ex,throw,new,illegal,argument,exception,could,not,create,uri,from,uri,ex,ex
UriTemplate -> @Deprecated 	protected URI encodeUri(String uri);1356735495;Encodes the given String as URL._<p>Defaults to {@link UriUtils#encodeUri(String, String)}._@param uri the URI to encode_@return the encoded URI_@deprecated No longer in use, with no direct replacement;@Deprecated_	protected URI encodeUri(String uri) {_		try {_			String encoded = UriUtils.encodeUri(uri, "UTF-8")__			return new URI(encoded)__		}_		catch (UnsupportedEncodingException ex) {_			_			throw new IllegalStateException(ex)__		}_		catch (URISyntaxException ex) {_			throw new IllegalArgumentException("Could not create URI from [" + uri + "]: " + ex, ex)__		}_	};encodes,the,given,string,as,url,p,defaults,to,link,uri,utils,encode,uri,string,string,param,uri,the,uri,to,encode,return,the,encoded,uri,deprecated,no,longer,in,use,with,no,direct,replacement;deprecated,protected,uri,encode,uri,string,uri,try,string,encoded,uri,utils,encode,uri,uri,utf,8,return,new,uri,encoded,catch,unsupported,encoding,exception,ex,throw,new,illegal,state,exception,ex,catch,urisyntax,exception,ex,throw,new,illegal,argument,exception,could,not,create,uri,from,uri,ex,ex
UriTemplate -> @Deprecated 	protected URI encodeUri(String uri);1362408075;Encodes the given String as URL._<p>Defaults to {@link UriUtils#encodeUri(String, String)}._@param uri the URI to encode_@return the encoded URI_@deprecated No longer in use, with no direct replacement;@Deprecated_	protected URI encodeUri(String uri) {_		try {_			String encoded = UriUtils.encodeUri(uri, "UTF-8")__			return new URI(encoded)__		}_		catch (UnsupportedEncodingException ex) {_			_			throw new IllegalStateException(ex)__		}_		catch (URISyntaxException ex) {_			throw new IllegalArgumentException("Could not create URI from [" + uri + "]: " + ex, ex)__		}_	};encodes,the,given,string,as,url,p,defaults,to,link,uri,utils,encode,uri,string,string,param,uri,the,uri,to,encode,return,the,encoded,uri,deprecated,no,longer,in,use,with,no,direct,replacement;deprecated,protected,uri,encode,uri,string,uri,try,string,encoded,uri,utils,encode,uri,uri,utf,8,return,new,uri,encoded,catch,unsupported,encoding,exception,ex,throw,new,illegal,state,exception,ex,catch,urisyntax,exception,ex,throw,new,illegal,argument,exception,could,not,create,uri,from,uri,ex,ex
UriTemplate -> public UriTemplate(String uriTemplate);1328020251;Construct a new {@code UriTemplate} with the given URI String._@param uriTemplate the URI template string;public UriTemplate(String uriTemplate) {_		Parser parser = new Parser(uriTemplate)__		this.uriTemplate = uriTemplate__		this.variableNames = parser.getVariableNames()__		this.matchPattern = parser.getMatchPattern()__        this.uriComponents = UriComponentsBuilder.fromUriString(uriTemplate).build()__	};construct,a,new,code,uri,template,with,the,given,uri,string,param,uri,template,the,uri,template,string;public,uri,template,string,uri,template,parser,parser,new,parser,uri,template,this,uri,template,uri,template,this,variable,names,parser,get,variable,names,this,match,pattern,parser,get,match,pattern,this,uri,components,uri,components,builder,from,uri,string,uri,template,build
UriTemplate -> public UriTemplate(String uriTemplate);1356735495;Construct a new {@code UriTemplate} with the given URI String._@param uriTemplate the URI template string;public UriTemplate(String uriTemplate) {_		Parser parser = new Parser(uriTemplate)__		this.uriTemplate = uriTemplate__		this.variableNames = parser.getVariableNames()__		this.matchPattern = parser.getMatchPattern()__		this.uriComponents = UriComponentsBuilder.fromUriString(uriTemplate).build()__	};construct,a,new,code,uri,template,with,the,given,uri,string,param,uri,template,the,uri,template,string;public,uri,template,string,uri,template,parser,parser,new,parser,uri,template,this,uri,template,uri,template,this,variable,names,parser,get,variable,names,this,match,pattern,parser,get,match,pattern,this,uri,components,uri,components,builder,from,uri,string,uri,template,build
UriTemplate -> public UriTemplate(String uriTemplate);1362408075;Construct a new {@code UriTemplate} with the given URI String._@param uriTemplate the URI template string;public UriTemplate(String uriTemplate) {_		Parser parser = new Parser(uriTemplate)__		this.uriTemplate = uriTemplate__		this.variableNames = parser.getVariableNames()__		this.matchPattern = parser.getMatchPattern()__		this.uriComponents = UriComponentsBuilder.fromUriString(uriTemplate).build()__	};construct,a,new,code,uri,template,with,the,given,uri,string,param,uri,template,the,uri,template,string;public,uri,template,string,uri,template,parser,parser,new,parser,uri,template,this,uri,template,uri,template,this,variable,names,parser,get,variable,names,this,match,pattern,parser,get,match,pattern,this,uri,components,uri,components,builder,from,uri,string,uri,template,build
UriTemplate -> public UriTemplate(String uriTemplate);1367578939;Construct a new {@code UriTemplate} with the given URI String._@param uriTemplate the URI template string;public UriTemplate(String uriTemplate) {_		Parser parser = new Parser(uriTemplate)__		this.uriTemplate = uriTemplate__		this.variableNames = parser.getVariableNames()__		this.matchPattern = parser.getMatchPattern()__		this.uriComponents = UriComponentsBuilder.fromUriString(uriTemplate).build()__	};construct,a,new,code,uri,template,with,the,given,uri,string,param,uri,template,the,uri,template,string;public,uri,template,string,uri,template,parser,parser,new,parser,uri,template,this,uri,template,uri,template,this,variable,names,parser,get,variable,names,this,match,pattern,parser,get,match,pattern,this,uri,components,uri,components,builder,from,uri,string,uri,template,build
UriTemplate -> public UriTemplate(String uriTemplate);1367581556;Construct a new {@code UriTemplate} with the given URI String._@param uriTemplate the URI template string;public UriTemplate(String uriTemplate) {_		Parser parser = new Parser(uriTemplate)__		this.uriTemplate = uriTemplate__		this.variableNames = parser.getVariableNames()__		this.matchPattern = parser.getMatchPattern()__		this.uriComponents = UriComponentsBuilder.fromUriString(uriTemplate).build()__	};construct,a,new,code,uri,template,with,the,given,uri,string,param,uri,template,the,uri,template,string;public,uri,template,string,uri,template,parser,parser,new,parser,uri,template,this,uri,template,uri,template,this,variable,names,parser,get,variable,names,this,match,pattern,parser,get,match,pattern,this,uri,components,uri,components,builder,from,uri,string,uri,template,build
UriTemplate -> public UriTemplate(String uriTemplate);1385412762;Construct a new {@code UriTemplate} with the given URI String._@param uriTemplate the URI template string;public UriTemplate(String uriTemplate) {_		Parser parser = new Parser(uriTemplate)__		this.uriTemplate = uriTemplate__		this.variableNames = parser.getVariableNames()__		this.matchPattern = parser.getMatchPattern()__		this.uriComponents = UriComponentsBuilder.fromUriString(uriTemplate).build()__	};construct,a,new,code,uri,template,with,the,given,uri,string,param,uri,template,the,uri,template,string;public,uri,template,string,uri,template,parser,parser,new,parser,uri,template,this,uri,template,uri,template,this,variable,names,parser,get,variable,names,this,match,pattern,parser,get,match,pattern,this,uri,components,uri,components,builder,from,uri,string,uri,template,build
UriTemplate -> public UriTemplate(String uriTemplate);1406840888;Construct a new {@code UriTemplate} with the given URI String._@param uriTemplate the URI template string;public UriTemplate(String uriTemplate) {_		Parser parser = new Parser(uriTemplate)__		this.uriTemplate = uriTemplate__		this.variableNames = parser.getVariableNames()__		this.matchPattern = parser.getMatchPattern()__		this.uriComponents = UriComponentsBuilder.fromUriString(uriTemplate).build()__	};construct,a,new,code,uri,template,with,the,given,uri,string,param,uri,template,the,uri,template,string;public,uri,template,string,uri,template,parser,parser,new,parser,uri,template,this,uri,template,uri,template,this,variable,names,parser,get,variable,names,this,match,pattern,parser,get,match,pattern,this,uri,components,uri,components,builder,from,uri,string,uri,template,build
UriTemplate -> public UriTemplate(String uriTemplate);1409822411;Construct a new {@code UriTemplate} with the given URI String._@param uriTemplate the URI template string;public UriTemplate(String uriTemplate) {_		Parser parser = new Parser(uriTemplate)__		this.uriTemplate = uriTemplate__		this.variableNames = parser.getVariableNames()__		this.matchPattern = parser.getMatchPattern()__		this.uriComponents = UriComponentsBuilder.fromUriString(uriTemplate).build()__	};construct,a,new,code,uri,template,with,the,given,uri,string,param,uri,template,the,uri,template,string;public,uri,template,string,uri,template,parser,parser,new,parser,uri,template,this,uri,template,uri,template,this,variable,names,parser,get,variable,names,this,match,pattern,parser,get,match,pattern,this,uri,components,uri,components,builder,from,uri,string,uri,template,build
UriTemplate -> public UriTemplate(String uriTemplate);1446471766;Construct a new {@code UriTemplate} with the given URI String._@param uriTemplate the URI template string;public UriTemplate(String uriTemplate) {_		Parser parser = new Parser(uriTemplate)__		this.uriTemplate = uriTemplate__		this.variableNames = parser.getVariableNames()__		this.matchPattern = parser.getMatchPattern()__		this.uriComponents = UriComponentsBuilder.fromUriString(uriTemplate).build()__	};construct,a,new,code,uri,template,with,the,given,uri,string,param,uri,template,the,uri,template,string;public,uri,template,string,uri,template,parser,parser,new,parser,uri,template,this,uri,template,uri,template,this,variable,names,parser,get,variable,names,this,match,pattern,parser,get,match,pattern,this,uri,components,uri,components,builder,from,uri,string,uri,template,build
UriTemplate -> public UriTemplate(String uriTemplate);1446734350;Construct a new {@code UriTemplate} with the given URI String._@param uriTemplate the URI template string;public UriTemplate(String uriTemplate) {_		Assert.hasText(uriTemplate, "'uriTemplate' must not be null")__		this.uriTemplate = uriTemplate__		this.uriComponents = UriComponentsBuilder.fromUriString(uriTemplate).build()___		TemplateInfo info = TemplateInfo.parse(uriTemplate)__		this.variableNames = Collections.unmodifiableList(info.getVariableNames())__		this.matchPattern = info.getMatchPattern()__	};construct,a,new,code,uri,template,with,the,given,uri,string,param,uri,template,the,uri,template,string;public,uri,template,string,uri,template,assert,has,text,uri,template,uri,template,must,not,be,null,this,uri,template,uri,template,this,uri,components,uri,components,builder,from,uri,string,uri,template,build,template,info,info,template,info,parse,uri,template,this,variable,names,collections,unmodifiable,list,info,get,variable,names,this,match,pattern,info,get,match,pattern
UriTemplate -> public UriTemplate(String uriTemplate);1448923588;Construct a new {@code UriTemplate} with the given URI String._@param uriTemplate the URI template string;public UriTemplate(String uriTemplate) {_		Assert.hasText(uriTemplate, "'uriTemplate' must not be null")__		this.uriTemplate = uriTemplate__		this.uriComponents = UriComponentsBuilder.fromUriString(uriTemplate).build()___		TemplateInfo info = TemplateInfo.parse(uriTemplate)__		this.variableNames = Collections.unmodifiableList(info.getVariableNames())__		this.matchPattern = info.getMatchPattern()__	};construct,a,new,code,uri,template,with,the,given,uri,string,param,uri,template,the,uri,template,string;public,uri,template,string,uri,template,assert,has,text,uri,template,uri,template,must,not,be,null,this,uri,template,uri,template,this,uri,components,uri,components,builder,from,uri,string,uri,template,build,template,info,info,template,info,parse,uri,template,this,variable,names,collections,unmodifiable,list,info,get,variable,names,this,match,pattern,info,get,match,pattern
UriTemplate -> public UriTemplate(String uriTemplate);1460441863;Construct a new {@code UriTemplate} with the given URI String._@param uriTemplate the URI template string;public UriTemplate(String uriTemplate) {_		Assert.hasText(uriTemplate, "'uriTemplate' must not be null")__		this.uriTemplate = uriTemplate__		this.uriComponents = UriComponentsBuilder.fromUriString(uriTemplate).build()___		TemplateInfo info = TemplateInfo.parse(uriTemplate)__		this.variableNames = Collections.unmodifiableList(info.getVariableNames())__		this.matchPattern = info.getMatchPattern()__	};construct,a,new,code,uri,template,with,the,given,uri,string,param,uri,template,the,uri,template,string;public,uri,template,string,uri,template,assert,has,text,uri,template,uri,template,must,not,be,null,this,uri,template,uri,template,this,uri,components,uri,components,builder,from,uri,string,uri,template,build,template,info,info,template,info,parse,uri,template,this,variable,names,collections,unmodifiable,list,info,get,variable,names,this,match,pattern,info,get,match,pattern
UriTemplate -> public UriTemplate(String uriTemplate);1467730834;Construct a new {@code UriTemplate} with the given URI String._@param uriTemplate the URI template string;public UriTemplate(String uriTemplate) {_		Assert.hasText(uriTemplate, "'uriTemplate' must not be null")__		this.uriTemplate = uriTemplate__		this.uriComponents = UriComponentsBuilder.fromUriString(uriTemplate).build()___		TemplateInfo info = TemplateInfo.parse(uriTemplate)__		this.variableNames = Collections.unmodifiableList(info.getVariableNames())__		this.matchPattern = info.getMatchPattern()__	};construct,a,new,code,uri,template,with,the,given,uri,string,param,uri,template,the,uri,template,string;public,uri,template,string,uri,template,assert,has,text,uri,template,uri,template,must,not,be,null,this,uri,template,uri,template,this,uri,components,uri,components,builder,from,uri,string,uri,template,build,template,info,info,template,info,parse,uri,template,this,variable,names,collections,unmodifiable,list,info,get,variable,names,this,match,pattern,info,get,match,pattern
UriTemplate -> public UriTemplate(String uriTemplate);1479746164;Construct a new {@code UriTemplate} with the given URI String._@param uriTemplate the URI template string;public UriTemplate(String uriTemplate) {_		Assert.hasText(uriTemplate, "'uriTemplate' must not be null")__		this.uriTemplate = uriTemplate__		this.uriComponents = UriComponentsBuilder.fromUriString(uriTemplate).build()___		TemplateInfo info = TemplateInfo.parse(uriTemplate)__		this.variableNames = Collections.unmodifiableList(info.getVariableNames())__		this.matchPattern = info.getMatchPattern()__	};construct,a,new,code,uri,template,with,the,given,uri,string,param,uri,template,the,uri,template,string;public,uri,template,string,uri,template,assert,has,text,uri,template,uri,template,must,not,be,null,this,uri,template,uri,template,this,uri,components,uri,components,builder,from,uri,string,uri,template,build,template,info,info,template,info,parse,uri,template,this,variable,names,collections,unmodifiable,list,info,get,variable,names,this,match,pattern,info,get,match,pattern
UriTemplate -> public UriTemplate(String uriTemplate);1479823020;Construct a new {@code UriTemplate} with the given URI String._@param uriTemplate the URI template string;public UriTemplate(String uriTemplate) {_		Assert.hasText(uriTemplate, "'uriTemplate' must not be null")__		this.uriTemplate = uriTemplate__		this.uriComponents = UriComponentsBuilder.fromUriString(uriTemplate).build()___		TemplateInfo info = TemplateInfo.parse(uriTemplate)__		this.variableNames = Collections.unmodifiableList(info.getVariableNames())__		this.matchPattern = info.getMatchPattern()__	};construct,a,new,code,uri,template,with,the,given,uri,string,param,uri,template,the,uri,template,string;public,uri,template,string,uri,template,assert,has,text,uri,template,uri,template,must,not,be,null,this,uri,template,uri,template,this,uri,components,uri,components,builder,from,uri,string,uri,template,build,template,info,info,template,info,parse,uri,template,this,variable,names,collections,unmodifiable,list,info,get,variable,names,this,match,pattern,info,get,match,pattern
UriTemplate -> public UriTemplate(String uriTemplate);1490644160;Construct a new {@code UriTemplate} with the given URI String._@param uriTemplate the URI template string;public UriTemplate(String uriTemplate) {_		Assert.hasText(uriTemplate, "'uriTemplate' must not be null")__		this.uriTemplate = uriTemplate__		this.uriComponents = UriComponentsBuilder.fromUriString(uriTemplate).build()___		TemplateInfo info = TemplateInfo.parse(uriTemplate)__		this.variableNames = Collections.unmodifiableList(info.getVariableNames())__		this.matchPattern = info.getMatchPattern()__	};construct,a,new,code,uri,template,with,the,given,uri,string,param,uri,template,the,uri,template,string;public,uri,template,string,uri,template,assert,has,text,uri,template,uri,template,must,not,be,null,this,uri,template,uri,template,this,uri,components,uri,components,builder,from,uri,string,uri,template,build,template,info,info,template,info,parse,uri,template,this,variable,names,collections,unmodifiable,list,info,get,variable,names,this,match,pattern,info,get,match,pattern
UriTemplate -> public UriTemplate(String uriTemplate);1496837955;Construct a new {@code UriTemplate} with the given URI String._@param uriTemplate the URI template string;public UriTemplate(String uriTemplate) {_		Assert.hasText(uriTemplate, "'uriTemplate' must not be null")__		this.uriTemplate = uriTemplate__		this.uriComponents = UriComponentsBuilder.fromUriString(uriTemplate).build()___		TemplateInfo info = TemplateInfo.parse(uriTemplate)__		this.variableNames = Collections.unmodifiableList(info.getVariableNames())__		this.matchPattern = info.getMatchPattern()__	};construct,a,new,code,uri,template,with,the,given,uri,string,param,uri,template,the,uri,template,string;public,uri,template,string,uri,template,assert,has,text,uri,template,uri,template,must,not,be,null,this,uri,template,uri,template,this,uri,components,uri,components,builder,from,uri,string,uri,template,build,template,info,info,template,info,parse,uri,template,this,variable,names,collections,unmodifiable,list,info,get,variable,names,this,match,pattern,info,get,match,pattern
UriTemplate -> public UriTemplate(String uriTemplate);1510341623;Construct a new {@code UriTemplate} with the given URI String._@param uriTemplate the URI template string;public UriTemplate(String uriTemplate) {_		Assert.hasText(uriTemplate, "'uriTemplate' must not be null")__		this.uriTemplate = uriTemplate__		this.uriComponents = UriComponentsBuilder.fromUriString(uriTemplate).build()___		TemplateInfo info = TemplateInfo.parse(uriTemplate)__		this.variableNames = Collections.unmodifiableList(info.getVariableNames())__		this.matchPattern = info.getMatchPattern()__	};construct,a,new,code,uri,template,with,the,given,uri,string,param,uri,template,the,uri,template,string;public,uri,template,string,uri,template,assert,has,text,uri,template,uri,template,must,not,be,null,this,uri,template,uri,template,this,uri,components,uri,components,builder,from,uri,string,uri,template,build,template,info,info,template,info,parse,uri,template,this,variable,names,collections,unmodifiable,list,info,get,variable,names,this,match,pattern,info,get,match,pattern
UriTemplate -> public UriTemplate(String uriTemplate);1515706595;Construct a new {@code UriTemplate} with the given URI String._@param uriTemplate the URI template string;public UriTemplate(String uriTemplate) {_		Assert.hasText(uriTemplate, "'uriTemplate' must not be null")__		this.uriTemplate = uriTemplate__		this.uriComponents = UriComponentsBuilder.fromUriString(uriTemplate).build()___		TemplateInfo info = TemplateInfo.parse(uriTemplate)__		this.variableNames = Collections.unmodifiableList(info.getVariableNames())__		this.matchPattern = info.getMatchPattern()__	};construct,a,new,code,uri,template,with,the,given,uri,string,param,uri,template,the,uri,template,string;public,uri,template,string,uri,template,assert,has,text,uri,template,uri,template,must,not,be,null,this,uri,template,uri,template,this,uri,components,uri,components,builder,from,uri,string,uri,template,build,template,info,info,template,info,parse,uri,template,this,variable,names,collections,unmodifiable,list,info,get,variable,names,this,match,pattern,info,get,match,pattern
UriTemplate -> public UriTemplate(String uriTemplate);1530174524;Construct a new {@code UriTemplate} with the given URI String._@param uriTemplate the URI template string;public UriTemplate(String uriTemplate) {_		Assert.hasText(uriTemplate, "'uriTemplate' must not be null")__		this.uriTemplate = uriTemplate__		this.uriComponents = UriComponentsBuilder.fromUriString(uriTemplate).build()___		TemplateInfo info = TemplateInfo.parse(uriTemplate)__		this.variableNames = Collections.unmodifiableList(info.getVariableNames())__		this.matchPattern = info.getMatchPattern()__	};construct,a,new,code,uri,template,with,the,given,uri,string,param,uri,template,the,uri,template,string;public,uri,template,string,uri,template,assert,has,text,uri,template,uri,template,must,not,be,null,this,uri,template,uri,template,this,uri,components,uri,components,builder,from,uri,string,uri,template,build,template,info,info,template,info,parse,uri,template,this,variable,names,collections,unmodifiable,list,info,get,variable,names,this,match,pattern,info,get,match,pattern
UriTemplate -> public UriTemplate(String uriTemplate);1530174524;Construct a new {@code UriTemplate} with the given URI String._@param uriTemplate the URI template string;public UriTemplate(String uriTemplate) {_		Assert.hasText(uriTemplate, "'uriTemplate' must not be null")__		this.uriTemplate = uriTemplate__		this.uriComponents = UriComponentsBuilder.fromUriString(uriTemplate).build()___		TemplateInfo info = TemplateInfo.parse(uriTemplate)__		this.variableNames = Collections.unmodifiableList(info.getVariableNames())__		this.matchPattern = info.getMatchPattern()__	};construct,a,new,code,uri,template,with,the,given,uri,string,param,uri,template,the,uri,template,string;public,uri,template,string,uri,template,assert,has,text,uri,template,uri,template,must,not,be,null,this,uri,template,uri,template,this,uri,components,uri,components,builder,from,uri,string,uri,template,build,template,info,info,template,info,parse,uri,template,this,variable,names,collections,unmodifiable,list,info,get,variable,names,this,match,pattern,info,get,match,pattern
UriTemplate -> public List<String> getVariableNames();1328020251;Return the names of the variables in the template, in order._@return the template variable names;public List<String> getVariableNames() {_		return this.variableNames__	};return,the,names,of,the,variables,in,the,template,in,order,return,the,template,variable,names;public,list,string,get,variable,names,return,this,variable,names
UriTemplate -> public List<String> getVariableNames();1356735495;Return the names of the variables in the template, in order._@return the template variable names;public List<String> getVariableNames() {_		return this.variableNames__	};return,the,names,of,the,variables,in,the,template,in,order,return,the,template,variable,names;public,list,string,get,variable,names,return,this,variable,names
UriTemplate -> public List<String> getVariableNames();1362408075;Return the names of the variables in the template, in order._@return the template variable names;public List<String> getVariableNames() {_		return this.variableNames__	};return,the,names,of,the,variables,in,the,template,in,order,return,the,template,variable,names;public,list,string,get,variable,names,return,this,variable,names
UriTemplate -> public List<String> getVariableNames();1367578939;Return the names of the variables in the template, in order._@return the template variable names;public List<String> getVariableNames() {_		return this.variableNames__	};return,the,names,of,the,variables,in,the,template,in,order,return,the,template,variable,names;public,list,string,get,variable,names,return,this,variable,names
UriTemplate -> public List<String> getVariableNames();1367581556;Return the names of the variables in the template, in order._@return the template variable names;public List<String> getVariableNames() {_		return this.variableNames__	};return,the,names,of,the,variables,in,the,template,in,order,return,the,template,variable,names;public,list,string,get,variable,names,return,this,variable,names
UriTemplate -> public List<String> getVariableNames();1385412762;Return the names of the variables in the template, in order._@return the template variable names;public List<String> getVariableNames() {_		return this.variableNames__	};return,the,names,of,the,variables,in,the,template,in,order,return,the,template,variable,names;public,list,string,get,variable,names,return,this,variable,names
UriTemplate -> public List<String> getVariableNames();1406840888;Return the names of the variables in the template, in order._@return the template variable names;public List<String> getVariableNames() {_		return this.variableNames__	};return,the,names,of,the,variables,in,the,template,in,order,return,the,template,variable,names;public,list,string,get,variable,names,return,this,variable,names
UriTemplate -> public List<String> getVariableNames();1409822411;Return the names of the variables in the template, in order._@return the template variable names;public List<String> getVariableNames() {_		return this.variableNames__	};return,the,names,of,the,variables,in,the,template,in,order,return,the,template,variable,names;public,list,string,get,variable,names,return,this,variable,names
UriTemplate -> public List<String> getVariableNames();1446471766;Return the names of the variables in the template, in order._@return the template variable names;public List<String> getVariableNames() {_		return this.variableNames__	};return,the,names,of,the,variables,in,the,template,in,order,return,the,template,variable,names;public,list,string,get,variable,names,return,this,variable,names
UriTemplate -> public List<String> getVariableNames();1446734350;Return the names of the variables in the template, in order._@return the template variable names;public List<String> getVariableNames() {_		return this.variableNames__	};return,the,names,of,the,variables,in,the,template,in,order,return,the,template,variable,names;public,list,string,get,variable,names,return,this,variable,names
UriTemplate -> public List<String> getVariableNames();1448923588;Return the names of the variables in the template, in order._@return the template variable names;public List<String> getVariableNames() {_		return this.variableNames__	};return,the,names,of,the,variables,in,the,template,in,order,return,the,template,variable,names;public,list,string,get,variable,names,return,this,variable,names
UriTemplate -> public List<String> getVariableNames();1460441863;Return the names of the variables in the template, in order._@return the template variable names;public List<String> getVariableNames() {_		return this.variableNames__	};return,the,names,of,the,variables,in,the,template,in,order,return,the,template,variable,names;public,list,string,get,variable,names,return,this,variable,names
UriTemplate -> public List<String> getVariableNames();1467730834;Return the names of the variables in the template, in order._@return the template variable names;public List<String> getVariableNames() {_		return this.variableNames__	};return,the,names,of,the,variables,in,the,template,in,order,return,the,template,variable,names;public,list,string,get,variable,names,return,this,variable,names
UriTemplate -> public List<String> getVariableNames();1479746164;Return the names of the variables in the template, in order._@return the template variable names;public List<String> getVariableNames() {_		return this.variableNames__	};return,the,names,of,the,variables,in,the,template,in,order,return,the,template,variable,names;public,list,string,get,variable,names,return,this,variable,names
UriTemplate -> public List<String> getVariableNames();1479823020;Return the names of the variables in the template, in order._@return the template variable names;public List<String> getVariableNames() {_		return this.variableNames__	};return,the,names,of,the,variables,in,the,template,in,order,return,the,template,variable,names;public,list,string,get,variable,names,return,this,variable,names
UriTemplate -> public List<String> getVariableNames();1490644160;Return the names of the variables in the template, in order._@return the template variable names;public List<String> getVariableNames() {_		return this.variableNames__	};return,the,names,of,the,variables,in,the,template,in,order,return,the,template,variable,names;public,list,string,get,variable,names,return,this,variable,names
UriTemplate -> public List<String> getVariableNames();1496837955;Return the names of the variables in the template, in order._@return the template variable names;public List<String> getVariableNames() {_		return this.variableNames__	};return,the,names,of,the,variables,in,the,template,in,order,return,the,template,variable,names;public,list,string,get,variable,names,return,this,variable,names
UriTemplate -> public List<String> getVariableNames();1510341623;Return the names of the variables in the template, in order._@return the template variable names;public List<String> getVariableNames() {_		return this.variableNames__	};return,the,names,of,the,variables,in,the,template,in,order,return,the,template,variable,names;public,list,string,get,variable,names,return,this,variable,names
UriTemplate -> public List<String> getVariableNames();1515706595;Return the names of the variables in the template, in order._@return the template variable names;public List<String> getVariableNames() {_		return this.variableNames__	};return,the,names,of,the,variables,in,the,template,in,order,return,the,template,variable,names;public,list,string,get,variable,names,return,this,variable,names
UriTemplate -> public List<String> getVariableNames();1530174524;Return the names of the variables in the template, in order._@return the template variable names;public List<String> getVariableNames() {_		return this.variableNames__	};return,the,names,of,the,variables,in,the,template,in,order,return,the,template,variable,names;public,list,string,get,variable,names,return,this,variable,names
UriTemplate -> public List<String> getVariableNames();1530174524;Return the names of the variables in the template, in order._@return the template variable names;public List<String> getVariableNames() {_		return this.variableNames__	};return,the,names,of,the,variables,in,the,template,in,order,return,the,template,variable,names;public,list,string,get,variable,names,return,this,variable,names
UriTemplate -> public boolean matches(@Nullable String uri);1496837955;Indicate whether the given URI matches this template._@param uri the URI to match to_@return {@code true} if it matches_ {@code false} otherwise;public boolean matches(@Nullable String uri) {_		if (uri == null) {_			return false__		}_		Matcher matcher = this.matchPattern.matcher(uri)__		return matcher.matches()__	};indicate,whether,the,given,uri,matches,this,template,param,uri,the,uri,to,match,to,return,code,true,if,it,matches,code,false,otherwise;public,boolean,matches,nullable,string,uri,if,uri,null,return,false,matcher,matcher,this,match,pattern,matcher,uri,return,matcher,matches
UriTemplate -> public boolean matches(@Nullable String uri);1510341623;Indicate whether the given URI matches this template._@param uri the URI to match to_@return {@code true} if it matches_ {@code false} otherwise;public boolean matches(@Nullable String uri) {_		if (uri == null) {_			return false__		}_		Matcher matcher = this.matchPattern.matcher(uri)__		return matcher.matches()__	};indicate,whether,the,given,uri,matches,this,template,param,uri,the,uri,to,match,to,return,code,true,if,it,matches,code,false,otherwise;public,boolean,matches,nullable,string,uri,if,uri,null,return,false,matcher,matcher,this,match,pattern,matcher,uri,return,matcher,matches
UriTemplate -> public boolean matches(@Nullable String uri);1515706595;Indicate whether the given URI matches this template._@param uri the URI to match to_@return {@code true} if it matches_ {@code false} otherwise;public boolean matches(@Nullable String uri) {_		if (uri == null) {_			return false__		}_		Matcher matcher = this.matchPattern.matcher(uri)__		return matcher.matches()__	};indicate,whether,the,given,uri,matches,this,template,param,uri,the,uri,to,match,to,return,code,true,if,it,matches,code,false,otherwise;public,boolean,matches,nullable,string,uri,if,uri,null,return,false,matcher,matcher,this,match,pattern,matcher,uri,return,matcher,matches
UriTemplate -> public boolean matches(@Nullable String uri);1530174524;Indicate whether the given URI matches this template._@param uri the URI to match to_@return {@code true} if it matches_ {@code false} otherwise;public boolean matches(@Nullable String uri) {_		if (uri == null) {_			return false__		}_		Matcher matcher = this.matchPattern.matcher(uri)__		return matcher.matches()__	};indicate,whether,the,given,uri,matches,this,template,param,uri,the,uri,to,match,to,return,code,true,if,it,matches,code,false,otherwise;public,boolean,matches,nullable,string,uri,if,uri,null,return,false,matcher,matcher,this,match,pattern,matcher,uri,return,matcher,matches
UriTemplate -> public boolean matches(@Nullable String uri);1530174524;Indicate whether the given URI matches this template._@param uri the URI to match to_@return {@code true} if it matches_ {@code false} otherwise;public boolean matches(@Nullable String uri) {_		if (uri == null) {_			return false__		}_		Matcher matcher = this.matchPattern.matcher(uri)__		return matcher.matches()__	};indicate,whether,the,given,uri,matches,this,template,param,uri,the,uri,to,match,to,return,code,true,if,it,matches,code,false,otherwise;public,boolean,matches,nullable,string,uri,if,uri,null,return,false,matcher,matcher,this,match,pattern,matcher,uri,return,matcher,matches
UriTemplate -> public boolean matches(String uri);1328020251;Indicate whether the given URI matches this template._@param uri the URI to match to_@return <code>true</code> if it matches_ <code>false</code> otherwise;public boolean matches(String uri) {_		if (uri == null) {_			return false__		}_		Matcher matcher = this.matchPattern.matcher(uri)__		return matcher.matches()__	};indicate,whether,the,given,uri,matches,this,template,param,uri,the,uri,to,match,to,return,code,true,code,if,it,matches,code,false,code,otherwise;public,boolean,matches,string,uri,if,uri,null,return,false,matcher,matcher,this,match,pattern,matcher,uri,return,matcher,matches
UriTemplate -> public boolean matches(String uri);1356735495;Indicate whether the given URI matches this template._@param uri the URI to match to_@return {@code true} if it matches_ {@code false} otherwise;public boolean matches(String uri) {_		if (uri == null) {_			return false__		}_		Matcher matcher = this.matchPattern.matcher(uri)__		return matcher.matches()__	};indicate,whether,the,given,uri,matches,this,template,param,uri,the,uri,to,match,to,return,code,true,if,it,matches,code,false,otherwise;public,boolean,matches,string,uri,if,uri,null,return,false,matcher,matcher,this,match,pattern,matcher,uri,return,matcher,matches
UriTemplate -> public boolean matches(String uri);1362408075;Indicate whether the given URI matches this template._@param uri the URI to match to_@return {@code true} if it matches_ {@code false} otherwise;public boolean matches(String uri) {_		if (uri == null) {_			return false__		}_		Matcher matcher = this.matchPattern.matcher(uri)__		return matcher.matches()__	};indicate,whether,the,given,uri,matches,this,template,param,uri,the,uri,to,match,to,return,code,true,if,it,matches,code,false,otherwise;public,boolean,matches,string,uri,if,uri,null,return,false,matcher,matcher,this,match,pattern,matcher,uri,return,matcher,matches
UriTemplate -> public boolean matches(String uri);1367578939;Indicate whether the given URI matches this template._@param uri the URI to match to_@return {@code true} if it matches_ {@code false} otherwise;public boolean matches(String uri) {_		if (uri == null) {_			return false__		}_		Matcher matcher = this.matchPattern.matcher(uri)__		return matcher.matches()__	};indicate,whether,the,given,uri,matches,this,template,param,uri,the,uri,to,match,to,return,code,true,if,it,matches,code,false,otherwise;public,boolean,matches,string,uri,if,uri,null,return,false,matcher,matcher,this,match,pattern,matcher,uri,return,matcher,matches
UriTemplate -> public boolean matches(String uri);1367581556;Indicate whether the given URI matches this template._@param uri the URI to match to_@return {@code true} if it matches_ {@code false} otherwise;public boolean matches(String uri) {_		if (uri == null) {_			return false__		}_		Matcher matcher = this.matchPattern.matcher(uri)__		return matcher.matches()__	};indicate,whether,the,given,uri,matches,this,template,param,uri,the,uri,to,match,to,return,code,true,if,it,matches,code,false,otherwise;public,boolean,matches,string,uri,if,uri,null,return,false,matcher,matcher,this,match,pattern,matcher,uri,return,matcher,matches
UriTemplate -> public boolean matches(String uri);1385412762;Indicate whether the given URI matches this template._@param uri the URI to match to_@return {@code true} if it matches_ {@code false} otherwise;public boolean matches(String uri) {_		if (uri == null) {_			return false__		}_		Matcher matcher = this.matchPattern.matcher(uri)__		return matcher.matches()__	};indicate,whether,the,given,uri,matches,this,template,param,uri,the,uri,to,match,to,return,code,true,if,it,matches,code,false,otherwise;public,boolean,matches,string,uri,if,uri,null,return,false,matcher,matcher,this,match,pattern,matcher,uri,return,matcher,matches
UriTemplate -> public boolean matches(String uri);1406840888;Indicate whether the given URI matches this template._@param uri the URI to match to_@return {@code true} if it matches_ {@code false} otherwise;public boolean matches(String uri) {_		if (uri == null) {_			return false__		}_		Matcher matcher = this.matchPattern.matcher(uri)__		return matcher.matches()__	};indicate,whether,the,given,uri,matches,this,template,param,uri,the,uri,to,match,to,return,code,true,if,it,matches,code,false,otherwise;public,boolean,matches,string,uri,if,uri,null,return,false,matcher,matcher,this,match,pattern,matcher,uri,return,matcher,matches
UriTemplate -> public boolean matches(String uri);1409822411;Indicate whether the given URI matches this template._@param uri the URI to match to_@return {@code true} if it matches_ {@code false} otherwise;public boolean matches(String uri) {_		if (uri == null) {_			return false__		}_		Matcher matcher = this.matchPattern.matcher(uri)__		return matcher.matches()__	};indicate,whether,the,given,uri,matches,this,template,param,uri,the,uri,to,match,to,return,code,true,if,it,matches,code,false,otherwise;public,boolean,matches,string,uri,if,uri,null,return,false,matcher,matcher,this,match,pattern,matcher,uri,return,matcher,matches
UriTemplate -> public boolean matches(String uri);1446471766;Indicate whether the given URI matches this template._@param uri the URI to match to_@return {@code true} if it matches_ {@code false} otherwise;public boolean matches(String uri) {_		if (uri == null) {_			return false__		}_		Matcher matcher = this.matchPattern.matcher(uri)__		return matcher.matches()__	};indicate,whether,the,given,uri,matches,this,template,param,uri,the,uri,to,match,to,return,code,true,if,it,matches,code,false,otherwise;public,boolean,matches,string,uri,if,uri,null,return,false,matcher,matcher,this,match,pattern,matcher,uri,return,matcher,matches
UriTemplate -> public boolean matches(String uri);1446734350;Indicate whether the given URI matches this template._@param uri the URI to match to_@return {@code true} if it matches_ {@code false} otherwise;public boolean matches(String uri) {_		if (uri == null) {_			return false__		}_		Matcher matcher = this.matchPattern.matcher(uri)__		return matcher.matches()__	};indicate,whether,the,given,uri,matches,this,template,param,uri,the,uri,to,match,to,return,code,true,if,it,matches,code,false,otherwise;public,boolean,matches,string,uri,if,uri,null,return,false,matcher,matcher,this,match,pattern,matcher,uri,return,matcher,matches
UriTemplate -> public boolean matches(String uri);1448923588;Indicate whether the given URI matches this template._@param uri the URI to match to_@return {@code true} if it matches_ {@code false} otherwise;public boolean matches(String uri) {_		if (uri == null) {_			return false__		}_		Matcher matcher = this.matchPattern.matcher(uri)__		return matcher.matches()__	};indicate,whether,the,given,uri,matches,this,template,param,uri,the,uri,to,match,to,return,code,true,if,it,matches,code,false,otherwise;public,boolean,matches,string,uri,if,uri,null,return,false,matcher,matcher,this,match,pattern,matcher,uri,return,matcher,matches
UriTemplate -> public boolean matches(String uri);1460441863;Indicate whether the given URI matches this template._@param uri the URI to match to_@return {@code true} if it matches_ {@code false} otherwise;public boolean matches(String uri) {_		if (uri == null) {_			return false__		}_		Matcher matcher = this.matchPattern.matcher(uri)__		return matcher.matches()__	};indicate,whether,the,given,uri,matches,this,template,param,uri,the,uri,to,match,to,return,code,true,if,it,matches,code,false,otherwise;public,boolean,matches,string,uri,if,uri,null,return,false,matcher,matcher,this,match,pattern,matcher,uri,return,matcher,matches
UriTemplate -> public boolean matches(String uri);1467730834;Indicate whether the given URI matches this template._@param uri the URI to match to_@return {@code true} if it matches_ {@code false} otherwise;public boolean matches(String uri) {_		if (uri == null) {_			return false__		}_		Matcher matcher = this.matchPattern.matcher(uri)__		return matcher.matches()__	};indicate,whether,the,given,uri,matches,this,template,param,uri,the,uri,to,match,to,return,code,true,if,it,matches,code,false,otherwise;public,boolean,matches,string,uri,if,uri,null,return,false,matcher,matcher,this,match,pattern,matcher,uri,return,matcher,matches
UriTemplate -> public boolean matches(String uri);1479746164;Indicate whether the given URI matches this template._@param uri the URI to match to_@return {@code true} if it matches_ {@code false} otherwise;public boolean matches(String uri) {_		if (uri == null) {_			return false__		}_		Matcher matcher = this.matchPattern.matcher(uri)__		return matcher.matches()__	};indicate,whether,the,given,uri,matches,this,template,param,uri,the,uri,to,match,to,return,code,true,if,it,matches,code,false,otherwise;public,boolean,matches,string,uri,if,uri,null,return,false,matcher,matcher,this,match,pattern,matcher,uri,return,matcher,matches
UriTemplate -> public boolean matches(String uri);1479823020;Indicate whether the given URI matches this template._@param uri the URI to match to_@return {@code true} if it matches_ {@code false} otherwise;public boolean matches(String uri) {_		if (uri == null) {_			return false__		}_		Matcher matcher = this.matchPattern.matcher(uri)__		return matcher.matches()__	};indicate,whether,the,given,uri,matches,this,template,param,uri,the,uri,to,match,to,return,code,true,if,it,matches,code,false,otherwise;public,boolean,matches,string,uri,if,uri,null,return,false,matcher,matcher,this,match,pattern,matcher,uri,return,matcher,matches
UriTemplate -> public boolean matches(String uri);1490644160;Indicate whether the given URI matches this template._@param uri the URI to match to_@return {@code true} if it matches_ {@code false} otherwise;public boolean matches(String uri) {_		if (uri == null) {_			return false__		}_		Matcher matcher = this.matchPattern.matcher(uri)__		return matcher.matches()__	};indicate,whether,the,given,uri,matches,this,template,param,uri,the,uri,to,match,to,return,code,true,if,it,matches,code,false,otherwise;public,boolean,matches,string,uri,if,uri,null,return,false,matcher,matcher,this,match,pattern,matcher,uri,return,matcher,matches
UriTemplate -> public URI expand(Object... uriVariableValues);1328020251;Given an array of variables, expand this template into a full URI. The array represent variable values._The order of variables is significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.expand("1", "42))__</pre>_will print: <blockquote><code>http://example.com/hotels/1/bookings/42</code></blockquote>_@param uriVariableValues the array of URI variables_@return the expanded URI_@throws IllegalArgumentException if <code>uriVariables</code> is <code>null</code>_or if it does not contain sufficient variables;public URI expand(Object... uriVariableValues) {_        UriComponents expandedComponents = uriComponents.expand(uriVariableValues)__		UriComponents encodedComponents = expandedComponents.encode()__        return encodedComponents.toUri()__	};given,an,array,of,variables,expand,this,template,into,a,full,uri,the,array,represent,variable,values,the,order,of,variables,is,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,expand,1,42,pre,will,print,blockquote,code,http,example,com,hotels,1,bookings,42,code,blockquote,param,uri,variable,values,the,array,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,code,is,code,null,code,or,if,it,does,not,contain,sufficient,variables;public,uri,expand,object,uri,variable,values,uri,components,expanded,components,uri,components,expand,uri,variable,values,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Object... uriVariableValues);1356735495;Given an array of variables, expand this template into a full URI. The array represent variable values._The order of variables is significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.expand("1", "42))__</pre>_will print: <blockquote>{@code http://example.com/hotels/1/bookings/42}</blockquote>_@param uriVariableValues the array of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}_or if it does not contain sufficient variables;public URI expand(Object... uriVariableValues) {_		UriComponents expandedComponents = uriComponents.expand(uriVariableValues)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,an,array,of,variables,expand,this,template,into,a,full,uri,the,array,represent,variable,values,the,order,of,variables,is,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,expand,1,42,pre,will,print,blockquote,code,http,example,com,hotels,1,bookings,42,blockquote,param,uri,variable,values,the,array,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,sufficient,variables;public,uri,expand,object,uri,variable,values,uri,components,expanded,components,uri,components,expand,uri,variable,values,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Object... uriVariableValues);1362408075;Given an array of variables, expand this template into a full URI. The array represent variable values._The order of variables is significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.expand("1", "42))__</pre>_will print: <blockquote>{@code http://example.com/hotels/1/bookings/42}</blockquote>_@param uriVariableValues the array of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}_or if it does not contain sufficient variables;public URI expand(Object... uriVariableValues) {_		UriComponents expandedComponents = uriComponents.expand(uriVariableValues)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,an,array,of,variables,expand,this,template,into,a,full,uri,the,array,represent,variable,values,the,order,of,variables,is,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,expand,1,42,pre,will,print,blockquote,code,http,example,com,hotels,1,bookings,42,blockquote,param,uri,variable,values,the,array,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,sufficient,variables;public,uri,expand,object,uri,variable,values,uri,components,expanded,components,uri,components,expand,uri,variable,values,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Object... uriVariableValues);1367578939;Given an array of variables, expand this template into a full URI. The array represent variable values._The order of variables is significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.expand("1", "42))__</pre>_will print: <blockquote>{@code http://example.com/hotels/1/bookings/42}</blockquote>_@param uriVariableValues the array of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}_or if it does not contain sufficient variables;public URI expand(Object... uriVariableValues) {_		UriComponents expandedComponents = uriComponents.expand(uriVariableValues)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,an,array,of,variables,expand,this,template,into,a,full,uri,the,array,represent,variable,values,the,order,of,variables,is,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,expand,1,42,pre,will,print,blockquote,code,http,example,com,hotels,1,bookings,42,blockquote,param,uri,variable,values,the,array,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,sufficient,variables;public,uri,expand,object,uri,variable,values,uri,components,expanded,components,uri,components,expand,uri,variable,values,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Object... uriVariableValues);1367581556;Given an array of variables, expand this template into a full URI. The array represent variable values._The order of variables is significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.expand("1", "42))__</pre>_will print: <blockquote>{@code http://example.com/hotels/1/bookings/42}</blockquote>_@param uriVariableValues the array of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}_or if it does not contain sufficient variables;public URI expand(Object... uriVariableValues) {_		UriComponents expandedComponents = uriComponents.expand(uriVariableValues)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,an,array,of,variables,expand,this,template,into,a,full,uri,the,array,represent,variable,values,the,order,of,variables,is,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,expand,1,42,pre,will,print,blockquote,code,http,example,com,hotels,1,bookings,42,blockquote,param,uri,variable,values,the,array,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,sufficient,variables;public,uri,expand,object,uri,variable,values,uri,components,expanded,components,uri,components,expand,uri,variable,values,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Object... uriVariableValues);1385412762;Given an array of variables, expand this template into a full URI. The array represent variable values._The order of variables is significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.expand("1", "42))__</pre>_will print: <blockquote>{@code http://example.com/hotels/1/bookings/42}</blockquote>_@param uriVariableValues the array of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}_or if it does not contain sufficient variables;public URI expand(Object... uriVariableValues) {_		UriComponents expandedComponents = uriComponents.expand(uriVariableValues)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,an,array,of,variables,expand,this,template,into,a,full,uri,the,array,represent,variable,values,the,order,of,variables,is,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,expand,1,42,pre,will,print,blockquote,code,http,example,com,hotels,1,bookings,42,blockquote,param,uri,variable,values,the,array,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,sufficient,variables;public,uri,expand,object,uri,variable,values,uri,components,expanded,components,uri,components,expand,uri,variable,values,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Object... uriVariableValues);1406840888;Given an array of variables, expand this template into a full URI. The array represent variable values._The order of variables is significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.expand("Rest & Relax", "42))__</pre>_will print: <blockquote>{@code http://example.com/hotels/Rest%20%26%20Relax/bookings/42}</blockquote>_@param uriVariableValues the array of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}_or if it does not contain sufficient variables;public URI expand(Object... uriVariableValues) {_		UriComponents expandedComponents = uriComponents.expand(uriVariableValues)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,an,array,of,variables,expand,this,template,into,a,full,uri,the,array,represent,variable,values,the,order,of,variables,is,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,expand,rest,relax,42,pre,will,print,blockquote,code,http,example,com,hotels,rest,20,26,20relax,bookings,42,blockquote,param,uri,variable,values,the,array,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,sufficient,variables;public,uri,expand,object,uri,variable,values,uri,components,expanded,components,uri,components,expand,uri,variable,values,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Object... uriVariableValues);1409822411;Given an array of variables, expand this template into a full URI. The array represent variable values._The order of variables is significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.expand("Rest & Relax", "42))__</pre>_will print: <blockquote>{@code http://example.com/hotels/Rest%20%26%20Relax/bookings/42}</blockquote>_@param uriVariableValues the array of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}_or if it does not contain sufficient variables;public URI expand(Object... uriVariableValues) {_		UriComponents expandedComponents = this.uriComponents.expand(uriVariableValues)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,an,array,of,variables,expand,this,template,into,a,full,uri,the,array,represent,variable,values,the,order,of,variables,is,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,expand,rest,relax,42,pre,will,print,blockquote,code,http,example,com,hotels,rest,20,26,20relax,bookings,42,blockquote,param,uri,variable,values,the,array,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,sufficient,variables;public,uri,expand,object,uri,variable,values,uri,components,expanded,components,this,uri,components,expand,uri,variable,values,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Object... uriVariableValues);1446471766;Given an array of variables, expand this template into a full URI. The array represent variable values._The order of variables is significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.expand("Rest & Relax", "42))__</pre>_will print: <blockquote>{@code http://example.com/hotels/Rest%20%26%20Relax/bookings/42}</blockquote>_@param uriVariableValues the array of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}_or if it does not contain sufficient variables;public URI expand(Object... uriVariableValues) {_		UriComponents expandedComponents = this.uriComponents.expand(uriVariableValues)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,an,array,of,variables,expand,this,template,into,a,full,uri,the,array,represent,variable,values,the,order,of,variables,is,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,expand,rest,relax,42,pre,will,print,blockquote,code,http,example,com,hotels,rest,20,26,20relax,bookings,42,blockquote,param,uri,variable,values,the,array,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,sufficient,variables;public,uri,expand,object,uri,variable,values,uri,components,expanded,components,this,uri,components,expand,uri,variable,values,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Object... uriVariableValues);1446734350;Given an array of variables, expand this template into a full URI. The array represent variable values._The order of variables is significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.expand("Rest & Relax", "42))__</pre>_will print: <blockquote>{@code http://example.com/hotels/Rest%20%26%20Relax/bookings/42}</blockquote>_@param uriVariableValues the array of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}_or if it does not contain sufficient variables;public URI expand(Object... uriVariableValues) {_		UriComponents expandedComponents = this.uriComponents.expand(uriVariableValues)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,an,array,of,variables,expand,this,template,into,a,full,uri,the,array,represent,variable,values,the,order,of,variables,is,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,expand,rest,relax,42,pre,will,print,blockquote,code,http,example,com,hotels,rest,20,26,20relax,bookings,42,blockquote,param,uri,variable,values,the,array,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,sufficient,variables;public,uri,expand,object,uri,variable,values,uri,components,expanded,components,this,uri,components,expand,uri,variable,values,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Object... uriVariableValues);1448923588;Given an array of variables, expand this template into a full URI. The array represent variable values._The order of variables is significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.expand("Rest & Relax", "42))__</pre>_will print: <blockquote>{@code http://example.com/hotels/Rest%20%26%20Relax/bookings/42}</blockquote>_@param uriVariableValues the array of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}_or if it does not contain sufficient variables;public URI expand(Object... uriVariableValues) {_		UriComponents expandedComponents = this.uriComponents.expand(uriVariableValues)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,an,array,of,variables,expand,this,template,into,a,full,uri,the,array,represent,variable,values,the,order,of,variables,is,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,expand,rest,relax,42,pre,will,print,blockquote,code,http,example,com,hotels,rest,20,26,20relax,bookings,42,blockquote,param,uri,variable,values,the,array,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,sufficient,variables;public,uri,expand,object,uri,variable,values,uri,components,expanded,components,this,uri,components,expand,uri,variable,values,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Object... uriVariableValues);1460441863;Given an array of variables, expand this template into a full URI. The array represent variable values._The order of variables is significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.expand("Rest & Relax", 42))__</pre>_will print: <blockquote>{@code http://example.com/hotels/Rest%20%26%20Relax/bookings/42}</blockquote>_@param uriVariableValues the array of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}_or if it does not contain sufficient variables;public URI expand(Object... uriVariableValues) {_		UriComponents expandedComponents = this.uriComponents.expand(uriVariableValues)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,an,array,of,variables,expand,this,template,into,a,full,uri,the,array,represent,variable,values,the,order,of,variables,is,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,expand,rest,relax,42,pre,will,print,blockquote,code,http,example,com,hotels,rest,20,26,20relax,bookings,42,blockquote,param,uri,variable,values,the,array,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,sufficient,variables;public,uri,expand,object,uri,variable,values,uri,components,expanded,components,this,uri,components,expand,uri,variable,values,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Object... uriVariableValues);1467730834;Given an array of variables, expand this template into a full URI. The array represent variable values._The order of variables is significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.expand("Rest & Relax", 42))__</pre>_will print: <blockquote>{@code http://example.com/hotels/Rest%20%26%20Relax/bookings/42}</blockquote>_@param uriVariableValues the array of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}_or if it does not contain sufficient variables;public URI expand(Object... uriVariableValues) {_		UriComponents expandedComponents = this.uriComponents.expand(uriVariableValues)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,an,array,of,variables,expand,this,template,into,a,full,uri,the,array,represent,variable,values,the,order,of,variables,is,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,expand,rest,relax,42,pre,will,print,blockquote,code,http,example,com,hotels,rest,20,26,20relax,bookings,42,blockquote,param,uri,variable,values,the,array,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,sufficient,variables;public,uri,expand,object,uri,variable,values,uri,components,expanded,components,this,uri,components,expand,uri,variable,values,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Object... uriVariableValues);1479746164;Given an array of variables, expand this template into a full URI. The array represent variable values._The order of variables is significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.expand("Rest & Relax", 42))__</pre>_will print: <blockquote>{@code http://example.com/hotels/Rest%20%26%20Relax/bookings/42}</blockquote>_@param uriVariableValues the array of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}_or if it does not contain sufficient variables;public URI expand(Object... uriVariableValues) {_		UriComponents expandedComponents = this.uriComponents.expand(uriVariableValues)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,an,array,of,variables,expand,this,template,into,a,full,uri,the,array,represent,variable,values,the,order,of,variables,is,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,expand,rest,relax,42,pre,will,print,blockquote,code,http,example,com,hotels,rest,20,26,20relax,bookings,42,blockquote,param,uri,variable,values,the,array,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,sufficient,variables;public,uri,expand,object,uri,variable,values,uri,components,expanded,components,this,uri,components,expand,uri,variable,values,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Object... uriVariableValues);1479823020;Given an array of variables, expand this template into a full URI. The array represent variable values._The order of variables is significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.expand("Rest & Relax", 42))__</pre>_will print: <blockquote>{@code http://example.com/hotels/Rest%20%26%20Relax/bookings/42}</blockquote>_@param uriVariableValues the array of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}_or if it does not contain sufficient variables;public URI expand(Object... uriVariableValues) {_		UriComponents expandedComponents = this.uriComponents.expand(uriVariableValues)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,an,array,of,variables,expand,this,template,into,a,full,uri,the,array,represent,variable,values,the,order,of,variables,is,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,expand,rest,relax,42,pre,will,print,blockquote,code,http,example,com,hotels,rest,20,26,20relax,bookings,42,blockquote,param,uri,variable,values,the,array,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,sufficient,variables;public,uri,expand,object,uri,variable,values,uri,components,expanded,components,this,uri,components,expand,uri,variable,values,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Object... uriVariableValues);1490644160;Given an array of variables, expand this template into a full URI. The array represent variable values._The order of variables is significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.expand("Rest & Relax", 42))__</pre>_will print: <blockquote>{@code http://example.com/hotels/Rest%20%26%20Relax/bookings/42}</blockquote>_@param uriVariableValues the array of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}_or if it does not contain sufficient variables;public URI expand(Object... uriVariableValues) {_		UriComponents expandedComponents = this.uriComponents.expand(uriVariableValues)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,an,array,of,variables,expand,this,template,into,a,full,uri,the,array,represent,variable,values,the,order,of,variables,is,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,expand,rest,relax,42,pre,will,print,blockquote,code,http,example,com,hotels,rest,20,26,20relax,bookings,42,blockquote,param,uri,variable,values,the,array,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,sufficient,variables;public,uri,expand,object,uri,variable,values,uri,components,expanded,components,this,uri,components,expand,uri,variable,values,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Object... uriVariableValues);1496837955;Given an array of variables, expand this template into a full URI. The array represent variable values._The order of variables is significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.expand("Rest & Relax", 42))__</pre>_will print: <blockquote>{@code http://example.com/hotels/Rest%20%26%20Relax/bookings/42}</blockquote>_@param uriVariableValues the array of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}_or if it does not contain sufficient variables;public URI expand(Object... uriVariableValues) {_		UriComponents expandedComponents = this.uriComponents.expand(uriVariableValues)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,an,array,of,variables,expand,this,template,into,a,full,uri,the,array,represent,variable,values,the,order,of,variables,is,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,expand,rest,relax,42,pre,will,print,blockquote,code,http,example,com,hotels,rest,20,26,20relax,bookings,42,blockquote,param,uri,variable,values,the,array,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,sufficient,variables;public,uri,expand,object,uri,variable,values,uri,components,expanded,components,this,uri,components,expand,uri,variable,values,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Object... uriVariableValues);1510341623;Given an array of variables, expand this template into a full URI. The array represent variable values._The order of variables is significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.expand("Rest & Relax", 42))__</pre>_will print: <blockquote>{@code http://example.com/hotels/Rest%20%26%20Relax/bookings/42}</blockquote>_@param uriVariableValues the array of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}_or if it does not contain sufficient variables;public URI expand(Object... uriVariableValues) {_		UriComponents expandedComponents = this.uriComponents.expand(uriVariableValues)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,an,array,of,variables,expand,this,template,into,a,full,uri,the,array,represent,variable,values,the,order,of,variables,is,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,expand,rest,relax,42,pre,will,print,blockquote,code,http,example,com,hotels,rest,20,26,20relax,bookings,42,blockquote,param,uri,variable,values,the,array,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,sufficient,variables;public,uri,expand,object,uri,variable,values,uri,components,expanded,components,this,uri,components,expand,uri,variable,values,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Object... uriVariableValues);1515706595;Given an array of variables, expand this template into a full URI. The array represent variable values._The order of variables is significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.expand("Rest & Relax", 42))__</pre>_will print: <blockquote>{@code http://example.com/hotels/Rest%20%26%20Relax/bookings/42}</blockquote>_@param uriVariableValues the array of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}_or if it does not contain sufficient variables;public URI expand(Object... uriVariableValues) {_		UriComponents expandedComponents = this.uriComponents.expand(uriVariableValues)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,an,array,of,variables,expand,this,template,into,a,full,uri,the,array,represent,variable,values,the,order,of,variables,is,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,expand,rest,relax,42,pre,will,print,blockquote,code,http,example,com,hotels,rest,20,26,20relax,bookings,42,blockquote,param,uri,variable,values,the,array,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,sufficient,variables;public,uri,expand,object,uri,variable,values,uri,components,expanded,components,this,uri,components,expand,uri,variable,values,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Object... uriVariableValues);1530174524;Given an array of variables, expand this template into a full URI. The array represent variable values._The order of variables is significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.expand("Rest & Relax", 42))__</pre>_will print: <blockquote>{@code http://example.com/hotels/Rest%20%26%20Relax/bookings/42}</blockquote>_@param uriVariableValues the array of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}_or if it does not contain sufficient variables;public URI expand(Object... uriVariableValues) {_		UriComponents expandedComponents = this.uriComponents.expand(uriVariableValues)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,an,array,of,variables,expand,this,template,into,a,full,uri,the,array,represent,variable,values,the,order,of,variables,is,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,expand,rest,relax,42,pre,will,print,blockquote,code,http,example,com,hotels,rest,20,26,20relax,bookings,42,blockquote,param,uri,variable,values,the,array,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,sufficient,variables;public,uri,expand,object,uri,variable,values,uri,components,expanded,components,this,uri,components,expand,uri,variable,values,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
UriTemplate -> public URI expand(Object... uriVariableValues);1530174524;Given an array of variables, expand this template into a full URI. The array represent variable values._The order of variables is significant._<p>Example:_<pre class="code">_UriTemplate template = new UriTemplate("http://example.com/hotels/{hotel}/bookings/{booking}")__System.out.println(template.expand("Rest & Relax", 42))__</pre>_will print: <blockquote>{@code http://example.com/hotels/Rest%20%26%20Relax/bookings/42}</blockquote>_@param uriVariableValues the array of URI variables_@return the expanded URI_@throws IllegalArgumentException if {@code uriVariables} is {@code null}_or if it does not contain sufficient variables;public URI expand(Object... uriVariableValues) {_		UriComponents expandedComponents = this.uriComponents.expand(uriVariableValues)__		UriComponents encodedComponents = expandedComponents.encode()__		return encodedComponents.toUri()__	};given,an,array,of,variables,expand,this,template,into,a,full,uri,the,array,represent,variable,values,the,order,of,variables,is,significant,p,example,pre,class,code,uri,template,template,new,uri,template,http,example,com,hotels,hotel,bookings,booking,system,out,println,template,expand,rest,relax,42,pre,will,print,blockquote,code,http,example,com,hotels,rest,20,26,20relax,bookings,42,blockquote,param,uri,variable,values,the,array,of,uri,variables,return,the,expanded,uri,throws,illegal,argument,exception,if,code,uri,variables,is,code,null,or,if,it,does,not,contain,sufficient,variables;public,uri,expand,object,uri,variable,values,uri,components,expanded,components,this,uri,components,expand,uri,variable,values,uri,components,encoded,components,expanded,components,encode,return,encoded,components,to,uri
