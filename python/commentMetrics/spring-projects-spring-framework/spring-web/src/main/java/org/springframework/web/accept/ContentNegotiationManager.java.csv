# id;timestamp;commentText;codeText;commentWords;codeWords
ContentNegotiationManager -> @SuppressWarnings("unchecked") 	@Nullable 	public <T extends ContentNegotiationStrategy> T getStrategy(Class<T> strategyType);1495868221;Find a {@code ContentNegotiationStrategy} of the given type._@param strategyType the strategy type_@return the first matching strategy or {@code null}._@since 4.3;@SuppressWarnings("unchecked")_	@Nullable_	public <T extends ContentNegotiationStrategy> T getStrategy(Class<T> strategyType) {_		for (ContentNegotiationStrategy strategy : getStrategies()) {_			if (strategyType.isInstance(strategy)) {_				return (T) strategy__			}_		}_		return null__	};find,a,code,content,negotiation,strategy,of,the,given,type,param,strategy,type,the,strategy,type,return,the,first,matching,strategy,or,code,null,since,4,3;suppress,warnings,unchecked,nullable,public,t,extends,content,negotiation,strategy,t,get,strategy,class,t,strategy,type,for,content,negotiation,strategy,strategy,get,strategies,if,strategy,type,is,instance,strategy,return,t,strategy,return,null
ContentNegotiationManager -> @SuppressWarnings("unchecked") 	@Nullable 	public <T extends ContentNegotiationStrategy> T getStrategy(Class<T> strategyType);1499788456;Find a {@code ContentNegotiationStrategy} of the given type._@param strategyType the strategy type_@return the first matching strategy or {@code null}._@since 4.3;@SuppressWarnings("unchecked")_	@Nullable_	public <T extends ContentNegotiationStrategy> T getStrategy(Class<T> strategyType) {_		for (ContentNegotiationStrategy strategy : getStrategies()) {_			if (strategyType.isInstance(strategy)) {_				return (T) strategy__			}_		}_		return null__	};find,a,code,content,negotiation,strategy,of,the,given,type,param,strategy,type,the,strategy,type,return,the,first,matching,strategy,or,code,null,since,4,3;suppress,warnings,unchecked,nullable,public,t,extends,content,negotiation,strategy,t,get,strategy,class,t,strategy,type,for,content,negotiation,strategy,strategy,get,strategies,if,strategy,type,is,instance,strategy,return,t,strategy,return,null
ContentNegotiationManager -> @SuppressWarnings("unchecked") 	@Nullable 	public <T extends ContentNegotiationStrategy> T getStrategy(Class<T> strategyType);1506534768;Find a {@code ContentNegotiationStrategy} of the given type._@param strategyType the strategy type_@return the first matching strategy, or {@code null} if none_@since 4.3;@SuppressWarnings("unchecked")_	@Nullable_	public <T extends ContentNegotiationStrategy> T getStrategy(Class<T> strategyType) {_		for (ContentNegotiationStrategy strategy : getStrategies()) {_			if (strategyType.isInstance(strategy)) {_				return (T) strategy__			}_		}_		return null__	};find,a,code,content,negotiation,strategy,of,the,given,type,param,strategy,type,the,strategy,type,return,the,first,matching,strategy,or,code,null,if,none,since,4,3;suppress,warnings,unchecked,nullable,public,t,extends,content,negotiation,strategy,t,get,strategy,class,t,strategy,type,for,content,negotiation,strategy,strategy,get,strategies,if,strategy,type,is,instance,strategy,return,t,strategy,return,null
ContentNegotiationManager -> @SuppressWarnings("unchecked") 	@Nullable 	public <T extends ContentNegotiationStrategy> T getStrategy(Class<T> strategyType);1519514499;Find a {@code ContentNegotiationStrategy} of the given type._@param strategyType the strategy type_@return the first matching strategy, or {@code null} if none_@since 4.3;@SuppressWarnings("unchecked")_	@Nullable_	public <T extends ContentNegotiationStrategy> T getStrategy(Class<T> strategyType) {_		for (ContentNegotiationStrategy strategy : getStrategies()) {_			if (strategyType.isInstance(strategy)) {_				return (T) strategy__			}_		}_		return null__	};find,a,code,content,negotiation,strategy,of,the,given,type,param,strategy,type,the,strategy,type,return,the,first,matching,strategy,or,code,null,if,none,since,4,3;suppress,warnings,unchecked,nullable,public,t,extends,content,negotiation,strategy,t,get,strategy,class,t,strategy,type,for,content,negotiation,strategy,strategy,get,strategies,if,strategy,type,is,instance,strategy,return,t,strategy,return,null
ContentNegotiationManager -> @SuppressWarnings("unchecked") 	@Nullable 	public <T extends ContentNegotiationStrategy> T getStrategy(Class<T> strategyType);1522184059;Find a {@code ContentNegotiationStrategy} of the given type._@param strategyType the strategy type_@return the first matching strategy, or {@code null} if none_@since 4.3;@SuppressWarnings("unchecked")_	@Nullable_	public <T extends ContentNegotiationStrategy> T getStrategy(Class<T> strategyType) {_		for (ContentNegotiationStrategy strategy : getStrategies()) {_			if (strategyType.isInstance(strategy)) {_				return (T) strategy__			}_		}_		return null__	};find,a,code,content,negotiation,strategy,of,the,given,type,param,strategy,type,the,strategy,type,return,the,first,matching,strategy,or,code,null,if,none,since,4,3;suppress,warnings,unchecked,nullable,public,t,extends,content,negotiation,strategy,t,get,strategy,class,t,strategy,type,for,content,negotiation,strategy,strategy,get,strategies,if,strategy,type,is,instance,strategy,return,t,strategy,return,null
ContentNegotiationManager -> public List<MediaType> resolveMediaTypes(NativeWebRequest webRequest) throws HttpMediaTypeNotAcceptableException;1340380546;Delegate to all configured ContentNegotiationStrategy instances until one_returns a non-empty list._@param request the current request_@return the requested media types or an empty list, never {@code null}_@throws HttpMediaTypeNotAcceptableException if the requested media types cannot be parsed;public List<MediaType> resolveMediaTypes(NativeWebRequest webRequest) throws HttpMediaTypeNotAcceptableException {_		for (ContentNegotiationStrategy strategy : this.contentNegotiationStrategies) {_			List<MediaType> mediaTypes = strategy.resolveMediaTypes(webRequest)__			if (!mediaTypes.isEmpty()) {_				return mediaTypes__			}_		}_		return Collections.emptyList()__	};delegate,to,all,configured,content,negotiation,strategy,instances,until,one,returns,a,non,empty,list,param,request,the,current,request,return,the,requested,media,types,or,an,empty,list,never,code,null,throws,http,media,type,not,acceptable,exception,if,the,requested,media,types,cannot,be,parsed;public,list,media,type,resolve,media,types,native,web,request,web,request,throws,http,media,type,not,acceptable,exception,for,content,negotiation,strategy,strategy,this,content,negotiation,strategies,list,media,type,media,types,strategy,resolve,media,types,web,request,if,media,types,is,empty,return,media,types,return,collections,empty,list
ContentNegotiationManager -> public List<MediaType> resolveMediaTypes(NativeWebRequest webRequest) throws HttpMediaTypeNotAcceptableException;1340652245;Delegate to all configured ContentNegotiationStrategy instances until one_returns a non-empty list._@param request the current request_@return the requested media types or an empty list, never {@code null}_@throws HttpMediaTypeNotAcceptableException if the requested media types cannot be parsed;public List<MediaType> resolveMediaTypes(NativeWebRequest webRequest) throws HttpMediaTypeNotAcceptableException {_		for (ContentNegotiationStrategy strategy : this.contentNegotiationStrategies) {_			List<MediaType> mediaTypes = strategy.resolveMediaTypes(webRequest)__			if (!mediaTypes.isEmpty()) {_				return mediaTypes__			}_		}_		return Collections.emptyList()__	};delegate,to,all,configured,content,negotiation,strategy,instances,until,one,returns,a,non,empty,list,param,request,the,current,request,return,the,requested,media,types,or,an,empty,list,never,code,null,throws,http,media,type,not,acceptable,exception,if,the,requested,media,types,cannot,be,parsed;public,list,media,type,resolve,media,types,native,web,request,web,request,throws,http,media,type,not,acceptable,exception,for,content,negotiation,strategy,strategy,this,content,negotiation,strategies,list,media,type,media,types,strategy,resolve,media,types,web,request,if,media,types,is,empty,return,media,types,return,collections,empty,list
ContentNegotiationManager -> public List<MediaType> resolveMediaTypes(NativeWebRequest webRequest) throws HttpMediaTypeNotAcceptableException;1340674210;Delegate to all configured ContentNegotiationStrategy instances until one_returns a non-empty list._@param request the current request_@return the requested media types or an empty list, never {@code null}_@throws HttpMediaTypeNotAcceptableException if the requested media types cannot be parsed;public List<MediaType> resolveMediaTypes(NativeWebRequest webRequest) throws HttpMediaTypeNotAcceptableException {_		for (ContentNegotiationStrategy strategy : this.contentNegotiationStrategies) {_			List<MediaType> mediaTypes = strategy.resolveMediaTypes(webRequest)__			if (!mediaTypes.isEmpty()) {_				return mediaTypes__			}_		}_		return Collections.emptyList()__	};delegate,to,all,configured,content,negotiation,strategy,instances,until,one,returns,a,non,empty,list,param,request,the,current,request,return,the,requested,media,types,or,an,empty,list,never,code,null,throws,http,media,type,not,acceptable,exception,if,the,requested,media,types,cannot,be,parsed;public,list,media,type,resolve,media,types,native,web,request,web,request,throws,http,media,type,not,acceptable,exception,for,content,negotiation,strategy,strategy,this,content,negotiation,strategies,list,media,type,media,types,strategy,resolve,media,types,web,request,if,media,types,is,empty,return,media,types,return,collections,empty,list
ContentNegotiationManager -> public List<MediaType> resolveMediaTypes(NativeWebRequest webRequest) throws HttpMediaTypeNotAcceptableException;1342834322;Delegate to all configured ContentNegotiationStrategy instances until one_returns a non-empty list._@param request the current request_@return the requested media types or an empty list, never {@code null}_@throws HttpMediaTypeNotAcceptableException if the requested media types cannot be parsed;public List<MediaType> resolveMediaTypes(NativeWebRequest webRequest) throws HttpMediaTypeNotAcceptableException {_		for (ContentNegotiationStrategy strategy : this.contentNegotiationStrategies) {_			List<MediaType> mediaTypes = strategy.resolveMediaTypes(webRequest)__			if (!mediaTypes.isEmpty()) {_				return mediaTypes__			}_		}_		return Collections.emptyList()__	};delegate,to,all,configured,content,negotiation,strategy,instances,until,one,returns,a,non,empty,list,param,request,the,current,request,return,the,requested,media,types,or,an,empty,list,never,code,null,throws,http,media,type,not,acceptable,exception,if,the,requested,media,types,cannot,be,parsed;public,list,media,type,resolve,media,types,native,web,request,web,request,throws,http,media,type,not,acceptable,exception,for,content,negotiation,strategy,strategy,this,content,negotiation,strategies,list,media,type,media,types,strategy,resolve,media,types,web,request,if,media,types,is,empty,return,media,types,return,collections,empty,list
ContentNegotiationManager -> public List<MediaType> resolveMediaTypes(NativeWebRequest webRequest) throws HttpMediaTypeNotAcceptableException;1355313310;Delegate to all configured ContentNegotiationStrategy instances until one_returns a non-empty list._@param webRequest the current request_@return the requested media types or an empty list, never {@code null}_@throws HttpMediaTypeNotAcceptableException if the requested media types cannot be parsed;public List<MediaType> resolveMediaTypes(NativeWebRequest webRequest) throws HttpMediaTypeNotAcceptableException {_		for (ContentNegotiationStrategy strategy : this.contentNegotiationStrategies) {_			List<MediaType> mediaTypes = strategy.resolveMediaTypes(webRequest)__			if (!mediaTypes.isEmpty()) {_				return mediaTypes__			}_		}_		return Collections.emptyList()__	};delegate,to,all,configured,content,negotiation,strategy,instances,until,one,returns,a,non,empty,list,param,web,request,the,current,request,return,the,requested,media,types,or,an,empty,list,never,code,null,throws,http,media,type,not,acceptable,exception,if,the,requested,media,types,cannot,be,parsed;public,list,media,type,resolve,media,types,native,web,request,web,request,throws,http,media,type,not,acceptable,exception,for,content,negotiation,strategy,strategy,this,content,negotiation,strategies,list,media,type,media,types,strategy,resolve,media,types,web,request,if,media,types,is,empty,return,media,types,return,collections,empty,list
ContentNegotiationManager -> public List<MediaType> resolveMediaTypes(NativeWebRequest webRequest) throws HttpMediaTypeNotAcceptableException;1357119239;Delegate to all configured ContentNegotiationStrategy instances until one_returns a non-empty list._@param webRequest the current request_@return the requested media types or an empty list, never {@code null}_@throws HttpMediaTypeNotAcceptableException if the requested media types cannot be parsed;public List<MediaType> resolveMediaTypes(NativeWebRequest webRequest) throws HttpMediaTypeNotAcceptableException {_		for (ContentNegotiationStrategy strategy : this.contentNegotiationStrategies) {_			List<MediaType> mediaTypes = strategy.resolveMediaTypes(webRequest)__			if (!mediaTypes.isEmpty()) {_				return mediaTypes__			}_		}_		return Collections.emptyList()__	};delegate,to,all,configured,content,negotiation,strategy,instances,until,one,returns,a,non,empty,list,param,web,request,the,current,request,return,the,requested,media,types,or,an,empty,list,never,code,null,throws,http,media,type,not,acceptable,exception,if,the,requested,media,types,cannot,be,parsed;public,list,media,type,resolve,media,types,native,web,request,web,request,throws,http,media,type,not,acceptable,exception,for,content,negotiation,strategy,strategy,this,content,negotiation,strategies,list,media,type,media,types,strategy,resolve,media,types,web,request,if,media,types,is,empty,return,media,types,return,collections,empty,list
ContentNegotiationManager -> public List<MediaType> resolveMediaTypes(NativeWebRequest webRequest) throws HttpMediaTypeNotAcceptableException;1362408075;Delegate to all configured ContentNegotiationStrategy instances until one_returns a non-empty list._@param webRequest the current request_@return the requested media types or an empty list, never {@code null}_@throws HttpMediaTypeNotAcceptableException if the requested media types cannot be parsed;public List<MediaType> resolveMediaTypes(NativeWebRequest webRequest) throws HttpMediaTypeNotAcceptableException {_		for (ContentNegotiationStrategy strategy : this.contentNegotiationStrategies) {_			List<MediaType> mediaTypes = strategy.resolveMediaTypes(webRequest)__			if (!mediaTypes.isEmpty()) {_				return mediaTypes__			}_		}_		return Collections.emptyList()__	};delegate,to,all,configured,content,negotiation,strategy,instances,until,one,returns,a,non,empty,list,param,web,request,the,current,request,return,the,requested,media,types,or,an,empty,list,never,code,null,throws,http,media,type,not,acceptable,exception,if,the,requested,media,types,cannot,be,parsed;public,list,media,type,resolve,media,types,native,web,request,web,request,throws,http,media,type,not,acceptable,exception,for,content,negotiation,strategy,strategy,this,content,negotiation,strategies,list,media,type,media,types,strategy,resolve,media,types,web,request,if,media,types,is,empty,return,media,types,return,collections,empty,list
ContentNegotiationManager -> public List<MediaType> resolveMediaTypes(NativeWebRequest webRequest) throws HttpMediaTypeNotAcceptableException;1368198615;Delegate to all configured ContentNegotiationStrategy instances until one_returns a non-empty list._@param webRequest the current request_@return the requested media types or an empty list, never {@code null}_@throws HttpMediaTypeNotAcceptableException if the requested media types cannot be parsed;public List<MediaType> resolveMediaTypes(NativeWebRequest webRequest) throws HttpMediaTypeNotAcceptableException {_		for (ContentNegotiationStrategy strategy : this.contentNegotiationStrategies) {_			List<MediaType> mediaTypes = strategy.resolveMediaTypes(webRequest)__			if (mediaTypes.isEmpty() || mediaTypes.equals(MEDIA_TYPE_ALL)) {_				continue__			}_			return mediaTypes__		}_		return Collections.emptyList()__	};delegate,to,all,configured,content,negotiation,strategy,instances,until,one,returns,a,non,empty,list,param,web,request,the,current,request,return,the,requested,media,types,or,an,empty,list,never,code,null,throws,http,media,type,not,acceptable,exception,if,the,requested,media,types,cannot,be,parsed;public,list,media,type,resolve,media,types,native,web,request,web,request,throws,http,media,type,not,acceptable,exception,for,content,negotiation,strategy,strategy,this,content,negotiation,strategies,list,media,type,media,types,strategy,resolve,media,types,web,request,if,media,types,is,empty,media,types,equals,continue,return,media,types,return,collections,empty,list
ContentNegotiationManager -> public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers);1340652245;Add MediaTypeFileExtensionResolver instances.;public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers) {_		this.fileExtensionResolvers.addAll(Arrays.asList(resolvers))__	};add,media,type,file,extension,resolver,instances;public,void,add,file,extension,resolvers,media,type,file,extension,resolver,resolvers,this,file,extension,resolvers,add,all,arrays,as,list,resolvers
ContentNegotiationManager -> public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers);1340674210;Add MediaTypeFileExtensionResolver instances.;public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers) {_		this.fileExtensionResolvers.addAll(Arrays.asList(resolvers))__	};add,media,type,file,extension,resolver,instances;public,void,add,file,extension,resolvers,media,type,file,extension,resolver,resolvers,this,file,extension,resolvers,add,all,arrays,as,list,resolvers
ContentNegotiationManager -> public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers);1342834322;Add MediaTypeFileExtensionResolver instances._<p>Note that some {@link ContentNegotiationStrategy} implementations also_implement {@link MediaTypeFileExtensionResolver} and the class constructor_accepting the former will also detect implementations of the latter. Therefore_you only need to use this method to register additional instances._@param one more resolvers;public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers) {_		this.fileExtensionResolvers.addAll(Arrays.asList(resolvers))__	};add,media,type,file,extension,resolver,instances,p,note,that,some,link,content,negotiation,strategy,implementations,also,implement,link,media,type,file,extension,resolver,and,the,class,constructor,accepting,the,former,will,also,detect,implementations,of,the,latter,therefore,you,only,need,to,use,this,method,to,register,additional,instances,param,one,more,resolvers;public,void,add,file,extension,resolvers,media,type,file,extension,resolver,resolvers,this,file,extension,resolvers,add,all,arrays,as,list,resolvers
ContentNegotiationManager -> public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers);1355313310;Add MediaTypeFileExtensionResolver instances._<p>Note that some {@link ContentNegotiationStrategy} implementations also_implement {@link MediaTypeFileExtensionResolver} and the class constructor_accepting the former will also detect implementations of the latter. Therefore_you only need to use this method to register additional instances._@param resolvers one or more resolvers;public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers) {_		this.fileExtensionResolvers.addAll(Arrays.asList(resolvers))__	};add,media,type,file,extension,resolver,instances,p,note,that,some,link,content,negotiation,strategy,implementations,also,implement,link,media,type,file,extension,resolver,and,the,class,constructor,accepting,the,former,will,also,detect,implementations,of,the,latter,therefore,you,only,need,to,use,this,method,to,register,additional,instances,param,resolvers,one,or,more,resolvers;public,void,add,file,extension,resolvers,media,type,file,extension,resolver,resolvers,this,file,extension,resolvers,add,all,arrays,as,list,resolvers
ContentNegotiationManager -> public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers);1356735495;Add MediaTypeFileExtensionResolver instances._<p>Note that some {@link ContentNegotiationStrategy} implementations also_implement {@link MediaTypeFileExtensionResolver} and the class constructor_accepting the former will also detect implementations of the latter. Therefore_you only need to use this method to register additional instances._@param resolvers one or more resolvers;public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers) {_		this.fileExtensionResolvers.addAll(Arrays.asList(resolvers))__	};add,media,type,file,extension,resolver,instances,p,note,that,some,link,content,negotiation,strategy,implementations,also,implement,link,media,type,file,extension,resolver,and,the,class,constructor,accepting,the,former,will,also,detect,implementations,of,the,latter,therefore,you,only,need,to,use,this,method,to,register,additional,instances,param,resolvers,one,or,more,resolvers;public,void,add,file,extension,resolvers,media,type,file,extension,resolver,resolvers,this,file,extension,resolvers,add,all,arrays,as,list,resolvers
ContentNegotiationManager -> public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers);1357119239;Add MediaTypeFileExtensionResolver instances._<p>Note that some {@link ContentNegotiationStrategy} implementations also_implement {@link MediaTypeFileExtensionResolver} and the class constructor_accepting the former will also detect implementations of the latter. Therefore_you only need to use this method to register additional instances._@param resolvers one or more resolvers;public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers) {_		this.fileExtensionResolvers.addAll(Arrays.asList(resolvers))__	};add,media,type,file,extension,resolver,instances,p,note,that,some,link,content,negotiation,strategy,implementations,also,implement,link,media,type,file,extension,resolver,and,the,class,constructor,accepting,the,former,will,also,detect,implementations,of,the,latter,therefore,you,only,need,to,use,this,method,to,register,additional,instances,param,resolvers,one,or,more,resolvers;public,void,add,file,extension,resolvers,media,type,file,extension,resolver,resolvers,this,file,extension,resolvers,add,all,arrays,as,list,resolvers
ContentNegotiationManager -> public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers);1362408075;Add MediaTypeFileExtensionResolver instances._<p>Note that some {@link ContentNegotiationStrategy} implementations also_implement {@link MediaTypeFileExtensionResolver} and the class constructor_accepting the former will also detect implementations of the latter. Therefore_you only need to use this method to register additional instances._@param resolvers one or more resolvers;public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers) {_		this.fileExtensionResolvers.addAll(Arrays.asList(resolvers))__	};add,media,type,file,extension,resolver,instances,p,note,that,some,link,content,negotiation,strategy,implementations,also,implement,link,media,type,file,extension,resolver,and,the,class,constructor,accepting,the,former,will,also,detect,implementations,of,the,latter,therefore,you,only,need,to,use,this,method,to,register,additional,instances,param,resolvers,one,or,more,resolvers;public,void,add,file,extension,resolvers,media,type,file,extension,resolver,resolvers,this,file,extension,resolvers,add,all,arrays,as,list,resolvers
ContentNegotiationManager -> public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers);1368198615;Add MediaTypeFileExtensionResolver instances._<p>Note that some {@link ContentNegotiationStrategy} implementations also_implement {@link MediaTypeFileExtensionResolver} and the class constructor_accepting the former will also detect implementations of the latter. Therefore_you only need to use this method to register additional instances._@param resolvers one or more resolvers;public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers) {_		this.fileExtensionResolvers.addAll(Arrays.asList(resolvers))__	};add,media,type,file,extension,resolver,instances,p,note,that,some,link,content,negotiation,strategy,implementations,also,implement,link,media,type,file,extension,resolver,and,the,class,constructor,accepting,the,former,will,also,detect,implementations,of,the,latter,therefore,you,only,need,to,use,this,method,to,register,additional,instances,param,resolvers,one,or,more,resolvers;public,void,add,file,extension,resolvers,media,type,file,extension,resolver,resolvers,this,file,extension,resolvers,add,all,arrays,as,list,resolvers
ContentNegotiationManager -> public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers);1368482696;Add MediaTypeFileExtensionResolver instances._<p>Note that some {@link ContentNegotiationStrategy} implementations also_implement {@link MediaTypeFileExtensionResolver} and the class constructor_accepting the former will also detect implementations of the latter. Therefore_you only need to use this method to register additional instances._@param resolvers one or more resolvers;public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers) {_		this.fileExtensionResolvers.addAll(Arrays.asList(resolvers))__	};add,media,type,file,extension,resolver,instances,p,note,that,some,link,content,negotiation,strategy,implementations,also,implement,link,media,type,file,extension,resolver,and,the,class,constructor,accepting,the,former,will,also,detect,implementations,of,the,latter,therefore,you,only,need,to,use,this,method,to,register,additional,instances,param,resolvers,one,or,more,resolvers;public,void,add,file,extension,resolvers,media,type,file,extension,resolver,resolvers,this,file,extension,resolvers,add,all,arrays,as,list,resolvers
ContentNegotiationManager -> public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers);1443560917;Register more {@code MediaTypeFileExtensionResolver} instances in addition_to those detected at construction._@param resolvers the resolvers to add;public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers) {_		this.resolvers.addAll(Arrays.asList(resolvers))__	};register,more,code,media,type,file,extension,resolver,instances,in,addition,to,those,detected,at,construction,param,resolvers,the,resolvers,to,add;public,void,add,file,extension,resolvers,media,type,file,extension,resolver,resolvers,this,resolvers,add,all,arrays,as,list,resolvers
ContentNegotiationManager -> public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers);1444898007;Register more {@code MediaTypeFileExtensionResolver} instances in addition_to those detected at construction._@param resolvers the resolvers to add;public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers) {_		this.resolvers.addAll(Arrays.asList(resolvers))__	};register,more,code,media,type,file,extension,resolver,instances,in,addition,to,those,detected,at,construction,param,resolvers,the,resolvers,to,add;public,void,add,file,extension,resolvers,media,type,file,extension,resolver,resolvers,this,resolvers,add,all,arrays,as,list,resolvers
ContentNegotiationManager -> public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers);1446846341;Register more {@code MediaTypeFileExtensionResolver} instances in addition_to those detected at construction._@param resolvers the resolvers to add;public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers) {_		this.resolvers.addAll(Arrays.asList(resolvers))__	};register,more,code,media,type,file,extension,resolver,instances,in,addition,to,those,detected,at,construction,param,resolvers,the,resolvers,to,add;public,void,add,file,extension,resolvers,media,type,file,extension,resolver,resolvers,this,resolvers,add,all,arrays,as,list,resolvers
ContentNegotiationManager -> public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers);1457125561;Register more {@code MediaTypeFileExtensionResolver} instances in addition_to those detected at construction._@param resolvers the resolvers to add;public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers) {_		this.resolvers.addAll(Arrays.asList(resolvers))__	};register,more,code,media,type,file,extension,resolver,instances,in,addition,to,those,detected,at,construction,param,resolvers,the,resolvers,to,add;public,void,add,file,extension,resolvers,media,type,file,extension,resolver,resolvers,this,resolvers,add,all,arrays,as,list,resolvers
ContentNegotiationManager -> public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers);1464879764;Register more {@code MediaTypeFileExtensionResolver} instances in addition_to those detected at construction._@param resolvers the resolvers to add;public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers) {_		this.resolvers.addAll(Arrays.asList(resolvers))__	};register,more,code,media,type,file,extension,resolver,instances,in,addition,to,those,detected,at,construction,param,resolvers,the,resolvers,to,add;public,void,add,file,extension,resolvers,media,type,file,extension,resolver,resolvers,this,resolvers,add,all,arrays,as,list,resolvers
ContentNegotiationManager -> public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers);1467730834;Register more {@code MediaTypeFileExtensionResolver} instances in addition_to those detected at construction._@param resolvers the resolvers to add;public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers) {_		this.resolvers.addAll(Arrays.asList(resolvers))__	};register,more,code,media,type,file,extension,resolver,instances,in,addition,to,those,detected,at,construction,param,resolvers,the,resolvers,to,add;public,void,add,file,extension,resolvers,media,type,file,extension,resolver,resolvers,this,resolvers,add,all,arrays,as,list,resolvers
ContentNegotiationManager -> public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers);1486062666;Register more {@code MediaTypeFileExtensionResolver} instances in addition_to those detected at construction._@param resolvers the resolvers to add;public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers) {_		this.resolvers.addAll(Arrays.asList(resolvers))__	};register,more,code,media,type,file,extension,resolver,instances,in,addition,to,those,detected,at,construction,param,resolvers,the,resolvers,to,add;public,void,add,file,extension,resolvers,media,type,file,extension,resolver,resolvers,this,resolvers,add,all,arrays,as,list,resolvers
ContentNegotiationManager -> public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers);1490104706;Register more {@code MediaTypeFileExtensionResolver} instances in addition_to those detected at construction._@param resolvers the resolvers to add;public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers) {_		this.resolvers.addAll(Arrays.asList(resolvers))__	};register,more,code,media,type,file,extension,resolver,instances,in,addition,to,those,detected,at,construction,param,resolvers,the,resolvers,to,add;public,void,add,file,extension,resolvers,media,type,file,extension,resolver,resolvers,this,resolvers,add,all,arrays,as,list,resolvers
ContentNegotiationManager -> public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers);1490285806;Register more {@code MediaTypeFileExtensionResolver} instances in addition_to those detected at construction._@param resolvers the resolvers to add;public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers) {_		this.resolvers.addAll(Arrays.asList(resolvers))__	};register,more,code,media,type,file,extension,resolver,instances,in,addition,to,those,detected,at,construction,param,resolvers,the,resolvers,to,add;public,void,add,file,extension,resolvers,media,type,file,extension,resolver,resolvers,this,resolvers,add,all,arrays,as,list,resolvers
ContentNegotiationManager -> public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers);1495868221;Register more {@code MediaTypeFileExtensionResolver} instances in addition_to those detected at construction._@param resolvers the resolvers to add;public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers) {_		this.resolvers.addAll(Arrays.asList(resolvers))__	};register,more,code,media,type,file,extension,resolver,instances,in,addition,to,those,detected,at,construction,param,resolvers,the,resolvers,to,add;public,void,add,file,extension,resolvers,media,type,file,extension,resolver,resolvers,this,resolvers,add,all,arrays,as,list,resolvers
ContentNegotiationManager -> public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers);1499788456;Register more {@code MediaTypeFileExtensionResolver} instances in addition_to those detected at construction._@param resolvers the resolvers to add;public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers) {_		this.resolvers.addAll(Arrays.asList(resolvers))__	};register,more,code,media,type,file,extension,resolver,instances,in,addition,to,those,detected,at,construction,param,resolvers,the,resolvers,to,add;public,void,add,file,extension,resolvers,media,type,file,extension,resolver,resolvers,this,resolvers,add,all,arrays,as,list,resolvers
ContentNegotiationManager -> public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers);1506534768;Register more {@code MediaTypeFileExtensionResolver} instances in addition_to those detected at construction._@param resolvers the resolvers to add;public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers) {_		this.resolvers.addAll(Arrays.asList(resolvers))__	};register,more,code,media,type,file,extension,resolver,instances,in,addition,to,those,detected,at,construction,param,resolvers,the,resolvers,to,add;public,void,add,file,extension,resolvers,media,type,file,extension,resolver,resolvers,this,resolvers,add,all,arrays,as,list,resolvers
ContentNegotiationManager -> public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers);1519514499;Register more {@code MediaTypeFileExtensionResolver} instances in addition_to those detected at construction._@param resolvers the resolvers to add;public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers) {_		Collections.addAll(this.resolvers, resolvers)__	};register,more,code,media,type,file,extension,resolver,instances,in,addition,to,those,detected,at,construction,param,resolvers,the,resolvers,to,add;public,void,add,file,extension,resolvers,media,type,file,extension,resolver,resolvers,collections,add,all,this,resolvers,resolvers
ContentNegotiationManager -> public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers);1522184059;Register more {@code MediaTypeFileExtensionResolver} instances in addition_to those detected at construction._@param resolvers the resolvers to add;public void addFileExtensionResolvers(MediaTypeFileExtensionResolver... resolvers) {_		Collections.addAll(this.resolvers, resolvers)__	};register,more,code,media,type,file,extension,resolver,instances,in,addition,to,those,detected,at,construction,param,resolvers,the,resolvers,to,add;public,void,add,file,extension,resolvers,media,type,file,extension,resolver,resolvers,collections,add,all,this,resolvers,resolvers
ContentNegotiationManager -> @Override 	public List<String> resolveFileExtensions(MediaType mediaType);1356735495;Delegate to all configured MediaTypeFileExtensionResolver instances and aggregate_the list of all file extensions found.;@Override_	public List<String> resolveFileExtensions(MediaType mediaType) {_		Set<String> result = new LinkedHashSet<String>()__		for (MediaTypeFileExtensionResolver resolver : this.fileExtensionResolvers) {_			result.addAll(resolver.resolveFileExtensions(mediaType))__		}_		return new ArrayList<String>(result)__	};delegate,to,all,configured,media,type,file,extension,resolver,instances,and,aggregate,the,list,of,all,file,extensions,found;override,public,list,string,resolve,file,extensions,media,type,media,type,set,string,result,new,linked,hash,set,string,for,media,type,file,extension,resolver,resolver,this,file,extension,resolvers,result,add,all,resolver,resolve,file,extensions,media,type,return,new,array,list,string,result
ContentNegotiationManager -> @Override 	public List<String> resolveFileExtensions(MediaType mediaType);1368482696;Delegate to all configured MediaTypeFileExtensionResolver instances and aggregate_the list of all file extensions found.;@Override_	public List<String> resolveFileExtensions(MediaType mediaType) {_		Set<String> result = new LinkedHashSet<String>()__		for (MediaTypeFileExtensionResolver resolver : this.fileExtensionResolvers) {_			result.addAll(resolver.resolveFileExtensions(mediaType))__		}_		return new ArrayList<String>(result)__	};delegate,to,all,configured,media,type,file,extension,resolver,instances,and,aggregate,the,list,of,all,file,extensions,found;override,public,list,string,resolve,file,extensions,media,type,media,type,set,string,result,new,linked,hash,set,string,for,media,type,file,extension,resolver,resolver,this,file,extension,resolvers,result,add,all,resolver,resolve,file,extensions,media,type,return,new,array,list,string,result
ContentNegotiationManager -> @SuppressWarnings("unchecked") 	public <T extends ContentNegotiationStrategy> T getStrategy(Class<T> strategyType);1457125561;Find a {@code ContentNegotiationStrategy} of the given type._@param strategyType the strategy type_@return the first matching strategy or {@code null}._@since 4.3;@SuppressWarnings("unchecked")_	public <T extends ContentNegotiationStrategy> T getStrategy(Class<T> strategyType) {_		for (ContentNegotiationStrategy strategy : getStrategies()) {_			if (strategyType.isInstance(strategy)) {_				return (T) strategy__			}_		}_		return null__	};find,a,code,content,negotiation,strategy,of,the,given,type,param,strategy,type,the,strategy,type,return,the,first,matching,strategy,or,code,null,since,4,3;suppress,warnings,unchecked,public,t,extends,content,negotiation,strategy,t,get,strategy,class,t,strategy,type,for,content,negotiation,strategy,strategy,get,strategies,if,strategy,type,is,instance,strategy,return,t,strategy,return,null
ContentNegotiationManager -> @SuppressWarnings("unchecked") 	public <T extends ContentNegotiationStrategy> T getStrategy(Class<T> strategyType);1464879764;Find a {@code ContentNegotiationStrategy} of the given type._@param strategyType the strategy type_@return the first matching strategy or {@code null}._@since 4.3;@SuppressWarnings("unchecked")_	public <T extends ContentNegotiationStrategy> T getStrategy(Class<T> strategyType) {_		for (ContentNegotiationStrategy strategy : getStrategies()) {_			if (strategyType.isInstance(strategy)) {_				return (T) strategy__			}_		}_		return null__	};find,a,code,content,negotiation,strategy,of,the,given,type,param,strategy,type,the,strategy,type,return,the,first,matching,strategy,or,code,null,since,4,3;suppress,warnings,unchecked,public,t,extends,content,negotiation,strategy,t,get,strategy,class,t,strategy,type,for,content,negotiation,strategy,strategy,get,strategies,if,strategy,type,is,instance,strategy,return,t,strategy,return,null
ContentNegotiationManager -> @SuppressWarnings("unchecked") 	public <T extends ContentNegotiationStrategy> T getStrategy(Class<T> strategyType);1467730834;Find a {@code ContentNegotiationStrategy} of the given type._@param strategyType the strategy type_@return the first matching strategy or {@code null}._@since 4.3;@SuppressWarnings("unchecked")_	public <T extends ContentNegotiationStrategy> T getStrategy(Class<T> strategyType) {_		for (ContentNegotiationStrategy strategy : getStrategies()) {_			if (strategyType.isInstance(strategy)) {_				return (T) strategy__			}_		}_		return null__	};find,a,code,content,negotiation,strategy,of,the,given,type,param,strategy,type,the,strategy,type,return,the,first,matching,strategy,or,code,null,since,4,3;suppress,warnings,unchecked,public,t,extends,content,negotiation,strategy,t,get,strategy,class,t,strategy,type,for,content,negotiation,strategy,strategy,get,strategies,if,strategy,type,is,instance,strategy,return,t,strategy,return,null
ContentNegotiationManager -> @SuppressWarnings("unchecked") 	public <T extends ContentNegotiationStrategy> T getStrategy(Class<T> strategyType);1486062666;Find a {@code ContentNegotiationStrategy} of the given type._@param strategyType the strategy type_@return the first matching strategy or {@code null}._@since 4.3;@SuppressWarnings("unchecked")_	public <T extends ContentNegotiationStrategy> T getStrategy(Class<T> strategyType) {_		for (ContentNegotiationStrategy strategy : getStrategies()) {_			if (strategyType.isInstance(strategy)) {_				return (T) strategy__			}_		}_		return null__	};find,a,code,content,negotiation,strategy,of,the,given,type,param,strategy,type,the,strategy,type,return,the,first,matching,strategy,or,code,null,since,4,3;suppress,warnings,unchecked,public,t,extends,content,negotiation,strategy,t,get,strategy,class,t,strategy,type,for,content,negotiation,strategy,strategy,get,strategies,if,strategy,type,is,instance,strategy,return,t,strategy,return,null
ContentNegotiationManager -> @SuppressWarnings("unchecked") 	public <T extends ContentNegotiationStrategy> T getStrategy(Class<T> strategyType);1490104706;Find a {@code ContentNegotiationStrategy} of the given type._@param strategyType the strategy type_@return the first matching strategy or {@code null}._@since 4.3;@SuppressWarnings("unchecked")_	public <T extends ContentNegotiationStrategy> T getStrategy(Class<T> strategyType) {_		for (ContentNegotiationStrategy strategy : getStrategies()) {_			if (strategyType.isInstance(strategy)) {_				return (T) strategy__			}_		}_		return null__	};find,a,code,content,negotiation,strategy,of,the,given,type,param,strategy,type,the,strategy,type,return,the,first,matching,strategy,or,code,null,since,4,3;suppress,warnings,unchecked,public,t,extends,content,negotiation,strategy,t,get,strategy,class,t,strategy,type,for,content,negotiation,strategy,strategy,get,strategies,if,strategy,type,is,instance,strategy,return,t,strategy,return,null
ContentNegotiationManager -> @SuppressWarnings("unchecked") 	public <T extends ContentNegotiationStrategy> T getStrategy(Class<T> strategyType);1490285806;Find a {@code ContentNegotiationStrategy} of the given type._@param strategyType the strategy type_@return the first matching strategy or {@code null}._@since 4.3;@SuppressWarnings("unchecked")_	public <T extends ContentNegotiationStrategy> T getStrategy(Class<T> strategyType) {_		for (ContentNegotiationStrategy strategy : getStrategies()) {_			if (strategyType.isInstance(strategy)) {_				return (T) strategy__			}_		}_		return null__	};find,a,code,content,negotiation,strategy,of,the,given,type,param,strategy,type,the,strategy,type,return,the,first,matching,strategy,or,code,null,since,4,3;suppress,warnings,unchecked,public,t,extends,content,negotiation,strategy,t,get,strategy,class,t,strategy,type,for,content,negotiation,strategy,strategy,get,strategies,if,strategy,type,is,instance,strategy,return,t,strategy,return,null
ContentNegotiationManager -> public List<ContentNegotiationStrategy> getStrategies();1446846341;Return the configured content negotiation strategies._@since 3.2.16;public List<ContentNegotiationStrategy> getStrategies() {_		return this.strategies__	};return,the,configured,content,negotiation,strategies,since,3,2,16;public,list,content,negotiation,strategy,get,strategies,return,this,strategies
ContentNegotiationManager -> public List<ContentNegotiationStrategy> getStrategies();1457125561;Return the configured content negotiation strategies._@since 3.2.16;public List<ContentNegotiationStrategy> getStrategies() {_		return this.strategies__	};return,the,configured,content,negotiation,strategies,since,3,2,16;public,list,content,negotiation,strategy,get,strategies,return,this,strategies
ContentNegotiationManager -> public List<ContentNegotiationStrategy> getStrategies();1464879764;Return the configured content negotiation strategies._@since 3.2.16;public List<ContentNegotiationStrategy> getStrategies() {_		return this.strategies__	};return,the,configured,content,negotiation,strategies,since,3,2,16;public,list,content,negotiation,strategy,get,strategies,return,this,strategies
ContentNegotiationManager -> public List<ContentNegotiationStrategy> getStrategies();1467730834;Return the configured content negotiation strategies._@since 3.2.16;public List<ContentNegotiationStrategy> getStrategies() {_		return this.strategies__	};return,the,configured,content,negotiation,strategies,since,3,2,16;public,list,content,negotiation,strategy,get,strategies,return,this,strategies
ContentNegotiationManager -> public List<ContentNegotiationStrategy> getStrategies();1486062666;Return the configured content negotiation strategies._@since 3.2.16;public List<ContentNegotiationStrategy> getStrategies() {_		return this.strategies__	};return,the,configured,content,negotiation,strategies,since,3,2,16;public,list,content,negotiation,strategy,get,strategies,return,this,strategies
ContentNegotiationManager -> public List<ContentNegotiationStrategy> getStrategies();1490104706;Return the configured content negotiation strategies._@since 3.2.16;public List<ContentNegotiationStrategy> getStrategies() {_		return this.strategies__	};return,the,configured,content,negotiation,strategies,since,3,2,16;public,list,content,negotiation,strategy,get,strategies,return,this,strategies
ContentNegotiationManager -> public List<ContentNegotiationStrategy> getStrategies();1490285806;Return the configured content negotiation strategies._@since 3.2.16;public List<ContentNegotiationStrategy> getStrategies() {_		return this.strategies__	};return,the,configured,content,negotiation,strategies,since,3,2,16;public,list,content,negotiation,strategy,get,strategies,return,this,strategies
ContentNegotiationManager -> public List<ContentNegotiationStrategy> getStrategies();1495868221;Return the configured content negotiation strategies._@since 3.2.16;public List<ContentNegotiationStrategy> getStrategies() {_		return this.strategies__	};return,the,configured,content,negotiation,strategies,since,3,2,16;public,list,content,negotiation,strategy,get,strategies,return,this,strategies
ContentNegotiationManager -> public List<ContentNegotiationStrategy> getStrategies();1499788456;Return the configured content negotiation strategies._@since 3.2.16;public List<ContentNegotiationStrategy> getStrategies() {_		return this.strategies__	};return,the,configured,content,negotiation,strategies,since,3,2,16;public,list,content,negotiation,strategy,get,strategies,return,this,strategies
ContentNegotiationManager -> public List<ContentNegotiationStrategy> getStrategies();1506534768;Return the configured content negotiation strategies._@since 3.2.16;public List<ContentNegotiationStrategy> getStrategies() {_		return this.strategies__	};return,the,configured,content,negotiation,strategies,since,3,2,16;public,list,content,negotiation,strategy,get,strategies,return,this,strategies
ContentNegotiationManager -> public List<ContentNegotiationStrategy> getStrategies();1519514499;Return the configured content negotiation strategies._@since 3.2.16;public List<ContentNegotiationStrategy> getStrategies() {_		return this.strategies__	};return,the,configured,content,negotiation,strategies,since,3,2,16;public,list,content,negotiation,strategy,get,strategies,return,this,strategies
ContentNegotiationManager -> public List<ContentNegotiationStrategy> getStrategies();1522184059;Return the configured content negotiation strategies._@since 3.2.16;public List<ContentNegotiationStrategy> getStrategies() {_		return this.strategies__	};return,the,configured,content,negotiation,strategies,since,3,2,16;public,list,content,negotiation,strategy,get,strategies,return,this,strategies
ContentNegotiationManager -> public ContentNegotiationManager(ContentNegotiationStrategy... strategies);1340380546;Create an instance with the given ContentNegotiationStrategy instances._<p>Each instance is checked to see if it is also an implementation of_MediaTypeExtensionsResolver, and if so it is registered as such.;public ContentNegotiationManager(ContentNegotiationStrategy... strategies) {_		Assert.notEmpty(strategies, "At least one ContentNegotiationStrategy is expected")__		this.contentNegotiationStrategies.addAll(Arrays.asList(strategies))__		for (ContentNegotiationStrategy strategy : this.contentNegotiationStrategies) {_			if (strategy instanceof MediaTypeExtensionsResolver) {_				this.extensionResolvers.add((MediaTypeExtensionsResolver) strategy)__			}_		}_	};create,an,instance,with,the,given,content,negotiation,strategy,instances,p,each,instance,is,checked,to,see,if,it,is,also,an,implementation,of,media,type,extensions,resolver,and,if,so,it,is,registered,as,such;public,content,negotiation,manager,content,negotiation,strategy,strategies,assert,not,empty,strategies,at,least,one,content,negotiation,strategy,is,expected,this,content,negotiation,strategies,add,all,arrays,as,list,strategies,for,content,negotiation,strategy,strategy,this,content,negotiation,strategies,if,strategy,instanceof,media,type,extensions,resolver,this,extension,resolvers,add,media,type,extensions,resolver,strategy
ContentNegotiationManager -> public ContentNegotiationManager(ContentNegotiationStrategy... strategies);1340652245;Create an instance with the given ContentNegotiationStrategy instances._<p>Each instance is checked to see if it is also an implementation of_MediaTypeFileExtensionResolver, and if so it is registered as such.;public ContentNegotiationManager(ContentNegotiationStrategy... strategies) {_		Assert.notEmpty(strategies, "At least one ContentNegotiationStrategy is expected")__		this.contentNegotiationStrategies.addAll(Arrays.asList(strategies))__		for (ContentNegotiationStrategy strategy : this.contentNegotiationStrategies) {_			if (strategy instanceof MediaTypeFileExtensionResolver) {_				this.fileExtensionResolvers.add((MediaTypeFileExtensionResolver) strategy)__			}_		}_	};create,an,instance,with,the,given,content,negotiation,strategy,instances,p,each,instance,is,checked,to,see,if,it,is,also,an,implementation,of,media,type,file,extension,resolver,and,if,so,it,is,registered,as,such;public,content,negotiation,manager,content,negotiation,strategy,strategies,assert,not,empty,strategies,at,least,one,content,negotiation,strategy,is,expected,this,content,negotiation,strategies,add,all,arrays,as,list,strategies,for,content,negotiation,strategy,strategy,this,content,negotiation,strategies,if,strategy,instanceof,media,type,file,extension,resolver,this,file,extension,resolvers,add,media,type,file,extension,resolver,strategy
ContentNegotiationManager -> public ContentNegotiationManager(ContentNegotiationStrategy... strategies);1340674210;Create an instance with the given ContentNegotiationStrategy instances._<p>Each instance is checked to see if it is also an implementation of_MediaTypeFileExtensionResolver, and if so it is registered as such.;public ContentNegotiationManager(ContentNegotiationStrategy... strategies) {_		Assert.notEmpty(strategies, "At least one ContentNegotiationStrategy is expected")__		this.contentNegotiationStrategies.addAll(Arrays.asList(strategies))__		for (ContentNegotiationStrategy strategy : this.contentNegotiationStrategies) {_			if (strategy instanceof MediaTypeFileExtensionResolver) {_				this.fileExtensionResolvers.add((MediaTypeFileExtensionResolver) strategy)__			}_		}_	};create,an,instance,with,the,given,content,negotiation,strategy,instances,p,each,instance,is,checked,to,see,if,it,is,also,an,implementation,of,media,type,file,extension,resolver,and,if,so,it,is,registered,as,such;public,content,negotiation,manager,content,negotiation,strategy,strategies,assert,not,empty,strategies,at,least,one,content,negotiation,strategy,is,expected,this,content,negotiation,strategies,add,all,arrays,as,list,strategies,for,content,negotiation,strategy,strategy,this,content,negotiation,strategies,if,strategy,instanceof,media,type,file,extension,resolver,this,file,extension,resolvers,add,media,type,file,extension,resolver,strategy
ContentNegotiationManager -> public ContentNegotiationManager(ContentNegotiationStrategy... strategies);1342834322;Create an instance with the given ContentNegotiationStrategy instances._<p>Each instance is checked to see if it is also an implementation of_MediaTypeFileExtensionResolver, and if so it is registered as such._@param strategies one more more ContentNegotiationStrategy instances;public ContentNegotiationManager(ContentNegotiationStrategy... strategies) {_		Assert.notEmpty(strategies, "At least one ContentNegotiationStrategy is expected")__		this.contentNegotiationStrategies.addAll(Arrays.asList(strategies))__		for (ContentNegotiationStrategy strategy : this.contentNegotiationStrategies) {_			if (strategy instanceof MediaTypeFileExtensionResolver) {_				this.fileExtensionResolvers.add((MediaTypeFileExtensionResolver) strategy)__			}_		}_	};create,an,instance,with,the,given,content,negotiation,strategy,instances,p,each,instance,is,checked,to,see,if,it,is,also,an,implementation,of,media,type,file,extension,resolver,and,if,so,it,is,registered,as,such,param,strategies,one,more,more,content,negotiation,strategy,instances;public,content,negotiation,manager,content,negotiation,strategy,strategies,assert,not,empty,strategies,at,least,one,content,negotiation,strategy,is,expected,this,content,negotiation,strategies,add,all,arrays,as,list,strategies,for,content,negotiation,strategy,strategy,this,content,negotiation,strategies,if,strategy,instanceof,media,type,file,extension,resolver,this,file,extension,resolvers,add,media,type,file,extension,resolver,strategy
ContentNegotiationManager -> public ContentNegotiationManager(ContentNegotiationStrategy... strategies);1355313310;Create an instance with the given ContentNegotiationStrategy instances._<p>Each instance is checked to see if it is also an implementation of_MediaTypeFileExtensionResolver, and if so it is registered as such._@param strategies one more more ContentNegotiationStrategy instances;public ContentNegotiationManager(ContentNegotiationStrategy... strategies) {_		Assert.notEmpty(strategies, "At least one ContentNegotiationStrategy is expected")__		this.contentNegotiationStrategies.addAll(Arrays.asList(strategies))__		for (ContentNegotiationStrategy strategy : this.contentNegotiationStrategies) {_			if (strategy instanceof MediaTypeFileExtensionResolver) {_				this.fileExtensionResolvers.add((MediaTypeFileExtensionResolver) strategy)__			}_		}_	};create,an,instance,with,the,given,content,negotiation,strategy,instances,p,each,instance,is,checked,to,see,if,it,is,also,an,implementation,of,media,type,file,extension,resolver,and,if,so,it,is,registered,as,such,param,strategies,one,more,more,content,negotiation,strategy,instances;public,content,negotiation,manager,content,negotiation,strategy,strategies,assert,not,empty,strategies,at,least,one,content,negotiation,strategy,is,expected,this,content,negotiation,strategies,add,all,arrays,as,list,strategies,for,content,negotiation,strategy,strategy,this,content,negotiation,strategies,if,strategy,instanceof,media,type,file,extension,resolver,this,file,extension,resolvers,add,media,type,file,extension,resolver,strategy
ContentNegotiationManager -> public ContentNegotiationManager(ContentNegotiationStrategy... strategies);1356735495;Create an instance with the given ContentNegotiationStrategy instances._<p>Each instance is checked to see if it is also an implementation of_MediaTypeFileExtensionResolver, and if so it is registered as such._@param strategies one more more ContentNegotiationStrategy instances;public ContentNegotiationManager(ContentNegotiationStrategy... strategies) {_		Assert.notEmpty(strategies, "At least one ContentNegotiationStrategy is expected")__		this.contentNegotiationStrategies.addAll(Arrays.asList(strategies))__		for (ContentNegotiationStrategy strategy : this.contentNegotiationStrategies) {_			if (strategy instanceof MediaTypeFileExtensionResolver) {_				this.fileExtensionResolvers.add((MediaTypeFileExtensionResolver) strategy)__			}_		}_	};create,an,instance,with,the,given,content,negotiation,strategy,instances,p,each,instance,is,checked,to,see,if,it,is,also,an,implementation,of,media,type,file,extension,resolver,and,if,so,it,is,registered,as,such,param,strategies,one,more,more,content,negotiation,strategy,instances;public,content,negotiation,manager,content,negotiation,strategy,strategies,assert,not,empty,strategies,at,least,one,content,negotiation,strategy,is,expected,this,content,negotiation,strategies,add,all,arrays,as,list,strategies,for,content,negotiation,strategy,strategy,this,content,negotiation,strategies,if,strategy,instanceof,media,type,file,extension,resolver,this,file,extension,resolvers,add,media,type,file,extension,resolver,strategy
ContentNegotiationManager -> public ContentNegotiationManager(ContentNegotiationStrategy... strategies);1357119239;Create an instance with the given ContentNegotiationStrategy instances._<p>Each instance is checked to see if it is also an implementation of_MediaTypeFileExtensionResolver, and if so it is registered as such._@param strategies one more more ContentNegotiationStrategy instances;public ContentNegotiationManager(ContentNegotiationStrategy... strategies) {_		Assert.notEmpty(strategies, "At least one ContentNegotiationStrategy is expected")__		this.contentNegotiationStrategies.addAll(Arrays.asList(strategies))__		for (ContentNegotiationStrategy strategy : this.contentNegotiationStrategies) {_			if (strategy instanceof MediaTypeFileExtensionResolver) {_				this.fileExtensionResolvers.add((MediaTypeFileExtensionResolver) strategy)__			}_		}_	};create,an,instance,with,the,given,content,negotiation,strategy,instances,p,each,instance,is,checked,to,see,if,it,is,also,an,implementation,of,media,type,file,extension,resolver,and,if,so,it,is,registered,as,such,param,strategies,one,more,more,content,negotiation,strategy,instances;public,content,negotiation,manager,content,negotiation,strategy,strategies,assert,not,empty,strategies,at,least,one,content,negotiation,strategy,is,expected,this,content,negotiation,strategies,add,all,arrays,as,list,strategies,for,content,negotiation,strategy,strategy,this,content,negotiation,strategies,if,strategy,instanceof,media,type,file,extension,resolver,this,file,extension,resolvers,add,media,type,file,extension,resolver,strategy
ContentNegotiationManager -> public ContentNegotiationManager(ContentNegotiationStrategy... strategies);1362408075;Create an instance with the given ContentNegotiationStrategy instances._<p>Each instance is checked to see if it is also an implementation of_MediaTypeFileExtensionResolver, and if so it is registered as such._@param strategies one more more ContentNegotiationStrategy instances;public ContentNegotiationManager(ContentNegotiationStrategy... strategies) {_		Assert.notEmpty(strategies, "At least one ContentNegotiationStrategy is expected")__		this.contentNegotiationStrategies.addAll(Arrays.asList(strategies))__		for (ContentNegotiationStrategy strategy : this.contentNegotiationStrategies) {_			if (strategy instanceof MediaTypeFileExtensionResolver) {_				this.fileExtensionResolvers.add((MediaTypeFileExtensionResolver) strategy)__			}_		}_	};create,an,instance,with,the,given,content,negotiation,strategy,instances,p,each,instance,is,checked,to,see,if,it,is,also,an,implementation,of,media,type,file,extension,resolver,and,if,so,it,is,registered,as,such,param,strategies,one,more,more,content,negotiation,strategy,instances;public,content,negotiation,manager,content,negotiation,strategy,strategies,assert,not,empty,strategies,at,least,one,content,negotiation,strategy,is,expected,this,content,negotiation,strategies,add,all,arrays,as,list,strategies,for,content,negotiation,strategy,strategy,this,content,negotiation,strategies,if,strategy,instanceof,media,type,file,extension,resolver,this,file,extension,resolvers,add,media,type,file,extension,resolver,strategy
ContentNegotiationManager -> public ContentNegotiationManager(ContentNegotiationStrategy... strategies);1368198615;Create an instance with the given ContentNegotiationStrategy instances._<p>Each instance is checked to see if it is also an implementation of_MediaTypeFileExtensionResolver, and if so it is registered as such._@param strategies one more more ContentNegotiationStrategy instances;public ContentNegotiationManager(ContentNegotiationStrategy... strategies) {_		Assert.notEmpty(strategies, "At least one ContentNegotiationStrategy is expected")__		this.contentNegotiationStrategies.addAll(Arrays.asList(strategies))__		for (ContentNegotiationStrategy strategy : this.contentNegotiationStrategies) {_			if (strategy instanceof MediaTypeFileExtensionResolver) {_				this.fileExtensionResolvers.add((MediaTypeFileExtensionResolver) strategy)__			}_		}_	};create,an,instance,with,the,given,content,negotiation,strategy,instances,p,each,instance,is,checked,to,see,if,it,is,also,an,implementation,of,media,type,file,extension,resolver,and,if,so,it,is,registered,as,such,param,strategies,one,more,more,content,negotiation,strategy,instances;public,content,negotiation,manager,content,negotiation,strategy,strategies,assert,not,empty,strategies,at,least,one,content,negotiation,strategy,is,expected,this,content,negotiation,strategies,add,all,arrays,as,list,strategies,for,content,negotiation,strategy,strategy,this,content,negotiation,strategies,if,strategy,instanceof,media,type,file,extension,resolver,this,file,extension,resolvers,add,media,type,file,extension,resolver,strategy
ContentNegotiationManager -> public ContentNegotiationManager(ContentNegotiationStrategy... strategies);1368482696;Create an instance with the given ContentNegotiationStrategy instances._<p>Each instance is checked to see if it is also an implementation of_MediaTypeFileExtensionResolver, and if so it is registered as such._@param strategies one more more ContentNegotiationStrategy instances;public ContentNegotiationManager(ContentNegotiationStrategy... strategies) {_		Assert.notEmpty(strategies, "At least one ContentNegotiationStrategy is expected")__		this.contentNegotiationStrategies.addAll(Arrays.asList(strategies))__		for (ContentNegotiationStrategy strategy : this.contentNegotiationStrategies) {_			if (strategy instanceof MediaTypeFileExtensionResolver) {_				this.fileExtensionResolvers.add((MediaTypeFileExtensionResolver) strategy)__			}_		}_	};create,an,instance,with,the,given,content,negotiation,strategy,instances,p,each,instance,is,checked,to,see,if,it,is,also,an,implementation,of,media,type,file,extension,resolver,and,if,so,it,is,registered,as,such,param,strategies,one,more,more,content,negotiation,strategy,instances;public,content,negotiation,manager,content,negotiation,strategy,strategies,assert,not,empty,strategies,at,least,one,content,negotiation,strategy,is,expected,this,content,negotiation,strategies,add,all,arrays,as,list,strategies,for,content,negotiation,strategy,strategy,this,content,negotiation,strategies,if,strategy,instanceof,media,type,file,extension,resolver,this,file,extension,resolvers,add,media,type,file,extension,resolver,strategy
ContentNegotiationManager -> public ContentNegotiationManager(ContentNegotiationStrategy... strategies);1443560917;Create an instance with the given list of_{@code ContentNegotiationStrategy} strategies each of which may also be_an instance of {@code MediaTypeFileExtensionResolver}._@param strategies the strategies to use;public ContentNegotiationManager(ContentNegotiationStrategy... strategies) {_		this(Arrays.asList(strategies))__	};create,an,instance,with,the,given,list,of,code,content,negotiation,strategy,strategies,each,of,which,may,also,be,an,instance,of,code,media,type,file,extension,resolver,param,strategies,the,strategies,to,use;public,content,negotiation,manager,content,negotiation,strategy,strategies,this,arrays,as,list,strategies
ContentNegotiationManager -> public ContentNegotiationManager(ContentNegotiationStrategy... strategies);1444898007;Create an instance with the given list of_{@code ContentNegotiationStrategy} strategies each of which may also be_an instance of {@code MediaTypeFileExtensionResolver}._@param strategies the strategies to use;public ContentNegotiationManager(ContentNegotiationStrategy... strategies) {_		this(Arrays.asList(strategies))__	};create,an,instance,with,the,given,list,of,code,content,negotiation,strategy,strategies,each,of,which,may,also,be,an,instance,of,code,media,type,file,extension,resolver,param,strategies,the,strategies,to,use;public,content,negotiation,manager,content,negotiation,strategy,strategies,this,arrays,as,list,strategies
ContentNegotiationManager -> public ContentNegotiationManager(ContentNegotiationStrategy... strategies);1446846341;Create an instance with the given list of_{@code ContentNegotiationStrategy} strategies each of which may also be_an instance of {@code MediaTypeFileExtensionResolver}._@param strategies the strategies to use;public ContentNegotiationManager(ContentNegotiationStrategy... strategies) {_		this(Arrays.asList(strategies))__	};create,an,instance,with,the,given,list,of,code,content,negotiation,strategy,strategies,each,of,which,may,also,be,an,instance,of,code,media,type,file,extension,resolver,param,strategies,the,strategies,to,use;public,content,negotiation,manager,content,negotiation,strategy,strategies,this,arrays,as,list,strategies
ContentNegotiationManager -> public ContentNegotiationManager(ContentNegotiationStrategy... strategies);1457125561;Create an instance with the given list of_{@code ContentNegotiationStrategy} strategies each of which may also be_an instance of {@code MediaTypeFileExtensionResolver}._@param strategies the strategies to use;public ContentNegotiationManager(ContentNegotiationStrategy... strategies) {_		this(Arrays.asList(strategies))__	};create,an,instance,with,the,given,list,of,code,content,negotiation,strategy,strategies,each,of,which,may,also,be,an,instance,of,code,media,type,file,extension,resolver,param,strategies,the,strategies,to,use;public,content,negotiation,manager,content,negotiation,strategy,strategies,this,arrays,as,list,strategies
ContentNegotiationManager -> public ContentNegotiationManager(ContentNegotiationStrategy... strategies);1464879764;Create an instance with the given list of_{@code ContentNegotiationStrategy} strategies each of which may also be_an instance of {@code MediaTypeFileExtensionResolver}._@param strategies the strategies to use;public ContentNegotiationManager(ContentNegotiationStrategy... strategies) {_		this(Arrays.asList(strategies))__	};create,an,instance,with,the,given,list,of,code,content,negotiation,strategy,strategies,each,of,which,may,also,be,an,instance,of,code,media,type,file,extension,resolver,param,strategies,the,strategies,to,use;public,content,negotiation,manager,content,negotiation,strategy,strategies,this,arrays,as,list,strategies
ContentNegotiationManager -> public ContentNegotiationManager(ContentNegotiationStrategy... strategies);1467730834;Create an instance with the given list of_{@code ContentNegotiationStrategy} strategies each of which may also be_an instance of {@code MediaTypeFileExtensionResolver}._@param strategies the strategies to use;public ContentNegotiationManager(ContentNegotiationStrategy... strategies) {_		this(Arrays.asList(strategies))__	};create,an,instance,with,the,given,list,of,code,content,negotiation,strategy,strategies,each,of,which,may,also,be,an,instance,of,code,media,type,file,extension,resolver,param,strategies,the,strategies,to,use;public,content,negotiation,manager,content,negotiation,strategy,strategies,this,arrays,as,list,strategies
ContentNegotiationManager -> public ContentNegotiationManager(ContentNegotiationStrategy... strategies);1486062666;Create an instance with the given list of_{@code ContentNegotiationStrategy} strategies each of which may also be_an instance of {@code MediaTypeFileExtensionResolver}._@param strategies the strategies to use;public ContentNegotiationManager(ContentNegotiationStrategy... strategies) {_		this(Arrays.asList(strategies))__	};create,an,instance,with,the,given,list,of,code,content,negotiation,strategy,strategies,each,of,which,may,also,be,an,instance,of,code,media,type,file,extension,resolver,param,strategies,the,strategies,to,use;public,content,negotiation,manager,content,negotiation,strategy,strategies,this,arrays,as,list,strategies
ContentNegotiationManager -> public ContentNegotiationManager(ContentNegotiationStrategy... strategies);1490104706;Create an instance with the given list of_{@code ContentNegotiationStrategy} strategies each of which may also be_an instance of {@code MediaTypeFileExtensionResolver}._@param strategies the strategies to use;public ContentNegotiationManager(ContentNegotiationStrategy... strategies) {_		this(Arrays.asList(strategies))__	};create,an,instance,with,the,given,list,of,code,content,negotiation,strategy,strategies,each,of,which,may,also,be,an,instance,of,code,media,type,file,extension,resolver,param,strategies,the,strategies,to,use;public,content,negotiation,manager,content,negotiation,strategy,strategies,this,arrays,as,list,strategies
ContentNegotiationManager -> public ContentNegotiationManager(ContentNegotiationStrategy... strategies);1490285806;Create an instance with the given list of_{@code ContentNegotiationStrategy} strategies each of which may also be_an instance of {@code MediaTypeFileExtensionResolver}._@param strategies the strategies to use;public ContentNegotiationManager(ContentNegotiationStrategy... strategies) {_		this(Arrays.asList(strategies))__	};create,an,instance,with,the,given,list,of,code,content,negotiation,strategy,strategies,each,of,which,may,also,be,an,instance,of,code,media,type,file,extension,resolver,param,strategies,the,strategies,to,use;public,content,negotiation,manager,content,negotiation,strategy,strategies,this,arrays,as,list,strategies
ContentNegotiationManager -> public ContentNegotiationManager(ContentNegotiationStrategy... strategies);1495868221;Create an instance with the given list of_{@code ContentNegotiationStrategy} strategies each of which may also be_an instance of {@code MediaTypeFileExtensionResolver}._@param strategies the strategies to use;public ContentNegotiationManager(ContentNegotiationStrategy... strategies) {_		this(Arrays.asList(strategies))__	};create,an,instance,with,the,given,list,of,code,content,negotiation,strategy,strategies,each,of,which,may,also,be,an,instance,of,code,media,type,file,extension,resolver,param,strategies,the,strategies,to,use;public,content,negotiation,manager,content,negotiation,strategy,strategies,this,arrays,as,list,strategies
ContentNegotiationManager -> public ContentNegotiationManager(ContentNegotiationStrategy... strategies);1499788456;Create an instance with the given list of_{@code ContentNegotiationStrategy} strategies each of which may also be_an instance of {@code MediaTypeFileExtensionResolver}._@param strategies the strategies to use;public ContentNegotiationManager(ContentNegotiationStrategy... strategies) {_		this(Arrays.asList(strategies))__	};create,an,instance,with,the,given,list,of,code,content,negotiation,strategy,strategies,each,of,which,may,also,be,an,instance,of,code,media,type,file,extension,resolver,param,strategies,the,strategies,to,use;public,content,negotiation,manager,content,negotiation,strategy,strategies,this,arrays,as,list,strategies
ContentNegotiationManager -> public ContentNegotiationManager(ContentNegotiationStrategy... strategies);1506534768;Create an instance with the given list of_{@code ContentNegotiationStrategy} strategies each of which may also be_an instance of {@code MediaTypeFileExtensionResolver}._@param strategies the strategies to use;public ContentNegotiationManager(ContentNegotiationStrategy... strategies) {_		this(Arrays.asList(strategies))__	};create,an,instance,with,the,given,list,of,code,content,negotiation,strategy,strategies,each,of,which,may,also,be,an,instance,of,code,media,type,file,extension,resolver,param,strategies,the,strategies,to,use;public,content,negotiation,manager,content,negotiation,strategy,strategies,this,arrays,as,list,strategies
ContentNegotiationManager -> public ContentNegotiationManager(ContentNegotiationStrategy... strategies);1519514499;Create an instance with the given list of_{@code ContentNegotiationStrategy} strategies each of which may also be_an instance of {@code MediaTypeFileExtensionResolver}._@param strategies the strategies to use;public ContentNegotiationManager(ContentNegotiationStrategy... strategies) {_		this(Arrays.asList(strategies))__	};create,an,instance,with,the,given,list,of,code,content,negotiation,strategy,strategies,each,of,which,may,also,be,an,instance,of,code,media,type,file,extension,resolver,param,strategies,the,strategies,to,use;public,content,negotiation,manager,content,negotiation,strategy,strategies,this,arrays,as,list,strategies
ContentNegotiationManager -> public ContentNegotiationManager(ContentNegotiationStrategy... strategies);1522184059;Create an instance with the given list of_{@code ContentNegotiationStrategy} strategies each of which may also be_an instance of {@code MediaTypeFileExtensionResolver}._@param strategies the strategies to use;public ContentNegotiationManager(ContentNegotiationStrategy... strategies) {_		this(Arrays.asList(strategies))__	};create,an,instance,with,the,given,list,of,code,content,negotiation,strategy,strategies,each,of,which,may,also,be,an,instance,of,code,media,type,file,extension,resolver,param,strategies,the,strategies,to,use;public,content,negotiation,manager,content,negotiation,strategy,strategies,this,arrays,as,list,strategies
ContentNegotiationManager -> public ContentNegotiationManager();1340380546;Create an instance with a {@link HeaderContentNegotiationStrategy}.;public ContentNegotiationManager() {_		this(new HeaderContentNegotiationStrategy())__	};create,an,instance,with,a,link,header,content,negotiation,strategy;public,content,negotiation,manager,this,new,header,content,negotiation,strategy
ContentNegotiationManager -> public ContentNegotiationManager();1340652245;Create an instance with a {@link HeaderContentNegotiationStrategy}.;public ContentNegotiationManager() {_		this(new HeaderContentNegotiationStrategy())__	};create,an,instance,with,a,link,header,content,negotiation,strategy;public,content,negotiation,manager,this,new,header,content,negotiation,strategy
ContentNegotiationManager -> public ContentNegotiationManager();1340674210;Create an instance with a {@link HeaderContentNegotiationStrategy}.;public ContentNegotiationManager() {_		this(new HeaderContentNegotiationStrategy())__	};create,an,instance,with,a,link,header,content,negotiation,strategy;public,content,negotiation,manager,this,new,header,content,negotiation,strategy
ContentNegotiationManager -> public ContentNegotiationManager();1342834322;Create an instance with a {@link HeaderContentNegotiationStrategy}.;public ContentNegotiationManager() {_		this(new HeaderContentNegotiationStrategy())__	};create,an,instance,with,a,link,header,content,negotiation,strategy;public,content,negotiation,manager,this,new,header,content,negotiation,strategy
ContentNegotiationManager -> public ContentNegotiationManager();1355313310;Create an instance with a {@link HeaderContentNegotiationStrategy}.;public ContentNegotiationManager() {_		this(new HeaderContentNegotiationStrategy())__	};create,an,instance,with,a,link,header,content,negotiation,strategy;public,content,negotiation,manager,this,new,header,content,negotiation,strategy
ContentNegotiationManager -> public ContentNegotiationManager();1356735495;Create an instance with a {@link HeaderContentNegotiationStrategy}.;public ContentNegotiationManager() {_		this(new HeaderContentNegotiationStrategy())__	};create,an,instance,with,a,link,header,content,negotiation,strategy;public,content,negotiation,manager,this,new,header,content,negotiation,strategy
ContentNegotiationManager -> public ContentNegotiationManager();1357119239;Create an instance with a {@link HeaderContentNegotiationStrategy}.;public ContentNegotiationManager() {_		this(new HeaderContentNegotiationStrategy())__	};create,an,instance,with,a,link,header,content,negotiation,strategy;public,content,negotiation,manager,this,new,header,content,negotiation,strategy
ContentNegotiationManager -> public ContentNegotiationManager();1362408075;Create a default instance with a {@link HeaderContentNegotiationStrategy}.;public ContentNegotiationManager() {_		this(new HeaderContentNegotiationStrategy())__	};create,a,default,instance,with,a,link,header,content,negotiation,strategy;public,content,negotiation,manager,this,new,header,content,negotiation,strategy
ContentNegotiationManager -> public ContentNegotiationManager();1368198615;Create a default instance with a {@link HeaderContentNegotiationStrategy}.;public ContentNegotiationManager() {_		this(new HeaderContentNegotiationStrategy())__	};create,a,default,instance,with,a,link,header,content,negotiation,strategy;public,content,negotiation,manager,this,new,header,content,negotiation,strategy
ContentNegotiationManager -> public ContentNegotiationManager();1368482696;Create a default instance with a {@link HeaderContentNegotiationStrategy}.;public ContentNegotiationManager() {_		this(new HeaderContentNegotiationStrategy())__	};create,a,default,instance,with,a,link,header,content,negotiation,strategy;public,content,negotiation,manager,this,new,header,content,negotiation,strategy
ContentNegotiationManager -> public ContentNegotiationManager();1443560917;Create a default instance with a {@link HeaderContentNegotiationStrategy}.;public ContentNegotiationManager() {_		this(new HeaderContentNegotiationStrategy())__	};create,a,default,instance,with,a,link,header,content,negotiation,strategy;public,content,negotiation,manager,this,new,header,content,negotiation,strategy
ContentNegotiationManager -> public ContentNegotiationManager();1444898007;Create a default instance with a {@link HeaderContentNegotiationStrategy}.;public ContentNegotiationManager() {_		this(new HeaderContentNegotiationStrategy())__	};create,a,default,instance,with,a,link,header,content,negotiation,strategy;public,content,negotiation,manager,this,new,header,content,negotiation,strategy
ContentNegotiationManager -> public ContentNegotiationManager();1446846341;Create a default instance with a {@link HeaderContentNegotiationStrategy}.;public ContentNegotiationManager() {_		this(new HeaderContentNegotiationStrategy())__	};create,a,default,instance,with,a,link,header,content,negotiation,strategy;public,content,negotiation,manager,this,new,header,content,negotiation,strategy
ContentNegotiationManager -> public ContentNegotiationManager();1457125561;Create a default instance with a {@link HeaderContentNegotiationStrategy}.;public ContentNegotiationManager() {_		this(new HeaderContentNegotiationStrategy())__	};create,a,default,instance,with,a,link,header,content,negotiation,strategy;public,content,negotiation,manager,this,new,header,content,negotiation,strategy
ContentNegotiationManager -> public ContentNegotiationManager();1464879764;Create a default instance with a {@link HeaderContentNegotiationStrategy}.;public ContentNegotiationManager() {_		this(new HeaderContentNegotiationStrategy())__	};create,a,default,instance,with,a,link,header,content,negotiation,strategy;public,content,negotiation,manager,this,new,header,content,negotiation,strategy
ContentNegotiationManager -> public ContentNegotiationManager();1467730834;Create a default instance with a {@link HeaderContentNegotiationStrategy}.;public ContentNegotiationManager() {_		this(new HeaderContentNegotiationStrategy())__	};create,a,default,instance,with,a,link,header,content,negotiation,strategy;public,content,negotiation,manager,this,new,header,content,negotiation,strategy
ContentNegotiationManager -> public ContentNegotiationManager();1486062666;Create a default instance with a {@link HeaderContentNegotiationStrategy}.;public ContentNegotiationManager() {_		this(new HeaderContentNegotiationStrategy())__	};create,a,default,instance,with,a,link,header,content,negotiation,strategy;public,content,negotiation,manager,this,new,header,content,negotiation,strategy
ContentNegotiationManager -> public ContentNegotiationManager();1490104706;Create a default instance with a {@link HeaderContentNegotiationStrategy}.;public ContentNegotiationManager() {_		this(new HeaderContentNegotiationStrategy())__	};create,a,default,instance,with,a,link,header,content,negotiation,strategy;public,content,negotiation,manager,this,new,header,content,negotiation,strategy
ContentNegotiationManager -> public ContentNegotiationManager();1490285806;Create a default instance with a {@link HeaderContentNegotiationStrategy}.;public ContentNegotiationManager() {_		this(new HeaderContentNegotiationStrategy())__	};create,a,default,instance,with,a,link,header,content,negotiation,strategy;public,content,negotiation,manager,this,new,header,content,negotiation,strategy
ContentNegotiationManager -> public ContentNegotiationManager();1495868221;Create a default instance with a {@link HeaderContentNegotiationStrategy}.;public ContentNegotiationManager() {_		this(new HeaderContentNegotiationStrategy())__	};create,a,default,instance,with,a,link,header,content,negotiation,strategy;public,content,negotiation,manager,this,new,header,content,negotiation,strategy
ContentNegotiationManager -> public ContentNegotiationManager();1499788456;Create a default instance with a {@link HeaderContentNegotiationStrategy}.;public ContentNegotiationManager() {_		this(new HeaderContentNegotiationStrategy())__	};create,a,default,instance,with,a,link,header,content,negotiation,strategy;public,content,negotiation,manager,this,new,header,content,negotiation,strategy
ContentNegotiationManager -> public ContentNegotiationManager();1506534768;Create a default instance with a {@link HeaderContentNegotiationStrategy}.;public ContentNegotiationManager() {_		this(new HeaderContentNegotiationStrategy())__	};create,a,default,instance,with,a,link,header,content,negotiation,strategy;public,content,negotiation,manager,this,new,header,content,negotiation,strategy
ContentNegotiationManager -> public ContentNegotiationManager();1519514499;Create a default instance with a {@link HeaderContentNegotiationStrategy}.;public ContentNegotiationManager() {_		this(new HeaderContentNegotiationStrategy())__	};create,a,default,instance,with,a,link,header,content,negotiation,strategy;public,content,negotiation,manager,this,new,header,content,negotiation,strategy
ContentNegotiationManager -> public ContentNegotiationManager();1522184059;Create a default instance with a {@link HeaderContentNegotiationStrategy}.;public ContentNegotiationManager() {_		this(new HeaderContentNegotiationStrategy())__	};create,a,default,instance,with,a,link,header,content,negotiation,strategy;public,content,negotiation,manager,this,new,header,content,negotiation,strategy
ContentNegotiationManager -> public List<String> resolveFileExtensions(MediaType mediaType);1340652245;Delegate to all configured MediaTypeFileExtensionResolver instances and aggregate_the list of all file extensions found.;public List<String> resolveFileExtensions(MediaType mediaType) {_		Set<String> extensions = new LinkedHashSet<String>()__		for (MediaTypeFileExtensionResolver resolver : this.fileExtensionResolvers) {_			extensions.addAll(resolver.resolveFileExtensions(mediaType))__		}_		return new ArrayList<String>(extensions)__	};delegate,to,all,configured,media,type,file,extension,resolver,instances,and,aggregate,the,list,of,all,file,extensions,found;public,list,string,resolve,file,extensions,media,type,media,type,set,string,extensions,new,linked,hash,set,string,for,media,type,file,extension,resolver,resolver,this,file,extension,resolvers,extensions,add,all,resolver,resolve,file,extensions,media,type,return,new,array,list,string,extensions
ContentNegotiationManager -> public List<String> resolveFileExtensions(MediaType mediaType);1340674210;Delegate to all configured MediaTypeFileExtensionResolver instances and aggregate_the list of all file extensions found.;public List<String> resolveFileExtensions(MediaType mediaType) {_		Set<String> result = new LinkedHashSet<String>()__		for (MediaTypeFileExtensionResolver resolver : this.fileExtensionResolvers) {_			result.addAll(resolver.resolveFileExtensions(mediaType))__		}_		return new ArrayList<String>(result)__	};delegate,to,all,configured,media,type,file,extension,resolver,instances,and,aggregate,the,list,of,all,file,extensions,found;public,list,string,resolve,file,extensions,media,type,media,type,set,string,result,new,linked,hash,set,string,for,media,type,file,extension,resolver,resolver,this,file,extension,resolvers,result,add,all,resolver,resolve,file,extensions,media,type,return,new,array,list,string,result
ContentNegotiationManager -> public List<String> resolveFileExtensions(MediaType mediaType);1342834322;Delegate to all configured MediaTypeFileExtensionResolver instances and aggregate_the list of all file extensions found.;public List<String> resolveFileExtensions(MediaType mediaType) {_		Set<String> result = new LinkedHashSet<String>()__		for (MediaTypeFileExtensionResolver resolver : this.fileExtensionResolvers) {_			result.addAll(resolver.resolveFileExtensions(mediaType))__		}_		return new ArrayList<String>(result)__	};delegate,to,all,configured,media,type,file,extension,resolver,instances,and,aggregate,the,list,of,all,file,extensions,found;public,list,string,resolve,file,extensions,media,type,media,type,set,string,result,new,linked,hash,set,string,for,media,type,file,extension,resolver,resolver,this,file,extension,resolvers,result,add,all,resolver,resolve,file,extensions,media,type,return,new,array,list,string,result
ContentNegotiationManager -> public List<String> resolveFileExtensions(MediaType mediaType);1355313310;Delegate to all configured MediaTypeFileExtensionResolver instances and aggregate_the list of all file extensions found.;public List<String> resolveFileExtensions(MediaType mediaType) {_		Set<String> result = new LinkedHashSet<String>()__		for (MediaTypeFileExtensionResolver resolver : this.fileExtensionResolvers) {_			result.addAll(resolver.resolveFileExtensions(mediaType))__		}_		return new ArrayList<String>(result)__	};delegate,to,all,configured,media,type,file,extension,resolver,instances,and,aggregate,the,list,of,all,file,extensions,found;public,list,string,resolve,file,extensions,media,type,media,type,set,string,result,new,linked,hash,set,string,for,media,type,file,extension,resolver,resolver,this,file,extension,resolvers,result,add,all,resolver,resolve,file,extensions,media,type,return,new,array,list,string,result
ContentNegotiationManager -> public List<String> resolveFileExtensions(MediaType mediaType);1357119239;Delegate to all configured MediaTypeFileExtensionResolver instances and aggregate_the list of all file extensions found.;public List<String> resolveFileExtensions(MediaType mediaType) {_		Set<String> result = new LinkedHashSet<String>()__		for (MediaTypeFileExtensionResolver resolver : this.fileExtensionResolvers) {_			result.addAll(resolver.resolveFileExtensions(mediaType))__		}_		return new ArrayList<String>(result)__	};delegate,to,all,configured,media,type,file,extension,resolver,instances,and,aggregate,the,list,of,all,file,extensions,found;public,list,string,resolve,file,extensions,media,type,media,type,set,string,result,new,linked,hash,set,string,for,media,type,file,extension,resolver,resolver,this,file,extension,resolvers,result,add,all,resolver,resolve,file,extensions,media,type,return,new,array,list,string,result
ContentNegotiationManager -> public List<String> resolveFileExtensions(MediaType mediaType);1362408075;Delegate to all configured MediaTypeFileExtensionResolver instances and aggregate_the list of all file extensions found.;public List<String> resolveFileExtensions(MediaType mediaType) {_		Set<String> result = new LinkedHashSet<String>()__		for (MediaTypeFileExtensionResolver resolver : this.fileExtensionResolvers) {_			result.addAll(resolver.resolveFileExtensions(mediaType))__		}_		return new ArrayList<String>(result)__	};delegate,to,all,configured,media,type,file,extension,resolver,instances,and,aggregate,the,list,of,all,file,extensions,found;public,list,string,resolve,file,extensions,media,type,media,type,set,string,result,new,linked,hash,set,string,for,media,type,file,extension,resolver,resolver,this,file,extension,resolvers,result,add,all,resolver,resolve,file,extensions,media,type,return,new,array,list,string,result
ContentNegotiationManager -> public List<String> resolveFileExtensions(MediaType mediaType);1368198615;Delegate to all configured MediaTypeFileExtensionResolver instances and aggregate_the list of all file extensions found.;public List<String> resolveFileExtensions(MediaType mediaType) {_		Set<String> result = new LinkedHashSet<String>()__		for (MediaTypeFileExtensionResolver resolver : this.fileExtensionResolvers) {_			result.addAll(resolver.resolveFileExtensions(mediaType))__		}_		return new ArrayList<String>(result)__	};delegate,to,all,configured,media,type,file,extension,resolver,instances,and,aggregate,the,list,of,all,file,extensions,found;public,list,string,resolve,file,extensions,media,type,media,type,set,string,result,new,linked,hash,set,string,for,media,type,file,extension,resolver,resolver,this,file,extension,resolvers,result,add,all,resolver,resolve,file,extensions,media,type,return,new,array,list,string,result
ContentNegotiationManager -> public ContentNegotiationManager(Collection<ContentNegotiationStrategy> strategies);1362408075;Create an instance with the given ContentNegotiationStrategy instances._<p>Each instance is checked to see if it is also an implementation of_MediaTypeFileExtensionResolver, and if so it is registered as such._@param strategies one more more ContentNegotiationStrategy instances;public ContentNegotiationManager(Collection<ContentNegotiationStrategy> strategies) {_		Assert.notEmpty(strategies, "At least one ContentNegotiationStrategy is expected")__		this.contentNegotiationStrategies.addAll(strategies)__		for (ContentNegotiationStrategy strategy : this.contentNegotiationStrategies) {_			if (strategy instanceof MediaTypeFileExtensionResolver) {_				this.fileExtensionResolvers.add((MediaTypeFileExtensionResolver) strategy)__			}_		}_	};create,an,instance,with,the,given,content,negotiation,strategy,instances,p,each,instance,is,checked,to,see,if,it,is,also,an,implementation,of,media,type,file,extension,resolver,and,if,so,it,is,registered,as,such,param,strategies,one,more,more,content,negotiation,strategy,instances;public,content,negotiation,manager,collection,content,negotiation,strategy,strategies,assert,not,empty,strategies,at,least,one,content,negotiation,strategy,is,expected,this,content,negotiation,strategies,add,all,strategies,for,content,negotiation,strategy,strategy,this,content,negotiation,strategies,if,strategy,instanceof,media,type,file,extension,resolver,this,file,extension,resolvers,add,media,type,file,extension,resolver,strategy
ContentNegotiationManager -> public ContentNegotiationManager(Collection<ContentNegotiationStrategy> strategies);1368198615;Create an instance with the given ContentNegotiationStrategy instances._<p>Each instance is checked to see if it is also an implementation of_MediaTypeFileExtensionResolver, and if so it is registered as such._@param strategies one more more ContentNegotiationStrategy instances;public ContentNegotiationManager(Collection<ContentNegotiationStrategy> strategies) {_		Assert.notEmpty(strategies, "At least one ContentNegotiationStrategy is expected")__		this.contentNegotiationStrategies.addAll(strategies)__		for (ContentNegotiationStrategy strategy : this.contentNegotiationStrategies) {_			if (strategy instanceof MediaTypeFileExtensionResolver) {_				this.fileExtensionResolvers.add((MediaTypeFileExtensionResolver) strategy)__			}_		}_	};create,an,instance,with,the,given,content,negotiation,strategy,instances,p,each,instance,is,checked,to,see,if,it,is,also,an,implementation,of,media,type,file,extension,resolver,and,if,so,it,is,registered,as,such,param,strategies,one,more,more,content,negotiation,strategy,instances;public,content,negotiation,manager,collection,content,negotiation,strategy,strategies,assert,not,empty,strategies,at,least,one,content,negotiation,strategy,is,expected,this,content,negotiation,strategies,add,all,strategies,for,content,negotiation,strategy,strategy,this,content,negotiation,strategies,if,strategy,instanceof,media,type,file,extension,resolver,this,file,extension,resolvers,add,media,type,file,extension,resolver,strategy
ContentNegotiationManager -> public ContentNegotiationManager(Collection<ContentNegotiationStrategy> strategies);1368482696;Create an instance with the given ContentNegotiationStrategy instances._<p>Each instance is checked to see if it is also an implementation of_MediaTypeFileExtensionResolver, and if so it is registered as such._@param strategies one more more ContentNegotiationStrategy instances;public ContentNegotiationManager(Collection<ContentNegotiationStrategy> strategies) {_		Assert.notEmpty(strategies, "At least one ContentNegotiationStrategy is expected")__		this.contentNegotiationStrategies.addAll(strategies)__		for (ContentNegotiationStrategy strategy : this.contentNegotiationStrategies) {_			if (strategy instanceof MediaTypeFileExtensionResolver) {_				this.fileExtensionResolvers.add((MediaTypeFileExtensionResolver) strategy)__			}_		}_	};create,an,instance,with,the,given,content,negotiation,strategy,instances,p,each,instance,is,checked,to,see,if,it,is,also,an,implementation,of,media,type,file,extension,resolver,and,if,so,it,is,registered,as,such,param,strategies,one,more,more,content,negotiation,strategy,instances;public,content,negotiation,manager,collection,content,negotiation,strategy,strategies,assert,not,empty,strategies,at,least,one,content,negotiation,strategy,is,expected,this,content,negotiation,strategies,add,all,strategies,for,content,negotiation,strategy,strategy,this,content,negotiation,strategies,if,strategy,instanceof,media,type,file,extension,resolver,this,file,extension,resolvers,add,media,type,file,extension,resolver,strategy
ContentNegotiationManager -> public ContentNegotiationManager(Collection<ContentNegotiationStrategy> strategies);1443560917;A collection-based alternative to_{@link #ContentNegotiationManager(ContentNegotiationStrategy...)}._@param strategies the strategies to use;public ContentNegotiationManager(Collection<ContentNegotiationStrategy> strategies) {_		Assert.notEmpty(strategies, "At least one ContentNegotiationStrategy is expected")__		this.strategies.addAll(strategies)__		for (ContentNegotiationStrategy strategy : this.strategies) {_			if (strategy instanceof MediaTypeFileExtensionResolver) {_				this.resolvers.add((MediaTypeFileExtensionResolver) strategy)__			}_		}_	};a,collection,based,alternative,to,link,content,negotiation,manager,content,negotiation,strategy,param,strategies,the,strategies,to,use;public,content,negotiation,manager,collection,content,negotiation,strategy,strategies,assert,not,empty,strategies,at,least,one,content,negotiation,strategy,is,expected,this,strategies,add,all,strategies,for,content,negotiation,strategy,strategy,this,strategies,if,strategy,instanceof,media,type,file,extension,resolver,this,resolvers,add,media,type,file,extension,resolver,strategy
ContentNegotiationManager -> public ContentNegotiationManager(Collection<ContentNegotiationStrategy> strategies);1444898007;A collection-based alternative to_{@link #ContentNegotiationManager(ContentNegotiationStrategy...)}._@param strategies the strategies to use;public ContentNegotiationManager(Collection<ContentNegotiationStrategy> strategies) {_		Assert.notEmpty(strategies, "At least one ContentNegotiationStrategy is expected")__		this.strategies.addAll(strategies)__		for (ContentNegotiationStrategy strategy : this.strategies) {_			if (strategy instanceof MediaTypeFileExtensionResolver) {_				this.resolvers.add((MediaTypeFileExtensionResolver) strategy)__			}_		}_	};a,collection,based,alternative,to,link,content,negotiation,manager,content,negotiation,strategy,param,strategies,the,strategies,to,use;public,content,negotiation,manager,collection,content,negotiation,strategy,strategies,assert,not,empty,strategies,at,least,one,content,negotiation,strategy,is,expected,this,strategies,add,all,strategies,for,content,negotiation,strategy,strategy,this,strategies,if,strategy,instanceof,media,type,file,extension,resolver,this,resolvers,add,media,type,file,extension,resolver,strategy
ContentNegotiationManager -> public ContentNegotiationManager(Collection<ContentNegotiationStrategy> strategies);1446846341;A collection-based alternative to_{@link #ContentNegotiationManager(ContentNegotiationStrategy...)}._@param strategies the strategies to use;public ContentNegotiationManager(Collection<ContentNegotiationStrategy> strategies) {_		Assert.notEmpty(strategies, "At least one ContentNegotiationStrategy is expected")__		this.strategies.addAll(strategies)__		for (ContentNegotiationStrategy strategy : this.strategies) {_			if (strategy instanceof MediaTypeFileExtensionResolver) {_				this.resolvers.add((MediaTypeFileExtensionResolver) strategy)__			}_		}_	};a,collection,based,alternative,to,link,content,negotiation,manager,content,negotiation,strategy,param,strategies,the,strategies,to,use;public,content,negotiation,manager,collection,content,negotiation,strategy,strategies,assert,not,empty,strategies,at,least,one,content,negotiation,strategy,is,expected,this,strategies,add,all,strategies,for,content,negotiation,strategy,strategy,this,strategies,if,strategy,instanceof,media,type,file,extension,resolver,this,resolvers,add,media,type,file,extension,resolver,strategy
ContentNegotiationManager -> public ContentNegotiationManager(Collection<ContentNegotiationStrategy> strategies);1457125561;A collection-based alternative to_{@link #ContentNegotiationManager(ContentNegotiationStrategy...)}._@param strategies the strategies to use;public ContentNegotiationManager(Collection<ContentNegotiationStrategy> strategies) {_		Assert.notEmpty(strategies, "At least one ContentNegotiationStrategy is expected")__		this.strategies.addAll(strategies)__		for (ContentNegotiationStrategy strategy : this.strategies) {_			if (strategy instanceof MediaTypeFileExtensionResolver) {_				this.resolvers.add((MediaTypeFileExtensionResolver) strategy)__			}_		}_	};a,collection,based,alternative,to,link,content,negotiation,manager,content,negotiation,strategy,param,strategies,the,strategies,to,use;public,content,negotiation,manager,collection,content,negotiation,strategy,strategies,assert,not,empty,strategies,at,least,one,content,negotiation,strategy,is,expected,this,strategies,add,all,strategies,for,content,negotiation,strategy,strategy,this,strategies,if,strategy,instanceof,media,type,file,extension,resolver,this,resolvers,add,media,type,file,extension,resolver,strategy
ContentNegotiationManager -> public ContentNegotiationManager(Collection<ContentNegotiationStrategy> strategies);1464879764;A collection-based alternative to_{@link #ContentNegotiationManager(ContentNegotiationStrategy...)}._@param strategies the strategies to use;public ContentNegotiationManager(Collection<ContentNegotiationStrategy> strategies) {_		Assert.notEmpty(strategies, "At least one ContentNegotiationStrategy is expected")__		this.strategies.addAll(strategies)__		for (ContentNegotiationStrategy strategy : this.strategies) {_			if (strategy instanceof MediaTypeFileExtensionResolver) {_				this.resolvers.add((MediaTypeFileExtensionResolver) strategy)__			}_		}_	};a,collection,based,alternative,to,link,content,negotiation,manager,content,negotiation,strategy,param,strategies,the,strategies,to,use;public,content,negotiation,manager,collection,content,negotiation,strategy,strategies,assert,not,empty,strategies,at,least,one,content,negotiation,strategy,is,expected,this,strategies,add,all,strategies,for,content,negotiation,strategy,strategy,this,strategies,if,strategy,instanceof,media,type,file,extension,resolver,this,resolvers,add,media,type,file,extension,resolver,strategy
ContentNegotiationManager -> public ContentNegotiationManager(Collection<ContentNegotiationStrategy> strategies);1467730834;A collection-based alternative to_{@link #ContentNegotiationManager(ContentNegotiationStrategy...)}._@param strategies the strategies to use;public ContentNegotiationManager(Collection<ContentNegotiationStrategy> strategies) {_		Assert.notEmpty(strategies, "At least one ContentNegotiationStrategy is expected")__		this.strategies.addAll(strategies)__		for (ContentNegotiationStrategy strategy : this.strategies) {_			if (strategy instanceof MediaTypeFileExtensionResolver) {_				this.resolvers.add((MediaTypeFileExtensionResolver) strategy)__			}_		}_	};a,collection,based,alternative,to,link,content,negotiation,manager,content,negotiation,strategy,param,strategies,the,strategies,to,use;public,content,negotiation,manager,collection,content,negotiation,strategy,strategies,assert,not,empty,strategies,at,least,one,content,negotiation,strategy,is,expected,this,strategies,add,all,strategies,for,content,negotiation,strategy,strategy,this,strategies,if,strategy,instanceof,media,type,file,extension,resolver,this,resolvers,add,media,type,file,extension,resolver,strategy
ContentNegotiationManager -> public ContentNegotiationManager(Collection<ContentNegotiationStrategy> strategies);1486062666;A collection-based alternative to_{@link #ContentNegotiationManager(ContentNegotiationStrategy...)}._@param strategies the strategies to use;public ContentNegotiationManager(Collection<ContentNegotiationStrategy> strategies) {_		Assert.notEmpty(strategies, "At least one ContentNegotiationStrategy is expected")__		this.strategies.addAll(strategies)__		for (ContentNegotiationStrategy strategy : this.strategies) {_			if (strategy instanceof MediaTypeFileExtensionResolver) {_				this.resolvers.add((MediaTypeFileExtensionResolver) strategy)__			}_		}_	};a,collection,based,alternative,to,link,content,negotiation,manager,content,negotiation,strategy,param,strategies,the,strategies,to,use;public,content,negotiation,manager,collection,content,negotiation,strategy,strategies,assert,not,empty,strategies,at,least,one,content,negotiation,strategy,is,expected,this,strategies,add,all,strategies,for,content,negotiation,strategy,strategy,this,strategies,if,strategy,instanceof,media,type,file,extension,resolver,this,resolvers,add,media,type,file,extension,resolver,strategy
ContentNegotiationManager -> public ContentNegotiationManager(Collection<ContentNegotiationStrategy> strategies);1490104706;A collection-based alternative to_{@link #ContentNegotiationManager(ContentNegotiationStrategy...)}._@param strategies the strategies to use;public ContentNegotiationManager(Collection<ContentNegotiationStrategy> strategies) {_		Assert.notEmpty(strategies, "At least one ContentNegotiationStrategy is expected")__		this.strategies.addAll(strategies)__		for (ContentNegotiationStrategy strategy : this.strategies) {_			if (strategy instanceof MediaTypeFileExtensionResolver) {_				this.resolvers.add((MediaTypeFileExtensionResolver) strategy)__			}_		}_	};a,collection,based,alternative,to,link,content,negotiation,manager,content,negotiation,strategy,param,strategies,the,strategies,to,use;public,content,negotiation,manager,collection,content,negotiation,strategy,strategies,assert,not,empty,strategies,at,least,one,content,negotiation,strategy,is,expected,this,strategies,add,all,strategies,for,content,negotiation,strategy,strategy,this,strategies,if,strategy,instanceof,media,type,file,extension,resolver,this,resolvers,add,media,type,file,extension,resolver,strategy
ContentNegotiationManager -> public ContentNegotiationManager(Collection<ContentNegotiationStrategy> strategies);1490285806;A collection-based alternative to_{@link #ContentNegotiationManager(ContentNegotiationStrategy...)}._@param strategies the strategies to use;public ContentNegotiationManager(Collection<ContentNegotiationStrategy> strategies) {_		Assert.notEmpty(strategies, "At least one ContentNegotiationStrategy is expected")__		this.strategies.addAll(strategies)__		for (ContentNegotiationStrategy strategy : this.strategies) {_			if (strategy instanceof MediaTypeFileExtensionResolver) {_				this.resolvers.add((MediaTypeFileExtensionResolver) strategy)__			}_		}_	};a,collection,based,alternative,to,link,content,negotiation,manager,content,negotiation,strategy,param,strategies,the,strategies,to,use;public,content,negotiation,manager,collection,content,negotiation,strategy,strategies,assert,not,empty,strategies,at,least,one,content,negotiation,strategy,is,expected,this,strategies,add,all,strategies,for,content,negotiation,strategy,strategy,this,strategies,if,strategy,instanceof,media,type,file,extension,resolver,this,resolvers,add,media,type,file,extension,resolver,strategy
ContentNegotiationManager -> public ContentNegotiationManager(Collection<ContentNegotiationStrategy> strategies);1495868221;A collection-based alternative to_{@link #ContentNegotiationManager(ContentNegotiationStrategy...)}._@param strategies the strategies to use;public ContentNegotiationManager(Collection<ContentNegotiationStrategy> strategies) {_		Assert.notEmpty(strategies, "At least one ContentNegotiationStrategy is expected")__		this.strategies.addAll(strategies)__		for (ContentNegotiationStrategy strategy : this.strategies) {_			if (strategy instanceof MediaTypeFileExtensionResolver) {_				this.resolvers.add((MediaTypeFileExtensionResolver) strategy)__			}_		}_	};a,collection,based,alternative,to,link,content,negotiation,manager,content,negotiation,strategy,param,strategies,the,strategies,to,use;public,content,negotiation,manager,collection,content,negotiation,strategy,strategies,assert,not,empty,strategies,at,least,one,content,negotiation,strategy,is,expected,this,strategies,add,all,strategies,for,content,negotiation,strategy,strategy,this,strategies,if,strategy,instanceof,media,type,file,extension,resolver,this,resolvers,add,media,type,file,extension,resolver,strategy
ContentNegotiationManager -> public ContentNegotiationManager(Collection<ContentNegotiationStrategy> strategies);1499788456;A collection-based alternative to_{@link #ContentNegotiationManager(ContentNegotiationStrategy...)}._@param strategies the strategies to use;public ContentNegotiationManager(Collection<ContentNegotiationStrategy> strategies) {_		Assert.notEmpty(strategies, "At least one ContentNegotiationStrategy is expected")__		this.strategies.addAll(strategies)__		for (ContentNegotiationStrategy strategy : this.strategies) {_			if (strategy instanceof MediaTypeFileExtensionResolver) {_				this.resolvers.add((MediaTypeFileExtensionResolver) strategy)__			}_		}_	};a,collection,based,alternative,to,link,content,negotiation,manager,content,negotiation,strategy,param,strategies,the,strategies,to,use;public,content,negotiation,manager,collection,content,negotiation,strategy,strategies,assert,not,empty,strategies,at,least,one,content,negotiation,strategy,is,expected,this,strategies,add,all,strategies,for,content,negotiation,strategy,strategy,this,strategies,if,strategy,instanceof,media,type,file,extension,resolver,this,resolvers,add,media,type,file,extension,resolver,strategy
ContentNegotiationManager -> public ContentNegotiationManager(Collection<ContentNegotiationStrategy> strategies);1506534768;A collection-based alternative to_{@link #ContentNegotiationManager(ContentNegotiationStrategy...)}._@param strategies the strategies to use_@since 3.2.2;public ContentNegotiationManager(Collection<ContentNegotiationStrategy> strategies) {_		Assert.notEmpty(strategies, "At least one ContentNegotiationStrategy is expected")__		this.strategies.addAll(strategies)__		for (ContentNegotiationStrategy strategy : this.strategies) {_			if (strategy instanceof MediaTypeFileExtensionResolver) {_				this.resolvers.add((MediaTypeFileExtensionResolver) strategy)__			}_		}_	};a,collection,based,alternative,to,link,content,negotiation,manager,content,negotiation,strategy,param,strategies,the,strategies,to,use,since,3,2,2;public,content,negotiation,manager,collection,content,negotiation,strategy,strategies,assert,not,empty,strategies,at,least,one,content,negotiation,strategy,is,expected,this,strategies,add,all,strategies,for,content,negotiation,strategy,strategy,this,strategies,if,strategy,instanceof,media,type,file,extension,resolver,this,resolvers,add,media,type,file,extension,resolver,strategy
ContentNegotiationManager -> public ContentNegotiationManager(Collection<ContentNegotiationStrategy> strategies);1519514499;A collection-based alternative to_{@link #ContentNegotiationManager(ContentNegotiationStrategy...)}._@param strategies the strategies to use_@since 3.2.2;public ContentNegotiationManager(Collection<ContentNegotiationStrategy> strategies) {_		Assert.notEmpty(strategies, "At least one ContentNegotiationStrategy is expected")__		this.strategies.addAll(strategies)__		for (ContentNegotiationStrategy strategy : this.strategies) {_			if (strategy instanceof MediaTypeFileExtensionResolver) {_				this.resolvers.add((MediaTypeFileExtensionResolver) strategy)__			}_		}_	};a,collection,based,alternative,to,link,content,negotiation,manager,content,negotiation,strategy,param,strategies,the,strategies,to,use,since,3,2,2;public,content,negotiation,manager,collection,content,negotiation,strategy,strategies,assert,not,empty,strategies,at,least,one,content,negotiation,strategy,is,expected,this,strategies,add,all,strategies,for,content,negotiation,strategy,strategy,this,strategies,if,strategy,instanceof,media,type,file,extension,resolver,this,resolvers,add,media,type,file,extension,resolver,strategy
ContentNegotiationManager -> public ContentNegotiationManager(Collection<ContentNegotiationStrategy> strategies);1522184059;A collection-based alternative to_{@link #ContentNegotiationManager(ContentNegotiationStrategy...)}._@param strategies the strategies to use_@since 3.2.2;public ContentNegotiationManager(Collection<ContentNegotiationStrategy> strategies) {_		Assert.notEmpty(strategies, "At least one ContentNegotiationStrategy is expected")__		this.strategies.addAll(strategies)__		for (ContentNegotiationStrategy strategy : this.strategies) {_			if (strategy instanceof MediaTypeFileExtensionResolver) {_				this.resolvers.add((MediaTypeFileExtensionResolver) strategy)__			}_		}_	};a,collection,based,alternative,to,link,content,negotiation,manager,content,negotiation,strategy,param,strategies,the,strategies,to,use,since,3,2,2;public,content,negotiation,manager,collection,content,negotiation,strategy,strategies,assert,not,empty,strategies,at,least,one,content,negotiation,strategy,is,expected,this,strategies,add,all,strategies,for,content,negotiation,strategy,strategy,this,strategies,if,strategy,instanceof,media,type,file,extension,resolver,this,resolvers,add,media,type,file,extension,resolver,strategy
ContentNegotiationManager -> @Override 	public List<MediaType> resolveMediaTypes(NativeWebRequest webRequest) throws HttpMediaTypeNotAcceptableException;1356735495;Delegate to all configured ContentNegotiationStrategy instances until one_returns a non-empty list._@param webRequest the current request_@return the requested media types or an empty list, never {@code null}_@throws HttpMediaTypeNotAcceptableException if the requested media types cannot be parsed;@Override_	public List<MediaType> resolveMediaTypes(NativeWebRequest webRequest) throws HttpMediaTypeNotAcceptableException {_		for (ContentNegotiationStrategy strategy : this.contentNegotiationStrategies) {_			List<MediaType> mediaTypes = strategy.resolveMediaTypes(webRequest)__			if (!mediaTypes.isEmpty()) {_				return mediaTypes__			}_		}_		return Collections.emptyList()__	};delegate,to,all,configured,content,negotiation,strategy,instances,until,one,returns,a,non,empty,list,param,web,request,the,current,request,return,the,requested,media,types,or,an,empty,list,never,code,null,throws,http,media,type,not,acceptable,exception,if,the,requested,media,types,cannot,be,parsed;override,public,list,media,type,resolve,media,types,native,web,request,web,request,throws,http,media,type,not,acceptable,exception,for,content,negotiation,strategy,strategy,this,content,negotiation,strategies,list,media,type,media,types,strategy,resolve,media,types,web,request,if,media,types,is,empty,return,media,types,return,collections,empty,list
ContentNegotiationManager -> @Override 	public List<MediaType> resolveMediaTypes(NativeWebRequest webRequest) throws HttpMediaTypeNotAcceptableException;1368482696;Delegate to all configured ContentNegotiationStrategy instances until one_returns a non-empty list._@param webRequest the current request_@return the requested media types or an empty list, never {@code null}_@throws HttpMediaTypeNotAcceptableException if the requested media types cannot be parsed;@Override_	public List<MediaType> resolveMediaTypes(NativeWebRequest webRequest) throws HttpMediaTypeNotAcceptableException {_		for (ContentNegotiationStrategy strategy : this.contentNegotiationStrategies) {_			List<MediaType> mediaTypes = strategy.resolveMediaTypes(webRequest)__			if (mediaTypes.isEmpty() || mediaTypes.equals(MEDIA_TYPE_ALL)) {_				continue__			}_			return mediaTypes__		}_		return Collections.emptyList()__	};delegate,to,all,configured,content,negotiation,strategy,instances,until,one,returns,a,non,empty,list,param,web,request,the,current,request,return,the,requested,media,types,or,an,empty,list,never,code,null,throws,http,media,type,not,acceptable,exception,if,the,requested,media,types,cannot,be,parsed;override,public,list,media,type,resolve,media,types,native,web,request,web,request,throws,http,media,type,not,acceptable,exception,for,content,negotiation,strategy,strategy,this,content,negotiation,strategies,list,media,type,media,types,strategy,resolve,media,types,web,request,if,media,types,is,empty,media,types,equals,continue,return,media,types,return,collections,empty,list
ContentNegotiationManager -> public List<String> getAllFileExtensions();1340674210;Delegate to all configured MediaTypeFileExtensionResolver instances and aggregate_the list of all known file extensions.;public List<String> getAllFileExtensions() {_		Set<String> result = new LinkedHashSet<String>()__		for (MediaTypeFileExtensionResolver resolver : this.fileExtensionResolvers) {_			result.addAll(resolver.getAllFileExtensions())__		}_		return new ArrayList<String>(result)__	};delegate,to,all,configured,media,type,file,extension,resolver,instances,and,aggregate,the,list,of,all,known,file,extensions;public,list,string,get,all,file,extensions,set,string,result,new,linked,hash,set,string,for,media,type,file,extension,resolver,resolver,this,file,extension,resolvers,result,add,all,resolver,get,all,file,extensions,return,new,array,list,string,result
ContentNegotiationManager -> public List<String> getAllFileExtensions();1342834322;Delegate to all configured MediaTypeFileExtensionResolver instances and aggregate_the list of all known file extensions.;public List<String> getAllFileExtensions() {_		Set<String> result = new LinkedHashSet<String>()__		for (MediaTypeFileExtensionResolver resolver : this.fileExtensionResolvers) {_			result.addAll(resolver.getAllFileExtensions())__		}_		return new ArrayList<String>(result)__	};delegate,to,all,configured,media,type,file,extension,resolver,instances,and,aggregate,the,list,of,all,known,file,extensions;public,list,string,get,all,file,extensions,set,string,result,new,linked,hash,set,string,for,media,type,file,extension,resolver,resolver,this,file,extension,resolvers,result,add,all,resolver,get,all,file,extensions,return,new,array,list,string,result
ContentNegotiationManager -> public List<String> getAllFileExtensions();1355313310;Delegate to all configured MediaTypeFileExtensionResolver instances and aggregate_the list of all known file extensions.;public List<String> getAllFileExtensions() {_		Set<String> result = new LinkedHashSet<String>()__		for (MediaTypeFileExtensionResolver resolver : this.fileExtensionResolvers) {_			result.addAll(resolver.getAllFileExtensions())__		}_		return new ArrayList<String>(result)__	};delegate,to,all,configured,media,type,file,extension,resolver,instances,and,aggregate,the,list,of,all,known,file,extensions;public,list,string,get,all,file,extensions,set,string,result,new,linked,hash,set,string,for,media,type,file,extension,resolver,resolver,this,file,extension,resolvers,result,add,all,resolver,get,all,file,extensions,return,new,array,list,string,result
ContentNegotiationManager -> public List<String> getAllFileExtensions();1357119239;Delegate to all configured MediaTypeFileExtensionResolver instances and aggregate_the list of all known file extensions.;public List<String> getAllFileExtensions() {_		Set<String> result = new LinkedHashSet<String>()__		for (MediaTypeFileExtensionResolver resolver : this.fileExtensionResolvers) {_			result.addAll(resolver.getAllFileExtensions())__		}_		return new ArrayList<String>(result)__	};delegate,to,all,configured,media,type,file,extension,resolver,instances,and,aggregate,the,list,of,all,known,file,extensions;public,list,string,get,all,file,extensions,set,string,result,new,linked,hash,set,string,for,media,type,file,extension,resolver,resolver,this,file,extension,resolvers,result,add,all,resolver,get,all,file,extensions,return,new,array,list,string,result
ContentNegotiationManager -> public List<String> getAllFileExtensions();1362408075;Delegate to all configured MediaTypeFileExtensionResolver instances and aggregate_the list of all known file extensions.;public List<String> getAllFileExtensions() {_		Set<String> result = new LinkedHashSet<String>()__		for (MediaTypeFileExtensionResolver resolver : this.fileExtensionResolvers) {_			result.addAll(resolver.getAllFileExtensions())__		}_		return new ArrayList<String>(result)__	};delegate,to,all,configured,media,type,file,extension,resolver,instances,and,aggregate,the,list,of,all,known,file,extensions;public,list,string,get,all,file,extensions,set,string,result,new,linked,hash,set,string,for,media,type,file,extension,resolver,resolver,this,file,extension,resolvers,result,add,all,resolver,get,all,file,extensions,return,new,array,list,string,result
ContentNegotiationManager -> public List<String> getAllFileExtensions();1368198615;Delegate to all configured MediaTypeFileExtensionResolver instances and aggregate_the list of all known file extensions.;public List<String> getAllFileExtensions() {_		Set<String> result = new LinkedHashSet<String>()__		for (MediaTypeFileExtensionResolver resolver : this.fileExtensionResolvers) {_			result.addAll(resolver.getAllFileExtensions())__		}_		return new ArrayList<String>(result)__	};delegate,to,all,configured,media,type,file,extension,resolver,instances,and,aggregate,the,list,of,all,known,file,extensions;public,list,string,get,all,file,extensions,set,string,result,new,linked,hash,set,string,for,media,type,file,extension,resolver,resolver,this,file,extension,resolvers,result,add,all,resolver,get,all,file,extensions,return,new,array,list,string,result
ContentNegotiationManager -> @Override 	public List<String> getAllFileExtensions();1356735495;Delegate to all configured MediaTypeFileExtensionResolver instances and aggregate_the list of all known file extensions.;@Override_	public List<String> getAllFileExtensions() {_		Set<String> result = new LinkedHashSet<String>()__		for (MediaTypeFileExtensionResolver resolver : this.fileExtensionResolvers) {_			result.addAll(resolver.getAllFileExtensions())__		}_		return new ArrayList<String>(result)__	};delegate,to,all,configured,media,type,file,extension,resolver,instances,and,aggregate,the,list,of,all,known,file,extensions;override,public,list,string,get,all,file,extensions,set,string,result,new,linked,hash,set,string,for,media,type,file,extension,resolver,resolver,this,file,extension,resolvers,result,add,all,resolver,get,all,file,extensions,return,new,array,list,string,result
ContentNegotiationManager -> @Override 	public List<String> getAllFileExtensions();1368482696;Delegate to all configured MediaTypeFileExtensionResolver instances and aggregate_the list of all known file extensions.;@Override_	public List<String> getAllFileExtensions() {_		Set<String> result = new LinkedHashSet<String>()__		for (MediaTypeFileExtensionResolver resolver : this.fileExtensionResolvers) {_			result.addAll(resolver.getAllFileExtensions())__		}_		return new ArrayList<String>(result)__	};delegate,to,all,configured,media,type,file,extension,resolver,instances,and,aggregate,the,list,of,all,known,file,extensions;override,public,list,string,get,all,file,extensions,set,string,result,new,linked,hash,set,string,for,media,type,file,extension,resolver,resolver,this,file,extension,resolvers,result,add,all,resolver,get,all,file,extensions,return,new,array,list,string,result
ContentNegotiationManager -> @Override 	public List<String> getAllFileExtensions();1444898007;{@inheritDoc}_<p>At startup this method returns extensions explicitly registered with_either {@link PathExtensionContentNegotiationStrategy} or_{@link ParameterContentNegotiationStrategy}. At runtime if there is a_"path extension" strategy and its_{@link PathExtensionContentNegotiationStrategy#setUseJaf(boolean)_useJaf} property is set to "true", the list of extensions may_increase as file extensions are resolved via JAF and cached.;@Override_	public List<String> getAllFileExtensions() {_		Set<String> result = new LinkedHashSet<String>()__		for (MediaTypeFileExtensionResolver resolver : this.resolvers) {_			result.addAll(resolver.getAllFileExtensions())__		}_		return new ArrayList<String>(result)__	};inherit,doc,p,at,startup,this,method,returns,extensions,explicitly,registered,with,either,link,path,extension,content,negotiation,strategy,or,link,parameter,content,negotiation,strategy,at,runtime,if,there,is,a,path,extension,strategy,and,its,link,path,extension,content,negotiation,strategy,set,use,jaf,boolean,use,jaf,property,is,set,to,true,the,list,of,extensions,may,increase,as,file,extensions,are,resolved,via,jaf,and,cached;override,public,list,string,get,all,file,extensions,set,string,result,new,linked,hash,set,string,for,media,type,file,extension,resolver,resolver,this,resolvers,result,add,all,resolver,get,all,file,extensions,return,new,array,list,string,result
ContentNegotiationManager -> @Override 	public List<String> getAllFileExtensions();1446846341;{@inheritDoc}_<p>At startup this method returns extensions explicitly registered with_either {@link PathExtensionContentNegotiationStrategy} or_{@link ParameterContentNegotiationStrategy}. At runtime if there is a_"path extension" strategy and its_{@link PathExtensionContentNegotiationStrategy#setUseJaf(boolean)_useJaf} property is set to "true", the list of extensions may_increase as file extensions are resolved via JAF and cached.;@Override_	public List<String> getAllFileExtensions() {_		Set<String> result = new LinkedHashSet<String>()__		for (MediaTypeFileExtensionResolver resolver : this.resolvers) {_			result.addAll(resolver.getAllFileExtensions())__		}_		return new ArrayList<String>(result)__	};inherit,doc,p,at,startup,this,method,returns,extensions,explicitly,registered,with,either,link,path,extension,content,negotiation,strategy,or,link,parameter,content,negotiation,strategy,at,runtime,if,there,is,a,path,extension,strategy,and,its,link,path,extension,content,negotiation,strategy,set,use,jaf,boolean,use,jaf,property,is,set,to,true,the,list,of,extensions,may,increase,as,file,extensions,are,resolved,via,jaf,and,cached;override,public,list,string,get,all,file,extensions,set,string,result,new,linked,hash,set,string,for,media,type,file,extension,resolver,resolver,this,resolvers,result,add,all,resolver,get,all,file,extensions,return,new,array,list,string,result
ContentNegotiationManager -> @Override 	public List<String> getAllFileExtensions();1457125561;{@inheritDoc}_<p>At startup this method returns extensions explicitly registered with_either {@link PathExtensionContentNegotiationStrategy} or_{@link ParameterContentNegotiationStrategy}. At runtime if there is a_"path extension" strategy and its_{@link PathExtensionContentNegotiationStrategy#setUseJaf(boolean)_useJaf} property is set to "true", the list of extensions may_increase as file extensions are resolved via JAF and cached.;@Override_	public List<String> getAllFileExtensions() {_		Set<String> result = new LinkedHashSet<String>()__		for (MediaTypeFileExtensionResolver resolver : this.resolvers) {_			result.addAll(resolver.getAllFileExtensions())__		}_		return new ArrayList<String>(result)__	};inherit,doc,p,at,startup,this,method,returns,extensions,explicitly,registered,with,either,link,path,extension,content,negotiation,strategy,or,link,parameter,content,negotiation,strategy,at,runtime,if,there,is,a,path,extension,strategy,and,its,link,path,extension,content,negotiation,strategy,set,use,jaf,boolean,use,jaf,property,is,set,to,true,the,list,of,extensions,may,increase,as,file,extensions,are,resolved,via,jaf,and,cached;override,public,list,string,get,all,file,extensions,set,string,result,new,linked,hash,set,string,for,media,type,file,extension,resolver,resolver,this,resolvers,result,add,all,resolver,get,all,file,extensions,return,new,array,list,string,result
ContentNegotiationManager -> @Override 	public List<String> getAllFileExtensions();1464879764;{@inheritDoc}_<p>At startup this method returns extensions explicitly registered with_either {@link PathExtensionContentNegotiationStrategy} or_{@link ParameterContentNegotiationStrategy}. At runtime if there is a_"path extension" strategy and its_{@link PathExtensionContentNegotiationStrategy#setUseJaf(boolean)_useJaf} property is set to "true", the list of extensions may_increase as file extensions are resolved via JAF and cached.;@Override_	public List<String> getAllFileExtensions() {_		Set<String> result = new LinkedHashSet<String>()__		for (MediaTypeFileExtensionResolver resolver : this.resolvers) {_			result.addAll(resolver.getAllFileExtensions())__		}_		return new ArrayList<String>(result)__	};inherit,doc,p,at,startup,this,method,returns,extensions,explicitly,registered,with,either,link,path,extension,content,negotiation,strategy,or,link,parameter,content,negotiation,strategy,at,runtime,if,there,is,a,path,extension,strategy,and,its,link,path,extension,content,negotiation,strategy,set,use,jaf,boolean,use,jaf,property,is,set,to,true,the,list,of,extensions,may,increase,as,file,extensions,are,resolved,via,jaf,and,cached;override,public,list,string,get,all,file,extensions,set,string,result,new,linked,hash,set,string,for,media,type,file,extension,resolver,resolver,this,resolvers,result,add,all,resolver,get,all,file,extensions,return,new,array,list,string,result
ContentNegotiationManager -> @Override 	public List<String> getAllFileExtensions();1467730834;{@inheritDoc}_<p>At startup this method returns extensions explicitly registered with_either {@link PathExtensionContentNegotiationStrategy} or_{@link ParameterContentNegotiationStrategy}. At runtime if there is a_"path extension" strategy and its_{@link PathExtensionContentNegotiationStrategy#setUseJaf(boolean)_useJaf} property is set to "true", the list of extensions may_increase as file extensions are resolved via JAF and cached.;@Override_	public List<String> getAllFileExtensions() {_		Set<String> result = new LinkedHashSet<>()__		for (MediaTypeFileExtensionResolver resolver : this.resolvers) {_			result.addAll(resolver.getAllFileExtensions())__		}_		return new ArrayList<>(result)__	};inherit,doc,p,at,startup,this,method,returns,extensions,explicitly,registered,with,either,link,path,extension,content,negotiation,strategy,or,link,parameter,content,negotiation,strategy,at,runtime,if,there,is,a,path,extension,strategy,and,its,link,path,extension,content,negotiation,strategy,set,use,jaf,boolean,use,jaf,property,is,set,to,true,the,list,of,extensions,may,increase,as,file,extensions,are,resolved,via,jaf,and,cached;override,public,list,string,get,all,file,extensions,set,string,result,new,linked,hash,set,for,media,type,file,extension,resolver,resolver,this,resolvers,result,add,all,resolver,get,all,file,extensions,return,new,array,list,result
ContentNegotiationManager -> @Override 	public List<String> getAllFileExtensions();1486062666;{@inheritDoc}_<p>At startup this method returns extensions explicitly registered with_either {@link PathExtensionContentNegotiationStrategy} or_{@link ParameterContentNegotiationStrategy}. At runtime if there is a_"path extension" strategy and its_{@link PathExtensionContentNegotiationStrategy#setUseJaf(boolean)_useJaf} property is set to "true", the list of extensions may_increase as file extensions are resolved via JAF and cached.;@Override_	public List<String> getAllFileExtensions() {_		Set<String> result = new LinkedHashSet<>()__		for (MediaTypeFileExtensionResolver resolver : this.resolvers) {_			result.addAll(resolver.getAllFileExtensions())__		}_		return new ArrayList<>(result)__	};inherit,doc,p,at,startup,this,method,returns,extensions,explicitly,registered,with,either,link,path,extension,content,negotiation,strategy,or,link,parameter,content,negotiation,strategy,at,runtime,if,there,is,a,path,extension,strategy,and,its,link,path,extension,content,negotiation,strategy,set,use,jaf,boolean,use,jaf,property,is,set,to,true,the,list,of,extensions,may,increase,as,file,extensions,are,resolved,via,jaf,and,cached;override,public,list,string,get,all,file,extensions,set,string,result,new,linked,hash,set,for,media,type,file,extension,resolver,resolver,this,resolvers,result,add,all,resolver,get,all,file,extensions,return,new,array,list,result
ContentNegotiationManager -> @Override 	public List<String> getAllFileExtensions();1490104706;{@inheritDoc}_<p>At startup this method returns extensions explicitly registered with_either {@link PathExtensionContentNegotiationStrategy} or_{@link ParameterContentNegotiationStrategy}. At runtime if there is a_"path extension" strategy, the list of extensions may_increase as file extensions are resolved via_{@link org.springframework.http.MediaTypeFactory} and cached.;@Override_	public List<String> getAllFileExtensions() {_		Set<String> result = new LinkedHashSet<>()__		for (MediaTypeFileExtensionResolver resolver : this.resolvers) {_			result.addAll(resolver.getAllFileExtensions())__		}_		return new ArrayList<>(result)__	};inherit,doc,p,at,startup,this,method,returns,extensions,explicitly,registered,with,either,link,path,extension,content,negotiation,strategy,or,link,parameter,content,negotiation,strategy,at,runtime,if,there,is,a,path,extension,strategy,the,list,of,extensions,may,increase,as,file,extensions,are,resolved,via,link,org,springframework,http,media,type,factory,and,cached;override,public,list,string,get,all,file,extensions,set,string,result,new,linked,hash,set,for,media,type,file,extension,resolver,resolver,this,resolvers,result,add,all,resolver,get,all,file,extensions,return,new,array,list,result
ContentNegotiationManager -> @Override 	public List<String> getAllFileExtensions();1490285806;{@inheritDoc}_<p>At startup this method returns extensions explicitly registered with_either {@link PathExtensionContentNegotiationStrategy} or_{@link ParameterContentNegotiationStrategy}. At runtime if there is a_"path extension" strategy and its_{@link PathExtensionContentNegotiationStrategy#setUseRegisteredExtensionsOnly(boolean)_useRegisteredExtensionsOnly} property is set to "false", the list of extensions may_increase as file extensions are resolved via_{@link org.springframework.http.MediaTypeFactory} and cached.;@Override_	public List<String> getAllFileExtensions() {_		Set<String> result = new LinkedHashSet<>()__		for (MediaTypeFileExtensionResolver resolver : this.resolvers) {_			result.addAll(resolver.getAllFileExtensions())__		}_		return new ArrayList<>(result)__	};inherit,doc,p,at,startup,this,method,returns,extensions,explicitly,registered,with,either,link,path,extension,content,negotiation,strategy,or,link,parameter,content,negotiation,strategy,at,runtime,if,there,is,a,path,extension,strategy,and,its,link,path,extension,content,negotiation,strategy,set,use,registered,extensions,only,boolean,use,registered,extensions,only,property,is,set,to,false,the,list,of,extensions,may,increase,as,file,extensions,are,resolved,via,link,org,springframework,http,media,type,factory,and,cached;override,public,list,string,get,all,file,extensions,set,string,result,new,linked,hash,set,for,media,type,file,extension,resolver,resolver,this,resolvers,result,add,all,resolver,get,all,file,extensions,return,new,array,list,result
ContentNegotiationManager -> @Override 	public List<String> getAllFileExtensions();1495868221;{@inheritDoc}_<p>At startup this method returns extensions explicitly registered with_either {@link PathExtensionContentNegotiationStrategy} or_{@link ParameterContentNegotiationStrategy}. At runtime if there is a_"path extension" strategy and its_{@link PathExtensionContentNegotiationStrategy#setUseRegisteredExtensionsOnly(boolean)_useRegisteredExtensionsOnly} property is set to "false", the list of extensions may_increase as file extensions are resolved via_{@link org.springframework.http.MediaTypeFactory} and cached.;@Override_	public List<String> getAllFileExtensions() {_		Set<String> result = new LinkedHashSet<>()__		for (MediaTypeFileExtensionResolver resolver : this.resolvers) {_			result.addAll(resolver.getAllFileExtensions())__		}_		return new ArrayList<>(result)__	};inherit,doc,p,at,startup,this,method,returns,extensions,explicitly,registered,with,either,link,path,extension,content,negotiation,strategy,or,link,parameter,content,negotiation,strategy,at,runtime,if,there,is,a,path,extension,strategy,and,its,link,path,extension,content,negotiation,strategy,set,use,registered,extensions,only,boolean,use,registered,extensions,only,property,is,set,to,false,the,list,of,extensions,may,increase,as,file,extensions,are,resolved,via,link,org,springframework,http,media,type,factory,and,cached;override,public,list,string,get,all,file,extensions,set,string,result,new,linked,hash,set,for,media,type,file,extension,resolver,resolver,this,resolvers,result,add,all,resolver,get,all,file,extensions,return,new,array,list,result
ContentNegotiationManager -> @Override 	public List<String> getAllFileExtensions();1499788456;{@inheritDoc}_<p>At startup this method returns extensions explicitly registered with_either {@link PathExtensionContentNegotiationStrategy} or_{@link ParameterContentNegotiationStrategy}. At runtime if there is a_"path extension" strategy and its_{@link PathExtensionContentNegotiationStrategy#setUseRegisteredExtensionsOnly(boolean)_useRegisteredExtensionsOnly} property is set to "false", the list of extensions may_increase as file extensions are resolved via_{@link org.springframework.http.MediaTypeFactory} and cached.;@Override_	public List<String> getAllFileExtensions() {_		Set<String> result = new LinkedHashSet<>()__		for (MediaTypeFileExtensionResolver resolver : this.resolvers) {_			result.addAll(resolver.getAllFileExtensions())__		}_		return new ArrayList<>(result)__	};inherit,doc,p,at,startup,this,method,returns,extensions,explicitly,registered,with,either,link,path,extension,content,negotiation,strategy,or,link,parameter,content,negotiation,strategy,at,runtime,if,there,is,a,path,extension,strategy,and,its,link,path,extension,content,negotiation,strategy,set,use,registered,extensions,only,boolean,use,registered,extensions,only,property,is,set,to,false,the,list,of,extensions,may,increase,as,file,extensions,are,resolved,via,link,org,springframework,http,media,type,factory,and,cached;override,public,list,string,get,all,file,extensions,set,string,result,new,linked,hash,set,for,media,type,file,extension,resolver,resolver,this,resolvers,result,add,all,resolver,get,all,file,extensions,return,new,array,list,result
ContentNegotiationManager -> @Override 	public List<String> getAllFileExtensions();1506534768;{@inheritDoc}_<p>At startup this method returns extensions explicitly registered with_either {@link PathExtensionContentNegotiationStrategy} or_{@link ParameterContentNegotiationStrategy}. At runtime if there is a_"path extension" strategy and its_{@link PathExtensionContentNegotiationStrategy#setUseRegisteredExtensionsOnly(boolean)_useRegisteredExtensionsOnly} property is set to "false", the list of extensions may_increase as file extensions are resolved via_{@link org.springframework.http.MediaTypeFactory} and cached.;@Override_	public List<String> getAllFileExtensions() {_		Set<String> result = new LinkedHashSet<>()__		for (MediaTypeFileExtensionResolver resolver : this.resolvers) {_			result.addAll(resolver.getAllFileExtensions())__		}_		return new ArrayList<>(result)__	};inherit,doc,p,at,startup,this,method,returns,extensions,explicitly,registered,with,either,link,path,extension,content,negotiation,strategy,or,link,parameter,content,negotiation,strategy,at,runtime,if,there,is,a,path,extension,strategy,and,its,link,path,extension,content,negotiation,strategy,set,use,registered,extensions,only,boolean,use,registered,extensions,only,property,is,set,to,false,the,list,of,extensions,may,increase,as,file,extensions,are,resolved,via,link,org,springframework,http,media,type,factory,and,cached;override,public,list,string,get,all,file,extensions,set,string,result,new,linked,hash,set,for,media,type,file,extension,resolver,resolver,this,resolvers,result,add,all,resolver,get,all,file,extensions,return,new,array,list,result
ContentNegotiationManager -> @Override 	public List<String> getAllFileExtensions();1519514499;{@inheritDoc}_<p>At startup this method returns extensions explicitly registered with_either {@link PathExtensionContentNegotiationStrategy} or_{@link ParameterContentNegotiationStrategy}. At runtime if there is a_"path extension" strategy and its_{@link PathExtensionContentNegotiationStrategy#setUseRegisteredExtensionsOnly(boolean)_useRegisteredExtensionsOnly} property is set to "false", the list of extensions may_increase as file extensions are resolved via_{@link org.springframework.http.MediaTypeFactory} and cached.;@Override_	public List<String> getAllFileExtensions() {_		Set<String> result = new LinkedHashSet<>()__		for (MediaTypeFileExtensionResolver resolver : this.resolvers) {_			result.addAll(resolver.getAllFileExtensions())__		}_		return new ArrayList<>(result)__	};inherit,doc,p,at,startup,this,method,returns,extensions,explicitly,registered,with,either,link,path,extension,content,negotiation,strategy,or,link,parameter,content,negotiation,strategy,at,runtime,if,there,is,a,path,extension,strategy,and,its,link,path,extension,content,negotiation,strategy,set,use,registered,extensions,only,boolean,use,registered,extensions,only,property,is,set,to,false,the,list,of,extensions,may,increase,as,file,extensions,are,resolved,via,link,org,springframework,http,media,type,factory,and,cached;override,public,list,string,get,all,file,extensions,set,string,result,new,linked,hash,set,for,media,type,file,extension,resolver,resolver,this,resolvers,result,add,all,resolver,get,all,file,extensions,return,new,array,list,result
ContentNegotiationManager -> @Override 	public List<String> getAllFileExtensions();1522184059;{@inheritDoc}_<p>At startup this method returns extensions explicitly registered with_either {@link PathExtensionContentNegotiationStrategy} or_{@link ParameterContentNegotiationStrategy}. At runtime if there is a_"path extension" strategy and its_{@link PathExtensionContentNegotiationStrategy#setUseRegisteredExtensionsOnly(boolean)_useRegisteredExtensionsOnly} property is set to "false", the list of extensions may_increase as file extensions are resolved via_{@link org.springframework.http.MediaTypeFactory} and cached.;@Override_	public List<String> getAllFileExtensions() {_		Set<String> result = new LinkedHashSet<>()__		for (MediaTypeFileExtensionResolver resolver : this.resolvers) {_			result.addAll(resolver.getAllFileExtensions())__		}_		return new ArrayList<>(result)__	};inherit,doc,p,at,startup,this,method,returns,extensions,explicitly,registered,with,either,link,path,extension,content,negotiation,strategy,or,link,parameter,content,negotiation,strategy,at,runtime,if,there,is,a,path,extension,strategy,and,its,link,path,extension,content,negotiation,strategy,set,use,registered,extensions,only,boolean,use,registered,extensions,only,property,is,set,to,false,the,list,of,extensions,may,increase,as,file,extensions,are,resolved,via,link,org,springframework,http,media,type,factory,and,cached;override,public,list,string,get,all,file,extensions,set,string,result,new,linked,hash,set,for,media,type,file,extension,resolver,resolver,this,resolvers,result,add,all,resolver,get,all,file,extensions,return,new,array,list,result
