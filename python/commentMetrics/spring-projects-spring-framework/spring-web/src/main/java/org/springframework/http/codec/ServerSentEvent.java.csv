commented;modifiers;parameterAmount;loc;comment;code
true;public;0;4;/**  * Return the {@code id} field of this event, if available.  */ ;/**  * Return the {@code id} field of this event, if available.  */ @Nullable public String id() {     return this.id. }
true;public;0;4;/**  * Return the {@code event} field of this event, if available.  */ ;/**  * Return the {@code event} field of this event, if available.  */ @Nullable public String event() {     return this.event. }
true;public;0;4;/**  * Return the {@code retry} field of this event, if available.  */ ;/**  * Return the {@code retry} field of this event, if available.  */ @Nullable public Duration retry() {     return this.retry. }
true;public;0;4;/**  * Return the comment of this event, if available.  */ ;/**  * Return the comment of this event, if available.  */ @Nullable public String comment() {     return this.comment. }
true;public;0;4;/**  * Return the {@code data} field of this event, if available.  */ ;/**  * Return the {@code data} field of this event, if available.  */ @Nullable public T data() {     return this.data. }
false;public;0;5;;@Override public String toString() {     return ("ServerSentEvent [id = '" + this.id + "\', event='" + this.event + "\', retry=" + this.retry + ", comment='" + this.comment + "', data=" + this.data + ']'). }
true;public,static;0;3;/**  * Return a builder for a {@code SseEvent}.  * @param <T> the type of data that this event contains  * @return the builder  */ ;/**  * Return a builder for a {@code SseEvent}.  * @param <T> the type of data that this event contains  * @return the builder  */ public static <T> Builder<T> builder() {     return new BuilderImpl<>(). }
true;public,static;1;3;/**  * Return a builder for a {@code SseEvent}, populated with the give {@linkplain #data() data}.  * @param <T> the type of data that this event contains  * @return the builder  */ ;/**  * Return a builder for a {@code SseEvent}, populated with the give {@linkplain #data() data}.  * @param <T> the type of data that this event contains  * @return the builder  */ public static <T> Builder<T> builder(T data) {     return new BuilderImpl<>(data). }
true;;1;1;/**  * Set the value of the {@code id} field.  * @param id the value of the id field  * @return {@code this} builder  */ ;/**  * Set the value of the {@code id} field.  * @param id the value of the id field  * @return {@code this} builder  */ Builder<T> id(String id).
true;;1;1;/**  * Set the value of the {@code event} field.  * @param event the value of the event field  * @return {@code this} builder  */ ;/**  * Set the value of the {@code event} field.  * @param event the value of the event field  * @return {@code this} builder  */ Builder<T> event(String event).
true;;1;1;/**  * Set the value of the {@code retry} field.  * @param retry the value of the retry field  * @return {@code this} builder  */ ;/**  * Set the value of the {@code retry} field.  * @param retry the value of the retry field  * @return {@code this} builder  */ Builder<T> retry(Duration retry).
true;;1;1;/**  * Set SSE comment. If a multi-line comment is provided, it will be turned into multiple  * SSE comment lines as defined in Server-Sent Events W3C recommendation.  * @param comment the comment to set  * @return {@code this} builder  */ ;/**  * Set SSE comment. If a multi-line comment is provided, it will be turned into multiple  * SSE comment lines as defined in Server-Sent Events W3C recommendation.  * @param comment the comment to set  * @return {@code this} builder  */ Builder<T> comment(String comment).
true;;1;1;/**  * Set the value of the {@code data} field. If the {@code data} argument is a multi-line  * {@code String}, it will be turned into multiple {@code data} field lines as defined  * in the Server-Sent Events W3C recommendation. If {@code data} is not a String, it will  * be {@linkplain org.springframework.http.codec.json.Jackson2JsonEncoder encoded} into JSON.  * @param data the value of the data field  * @return {@code this} builder  */ ;/**  * Set the value of the {@code data} field. If the {@code data} argument is a multi-line  * {@code String}, it will be turned into multiple {@code data} field lines as defined  * in the Server-Sent Events W3C recommendation. If {@code data} is not a String, it will  * be {@linkplain org.springframework.http.codec.json.Jackson2JsonEncoder encoded} into JSON.  * @param data the value of the data field  * @return {@code this} builder  */ Builder<T> data(@Nullable T data).
true;;0;1;/**  * Builds the event.  * @return the built event  */ ;/**  * Builds the event.  * @return the built event  */ ServerSentEvent<T> build().
false;public;1;5;;@Override public Builder<T> id(String id) {     this.id = id.     return this. }
false;public;1;5;;@Override public Builder<T> event(String event) {     this.event = event.     return this. }
false;public;1;5;;@Override public Builder<T> retry(Duration retry) {     this.retry = retry.     return this. }
false;public;1;5;;@Override public Builder<T> comment(String comment) {     this.comment = comment.     return this. }
false;public;1;5;;@Override public Builder<T> data(@Nullable T data) {     this.data = data.     return this. }
false;public;0;4;;@Override public ServerSentEvent<T> build() {     return new ServerSentEvent<>(this.id, this.event, this.retry, this.comment, this.data). }
