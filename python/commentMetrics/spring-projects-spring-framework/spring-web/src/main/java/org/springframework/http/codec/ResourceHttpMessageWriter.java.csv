# id;timestamp;commentText;codeText;commentWords;codeWords
ResourceHttpMessageWriter -> private OptionalLong contentLength(Resource resource);1474404071;Determine, if possible, the contentLength of the given resource without reading it._@param resource the resource instance_@return the contentLength of the resource;private OptionalLong contentLength(Resource resource) {_		_		_		if (InputStreamResource.class != resource.getClass()) {_			try {_				return OptionalLong.of(resource.contentLength())__			}_			catch (IOException ignored) {_			}_		}_		return OptionalLong.empty()__	};determine,if,possible,the,content,length,of,the,given,resource,without,reading,it,param,resource,the,resource,instance,return,the,content,length,of,the,resource;private,optional,long,content,length,resource,resource,if,input,stream,resource,class,resource,get,class,try,return,optional,long,of,resource,content,length,catch,ioexception,ignored,return,optional,long,empty
ResourceHttpMessageWriter -> private OptionalLong contentLength(Resource resource);1474407981;Determine, if possible, the contentLength of the given resource without reading it._@param resource the resource instance_@return the contentLength of the resource;private OptionalLong contentLength(Resource resource) {_		_		_		if (InputStreamResource.class != resource.getClass()) {_			try {_				return OptionalLong.of(resource.contentLength())__			}_			catch (IOException ignored) {_			}_		}_		return OptionalLong.empty()__	};determine,if,possible,the,content,length,of,the,given,resource,without,reading,it,param,resource,the,resource,instance,return,the,content,length,of,the,resource;private,optional,long,content,length,resource,resource,if,input,stream,resource,class,resource,get,class,try,return,optional,long,of,resource,content,length,catch,ioexception,ignored,return,optional,long,empty
ResourceHttpMessageWriter -> private OptionalLong contentLength(Resource resource);1489786145;Determine, if possible, the contentLength of the given resource without reading it._@param resource the resource instance_@return the contentLength of the resource;private OptionalLong contentLength(Resource resource) {_		_		_		if (InputStreamResource.class != resource.getClass()) {_			try {_				return OptionalLong.of(resource.contentLength())__			}_			catch (IOException ignored) {_			}_		}_		return OptionalLong.empty()__	};determine,if,possible,the,content,length,of,the,given,resource,without,reading,it,param,resource,the,resource,instance,return,the,content,length,of,the,resource;private,optional,long,content,length,resource,resource,if,input,stream,resource,class,resource,get,class,try,return,optional,long,of,resource,content,length,catch,ioexception,ignored,return,optional,long,empty
