# id;timestamp;commentText;codeText;commentWords;codeWords
HandlerMethodReturnValueHandler -> void handleReturnValue(Object returnValue, MethodParameter returnType, 			ModelAndViewContainer mavContainer, NativeWebRequest webRequest) throws Exception_;1386363078;Handle the given return value by adding attributes to the model and_setting a view or setting the_{@link ModelAndViewContainer#setRequestHandled} flag to {@code true}_to indicate the response has been handled directly._@param returnValue the value returned from the handler method_@param returnType the type of the return value. This type must have_previously been passed to_{@link #supportsReturnType(org.springframework.core.MethodParameter)}_and it must have returned {@code true}_@param mavContainer the ModelAndViewContainer for the current request_@param webRequest the current request_@throws Exception if the return value handling results in an error;void handleReturnValue(Object returnValue, MethodParameter returnType,_			ModelAndViewContainer mavContainer, NativeWebRequest webRequest) throws Exception_;handle,the,given,return,value,by,adding,attributes,to,the,model,and,setting,a,view,or,setting,the,link,model,and,view,container,set,request,handled,flag,to,code,true,to,indicate,the,response,has,been,handled,directly,param,return,value,the,value,returned,from,the,handler,method,param,return,type,the,type,of,the,return,value,this,type,must,have,previously,been,passed,to,link,supports,return,type,org,springframework,core,method,parameter,and,it,must,have,returned,code,true,param,mav,container,the,model,and,view,container,for,the,current,request,param,web,request,the,current,request,throws,exception,if,the,return,value,handling,results,in,an,error;void,handle,return,value,object,return,value,method,parameter,return,type,model,and,view,container,mav,container,native,web,request,web,request,throws,exception
HandlerMethodReturnValueHandler -> void handleReturnValue(Object returnValue, MethodParameter returnType, 			ModelAndViewContainer mavContainer, NativeWebRequest webRequest) throws Exception_;1411657245;Handle the given return value by adding attributes to the model and_setting a view or setting the_{@link ModelAndViewContainer#setRequestHandled} flag to {@code true}_to indicate the response has been handled directly._@param returnValue the value returned from the handler method_@param returnType the type of the return value. This type must have_previously been passed to {@link #supportsReturnType} which must_have returned {@code true}._@param mavContainer the ModelAndViewContainer for the current request_@param webRequest the current request_@throws Exception if the return value handling results in an error;void handleReturnValue(Object returnValue, MethodParameter returnType,_			ModelAndViewContainer mavContainer, NativeWebRequest webRequest) throws Exception_;handle,the,given,return,value,by,adding,attributes,to,the,model,and,setting,a,view,or,setting,the,link,model,and,view,container,set,request,handled,flag,to,code,true,to,indicate,the,response,has,been,handled,directly,param,return,value,the,value,returned,from,the,handler,method,param,return,type,the,type,of,the,return,value,this,type,must,have,previously,been,passed,to,link,supports,return,type,which,must,have,returned,code,true,param,mav,container,the,model,and,view,container,for,the,current,request,param,web,request,the,current,request,throws,exception,if,the,return,value,handling,results,in,an,error;void,handle,return,value,object,return,value,method,parameter,return,type,model,and,view,container,mav,container,native,web,request,web,request,throws,exception
HandlerMethodReturnValueHandler -> void handleReturnValue(Object returnValue, 						   MethodParameter returnType, 						   ModelAndViewContainer mavContainer, 						   NativeWebRequest webRequest) throws Exception_;1328020251;Handle the given return value by adding attributes to the model and_setting a view or setting the_{@link ModelAndViewContainer#setRequestHandled} flag to {@code true}_to indicate the response has been handled directly.__@param returnValue the value returned from the handler method_@param returnType the type of the return value. This type must have_previously been passed to_{@link #supportsReturnType(org.springframework.core.MethodParameter)}_and it must have returned {@code true}_@param mavContainer the ModelAndViewContainer for the current request_@param webRequest the current request_@throws Exception if the return value handling results in an error;void handleReturnValue(Object returnValue,_						   MethodParameter returnType,_						   ModelAndViewContainer mavContainer,_						   NativeWebRequest webRequest) throws Exception_;handle,the,given,return,value,by,adding,attributes,to,the,model,and,setting,a,view,or,setting,the,link,model,and,view,container,set,request,handled,flag,to,code,true,to,indicate,the,response,has,been,handled,directly,param,return,value,the,value,returned,from,the,handler,method,param,return,type,the,type,of,the,return,value,this,type,must,have,previously,been,passed,to,link,supports,return,type,org,springframework,core,method,parameter,and,it,must,have,returned,code,true,param,mav,container,the,model,and,view,container,for,the,current,request,param,web,request,the,current,request,throws,exception,if,the,return,value,handling,results,in,an,error;void,handle,return,value,object,return,value,method,parameter,return,type,model,and,view,container,mav,container,native,web,request,web,request,throws,exception
HandlerMethodReturnValueHandler -> void handleReturnValue(Object returnValue, 						   MethodParameter returnType, 						   ModelAndViewContainer mavContainer, 						   NativeWebRequest webRequest) throws Exception_;1356735495;Handle the given return value by adding attributes to the model and_setting a view or setting the_{@link ModelAndViewContainer#setRequestHandled} flag to {@code true}_to indicate the response has been handled directly.__@param returnValue the value returned from the handler method_@param returnType the type of the return value. This type must have_previously been passed to_{@link #supportsReturnType(org.springframework.core.MethodParameter)}_and it must have returned {@code true}_@param mavContainer the ModelAndViewContainer for the current request_@param webRequest the current request_@throws Exception if the return value handling results in an error;void handleReturnValue(Object returnValue,_						   MethodParameter returnType,_						   ModelAndViewContainer mavContainer,_						   NativeWebRequest webRequest) throws Exception_;handle,the,given,return,value,by,adding,attributes,to,the,model,and,setting,a,view,or,setting,the,link,model,and,view,container,set,request,handled,flag,to,code,true,to,indicate,the,response,has,been,handled,directly,param,return,value,the,value,returned,from,the,handler,method,param,return,type,the,type,of,the,return,value,this,type,must,have,previously,been,passed,to,link,supports,return,type,org,springframework,core,method,parameter,and,it,must,have,returned,code,true,param,mav,container,the,model,and,view,container,for,the,current,request,param,web,request,the,current,request,throws,exception,if,the,return,value,handling,results,in,an,error;void,handle,return,value,object,return,value,method,parameter,return,type,model,and,view,container,mav,container,native,web,request,web,request,throws,exception
HandlerMethodReturnValueHandler -> void handleReturnValue(Object returnValue, 						   MethodParameter returnType, 						   ModelAndViewContainer mavContainer, 						   NativeWebRequest webRequest) throws Exception_;1362408075;Handle the given return value by adding attributes to the model and_setting a view or setting the_{@link ModelAndViewContainer#setRequestHandled} flag to {@code true}_to indicate the response has been handled directly.__@param returnValue the value returned from the handler method_@param returnType the type of the return value. This type must have_previously been passed to_{@link #supportsReturnType(org.springframework.core.MethodParameter)}_and it must have returned {@code true}_@param mavContainer the ModelAndViewContainer for the current request_@param webRequest the current request_@throws Exception if the return value handling results in an error;void handleReturnValue(Object returnValue,_						   MethodParameter returnType,_						   ModelAndViewContainer mavContainer,_						   NativeWebRequest webRequest) throws Exception_;handle,the,given,return,value,by,adding,attributes,to,the,model,and,setting,a,view,or,setting,the,link,model,and,view,container,set,request,handled,flag,to,code,true,to,indicate,the,response,has,been,handled,directly,param,return,value,the,value,returned,from,the,handler,method,param,return,type,the,type,of,the,return,value,this,type,must,have,previously,been,passed,to,link,supports,return,type,org,springframework,core,method,parameter,and,it,must,have,returned,code,true,param,mav,container,the,model,and,view,container,for,the,current,request,param,web,request,the,current,request,throws,exception,if,the,return,value,handling,results,in,an,error;void,handle,return,value,object,return,value,method,parameter,return,type,model,and,view,container,mav,container,native,web,request,web,request,throws,exception
HandlerMethodReturnValueHandler -> boolean supportsReturnType(MethodParameter returnType)_;1328020251;Whether the given {@linkplain MethodParameter method return type} is_supported by this handler.__@param returnType the method return type to check_@return {@code true} if this handler supports the supplied return type__{@code false} otherwise;boolean supportsReturnType(MethodParameter returnType)_;whether,the,given,linkplain,method,parameter,method,return,type,is,supported,by,this,handler,param,return,type,the,method,return,type,to,check,return,code,true,if,this,handler,supports,the,supplied,return,type,code,false,otherwise;boolean,supports,return,type,method,parameter,return,type
HandlerMethodReturnValueHandler -> boolean supportsReturnType(MethodParameter returnType)_;1356735495;Whether the given {@linkplain MethodParameter method return type} is_supported by this handler.__@param returnType the method return type to check_@return {@code true} if this handler supports the supplied return type__{@code false} otherwise;boolean supportsReturnType(MethodParameter returnType)_;whether,the,given,linkplain,method,parameter,method,return,type,is,supported,by,this,handler,param,return,type,the,method,return,type,to,check,return,code,true,if,this,handler,supports,the,supplied,return,type,code,false,otherwise;boolean,supports,return,type,method,parameter,return,type
HandlerMethodReturnValueHandler -> boolean supportsReturnType(MethodParameter returnType)_;1362408075;Whether the given {@linkplain MethodParameter method return type} is_supported by this handler.__@param returnType the method return type to check_@return {@code true} if this handler supports the supplied return type__{@code false} otherwise;boolean supportsReturnType(MethodParameter returnType)_;whether,the,given,linkplain,method,parameter,method,return,type,is,supported,by,this,handler,param,return,type,the,method,return,type,to,check,return,code,true,if,this,handler,supports,the,supplied,return,type,code,false,otherwise;boolean,supports,return,type,method,parameter,return,type
HandlerMethodReturnValueHandler -> boolean supportsReturnType(MethodParameter returnType)_;1386363078;Whether the given {@linkplain MethodParameter method return type} is_supported by this handler._@param returnType the method return type to check_@return {@code true} if this handler supports the supplied return type__{@code false} otherwise;boolean supportsReturnType(MethodParameter returnType)_;whether,the,given,linkplain,method,parameter,method,return,type,is,supported,by,this,handler,param,return,type,the,method,return,type,to,check,return,code,true,if,this,handler,supports,the,supplied,return,type,code,false,otherwise;boolean,supports,return,type,method,parameter,return,type
HandlerMethodReturnValueHandler -> boolean supportsReturnType(MethodParameter returnType)_;1411657245;Whether the given {@linkplain MethodParameter method return type} is_supported by this handler._@param returnType the method return type to check_@return {@code true} if this handler supports the supplied return type__{@code false} otherwise;boolean supportsReturnType(MethodParameter returnType)_;whether,the,given,linkplain,method,parameter,method,return,type,is,supported,by,this,handler,param,return,type,the,method,return,type,to,check,return,code,true,if,this,handler,supports,the,supplied,return,type,code,false,otherwise;boolean,supports,return,type,method,parameter,return,type
HandlerMethodReturnValueHandler -> boolean supportsReturnType(MethodParameter returnType)_;1496837955;Whether the given {@linkplain MethodParameter method return type} is_supported by this handler._@param returnType the method return type to check_@return {@code true} if this handler supports the supplied return type__{@code false} otherwise;boolean supportsReturnType(MethodParameter returnType)_;whether,the,given,linkplain,method,parameter,method,return,type,is,supported,by,this,handler,param,return,type,the,method,return,type,to,check,return,code,true,if,this,handler,supports,the,supplied,return,type,code,false,otherwise;boolean,supports,return,type,method,parameter,return,type
