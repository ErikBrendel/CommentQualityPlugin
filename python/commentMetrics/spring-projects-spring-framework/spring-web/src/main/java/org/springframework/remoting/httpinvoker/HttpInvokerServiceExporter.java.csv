# id;timestamp;commentText;codeText;commentWords;codeWords
HttpInvokerServiceExporter -> @Override 	public void handleRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1356735495;Reads a remote invocation from the request, executes it,_and writes the remote invocation result to the response._@see #readRemoteInvocation(HttpServletRequest)_@see #invokeAndCreateResult(org.springframework.remoting.support.RemoteInvocation, Object)_@see #writeRemoteInvocationResult(HttpServletRequest, HttpServletResponse, RemoteInvocationResult);@Override_	public void handleRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		try {_			RemoteInvocation invocation = readRemoteInvocation(request)__			RemoteInvocationResult result = invokeAndCreateResult(invocation, getProxy())__			writeRemoteInvocationResult(request, response, result)__		}_		catch (ClassNotFoundException ex) {_			throw new NestedServletException("Class not found during deserialization", ex)__		}_	};reads,a,remote,invocation,from,the,request,executes,it,and,writes,the,remote,invocation,result,to,the,response,see,read,remote,invocation,http,servlet,request,see,invoke,and,create,result,org,springframework,remoting,support,remote,invocation,object,see,write,remote,invocation,result,http,servlet,request,http,servlet,response,remote,invocation,result;override,public,void,handle,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,try,remote,invocation,invocation,read,remote,invocation,request,remote,invocation,result,result,invoke,and,create,result,invocation,get,proxy,write,remote,invocation,result,request,response,result,catch,class,not,found,exception,ex,throw,new,nested,servlet,exception,class,not,found,during,deserialization,ex
HttpInvokerServiceExporter -> @Override 	public void handleRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1368482696;Reads a remote invocation from the request, executes it,_and writes the remote invocation result to the response._@see #readRemoteInvocation(HttpServletRequest)_@see #invokeAndCreateResult(org.springframework.remoting.support.RemoteInvocation, Object)_@see #writeRemoteInvocationResult(HttpServletRequest, HttpServletResponse, RemoteInvocationResult);@Override_	public void handleRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		try {_			RemoteInvocation invocation = readRemoteInvocation(request)__			RemoteInvocationResult result = invokeAndCreateResult(invocation, getProxy())__			writeRemoteInvocationResult(request, response, result)__		}_		catch (ClassNotFoundException ex) {_			throw new NestedServletException("Class not found during deserialization", ex)__		}_	};reads,a,remote,invocation,from,the,request,executes,it,and,writes,the,remote,invocation,result,to,the,response,see,read,remote,invocation,http,servlet,request,see,invoke,and,create,result,org,springframework,remoting,support,remote,invocation,object,see,write,remote,invocation,result,http,servlet,request,http,servlet,response,remote,invocation,result;override,public,void,handle,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,try,remote,invocation,invocation,read,remote,invocation,request,remote,invocation,result,result,invoke,and,create,result,invocation,get,proxy,write,remote,invocation,result,request,response,result,catch,class,not,found,exception,ex,throw,new,nested,servlet,exception,class,not,found,during,deserialization,ex
HttpInvokerServiceExporter -> @Override 	public void handleRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1459265502;Reads a remote invocation from the request, executes it,_and writes the remote invocation result to the response._@see #readRemoteInvocation(HttpServletRequest)_@see #invokeAndCreateResult(org.springframework.remoting.support.RemoteInvocation, Object)_@see #writeRemoteInvocationResult(HttpServletRequest, HttpServletResponse, RemoteInvocationResult);@Override_	public void handleRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		try {_			RemoteInvocation invocation = readRemoteInvocation(request)__			RemoteInvocationResult result = invokeAndCreateResult(invocation, getProxy())__			writeRemoteInvocationResult(request, response, result)__		}_		catch (ClassNotFoundException ex) {_			throw new NestedServletException("Class not found during deserialization", ex)__		}_	};reads,a,remote,invocation,from,the,request,executes,it,and,writes,the,remote,invocation,result,to,the,response,see,read,remote,invocation,http,servlet,request,see,invoke,and,create,result,org,springframework,remoting,support,remote,invocation,object,see,write,remote,invocation,result,http,servlet,request,http,servlet,response,remote,invocation,result;override,public,void,handle,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,try,remote,invocation,invocation,read,remote,invocation,request,remote,invocation,result,result,invoke,and,create,result,invocation,get,proxy,write,remote,invocation,result,request,response,result,catch,class,not,found,exception,ex,throw,new,nested,servlet,exception,class,not,found,during,deserialization,ex
HttpInvokerServiceExporter -> @Override 	public void handleRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1462293877;Reads a remote invocation from the request, executes it,_and writes the remote invocation result to the response._@see #readRemoteInvocation(HttpServletRequest)_@see #invokeAndCreateResult(org.springframework.remoting.support.RemoteInvocation, Object)_@see #writeRemoteInvocationResult(HttpServletRequest, HttpServletResponse, RemoteInvocationResult);@Override_	public void handleRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		try {_			RemoteInvocation invocation = readRemoteInvocation(request)__			RemoteInvocationResult result = invokeAndCreateResult(invocation, getProxy())__			writeRemoteInvocationResult(request, response, result)__		}_		catch (ClassNotFoundException ex) {_			throw new NestedServletException("Class not found during deserialization", ex)__		}_	};reads,a,remote,invocation,from,the,request,executes,it,and,writes,the,remote,invocation,result,to,the,response,see,read,remote,invocation,http,servlet,request,see,invoke,and,create,result,org,springframework,remoting,support,remote,invocation,object,see,write,remote,invocation,result,http,servlet,request,http,servlet,response,remote,invocation,result;override,public,void,handle,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,try,remote,invocation,invocation,read,remote,invocation,request,remote,invocation,result,result,invoke,and,create,result,invocation,get,proxy,write,remote,invocation,result,request,response,result,catch,class,not,found,exception,ex,throw,new,nested,servlet,exception,class,not,found,during,deserialization,ex
HttpInvokerServiceExporter -> @Override 	public void handleRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1462294539;Reads a remote invocation from the request, executes it,_and writes the remote invocation result to the response._@see #readRemoteInvocation(HttpServletRequest)_@see #invokeAndCreateResult(org.springframework.remoting.support.RemoteInvocation, Object)_@see #writeRemoteInvocationResult(HttpServletRequest, HttpServletResponse, RemoteInvocationResult);@Override_	public void handleRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		try {_			RemoteInvocation invocation = readRemoteInvocation(request)__			RemoteInvocationResult result = invokeAndCreateResult(invocation, getProxy())__			writeRemoteInvocationResult(request, response, result)__		}_		catch (ClassNotFoundException ex) {_			throw new NestedServletException("Class not found during deserialization", ex)__		}_	};reads,a,remote,invocation,from,the,request,executes,it,and,writes,the,remote,invocation,result,to,the,response,see,read,remote,invocation,http,servlet,request,see,invoke,and,create,result,org,springframework,remoting,support,remote,invocation,object,see,write,remote,invocation,result,http,servlet,request,http,servlet,response,remote,invocation,result;override,public,void,handle,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,try,remote,invocation,invocation,read,remote,invocation,request,remote,invocation,result,result,invoke,and,create,result,invocation,get,proxy,write,remote,invocation,result,request,response,result,catch,class,not,found,exception,ex,throw,new,nested,servlet,exception,class,not,found,during,deserialization,ex
HttpInvokerServiceExporter -> @Override 	public void handleRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1468613531;Reads a remote invocation from the request, executes it,_and writes the remote invocation result to the response._@see #readRemoteInvocation(HttpServletRequest)_@see #invokeAndCreateResult(org.springframework.remoting.support.RemoteInvocation, Object)_@see #writeRemoteInvocationResult(HttpServletRequest, HttpServletResponse, RemoteInvocationResult);@Override_	public void handleRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		try {_			RemoteInvocation invocation = readRemoteInvocation(request)__			RemoteInvocationResult result = invokeAndCreateResult(invocation, getProxy())__			writeRemoteInvocationResult(request, response, result)__		}_		catch (ClassNotFoundException ex) {_			throw new NestedServletException("Class not found during deserialization", ex)__		}_	};reads,a,remote,invocation,from,the,request,executes,it,and,writes,the,remote,invocation,result,to,the,response,see,read,remote,invocation,http,servlet,request,see,invoke,and,create,result,org,springframework,remoting,support,remote,invocation,object,see,write,remote,invocation,result,http,servlet,request,http,servlet,response,remote,invocation,result;override,public,void,handle,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,try,remote,invocation,invocation,read,remote,invocation,request,remote,invocation,result,result,invoke,and,create,result,invocation,get,proxy,write,remote,invocation,result,request,response,result,catch,class,not,found,exception,ex,throw,new,nested,servlet,exception,class,not,found,during,deserialization,ex
HttpInvokerServiceExporter -> @Override 	public void handleRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1490350197;Reads a remote invocation from the request, executes it,_and writes the remote invocation result to the response._@see #readRemoteInvocation(HttpServletRequest)_@see #invokeAndCreateResult(org.springframework.remoting.support.RemoteInvocation, Object)_@see #writeRemoteInvocationResult(HttpServletRequest, HttpServletResponse, RemoteInvocationResult);@Override_	public void handleRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		try {_			RemoteInvocation invocation = readRemoteInvocation(request)__			RemoteInvocationResult result = invokeAndCreateResult(invocation, getProxy())__			writeRemoteInvocationResult(request, response, result)__		}_		catch (ClassNotFoundException ex) {_			throw new NestedServletException("Class not found during deserialization", ex)__		}_	};reads,a,remote,invocation,from,the,request,executes,it,and,writes,the,remote,invocation,result,to,the,response,see,read,remote,invocation,http,servlet,request,see,invoke,and,create,result,org,springframework,remoting,support,remote,invocation,object,see,write,remote,invocation,result,http,servlet,request,http,servlet,response,remote,invocation,result;override,public,void,handle,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,try,remote,invocation,invocation,read,remote,invocation,request,remote,invocation,result,result,invoke,and,create,result,invocation,get,proxy,write,remote,invocation,result,request,response,result,catch,class,not,found,exception,ex,throw,new,nested,servlet,exception,class,not,found,during,deserialization,ex
HttpInvokerServiceExporter -> @Override 	public void handleRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1533666953;Reads a remote invocation from the request, executes it,_and writes the remote invocation result to the response._@see #readRemoteInvocation(HttpServletRequest)_@see #invokeAndCreateResult(org.springframework.remoting.support.RemoteInvocation, Object)_@see #writeRemoteInvocationResult(HttpServletRequest, HttpServletResponse, RemoteInvocationResult);@Override_	public void handleRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		try {_			RemoteInvocation invocation = readRemoteInvocation(request)__			RemoteInvocationResult result = invokeAndCreateResult(invocation, getProxy())__			writeRemoteInvocationResult(request, response, result)__		}_		catch (ClassNotFoundException ex) {_			throw new NestedServletException("Class not found during deserialization", ex)__		}_	};reads,a,remote,invocation,from,the,request,executes,it,and,writes,the,remote,invocation,result,to,the,response,see,read,remote,invocation,http,servlet,request,see,invoke,and,create,result,org,springframework,remoting,support,remote,invocation,object,see,write,remote,invocation,result,http,servlet,request,http,servlet,response,remote,invocation,result;override,public,void,handle,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,try,remote,invocation,invocation,read,remote,invocation,request,remote,invocation,result,result,invoke,and,create,result,invocation,get,proxy,write,remote,invocation,result,request,response,result,catch,class,not,found,exception,ex,throw,new,nested,servlet,exception,class,not,found,during,deserialization,ex
HttpInvokerServiceExporter -> protected void writeRemoteInvocationResult( 			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result, OutputStream os) 			throws IOException;1328020251;Serialize the given RemoteInvocation to the given OutputStream._<p>The default implementation gives {@link #decorateOutputStream} a chance_to decorate the stream first (for example, for custom encryption or compression)._Creates an {@link java.io.ObjectOutputStream} for the final stream and calls_{@link #doWriteRemoteInvocationResult} to actually write the object._<p>Can be overridden for custom serialization of the invocation._@param request current HTTP request_@param response current HTTP response_@param result the RemoteInvocationResult object_@param os the OutputStream to write to_@throws IOException in case of I/O failure_@see #decorateOutputStream_@see #doWriteRemoteInvocationResult;protected void writeRemoteInvocationResult(_			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result, OutputStream os)_			throws IOException {__		ObjectOutputStream oos = createObjectOutputStream(decorateOutputStream(request, response, os))__		try {_			doWriteRemoteInvocationResult(result, oos)__		}_		finally {_			oos.close()__		}_	};serialize,the,given,remote,invocation,to,the,given,output,stream,p,the,default,implementation,gives,link,decorate,output,stream,a,chance,to,decorate,the,stream,first,for,example,for,custom,encryption,or,compression,creates,an,link,java,io,object,output,stream,for,the,final,stream,and,calls,link,do,write,remote,invocation,result,to,actually,write,the,object,p,can,be,overridden,for,custom,serialization,of,the,invocation,param,request,current,http,request,param,response,current,http,response,param,result,the,remote,invocation,result,object,param,os,the,output,stream,to,write,to,throws,ioexception,in,case,of,i,o,failure,see,decorate,output,stream,see,do,write,remote,invocation,result;protected,void,write,remote,invocation,result,http,servlet,request,request,http,servlet,response,response,remote,invocation,result,result,output,stream,os,throws,ioexception,object,output,stream,oos,create,object,output,stream,decorate,output,stream,request,response,os,try,do,write,remote,invocation,result,result,oos,finally,oos,close
HttpInvokerServiceExporter -> protected void writeRemoteInvocationResult( 			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result, OutputStream os) 			throws IOException;1356735495;Serialize the given RemoteInvocation to the given OutputStream._<p>The default implementation gives {@link #decorateOutputStream} a chance_to decorate the stream first (for example, for custom encryption or compression)._Creates an {@link java.io.ObjectOutputStream} for the final stream and calls_{@link #doWriteRemoteInvocationResult} to actually write the object._<p>Can be overridden for custom serialization of the invocation._@param request current HTTP request_@param response current HTTP response_@param result the RemoteInvocationResult object_@param os the OutputStream to write to_@throws IOException in case of I/O failure_@see #decorateOutputStream_@see #doWriteRemoteInvocationResult;protected void writeRemoteInvocationResult(_			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result, OutputStream os)_			throws IOException {__		ObjectOutputStream oos = createObjectOutputStream(decorateOutputStream(request, response, os))__		try {_			doWriteRemoteInvocationResult(result, oos)__		}_		finally {_			oos.close()__		}_	};serialize,the,given,remote,invocation,to,the,given,output,stream,p,the,default,implementation,gives,link,decorate,output,stream,a,chance,to,decorate,the,stream,first,for,example,for,custom,encryption,or,compression,creates,an,link,java,io,object,output,stream,for,the,final,stream,and,calls,link,do,write,remote,invocation,result,to,actually,write,the,object,p,can,be,overridden,for,custom,serialization,of,the,invocation,param,request,current,http,request,param,response,current,http,response,param,result,the,remote,invocation,result,object,param,os,the,output,stream,to,write,to,throws,ioexception,in,case,of,i,o,failure,see,decorate,output,stream,see,do,write,remote,invocation,result;protected,void,write,remote,invocation,result,http,servlet,request,request,http,servlet,response,response,remote,invocation,result,result,output,stream,os,throws,ioexception,object,output,stream,oos,create,object,output,stream,decorate,output,stream,request,response,os,try,do,write,remote,invocation,result,result,oos,finally,oos,close
HttpInvokerServiceExporter -> protected void writeRemoteInvocationResult( 			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result, OutputStream os) 			throws IOException;1357119239;Serialize the given RemoteInvocation to the given OutputStream._<p>The default implementation gives {@link #decorateOutputStream} a chance_to decorate the stream first (for example, for custom encryption or compression)._Creates an {@link java.io.ObjectOutputStream} for the final stream and calls_{@link #doWriteRemoteInvocationResult} to actually write the object._<p>Can be overridden for custom serialization of the invocation._@param request current HTTP request_@param response current HTTP response_@param result the RemoteInvocationResult object_@param os the OutputStream to write to_@throws IOException in case of I/O failure_@see #decorateOutputStream_@see #doWriteRemoteInvocationResult;protected void writeRemoteInvocationResult(_			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result, OutputStream os)_			throws IOException {__		ObjectOutputStream oos = createObjectOutputStream(decorateOutputStream(request, response, os))__		try {_			doWriteRemoteInvocationResult(result, oos)__		}_		finally {_			oos.close()__		}_	};serialize,the,given,remote,invocation,to,the,given,output,stream,p,the,default,implementation,gives,link,decorate,output,stream,a,chance,to,decorate,the,stream,first,for,example,for,custom,encryption,or,compression,creates,an,link,java,io,object,output,stream,for,the,final,stream,and,calls,link,do,write,remote,invocation,result,to,actually,write,the,object,p,can,be,overridden,for,custom,serialization,of,the,invocation,param,request,current,http,request,param,response,current,http,response,param,result,the,remote,invocation,result,object,param,os,the,output,stream,to,write,to,throws,ioexception,in,case,of,i,o,failure,see,decorate,output,stream,see,do,write,remote,invocation,result;protected,void,write,remote,invocation,result,http,servlet,request,request,http,servlet,response,response,remote,invocation,result,result,output,stream,os,throws,ioexception,object,output,stream,oos,create,object,output,stream,decorate,output,stream,request,response,os,try,do,write,remote,invocation,result,result,oos,finally,oos,close
HttpInvokerServiceExporter -> protected void writeRemoteInvocationResult( 			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result, OutputStream os) 			throws IOException;1368482696;Serialize the given RemoteInvocation to the given OutputStream._<p>The default implementation gives {@link #decorateOutputStream} a chance_to decorate the stream first (for example, for custom encryption or compression)._Creates an {@link java.io.ObjectOutputStream} for the final stream and calls_{@link #doWriteRemoteInvocationResult} to actually write the object._<p>Can be overridden for custom serialization of the invocation._@param request current HTTP request_@param response current HTTP response_@param result the RemoteInvocationResult object_@param os the OutputStream to write to_@throws IOException in case of I/O failure_@see #decorateOutputStream_@see #doWriteRemoteInvocationResult;protected void writeRemoteInvocationResult(_			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result, OutputStream os)_			throws IOException {__		ObjectOutputStream oos = createObjectOutputStream(decorateOutputStream(request, response, os))__		try {_			doWriteRemoteInvocationResult(result, oos)__		}_		finally {_			oos.close()__		}_	};serialize,the,given,remote,invocation,to,the,given,output,stream,p,the,default,implementation,gives,link,decorate,output,stream,a,chance,to,decorate,the,stream,first,for,example,for,custom,encryption,or,compression,creates,an,link,java,io,object,output,stream,for,the,final,stream,and,calls,link,do,write,remote,invocation,result,to,actually,write,the,object,p,can,be,overridden,for,custom,serialization,of,the,invocation,param,request,current,http,request,param,response,current,http,response,param,result,the,remote,invocation,result,object,param,os,the,output,stream,to,write,to,throws,ioexception,in,case,of,i,o,failure,see,decorate,output,stream,see,do,write,remote,invocation,result;protected,void,write,remote,invocation,result,http,servlet,request,request,http,servlet,response,response,remote,invocation,result,result,output,stream,os,throws,ioexception,object,output,stream,oos,create,object,output,stream,decorate,output,stream,request,response,os,try,do,write,remote,invocation,result,result,oos,finally,oos,close
HttpInvokerServiceExporter -> protected void writeRemoteInvocationResult( 			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result, OutputStream os) 			throws IOException;1459265502;Serialize the given RemoteInvocation to the given OutputStream._<p>The default implementation gives {@link #decorateOutputStream} a chance_to decorate the stream first (for example, for custom encryption or compression)._Creates an {@link java.io.ObjectOutputStream} for the final stream and calls_{@link #doWriteRemoteInvocationResult} to actually write the object._<p>Can be overridden for custom serialization of the invocation._@param request current HTTP request_@param response current HTTP response_@param result the RemoteInvocationResult object_@param os the OutputStream to write to_@throws IOException in case of I/O failure_@see #decorateOutputStream_@see #doWriteRemoteInvocationResult;protected void writeRemoteInvocationResult(_			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result, OutputStream os)_			throws IOException {__		ObjectOutputStream oos =_				createObjectOutputStream(new FlushGuardedOutputStream(decorateOutputStream(request, response, os)))__		try {_			doWriteRemoteInvocationResult(result, oos)__		}_		finally {_			oos.close()__		}_	};serialize,the,given,remote,invocation,to,the,given,output,stream,p,the,default,implementation,gives,link,decorate,output,stream,a,chance,to,decorate,the,stream,first,for,example,for,custom,encryption,or,compression,creates,an,link,java,io,object,output,stream,for,the,final,stream,and,calls,link,do,write,remote,invocation,result,to,actually,write,the,object,p,can,be,overridden,for,custom,serialization,of,the,invocation,param,request,current,http,request,param,response,current,http,response,param,result,the,remote,invocation,result,object,param,os,the,output,stream,to,write,to,throws,ioexception,in,case,of,i,o,failure,see,decorate,output,stream,see,do,write,remote,invocation,result;protected,void,write,remote,invocation,result,http,servlet,request,request,http,servlet,response,response,remote,invocation,result,result,output,stream,os,throws,ioexception,object,output,stream,oos,create,object,output,stream,new,flush,guarded,output,stream,decorate,output,stream,request,response,os,try,do,write,remote,invocation,result,result,oos,finally,oos,close
HttpInvokerServiceExporter -> protected void writeRemoteInvocationResult( 			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result, OutputStream os) 			throws IOException;1462293877;Serialize the given RemoteInvocation to the given OutputStream._<p>The default implementation gives {@link #decorateOutputStream} a chance_to decorate the stream first (for example, for custom encryption or compression)._Creates an {@link java.io.ObjectOutputStream} for the final stream and calls_{@link #doWriteRemoteInvocationResult} to actually write the object._<p>Can be overridden for custom serialization of the invocation._@param request current HTTP request_@param response current HTTP response_@param result the RemoteInvocationResult object_@param os the OutputStream to write to_@throws IOException in case of I/O failure_@see #decorateOutputStream_@see #doWriteRemoteInvocationResult;protected void writeRemoteInvocationResult(_			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result, OutputStream os)_			throws IOException {__		ObjectOutputStream oos =_				createObjectOutputStream(new FlushGuardedOutputStream(decorateOutputStream(request, response, os)))__		try {_			doWriteRemoteInvocationResult(result, oos)__		}_		finally {_			oos.close()__		}_	};serialize,the,given,remote,invocation,to,the,given,output,stream,p,the,default,implementation,gives,link,decorate,output,stream,a,chance,to,decorate,the,stream,first,for,example,for,custom,encryption,or,compression,creates,an,link,java,io,object,output,stream,for,the,final,stream,and,calls,link,do,write,remote,invocation,result,to,actually,write,the,object,p,can,be,overridden,for,custom,serialization,of,the,invocation,param,request,current,http,request,param,response,current,http,response,param,result,the,remote,invocation,result,object,param,os,the,output,stream,to,write,to,throws,ioexception,in,case,of,i,o,failure,see,decorate,output,stream,see,do,write,remote,invocation,result;protected,void,write,remote,invocation,result,http,servlet,request,request,http,servlet,response,response,remote,invocation,result,result,output,stream,os,throws,ioexception,object,output,stream,oos,create,object,output,stream,new,flush,guarded,output,stream,decorate,output,stream,request,response,os,try,do,write,remote,invocation,result,result,oos,finally,oos,close
HttpInvokerServiceExporter -> protected void writeRemoteInvocationResult( 			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result, OutputStream os) 			throws IOException;1462294539;Serialize the given RemoteInvocation to the given OutputStream._<p>The default implementation gives {@link #decorateOutputStream} a chance_to decorate the stream first (for example, for custom encryption or compression)._Creates an {@link java.io.ObjectOutputStream} for the final stream and calls_{@link #doWriteRemoteInvocationResult} to actually write the object._<p>Can be overridden for custom serialization of the invocation._@param request current HTTP request_@param response current HTTP response_@param result the RemoteInvocationResult object_@param os the OutputStream to write to_@throws IOException in case of I/O failure_@see #decorateOutputStream_@see #doWriteRemoteInvocationResult;protected void writeRemoteInvocationResult(_			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result, OutputStream os)_			throws IOException {__		ObjectOutputStream oos =_				createObjectOutputStream(new FlushGuardedOutputStream(decorateOutputStream(request, response, os)))__		try {_			doWriteRemoteInvocationResult(result, oos)__		}_		finally {_			oos.close()__		}_	};serialize,the,given,remote,invocation,to,the,given,output,stream,p,the,default,implementation,gives,link,decorate,output,stream,a,chance,to,decorate,the,stream,first,for,example,for,custom,encryption,or,compression,creates,an,link,java,io,object,output,stream,for,the,final,stream,and,calls,link,do,write,remote,invocation,result,to,actually,write,the,object,p,can,be,overridden,for,custom,serialization,of,the,invocation,param,request,current,http,request,param,response,current,http,response,param,result,the,remote,invocation,result,object,param,os,the,output,stream,to,write,to,throws,ioexception,in,case,of,i,o,failure,see,decorate,output,stream,see,do,write,remote,invocation,result;protected,void,write,remote,invocation,result,http,servlet,request,request,http,servlet,response,response,remote,invocation,result,result,output,stream,os,throws,ioexception,object,output,stream,oos,create,object,output,stream,new,flush,guarded,output,stream,decorate,output,stream,request,response,os,try,do,write,remote,invocation,result,result,oos,finally,oos,close
HttpInvokerServiceExporter -> protected void writeRemoteInvocationResult( 			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result, OutputStream os) 			throws IOException;1468613531;Serialize the given RemoteInvocation to the given OutputStream._<p>The default implementation gives {@link #decorateOutputStream} a chance_to decorate the stream first (for example, for custom encryption or compression)._Creates an {@link java.io.ObjectOutputStream} for the final stream and calls_{@link #doWriteRemoteInvocationResult} to actually write the object._<p>Can be overridden for custom serialization of the invocation._@param request current HTTP request_@param response current HTTP response_@param result the RemoteInvocationResult object_@param os the OutputStream to write to_@throws IOException in case of I/O failure_@see #decorateOutputStream_@see #doWriteRemoteInvocationResult;protected void writeRemoteInvocationResult(_			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result, OutputStream os)_			throws IOException {__		ObjectOutputStream oos =_				createObjectOutputStream(new FlushGuardedOutputStream(decorateOutputStream(request, response, os)))__		try {_			doWriteRemoteInvocationResult(result, oos)__		}_		finally {_			oos.close()__		}_	};serialize,the,given,remote,invocation,to,the,given,output,stream,p,the,default,implementation,gives,link,decorate,output,stream,a,chance,to,decorate,the,stream,first,for,example,for,custom,encryption,or,compression,creates,an,link,java,io,object,output,stream,for,the,final,stream,and,calls,link,do,write,remote,invocation,result,to,actually,write,the,object,p,can,be,overridden,for,custom,serialization,of,the,invocation,param,request,current,http,request,param,response,current,http,response,param,result,the,remote,invocation,result,object,param,os,the,output,stream,to,write,to,throws,ioexception,in,case,of,i,o,failure,see,decorate,output,stream,see,do,write,remote,invocation,result;protected,void,write,remote,invocation,result,http,servlet,request,request,http,servlet,response,response,remote,invocation,result,result,output,stream,os,throws,ioexception,object,output,stream,oos,create,object,output,stream,new,flush,guarded,output,stream,decorate,output,stream,request,response,os,try,do,write,remote,invocation,result,result,oos,finally,oos,close
HttpInvokerServiceExporter -> protected void writeRemoteInvocationResult( 			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result, OutputStream os) 			throws IOException;1490350197;Serialize the given RemoteInvocation to the given OutputStream._<p>The default implementation gives {@link #decorateOutputStream} a chance_to decorate the stream first (for example, for custom encryption or compression)._Creates an {@link java.io.ObjectOutputStream} for the final stream and calls_{@link #doWriteRemoteInvocationResult} to actually write the object._<p>Can be overridden for custom serialization of the invocation._@param request current HTTP request_@param response current HTTP response_@param result the RemoteInvocationResult object_@param os the OutputStream to write to_@throws IOException in case of I/O failure_@see #decorateOutputStream_@see #doWriteRemoteInvocationResult;protected void writeRemoteInvocationResult(_			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result, OutputStream os)_			throws IOException {__		ObjectOutputStream oos =_				createObjectOutputStream(new FlushGuardedOutputStream(decorateOutputStream(request, response, os)))__		try {_			doWriteRemoteInvocationResult(result, oos)__		}_		finally {_			oos.close()__		}_	};serialize,the,given,remote,invocation,to,the,given,output,stream,p,the,default,implementation,gives,link,decorate,output,stream,a,chance,to,decorate,the,stream,first,for,example,for,custom,encryption,or,compression,creates,an,link,java,io,object,output,stream,for,the,final,stream,and,calls,link,do,write,remote,invocation,result,to,actually,write,the,object,p,can,be,overridden,for,custom,serialization,of,the,invocation,param,request,current,http,request,param,response,current,http,response,param,result,the,remote,invocation,result,object,param,os,the,output,stream,to,write,to,throws,ioexception,in,case,of,i,o,failure,see,decorate,output,stream,see,do,write,remote,invocation,result;protected,void,write,remote,invocation,result,http,servlet,request,request,http,servlet,response,response,remote,invocation,result,result,output,stream,os,throws,ioexception,object,output,stream,oos,create,object,output,stream,new,flush,guarded,output,stream,decorate,output,stream,request,response,os,try,do,write,remote,invocation,result,result,oos,finally,oos,close
HttpInvokerServiceExporter -> protected void writeRemoteInvocationResult( 			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result, OutputStream os) 			throws IOException;1533666953;Serialize the given RemoteInvocation to the given OutputStream._<p>The default implementation gives {@link #decorateOutputStream} a chance_to decorate the stream first (for example, for custom encryption or compression)._Creates an {@link java.io.ObjectOutputStream} for the final stream and calls_{@link #doWriteRemoteInvocationResult} to actually write the object._<p>Can be overridden for custom serialization of the invocation._@param request current HTTP request_@param response current HTTP response_@param result the RemoteInvocationResult object_@param os the OutputStream to write to_@throws IOException in case of I/O failure_@see #decorateOutputStream_@see #doWriteRemoteInvocationResult;protected void writeRemoteInvocationResult(_			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result, OutputStream os)_			throws IOException {__		ObjectOutputStream oos =_				createObjectOutputStream(new FlushGuardedOutputStream(decorateOutputStream(request, response, os)))__		try {_			doWriteRemoteInvocationResult(result, oos)__		}_		finally {_			oos.close()__		}_	};serialize,the,given,remote,invocation,to,the,given,output,stream,p,the,default,implementation,gives,link,decorate,output,stream,a,chance,to,decorate,the,stream,first,for,example,for,custom,encryption,or,compression,creates,an,link,java,io,object,output,stream,for,the,final,stream,and,calls,link,do,write,remote,invocation,result,to,actually,write,the,object,p,can,be,overridden,for,custom,serialization,of,the,invocation,param,request,current,http,request,param,response,current,http,response,param,result,the,remote,invocation,result,object,param,os,the,output,stream,to,write,to,throws,ioexception,in,case,of,i,o,failure,see,decorate,output,stream,see,do,write,remote,invocation,result;protected,void,write,remote,invocation,result,http,servlet,request,request,http,servlet,response,response,remote,invocation,result,result,output,stream,os,throws,ioexception,object,output,stream,oos,create,object,output,stream,new,flush,guarded,output,stream,decorate,output,stream,request,response,os,try,do,write,remote,invocation,result,result,oos,finally,oos,close
HttpInvokerServiceExporter -> public void handleRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1328020251;Reads a remote invocation from the request, executes it,_and writes the remote invocation result to the response._@see #readRemoteInvocation(HttpServletRequest)_@see #invokeAndCreateResult(org.springframework.remoting.support.RemoteInvocation, Object)_@see #writeRemoteInvocationResult(HttpServletRequest, HttpServletResponse, RemoteInvocationResult);public void handleRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		try {_			RemoteInvocation invocation = readRemoteInvocation(request)__			RemoteInvocationResult result = invokeAndCreateResult(invocation, getProxy())__			writeRemoteInvocationResult(request, response, result)__		}_		catch (ClassNotFoundException ex) {_			throw new NestedServletException("Class not found during deserialization", ex)__		}_	};reads,a,remote,invocation,from,the,request,executes,it,and,writes,the,remote,invocation,result,to,the,response,see,read,remote,invocation,http,servlet,request,see,invoke,and,create,result,org,springframework,remoting,support,remote,invocation,object,see,write,remote,invocation,result,http,servlet,request,http,servlet,response,remote,invocation,result;public,void,handle,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,try,remote,invocation,invocation,read,remote,invocation,request,remote,invocation,result,result,invoke,and,create,result,invocation,get,proxy,write,remote,invocation,result,request,response,result,catch,class,not,found,exception,ex,throw,new,nested,servlet,exception,class,not,found,during,deserialization,ex
HttpInvokerServiceExporter -> public void handleRequest(HttpServletRequest request, HttpServletResponse response) 			throws ServletException, IOException;1357119239;Reads a remote invocation from the request, executes it,_and writes the remote invocation result to the response._@see #readRemoteInvocation(HttpServletRequest)_@see #invokeAndCreateResult(org.springframework.remoting.support.RemoteInvocation, Object)_@see #writeRemoteInvocationResult(HttpServletRequest, HttpServletResponse, RemoteInvocationResult);public void handleRequest(HttpServletRequest request, HttpServletResponse response)_			throws ServletException, IOException {__		try {_			RemoteInvocation invocation = readRemoteInvocation(request)__			RemoteInvocationResult result = invokeAndCreateResult(invocation, getProxy())__			writeRemoteInvocationResult(request, response, result)__		}_		catch (ClassNotFoundException ex) {_			throw new NestedServletException("Class not found during deserialization", ex)__		}_	};reads,a,remote,invocation,from,the,request,executes,it,and,writes,the,remote,invocation,result,to,the,response,see,read,remote,invocation,http,servlet,request,see,invoke,and,create,result,org,springframework,remoting,support,remote,invocation,object,see,write,remote,invocation,result,http,servlet,request,http,servlet,response,remote,invocation,result;public,void,handle,request,http,servlet,request,request,http,servlet,response,response,throws,servlet,exception,ioexception,try,remote,invocation,invocation,read,remote,invocation,request,remote,invocation,result,result,invoke,and,create,result,invocation,get,proxy,write,remote,invocation,result,request,response,result,catch,class,not,found,exception,ex,throw,new,nested,servlet,exception,class,not,found,during,deserialization,ex
HttpInvokerServiceExporter -> protected OutputStream decorateOutputStream( 			HttpServletRequest request, HttpServletResponse response, OutputStream os) throws IOException;1328020251;Return the OutputStream to use for writing remote invocation results,_potentially decorating the given original OutputStream._<p>The default implementation returns the given stream as-is._Can be overridden, for example, for custom encryption or compression._@param request current HTTP request_@param response current HTTP response_@param os the original OutputStream_@return the potentially decorated OutputStream_@throws IOException in case of I/O failure;protected OutputStream decorateOutputStream(_			HttpServletRequest request, HttpServletResponse response, OutputStream os) throws IOException {__		return os__	};return,the,output,stream,to,use,for,writing,remote,invocation,results,potentially,decorating,the,given,original,output,stream,p,the,default,implementation,returns,the,given,stream,as,is,can,be,overridden,for,example,for,custom,encryption,or,compression,param,request,current,http,request,param,response,current,http,response,param,os,the,original,output,stream,return,the,potentially,decorated,output,stream,throws,ioexception,in,case,of,i,o,failure;protected,output,stream,decorate,output,stream,http,servlet,request,request,http,servlet,response,response,output,stream,os,throws,ioexception,return,os
HttpInvokerServiceExporter -> protected OutputStream decorateOutputStream( 			HttpServletRequest request, HttpServletResponse response, OutputStream os) throws IOException;1356735495;Return the OutputStream to use for writing remote invocation results,_potentially decorating the given original OutputStream._<p>The default implementation returns the given stream as-is._Can be overridden, for example, for custom encryption or compression._@param request current HTTP request_@param response current HTTP response_@param os the original OutputStream_@return the potentially decorated OutputStream_@throws IOException in case of I/O failure;protected OutputStream decorateOutputStream(_			HttpServletRequest request, HttpServletResponse response, OutputStream os) throws IOException {__		return os__	};return,the,output,stream,to,use,for,writing,remote,invocation,results,potentially,decorating,the,given,original,output,stream,p,the,default,implementation,returns,the,given,stream,as,is,can,be,overridden,for,example,for,custom,encryption,or,compression,param,request,current,http,request,param,response,current,http,response,param,os,the,original,output,stream,return,the,potentially,decorated,output,stream,throws,ioexception,in,case,of,i,o,failure;protected,output,stream,decorate,output,stream,http,servlet,request,request,http,servlet,response,response,output,stream,os,throws,ioexception,return,os
HttpInvokerServiceExporter -> protected OutputStream decorateOutputStream( 			HttpServletRequest request, HttpServletResponse response, OutputStream os) throws IOException;1357119239;Return the OutputStream to use for writing remote invocation results,_potentially decorating the given original OutputStream._<p>The default implementation returns the given stream as-is._Can be overridden, for example, for custom encryption or compression._@param request current HTTP request_@param response current HTTP response_@param os the original OutputStream_@return the potentially decorated OutputStream_@throws IOException in case of I/O failure;protected OutputStream decorateOutputStream(_			HttpServletRequest request, HttpServletResponse response, OutputStream os) throws IOException {__		return os__	};return,the,output,stream,to,use,for,writing,remote,invocation,results,potentially,decorating,the,given,original,output,stream,p,the,default,implementation,returns,the,given,stream,as,is,can,be,overridden,for,example,for,custom,encryption,or,compression,param,request,current,http,request,param,response,current,http,response,param,os,the,original,output,stream,return,the,potentially,decorated,output,stream,throws,ioexception,in,case,of,i,o,failure;protected,output,stream,decorate,output,stream,http,servlet,request,request,http,servlet,response,response,output,stream,os,throws,ioexception,return,os
HttpInvokerServiceExporter -> protected OutputStream decorateOutputStream( 			HttpServletRequest request, HttpServletResponse response, OutputStream os) throws IOException;1368482696;Return the OutputStream to use for writing remote invocation results,_potentially decorating the given original OutputStream._<p>The default implementation returns the given stream as-is._Can be overridden, for example, for custom encryption or compression._@param request current HTTP request_@param response current HTTP response_@param os the original OutputStream_@return the potentially decorated OutputStream_@throws IOException in case of I/O failure;protected OutputStream decorateOutputStream(_			HttpServletRequest request, HttpServletResponse response, OutputStream os) throws IOException {__		return os__	};return,the,output,stream,to,use,for,writing,remote,invocation,results,potentially,decorating,the,given,original,output,stream,p,the,default,implementation,returns,the,given,stream,as,is,can,be,overridden,for,example,for,custom,encryption,or,compression,param,request,current,http,request,param,response,current,http,response,param,os,the,original,output,stream,return,the,potentially,decorated,output,stream,throws,ioexception,in,case,of,i,o,failure;protected,output,stream,decorate,output,stream,http,servlet,request,request,http,servlet,response,response,output,stream,os,throws,ioexception,return,os
HttpInvokerServiceExporter -> protected OutputStream decorateOutputStream( 			HttpServletRequest request, HttpServletResponse response, OutputStream os) throws IOException;1459265502;Return the OutputStream to use for writing remote invocation results,_potentially decorating the given original OutputStream._<p>The default implementation returns the given stream as-is._Can be overridden, for example, for custom encryption or compression._@param request current HTTP request_@param response current HTTP response_@param os the original OutputStream_@return the potentially decorated OutputStream_@throws IOException in case of I/O failure;protected OutputStream decorateOutputStream(_			HttpServletRequest request, HttpServletResponse response, OutputStream os) throws IOException {__		return os__	};return,the,output,stream,to,use,for,writing,remote,invocation,results,potentially,decorating,the,given,original,output,stream,p,the,default,implementation,returns,the,given,stream,as,is,can,be,overridden,for,example,for,custom,encryption,or,compression,param,request,current,http,request,param,response,current,http,response,param,os,the,original,output,stream,return,the,potentially,decorated,output,stream,throws,ioexception,in,case,of,i,o,failure;protected,output,stream,decorate,output,stream,http,servlet,request,request,http,servlet,response,response,output,stream,os,throws,ioexception,return,os
HttpInvokerServiceExporter -> protected OutputStream decorateOutputStream( 			HttpServletRequest request, HttpServletResponse response, OutputStream os) throws IOException;1462293877;Return the OutputStream to use for writing remote invocation results,_potentially decorating the given original OutputStream._<p>The default implementation returns the given stream as-is._Can be overridden, for example, for custom encryption or compression._@param request current HTTP request_@param response current HTTP response_@param os the original OutputStream_@return the potentially decorated OutputStream_@throws IOException in case of I/O failure;protected OutputStream decorateOutputStream(_			HttpServletRequest request, HttpServletResponse response, OutputStream os) throws IOException {__		return os__	};return,the,output,stream,to,use,for,writing,remote,invocation,results,potentially,decorating,the,given,original,output,stream,p,the,default,implementation,returns,the,given,stream,as,is,can,be,overridden,for,example,for,custom,encryption,or,compression,param,request,current,http,request,param,response,current,http,response,param,os,the,original,output,stream,return,the,potentially,decorated,output,stream,throws,ioexception,in,case,of,i,o,failure;protected,output,stream,decorate,output,stream,http,servlet,request,request,http,servlet,response,response,output,stream,os,throws,ioexception,return,os
HttpInvokerServiceExporter -> protected OutputStream decorateOutputStream( 			HttpServletRequest request, HttpServletResponse response, OutputStream os) throws IOException;1462294539;Return the OutputStream to use for writing remote invocation results,_potentially decorating the given original OutputStream._<p>The default implementation returns the given stream as-is._Can be overridden, for example, for custom encryption or compression._@param request current HTTP request_@param response current HTTP response_@param os the original OutputStream_@return the potentially decorated OutputStream_@throws IOException in case of I/O failure;protected OutputStream decorateOutputStream(_			HttpServletRequest request, HttpServletResponse response, OutputStream os) throws IOException {__		return os__	};return,the,output,stream,to,use,for,writing,remote,invocation,results,potentially,decorating,the,given,original,output,stream,p,the,default,implementation,returns,the,given,stream,as,is,can,be,overridden,for,example,for,custom,encryption,or,compression,param,request,current,http,request,param,response,current,http,response,param,os,the,original,output,stream,return,the,potentially,decorated,output,stream,throws,ioexception,in,case,of,i,o,failure;protected,output,stream,decorate,output,stream,http,servlet,request,request,http,servlet,response,response,output,stream,os,throws,ioexception,return,os
HttpInvokerServiceExporter -> protected OutputStream decorateOutputStream( 			HttpServletRequest request, HttpServletResponse response, OutputStream os) throws IOException;1468613531;Return the OutputStream to use for writing remote invocation results,_potentially decorating the given original OutputStream._<p>The default implementation returns the given stream as-is._Can be overridden, for example, for custom encryption or compression._@param request current HTTP request_@param response current HTTP response_@param os the original OutputStream_@return the potentially decorated OutputStream_@throws IOException in case of I/O failure;protected OutputStream decorateOutputStream(_			HttpServletRequest request, HttpServletResponse response, OutputStream os) throws IOException {__		return os__	};return,the,output,stream,to,use,for,writing,remote,invocation,results,potentially,decorating,the,given,original,output,stream,p,the,default,implementation,returns,the,given,stream,as,is,can,be,overridden,for,example,for,custom,encryption,or,compression,param,request,current,http,request,param,response,current,http,response,param,os,the,original,output,stream,return,the,potentially,decorated,output,stream,throws,ioexception,in,case,of,i,o,failure;protected,output,stream,decorate,output,stream,http,servlet,request,request,http,servlet,response,response,output,stream,os,throws,ioexception,return,os
HttpInvokerServiceExporter -> protected OutputStream decorateOutputStream( 			HttpServletRequest request, HttpServletResponse response, OutputStream os) throws IOException;1490350197;Return the OutputStream to use for writing remote invocation results,_potentially decorating the given original OutputStream._<p>The default implementation returns the given stream as-is._Can be overridden, for example, for custom encryption or compression._@param request current HTTP request_@param response current HTTP response_@param os the original OutputStream_@return the potentially decorated OutputStream_@throws IOException in case of I/O failure;protected OutputStream decorateOutputStream(_			HttpServletRequest request, HttpServletResponse response, OutputStream os) throws IOException {__		return os__	};return,the,output,stream,to,use,for,writing,remote,invocation,results,potentially,decorating,the,given,original,output,stream,p,the,default,implementation,returns,the,given,stream,as,is,can,be,overridden,for,example,for,custom,encryption,or,compression,param,request,current,http,request,param,response,current,http,response,param,os,the,original,output,stream,return,the,potentially,decorated,output,stream,throws,ioexception,in,case,of,i,o,failure;protected,output,stream,decorate,output,stream,http,servlet,request,request,http,servlet,response,response,output,stream,os,throws,ioexception,return,os
HttpInvokerServiceExporter -> protected OutputStream decorateOutputStream( 			HttpServletRequest request, HttpServletResponse response, OutputStream os) throws IOException;1533666953;Return the OutputStream to use for writing remote invocation results,_potentially decorating the given original OutputStream._<p>The default implementation returns the given stream as-is._Can be overridden, for example, for custom encryption or compression._@param request current HTTP request_@param response current HTTP response_@param os the original OutputStream_@return the potentially decorated OutputStream_@throws IOException in case of I/O failure;protected OutputStream decorateOutputStream(_			HttpServletRequest request, HttpServletResponse response, OutputStream os) throws IOException {__		return os__	};return,the,output,stream,to,use,for,writing,remote,invocation,results,potentially,decorating,the,given,original,output,stream,p,the,default,implementation,returns,the,given,stream,as,is,can,be,overridden,for,example,for,custom,encryption,or,compression,param,request,current,http,request,param,response,current,http,response,param,os,the,original,output,stream,return,the,potentially,decorated,output,stream,throws,ioexception,in,case,of,i,o,failure;protected,output,stream,decorate,output,stream,http,servlet,request,request,http,servlet,response,response,output,stream,os,throws,ioexception,return,os
HttpInvokerServiceExporter -> protected RemoteInvocation readRemoteInvocation(HttpServletRequest request) 			throws IOException, ClassNotFoundException;1328020251;Read a RemoteInvocation from the given HTTP request._<p>Delegates to_{@link #readRemoteInvocation(javax.servlet.http.HttpServletRequest, java.io.InputStream)}_with the_{@link javax.servlet.ServletRequest#getInputStream() servlet request's input stream}._@param request current HTTP request_@return the RemoteInvocation object_@throws IOException in case of I/O failure_@throws ClassNotFoundException if thrown by deserialization;protected RemoteInvocation readRemoteInvocation(HttpServletRequest request)_			throws IOException, ClassNotFoundException {__		return readRemoteInvocation(request, request.getInputStream())__	};read,a,remote,invocation,from,the,given,http,request,p,delegates,to,link,read,remote,invocation,javax,servlet,http,http,servlet,request,java,io,input,stream,with,the,link,javax,servlet,servlet,request,get,input,stream,servlet,request,s,input,stream,param,request,current,http,request,return,the,remote,invocation,object,throws,ioexception,in,case,of,i,o,failure,throws,class,not,found,exception,if,thrown,by,deserialization;protected,remote,invocation,read,remote,invocation,http,servlet,request,request,throws,ioexception,class,not,found,exception,return,read,remote,invocation,request,request,get,input,stream
HttpInvokerServiceExporter -> protected RemoteInvocation readRemoteInvocation(HttpServletRequest request) 			throws IOException, ClassNotFoundException;1356735495;Read a RemoteInvocation from the given HTTP request._<p>Delegates to_{@link #readRemoteInvocation(javax.servlet.http.HttpServletRequest, java.io.InputStream)}_with the_{@link javax.servlet.ServletRequest#getInputStream() servlet request's input stream}._@param request current HTTP request_@return the RemoteInvocation object_@throws IOException in case of I/O failure_@throws ClassNotFoundException if thrown by deserialization;protected RemoteInvocation readRemoteInvocation(HttpServletRequest request)_			throws IOException, ClassNotFoundException {__		return readRemoteInvocation(request, request.getInputStream())__	};read,a,remote,invocation,from,the,given,http,request,p,delegates,to,link,read,remote,invocation,javax,servlet,http,http,servlet,request,java,io,input,stream,with,the,link,javax,servlet,servlet,request,get,input,stream,servlet,request,s,input,stream,param,request,current,http,request,return,the,remote,invocation,object,throws,ioexception,in,case,of,i,o,failure,throws,class,not,found,exception,if,thrown,by,deserialization;protected,remote,invocation,read,remote,invocation,http,servlet,request,request,throws,ioexception,class,not,found,exception,return,read,remote,invocation,request,request,get,input,stream
HttpInvokerServiceExporter -> protected RemoteInvocation readRemoteInvocation(HttpServletRequest request) 			throws IOException, ClassNotFoundException;1357119239;Read a RemoteInvocation from the given HTTP request._<p>Delegates to_{@link #readRemoteInvocation(javax.servlet.http.HttpServletRequest, java.io.InputStream)}_with the_{@link javax.servlet.ServletRequest#getInputStream() servlet request's input stream}._@param request current HTTP request_@return the RemoteInvocation object_@throws IOException in case of I/O failure_@throws ClassNotFoundException if thrown by deserialization;protected RemoteInvocation readRemoteInvocation(HttpServletRequest request)_			throws IOException, ClassNotFoundException {__		return readRemoteInvocation(request, request.getInputStream())__	};read,a,remote,invocation,from,the,given,http,request,p,delegates,to,link,read,remote,invocation,javax,servlet,http,http,servlet,request,java,io,input,stream,with,the,link,javax,servlet,servlet,request,get,input,stream,servlet,request,s,input,stream,param,request,current,http,request,return,the,remote,invocation,object,throws,ioexception,in,case,of,i,o,failure,throws,class,not,found,exception,if,thrown,by,deserialization;protected,remote,invocation,read,remote,invocation,http,servlet,request,request,throws,ioexception,class,not,found,exception,return,read,remote,invocation,request,request,get,input,stream
HttpInvokerServiceExporter -> protected RemoteInvocation readRemoteInvocation(HttpServletRequest request) 			throws IOException, ClassNotFoundException;1368482696;Read a RemoteInvocation from the given HTTP request._<p>Delegates to_{@link #readRemoteInvocation(javax.servlet.http.HttpServletRequest, java.io.InputStream)}_with the_{@link javax.servlet.ServletRequest#getInputStream() servlet request's input stream}._@param request current HTTP request_@return the RemoteInvocation object_@throws IOException in case of I/O failure_@throws ClassNotFoundException if thrown by deserialization;protected RemoteInvocation readRemoteInvocation(HttpServletRequest request)_			throws IOException, ClassNotFoundException {__		return readRemoteInvocation(request, request.getInputStream())__	};read,a,remote,invocation,from,the,given,http,request,p,delegates,to,link,read,remote,invocation,javax,servlet,http,http,servlet,request,java,io,input,stream,with,the,link,javax,servlet,servlet,request,get,input,stream,servlet,request,s,input,stream,param,request,current,http,request,return,the,remote,invocation,object,throws,ioexception,in,case,of,i,o,failure,throws,class,not,found,exception,if,thrown,by,deserialization;protected,remote,invocation,read,remote,invocation,http,servlet,request,request,throws,ioexception,class,not,found,exception,return,read,remote,invocation,request,request,get,input,stream
HttpInvokerServiceExporter -> protected RemoteInvocation readRemoteInvocation(HttpServletRequest request) 			throws IOException, ClassNotFoundException;1459265502;Read a RemoteInvocation from the given HTTP request._<p>Delegates to_{@link #readRemoteInvocation(javax.servlet.http.HttpServletRequest, java.io.InputStream)}_with the_{@link javax.servlet.ServletRequest#getInputStream() servlet request's input stream}._@param request current HTTP request_@return the RemoteInvocation object_@throws IOException in case of I/O failure_@throws ClassNotFoundException if thrown by deserialization;protected RemoteInvocation readRemoteInvocation(HttpServletRequest request)_			throws IOException, ClassNotFoundException {__		return readRemoteInvocation(request, request.getInputStream())__	};read,a,remote,invocation,from,the,given,http,request,p,delegates,to,link,read,remote,invocation,javax,servlet,http,http,servlet,request,java,io,input,stream,with,the,link,javax,servlet,servlet,request,get,input,stream,servlet,request,s,input,stream,param,request,current,http,request,return,the,remote,invocation,object,throws,ioexception,in,case,of,i,o,failure,throws,class,not,found,exception,if,thrown,by,deserialization;protected,remote,invocation,read,remote,invocation,http,servlet,request,request,throws,ioexception,class,not,found,exception,return,read,remote,invocation,request,request,get,input,stream
HttpInvokerServiceExporter -> protected RemoteInvocation readRemoteInvocation(HttpServletRequest request) 			throws IOException, ClassNotFoundException;1462293877;Read a RemoteInvocation from the given HTTP request._<p>Delegates to_{@link #readRemoteInvocation(javax.servlet.http.HttpServletRequest, java.io.InputStream)}_with the_{@link javax.servlet.ServletRequest#getInputStream() servlet request's input stream}._@param request current HTTP request_@return the RemoteInvocation object_@throws IOException in case of I/O failure_@throws ClassNotFoundException if thrown by deserialization;protected RemoteInvocation readRemoteInvocation(HttpServletRequest request)_			throws IOException, ClassNotFoundException {__		return readRemoteInvocation(request, request.getInputStream())__	};read,a,remote,invocation,from,the,given,http,request,p,delegates,to,link,read,remote,invocation,javax,servlet,http,http,servlet,request,java,io,input,stream,with,the,link,javax,servlet,servlet,request,get,input,stream,servlet,request,s,input,stream,param,request,current,http,request,return,the,remote,invocation,object,throws,ioexception,in,case,of,i,o,failure,throws,class,not,found,exception,if,thrown,by,deserialization;protected,remote,invocation,read,remote,invocation,http,servlet,request,request,throws,ioexception,class,not,found,exception,return,read,remote,invocation,request,request,get,input,stream
HttpInvokerServiceExporter -> protected RemoteInvocation readRemoteInvocation(HttpServletRequest request) 			throws IOException, ClassNotFoundException;1462294539;Read a RemoteInvocation from the given HTTP request._<p>Delegates to_{@link #readRemoteInvocation(javax.servlet.http.HttpServletRequest, java.io.InputStream)}_with the_{@link javax.servlet.ServletRequest#getInputStream() servlet request's input stream}._@param request current HTTP request_@return the RemoteInvocation object_@throws IOException in case of I/O failure_@throws ClassNotFoundException if thrown by deserialization;protected RemoteInvocation readRemoteInvocation(HttpServletRequest request)_			throws IOException, ClassNotFoundException {__		return readRemoteInvocation(request, request.getInputStream())__	};read,a,remote,invocation,from,the,given,http,request,p,delegates,to,link,read,remote,invocation,javax,servlet,http,http,servlet,request,java,io,input,stream,with,the,link,javax,servlet,servlet,request,get,input,stream,servlet,request,s,input,stream,param,request,current,http,request,return,the,remote,invocation,object,throws,ioexception,in,case,of,i,o,failure,throws,class,not,found,exception,if,thrown,by,deserialization;protected,remote,invocation,read,remote,invocation,http,servlet,request,request,throws,ioexception,class,not,found,exception,return,read,remote,invocation,request,request,get,input,stream
HttpInvokerServiceExporter -> protected RemoteInvocation readRemoteInvocation(HttpServletRequest request) 			throws IOException, ClassNotFoundException;1468613531;Read a RemoteInvocation from the given HTTP request._<p>Delegates to_{@link #readRemoteInvocation(javax.servlet.http.HttpServletRequest, java.io.InputStream)}_with the_{@link javax.servlet.ServletRequest#getInputStream() servlet request's input stream}._@param request current HTTP request_@return the RemoteInvocation object_@throws IOException in case of I/O failure_@throws ClassNotFoundException if thrown by deserialization;protected RemoteInvocation readRemoteInvocation(HttpServletRequest request)_			throws IOException, ClassNotFoundException {__		return readRemoteInvocation(request, request.getInputStream())__	};read,a,remote,invocation,from,the,given,http,request,p,delegates,to,link,read,remote,invocation,javax,servlet,http,http,servlet,request,java,io,input,stream,with,the,link,javax,servlet,servlet,request,get,input,stream,servlet,request,s,input,stream,param,request,current,http,request,return,the,remote,invocation,object,throws,ioexception,in,case,of,i,o,failure,throws,class,not,found,exception,if,thrown,by,deserialization;protected,remote,invocation,read,remote,invocation,http,servlet,request,request,throws,ioexception,class,not,found,exception,return,read,remote,invocation,request,request,get,input,stream
HttpInvokerServiceExporter -> protected RemoteInvocation readRemoteInvocation(HttpServletRequest request) 			throws IOException, ClassNotFoundException;1490350197;Read a RemoteInvocation from the given HTTP request._<p>Delegates to {@link #readRemoteInvocation(HttpServletRequest, InputStream)} with_the {@link HttpServletRequest#getInputStream() servlet request's input stream}._@param request current HTTP request_@return the RemoteInvocation object_@throws IOException in case of I/O failure_@throws ClassNotFoundException if thrown by deserialization;protected RemoteInvocation readRemoteInvocation(HttpServletRequest request)_			throws IOException, ClassNotFoundException {__		return readRemoteInvocation(request, request.getInputStream())__	};read,a,remote,invocation,from,the,given,http,request,p,delegates,to,link,read,remote,invocation,http,servlet,request,input,stream,with,the,link,http,servlet,request,get,input,stream,servlet,request,s,input,stream,param,request,current,http,request,return,the,remote,invocation,object,throws,ioexception,in,case,of,i,o,failure,throws,class,not,found,exception,if,thrown,by,deserialization;protected,remote,invocation,read,remote,invocation,http,servlet,request,request,throws,ioexception,class,not,found,exception,return,read,remote,invocation,request,request,get,input,stream
HttpInvokerServiceExporter -> protected RemoteInvocation readRemoteInvocation(HttpServletRequest request) 			throws IOException, ClassNotFoundException;1533666953;Read a RemoteInvocation from the given HTTP request._<p>Delegates to {@link #readRemoteInvocation(HttpServletRequest, InputStream)} with_the {@link HttpServletRequest#getInputStream() servlet request's input stream}._@param request current HTTP request_@return the RemoteInvocation object_@throws IOException in case of I/O failure_@throws ClassNotFoundException if thrown by deserialization;protected RemoteInvocation readRemoteInvocation(HttpServletRequest request)_			throws IOException, ClassNotFoundException {__		return readRemoteInvocation(request, request.getInputStream())__	};read,a,remote,invocation,from,the,given,http,request,p,delegates,to,link,read,remote,invocation,http,servlet,request,input,stream,with,the,link,http,servlet,request,get,input,stream,servlet,request,s,input,stream,param,request,current,http,request,return,the,remote,invocation,object,throws,ioexception,in,case,of,i,o,failure,throws,class,not,found,exception,if,thrown,by,deserialization;protected,remote,invocation,read,remote,invocation,http,servlet,request,request,throws,ioexception,class,not,found,exception,return,read,remote,invocation,request,request,get,input,stream
HttpInvokerServiceExporter -> protected void writeRemoteInvocationResult( 			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result) 			throws IOException;1328020251;Write the given RemoteInvocationResult to the given HTTP response._@param request current HTTP request_@param response current HTTP response_@param result the RemoteInvocationResult object_@throws IOException in case of I/O failure;protected void writeRemoteInvocationResult(_			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result)_			throws IOException {__		response.setContentType(getContentType())__		writeRemoteInvocationResult(request, response, result, response.getOutputStream())__	};write,the,given,remote,invocation,result,to,the,given,http,response,param,request,current,http,request,param,response,current,http,response,param,result,the,remote,invocation,result,object,throws,ioexception,in,case,of,i,o,failure;protected,void,write,remote,invocation,result,http,servlet,request,request,http,servlet,response,response,remote,invocation,result,result,throws,ioexception,response,set,content,type,get,content,type,write,remote,invocation,result,request,response,result,response,get,output,stream
HttpInvokerServiceExporter -> protected void writeRemoteInvocationResult( 			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result) 			throws IOException;1356735495;Write the given RemoteInvocationResult to the given HTTP response._@param request current HTTP request_@param response current HTTP response_@param result the RemoteInvocationResult object_@throws IOException in case of I/O failure;protected void writeRemoteInvocationResult(_			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result)_			throws IOException {__		response.setContentType(getContentType())__		writeRemoteInvocationResult(request, response, result, response.getOutputStream())__	};write,the,given,remote,invocation,result,to,the,given,http,response,param,request,current,http,request,param,response,current,http,response,param,result,the,remote,invocation,result,object,throws,ioexception,in,case,of,i,o,failure;protected,void,write,remote,invocation,result,http,servlet,request,request,http,servlet,response,response,remote,invocation,result,result,throws,ioexception,response,set,content,type,get,content,type,write,remote,invocation,result,request,response,result,response,get,output,stream
HttpInvokerServiceExporter -> protected void writeRemoteInvocationResult( 			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result) 			throws IOException;1357119239;Write the given RemoteInvocationResult to the given HTTP response._@param request current HTTP request_@param response current HTTP response_@param result the RemoteInvocationResult object_@throws IOException in case of I/O failure;protected void writeRemoteInvocationResult(_			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result)_			throws IOException {__		response.setContentType(getContentType())__		writeRemoteInvocationResult(request, response, result, response.getOutputStream())__	};write,the,given,remote,invocation,result,to,the,given,http,response,param,request,current,http,request,param,response,current,http,response,param,result,the,remote,invocation,result,object,throws,ioexception,in,case,of,i,o,failure;protected,void,write,remote,invocation,result,http,servlet,request,request,http,servlet,response,response,remote,invocation,result,result,throws,ioexception,response,set,content,type,get,content,type,write,remote,invocation,result,request,response,result,response,get,output,stream
HttpInvokerServiceExporter -> protected void writeRemoteInvocationResult( 			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result) 			throws IOException;1368482696;Write the given RemoteInvocationResult to the given HTTP response._@param request current HTTP request_@param response current HTTP response_@param result the RemoteInvocationResult object_@throws IOException in case of I/O failure;protected void writeRemoteInvocationResult(_			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result)_			throws IOException {__		response.setContentType(getContentType())__		writeRemoteInvocationResult(request, response, result, response.getOutputStream())__	};write,the,given,remote,invocation,result,to,the,given,http,response,param,request,current,http,request,param,response,current,http,response,param,result,the,remote,invocation,result,object,throws,ioexception,in,case,of,i,o,failure;protected,void,write,remote,invocation,result,http,servlet,request,request,http,servlet,response,response,remote,invocation,result,result,throws,ioexception,response,set,content,type,get,content,type,write,remote,invocation,result,request,response,result,response,get,output,stream
HttpInvokerServiceExporter -> protected void writeRemoteInvocationResult( 			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result) 			throws IOException;1459265502;Write the given RemoteInvocationResult to the given HTTP response._@param request current HTTP request_@param response current HTTP response_@param result the RemoteInvocationResult object_@throws IOException in case of I/O failure;protected void writeRemoteInvocationResult(_			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result)_			throws IOException {__		response.setContentType(getContentType())__		writeRemoteInvocationResult(request, response, result, response.getOutputStream())__	};write,the,given,remote,invocation,result,to,the,given,http,response,param,request,current,http,request,param,response,current,http,response,param,result,the,remote,invocation,result,object,throws,ioexception,in,case,of,i,o,failure;protected,void,write,remote,invocation,result,http,servlet,request,request,http,servlet,response,response,remote,invocation,result,result,throws,ioexception,response,set,content,type,get,content,type,write,remote,invocation,result,request,response,result,response,get,output,stream
HttpInvokerServiceExporter -> protected void writeRemoteInvocationResult( 			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result) 			throws IOException;1462293877;Write the given RemoteInvocationResult to the given HTTP response._@param request current HTTP request_@param response current HTTP response_@param result the RemoteInvocationResult object_@throws IOException in case of I/O failure;protected void writeRemoteInvocationResult(_			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result)_			throws IOException {__		response.setContentType(getContentType())__		writeRemoteInvocationResult(request, response, result, response.getOutputStream())__	};write,the,given,remote,invocation,result,to,the,given,http,response,param,request,current,http,request,param,response,current,http,response,param,result,the,remote,invocation,result,object,throws,ioexception,in,case,of,i,o,failure;protected,void,write,remote,invocation,result,http,servlet,request,request,http,servlet,response,response,remote,invocation,result,result,throws,ioexception,response,set,content,type,get,content,type,write,remote,invocation,result,request,response,result,response,get,output,stream
HttpInvokerServiceExporter -> protected void writeRemoteInvocationResult( 			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result) 			throws IOException;1462294539;Write the given RemoteInvocationResult to the given HTTP response._@param request current HTTP request_@param response current HTTP response_@param result the RemoteInvocationResult object_@throws IOException in case of I/O failure;protected void writeRemoteInvocationResult(_			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result)_			throws IOException {__		response.setContentType(getContentType())__		writeRemoteInvocationResult(request, response, result, response.getOutputStream())__	};write,the,given,remote,invocation,result,to,the,given,http,response,param,request,current,http,request,param,response,current,http,response,param,result,the,remote,invocation,result,object,throws,ioexception,in,case,of,i,o,failure;protected,void,write,remote,invocation,result,http,servlet,request,request,http,servlet,response,response,remote,invocation,result,result,throws,ioexception,response,set,content,type,get,content,type,write,remote,invocation,result,request,response,result,response,get,output,stream
HttpInvokerServiceExporter -> protected void writeRemoteInvocationResult( 			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result) 			throws IOException;1468613531;Write the given RemoteInvocationResult to the given HTTP response._@param request current HTTP request_@param response current HTTP response_@param result the RemoteInvocationResult object_@throws IOException in case of I/O failure;protected void writeRemoteInvocationResult(_			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result)_			throws IOException {__		response.setContentType(getContentType())__		writeRemoteInvocationResult(request, response, result, response.getOutputStream())__	};write,the,given,remote,invocation,result,to,the,given,http,response,param,request,current,http,request,param,response,current,http,response,param,result,the,remote,invocation,result,object,throws,ioexception,in,case,of,i,o,failure;protected,void,write,remote,invocation,result,http,servlet,request,request,http,servlet,response,response,remote,invocation,result,result,throws,ioexception,response,set,content,type,get,content,type,write,remote,invocation,result,request,response,result,response,get,output,stream
HttpInvokerServiceExporter -> protected void writeRemoteInvocationResult( 			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result) 			throws IOException;1490350197;Write the given RemoteInvocationResult to the given HTTP response._@param request current HTTP request_@param response current HTTP response_@param result the RemoteInvocationResult object_@throws IOException in case of I/O failure;protected void writeRemoteInvocationResult(_			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result)_			throws IOException {__		response.setContentType(getContentType())__		writeRemoteInvocationResult(request, response, result, response.getOutputStream())__	};write,the,given,remote,invocation,result,to,the,given,http,response,param,request,current,http,request,param,response,current,http,response,param,result,the,remote,invocation,result,object,throws,ioexception,in,case,of,i,o,failure;protected,void,write,remote,invocation,result,http,servlet,request,request,http,servlet,response,response,remote,invocation,result,result,throws,ioexception,response,set,content,type,get,content,type,write,remote,invocation,result,request,response,result,response,get,output,stream
HttpInvokerServiceExporter -> protected void writeRemoteInvocationResult( 			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result) 			throws IOException;1533666953;Write the given RemoteInvocationResult to the given HTTP response._@param request current HTTP request_@param response current HTTP response_@param result the RemoteInvocationResult object_@throws IOException in case of I/O failure;protected void writeRemoteInvocationResult(_			HttpServletRequest request, HttpServletResponse response, RemoteInvocationResult result)_			throws IOException {__		response.setContentType(getContentType())__		writeRemoteInvocationResult(request, response, result, response.getOutputStream())__	};write,the,given,remote,invocation,result,to,the,given,http,response,param,request,current,http,request,param,response,current,http,response,param,result,the,remote,invocation,result,object,throws,ioexception,in,case,of,i,o,failure;protected,void,write,remote,invocation,result,http,servlet,request,request,http,servlet,response,response,remote,invocation,result,result,throws,ioexception,response,set,content,type,get,content,type,write,remote,invocation,result,request,response,result,response,get,output,stream
HttpInvokerServiceExporter -> protected RemoteInvocation readRemoteInvocation(HttpServletRequest request, InputStream is) 			throws IOException, ClassNotFoundException;1328020251;Deserialize a RemoteInvocation object from the given InputStream._<p>Gives {@link #decorateInputStream} a chance to decorate the stream_first (for example, for custom encryption or compression). Creates a_{@link org.springframework.remoting.rmi.CodebaseAwareObjectInputStream}_and calls {@link #doReadRemoteInvocation} to actually read the object._<p>Can be overridden for custom serialization of the invocation._@param request current HTTP request_@param is the InputStream to read from_@return the RemoteInvocation object_@throws IOException in case of I/O failure_@throws ClassNotFoundException if thrown during deserialization;protected RemoteInvocation readRemoteInvocation(HttpServletRequest request, InputStream is)_			throws IOException, ClassNotFoundException {__		ObjectInputStream ois = createObjectInputStream(decorateInputStream(request, is))__		try {_			return doReadRemoteInvocation(ois)__		}_		finally {_			ois.close()__		}_	};deserialize,a,remote,invocation,object,from,the,given,input,stream,p,gives,link,decorate,input,stream,a,chance,to,decorate,the,stream,first,for,example,for,custom,encryption,or,compression,creates,a,link,org,springframework,remoting,rmi,codebase,aware,object,input,stream,and,calls,link,do,read,remote,invocation,to,actually,read,the,object,p,can,be,overridden,for,custom,serialization,of,the,invocation,param,request,current,http,request,param,is,the,input,stream,to,read,from,return,the,remote,invocation,object,throws,ioexception,in,case,of,i,o,failure,throws,class,not,found,exception,if,thrown,during,deserialization;protected,remote,invocation,read,remote,invocation,http,servlet,request,request,input,stream,is,throws,ioexception,class,not,found,exception,object,input,stream,ois,create,object,input,stream,decorate,input,stream,request,is,try,return,do,read,remote,invocation,ois,finally,ois,close
HttpInvokerServiceExporter -> protected RemoteInvocation readRemoteInvocation(HttpServletRequest request, InputStream is) 			throws IOException, ClassNotFoundException;1356735495;Deserialize a RemoteInvocation object from the given InputStream._<p>Gives {@link #decorateInputStream} a chance to decorate the stream_first (for example, for custom encryption or compression). Creates a_{@link org.springframework.remoting.rmi.CodebaseAwareObjectInputStream}_and calls {@link #doReadRemoteInvocation} to actually read the object._<p>Can be overridden for custom serialization of the invocation._@param request current HTTP request_@param is the InputStream to read from_@return the RemoteInvocation object_@throws IOException in case of I/O failure_@throws ClassNotFoundException if thrown during deserialization;protected RemoteInvocation readRemoteInvocation(HttpServletRequest request, InputStream is)_			throws IOException, ClassNotFoundException {__		ObjectInputStream ois = createObjectInputStream(decorateInputStream(request, is))__		try {_			return doReadRemoteInvocation(ois)__		}_		finally {_			ois.close()__		}_	};deserialize,a,remote,invocation,object,from,the,given,input,stream,p,gives,link,decorate,input,stream,a,chance,to,decorate,the,stream,first,for,example,for,custom,encryption,or,compression,creates,a,link,org,springframework,remoting,rmi,codebase,aware,object,input,stream,and,calls,link,do,read,remote,invocation,to,actually,read,the,object,p,can,be,overridden,for,custom,serialization,of,the,invocation,param,request,current,http,request,param,is,the,input,stream,to,read,from,return,the,remote,invocation,object,throws,ioexception,in,case,of,i,o,failure,throws,class,not,found,exception,if,thrown,during,deserialization;protected,remote,invocation,read,remote,invocation,http,servlet,request,request,input,stream,is,throws,ioexception,class,not,found,exception,object,input,stream,ois,create,object,input,stream,decorate,input,stream,request,is,try,return,do,read,remote,invocation,ois,finally,ois,close
HttpInvokerServiceExporter -> protected RemoteInvocation readRemoteInvocation(HttpServletRequest request, InputStream is) 			throws IOException, ClassNotFoundException;1357119239;Deserialize a RemoteInvocation object from the given InputStream._<p>Gives {@link #decorateInputStream} a chance to decorate the stream_first (for example, for custom encryption or compression). Creates a_{@link org.springframework.remoting.rmi.CodebaseAwareObjectInputStream}_and calls {@link #doReadRemoteInvocation} to actually read the object._<p>Can be overridden for custom serialization of the invocation._@param request current HTTP request_@param is the InputStream to read from_@return the RemoteInvocation object_@throws IOException in case of I/O failure_@throws ClassNotFoundException if thrown during deserialization;protected RemoteInvocation readRemoteInvocation(HttpServletRequest request, InputStream is)_			throws IOException, ClassNotFoundException {__		ObjectInputStream ois = createObjectInputStream(decorateInputStream(request, is))__		try {_			return doReadRemoteInvocation(ois)__		}_		finally {_			ois.close()__		}_	};deserialize,a,remote,invocation,object,from,the,given,input,stream,p,gives,link,decorate,input,stream,a,chance,to,decorate,the,stream,first,for,example,for,custom,encryption,or,compression,creates,a,link,org,springframework,remoting,rmi,codebase,aware,object,input,stream,and,calls,link,do,read,remote,invocation,to,actually,read,the,object,p,can,be,overridden,for,custom,serialization,of,the,invocation,param,request,current,http,request,param,is,the,input,stream,to,read,from,return,the,remote,invocation,object,throws,ioexception,in,case,of,i,o,failure,throws,class,not,found,exception,if,thrown,during,deserialization;protected,remote,invocation,read,remote,invocation,http,servlet,request,request,input,stream,is,throws,ioexception,class,not,found,exception,object,input,stream,ois,create,object,input,stream,decorate,input,stream,request,is,try,return,do,read,remote,invocation,ois,finally,ois,close
HttpInvokerServiceExporter -> protected RemoteInvocation readRemoteInvocation(HttpServletRequest request, InputStream is) 			throws IOException, ClassNotFoundException;1368482696;Deserialize a RemoteInvocation object from the given InputStream._<p>Gives {@link #decorateInputStream} a chance to decorate the stream_first (for example, for custom encryption or compression). Creates a_{@link org.springframework.remoting.rmi.CodebaseAwareObjectInputStream}_and calls {@link #doReadRemoteInvocation} to actually read the object._<p>Can be overridden for custom serialization of the invocation._@param request current HTTP request_@param is the InputStream to read from_@return the RemoteInvocation object_@throws IOException in case of I/O failure_@throws ClassNotFoundException if thrown during deserialization;protected RemoteInvocation readRemoteInvocation(HttpServletRequest request, InputStream is)_			throws IOException, ClassNotFoundException {__		ObjectInputStream ois = createObjectInputStream(decorateInputStream(request, is))__		try {_			return doReadRemoteInvocation(ois)__		}_		finally {_			ois.close()__		}_	};deserialize,a,remote,invocation,object,from,the,given,input,stream,p,gives,link,decorate,input,stream,a,chance,to,decorate,the,stream,first,for,example,for,custom,encryption,or,compression,creates,a,link,org,springframework,remoting,rmi,codebase,aware,object,input,stream,and,calls,link,do,read,remote,invocation,to,actually,read,the,object,p,can,be,overridden,for,custom,serialization,of,the,invocation,param,request,current,http,request,param,is,the,input,stream,to,read,from,return,the,remote,invocation,object,throws,ioexception,in,case,of,i,o,failure,throws,class,not,found,exception,if,thrown,during,deserialization;protected,remote,invocation,read,remote,invocation,http,servlet,request,request,input,stream,is,throws,ioexception,class,not,found,exception,object,input,stream,ois,create,object,input,stream,decorate,input,stream,request,is,try,return,do,read,remote,invocation,ois,finally,ois,close
HttpInvokerServiceExporter -> protected RemoteInvocation readRemoteInvocation(HttpServletRequest request, InputStream is) 			throws IOException, ClassNotFoundException;1459265502;Deserialize a RemoteInvocation object from the given InputStream._<p>Gives {@link #decorateInputStream} a chance to decorate the stream_first (for example, for custom encryption or compression). Creates a_{@link org.springframework.remoting.rmi.CodebaseAwareObjectInputStream}_and calls {@link #doReadRemoteInvocation} to actually read the object._<p>Can be overridden for custom serialization of the invocation._@param request current HTTP request_@param is the InputStream to read from_@return the RemoteInvocation object_@throws IOException in case of I/O failure_@throws ClassNotFoundException if thrown during deserialization;protected RemoteInvocation readRemoteInvocation(HttpServletRequest request, InputStream is)_			throws IOException, ClassNotFoundException {__		ObjectInputStream ois = createObjectInputStream(decorateInputStream(request, is))__		try {_			return doReadRemoteInvocation(ois)__		}_		finally {_			ois.close()__		}_	};deserialize,a,remote,invocation,object,from,the,given,input,stream,p,gives,link,decorate,input,stream,a,chance,to,decorate,the,stream,first,for,example,for,custom,encryption,or,compression,creates,a,link,org,springframework,remoting,rmi,codebase,aware,object,input,stream,and,calls,link,do,read,remote,invocation,to,actually,read,the,object,p,can,be,overridden,for,custom,serialization,of,the,invocation,param,request,current,http,request,param,is,the,input,stream,to,read,from,return,the,remote,invocation,object,throws,ioexception,in,case,of,i,o,failure,throws,class,not,found,exception,if,thrown,during,deserialization;protected,remote,invocation,read,remote,invocation,http,servlet,request,request,input,stream,is,throws,ioexception,class,not,found,exception,object,input,stream,ois,create,object,input,stream,decorate,input,stream,request,is,try,return,do,read,remote,invocation,ois,finally,ois,close
HttpInvokerServiceExporter -> protected RemoteInvocation readRemoteInvocation(HttpServletRequest request, InputStream is) 			throws IOException, ClassNotFoundException;1462293877;Deserialize a RemoteInvocation object from the given InputStream._<p>Gives {@link #decorateInputStream} a chance to decorate the stream_first (for example, for custom encryption or compression). Creates a_{@link org.springframework.remoting.rmi.CodebaseAwareObjectInputStream}_and calls {@link #doReadRemoteInvocation} to actually read the object._<p>Can be overridden for custom serialization of the invocation._@param request current HTTP request_@param is the InputStream to read from_@return the RemoteInvocation object_@throws IOException in case of I/O failure_@throws ClassNotFoundException if thrown during deserialization;protected RemoteInvocation readRemoteInvocation(HttpServletRequest request, InputStream is)_			throws IOException, ClassNotFoundException {__		ObjectInputStream ois = createObjectInputStream(decorateInputStream(request, is))__		try {_			return doReadRemoteInvocation(ois)__		}_		finally {_			ois.close()__		}_	};deserialize,a,remote,invocation,object,from,the,given,input,stream,p,gives,link,decorate,input,stream,a,chance,to,decorate,the,stream,first,for,example,for,custom,encryption,or,compression,creates,a,link,org,springframework,remoting,rmi,codebase,aware,object,input,stream,and,calls,link,do,read,remote,invocation,to,actually,read,the,object,p,can,be,overridden,for,custom,serialization,of,the,invocation,param,request,current,http,request,param,is,the,input,stream,to,read,from,return,the,remote,invocation,object,throws,ioexception,in,case,of,i,o,failure,throws,class,not,found,exception,if,thrown,during,deserialization;protected,remote,invocation,read,remote,invocation,http,servlet,request,request,input,stream,is,throws,ioexception,class,not,found,exception,object,input,stream,ois,create,object,input,stream,decorate,input,stream,request,is,try,return,do,read,remote,invocation,ois,finally,ois,close
HttpInvokerServiceExporter -> protected RemoteInvocation readRemoteInvocation(HttpServletRequest request, InputStream is) 			throws IOException, ClassNotFoundException;1462294539;Deserialize a RemoteInvocation object from the given InputStream._<p>Gives {@link #decorateInputStream} a chance to decorate the stream_first (for example, for custom encryption or compression). Creates a_{@link org.springframework.remoting.rmi.CodebaseAwareObjectInputStream}_and calls {@link #doReadRemoteInvocation} to actually read the object._<p>Can be overridden for custom serialization of the invocation._@param request current HTTP request_@param is the InputStream to read from_@return the RemoteInvocation object_@throws IOException in case of I/O failure_@throws ClassNotFoundException if thrown during deserialization;protected RemoteInvocation readRemoteInvocation(HttpServletRequest request, InputStream is)_			throws IOException, ClassNotFoundException {__		ObjectInputStream ois = createObjectInputStream(decorateInputStream(request, is))__		try {_			return doReadRemoteInvocation(ois)__		}_		finally {_			ois.close()__		}_	};deserialize,a,remote,invocation,object,from,the,given,input,stream,p,gives,link,decorate,input,stream,a,chance,to,decorate,the,stream,first,for,example,for,custom,encryption,or,compression,creates,a,link,org,springframework,remoting,rmi,codebase,aware,object,input,stream,and,calls,link,do,read,remote,invocation,to,actually,read,the,object,p,can,be,overridden,for,custom,serialization,of,the,invocation,param,request,current,http,request,param,is,the,input,stream,to,read,from,return,the,remote,invocation,object,throws,ioexception,in,case,of,i,o,failure,throws,class,not,found,exception,if,thrown,during,deserialization;protected,remote,invocation,read,remote,invocation,http,servlet,request,request,input,stream,is,throws,ioexception,class,not,found,exception,object,input,stream,ois,create,object,input,stream,decorate,input,stream,request,is,try,return,do,read,remote,invocation,ois,finally,ois,close
HttpInvokerServiceExporter -> protected RemoteInvocation readRemoteInvocation(HttpServletRequest request, InputStream is) 			throws IOException, ClassNotFoundException;1468613531;Deserialize a RemoteInvocation object from the given InputStream._<p>Gives {@link #decorateInputStream} a chance to decorate the stream_first (for example, for custom encryption or compression). Creates a_{@link org.springframework.remoting.rmi.CodebaseAwareObjectInputStream}_and calls {@link #doReadRemoteInvocation} to actually read the object._<p>Can be overridden for custom serialization of the invocation._@param request current HTTP request_@param is the InputStream to read from_@return the RemoteInvocation object_@throws IOException in case of I/O failure_@throws ClassNotFoundException if thrown during deserialization;protected RemoteInvocation readRemoteInvocation(HttpServletRequest request, InputStream is)_			throws IOException, ClassNotFoundException {__		ObjectInputStream ois = createObjectInputStream(decorateInputStream(request, is))__		try {_			return doReadRemoteInvocation(ois)__		}_		finally {_			ois.close()__		}_	};deserialize,a,remote,invocation,object,from,the,given,input,stream,p,gives,link,decorate,input,stream,a,chance,to,decorate,the,stream,first,for,example,for,custom,encryption,or,compression,creates,a,link,org,springframework,remoting,rmi,codebase,aware,object,input,stream,and,calls,link,do,read,remote,invocation,to,actually,read,the,object,p,can,be,overridden,for,custom,serialization,of,the,invocation,param,request,current,http,request,param,is,the,input,stream,to,read,from,return,the,remote,invocation,object,throws,ioexception,in,case,of,i,o,failure,throws,class,not,found,exception,if,thrown,during,deserialization;protected,remote,invocation,read,remote,invocation,http,servlet,request,request,input,stream,is,throws,ioexception,class,not,found,exception,object,input,stream,ois,create,object,input,stream,decorate,input,stream,request,is,try,return,do,read,remote,invocation,ois,finally,ois,close
HttpInvokerServiceExporter -> protected RemoteInvocation readRemoteInvocation(HttpServletRequest request, InputStream is) 			throws IOException, ClassNotFoundException;1490350197;Deserialize a RemoteInvocation object from the given InputStream._<p>Gives {@link #decorateInputStream} a chance to decorate the stream_first (for example, for custom encryption or compression). Creates a_{@link org.springframework.remoting.rmi.CodebaseAwareObjectInputStream}_and calls {@link #doReadRemoteInvocation} to actually read the object._<p>Can be overridden for custom serialization of the invocation._@param request current HTTP request_@param is the InputStream to read from_@return the RemoteInvocation object_@throws IOException in case of I/O failure_@throws ClassNotFoundException if thrown during deserialization;protected RemoteInvocation readRemoteInvocation(HttpServletRequest request, InputStream is)_			throws IOException, ClassNotFoundException {__		ObjectInputStream ois = createObjectInputStream(decorateInputStream(request, is))__		try {_			return doReadRemoteInvocation(ois)__		}_		finally {_			ois.close()__		}_	};deserialize,a,remote,invocation,object,from,the,given,input,stream,p,gives,link,decorate,input,stream,a,chance,to,decorate,the,stream,first,for,example,for,custom,encryption,or,compression,creates,a,link,org,springframework,remoting,rmi,codebase,aware,object,input,stream,and,calls,link,do,read,remote,invocation,to,actually,read,the,object,p,can,be,overridden,for,custom,serialization,of,the,invocation,param,request,current,http,request,param,is,the,input,stream,to,read,from,return,the,remote,invocation,object,throws,ioexception,in,case,of,i,o,failure,throws,class,not,found,exception,if,thrown,during,deserialization;protected,remote,invocation,read,remote,invocation,http,servlet,request,request,input,stream,is,throws,ioexception,class,not,found,exception,object,input,stream,ois,create,object,input,stream,decorate,input,stream,request,is,try,return,do,read,remote,invocation,ois,finally,ois,close
HttpInvokerServiceExporter -> protected RemoteInvocation readRemoteInvocation(HttpServletRequest request, InputStream is) 			throws IOException, ClassNotFoundException;1533666953;Deserialize a RemoteInvocation object from the given InputStream._<p>Gives {@link #decorateInputStream} a chance to decorate the stream_first (for example, for custom encryption or compression). Creates a_{@link org.springframework.remoting.rmi.CodebaseAwareObjectInputStream}_and calls {@link #doReadRemoteInvocation} to actually read the object._<p>Can be overridden for custom serialization of the invocation._@param request current HTTP request_@param is the InputStream to read from_@return the RemoteInvocation object_@throws IOException in case of I/O failure_@throws ClassNotFoundException if thrown during deserialization;protected RemoteInvocation readRemoteInvocation(HttpServletRequest request, InputStream is)_			throws IOException, ClassNotFoundException {__		ObjectInputStream ois = createObjectInputStream(decorateInputStream(request, is))__		try {_			return doReadRemoteInvocation(ois)__		}_		finally {_			ois.close()__		}_	};deserialize,a,remote,invocation,object,from,the,given,input,stream,p,gives,link,decorate,input,stream,a,chance,to,decorate,the,stream,first,for,example,for,custom,encryption,or,compression,creates,a,link,org,springframework,remoting,rmi,codebase,aware,object,input,stream,and,calls,link,do,read,remote,invocation,to,actually,read,the,object,p,can,be,overridden,for,custom,serialization,of,the,invocation,param,request,current,http,request,param,is,the,input,stream,to,read,from,return,the,remote,invocation,object,throws,ioexception,in,case,of,i,o,failure,throws,class,not,found,exception,if,thrown,during,deserialization;protected,remote,invocation,read,remote,invocation,http,servlet,request,request,input,stream,is,throws,ioexception,class,not,found,exception,object,input,stream,ois,create,object,input,stream,decorate,input,stream,request,is,try,return,do,read,remote,invocation,ois,finally,ois,close
HttpInvokerServiceExporter -> protected InputStream decorateInputStream(HttpServletRequest request, InputStream is) throws IOException;1328020251;Return the InputStream to use for reading remote invocations,_potentially decorating the given original InputStream._<p>The default implementation returns the given stream as-is._Can be overridden, for example, for custom encryption or compression._@param request current HTTP request_@param is the original InputStream_@return the potentially decorated InputStream_@throws IOException in case of I/O failure;protected InputStream decorateInputStream(HttpServletRequest request, InputStream is) throws IOException {_		return is__	};return,the,input,stream,to,use,for,reading,remote,invocations,potentially,decorating,the,given,original,input,stream,p,the,default,implementation,returns,the,given,stream,as,is,can,be,overridden,for,example,for,custom,encryption,or,compression,param,request,current,http,request,param,is,the,original,input,stream,return,the,potentially,decorated,input,stream,throws,ioexception,in,case,of,i,o,failure;protected,input,stream,decorate,input,stream,http,servlet,request,request,input,stream,is,throws,ioexception,return,is
HttpInvokerServiceExporter -> protected InputStream decorateInputStream(HttpServletRequest request, InputStream is) throws IOException;1356735495;Return the InputStream to use for reading remote invocations,_potentially decorating the given original InputStream._<p>The default implementation returns the given stream as-is._Can be overridden, for example, for custom encryption or compression._@param request current HTTP request_@param is the original InputStream_@return the potentially decorated InputStream_@throws IOException in case of I/O failure;protected InputStream decorateInputStream(HttpServletRequest request, InputStream is) throws IOException {_		return is__	};return,the,input,stream,to,use,for,reading,remote,invocations,potentially,decorating,the,given,original,input,stream,p,the,default,implementation,returns,the,given,stream,as,is,can,be,overridden,for,example,for,custom,encryption,or,compression,param,request,current,http,request,param,is,the,original,input,stream,return,the,potentially,decorated,input,stream,throws,ioexception,in,case,of,i,o,failure;protected,input,stream,decorate,input,stream,http,servlet,request,request,input,stream,is,throws,ioexception,return,is
HttpInvokerServiceExporter -> protected InputStream decorateInputStream(HttpServletRequest request, InputStream is) throws IOException;1357119239;Return the InputStream to use for reading remote invocations,_potentially decorating the given original InputStream._<p>The default implementation returns the given stream as-is._Can be overridden, for example, for custom encryption or compression._@param request current HTTP request_@param is the original InputStream_@return the potentially decorated InputStream_@throws IOException in case of I/O failure;protected InputStream decorateInputStream(HttpServletRequest request, InputStream is) throws IOException {_		return is__	};return,the,input,stream,to,use,for,reading,remote,invocations,potentially,decorating,the,given,original,input,stream,p,the,default,implementation,returns,the,given,stream,as,is,can,be,overridden,for,example,for,custom,encryption,or,compression,param,request,current,http,request,param,is,the,original,input,stream,return,the,potentially,decorated,input,stream,throws,ioexception,in,case,of,i,o,failure;protected,input,stream,decorate,input,stream,http,servlet,request,request,input,stream,is,throws,ioexception,return,is
HttpInvokerServiceExporter -> protected InputStream decorateInputStream(HttpServletRequest request, InputStream is) throws IOException;1368482696;Return the InputStream to use for reading remote invocations,_potentially decorating the given original InputStream._<p>The default implementation returns the given stream as-is._Can be overridden, for example, for custom encryption or compression._@param request current HTTP request_@param is the original InputStream_@return the potentially decorated InputStream_@throws IOException in case of I/O failure;protected InputStream decorateInputStream(HttpServletRequest request, InputStream is) throws IOException {_		return is__	};return,the,input,stream,to,use,for,reading,remote,invocations,potentially,decorating,the,given,original,input,stream,p,the,default,implementation,returns,the,given,stream,as,is,can,be,overridden,for,example,for,custom,encryption,or,compression,param,request,current,http,request,param,is,the,original,input,stream,return,the,potentially,decorated,input,stream,throws,ioexception,in,case,of,i,o,failure;protected,input,stream,decorate,input,stream,http,servlet,request,request,input,stream,is,throws,ioexception,return,is
HttpInvokerServiceExporter -> protected InputStream decorateInputStream(HttpServletRequest request, InputStream is) throws IOException;1459265502;Return the InputStream to use for reading remote invocations,_potentially decorating the given original InputStream._<p>The default implementation returns the given stream as-is._Can be overridden, for example, for custom encryption or compression._@param request current HTTP request_@param is the original InputStream_@return the potentially decorated InputStream_@throws IOException in case of I/O failure;protected InputStream decorateInputStream(HttpServletRequest request, InputStream is) throws IOException {_		return is__	};return,the,input,stream,to,use,for,reading,remote,invocations,potentially,decorating,the,given,original,input,stream,p,the,default,implementation,returns,the,given,stream,as,is,can,be,overridden,for,example,for,custom,encryption,or,compression,param,request,current,http,request,param,is,the,original,input,stream,return,the,potentially,decorated,input,stream,throws,ioexception,in,case,of,i,o,failure;protected,input,stream,decorate,input,stream,http,servlet,request,request,input,stream,is,throws,ioexception,return,is
HttpInvokerServiceExporter -> protected InputStream decorateInputStream(HttpServletRequest request, InputStream is) throws IOException;1462293877;Return the InputStream to use for reading remote invocations,_potentially decorating the given original InputStream._<p>The default implementation returns the given stream as-is._Can be overridden, for example, for custom encryption or compression._@param request current HTTP request_@param is the original InputStream_@return the potentially decorated InputStream_@throws IOException in case of I/O failure;protected InputStream decorateInputStream(HttpServletRequest request, InputStream is) throws IOException {_		return is__	};return,the,input,stream,to,use,for,reading,remote,invocations,potentially,decorating,the,given,original,input,stream,p,the,default,implementation,returns,the,given,stream,as,is,can,be,overridden,for,example,for,custom,encryption,or,compression,param,request,current,http,request,param,is,the,original,input,stream,return,the,potentially,decorated,input,stream,throws,ioexception,in,case,of,i,o,failure;protected,input,stream,decorate,input,stream,http,servlet,request,request,input,stream,is,throws,ioexception,return,is
HttpInvokerServiceExporter -> protected InputStream decorateInputStream(HttpServletRequest request, InputStream is) throws IOException;1462294539;Return the InputStream to use for reading remote invocations,_potentially decorating the given original InputStream._<p>The default implementation returns the given stream as-is._Can be overridden, for example, for custom encryption or compression._@param request current HTTP request_@param is the original InputStream_@return the potentially decorated InputStream_@throws IOException in case of I/O failure;protected InputStream decorateInputStream(HttpServletRequest request, InputStream is) throws IOException {_		return is__	};return,the,input,stream,to,use,for,reading,remote,invocations,potentially,decorating,the,given,original,input,stream,p,the,default,implementation,returns,the,given,stream,as,is,can,be,overridden,for,example,for,custom,encryption,or,compression,param,request,current,http,request,param,is,the,original,input,stream,return,the,potentially,decorated,input,stream,throws,ioexception,in,case,of,i,o,failure;protected,input,stream,decorate,input,stream,http,servlet,request,request,input,stream,is,throws,ioexception,return,is
HttpInvokerServiceExporter -> protected InputStream decorateInputStream(HttpServletRequest request, InputStream is) throws IOException;1468613531;Return the InputStream to use for reading remote invocations,_potentially decorating the given original InputStream._<p>The default implementation returns the given stream as-is._Can be overridden, for example, for custom encryption or compression._@param request current HTTP request_@param is the original InputStream_@return the potentially decorated InputStream_@throws IOException in case of I/O failure;protected InputStream decorateInputStream(HttpServletRequest request, InputStream is) throws IOException {_		return is__	};return,the,input,stream,to,use,for,reading,remote,invocations,potentially,decorating,the,given,original,input,stream,p,the,default,implementation,returns,the,given,stream,as,is,can,be,overridden,for,example,for,custom,encryption,or,compression,param,request,current,http,request,param,is,the,original,input,stream,return,the,potentially,decorated,input,stream,throws,ioexception,in,case,of,i,o,failure;protected,input,stream,decorate,input,stream,http,servlet,request,request,input,stream,is,throws,ioexception,return,is
HttpInvokerServiceExporter -> protected InputStream decorateInputStream(HttpServletRequest request, InputStream is) throws IOException;1490350197;Return the InputStream to use for reading remote invocations,_potentially decorating the given original InputStream._<p>The default implementation returns the given stream as-is._Can be overridden, for example, for custom encryption or compression._@param request current HTTP request_@param is the original InputStream_@return the potentially decorated InputStream_@throws IOException in case of I/O failure;protected InputStream decorateInputStream(HttpServletRequest request, InputStream is) throws IOException {_		return is__	};return,the,input,stream,to,use,for,reading,remote,invocations,potentially,decorating,the,given,original,input,stream,p,the,default,implementation,returns,the,given,stream,as,is,can,be,overridden,for,example,for,custom,encryption,or,compression,param,request,current,http,request,param,is,the,original,input,stream,return,the,potentially,decorated,input,stream,throws,ioexception,in,case,of,i,o,failure;protected,input,stream,decorate,input,stream,http,servlet,request,request,input,stream,is,throws,ioexception,return,is
HttpInvokerServiceExporter -> protected InputStream decorateInputStream(HttpServletRequest request, InputStream is) throws IOException;1533666953;Return the InputStream to use for reading remote invocations,_potentially decorating the given original InputStream._<p>The default implementation returns the given stream as-is._Can be overridden, for example, for custom encryption or compression._@param request current HTTP request_@param is the original InputStream_@return the potentially decorated InputStream_@throws IOException in case of I/O failure;protected InputStream decorateInputStream(HttpServletRequest request, InputStream is) throws IOException {_		return is__	};return,the,input,stream,to,use,for,reading,remote,invocations,potentially,decorating,the,given,original,input,stream,p,the,default,implementation,returns,the,given,stream,as,is,can,be,overridden,for,example,for,custom,encryption,or,compression,param,request,current,http,request,param,is,the,original,input,stream,return,the,potentially,decorated,input,stream,throws,ioexception,in,case,of,i,o,failure;protected,input,stream,decorate,input,stream,http,servlet,request,request,input,stream,is,throws,ioexception,return,is
