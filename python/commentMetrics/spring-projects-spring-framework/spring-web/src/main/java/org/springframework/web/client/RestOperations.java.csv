# id;timestamp;commentText;codeText;commentWords;codeWords
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1508532146;Retrieve an entity by doing a GET on the specified URL._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the entity_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;retrieve,an,entity,by,doing,a,get,on,the,specified,url,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,entity,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1509980418;Retrieve an entity by doing a GET on the specified URL._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the entity_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;retrieve,an,entity,by,doing,a,get,on,the,specified,url,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,entity,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1510004038;Retrieve an entity by doing a GET on the specified URL._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the entity_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;retrieve,an,entity,by,doing,a,get,on,the,specified,url,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,entity,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1532695280;Retrieve an entity by doing a GET on the specified URL._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the entity_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;retrieve,an,entity,by,doing,a,get,on,the,specified,url,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,entity,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1534440670;Retrieve an entity by doing a GET on the specified URL._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the entity_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;retrieve,an,entity,by,doing,a,get,on,the,specified,url,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,entity,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, @Nullable Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1495868221;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the converted object_@since 3.0.2_@see HttpEntity;<T> ResponseEntity<T> postForEntity(String url, @Nullable Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,3,0,2,see,http,entity;t,response,entity,t,post,for,entity,string,url,nullable,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, @Nullable Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1496259743;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the converted object_@since 3.0.2_@see HttpEntity;<T> ResponseEntity<T> postForEntity(String url, @Nullable Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,3,0,2,see,http,entity;t,response,entity,t,post,for,entity,string,url,nullable,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, @Nullable Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1496837955;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the converted object_@since 3.0.2_@see HttpEntity;<T> ResponseEntity<T> postForEntity(String url, @Nullable Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,3,0,2,see,http,entity;t,response,entity,t,post,for,entity,string,url,nullable,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1328020251;Retrieve a representation by doing a GET on the specified URL._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object;<T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,specified,url,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object;t,t,get,for,object,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1345666836;Retrieve a representation by doing a GET on the specified URL._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object;<T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,specified,url,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object;t,t,get,for,object,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1356735495;Retrieve a representation by doing a GET on the specified URL._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object;<T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,specified,url,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object;t,t,get,for,object,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1377627757;Retrieve a representation by doing a GET on the specified URL._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object;<T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,specified,url,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object;t,t,get,for,object,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1404245400;Retrieve a representation by doing a GET on the specified URL._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object;<T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,specified,url,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object;t,t,get,for,object,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1404245400;Retrieve a representation by doing a GET on the specified URL._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object;<T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,specified,url,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object;t,t,get,for,object,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1409790625;Retrieve a representation by doing a GET on the specified URL._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object;<T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,specified,url,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object;t,t,get,for,object,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1431938798;Retrieve a representation by doing a GET on the specified URL._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object;<T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,specified,url,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object;t,t,get,for,object,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1431949687;Retrieve a representation by doing a GET on the specified URL._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object;<T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,specified,url,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object;t,t,get,for,object,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1479374349;Retrieve a representation by doing a GET on the specified URL._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object;<T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,specified,url,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object;t,t,get,for,object,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1481218770;Retrieve a representation by doing a GET on the specified URL._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object;<T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,specified,url,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object;t,t,get,for,object,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1482265068;Retrieve a representation by doing a GET on the specified URL._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object;<T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,specified,url,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object;t,t,get,for,object,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1482841963;Retrieve a representation by doing a GET on the specified URL._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object;<T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,specified,url,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object;t,t,get,for,object,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T postForObject(URI url, @Nullable Object request, Class<T> responseType) throws RestClientException_;1495868221;Create a new resource by POSTing the given object to the URL,_and returns the representation found in the response._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param responseType the type of the return value_@return the converted object_@see HttpEntity;@Nullable_	<T> T postForObject(URI url, @Nullable Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,representation,found,in,the,response,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,converted,object,see,http,entity;nullable,t,t,post,for,object,uri,url,nullable,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T postForObject(URI url, @Nullable Object request, Class<T> responseType) throws RestClientException_;1496259743;Create a new resource by POSTing the given object to the URL,_and returns the representation found in the response._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param responseType the type of the return value_@return the converted object_@see HttpEntity;@Nullable_	<T> T postForObject(URI url, @Nullable Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,representation,found,in,the,response,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,converted,object,see,http,entity;nullable,t,t,post,for,object,uri,url,nullable,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T postForObject(URI url, @Nullable Object request, Class<T> responseType) throws RestClientException_;1496837955;Create a new resource by POSTing the given object to the URL,_and returns the representation found in the response._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param responseType the type of the return value_@return the converted object_@see HttpEntity;@Nullable_	<T> T postForObject(URI url, @Nullable Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,representation,found,in,the,response,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,converted,object,see,http,entity;nullable,t,t,post,for,object,uri,url,nullable,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T postForObject(URI url, @Nullable Object request, Class<T> responseType) throws RestClientException_;1508532146;Create a new resource by POSTing the given object to the URL,_and returns the representation found in the response._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param responseType the type of the return value_@return the converted object_@see HttpEntity;@Nullable_	<T> T postForObject(URI url, @Nullable Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,representation,found,in,the,response,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,converted,object,see,http,entity;nullable,t,t,post,for,object,uri,url,nullable,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T postForObject(URI url, @Nullable Object request, Class<T> responseType) throws RestClientException_;1509980418;Create a new resource by POSTing the given object to the URL,_and returns the representation found in the response._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request. The body of the entity, or {@code request} itself,_can be a {@link org.springframework.http.client.MultipartBodyBuilder MultiValueMap} to_simulate a multipart from submission._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param responseType the type of the return value_@return the converted object_@see HttpEntity;@Nullable_	<T> T postForObject(URI url, @Nullable Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,representation,found,in,the,response,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,http,client,multipart,body,builder,multi,value,map,to,simulate,a,multipart,from,submission,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,converted,object,see,http,entity;nullable,t,t,post,for,object,uri,url,nullable,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T postForObject(URI url, @Nullable Object request, Class<T> responseType) throws RestClientException_;1510004038;Create a new resource by POSTing the given object to the URL,_and returns the representation found in the response._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p>The body of the entity, or {@code request} itself, can be a_{@link org.springframework.util.MultiValueMap MultiValueMap} to create a multipart request._The values in the {@code MultiValueMap} can be any Object representing the body of the part,_or an {@link org.springframework.http.HttpEntity HttpEntity} representing a part with body_and headers. The {@code MultiValueMap} can be built conveniently using_{@link org.springframework.http.client.MultipartBodyBuilder MultipartBodyBuilder}._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param responseType the type of the return value_@return the converted object_@see HttpEntity;@Nullable_	<T> T postForObject(URI url, @Nullable Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,representation,found,in,the,response,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,util,multi,value,map,multi,value,map,to,create,a,multipart,request,the,values,in,the,code,multi,value,map,can,be,any,object,representing,the,body,of,the,part,or,an,link,org,springframework,http,http,entity,http,entity,representing,a,part,with,body,and,headers,the,code,multi,value,map,can,be,built,conveniently,using,link,org,springframework,http,client,multipart,body,builder,multipart,body,builder,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,converted,object,see,http,entity;nullable,t,t,post,for,object,uri,url,nullable,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T postForObject(URI url, @Nullable Object request, Class<T> responseType) throws RestClientException_;1532695280;Create a new resource by POSTing the given object to the URL,_and returns the representation found in the response._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p>The body of the entity, or {@code request} itself, can be a_{@link org.springframework.util.MultiValueMap MultiValueMap} to create a multipart request._The values in the {@code MultiValueMap} can be any Object representing the body of the part,_or an {@link org.springframework.http.HttpEntity HttpEntity} representing a part with body_and headers. The {@code MultiValueMap} can be built conveniently using_{@link org.springframework.http.client.MultipartBodyBuilder MultipartBodyBuilder}._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param responseType the type of the return value_@return the converted object_@see HttpEntity;@Nullable_	<T> T postForObject(URI url, @Nullable Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,representation,found,in,the,response,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,util,multi,value,map,multi,value,map,to,create,a,multipart,request,the,values,in,the,code,multi,value,map,can,be,any,object,representing,the,body,of,the,part,or,an,link,org,springframework,http,http,entity,http,entity,representing,a,part,with,body,and,headers,the,code,multi,value,map,can,be,built,conveniently,using,link,org,springframework,http,client,multipart,body,builder,multipart,body,builder,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,converted,object,see,http,entity;nullable,t,t,post,for,object,uri,url,nullable,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T postForObject(URI url, @Nullable Object request, Class<T> responseType) throws RestClientException_;1534440670;Create a new resource by POSTing the given object to the URL,_and returns the representation found in the response._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p>The body of the entity, or {@code request} itself, can be a_{@link org.springframework.util.MultiValueMap MultiValueMap} to create a multipart request._The values in the {@code MultiValueMap} can be any Object representing the body of the part,_or an {@link org.springframework.http.HttpEntity HttpEntity} representing a part with body_and headers. The {@code MultiValueMap} can be built conveniently using_{@link org.springframework.http.client.MultipartBodyBuilder MultipartBodyBuilder}._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param responseType the type of the return value_@return the converted object_@see HttpEntity;@Nullable_	<T> T postForObject(URI url, @Nullable Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,representation,found,in,the,response,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,util,multi,value,map,multi,value,map,to,create,a,multipart,request,the,values,in,the,code,multi,value,map,can,be,any,object,representing,the,body,of,the,part,or,an,link,org,springframework,http,http,entity,http,entity,representing,a,part,with,body,and,headers,the,code,multi,value,map,can,be,built,conveniently,using,link,org,springframework,http,client,multipart,body,builder,multipart,body,builder,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,converted,object,see,http,entity;nullable,t,t,post,for,object,uri,url,nullable,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1328020251;Retrieve a representation by doing a GET on the URI template._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object;<T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object;t,t,get,for,object,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1345666836;Retrieve a representation by doing a GET on the URI template._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object;<T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object;t,t,get,for,object,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1356735495;Retrieve a representation by doing a GET on the URI template._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object;<T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object;t,t,get,for,object,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1377627757;Retrieve a representation by doing a GET on the URI template._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object;<T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object;t,t,get,for,object,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1404245400;Retrieve a representation by doing a GET on the URI template._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object;<T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object;t,t,get,for,object,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1404245400;Retrieve a representation by doing a GET on the URI template._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object;<T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object;t,t,get,for,object,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1409790625;Retrieve a representation by doing a GET on the URI template._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object;<T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object;t,t,get,for,object,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1431938798;Retrieve a representation by doing a GET on the URI template._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object;<T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object;t,t,get,for,object,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1431949687;Retrieve a representation by doing a GET on the URI template._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object;<T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object;t,t,get,for,object,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1479374349;Retrieve a representation by doing a GET on the URI template._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object;<T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object;t,t,get,for,object,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1481218770;Retrieve a representation by doing a GET on the URI template._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object;<T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object;t,t,get,for,object,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1482265068;Retrieve a representation by doing a GET on the URI template._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object;<T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object;t,t,get,for,object,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1482841963;Retrieve a representation by doing a GET on the URI template._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object;<T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object;t,t,get,for,object,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			Class<T> responseType) throws RestClientException_;1495868221;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			Class<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,uri,url,http,method,method,nullable,http,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			Class<T> responseType) throws RestClientException_;1496259743;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			Class<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,uri,url,http,method,method,nullable,http,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			Class<T> responseType) throws RestClientException_;1496837955;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			Class<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,uri,url,http,method,method,nullable,http,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			Class<T> responseType) throws RestClientException_;1508532146;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			Class<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,uri,url,http,method,method,nullable,http,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			Class<T> responseType) throws RestClientException_;1509980418;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			Class<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,uri,url,http,method,method,nullable,http,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			Class<T> responseType) throws RestClientException_;1510004038;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			Class<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,uri,url,http,method,method,nullable,http,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			Class<T> responseType) throws RestClientException_;1532695280;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			Class<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,uri,url,http,method,method,nullable,http,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			Class<T> responseType) throws RestClientException_;1534440670;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			Class<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,uri,url,http,method,method,nullable,http,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1328020251;Retrieve a representation by doing a GET on the URI template._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1345666836;Retrieve a representation by doing a GET on the URI template._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1356735495;Retrieve a representation by doing a GET on the URI template._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1377627757;Retrieve a representation by doing a GET on the URI template._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1404245400;Retrieve a representation by doing a GET on the URI template._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1404245400;Retrieve a representation by doing a GET on the URI template._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1409790625;Retrieve a representation by doing a GET on the URI template._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1431938798;Retrieve a representation by doing a GET on the URI template._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1431949687;Retrieve a representation by doing a GET on the URI template._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1479374349;Retrieve a representation by doing a GET on the URI template._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1481218770;Retrieve a representation by doing a GET on the URI template._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1482265068;Retrieve a representation by doing a GET on the URI template._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1482841963;Retrieve a representation by doing a GET on the URI template._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1495868221;Retrieve a representation by doing a GET on the URI template._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1496259743;Retrieve a representation by doing a GET on the URI template._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1496837955;Retrieve a representation by doing a GET on the URI template._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1328020251;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be <code>null</code>_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity_@since 3.0.2;<T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,code,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity,since,3,0,2;t,response,entity,t,post,for,entity,string,url,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1345666836;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be <code>null</code>_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity_@since 3.0.2;<T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,code,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity,since,3,0,2;t,response,entity,t,post,for,entity,string,url,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1356735495;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity_@since 3.0.2;<T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity,since,3,0,2;t,response,entity,t,post,for,entity,string,url,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1377627757;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity_@since 3.0.2;<T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity,since,3,0,2;t,response,entity,t,post,for,entity,string,url,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1404245400;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity_@since 3.0.2;<T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity,since,3,0,2;t,response,entity,t,post,for,entity,string,url,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1404245400;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity_@since 3.0.2;<T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity,since,3,0,2;t,response,entity,t,post,for,entity,string,url,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1409790625;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity_@since 3.0.2;<T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity,since,3,0,2;t,response,entity,t,post,for,entity,string,url,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1431938798;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity_@since 3.0.2;<T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity,since,3,0,2;t,response,entity,t,post,for,entity,string,url,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1431949687;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity_@since 3.0.2;<T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity,since,3,0,2;t,response,entity,t,post,for,entity,string,url,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1479374349;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity_@since 3.0.2;<T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity,since,3,0,2;t,response,entity,t,post,for,entity,string,url,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1481218770;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the converted object_@since 3.0.2_@see HttpEntity;<T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,3,0,2,see,http,entity;t,response,entity,t,post,for,entity,string,url,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1482265068;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the converted object_@since 3.0.2_@see HttpEntity;<T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,3,0,2,see,http,entity;t,response,entity,t,post,for,entity,string,url,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1482841963;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the converted object_@since 3.0.2_@see HttpEntity;<T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,3,0,2,see,http,entity;t,response,entity,t,post,for,entity,string,url,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T patchForObject(URI url, Object request, Class<T> responseType) throws RestClientException_;1479374349;Update a resource by PATCHing the given object to the URL,_and returns the representation found in the response._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param responseType the type of the return value_@return the converted object_@see HttpEntity;<T> T patchForObject(URI url, Object request, Class<T> responseType) throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,url,and,returns,the,representation,found,in,the,response,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,converted,object,see,http,entity;t,t,patch,for,object,uri,url,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> T patchForObject(URI url, Object request, Class<T> responseType) throws RestClientException_;1481218770;Update a resource by PATCHing the given object to the URL,_and returns the representation found in the response._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PATCHed (may be {@code null})_@param responseType the type of the return value_@return the converted object_@since 4.3.5_@see HttpEntity;<T> T patchForObject(URI url, Object request, Class<T> responseType) throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,url,and,returns,the,representation,found,in,the,response,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,converted,object,since,4,3,5,see,http,entity;t,t,patch,for,object,uri,url,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> T patchForObject(URI url, Object request, Class<T> responseType) throws RestClientException_;1482265068;Update a resource by PATCHing the given object to the URL,_and return the representation found in the response._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the object to be PATCHed (may be {@code null})_@param responseType the type of the return value_@return the converted object_@since 4.3.5_@see HttpEntity;<T> T patchForObject(URI url, Object request, Class<T> responseType) throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,url,and,return,the,representation,found,in,the,response,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,converted,object,since,4,3,5,see,http,entity;t,t,patch,for,object,uri,url,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> T patchForObject(URI url, Object request, Class<T> responseType) throws RestClientException_;1482841963;Update a resource by PATCHing the given object to the URL,_and return the representation found in the response._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p><b>NOTE: The standard JDK HTTP library does not support HTTP PATCH._You need to use the Apache HttpComponents or OkHttp request factory.</b>_@param url the URL_@param request the object to be PATCHed (may be {@code null})_@param responseType the type of the return value_@return the converted object_@since 4.3.5_@see HttpEntity_@see RestTemplate#setRequestFactory_@see org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory_@see org.springframework.http.client.OkHttp3ClientHttpRequestFactory;<T> T patchForObject(URI url, Object request, Class<T> responseType) throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,url,and,return,the,representation,found,in,the,response,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,b,note,the,standard,jdk,http,library,does,not,support,http,patch,you,need,to,use,the,apache,http,components,or,ok,http,request,factory,b,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,converted,object,since,4,3,5,see,http,entity,see,rest,template,set,request,factory,see,org,springframework,http,client,http,components,async,client,http,request,factory,see,org,springframework,http,client,ok,http3client,http,request,factory;t,t,patch,for,object,uri,url,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T execute(String url, HttpMethod method, @Nullable RequestCallback requestCallback, 			@Nullable ResponseExtractor<T> responseExtractor, Object... uriVariables) throws RestClientException_;1496259743;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};@Nullable_	<T> T execute(String url, HttpMethod method, @Nullable RequestCallback requestCallback,_			@Nullable ResponseExtractor<T> responseExtractor, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;nullable,t,t,execute,string,url,http,method,method,nullable,request,callback,request,callback,nullable,response,extractor,t,response,extractor,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T execute(String url, HttpMethod method, @Nullable RequestCallback requestCallback, 			@Nullable ResponseExtractor<T> responseExtractor, Object... uriVariables) throws RestClientException_;1496837955;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};@Nullable_	<T> T execute(String url, HttpMethod method, @Nullable RequestCallback requestCallback,_			@Nullable ResponseExtractor<T> responseExtractor, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;nullable,t,t,execute,string,url,http,method,method,nullable,request,callback,request,callback,nullable,response,extractor,t,response,extractor,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	URI postForLocation(URI url, @Nullable Object request) throws RestClientException_;1496837955;Create a new resource by POSTing the given object to the URL, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@return the value for the {@code Location} header_@see HttpEntity;@Nullable_	URI postForLocation(URI url, @Nullable Object request) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,value,for,the,code,location,header,see,http,entity;nullable,uri,post,for,location,uri,url,nullable,object,request,throws,rest,client,exception
RestOperations -> @Nullable 	URI postForLocation(URI url, @Nullable Object request) throws RestClientException_;1508532146;Create a new resource by POSTing the given object to the URL, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@return the value for the {@code Location} header_@see HttpEntity;@Nullable_	URI postForLocation(URI url, @Nullable Object request) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,value,for,the,code,location,header,see,http,entity;nullable,uri,post,for,location,uri,url,nullable,object,request,throws,rest,client,exception
RestOperations -> @Nullable 	URI postForLocation(URI url, @Nullable Object request) throws RestClientException_;1509980418;Create a new resource by POSTing the given object to the URL, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request. The body of the entity, or {@code request} itself,_can be a {@link org.springframework.http.client.MultipartBodyBuilder MultiValueMap} to_simulate a multipart from submission._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@return the value for the {@code Location} header_@see HttpEntity;@Nullable_	URI postForLocation(URI url, @Nullable Object request) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,http,client,multipart,body,builder,multi,value,map,to,simulate,a,multipart,from,submission,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,value,for,the,code,location,header,see,http,entity;nullable,uri,post,for,location,uri,url,nullable,object,request,throws,rest,client,exception
RestOperations -> @Nullable 	URI postForLocation(URI url, @Nullable Object request) throws RestClientException_;1510004038;Create a new resource by POSTing the given object to the URL, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p>The body of the entity, or {@code request} itself, can be a_{@link org.springframework.util.MultiValueMap MultiValueMap} to create a multipart request._The values in the {@code MultiValueMap} can be any Object representing the body of the part,_or an {@link org.springframework.http.HttpEntity HttpEntity} representing a part with body_and headers. The {@code MultiValueMap} can be built conveniently using_{@link org.springframework.http.client.MultipartBodyBuilder MultipartBodyBuilder}._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@return the value for the {@code Location} header_@see HttpEntity;@Nullable_	URI postForLocation(URI url, @Nullable Object request) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,util,multi,value,map,multi,value,map,to,create,a,multipart,request,the,values,in,the,code,multi,value,map,can,be,any,object,representing,the,body,of,the,part,or,an,link,org,springframework,http,http,entity,http,entity,representing,a,part,with,body,and,headers,the,code,multi,value,map,can,be,built,conveniently,using,link,org,springframework,http,client,multipart,body,builder,multipart,body,builder,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,value,for,the,code,location,header,see,http,entity;nullable,uri,post,for,location,uri,url,nullable,object,request,throws,rest,client,exception
RestOperations -> @Nullable 	URI postForLocation(URI url, @Nullable Object request) throws RestClientException_;1532695280;Create a new resource by POSTing the given object to the URL, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p>The body of the entity, or {@code request} itself, can be a_{@link org.springframework.util.MultiValueMap MultiValueMap} to create a multipart request._The values in the {@code MultiValueMap} can be any Object representing the body of the part,_or an {@link org.springframework.http.HttpEntity HttpEntity} representing a part with body_and headers. The {@code MultiValueMap} can be built conveniently using_{@link org.springframework.http.client.MultipartBodyBuilder MultipartBodyBuilder}._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@return the value for the {@code Location} header_@see HttpEntity;@Nullable_	URI postForLocation(URI url, @Nullable Object request) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,util,multi,value,map,multi,value,map,to,create,a,multipart,request,the,values,in,the,code,multi,value,map,can,be,any,object,representing,the,body,of,the,part,or,an,link,org,springframework,http,http,entity,http,entity,representing,a,part,with,body,and,headers,the,code,multi,value,map,can,be,built,conveniently,using,link,org,springframework,http,client,multipart,body,builder,multipart,body,builder,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,value,for,the,code,location,header,see,http,entity;nullable,uri,post,for,location,uri,url,nullable,object,request,throws,rest,client,exception
RestOperations -> @Nullable 	URI postForLocation(URI url, @Nullable Object request) throws RestClientException_;1534440670;Create a new resource by POSTing the given object to the URL, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p>The body of the entity, or {@code request} itself, can be a_{@link org.springframework.util.MultiValueMap MultiValueMap} to create a multipart request._The values in the {@code MultiValueMap} can be any Object representing the body of the part,_or an {@link org.springframework.http.HttpEntity HttpEntity} representing a part with body_and headers. The {@code MultiValueMap} can be built conveniently using_{@link org.springframework.http.client.MultipartBodyBuilder MultipartBodyBuilder}._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@return the value for the {@code Location} header_@see HttpEntity;@Nullable_	URI postForLocation(URI url, @Nullable Object request) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,util,multi,value,map,multi,value,map,to,create,a,multipart,request,the,values,in,the,code,multi,value,map,can,be,any,object,representing,the,body,of,the,part,or,an,link,org,springframework,http,http,entity,http,entity,representing,a,part,with,body,and,headers,the,code,multi,value,map,can,be,built,conveniently,using,link,org,springframework,http,client,multipart,body,builder,multipart,body,builder,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,value,for,the,code,location,header,see,http,entity;nullable,uri,post,for,location,uri,url,nullable,object,request,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T execute(URI url, HttpMethod method, @Nullable RequestCallback requestCallback, 			@Nullable ResponseExtractor<T> responseExtractor) throws RestClientException_;1496259743;Execute the HTTP method to the given URL, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@return an arbitrary object, as returned by the {@link ResponseExtractor};@Nullable_	<T> T execute(URI url, HttpMethod method, @Nullable RequestCallback requestCallback,_			@Nullable ResponseExtractor<T> responseExtractor) throws RestClientException_;execute,the,http,method,to,the,given,url,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;nullable,t,t,execute,uri,url,http,method,method,nullable,request,callback,request,callback,nullable,response,extractor,t,response,extractor,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T execute(URI url, HttpMethod method, @Nullable RequestCallback requestCallback, 			@Nullable ResponseExtractor<T> responseExtractor) throws RestClientException_;1496837955;Execute the HTTP method to the given URL, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@return an arbitrary object, as returned by the {@link ResponseExtractor};@Nullable_	<T> T execute(URI url, HttpMethod method, @Nullable RequestCallback requestCallback,_			@Nullable ResponseExtractor<T> responseExtractor) throws RestClientException_;execute,the,http,method,to,the,given,url,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;nullable,t,t,execute,uri,url,http,method,method,nullable,request,callback,request,callback,nullable,response,extractor,t,response,extractor,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T execute(URI url, HttpMethod method, @Nullable RequestCallback requestCallback, 			@Nullable ResponseExtractor<T> responseExtractor) throws RestClientException_;1508532146;Execute the HTTP method to the given URL, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@return an arbitrary object, as returned by the {@link ResponseExtractor};@Nullable_	<T> T execute(URI url, HttpMethod method, @Nullable RequestCallback requestCallback,_			@Nullable ResponseExtractor<T> responseExtractor) throws RestClientException_;execute,the,http,method,to,the,given,url,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;nullable,t,t,execute,uri,url,http,method,method,nullable,request,callback,request,callback,nullable,response,extractor,t,response,extractor,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T execute(URI url, HttpMethod method, @Nullable RequestCallback requestCallback, 			@Nullable ResponseExtractor<T> responseExtractor) throws RestClientException_;1509980418;Execute the HTTP method to the given URL, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@return an arbitrary object, as returned by the {@link ResponseExtractor};@Nullable_	<T> T execute(URI url, HttpMethod method, @Nullable RequestCallback requestCallback,_			@Nullable ResponseExtractor<T> responseExtractor) throws RestClientException_;execute,the,http,method,to,the,given,url,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;nullable,t,t,execute,uri,url,http,method,method,nullable,request,callback,request,callback,nullable,response,extractor,t,response,extractor,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T execute(URI url, HttpMethod method, @Nullable RequestCallback requestCallback, 			@Nullable ResponseExtractor<T> responseExtractor) throws RestClientException_;1510004038;Execute the HTTP method to the given URL, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@return an arbitrary object, as returned by the {@link ResponseExtractor};@Nullable_	<T> T execute(URI url, HttpMethod method, @Nullable RequestCallback requestCallback,_			@Nullable ResponseExtractor<T> responseExtractor) throws RestClientException_;execute,the,http,method,to,the,given,url,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;nullable,t,t,execute,uri,url,http,method,method,nullable,request,callback,request,callback,nullable,response,extractor,t,response,extractor,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T execute(URI url, HttpMethod method, @Nullable RequestCallback requestCallback, 			@Nullable ResponseExtractor<T> responseExtractor) throws RestClientException_;1532695280;Execute the HTTP method to the given URL, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@return an arbitrary object, as returned by the {@link ResponseExtractor};@Nullable_	<T> T execute(URI url, HttpMethod method, @Nullable RequestCallback requestCallback,_			@Nullable ResponseExtractor<T> responseExtractor) throws RestClientException_;execute,the,http,method,to,the,given,url,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;nullable,t,t,execute,uri,url,http,method,method,nullable,request,callback,request,callback,nullable,response,extractor,t,response,extractor,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T execute(URI url, HttpMethod method, @Nullable RequestCallback requestCallback, 			@Nullable ResponseExtractor<T> responseExtractor) throws RestClientException_;1534440670;Execute the HTTP method to the given URL, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@return an arbitrary object, as returned by the {@link ResponseExtractor};@Nullable_	<T> T execute(URI url, HttpMethod method, @Nullable RequestCallback requestCallback,_			@Nullable ResponseExtractor<T> responseExtractor) throws RestClientException_;execute,the,http,method,to,the,given,url,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;nullable,t,t,execute,uri,url,http,method,method,nullable,request,callback,request,callback,nullable,response,extractor,t,response,extractor,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url,HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;1345666836;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:__<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>__@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the_request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2.0;<T> ResponseEntity<T> exchange(String url,HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2,0;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url,HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;1356735495;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:__<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>__@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the_request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2.0;<T> ResponseEntity<T> exchange(String url,HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2,0;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url,HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;1377627757;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:__<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>__@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the_request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2.0;<T> ResponseEntity<T> exchange(String url,HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2,0;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url,HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;1404245400;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:__<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>__@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the_request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2.0;<T> ResponseEntity<T> exchange(String url,HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2,0;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url,HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;1404245400;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:__<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>__@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the_request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2.0;<T> ResponseEntity<T> exchange(String url,HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2,0;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url,HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;1409790625;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the_request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(String url,HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url,HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;1431938798;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the_request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(String url,HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url,HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;1431949687;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the_request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(String url,HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url,HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;1479374349;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the_request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(String url,HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url,HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;1481218770;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the_request (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(String url,HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url,HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;1482265068;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the_request (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(String url,HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url,HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;1482841963;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the_request (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(String url,HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T patchForObject(String url, @Nullable Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1495868221;Update a resource by PATCHing the given object to the URI template,_and return the representation found in the response._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p><b>NOTE: The standard JDK HTTP library does not support HTTP PATCH._You need to use the Apache HttpComponents or OkHttp request factory.</b>_@param url the URL_@param request the object to be PATCHed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@since 4.3.5_@see HttpEntity_@see RestTemplate#setRequestFactory_@see org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory_@see org.springframework.http.client.OkHttp3ClientHttpRequestFactory;@Nullable_	<T> T patchForObject(String url, @Nullable Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,uri,template,and,return,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,b,note,the,standard,jdk,http,library,does,not,support,http,patch,you,need,to,use,the,apache,http,components,or,ok,http,request,factory,b,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,4,3,5,see,http,entity,see,rest,template,set,request,factory,see,org,springframework,http,client,http,components,async,client,http,request,factory,see,org,springframework,http,client,ok,http3client,http,request,factory;nullable,t,t,patch,for,object,string,url,nullable,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T patchForObject(String url, @Nullable Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1496259743;Update a resource by PATCHing the given object to the URI template,_and return the representation found in the response._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p><b>NOTE: The standard JDK HTTP library does not support HTTP PATCH._You need to use the Apache HttpComponents or OkHttp request factory.</b>_@param url the URL_@param request the object to be PATCHed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@since 4.3.5_@see HttpEntity_@see RestTemplate#setRequestFactory_@see org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory_@see org.springframework.http.client.OkHttp3ClientHttpRequestFactory;@Nullable_	<T> T patchForObject(String url, @Nullable Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,uri,template,and,return,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,b,note,the,standard,jdk,http,library,does,not,support,http,patch,you,need,to,use,the,apache,http,components,or,ok,http,request,factory,b,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,4,3,5,see,http,entity,see,rest,template,set,request,factory,see,org,springframework,http,client,http,components,async,client,http,request,factory,see,org,springframework,http,client,ok,http3client,http,request,factory;nullable,t,t,patch,for,object,string,url,nullable,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T patchForObject(String url, @Nullable Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1496837955;Update a resource by PATCHing the given object to the URI template,_and return the representation found in the response._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p><b>NOTE: The standard JDK HTTP library does not support HTTP PATCH._You need to use the Apache HttpComponents or OkHttp request factory.</b>_@param url the URL_@param request the object to be PATCHed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@since 4.3.5_@see HttpEntity_@see RestTemplate#setRequestFactory_@see org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory_@see org.springframework.http.client.OkHttp3ClientHttpRequestFactory;@Nullable_	<T> T patchForObject(String url, @Nullable Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,uri,template,and,return,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,b,note,the,standard,jdk,http,library,does,not,support,http,patch,you,need,to,use,the,apache,http,components,or,ok,http,request,factory,b,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,4,3,5,see,http,entity,see,rest,template,set,request,factory,see,org,springframework,http,client,http,components,async,client,http,request,factory,see,org,springframework,http,client,ok,http3client,http,request,factory;nullable,t,t,patch,for,object,string,url,nullable,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T execute(String url, HttpMethod method, @Nullable RequestCallback requestCallback, 			@Nullable ResponseExtractor<T> responseExtractor, Object... uriVariables) 			throws RestClientException_;1508532146;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};@Nullable_	<T> T execute(String url, HttpMethod method, @Nullable RequestCallback requestCallback,_			@Nullable ResponseExtractor<T> responseExtractor, Object... uriVariables)_			throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;nullable,t,t,execute,string,url,http,method,method,nullable,request,callback,request,callback,nullable,response,extractor,t,response,extractor,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T execute(String url, HttpMethod method, @Nullable RequestCallback requestCallback, 			@Nullable ResponseExtractor<T> responseExtractor, Object... uriVariables) 			throws RestClientException_;1509980418;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};@Nullable_	<T> T execute(String url, HttpMethod method, @Nullable RequestCallback requestCallback,_			@Nullable ResponseExtractor<T> responseExtractor, Object... uriVariables)_			throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;nullable,t,t,execute,string,url,http,method,method,nullable,request,callback,request,callback,nullable,response,extractor,t,response,extractor,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T execute(String url, HttpMethod method, @Nullable RequestCallback requestCallback, 			@Nullable ResponseExtractor<T> responseExtractor, Object... uriVariables) 			throws RestClientException_;1510004038;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};@Nullable_	<T> T execute(String url, HttpMethod method, @Nullable RequestCallback requestCallback,_			@Nullable ResponseExtractor<T> responseExtractor, Object... uriVariables)_			throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;nullable,t,t,execute,string,url,http,method,method,nullable,request,callback,request,callback,nullable,response,extractor,t,response,extractor,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T execute(String url, HttpMethod method, @Nullable RequestCallback requestCallback, 			@Nullable ResponseExtractor<T> responseExtractor, Object... uriVariables) 			throws RestClientException_;1532695280;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};@Nullable_	<T> T execute(String url, HttpMethod method, @Nullable RequestCallback requestCallback,_			@Nullable ResponseExtractor<T> responseExtractor, Object... uriVariables)_			throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;nullable,t,t,execute,string,url,http,method,method,nullable,request,callback,request,callback,nullable,response,extractor,t,response,extractor,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T execute(String url, HttpMethod method, @Nullable RequestCallback requestCallback, 			@Nullable ResponseExtractor<T> responseExtractor, Object... uriVariables) 			throws RestClientException_;1534440670;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};@Nullable_	<T> T execute(String url, HttpMethod method, @Nullable RequestCallback requestCallback,_			@Nullable ResponseExtractor<T> responseExtractor, Object... uriVariables)_			throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;nullable,t,t,execute,string,url,http,method,method,nullable,request,callback,request,callback,nullable,response,extractor,t,response,extractor,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, Class<T> responseType) 			throws RestClientException_;1508532146;Execute the request specified in the given {@link RequestEntity} and return_the response as {@link ResponseEntity}. Typically used in combination_with the static builder methods on {@code RequestEntity}, for instance:_<pre class="code">_MyRequest body = ..._RequestEntity request = RequestEntity_.post(new URI(&quot_http://example.com/foo&quot_))_.accept(MediaType.APPLICATION_JSON)_.body(body)__ResponseEntity&lt_MyResponse&gt_ response = template.exchange(request, MyResponse.class)__</pre>_@param requestEntity the entity to write to the request_@param responseType the type of the return value_@return the response as entity_@since 4.1;<T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, Class<T> responseType)_			throws RestClientException_;execute,the,request,specified,in,the,given,link,request,entity,and,return,the,response,as,link,response,entity,typically,used,in,combination,with,the,static,builder,methods,on,code,request,entity,for,instance,pre,class,code,my,request,body,request,entity,request,request,entity,post,new,uri,quot,http,example,com,foo,quot,accept,media,type,body,body,response,entity,lt,my,response,gt,response,template,exchange,request,my,response,class,pre,param,request,entity,the,entity,to,write,to,the,request,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,4,1;t,response,entity,t,exchange,request,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, Class<T> responseType) 			throws RestClientException_;1509980418;Execute the request specified in the given {@link RequestEntity} and return_the response as {@link ResponseEntity}. Typically used in combination_with the static builder methods on {@code RequestEntity}, for instance:_<pre class="code">_MyRequest body = ..._RequestEntity request = RequestEntity_.post(new URI(&quot_http://example.com/foo&quot_))_.accept(MediaType.APPLICATION_JSON)_.body(body)__ResponseEntity&lt_MyResponse&gt_ response = template.exchange(request, MyResponse.class)__</pre>_@param requestEntity the entity to write to the request_@param responseType the type of the return value_@return the response as entity_@since 4.1;<T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, Class<T> responseType)_			throws RestClientException_;execute,the,request,specified,in,the,given,link,request,entity,and,return,the,response,as,link,response,entity,typically,used,in,combination,with,the,static,builder,methods,on,code,request,entity,for,instance,pre,class,code,my,request,body,request,entity,request,request,entity,post,new,uri,quot,http,example,com,foo,quot,accept,media,type,body,body,response,entity,lt,my,response,gt,response,template,exchange,request,my,response,class,pre,param,request,entity,the,entity,to,write,to,the,request,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,4,1;t,response,entity,t,exchange,request,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, Class<T> responseType) 			throws RestClientException_;1510004038;Execute the request specified in the given {@link RequestEntity} and return_the response as {@link ResponseEntity}. Typically used in combination_with the static builder methods on {@code RequestEntity}, for instance:_<pre class="code">_MyRequest body = ..._RequestEntity request = RequestEntity_.post(new URI(&quot_http://example.com/foo&quot_))_.accept(MediaType.APPLICATION_JSON)_.body(body)__ResponseEntity&lt_MyResponse&gt_ response = template.exchange(request, MyResponse.class)__</pre>_@param requestEntity the entity to write to the request_@param responseType the type of the return value_@return the response as entity_@since 4.1;<T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, Class<T> responseType)_			throws RestClientException_;execute,the,request,specified,in,the,given,link,request,entity,and,return,the,response,as,link,response,entity,typically,used,in,combination,with,the,static,builder,methods,on,code,request,entity,for,instance,pre,class,code,my,request,body,request,entity,request,request,entity,post,new,uri,quot,http,example,com,foo,quot,accept,media,type,body,body,response,entity,lt,my,response,gt,response,template,exchange,request,my,response,class,pre,param,request,entity,the,entity,to,write,to,the,request,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,4,1;t,response,entity,t,exchange,request,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, Class<T> responseType) 			throws RestClientException_;1532695280;Execute the request specified in the given {@link RequestEntity} and return_the response as {@link ResponseEntity}. Typically used in combination_with the static builder methods on {@code RequestEntity}, for instance:_<pre class="code">_MyRequest body = ..._RequestEntity request = RequestEntity_.post(new URI(&quot_http://example.com/foo&quot_))_.accept(MediaType.APPLICATION_JSON)_.body(body)__ResponseEntity&lt_MyResponse&gt_ response = template.exchange(request, MyResponse.class)__</pre>_@param requestEntity the entity to write to the request_@param responseType the type of the return value_@return the response as entity_@since 4.1;<T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, Class<T> responseType)_			throws RestClientException_;execute,the,request,specified,in,the,given,link,request,entity,and,return,the,response,as,link,response,entity,typically,used,in,combination,with,the,static,builder,methods,on,code,request,entity,for,instance,pre,class,code,my,request,body,request,entity,request,request,entity,post,new,uri,quot,http,example,com,foo,quot,accept,media,type,body,body,response,entity,lt,my,response,gt,response,template,exchange,request,my,response,class,pre,param,request,entity,the,entity,to,write,to,the,request,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,4,1;t,response,entity,t,exchange,request,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, Class<T> responseType) 			throws RestClientException_;1534440670;Execute the request specified in the given {@link RequestEntity} and return_the response as {@link ResponseEntity}. Typically used in combination_with the static builder methods on {@code RequestEntity}, for instance:_<pre class="code">_MyRequest body = ..._RequestEntity request = RequestEntity_.post(new URI(&quot_http://example.com/foo&quot_))_.accept(MediaType.APPLICATION_JSON)_.body(body)__ResponseEntity&lt_MyResponse&gt_ response = template.exchange(request, MyResponse.class)__</pre>_@param requestEntity the entity to write to the request_@param responseType the type of the return value_@return the response as entity_@since 4.1;<T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, Class<T> responseType)_			throws RestClientException_;execute,the,request,specified,in,the,given,link,request,entity,and,return,the,response,as,link,response,entity,typically,used,in,combination,with,the,static,builder,methods,on,code,request,entity,for,instance,pre,class,code,my,request,body,request,entity,request,request,entity,post,new,uri,quot,http,example,com,foo,quot,accept,media,type,body,body,response,entity,lt,my,response,gt,response,template,exchange,request,my,response,class,pre,param,request,entity,the,entity,to,write,to,the,request,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,4,1;t,response,entity,t,exchange,request,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T patchForObject(URI url, @Nullable Object request, Class<T> responseType) throws RestClientException_;1495868221;Update a resource by PATCHing the given object to the URL,_and return the representation found in the response._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p><b>NOTE: The standard JDK HTTP library does not support HTTP PATCH._You need to use the Apache HttpComponents or OkHttp request factory.</b>_@param url the URL_@param request the object to be PATCHed (may be {@code null})_@param responseType the type of the return value_@return the converted object_@since 4.3.5_@see HttpEntity_@see RestTemplate#setRequestFactory_@see org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory_@see org.springframework.http.client.OkHttp3ClientHttpRequestFactory;@Nullable_	<T> T patchForObject(URI url, @Nullable Object request, Class<T> responseType) throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,url,and,return,the,representation,found,in,the,response,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,b,note,the,standard,jdk,http,library,does,not,support,http,patch,you,need,to,use,the,apache,http,components,or,ok,http,request,factory,b,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,converted,object,since,4,3,5,see,http,entity,see,rest,template,set,request,factory,see,org,springframework,http,client,http,components,async,client,http,request,factory,see,org,springframework,http,client,ok,http3client,http,request,factory;nullable,t,t,patch,for,object,uri,url,nullable,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T patchForObject(URI url, @Nullable Object request, Class<T> responseType) throws RestClientException_;1496259743;Update a resource by PATCHing the given object to the URL,_and return the representation found in the response._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p><b>NOTE: The standard JDK HTTP library does not support HTTP PATCH._You need to use the Apache HttpComponents or OkHttp request factory.</b>_@param url the URL_@param request the object to be PATCHed (may be {@code null})_@param responseType the type of the return value_@return the converted object_@since 4.3.5_@see HttpEntity_@see RestTemplate#setRequestFactory_@see org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory_@see org.springframework.http.client.OkHttp3ClientHttpRequestFactory;@Nullable_	<T> T patchForObject(URI url, @Nullable Object request, Class<T> responseType) throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,url,and,return,the,representation,found,in,the,response,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,b,note,the,standard,jdk,http,library,does,not,support,http,patch,you,need,to,use,the,apache,http,components,or,ok,http,request,factory,b,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,converted,object,since,4,3,5,see,http,entity,see,rest,template,set,request,factory,see,org,springframework,http,client,http,components,async,client,http,request,factory,see,org,springframework,http,client,ok,http3client,http,request,factory;nullable,t,t,patch,for,object,uri,url,nullable,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T patchForObject(URI url, @Nullable Object request, Class<T> responseType) throws RestClientException_;1496837955;Update a resource by PATCHing the given object to the URL,_and return the representation found in the response._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p><b>NOTE: The standard JDK HTTP library does not support HTTP PATCH._You need to use the Apache HttpComponents or OkHttp request factory.</b>_@param url the URL_@param request the object to be PATCHed (may be {@code null})_@param responseType the type of the return value_@return the converted object_@since 4.3.5_@see HttpEntity_@see RestTemplate#setRequestFactory_@see org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory_@see org.springframework.http.client.OkHttp3ClientHttpRequestFactory;@Nullable_	<T> T patchForObject(URI url, @Nullable Object request, Class<T> responseType) throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,url,and,return,the,representation,found,in,the,response,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,b,note,the,standard,jdk,http,library,does,not,support,http,patch,you,need,to,use,the,apache,http,components,or,ok,http,request,factory,b,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,converted,object,since,4,3,5,see,http,entity,see,rest,template,set,request,factory,see,org,springframework,http,client,http,components,async,client,http,request,factory,see,org,springframework,http,client,ok,http3client,http,request,factory;nullable,t,t,patch,for,object,uri,url,nullable,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;1328020251;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;1345666836;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;1356735495;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;1377627757;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;1404245400;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;1404245400;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;1409790625;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;1431938798;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;1431949687;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;1479374349;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;1481218770;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;1482265068;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;1482841963;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;1495868221;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;1496259743;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;1496837955;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;1508532146;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;1509980418;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;1510004038;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;1532695280;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;1534440670;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Map<String, ?> uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void put(URI url, Object request) throws RestClientException_;1328020251;Creates a new resource by PUTting the given object to URL._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT, may be <code>null</code>_@see HttpEntity;void put(URI url, Object request) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,url,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,code,see,http,entity;void,put,uri,url,object,request,throws,rest,client,exception
RestOperations -> void put(URI url, Object request) throws RestClientException_;1345666836;Creates a new resource by PUTting the given object to URL._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT, may be <code>null</code>_@see HttpEntity;void put(URI url, Object request) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,url,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,code,see,http,entity;void,put,uri,url,object,request,throws,rest,client,exception
RestOperations -> void put(URI url, Object request) throws RestClientException_;1356735495;Creates a new resource by PUTting the given object to URL._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT, may be {@code null}_@see HttpEntity;void put(URI url, Object request) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,url,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,see,http,entity;void,put,uri,url,object,request,throws,rest,client,exception
RestOperations -> void put(URI url, Object request) throws RestClientException_;1377627757;Creates a new resource by PUTting the given object to URL._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT, may be {@code null}_@see HttpEntity;void put(URI url, Object request) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,url,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,see,http,entity;void,put,uri,url,object,request,throws,rest,client,exception
RestOperations -> void put(URI url, Object request) throws RestClientException_;1404245400;Creates a new resource by PUTting the given object to URL._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT, may be {@code null}_@see HttpEntity;void put(URI url, Object request) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,url,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,see,http,entity;void,put,uri,url,object,request,throws,rest,client,exception
RestOperations -> void put(URI url, Object request) throws RestClientException_;1404245400;Creates a new resource by PUTting the given object to URL._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT, may be {@code null}_@see HttpEntity;void put(URI url, Object request) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,url,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,see,http,entity;void,put,uri,url,object,request,throws,rest,client,exception
RestOperations -> void put(URI url, Object request) throws RestClientException_;1409790625;Creates a new resource by PUTting the given object to URL._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT, may be {@code null}_@see HttpEntity;void put(URI url, Object request) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,url,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,see,http,entity;void,put,uri,url,object,request,throws,rest,client,exception
RestOperations -> void put(URI url, Object request) throws RestClientException_;1431938798;Creates a new resource by PUTting the given object to URL._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT, may be {@code null}_@see HttpEntity;void put(URI url, Object request) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,url,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,see,http,entity;void,put,uri,url,object,request,throws,rest,client,exception
RestOperations -> void put(URI url, Object request) throws RestClientException_;1431949687;Creates a new resource by PUTting the given object to URL._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT, may be {@code null}_@see HttpEntity;void put(URI url, Object request) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,url,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,see,http,entity;void,put,uri,url,object,request,throws,rest,client,exception
RestOperations -> void put(URI url, Object request) throws RestClientException_;1479374349;Creates a new resource by PUTting the given object to URL._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT, may be {@code null}_@see HttpEntity;void put(URI url, Object request) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,url,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,see,http,entity;void,put,uri,url,object,request,throws,rest,client,exception
RestOperations -> void put(URI url, Object request) throws RestClientException_;1481218770;Creates a new resource by PUTting the given object to URL._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT (may be {@code null})_@see HttpEntity;void put(URI url, Object request) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,url,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,see,http,entity;void,put,uri,url,object,request,throws,rest,client,exception
RestOperations -> void put(URI url, Object request) throws RestClientException_;1482265068;Creates a new resource by PUTting the given object to URL._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT (may be {@code null})_@see HttpEntity;void put(URI url, Object request) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,url,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,see,http,entity;void,put,uri,url,object,request,throws,rest,client,exception
RestOperations -> void put(URI url, Object request) throws RestClientException_;1482841963;Creates a new resource by PUTting the given object to URL._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT (may be {@code null})_@see HttpEntity;void put(URI url, Object request) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,url,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,see,http,entity;void,put,uri,url,object,request,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1328020251;Retrieve an entity by doing a GET on the specified URL._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the entity_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,an,entity,by,doing,a,get,on,the,specified,url,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,entity,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1345666836;Retrieve an entity by doing a GET on the specified URL._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the entity_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,an,entity,by,doing,a,get,on,the,specified,url,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,entity,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1356735495;Retrieve an entity by doing a GET on the specified URL._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the entity_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,an,entity,by,doing,a,get,on,the,specified,url,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,entity,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1377627757;Retrieve an entity by doing a GET on the specified URL._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the entity_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,an,entity,by,doing,a,get,on,the,specified,url,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,entity,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1404245400;Retrieve an entity by doing a GET on the specified URL._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the entity_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,an,entity,by,doing,a,get,on,the,specified,url,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,entity,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1404245400;Retrieve an entity by doing a GET on the specified URL._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the entity_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,an,entity,by,doing,a,get,on,the,specified,url,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,entity,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1409790625;Retrieve an entity by doing a GET on the specified URL._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the entity_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,an,entity,by,doing,a,get,on,the,specified,url,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,entity,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1431938798;Retrieve an entity by doing a GET on the specified URL._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the entity_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,an,entity,by,doing,a,get,on,the,specified,url,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,entity,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1431949687;Retrieve an entity by doing a GET on the specified URL._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the entity_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,an,entity,by,doing,a,get,on,the,specified,url,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,entity,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1479374349;Retrieve an entity by doing a GET on the specified URL._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the entity_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,an,entity,by,doing,a,get,on,the,specified,url,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,entity,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1481218770;Retrieve an entity by doing a GET on the specified URL._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the entity_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,an,entity,by,doing,a,get,on,the,specified,url,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,entity,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1482265068;Retrieve an entity by doing a GET on the specified URL._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the entity_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,an,entity,by,doing,a,get,on,the,specified,url,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,entity,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1482841963;Retrieve an entity by doing a GET on the specified URL._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the entity_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,an,entity,by,doing,a,get,on,the,specified,url,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,entity,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1495868221;Retrieve an entity by doing a GET on the specified URL._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the entity_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,an,entity,by,doing,a,get,on,the,specified,url,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,entity,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1496259743;Retrieve an entity by doing a GET on the specified URL._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the entity_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,an,entity,by,doing,a,get,on,the,specified,url,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,entity,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1496837955;Retrieve an entity by doing a GET on the specified URL._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the entity_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,an,entity,by,doing,a,get,on,the,specified,url,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,entity,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;1328020251;Retrieve a representation by doing a GET on the URL ._The response (if any) is converted and returned._@param url the URL_@param responseType the type of the return value_@return the converted object;<T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,if,any,is,converted,and,returned,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object;t,t,get,for,object,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;1345666836;Retrieve a representation by doing a GET on the URL ._The response (if any) is converted and returned._@param url the URL_@param responseType the type of the return value_@return the converted object;<T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,if,any,is,converted,and,returned,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object;t,t,get,for,object,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;1356735495;Retrieve a representation by doing a GET on the URL ._The response (if any) is converted and returned._@param url the URL_@param responseType the type of the return value_@return the converted object;<T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,if,any,is,converted,and,returned,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object;t,t,get,for,object,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;1377627757;Retrieve a representation by doing a GET on the URL ._The response (if any) is converted and returned._@param url the URL_@param responseType the type of the return value_@return the converted object;<T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,if,any,is,converted,and,returned,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object;t,t,get,for,object,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;1404245400;Retrieve a representation by doing a GET on the URL ._The response (if any) is converted and returned._@param url the URL_@param responseType the type of the return value_@return the converted object;<T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,if,any,is,converted,and,returned,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object;t,t,get,for,object,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;1404245400;Retrieve a representation by doing a GET on the URL ._The response (if any) is converted and returned._@param url the URL_@param responseType the type of the return value_@return the converted object;<T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,if,any,is,converted,and,returned,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object;t,t,get,for,object,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;1409790625;Retrieve a representation by doing a GET on the URL ._The response (if any) is converted and returned._@param url the URL_@param responseType the type of the return value_@return the converted object;<T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,if,any,is,converted,and,returned,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object;t,t,get,for,object,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;1431938798;Retrieve a representation by doing a GET on the URL ._The response (if any) is converted and returned._@param url the URL_@param responseType the type of the return value_@return the converted object;<T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,if,any,is,converted,and,returned,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object;t,t,get,for,object,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;1431949687;Retrieve a representation by doing a GET on the URL ._The response (if any) is converted and returned._@param url the URL_@param responseType the type of the return value_@return the converted object;<T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,if,any,is,converted,and,returned,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object;t,t,get,for,object,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;1479374349;Retrieve a representation by doing a GET on the URL ._The response (if any) is converted and returned._@param url the URL_@param responseType the type of the return value_@return the converted object;<T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,if,any,is,converted,and,returned,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object;t,t,get,for,object,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;1481218770;Retrieve a representation by doing a GET on the URL ._The response (if any) is converted and returned._@param url the URL_@param responseType the type of the return value_@return the converted object;<T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,if,any,is,converted,and,returned,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object;t,t,get,for,object,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;1482265068;Retrieve a representation by doing a GET on the URL ._The response (if any) is converted and returned._@param url the URL_@param responseType the type of the return value_@return the converted object;<T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,if,any,is,converted,and,returned,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object;t,t,get,for,object,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;1482841963;Retrieve a representation by doing a GET on the URL ._The response (if any) is converted and returned._@param url the URL_@param responseType the type of the return value_@return the converted object;<T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,if,any,is,converted,and,returned,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object;t,t,get,for,object,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1495868221;Retrieve a representation by doing a GET on the URI template._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object;@Nullable_	<T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object;nullable,t,t,get,for,object,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1496259743;Retrieve a representation by doing a GET on the URI template._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object;@Nullable_	<T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object;nullable,t,t,get,for,object,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1496837955;Retrieve a representation by doing a GET on the URI template._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object;@Nullable_	<T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object;nullable,t,t,get,for,object,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1508532146;Retrieve a representation by doing a GET on the URI template._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object;@Nullable_	<T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object;nullable,t,t,get,for,object,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1509980418;Retrieve a representation by doing a GET on the URI template._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object;@Nullable_	<T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object;nullable,t,t,get,for,object,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1510004038;Retrieve a representation by doing a GET on the URI template._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object;@Nullable_	<T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object;nullable,t,t,get,for,object,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1532695280;Retrieve a representation by doing a GET on the URI template._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object;@Nullable_	<T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object;nullable,t,t,get,for,object,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1534440670;Retrieve a representation by doing a GET on the URI template._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object;@Nullable_	<T> T getForObject(String url, Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object;nullable,t,t,get,for,object,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1508532146;Retrieve a representation by doing a GET on the URI template._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1509980418;Retrieve a representation by doing a GET on the URI template._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1510004038;Retrieve a representation by doing a GET on the URI template._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1532695280;Retrieve a representation by doing a GET on the URI template._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1534440670;Retrieve a representation by doing a GET on the URI template._The response is converted and stored in an {@link ResponseEntity}._<p>URI Template variables are expanded using the given map._@param url the URL_@param responseType the type of the return value_@param uriVariables the map containing variables for the URI template_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(String url, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,uri,template,the,response,is,converted,and,stored,in,an,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,string,url,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType) throws RestClientException_;1345666836;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:__<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>__@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@return the response as entity_@since 3.2.0;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,2,0;t,response,entity,t,exchange,uri,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType) throws RestClientException_;1356735495;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:__<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>__@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@return the response as entity_@since 3.2.0;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,2,0;t,response,entity,t,exchange,uri,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType) throws RestClientException_;1377627757;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:__<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>__@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@return the response as entity_@since 3.2.0;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,2,0;t,response,entity,t,exchange,uri,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType) throws RestClientException_;1404245400;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:__<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>__@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@return the response as entity_@since 3.2.0;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,2,0;t,response,entity,t,exchange,uri,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType) throws RestClientException_;1404245400;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:__<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>__@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@return the response as entity_@since 3.2.0;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,2,0;t,response,entity,t,exchange,uri,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType) throws RestClientException_;1409790625;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,uri,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType) throws RestClientException_;1431938798;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,uri,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType) throws RestClientException_;1431949687;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,uri,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType) throws RestClientException_;1479374349;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,uri,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType) throws RestClientException_;1481218770;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,uri,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType) throws RestClientException_;1482265068;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,uri,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType) throws RestClientException_;1482841963;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,uri,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;1328020251;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given map.__@param url the URL_@param uriVariables the variables to expand the template;void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template;void,delete,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;1345666836;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given map.__@param url the URL_@param uriVariables the variables to expand the template;void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template;void,delete,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;1356735495;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given map.__@param url the URL_@param uriVariables the variables to expand the template;void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template;void,delete,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;1377627757;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given map.__@param url the URL_@param uriVariables the variables to expand the template;void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template;void,delete,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;1404245400;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given map.__@param url the URL_@param uriVariables the variables to expand the template;void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template;void,delete,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;1404245400;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given map.__@param url the URL_@param uriVariables the variables to expand the template;void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template;void,delete,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;1409790625;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given map.__@param url the URL_@param uriVariables the variables to expand the template;void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template;void,delete,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;1431938798;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given map.__@param url the URL_@param uriVariables the variables to expand the template;void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template;void,delete,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;1431949687;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given map.__@param url the URL_@param uriVariables the variables to expand the template;void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template;void,delete,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;1479374349;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given map.__@param url the URL_@param uriVariables the variables to expand the template;void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template;void,delete,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;1481218770;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given map.__@param url the URL_@param uriVariables the variables to expand the template;void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template;void,delete,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;1482265068;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given map.__@param url the URL_@param uriVariables the variables to expand the template;void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template;void,delete,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;1482841963;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given map.__@param url the URL_@param uriVariables the variables to expand the template;void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template;void,delete,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;1495868221;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given map.__@param url the URL_@param uriVariables the variables to expand the template;void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template;void,delete,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;1496259743;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given map.__@param url the URL_@param uriVariables the variables to expand the template;void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template;void,delete,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;1496837955;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given map.__@param url the URL_@param uriVariables the variables to expand the template;void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template;void,delete,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;1508532146;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given map.__@param url the URL_@param uriVariables the variables to expand the template;void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template;void,delete,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;1509980418;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given map.__@param url the URL_@param uriVariables the variables to expand the template;void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template;void,delete,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;1510004038;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given map.__@param url the URL_@param uriVariables the variables to expand the template;void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template;void,delete,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;1532695280;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given map.__@param url the URL_@param uriVariables the variables to expand the template;void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template;void,delete,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;1534440670;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given map.__@param url the URL_@param uriVariables the variables to expand the template;void delete(String url, Map<String, ?> uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template;void,delete,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T postForObject(String url, @Nullable Object request, Class<T> responseType, 			Map<String, ?> uriVariables) throws RestClientException_;1508532146;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;@Nullable_	<T> T postForObject(String url, @Nullable Object request, Class<T> responseType,_			Map<String, ?> uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;nullable,t,t,post,for,object,string,url,nullable,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T postForObject(String url, @Nullable Object request, Class<T> responseType, 			Map<String, ?> uriVariables) throws RestClientException_;1509980418;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request. The body of the entity, or {@code request} itself,_can be a {@link org.springframework.http.client.MultipartBodyBuilder MultiValueMap} to_simulate a multipart from submission._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;@Nullable_	<T> T postForObject(String url, @Nullable Object request, Class<T> responseType,_			Map<String, ?> uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,http,client,multipart,body,builder,multi,value,map,to,simulate,a,multipart,from,submission,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;nullable,t,t,post,for,object,string,url,nullable,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T postForObject(String url, @Nullable Object request, Class<T> responseType, 			Map<String, ?> uriVariables) throws RestClientException_;1510004038;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p>The body of the entity, or {@code request} itself, can be a_{@link org.springframework.util.MultiValueMap MultiValueMap} to create a multipart request._The values in the {@code MultiValueMap} can be any Object representing the body of the part,_or an {@link org.springframework.http.HttpEntity HttpEntity} representing a part with body_and headers. The {@code MultiValueMap} can be built conveniently using_{@link org.springframework.http.client.MultipartBodyBuilder MultipartBodyBuilder}._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;@Nullable_	<T> T postForObject(String url, @Nullable Object request, Class<T> responseType,_			Map<String, ?> uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,util,multi,value,map,multi,value,map,to,create,a,multipart,request,the,values,in,the,code,multi,value,map,can,be,any,object,representing,the,body,of,the,part,or,an,link,org,springframework,http,http,entity,http,entity,representing,a,part,with,body,and,headers,the,code,multi,value,map,can,be,built,conveniently,using,link,org,springframework,http,client,multipart,body,builder,multipart,body,builder,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;nullable,t,t,post,for,object,string,url,nullable,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T postForObject(String url, @Nullable Object request, Class<T> responseType, 			Map<String, ?> uriVariables) throws RestClientException_;1532695280;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p>The body of the entity, or {@code request} itself, can be a_{@link org.springframework.util.MultiValueMap MultiValueMap} to create a multipart request._The values in the {@code MultiValueMap} can be any Object representing the body of the part,_or an {@link org.springframework.http.HttpEntity HttpEntity} representing a part with body_and headers. The {@code MultiValueMap} can be built conveniently using_{@link org.springframework.http.client.MultipartBodyBuilder MultipartBodyBuilder}._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;@Nullable_	<T> T postForObject(String url, @Nullable Object request, Class<T> responseType,_			Map<String, ?> uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,util,multi,value,map,multi,value,map,to,create,a,multipart,request,the,values,in,the,code,multi,value,map,can,be,any,object,representing,the,body,of,the,part,or,an,link,org,springframework,http,http,entity,http,entity,representing,a,part,with,body,and,headers,the,code,multi,value,map,can,be,built,conveniently,using,link,org,springframework,http,client,multipart,body,builder,multipart,body,builder,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;nullable,t,t,post,for,object,string,url,nullable,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T postForObject(String url, @Nullable Object request, Class<T> responseType, 			Map<String, ?> uriVariables) throws RestClientException_;1534440670;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p>The body of the entity, or {@code request} itself, can be a_{@link org.springframework.util.MultiValueMap MultiValueMap} to create a multipart request._The values in the {@code MultiValueMap} can be any Object representing the body of the part,_or an {@link org.springframework.http.HttpEntity HttpEntity} representing a part with body_and headers. The {@code MultiValueMap} can be built conveniently using_{@link org.springframework.http.client.MultipartBodyBuilder MultipartBodyBuilder}._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;@Nullable_	<T> T postForObject(String url, @Nullable Object request, Class<T> responseType,_			Map<String, ?> uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,util,multi,value,map,multi,value,map,to,create,a,multipart,request,the,values,in,the,code,multi,value,map,can,be,any,object,representing,the,body,of,the,part,or,an,link,org,springframework,http,http,entity,http,entity,representing,a,part,with,body,and,headers,the,code,multi,value,map,can,be,built,conveniently,using,link,org,springframework,http,client,multipart,body,builder,multipart,body,builder,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;nullable,t,t,post,for,object,string,url,nullable,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType) throws RestClientException_;1328020251;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,uri,url,http,method,method,http,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType) throws RestClientException_;1345666836;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,uri,url,http,method,method,http,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType) throws RestClientException_;1356735495;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,uri,url,http,method,method,http,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType) throws RestClientException_;1377627757;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,uri,url,http,method,method,http,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType) throws RestClientException_;1404245400;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,uri,url,http,method,method,http,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType) throws RestClientException_;1404245400;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,uri,url,http,method,method,http,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType) throws RestClientException_;1409790625;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,uri,url,http,method,method,http,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType) throws RestClientException_;1431938798;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,uri,url,http,method,method,http,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType) throws RestClientException_;1431949687;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,uri,url,http,method,method,http,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType) throws RestClientException_;1479374349;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,uri,url,http,method,method,http,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType) throws RestClientException_;1481218770;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,uri,url,http,method,method,http,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType) throws RestClientException_;1482265068;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,uri,url,http,method,method,http,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType) throws RestClientException_;1482841963;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,uri,url,http,method,method,http,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, Class<T> responseType) throws RestClientException_;1409790625;Execute the request specified in the given {@link RequestEntity} and return_the response as {@link ResponseEntity}. Typically used in combination_with the static builder methods on {@code RequestEntity}, for instance:_<pre class="code">_MyRequest body = ..._RequestEntity request = RequestEntity.post(&quot_http://example.com/{foo}&quot_, &quot_bar&quot_).accept(MediaType.APPLICATION_JSON).body(body)__ResponseEntity&lt_MyResponse&gt_ response = template.exchange(request, MyResponse.class)__</pre>_@param requestEntity the entity to write to the request_@param responseType the type of the return value_@return the response as entity_@since 4.1;<T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, Class<T> responseType) throws RestClientException_;execute,the,request,specified,in,the,given,link,request,entity,and,return,the,response,as,link,response,entity,typically,used,in,combination,with,the,static,builder,methods,on,code,request,entity,for,instance,pre,class,code,my,request,body,request,entity,request,request,entity,post,quot,http,example,com,foo,quot,quot,bar,quot,accept,media,type,body,body,response,entity,lt,my,response,gt,response,template,exchange,request,my,response,class,pre,param,request,entity,the,entity,to,write,to,the,request,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,4,1;t,response,entity,t,exchange,request,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, Class<T> responseType) throws RestClientException_;1431938798;Execute the request specified in the given {@link RequestEntity} and return_the response as {@link ResponseEntity}. Typically used in combination_with the static builder methods on {@code RequestEntity}, for instance:_<pre class="code">_MyRequest body = ..._RequestEntity request = RequestEntity.post(new URI(&quot_http://example.com/foo&quot_).accept(MediaType.APPLICATION_JSON).body(body)__ResponseEntity&lt_MyResponse&gt_ response = template.exchange(request, MyResponse.class)__</pre>_@param requestEntity the entity to write to the request_@param responseType the type of the return value_@return the response as entity_@since 4.1;<T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, Class<T> responseType) throws RestClientException_;execute,the,request,specified,in,the,given,link,request,entity,and,return,the,response,as,link,response,entity,typically,used,in,combination,with,the,static,builder,methods,on,code,request,entity,for,instance,pre,class,code,my,request,body,request,entity,request,request,entity,post,new,uri,quot,http,example,com,foo,quot,accept,media,type,body,body,response,entity,lt,my,response,gt,response,template,exchange,request,my,response,class,pre,param,request,entity,the,entity,to,write,to,the,request,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,4,1;t,response,entity,t,exchange,request,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, Class<T> responseType) throws RestClientException_;1431949687;Execute the request specified in the given {@link RequestEntity} and return_the response as {@link ResponseEntity}. Typically used in combination_with the static builder methods on {@code RequestEntity}, for instance:_<pre class="code">_MyRequest body = ..._RequestEntity request = RequestEntity.post(new URI(&quot_http://example.com/foo&quot_)).accept(MediaType.APPLICATION_JSON).body(body)__ResponseEntity&lt_MyResponse&gt_ response = template.exchange(request, MyResponse.class)__</pre>_@param requestEntity the entity to write to the request_@param responseType the type of the return value_@return the response as entity_@since 4.1;<T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, Class<T> responseType) throws RestClientException_;execute,the,request,specified,in,the,given,link,request,entity,and,return,the,response,as,link,response,entity,typically,used,in,combination,with,the,static,builder,methods,on,code,request,entity,for,instance,pre,class,code,my,request,body,request,entity,request,request,entity,post,new,uri,quot,http,example,com,foo,quot,accept,media,type,body,body,response,entity,lt,my,response,gt,response,template,exchange,request,my,response,class,pre,param,request,entity,the,entity,to,write,to,the,request,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,4,1;t,response,entity,t,exchange,request,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, Class<T> responseType) throws RestClientException_;1479374349;Execute the request specified in the given {@link RequestEntity} and return_the response as {@link ResponseEntity}. Typically used in combination_with the static builder methods on {@code RequestEntity}, for instance:_<pre class="code">_MyRequest body = ..._RequestEntity request = RequestEntity.post(new URI(&quot_http://example.com/foo&quot_)).accept(MediaType.APPLICATION_JSON).body(body)__ResponseEntity&lt_MyResponse&gt_ response = template.exchange(request, MyResponse.class)__</pre>_@param requestEntity the entity to write to the request_@param responseType the type of the return value_@return the response as entity_@since 4.1;<T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, Class<T> responseType) throws RestClientException_;execute,the,request,specified,in,the,given,link,request,entity,and,return,the,response,as,link,response,entity,typically,used,in,combination,with,the,static,builder,methods,on,code,request,entity,for,instance,pre,class,code,my,request,body,request,entity,request,request,entity,post,new,uri,quot,http,example,com,foo,quot,accept,media,type,body,body,response,entity,lt,my,response,gt,response,template,exchange,request,my,response,class,pre,param,request,entity,the,entity,to,write,to,the,request,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,4,1;t,response,entity,t,exchange,request,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, Class<T> responseType) throws RestClientException_;1481218770;Execute the request specified in the given {@link RequestEntity} and return_the response as {@link ResponseEntity}. Typically used in combination_with the static builder methods on {@code RequestEntity}, for instance:_<pre class="code">_MyRequest body = ..._RequestEntity request = RequestEntity.post(new URI(&quot_http://example.com/foo&quot_)).accept(MediaType.APPLICATION_JSON).body(body)__ResponseEntity&lt_MyResponse&gt_ response = template.exchange(request, MyResponse.class)__</pre>_@param requestEntity the entity to write to the request_@param responseType the type of the return value_@return the response as entity_@since 4.1;<T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, Class<T> responseType) throws RestClientException_;execute,the,request,specified,in,the,given,link,request,entity,and,return,the,response,as,link,response,entity,typically,used,in,combination,with,the,static,builder,methods,on,code,request,entity,for,instance,pre,class,code,my,request,body,request,entity,request,request,entity,post,new,uri,quot,http,example,com,foo,quot,accept,media,type,body,body,response,entity,lt,my,response,gt,response,template,exchange,request,my,response,class,pre,param,request,entity,the,entity,to,write,to,the,request,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,4,1;t,response,entity,t,exchange,request,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, Class<T> responseType) throws RestClientException_;1482265068;Execute the request specified in the given {@link RequestEntity} and return_the response as {@link ResponseEntity}. Typically used in combination_with the static builder methods on {@code RequestEntity}, for instance:_<pre class="code">_MyRequest body = ..._RequestEntity request = RequestEntity.post(new URI(&quot_http://example.com/foo&quot_)).accept(MediaType.APPLICATION_JSON).body(body)__ResponseEntity&lt_MyResponse&gt_ response = template.exchange(request, MyResponse.class)__</pre>_@param requestEntity the entity to write to the request_@param responseType the type of the return value_@return the response as entity_@since 4.1;<T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, Class<T> responseType) throws RestClientException_;execute,the,request,specified,in,the,given,link,request,entity,and,return,the,response,as,link,response,entity,typically,used,in,combination,with,the,static,builder,methods,on,code,request,entity,for,instance,pre,class,code,my,request,body,request,entity,request,request,entity,post,new,uri,quot,http,example,com,foo,quot,accept,media,type,body,body,response,entity,lt,my,response,gt,response,template,exchange,request,my,response,class,pre,param,request,entity,the,entity,to,write,to,the,request,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,4,1;t,response,entity,t,exchange,request,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, Class<T> responseType) throws RestClientException_;1482841963;Execute the request specified in the given {@link RequestEntity} and return_the response as {@link ResponseEntity}. Typically used in combination_with the static builder methods on {@code RequestEntity}, for instance:_<pre class="code">_MyRequest body = ..._RequestEntity request = RequestEntity.post(new URI(&quot_http://example.com/foo&quot_)).accept(MediaType.APPLICATION_JSON).body(body)__ResponseEntity&lt_MyResponse&gt_ response = template.exchange(request, MyResponse.class)__</pre>_@param requestEntity the entity to write to the request_@param responseType the type of the return value_@return the response as entity_@since 4.1;<T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, Class<T> responseType) throws RestClientException_;execute,the,request,specified,in,the,given,link,request,entity,and,return,the,response,as,link,response,entity,typically,used,in,combination,with,the,static,builder,methods,on,code,request,entity,for,instance,pre,class,code,my,request,body,request,entity,request,request,entity,post,new,uri,quot,http,example,com,foo,quot,accept,media,type,body,body,response,entity,lt,my,response,gt,response,template,exchange,request,my,response,class,pre,param,request,entity,the,entity,to,write,to,the,request,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,4,1;t,response,entity,t,exchange,request,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, Class<T> responseType) throws RestClientException_;1495868221;Execute the request specified in the given {@link RequestEntity} and return_the response as {@link ResponseEntity}. Typically used in combination_with the static builder methods on {@code RequestEntity}, for instance:_<pre class="code">_MyRequest body = ..._RequestEntity request = RequestEntity.post(new URI(&quot_http://example.com/foo&quot_)).accept(MediaType.APPLICATION_JSON).body(body)__ResponseEntity&lt_MyResponse&gt_ response = template.exchange(request, MyResponse.class)__</pre>_@param requestEntity the entity to write to the request_@param responseType the type of the return value_@return the response as entity_@since 4.1;<T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, Class<T> responseType) throws RestClientException_;execute,the,request,specified,in,the,given,link,request,entity,and,return,the,response,as,link,response,entity,typically,used,in,combination,with,the,static,builder,methods,on,code,request,entity,for,instance,pre,class,code,my,request,body,request,entity,request,request,entity,post,new,uri,quot,http,example,com,foo,quot,accept,media,type,body,body,response,entity,lt,my,response,gt,response,template,exchange,request,my,response,class,pre,param,request,entity,the,entity,to,write,to,the,request,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,4,1;t,response,entity,t,exchange,request,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, Class<T> responseType) throws RestClientException_;1496259743;Execute the request specified in the given {@link RequestEntity} and return_the response as {@link ResponseEntity}. Typically used in combination_with the static builder methods on {@code RequestEntity}, for instance:_<pre class="code">_MyRequest body = ..._RequestEntity request = RequestEntity.post(new URI(&quot_http://example.com/foo&quot_)).accept(MediaType.APPLICATION_JSON).body(body)__ResponseEntity&lt_MyResponse&gt_ response = template.exchange(request, MyResponse.class)__</pre>_@param requestEntity the entity to write to the request_@param responseType the type of the return value_@return the response as entity_@since 4.1;<T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, Class<T> responseType) throws RestClientException_;execute,the,request,specified,in,the,given,link,request,entity,and,return,the,response,as,link,response,entity,typically,used,in,combination,with,the,static,builder,methods,on,code,request,entity,for,instance,pre,class,code,my,request,body,request,entity,request,request,entity,post,new,uri,quot,http,example,com,foo,quot,accept,media,type,body,body,response,entity,lt,my,response,gt,response,template,exchange,request,my,response,class,pre,param,request,entity,the,entity,to,write,to,the,request,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,4,1;t,response,entity,t,exchange,request,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, Class<T> responseType) throws RestClientException_;1496837955;Execute the request specified in the given {@link RequestEntity} and return_the response as {@link ResponseEntity}. Typically used in combination_with the static builder methods on {@code RequestEntity}, for instance:_<pre class="code">_MyRequest body = ..._RequestEntity request = RequestEntity.post(new URI(&quot_http://example.com/foo&quot_)).accept(MediaType.APPLICATION_JSON).body(body)__ResponseEntity&lt_MyResponse&gt_ response = template.exchange(request, MyResponse.class)__</pre>_@param requestEntity the entity to write to the request_@param responseType the type of the return value_@return the response as entity_@since 4.1;<T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, Class<T> responseType) throws RestClientException_;execute,the,request,specified,in,the,given,link,request,entity,and,return,the,response,as,link,response,entity,typically,used,in,combination,with,the,static,builder,methods,on,code,request,entity,for,instance,pre,class,code,my,request,body,request,entity,request,request,entity,post,new,uri,quot,http,example,com,foo,quot,accept,media,type,body,body,response,entity,lt,my,response,gt,response,template,exchange,request,my,response,class,pre,param,request,entity,the,entity,to,write,to,the,request,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,4,1;t,response,entity,t,exchange,request,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> URI postForLocation(String url, Object request, Object... uriVariables) throws RestClientException_;1328020251;Create a new resource by POSTing the given object to the URI template, and returns the value of the_<code>Location</code> header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be <code>null</code>_@param uriVariables the variables to expand the template_@return the value for the <code>Location</code> header_@see HttpEntity;URI postForLocation(String url, Object request, Object... uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,code,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,code,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,code,header,see,http,entity;uri,post,for,location,string,url,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> URI postForLocation(String url, Object request, Object... uriVariables) throws RestClientException_;1345666836;Create a new resource by POSTing the given object to the URI template, and returns the value of the_<code>Location</code> header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be <code>null</code>_@param uriVariables the variables to expand the template_@return the value for the <code>Location</code> header_@see HttpEntity;URI postForLocation(String url, Object request, Object... uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,code,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,code,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,code,header,see,http,entity;uri,post,for,location,string,url,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> URI postForLocation(String url, Object request, Object... uriVariables) throws RestClientException_;1356735495;Create a new resource by POSTing the given object to the URI template, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(String url, Object request, Object... uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,string,url,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> URI postForLocation(String url, Object request, Object... uriVariables) throws RestClientException_;1377627757;Create a new resource by POSTing the given object to the URI template, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(String url, Object request, Object... uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,string,url,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> URI postForLocation(String url, Object request, Object... uriVariables) throws RestClientException_;1404245400;Create a new resource by POSTing the given object to the URI template, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(String url, Object request, Object... uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,string,url,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> URI postForLocation(String url, Object request, Object... uriVariables) throws RestClientException_;1404245400;Create a new resource by POSTing the given object to the URI template, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(String url, Object request, Object... uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,string,url,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> URI postForLocation(String url, Object request, Object... uriVariables) throws RestClientException_;1409790625;Create a new resource by POSTing the given object to the URI template, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(String url, Object request, Object... uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,string,url,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> URI postForLocation(String url, Object request, Object... uriVariables) throws RestClientException_;1431938798;Create a new resource by POSTing the given object to the URI template, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(String url, Object request, Object... uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,string,url,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> URI postForLocation(String url, Object request, Object... uriVariables) throws RestClientException_;1431949687;Create a new resource by POSTing the given object to the URI template, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(String url, Object request, Object... uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,string,url,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> URI postForLocation(String url, Object request, Object... uriVariables) throws RestClientException_;1479374349;Create a new resource by POSTing the given object to the URI template, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(String url, Object request, Object... uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,string,url,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> URI postForLocation(String url, Object request, Object... uriVariables) throws RestClientException_;1481218770;Create a new resource by POSTing the given object to the URI template, and returns the value of_the {@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(String url, Object request, Object... uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,string,url,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> URI postForLocation(String url, Object request, Object... uriVariables) throws RestClientException_;1482265068;Create a new resource by POSTing the given object to the URI template, and returns the value of_the {@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(String url, Object request, Object... uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,string,url,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> URI postForLocation(String url, Object request, Object... uriVariables) throws RestClientException_;1482841963;Create a new resource by POSTing the given object to the URI template, and returns the value of_the {@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(String url, Object request, Object... uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,string,url,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T postForObject(String url, Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1328020251;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be <code>null</code>_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;<T> T postForObject(String url, Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,code,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;t,t,post,for,object,string,url,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T postForObject(String url, Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1345666836;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be <code>null</code>_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;<T> T postForObject(String url, Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,code,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;t,t,post,for,object,string,url,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T postForObject(String url, Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1356735495;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;<T> T postForObject(String url, Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;t,t,post,for,object,string,url,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T postForObject(String url, Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1377627757;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;<T> T postForObject(String url, Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;t,t,post,for,object,string,url,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T postForObject(String url, Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1404245400;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;<T> T postForObject(String url, Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;t,t,post,for,object,string,url,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T postForObject(String url, Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1404245400;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;<T> T postForObject(String url, Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;t,t,post,for,object,string,url,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T postForObject(String url, Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1409790625;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;<T> T postForObject(String url, Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;t,t,post,for,object,string,url,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T postForObject(String url, Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1431938798;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;<T> T postForObject(String url, Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;t,t,post,for,object,string,url,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T postForObject(String url, Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1431949687;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;<T> T postForObject(String url, Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;t,t,post,for,object,string,url,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T postForObject(String url, Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1479374349;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;<T> T postForObject(String url, Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;t,t,post,for,object,string,url,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T postForObject(String url, Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1481218770;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;<T> T postForObject(String url, Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;t,t,post,for,object,string,url,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T postForObject(String url, Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1482265068;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;<T> T postForObject(String url, Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;t,t,post,for,object,string,url,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T postForObject(String url, Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1482841963;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;<T> T postForObject(String url, Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;t,t,post,for,object,string,url,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;1328020251;Creates a new resource by PUTting the given object to URI template._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT, may be <code>null</code>_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,code,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;1345666836;Creates a new resource by PUTting the given object to URI template._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT, may be <code>null</code>_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,code,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;1356735495;Creates a new resource by PUTting the given object to URI template._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT, may be {@code null}_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;1377627757;Creates a new resource by PUTting the given object to URI template._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT, may be {@code null}_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;1404245400;Creates a new resource by PUTting the given object to URI template._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT, may be {@code null}_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;1404245400;Creates a new resource by PUTting the given object to URI template._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT, may be {@code null}_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;1409790625;Creates a new resource by PUTting the given object to URI template._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT, may be {@code null}_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;1431938798;Creates a new resource by PUTting the given object to URI template._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT, may be {@code null}_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;1431949687;Creates a new resource by PUTting the given object to URI template._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT, may be {@code null}_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;1479374349;Creates a new resource by PUTting the given object to URI template._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT, may be {@code null}_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;1481218770;Creates a new resource by PUTting the given object to URI template._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT (may be {@code null})_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;1482265068;Creates a new resource by PUTting the given object to URI template._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT (may be {@code null})_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;1482841963;Creates a new resource by PUTting the given object to URI template._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT (may be {@code null})_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(URI url, Object request, Class<T> responseType) throws RestClientException_;1328020251;Create a new resource by POSTing the given object to the URL,_and returns the response as {@link ResponseEntity}._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be <code>null</code>_@return the converted object_@see HttpEntity_@since 3.0.2;<T> ResponseEntity<T> postForEntity(URI url, Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,response,as,link,response,entity,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,code,return,the,converted,object,see,http,entity,since,3,0,2;t,response,entity,t,post,for,entity,uri,url,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(URI url, Object request, Class<T> responseType) throws RestClientException_;1345666836;Create a new resource by POSTing the given object to the URL,_and returns the response as {@link ResponseEntity}._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be <code>null</code>_@return the converted object_@see HttpEntity_@since 3.0.2;<T> ResponseEntity<T> postForEntity(URI url, Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,response,as,link,response,entity,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,code,return,the,converted,object,see,http,entity,since,3,0,2;t,response,entity,t,post,for,entity,uri,url,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(URI url, Object request, Class<T> responseType) throws RestClientException_;1356735495;Create a new resource by POSTing the given object to the URL,_and returns the response as {@link ResponseEntity}._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@return the converted object_@see HttpEntity_@since 3.0.2;<T> ResponseEntity<T> postForEntity(URI url, Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,response,as,link,response,entity,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,converted,object,see,http,entity,since,3,0,2;t,response,entity,t,post,for,entity,uri,url,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(URI url, Object request, Class<T> responseType) throws RestClientException_;1377627757;Create a new resource by POSTing the given object to the URL,_and returns the response as {@link ResponseEntity}._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@return the converted object_@see HttpEntity_@since 3.0.2;<T> ResponseEntity<T> postForEntity(URI url, Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,response,as,link,response,entity,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,converted,object,see,http,entity,since,3,0,2;t,response,entity,t,post,for,entity,uri,url,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(URI url, Object request, Class<T> responseType) throws RestClientException_;1404245400;Create a new resource by POSTing the given object to the URL,_and returns the response as {@link ResponseEntity}._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@return the converted object_@see HttpEntity_@since 3.0.2;<T> ResponseEntity<T> postForEntity(URI url, Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,response,as,link,response,entity,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,converted,object,see,http,entity,since,3,0,2;t,response,entity,t,post,for,entity,uri,url,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(URI url, Object request, Class<T> responseType) throws RestClientException_;1404245400;Create a new resource by POSTing the given object to the URL,_and returns the response as {@link ResponseEntity}._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@return the converted object_@see HttpEntity_@since 3.0.2;<T> ResponseEntity<T> postForEntity(URI url, Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,response,as,link,response,entity,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,converted,object,see,http,entity,since,3,0,2;t,response,entity,t,post,for,entity,uri,url,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(URI url, Object request, Class<T> responseType) throws RestClientException_;1409790625;Create a new resource by POSTing the given object to the URL,_and returns the response as {@link ResponseEntity}._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@return the converted object_@see HttpEntity_@since 3.0.2;<T> ResponseEntity<T> postForEntity(URI url, Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,response,as,link,response,entity,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,converted,object,see,http,entity,since,3,0,2;t,response,entity,t,post,for,entity,uri,url,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(URI url, Object request, Class<T> responseType) throws RestClientException_;1431938798;Create a new resource by POSTing the given object to the URL,_and returns the response as {@link ResponseEntity}._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@return the converted object_@see HttpEntity_@since 3.0.2;<T> ResponseEntity<T> postForEntity(URI url, Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,response,as,link,response,entity,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,converted,object,see,http,entity,since,3,0,2;t,response,entity,t,post,for,entity,uri,url,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(URI url, Object request, Class<T> responseType) throws RestClientException_;1431949687;Create a new resource by POSTing the given object to the URL,_and returns the response as {@link ResponseEntity}._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@return the converted object_@see HttpEntity_@since 3.0.2;<T> ResponseEntity<T> postForEntity(URI url, Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,response,as,link,response,entity,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,converted,object,see,http,entity,since,3,0,2;t,response,entity,t,post,for,entity,uri,url,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(URI url, Object request, Class<T> responseType) throws RestClientException_;1479374349;Create a new resource by POSTing the given object to the URL,_and returns the response as {@link ResponseEntity}._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@return the converted object_@see HttpEntity_@since 3.0.2;<T> ResponseEntity<T> postForEntity(URI url, Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,response,as,link,response,entity,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,converted,object,see,http,entity,since,3,0,2;t,response,entity,t,post,for,entity,uri,url,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(URI url, Object request, Class<T> responseType) throws RestClientException_;1481218770;Create a new resource by POSTing the given object to the URL,_and returns the response as {@link ResponseEntity}._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@return the converted object_@since 3.0.2_@see HttpEntity;<T> ResponseEntity<T> postForEntity(URI url, Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,response,as,link,response,entity,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,converted,object,since,3,0,2,see,http,entity;t,response,entity,t,post,for,entity,uri,url,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(URI url, Object request, Class<T> responseType) throws RestClientException_;1482265068;Create a new resource by POSTing the given object to the URL,_and returns the response as {@link ResponseEntity}._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@return the converted object_@since 3.0.2_@see HttpEntity;<T> ResponseEntity<T> postForEntity(URI url, Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,response,as,link,response,entity,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,converted,object,since,3,0,2,see,http,entity;t,response,entity,t,post,for,entity,uri,url,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(URI url, Object request, Class<T> responseType) throws RestClientException_;1482841963;Create a new resource by POSTing the given object to the URL,_and returns the response as {@link ResponseEntity}._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@return the converted object_@since 3.0.2_@see HttpEntity;<T> ResponseEntity<T> postForEntity(URI url, Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,response,as,link,response,entity,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,converted,object,since,3,0,2,see,http,entity;t,response,entity,t,post,for,entity,uri,url,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> URI postForLocation(URI url, Object request) throws RestClientException_;1328020251;Create a new resource by POSTing the given object to the URL, and returns the value of the_<code>Location</code> header. This header typically indicates where the new resource is stored._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be <code>null</code>_@return the value for the <code>Location</code> header_@see HttpEntity;URI postForLocation(URI url, Object request) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,value,of,the,code,location,code,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,code,return,the,value,for,the,code,location,code,header,see,http,entity;uri,post,for,location,uri,url,object,request,throws,rest,client,exception
RestOperations -> URI postForLocation(URI url, Object request) throws RestClientException_;1345666836;Create a new resource by POSTing the given object to the URL, and returns the value of the_<code>Location</code> header. This header typically indicates where the new resource is stored._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be <code>null</code>_@return the value for the <code>Location</code> header_@see HttpEntity;URI postForLocation(URI url, Object request) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,value,of,the,code,location,code,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,code,return,the,value,for,the,code,location,code,header,see,http,entity;uri,post,for,location,uri,url,object,request,throws,rest,client,exception
RestOperations -> URI postForLocation(URI url, Object request) throws RestClientException_;1356735495;Create a new resource by POSTing the given object to the URL, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(URI url, Object request) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,uri,url,object,request,throws,rest,client,exception
RestOperations -> URI postForLocation(URI url, Object request) throws RestClientException_;1377627757;Create a new resource by POSTing the given object to the URL, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(URI url, Object request) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,uri,url,object,request,throws,rest,client,exception
RestOperations -> URI postForLocation(URI url, Object request) throws RestClientException_;1404245400;Create a new resource by POSTing the given object to the URL, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(URI url, Object request) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,uri,url,object,request,throws,rest,client,exception
RestOperations -> URI postForLocation(URI url, Object request) throws RestClientException_;1404245400;Create a new resource by POSTing the given object to the URL, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(URI url, Object request) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,uri,url,object,request,throws,rest,client,exception
RestOperations -> URI postForLocation(URI url, Object request) throws RestClientException_;1409790625;Create a new resource by POSTing the given object to the URL, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(URI url, Object request) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,uri,url,object,request,throws,rest,client,exception
RestOperations -> URI postForLocation(URI url, Object request) throws RestClientException_;1431938798;Create a new resource by POSTing the given object to the URL, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(URI url, Object request) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,uri,url,object,request,throws,rest,client,exception
RestOperations -> URI postForLocation(URI url, Object request) throws RestClientException_;1431949687;Create a new resource by POSTing the given object to the URL, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(URI url, Object request) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,uri,url,object,request,throws,rest,client,exception
RestOperations -> URI postForLocation(URI url, Object request) throws RestClientException_;1479374349;Create a new resource by POSTing the given object to the URL, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(URI url, Object request) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,uri,url,object,request,throws,rest,client,exception
RestOperations -> URI postForLocation(URI url, Object request) throws RestClientException_;1481218770;Create a new resource by POSTing the given object to the URL, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(URI url, Object request) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,uri,url,object,request,throws,rest,client,exception
RestOperations -> URI postForLocation(URI url, Object request) throws RestClientException_;1482265068;Create a new resource by POSTing the given object to the URL, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(URI url, Object request) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,uri,url,object,request,throws,rest,client,exception
RestOperations -> URI postForLocation(URI url, Object request) throws RestClientException_;1482841963;Create a new resource by POSTing the given object to the URL, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(URI url, Object request) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,uri,url,object,request,throws,rest,client,exception
RestOperations -> <T> T execute(String url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) throws RestClientException_;1328020251;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables map._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(String url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,map,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,string,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T execute(String url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) throws RestClientException_;1345666836;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables map._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(String url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,map,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,string,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T execute(String url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) throws RestClientException_;1356735495;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables map._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(String url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,map,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,string,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T execute(String url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) throws RestClientException_;1377627757;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables map._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(String url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,map,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,string,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T execute(String url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) throws RestClientException_;1404245400;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables map._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(String url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,map,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,string,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T execute(String url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) throws RestClientException_;1404245400;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables map._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(String url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,map,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,string,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T execute(String url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) throws RestClientException_;1409790625;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables map._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(String url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,map,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,string,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T execute(String url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) throws RestClientException_;1431938798;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables map._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(String url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,map,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,string,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T execute(String url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) throws RestClientException_;1431949687;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables map._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(String url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,map,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,string,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T execute(String url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) throws RestClientException_;1479374349;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables map._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(String url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,map,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,string,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T execute(String url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) throws RestClientException_;1481218770;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables map._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(String url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,map,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,string,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T execute(String url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) throws RestClientException_;1482265068;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables map._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(String url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,map,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,string,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T execute(String url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) throws RestClientException_;1482841963;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables map._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(String url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,map,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,string,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, 			Class<T> responseType) throws RestClientException_;1404245400;Execute the HTTP method and URL of the {@link RequestEntity}, writing it to the_request, and returns the response as {@link ResponseEntity}. Typically used in_combination with the static builder methods on {@code RequestEntity}, for instance:__<pre class="code">_MyRequest body = ..._RequestEntity request = RequestEntity.post(&quot_http://example.com/{foo}&quot_, &quot_bar&quot_).accept(MediaType.APPLICATION_JSON).body(body)__ResponseEntity&lt_MyResponse&gt_ response = template.exchange(request, MyResponse.class)__</pre>__@param requestEntity the entity to write to the request_@param responseType the type of the return value_@return the response as entity_@since 4.1;<T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity,_			Class<T> responseType) throws RestClientException_;execute,the,http,method,and,url,of,the,link,request,entity,writing,it,to,the,request,and,returns,the,response,as,link,response,entity,typically,used,in,combination,with,the,static,builder,methods,on,code,request,entity,for,instance,pre,class,code,my,request,body,request,entity,request,request,entity,post,quot,http,example,com,foo,quot,quot,bar,quot,accept,media,type,body,body,response,entity,lt,my,response,gt,response,template,exchange,request,my,response,class,pre,param,request,entity,the,entity,to,write,to,the,request,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,4,1;t,response,entity,t,exchange,request,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, 			Class<T> responseType) throws RestClientException_;1404245400;Execute the request specified in the given {@link RequestEntity} and return_the response as {@link ResponseEntity}. Typically used in combination_with the static builder methods on {@code RequestEntity}, for instance:__<pre class="code">_MyRequest body = ..._RequestEntity request = RequestEntity.post(&quot_http://example.com/{foo}&quot_, &quot_bar&quot_).accept(MediaType.APPLICATION_JSON).body(body)__ResponseEntity&lt_MyResponse&gt_ response = template.exchange(request, MyResponse.class)__</pre>__@param requestEntity the entity to write to the request_@param responseType the type of the return value_@return the response as entity_@since 4.1;<T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity,_			Class<T> responseType) throws RestClientException_;execute,the,request,specified,in,the,given,link,request,entity,and,return,the,response,as,link,response,entity,typically,used,in,combination,with,the,static,builder,methods,on,code,request,entity,for,instance,pre,class,code,my,request,body,request,entity,request,request,entity,post,quot,http,example,com,foo,quot,quot,bar,quot,accept,media,type,body,body,response,entity,lt,my,response,gt,response,template,exchange,request,my,response,class,pre,param,request,entity,the,entity,to,write,to,the,request,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,4,1;t,response,entity,t,exchange,request,entity,request,entity,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(URI url, @Nullable Object request, Class<T> responseType) 			throws RestClientException_;1508532146;Create a new resource by POSTing the given object to the URL,_and returns the response as {@link ResponseEntity}._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@return the converted object_@since 3.0.2_@see HttpEntity;<T> ResponseEntity<T> postForEntity(URI url, @Nullable Object request, Class<T> responseType)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,response,as,link,response,entity,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,converted,object,since,3,0,2,see,http,entity;t,response,entity,t,post,for,entity,uri,url,nullable,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(URI url, @Nullable Object request, Class<T> responseType) 			throws RestClientException_;1509980418;Create a new resource by POSTing the given object to the URL,_and returns the response as {@link ResponseEntity}._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request. The body of the entity, or {@code request} itself,_can be a {@link org.springframework.http.client.MultipartBodyBuilder MultiValueMap} to_simulate a multipart from submission._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@return the converted object_@since 3.0.2_@see HttpEntity;<T> ResponseEntity<T> postForEntity(URI url, @Nullable Object request, Class<T> responseType)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,response,as,link,response,entity,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,http,client,multipart,body,builder,multi,value,map,to,simulate,a,multipart,from,submission,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,converted,object,since,3,0,2,see,http,entity;t,response,entity,t,post,for,entity,uri,url,nullable,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(URI url, @Nullable Object request, Class<T> responseType) 			throws RestClientException_;1510004038;Create a new resource by POSTing the given object to the URL,_and returns the response as {@link ResponseEntity}._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p>The body of the entity, or {@code request} itself, can be a_{@link org.springframework.util.MultiValueMap MultiValueMap} to create a multipart request._The values in the {@code MultiValueMap} can be any Object representing the body of the part,_or an {@link org.springframework.http.HttpEntity HttpEntity} representing a part with body_and headers. The {@code MultiValueMap} can be built conveniently using_{@link org.springframework.http.client.MultipartBodyBuilder MultipartBodyBuilder}._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@return the converted object_@since 3.0.2_@see HttpEntity;<T> ResponseEntity<T> postForEntity(URI url, @Nullable Object request, Class<T> responseType)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,response,as,link,response,entity,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,util,multi,value,map,multi,value,map,to,create,a,multipart,request,the,values,in,the,code,multi,value,map,can,be,any,object,representing,the,body,of,the,part,or,an,link,org,springframework,http,http,entity,http,entity,representing,a,part,with,body,and,headers,the,code,multi,value,map,can,be,built,conveniently,using,link,org,springframework,http,client,multipart,body,builder,multipart,body,builder,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,converted,object,since,3,0,2,see,http,entity;t,response,entity,t,post,for,entity,uri,url,nullable,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(URI url, @Nullable Object request, Class<T> responseType) 			throws RestClientException_;1532695280;Create a new resource by POSTing the given object to the URL,_and returns the response as {@link ResponseEntity}._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p>The body of the entity, or {@code request} itself, can be a_{@link org.springframework.util.MultiValueMap MultiValueMap} to create a multipart request._The values in the {@code MultiValueMap} can be any Object representing the body of the part,_or an {@link org.springframework.http.HttpEntity HttpEntity} representing a part with body_and headers. The {@code MultiValueMap} can be built conveniently using_{@link org.springframework.http.client.MultipartBodyBuilder MultipartBodyBuilder}._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@return the converted object_@since 3.0.2_@see HttpEntity;<T> ResponseEntity<T> postForEntity(URI url, @Nullable Object request, Class<T> responseType)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,response,as,link,response,entity,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,util,multi,value,map,multi,value,map,to,create,a,multipart,request,the,values,in,the,code,multi,value,map,can,be,any,object,representing,the,body,of,the,part,or,an,link,org,springframework,http,http,entity,http,entity,representing,a,part,with,body,and,headers,the,code,multi,value,map,can,be,built,conveniently,using,link,org,springframework,http,client,multipart,body,builder,multipart,body,builder,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,converted,object,since,3,0,2,see,http,entity;t,response,entity,t,post,for,entity,uri,url,nullable,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(URI url, @Nullable Object request, Class<T> responseType) 			throws RestClientException_;1534440670;Create a new resource by POSTing the given object to the URL,_and returns the response as {@link ResponseEntity}._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p>The body of the entity, or {@code request} itself, can be a_{@link org.springframework.util.MultiValueMap MultiValueMap} to create a multipart request._The values in the {@code MultiValueMap} can be any Object representing the body of the part,_or an {@link org.springframework.http.HttpEntity HttpEntity} representing a part with body_and headers. The {@code MultiValueMap} can be built conveniently using_{@link org.springframework.http.client.MultipartBodyBuilder MultipartBodyBuilder}._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@return the converted object_@since 3.0.2_@see HttpEntity;<T> ResponseEntity<T> postForEntity(URI url, @Nullable Object request, Class<T> responseType)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,response,as,link,response,entity,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,util,multi,value,map,multi,value,map,to,create,a,multipart,request,the,values,in,the,code,multi,value,map,can,be,any,object,representing,the,body,of,the,part,or,an,link,org,springframework,http,http,entity,http,entity,representing,a,part,with,body,and,headers,the,code,multi,value,map,can,be,built,conveniently,using,link,org,springframework,http,client,multipart,body,builder,multipart,body,builder,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,converted,object,since,3,0,2,see,http,entity;t,response,entity,t,post,for,entity,uri,url,nullable,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> URI postForLocation(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;1328020251;Create a new resource by POSTing the given object to the URI template, and returns the value of the_<code>Location</code> header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be <code>null</code>_@param uriVariables the variables to expand the template_@return the value for the <code>Location</code> header_@see HttpEntity;URI postForLocation(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,code,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,code,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,code,header,see,http,entity;uri,post,for,location,string,url,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> URI postForLocation(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;1345666836;Create a new resource by POSTing the given object to the URI template, and returns the value of the_<code>Location</code> header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be <code>null</code>_@param uriVariables the variables to expand the template_@return the value for the <code>Location</code> header_@see HttpEntity;URI postForLocation(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,code,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,code,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,code,header,see,http,entity;uri,post,for,location,string,url,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> URI postForLocation(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;1356735495;Create a new resource by POSTing the given object to the URI template, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,string,url,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> URI postForLocation(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;1377627757;Create a new resource by POSTing the given object to the URI template, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,string,url,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> URI postForLocation(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;1404245400;Create a new resource by POSTing the given object to the URI template, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,string,url,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> URI postForLocation(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;1404245400;Create a new resource by POSTing the given object to the URI template, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,string,url,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> URI postForLocation(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;1409790625;Create a new resource by POSTing the given object to the URI template, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,string,url,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> URI postForLocation(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;1431938798;Create a new resource by POSTing the given object to the URI template, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,string,url,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> URI postForLocation(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;1431949687;Create a new resource by POSTing the given object to the URI template, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,string,url,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> URI postForLocation(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;1479374349;Create a new resource by POSTing the given object to the URI template, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,string,url,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> URI postForLocation(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;1481218770;Create a new resource by POSTing the given object to the URI template, and returns the value of_the {@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,string,url,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> URI postForLocation(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;1482265068;Create a new resource by POSTing the given object to the URI template, and returns the value of_the {@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,string,url,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> URI postForLocation(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;1482841963;Create a new resource by POSTing the given object to the URI template, and returns the value of_the {@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(String url, Object request, Map<String, ?> uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,string,url,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T execute(String url, HttpMethod method, @Nullable RequestCallback requestCallback, 			@Nullable ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) throws RestClientException_;1496259743;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables map._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};@Nullable_	<T> T execute(String url, HttpMethod method, @Nullable RequestCallback requestCallback,_			@Nullable ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,map,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;nullable,t,t,execute,string,url,http,method,method,nullable,request,callback,request,callback,nullable,response,extractor,t,response,extractor,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T execute(String url, HttpMethod method, @Nullable RequestCallback requestCallback, 			@Nullable ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) throws RestClientException_;1496837955;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables map._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};@Nullable_	<T> T execute(String url, HttpMethod method, @Nullable RequestCallback requestCallback,_			@Nullable ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,map,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;nullable,t,t,execute,string,url,http,method,method,nullable,request,callback,request,callback,nullable,response,extractor,t,response,extractor,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T postForObject(String url, @Nullable Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1495868221;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;@Nullable_	<T> T postForObject(String url, @Nullable Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;nullable,t,t,post,for,object,string,url,nullable,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T postForObject(String url, @Nullable Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1496259743;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;@Nullable_	<T> T postForObject(String url, @Nullable Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;nullable,t,t,post,for,object,string,url,nullable,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T postForObject(String url, @Nullable Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1496837955;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;@Nullable_	<T> T postForObject(String url, @Nullable Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;nullable,t,t,post,for,object,string,url,nullable,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T postForObject(String url, @Nullable Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1495868221;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;@Nullable_	<T> T postForObject(String url, @Nullable Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;nullable,t,t,post,for,object,string,url,nullable,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T postForObject(String url, @Nullable Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1496259743;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;@Nullable_	<T> T postForObject(String url, @Nullable Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;nullable,t,t,post,for,object,string,url,nullable,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T postForObject(String url, @Nullable Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1496837955;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;@Nullable_	<T> T postForObject(String url, @Nullable Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;nullable,t,t,post,for,object,string,url,nullable,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T patchForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1479374349;Update a resource by PATCHing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PATCHed, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;<T> T patchForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;t,t,patch,for,object,string,url,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T patchForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1481218770;Update a resource by PATCHing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PATCHed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@since 4.3.5_@see HttpEntity;<T> T patchForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,4,3,5,see,http,entity;t,t,patch,for,object,string,url,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T patchForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1482265068;Update a resource by PATCHing the given object to the URI template,_and return the representation found in the response._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the object to be PATCHed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@since 4.3.5_@see HttpEntity;<T> T patchForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,uri,template,and,return,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,4,3,5,see,http,entity;t,t,patch,for,object,string,url,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T patchForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1482841963;Update a resource by PATCHing the given object to the URI template,_and return the representation found in the response._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p><b>NOTE: The standard JDK HTTP library does not support HTTP PATCH._You need to use the Apache HttpComponents or OkHttp request factory.</b>_@param url the URL_@param request the object to be PATCHed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@since 4.3.5_@see HttpEntity_@see RestTemplate#setRequestFactory_@see org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory_@see org.springframework.http.client.OkHttp3ClientHttpRequestFactory;<T> T patchForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,uri,template,and,return,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,b,note,the,standard,jdk,http,library,does,not,support,http,patch,you,need,to,use,the,apache,http,components,or,ok,http,request,factory,b,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,4,3,5,see,http,entity,see,rest,template,set,request,factory,see,org,springframework,http,client,http,components,async,client,http,request,factory,see,org,springframework,http,client,ok,http3client,http,request,factory;t,t,patch,for,object,string,url,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	URI postForLocation(String url, @Nullable Object request, Map<String, ?> uriVariables) 			throws RestClientException_;1508532146;Create a new resource by POSTing the given object to the URI template, and returns the value of_the {@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;@Nullable_	URI postForLocation(String url, @Nullable Object request, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;nullable,uri,post,for,location,string,url,nullable,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	URI postForLocation(String url, @Nullable Object request, Map<String, ?> uriVariables) 			throws RestClientException_;1509980418;Create a new resource by POSTing the given object to the URI template, and returns the value of_the {@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request. The body of the entity, or {@code request} itself,_can be a {@link org.springframework.http.client.MultipartBodyBuilder MultiValueMap} to_simulate a multipart from submission._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;@Nullable_	URI postForLocation(String url, @Nullable Object request, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,http,client,multipart,body,builder,multi,value,map,to,simulate,a,multipart,from,submission,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;nullable,uri,post,for,location,string,url,nullable,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	URI postForLocation(String url, @Nullable Object request, Map<String, ?> uriVariables) 			throws RestClientException_;1510004038;Create a new resource by POSTing the given object to the URI template, and returns the value of_the {@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request_<p>The body of the entity, or {@code request} itself, can be a_{@link org.springframework.util.MultiValueMap MultiValueMap} to create a multipart request._The values in the {@code MultiValueMap} can be any Object representing the body of the part,_or an {@link org.springframework.http.HttpEntity HttpEntity} representing a part with body_and headers. The {@code MultiValueMap} can be built conveniently using_{@link org.springframework.http.client.MultipartBodyBuilder MultipartBodyBuilder}._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;@Nullable_	URI postForLocation(String url, @Nullable Object request, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,util,multi,value,map,multi,value,map,to,create,a,multipart,request,the,values,in,the,code,multi,value,map,can,be,any,object,representing,the,body,of,the,part,or,an,link,org,springframework,http,http,entity,http,entity,representing,a,part,with,body,and,headers,the,code,multi,value,map,can,be,built,conveniently,using,link,org,springframework,http,client,multipart,body,builder,multipart,body,builder,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;nullable,uri,post,for,location,string,url,nullable,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	URI postForLocation(String url, @Nullable Object request, Map<String, ?> uriVariables) 			throws RestClientException_;1532695280;Create a new resource by POSTing the given object to the URI template, and returns the value of_the {@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request_<p>The body of the entity, or {@code request} itself, can be a_{@link org.springframework.util.MultiValueMap MultiValueMap} to create a multipart request._The values in the {@code MultiValueMap} can be any Object representing the body of the part,_or an {@link org.springframework.http.HttpEntity HttpEntity} representing a part with body_and headers. The {@code MultiValueMap} can be built conveniently using_{@link org.springframework.http.client.MultipartBodyBuilder MultipartBodyBuilder}._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;@Nullable_	URI postForLocation(String url, @Nullable Object request, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,util,multi,value,map,multi,value,map,to,create,a,multipart,request,the,values,in,the,code,multi,value,map,can,be,any,object,representing,the,body,of,the,part,or,an,link,org,springframework,http,http,entity,http,entity,representing,a,part,with,body,and,headers,the,code,multi,value,map,can,be,built,conveniently,using,link,org,springframework,http,client,multipart,body,builder,multipart,body,builder,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;nullable,uri,post,for,location,string,url,nullable,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	URI postForLocation(String url, @Nullable Object request, Map<String, ?> uriVariables) 			throws RestClientException_;1534440670;Create a new resource by POSTing the given object to the URI template, and returns the value of_the {@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request_<p>The body of the entity, or {@code request} itself, can be a_{@link org.springframework.util.MultiValueMap MultiValueMap} to create a multipart request._The values in the {@code MultiValueMap} can be any Object representing the body of the part,_or an {@link org.springframework.http.HttpEntity HttpEntity} representing a part with body_and headers. The {@code MultiValueMap} can be built conveniently using_{@link org.springframework.http.client.MultipartBodyBuilder MultipartBodyBuilder}._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;@Nullable_	URI postForLocation(String url, @Nullable Object request, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,util,multi,value,map,multi,value,map,to,create,a,multipart,request,the,values,in,the,code,multi,value,map,can,be,any,object,representing,the,body,of,the,part,or,an,link,org,springframework,http,http,entity,http,entity,representing,a,part,with,body,and,headers,the,code,multi,value,map,can,be,built,conveniently,using,link,org,springframework,http,client,multipart,body,builder,multipart,body,builder,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;nullable,uri,post,for,location,string,url,nullable,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(URI url, @Nullable Object request, Class<T> responseType) throws RestClientException_;1495868221;Create a new resource by POSTing the given object to the URL,_and returns the response as {@link ResponseEntity}._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@return the converted object_@since 3.0.2_@see HttpEntity;<T> ResponseEntity<T> postForEntity(URI url, @Nullable Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,response,as,link,response,entity,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,converted,object,since,3,0,2,see,http,entity;t,response,entity,t,post,for,entity,uri,url,nullable,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(URI url, @Nullable Object request, Class<T> responseType) throws RestClientException_;1496259743;Create a new resource by POSTing the given object to the URL,_and returns the response as {@link ResponseEntity}._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@return the converted object_@since 3.0.2_@see HttpEntity;<T> ResponseEntity<T> postForEntity(URI url, @Nullable Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,response,as,link,response,entity,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,converted,object,since,3,0,2,see,http,entity;t,response,entity,t,post,for,entity,uri,url,nullable,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(URI url, @Nullable Object request, Class<T> responseType) throws RestClientException_;1496837955;Create a new resource by POSTing the given object to the URL,_and returns the response as {@link ResponseEntity}._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@return the converted object_@since 3.0.2_@see HttpEntity;<T> ResponseEntity<T> postForEntity(URI url, @Nullable Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,response,as,link,response,entity,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,converted,object,since,3,0,2,see,http,entity;t,response,entity,t,post,for,entity,uri,url,nullable,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType) throws RestClientException_;1404245400;Execute the HTTP method and URL of the {@link RequestEntity}, writing it to the_request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:__<pre class="code">_MyRequest body = ..._RequestEntity request = RequestEntity.post(&quot_http://example.com/{foo}&quot_, &quot_bar&quot_).accept(MediaType.APPLICATION_JSON).body(body)__ParameterizedTypeReference&lt_List&lt_MyResponse&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyResponse&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyResponse&gt_&gt_ response = template.exchange(request, myBean)__</pre>__@param requestEntity the entity to write to the request_@param responseType the type of the return value_@return the response as entity_@since 4.1;<T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType) throws RestClientException_;execute,the,http,method,and,url,of,the,link,request,entity,writing,it,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,my,request,body,request,entity,request,request,entity,post,quot,http,example,com,foo,quot,quot,bar,quot,accept,media,type,body,body,parameterized,type,reference,lt,list,lt,my,response,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,response,gt,gt,response,entity,lt,list,lt,my,response,gt,gt,response,template,exchange,request,my,bean,pre,param,request,entity,the,entity,to,write,to,the,request,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,4,1;t,response,entity,t,exchange,request,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType) throws RestClientException_;1404245400;Execute the request specified in the given {@link RequestEntity} and return_the response as {@link ResponseEntity}. The given_{@link ParameterizedTypeReference} is used to pass generic type information:__<pre class="code">_MyRequest body = ..._RequestEntity request = RequestEntity.post(&quot_http://example.com/{foo}&quot_, &quot_bar&quot_).accept(MediaType.APPLICATION_JSON).body(body)__ParameterizedTypeReference&lt_List&lt_MyResponse&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyResponse&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyResponse&gt_&gt_ response = template.exchange(request, myBean)__</pre>__@param requestEntity the entity to write to the request_@param responseType the type of the return value_@return the response as entity_@since 4.1;<T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType) throws RestClientException_;execute,the,request,specified,in,the,given,link,request,entity,and,return,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,my,request,body,request,entity,request,request,entity,post,quot,http,example,com,foo,quot,quot,bar,quot,accept,media,type,body,body,parameterized,type,reference,lt,list,lt,my,response,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,response,gt,gt,response,entity,lt,list,lt,my,response,gt,gt,response,template,exchange,request,my,bean,pre,param,request,entity,the,entity,to,write,to,the,request,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,4,1;t,response,entity,t,exchange,request,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> URI postForLocation(String url, @Nullable Object request, Object... uriVariables) throws RestClientException_;1495868221;Create a new resource by POSTing the given object to the URI template, and returns the value of_the {@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(String url, @Nullable Object request, Object... uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,string,url,nullable,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> URI postForLocation(String url, @Nullable Object request, Object... uriVariables) throws RestClientException_;1496259743;Create a new resource by POSTing the given object to the URI template, and returns the value of_the {@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(String url, @Nullable Object request, Object... uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,string,url,nullable,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url,HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;1495868221;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the_request (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(String url,HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,string,url,http,method,method,nullable,http,entity,request,entity,parameterized,type,reference,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url,HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;1496259743;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the_request (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(String url,HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,string,url,http,method,method,nullable,http,entity,request,entity,parameterized,type,reference,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url,HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;1496837955;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the_request (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(String url,HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,string,url,http,method,method,nullable,http,entity,request,entity,parameterized,type,reference,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url,HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;1508532146;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean =_new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}___ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response =_template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the_request (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(String url,HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,string,url,http,method,method,nullable,http,entity,request,entity,parameterized,type,reference,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url,HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;1509980418;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean =_new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}___ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response =_template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the_request (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(String url,HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,string,url,http,method,method,nullable,http,entity,request,entity,parameterized,type,reference,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url,HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;1510004038;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean =_new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}___ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response =_template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the_request (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(String url,HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,string,url,http,method,method,nullable,http,entity,request,entity,parameterized,type,reference,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url,HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;1532695280;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean =_new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}___ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response =_template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the_request (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(String url,HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,string,url,http,method,method,nullable,http,entity,request,entity,parameterized,type,reference,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url,HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;1534440670;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean =_new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}___ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response =_template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the_request (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(String url,HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,string,url,http,method,method,nullable,http,entity,request,entity,parameterized,type,reference,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1495868221;Retrieve a representation by doing a GET on the specified URL._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object;@Nullable_	<T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,specified,url,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object;nullable,t,t,get,for,object,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1496259743;Retrieve a representation by doing a GET on the specified URL._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object;@Nullable_	<T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,specified,url,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object;nullable,t,t,get,for,object,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1496837955;Retrieve a representation by doing a GET on the specified URL._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object;@Nullable_	<T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,specified,url,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object;nullable,t,t,get,for,object,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1508532146;Retrieve a representation by doing a GET on the specified URL._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object;@Nullable_	<T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,specified,url,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object;nullable,t,t,get,for,object,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1509980418;Retrieve a representation by doing a GET on the specified URL._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object;@Nullable_	<T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,specified,url,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object;nullable,t,t,get,for,object,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1510004038;Retrieve a representation by doing a GET on the specified URL._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object;@Nullable_	<T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,specified,url,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object;nullable,t,t,get,for,object,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1532695280;Retrieve a representation by doing a GET on the specified URL._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object;@Nullable_	<T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,specified,url,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object;nullable,t,t,get,for,object,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;1534440670;Retrieve a representation by doing a GET on the specified URL._The response (if any) is converted and returned._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object;@Nullable_	<T> T getForObject(String url, Class<T> responseType, Object... uriVariables) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,specified,url,the,response,if,any,is,converted,and,returned,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object;nullable,t,t,get,for,object,string,url,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1495868221;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,string,url,http,method,method,nullable,http,entity,request,entity,parameterized,type,reference,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1496259743;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,string,url,http,method,method,nullable,http,entity,request,entity,parameterized,type,reference,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1496837955;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,string,url,http,method,method,nullable,http,entity,request,entity,parameterized,type,reference,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1508532146;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean =_new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}___ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response =_template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,string,url,http,method,method,nullable,http,entity,request,entity,parameterized,type,reference,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1509980418;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean =_new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}___ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response =_template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,string,url,http,method,method,nullable,http,entity,request,entity,parameterized,type,reference,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1510004038;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean =_new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}___ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response =_template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,string,url,http,method,method,nullable,http,entity,request,entity,parameterized,type,reference,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1532695280;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean =_new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}___ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response =_template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,string,url,http,method,method,nullable,http,entity,request,entity,parameterized,type,reference,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1534440670;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean =_new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}___ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response =_template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,string,url,http,method,method,nullable,http,entity,request,entity,parameterized,type,reference,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, @Nullable Object request, Class<T> responseType, 			Map<String, ?> uriVariables) throws RestClientException_;1508532146;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link HttpEntity}._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the converted object_@since 3.0.2_@see HttpEntity;<T> ResponseEntity<T> postForEntity(String url, @Nullable Object request, Class<T> responseType,_			Map<String, ?> uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,http,entity,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,3,0,2,see,http,entity;t,response,entity,t,post,for,entity,string,url,nullable,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, @Nullable Object request, Class<T> responseType, 			Map<String, ?> uriVariables) throws RestClientException_;1509980418;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link HttpEntity}._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request. The body of the entity, or {@code request} itself,_can be a {@link org.springframework.http.client.MultipartBodyBuilder MultiValueMap} to_simulate a multipart from submission._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the converted object_@since 3.0.2_@see HttpEntity;<T> ResponseEntity<T> postForEntity(String url, @Nullable Object request, Class<T> responseType,_			Map<String, ?> uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,http,entity,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,http,client,multipart,body,builder,multi,value,map,to,simulate,a,multipart,from,submission,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,3,0,2,see,http,entity;t,response,entity,t,post,for,entity,string,url,nullable,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, @Nullable Object request, Class<T> responseType, 			Map<String, ?> uriVariables) throws RestClientException_;1510004038;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link HttpEntity}._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p>The body of the entity, or {@code request} itself, can be a_{@link org.springframework.util.MultiValueMap MultiValueMap} to create a multipart request._The values in the {@code MultiValueMap} can be any Object representing the body of the part,_or an {@link org.springframework.http.HttpEntity HttpEntity} representing a part with body_and headers. The {@code MultiValueMap} can be built conveniently using_{@link org.springframework.http.client.MultipartBodyBuilder MultipartBodyBuilder}._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the converted object_@since 3.0.2_@see HttpEntity;<T> ResponseEntity<T> postForEntity(String url, @Nullable Object request, Class<T> responseType,_			Map<String, ?> uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,http,entity,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,util,multi,value,map,multi,value,map,to,create,a,multipart,request,the,values,in,the,code,multi,value,map,can,be,any,object,representing,the,body,of,the,part,or,an,link,org,springframework,http,http,entity,http,entity,representing,a,part,with,body,and,headers,the,code,multi,value,map,can,be,built,conveniently,using,link,org,springframework,http,client,multipart,body,builder,multipart,body,builder,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,3,0,2,see,http,entity;t,response,entity,t,post,for,entity,string,url,nullable,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, @Nullable Object request, Class<T> responseType, 			Map<String, ?> uriVariables) throws RestClientException_;1532695280;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link HttpEntity}._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p>The body of the entity, or {@code request} itself, can be a_{@link org.springframework.util.MultiValueMap MultiValueMap} to create a multipart request._The values in the {@code MultiValueMap} can be any Object representing the body of the part,_or an {@link org.springframework.http.HttpEntity HttpEntity} representing a part with body_and headers. The {@code MultiValueMap} can be built conveniently using_{@link org.springframework.http.client.MultipartBodyBuilder MultipartBodyBuilder}._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the converted object_@since 3.0.2_@see HttpEntity;<T> ResponseEntity<T> postForEntity(String url, @Nullable Object request, Class<T> responseType,_			Map<String, ?> uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,http,entity,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,util,multi,value,map,multi,value,map,to,create,a,multipart,request,the,values,in,the,code,multi,value,map,can,be,any,object,representing,the,body,of,the,part,or,an,link,org,springframework,http,http,entity,http,entity,representing,a,part,with,body,and,headers,the,code,multi,value,map,can,be,built,conveniently,using,link,org,springframework,http,client,multipart,body,builder,multipart,body,builder,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,3,0,2,see,http,entity;t,response,entity,t,post,for,entity,string,url,nullable,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, @Nullable Object request, Class<T> responseType, 			Map<String, ?> uriVariables) throws RestClientException_;1534440670;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link HttpEntity}._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p>The body of the entity, or {@code request} itself, can be a_{@link org.springframework.util.MultiValueMap MultiValueMap} to create a multipart request._The values in the {@code MultiValueMap} can be any Object representing the body of the part,_or an {@link org.springframework.http.HttpEntity HttpEntity} representing a part with body_and headers. The {@code MultiValueMap} can be built conveniently using_{@link org.springframework.http.client.MultipartBodyBuilder MultipartBodyBuilder}._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the converted object_@since 3.0.2_@see HttpEntity;<T> ResponseEntity<T> postForEntity(String url, @Nullable Object request, Class<T> responseType,_			Map<String, ?> uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,http,entity,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,util,multi,value,map,multi,value,map,to,create,a,multipart,request,the,values,in,the,code,multi,value,map,can,be,any,object,representing,the,body,of,the,part,or,an,link,org,springframework,http,http,entity,http,entity,representing,a,part,with,body,and,headers,the,code,multi,value,map,can,be,built,conveniently,using,link,org,springframework,http,client,multipart,body,builder,multipart,body,builder,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,3,0,2,see,http,entity;t,response,entity,t,post,for,entity,string,url,nullable,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T execute(String url, HttpMethod method, @Nullable RequestCallback requestCallback, 			@Nullable ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) 			throws RestClientException_;1508532146;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables map._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};@Nullable_	<T> T execute(String url, HttpMethod method, @Nullable RequestCallback requestCallback,_			@Nullable ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables)_			throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,map,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;nullable,t,t,execute,string,url,http,method,method,nullable,request,callback,request,callback,nullable,response,extractor,t,response,extractor,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T execute(String url, HttpMethod method, @Nullable RequestCallback requestCallback, 			@Nullable ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) 			throws RestClientException_;1509980418;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables map._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};@Nullable_	<T> T execute(String url, HttpMethod method, @Nullable RequestCallback requestCallback,_			@Nullable ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables)_			throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,map,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;nullable,t,t,execute,string,url,http,method,method,nullable,request,callback,request,callback,nullable,response,extractor,t,response,extractor,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T execute(String url, HttpMethod method, @Nullable RequestCallback requestCallback, 			@Nullable ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) 			throws RestClientException_;1510004038;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables map._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};@Nullable_	<T> T execute(String url, HttpMethod method, @Nullable RequestCallback requestCallback,_			@Nullable ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables)_			throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,map,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;nullable,t,t,execute,string,url,http,method,method,nullable,request,callback,request,callback,nullable,response,extractor,t,response,extractor,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T execute(String url, HttpMethod method, @Nullable RequestCallback requestCallback, 			@Nullable ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) 			throws RestClientException_;1532695280;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables map._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};@Nullable_	<T> T execute(String url, HttpMethod method, @Nullable RequestCallback requestCallback,_			@Nullable ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables)_			throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,map,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;nullable,t,t,execute,string,url,http,method,method,nullable,request,callback,request,callback,nullable,response,extractor,t,response,extractor,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T execute(String url, HttpMethod method, @Nullable RequestCallback requestCallback, 			@Nullable ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables) 			throws RestClientException_;1534440670;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables map._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};@Nullable_	<T> T execute(String url, HttpMethod method, @Nullable RequestCallback requestCallback,_			@Nullable ResponseExtractor<T> responseExtractor, Map<String, ?> uriVariables)_			throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,map,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;nullable,t,t,execute,string,url,http,method,method,nullable,request,callback,request,callback,nullable,response,extractor,t,response,extractor,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1345666836;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:__<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>__@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2.0;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2,0;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1356735495;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:__<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>__@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2.0;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2,0;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1377627757;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:__<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>__@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2.0;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2,0;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1404245400;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:__<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>__@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2.0;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2,0;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1404245400;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:__<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>__@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2.0;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2,0;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1409790625;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1431938798;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1431949687;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1479374349;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1481218770;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1482265068;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1482841963;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,parameterized,type,reference,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, @Nullable Object request, Class<T> responseType, 			Object... uriVariables) throws RestClientException_;1508532146;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the converted object_@since 3.0.2_@see HttpEntity;<T> ResponseEntity<T> postForEntity(String url, @Nullable Object request, Class<T> responseType,_			Object... uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,3,0,2,see,http,entity;t,response,entity,t,post,for,entity,string,url,nullable,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, @Nullable Object request, Class<T> responseType, 			Object... uriVariables) throws RestClientException_;1509980418;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request. The body of the entity, or {@code request} itself,_can be a {@link org.springframework.http.client.MultipartBodyBuilder MultiValueMap} to_simulate a multipart from submission._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the converted object_@since 3.0.2_@see HttpEntity;<T> ResponseEntity<T> postForEntity(String url, @Nullable Object request, Class<T> responseType,_			Object... uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,http,client,multipart,body,builder,multi,value,map,to,simulate,a,multipart,from,submission,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,3,0,2,see,http,entity;t,response,entity,t,post,for,entity,string,url,nullable,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, @Nullable Object request, Class<T> responseType, 			Object... uriVariables) throws RestClientException_;1510004038;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p>The body of the entity, or {@code request} itself, can be a_{@link org.springframework.util.MultiValueMap MultiValueMap} to create a multipart request._The values in the {@code MultiValueMap} can be any Object representing the body of the part,_or an {@link org.springframework.http.HttpEntity HttpEntity} representing a part with body_and headers. The {@code MultiValueMap} can be built conveniently using_{@link org.springframework.http.client.MultipartBodyBuilder MultipartBodyBuilder}._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the converted object_@since 3.0.2_@see HttpEntity;<T> ResponseEntity<T> postForEntity(String url, @Nullable Object request, Class<T> responseType,_			Object... uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,util,multi,value,map,multi,value,map,to,create,a,multipart,request,the,values,in,the,code,multi,value,map,can,be,any,object,representing,the,body,of,the,part,or,an,link,org,springframework,http,http,entity,http,entity,representing,a,part,with,body,and,headers,the,code,multi,value,map,can,be,built,conveniently,using,link,org,springframework,http,client,multipart,body,builder,multipart,body,builder,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,3,0,2,see,http,entity;t,response,entity,t,post,for,entity,string,url,nullable,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, @Nullable Object request, Class<T> responseType, 			Object... uriVariables) throws RestClientException_;1532695280;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p>The body of the entity, or {@code request} itself, can be a_{@link org.springframework.util.MultiValueMap MultiValueMap} to create a multipart request._The values in the {@code MultiValueMap} can be any Object representing the body of the part,_or an {@link org.springframework.http.HttpEntity HttpEntity} representing a part with body_and headers. The {@code MultiValueMap} can be built conveniently using_{@link org.springframework.http.client.MultipartBodyBuilder MultipartBodyBuilder}._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the converted object_@since 3.0.2_@see HttpEntity;<T> ResponseEntity<T> postForEntity(String url, @Nullable Object request, Class<T> responseType,_			Object... uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,util,multi,value,map,multi,value,map,to,create,a,multipart,request,the,values,in,the,code,multi,value,map,can,be,any,object,representing,the,body,of,the,part,or,an,link,org,springframework,http,http,entity,http,entity,representing,a,part,with,body,and,headers,the,code,multi,value,map,can,be,built,conveniently,using,link,org,springframework,http,client,multipart,body,builder,multipart,body,builder,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,3,0,2,see,http,entity;t,response,entity,t,post,for,entity,string,url,nullable,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, @Nullable Object request, Class<T> responseType, 			Object... uriVariables) throws RestClientException_;1534440670;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p>The body of the entity, or {@code request} itself, can be a_{@link org.springframework.util.MultiValueMap MultiValueMap} to create a multipart request._The values in the {@code MultiValueMap} can be any Object representing the body of the part,_or an {@link org.springframework.http.HttpEntity HttpEntity} representing a part with body_and headers. The {@code MultiValueMap} can be built conveniently using_{@link org.springframework.http.client.MultipartBodyBuilder MultipartBodyBuilder}._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the converted object_@since 3.0.2_@see HttpEntity;<T> ResponseEntity<T> postForEntity(String url, @Nullable Object request, Class<T> responseType,_			Object... uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,util,multi,value,map,multi,value,map,to,create,a,multipart,request,the,values,in,the,code,multi,value,map,can,be,any,object,representing,the,body,of,the,part,or,an,link,org,springframework,http,http,entity,http,entity,representing,a,part,with,body,and,headers,the,code,multi,value,map,can,be,built,conveniently,using,link,org,springframework,http,client,multipart,body,builder,multipart,body,builder,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,3,0,2,see,http,entity;t,response,entity,t,post,for,entity,string,url,nullable,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;1495868221;Retrieve a representation by doing a GET on the URL ._The response (if any) is converted and returned._@param url the URL_@param responseType the type of the return value_@return the converted object;@Nullable_	<T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,if,any,is,converted,and,returned,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object;nullable,t,t,get,for,object,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;1496259743;Retrieve a representation by doing a GET on the URL ._The response (if any) is converted and returned._@param url the URL_@param responseType the type of the return value_@return the converted object;@Nullable_	<T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,if,any,is,converted,and,returned,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object;nullable,t,t,get,for,object,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;1496837955;Retrieve a representation by doing a GET on the URL ._The response (if any) is converted and returned._@param url the URL_@param responseType the type of the return value_@return the converted object;@Nullable_	<T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,if,any,is,converted,and,returned,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object;nullable,t,t,get,for,object,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;1508532146;Retrieve a representation by doing a GET on the URL ._The response (if any) is converted and returned._@param url the URL_@param responseType the type of the return value_@return the converted object;@Nullable_	<T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,if,any,is,converted,and,returned,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object;nullable,t,t,get,for,object,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;1509980418;Retrieve a representation by doing a GET on the URL ._The response (if any) is converted and returned._@param url the URL_@param responseType the type of the return value_@return the converted object;@Nullable_	<T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,if,any,is,converted,and,returned,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object;nullable,t,t,get,for,object,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;1510004038;Retrieve a representation by doing a GET on the URL ._The response (if any) is converted and returned._@param url the URL_@param responseType the type of the return value_@return the converted object;@Nullable_	<T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,if,any,is,converted,and,returned,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object;nullable,t,t,get,for,object,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;1532695280;Retrieve a representation by doing a GET on the URL ._The response (if any) is converted and returned._@param url the URL_@param responseType the type of the return value_@return the converted object;@Nullable_	<T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,if,any,is,converted,and,returned,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object;nullable,t,t,get,for,object,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;1534440670;Retrieve a representation by doing a GET on the URL ._The response (if any) is converted and returned._@param url the URL_@param responseType the type of the return value_@return the converted object;@Nullable_	<T> T getForObject(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,if,any,is,converted,and,returned,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object;nullable,t,t,get,for,object,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> URI postForLocation(URI url, @Nullable Object request) throws RestClientException_;1495868221;Create a new resource by POSTing the given object to the URL, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(URI url, @Nullable Object request) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,uri,url,nullable,object,request,throws,rest,client,exception
RestOperations -> URI postForLocation(URI url, @Nullable Object request) throws RestClientException_;1496259743;Create a new resource by POSTing the given object to the URL, and returns the value of the_{@code Location} header. This header typically indicates where the new resource is stored._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(URI url, @Nullable Object request) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,uri,url,nullable,object,request,throws,rest,client,exception
RestOperations -> URI postForLocation(String url, @Nullable Object request, Map<String, ?> uriVariables) throws RestClientException_;1495868221;Create a new resource by POSTing the given object to the URI template, and returns the value of_the {@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(String url, @Nullable Object request, Map<String, ?> uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,string,url,nullable,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> URI postForLocation(String url, @Nullable Object request, Map<String, ?> uriVariables) throws RestClientException_;1496259743;Create a new resource by POSTing the given object to the URI template, and returns the value of_the {@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;URI postForLocation(String url, @Nullable Object request, Map<String, ?> uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;uri,post,for,location,string,url,nullable,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T execute(URI url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor) throws RestClientException_;1328020251;Execute the HTTP method to the given URL, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(URI url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor) throws RestClientException_;execute,the,http,method,to,the,given,url,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,uri,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,throws,rest,client,exception
RestOperations -> <T> T execute(URI url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor) throws RestClientException_;1345666836;Execute the HTTP method to the given URL, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(URI url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor) throws RestClientException_;execute,the,http,method,to,the,given,url,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,uri,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,throws,rest,client,exception
RestOperations -> <T> T execute(URI url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor) throws RestClientException_;1356735495;Execute the HTTP method to the given URL, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(URI url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor) throws RestClientException_;execute,the,http,method,to,the,given,url,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,uri,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,throws,rest,client,exception
RestOperations -> <T> T execute(URI url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor) throws RestClientException_;1377627757;Execute the HTTP method to the given URL, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(URI url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor) throws RestClientException_;execute,the,http,method,to,the,given,url,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,uri,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,throws,rest,client,exception
RestOperations -> <T> T execute(URI url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor) throws RestClientException_;1404245400;Execute the HTTP method to the given URL, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(URI url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor) throws RestClientException_;execute,the,http,method,to,the,given,url,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,uri,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,throws,rest,client,exception
RestOperations -> <T> T execute(URI url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor) throws RestClientException_;1404245400;Execute the HTTP method to the given URL, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(URI url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor) throws RestClientException_;execute,the,http,method,to,the,given,url,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,uri,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,throws,rest,client,exception
RestOperations -> <T> T execute(URI url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor) throws RestClientException_;1409790625;Execute the HTTP method to the given URL, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(URI url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor) throws RestClientException_;execute,the,http,method,to,the,given,url,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,uri,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,throws,rest,client,exception
RestOperations -> <T> T execute(URI url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor) throws RestClientException_;1431938798;Execute the HTTP method to the given URL, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(URI url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor) throws RestClientException_;execute,the,http,method,to,the,given,url,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,uri,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,throws,rest,client,exception
RestOperations -> <T> T execute(URI url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor) throws RestClientException_;1431949687;Execute the HTTP method to the given URL, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(URI url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor) throws RestClientException_;execute,the,http,method,to,the,given,url,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,uri,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,throws,rest,client,exception
RestOperations -> <T> T execute(URI url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor) throws RestClientException_;1479374349;Execute the HTTP method to the given URL, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(URI url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor) throws RestClientException_;execute,the,http,method,to,the,given,url,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,uri,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,throws,rest,client,exception
RestOperations -> <T> T execute(URI url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor) throws RestClientException_;1481218770;Execute the HTTP method to the given URL, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(URI url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor) throws RestClientException_;execute,the,http,method,to,the,given,url,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,uri,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,throws,rest,client,exception
RestOperations -> <T> T execute(URI url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor) throws RestClientException_;1482265068;Execute the HTTP method to the given URL, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(URI url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor) throws RestClientException_;execute,the,http,method,to,the,given,url,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,uri,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,throws,rest,client,exception
RestOperations -> <T> T execute(URI url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor) throws RestClientException_;1482841963;Execute the HTTP method to the given URL, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(URI url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor) throws RestClientException_;execute,the,http,method,to,the,given,url,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,uri,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,throws,rest,client,exception
RestOperations -> void put(String url, @Nullable Object request, Object... uriVariables) throws RestClientException_;1495868221;Create or update a resource by PUTting the given object to the URI._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT (may be {@code null})_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, @Nullable Object request, Object... uriVariables) throws RestClientException_;create,or,update,a,resource,by,putting,the,given,object,to,the,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,nullable,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, @Nullable Object request, Object... uriVariables) throws RestClientException_;1496259743;Create or update a resource by PUTting the given object to the URI._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT (may be {@code null})_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, @Nullable Object request, Object... uriVariables) throws RestClientException_;create,or,update,a,resource,by,putting,the,given,object,to,the,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,nullable,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, @Nullable Object request, Object... uriVariables) throws RestClientException_;1496837955;Create or update a resource by PUTting the given object to the URI._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT (may be {@code null})_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, @Nullable Object request, Object... uriVariables) throws RestClientException_;create,or,update,a,resource,by,putting,the,given,object,to,the,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,nullable,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, @Nullable Object request, Object... uriVariables) throws RestClientException_;1508532146;Create or update a resource by PUTting the given object to the URI._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT (may be {@code null})_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, @Nullable Object request, Object... uriVariables) throws RestClientException_;create,or,update,a,resource,by,putting,the,given,object,to,the,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,nullable,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, @Nullable Object request, Object... uriVariables) throws RestClientException_;1509980418;Create or update a resource by PUTting the given object to the URI._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT (may be {@code null})_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, @Nullable Object request, Object... uriVariables) throws RestClientException_;create,or,update,a,resource,by,putting,the,given,object,to,the,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,nullable,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, @Nullable Object request, Object... uriVariables) throws RestClientException_;1510004038;Create or update a resource by PUTting the given object to the URI._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT (may be {@code null})_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, @Nullable Object request, Object... uriVariables) throws RestClientException_;create,or,update,a,resource,by,putting,the,given,object,to,the,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,nullable,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, @Nullable Object request, Object... uriVariables) throws RestClientException_;1532695280;Create or update a resource by PUTting the given object to the URI._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT (may be {@code null})_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, @Nullable Object request, Object... uriVariables) throws RestClientException_;create,or,update,a,resource,by,putting,the,given,object,to,the,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,nullable,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, @Nullable Object request, Object... uriVariables) throws RestClientException_;1534440670;Create or update a resource by PUTting the given object to the URI._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT (may be {@code null})_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, @Nullable Object request, Object... uriVariables) throws RestClientException_;create,or,update,a,resource,by,putting,the,given,object,to,the,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,nullable,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType, Object... uriVariables) throws RestClientException_;1328020251;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType, Object... uriVariables) throws RestClientException_;1345666836;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType, Object... uriVariables) throws RestClientException_;1356735495;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType, Object... uriVariables) throws RestClientException_;1377627757;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType, Object... uriVariables) throws RestClientException_;1404245400;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType, Object... uriVariables) throws RestClientException_;1404245400;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType, Object... uriVariables) throws RestClientException_;1409790625;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType, Object... uriVariables) throws RestClientException_;1431938798;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType, Object... uriVariables) throws RestClientException_;1431949687;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType, Object... uriVariables) throws RestClientException_;1479374349;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType, Object... uriVariables) throws RestClientException_;1481218770;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType, Object... uriVariables) throws RestClientException_;1482265068;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType, Object... uriVariables) throws RestClientException_;1482841963;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;1328020251;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;1345666836;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;1356735495;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;1377627757;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;1404245400;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;1404245400;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;1409790625;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;1431938798;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;1431949687;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;1479374349;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;1481218770;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;1482265068;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;1482841963;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;1495868221;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;1496259743;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;1496837955;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;1508532146;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;1509980418;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;1510004038;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;1532695280;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;1534440670;Return the value of the Allow header for the given URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template_@return the value of the allow header;Set<HttpMethod> optionsForAllow(String url, Object... uriVariables) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template,return,the,value,of,the,allow,header;set,http,method,options,for,allow,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T execute(String url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor, Object... uriVariables) throws RestClientException_;1328020251;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(String url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,string,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T execute(String url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor, Object... uriVariables) throws RestClientException_;1345666836;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(String url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,string,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T execute(String url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor, Object... uriVariables) throws RestClientException_;1356735495;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(String url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,string,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T execute(String url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor, Object... uriVariables) throws RestClientException_;1377627757;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(String url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,string,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T execute(String url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor, Object... uriVariables) throws RestClientException_;1404245400;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(String url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,string,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T execute(String url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor, Object... uriVariables) throws RestClientException_;1404245400;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(String url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,string,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T execute(String url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor, Object... uriVariables) throws RestClientException_;1409790625;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(String url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,string,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T execute(String url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor, Object... uriVariables) throws RestClientException_;1431938798;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(String url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,string,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T execute(String url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor, Object... uriVariables) throws RestClientException_;1431949687;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(String url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,string,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T execute(String url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor, Object... uriVariables) throws RestClientException_;1479374349;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(String url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,string,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T execute(String url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor, Object... uriVariables) throws RestClientException_;1481218770;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(String url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,string,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T execute(String url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor, Object... uriVariables) throws RestClientException_;1482265068;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(String url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,string,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T execute(String url, HttpMethod method, RequestCallback requestCallback, 			ResponseExtractor<T> responseExtractor, Object... uriVariables) throws RestClientException_;1482841963;Execute the HTTP method to the given URI template, preparing the request with the_{@link RequestCallback}, and reading the response with a {@link ResponseExtractor}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestCallback object that prepares the request_@param responseExtractor object that extracts the return value from the response_@param uriVariables the variables to expand in the template_@return an arbitrary object, as returned by the {@link ResponseExtractor};<T> T execute(String url, HttpMethod method, RequestCallback requestCallback,_			ResponseExtractor<T> responseExtractor, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,preparing,the,request,with,the,link,request,callback,and,reading,the,response,with,a,link,response,extractor,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,callback,object,that,prepares,the,request,param,response,extractor,object,that,extracts,the,return,value,from,the,response,param,uri,variables,the,variables,to,expand,in,the,template,return,an,arbitrary,object,as,returned,by,the,link,response,extractor;t,t,execute,string,url,http,method,method,request,callback,request,callback,response,extractor,t,response,extractor,object,uri,variables,throws,rest,client,exception
RestOperations -> void put(URI url, @Nullable Object request) throws RestClientException_;1495868221;Creates a new resource by PUTting the given object to URL._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT (may be {@code null})_@see HttpEntity;void put(URI url, @Nullable Object request) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,url,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,see,http,entity;void,put,uri,url,nullable,object,request,throws,rest,client,exception
RestOperations -> void put(URI url, @Nullable Object request) throws RestClientException_;1496259743;Creates a new resource by PUTting the given object to URL._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT (may be {@code null})_@see HttpEntity;void put(URI url, @Nullable Object request) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,url,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,see,http,entity;void,put,uri,url,nullable,object,request,throws,rest,client,exception
RestOperations -> void put(URI url, @Nullable Object request) throws RestClientException_;1496837955;Creates a new resource by PUTting the given object to URL._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT (may be {@code null})_@see HttpEntity;void put(URI url, @Nullable Object request) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,url,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,see,http,entity;void,put,uri,url,nullable,object,request,throws,rest,client,exception
RestOperations -> void put(URI url, @Nullable Object request) throws RestClientException_;1508532146;Creates a new resource by PUTting the given object to URL._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT (may be {@code null})_@see HttpEntity;void put(URI url, @Nullable Object request) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,url,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,see,http,entity;void,put,uri,url,nullable,object,request,throws,rest,client,exception
RestOperations -> void put(URI url, @Nullable Object request) throws RestClientException_;1509980418;Creates a new resource by PUTting the given object to URL._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT (may be {@code null})_@see HttpEntity;void put(URI url, @Nullable Object request) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,url,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,see,http,entity;void,put,uri,url,nullable,object,request,throws,rest,client,exception
RestOperations -> void put(URI url, @Nullable Object request) throws RestClientException_;1510004038;Creates a new resource by PUTting the given object to URL._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT (may be {@code null})_@see HttpEntity;void put(URI url, @Nullable Object request) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,url,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,see,http,entity;void,put,uri,url,nullable,object,request,throws,rest,client,exception
RestOperations -> void put(URI url, @Nullable Object request) throws RestClientException_;1532695280;Creates a new resource by PUTting the given object to URL._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT (may be {@code null})_@see HttpEntity;void put(URI url, @Nullable Object request) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,url,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,see,http,entity;void,put,uri,url,nullable,object,request,throws,rest,client,exception
RestOperations -> void put(URI url, @Nullable Object request) throws RestClientException_;1534440670;Creates a new resource by PUTting the given object to URL._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT (may be {@code null})_@see HttpEntity;void put(URI url, @Nullable Object request) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,url,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,see,http,entity;void,put,uri,url,nullable,object,request,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			Class<T> responseType, Object... uriVariables) throws RestClientException_;1495868221;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			Class<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,nullable,http,entity,request,entity,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			Class<T> responseType, Object... uriVariables) throws RestClientException_;1496259743;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			Class<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,nullable,http,entity,request,entity,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			Class<T> responseType, Object... uriVariables) throws RestClientException_;1496837955;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			Class<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,nullable,http,entity,request,entity,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			Class<T> responseType, Object... uriVariables) throws RestClientException_;1508532146;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			Class<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,nullable,http,entity,request,entity,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			Class<T> responseType, Object... uriVariables) throws RestClientException_;1509980418;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			Class<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,nullable,http,entity,request,entity,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			Class<T> responseType, Object... uriVariables) throws RestClientException_;1510004038;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			Class<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,nullable,http,entity,request,entity,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			Class<T> responseType, Object... uriVariables) throws RestClientException_;1532695280;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			Class<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,nullable,http,entity,request,entity,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			Class<T> responseType, Object... uriVariables) throws RestClientException_;1534440670;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			Class<T> responseType, Object... uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,nullable,http,entity,request,entity,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T postForObject(URI url, Object request, Class<T> responseType) throws RestClientException_;1328020251;Create a new resource by POSTing the given object to the URL,_and returns the representation found in the response._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be <code>null</code>_@param responseType the type of the return value_@return the converted object_@see HttpEntity;<T> T postForObject(URI url, Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,representation,found,in,the,response,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,code,param,response,type,the,type,of,the,return,value,return,the,converted,object,see,http,entity;t,t,post,for,object,uri,url,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> T postForObject(URI url, Object request, Class<T> responseType) throws RestClientException_;1345666836;Create a new resource by POSTing the given object to the URL,_and returns the representation found in the response._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be <code>null</code>_@param responseType the type of the return value_@return the converted object_@see HttpEntity;<T> T postForObject(URI url, Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,representation,found,in,the,response,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,code,param,response,type,the,type,of,the,return,value,return,the,converted,object,see,http,entity;t,t,post,for,object,uri,url,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> T postForObject(URI url, Object request, Class<T> responseType) throws RestClientException_;1356735495;Create a new resource by POSTing the given object to the URL,_and returns the representation found in the response._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param responseType the type of the return value_@return the converted object_@see HttpEntity;<T> T postForObject(URI url, Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,representation,found,in,the,response,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,converted,object,see,http,entity;t,t,post,for,object,uri,url,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> T postForObject(URI url, Object request, Class<T> responseType) throws RestClientException_;1377627757;Create a new resource by POSTing the given object to the URL,_and returns the representation found in the response._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param responseType the type of the return value_@return the converted object_@see HttpEntity;<T> T postForObject(URI url, Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,representation,found,in,the,response,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,converted,object,see,http,entity;t,t,post,for,object,uri,url,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> T postForObject(URI url, Object request, Class<T> responseType) throws RestClientException_;1404245400;Create a new resource by POSTing the given object to the URL,_and returns the representation found in the response._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param responseType the type of the return value_@return the converted object_@see HttpEntity;<T> T postForObject(URI url, Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,representation,found,in,the,response,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,converted,object,see,http,entity;t,t,post,for,object,uri,url,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> T postForObject(URI url, Object request, Class<T> responseType) throws RestClientException_;1404245400;Create a new resource by POSTing the given object to the URL,_and returns the representation found in the response._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param responseType the type of the return value_@return the converted object_@see HttpEntity;<T> T postForObject(URI url, Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,representation,found,in,the,response,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,converted,object,see,http,entity;t,t,post,for,object,uri,url,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> T postForObject(URI url, Object request, Class<T> responseType) throws RestClientException_;1409790625;Create a new resource by POSTing the given object to the URL,_and returns the representation found in the response._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param responseType the type of the return value_@return the converted object_@see HttpEntity;<T> T postForObject(URI url, Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,representation,found,in,the,response,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,converted,object,see,http,entity;t,t,post,for,object,uri,url,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> T postForObject(URI url, Object request, Class<T> responseType) throws RestClientException_;1431938798;Create a new resource by POSTing the given object to the URL,_and returns the representation found in the response._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param responseType the type of the return value_@return the converted object_@see HttpEntity;<T> T postForObject(URI url, Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,representation,found,in,the,response,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,converted,object,see,http,entity;t,t,post,for,object,uri,url,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> T postForObject(URI url, Object request, Class<T> responseType) throws RestClientException_;1431949687;Create a new resource by POSTing the given object to the URL,_and returns the representation found in the response._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param responseType the type of the return value_@return the converted object_@see HttpEntity;<T> T postForObject(URI url, Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,representation,found,in,the,response,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,converted,object,see,http,entity;t,t,post,for,object,uri,url,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> T postForObject(URI url, Object request, Class<T> responseType) throws RestClientException_;1479374349;Create a new resource by POSTing the given object to the URL,_and returns the representation found in the response._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param responseType the type of the return value_@return the converted object_@see HttpEntity;<T> T postForObject(URI url, Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,representation,found,in,the,response,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,converted,object,see,http,entity;t,t,post,for,object,uri,url,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> T postForObject(URI url, Object request, Class<T> responseType) throws RestClientException_;1481218770;Create a new resource by POSTing the given object to the URL,_and returns the representation found in the response._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param responseType the type of the return value_@return the converted object_@see HttpEntity;<T> T postForObject(URI url, Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,representation,found,in,the,response,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,converted,object,see,http,entity;t,t,post,for,object,uri,url,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> T postForObject(URI url, Object request, Class<T> responseType) throws RestClientException_;1482265068;Create a new resource by POSTing the given object to the URL,_and returns the representation found in the response._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param responseType the type of the return value_@return the converted object_@see HttpEntity;<T> T postForObject(URI url, Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,representation,found,in,the,response,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,converted,object,see,http,entity;t,t,post,for,object,uri,url,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> T postForObject(URI url, Object request, Class<T> responseType) throws RestClientException_;1482841963;Create a new resource by POSTing the given object to the URL,_and returns the representation found in the response._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param responseType the type of the return value_@return the converted object_@see HttpEntity;<T> T postForObject(URI url, Object request, Class<T> responseType) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,url,and,returns,the,representation,found,in,the,response,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,converted,object,see,http,entity;t,t,post,for,object,uri,url,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType) throws RestClientException_;1495868221;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,uri,url,http,method,method,nullable,http,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType) throws RestClientException_;1496259743;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,uri,url,http,method,method,nullable,http,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType) throws RestClientException_;1496837955;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response = template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,uri,url,http,method,method,nullable,http,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType) throws RestClientException_;1508532146;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean =_new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}___ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response =_template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,uri,url,http,method,method,nullable,http,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType) throws RestClientException_;1509980418;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean =_new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}___ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response =_template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,uri,url,http,method,method,nullable,http,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType) throws RestClientException_;1510004038;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean =_new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}___ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response =_template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,uri,url,http,method,method,nullable,http,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType) throws RestClientException_;1532695280;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean =_new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}___ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response =_template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,uri,url,http,method,method,nullable,http,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(URI url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			ParameterizedTypeReference<T> responseType) throws RestClientException_;1534440670;Execute the HTTP method to the given URI template, writing the given_request entity to the request, and returns the response as {@link ResponseEntity}._The given {@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_ myBean =_new ParameterizedTypeReference&lt_List&lt_MyBean&gt_&gt_() {}___ResponseEntity&lt_List&lt_MyBean&gt_&gt_ response =_template.exchange(&quot_http://example.com&quot_,HttpMethod.GET, null, myBean)__</pre>_@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@return the response as entity_@since 3.2;<T> ResponseEntity<T> exchange(URI url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			ParameterizedTypeReference<T> responseType) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,bean,gt,gt,response,entity,lt,list,lt,my,bean,gt,gt,response,template,exchange,quot,http,example,com,quot,http,method,get,null,my,bean,pre,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,3,2;t,response,entity,t,exchange,uri,url,http,method,method,nullable,http,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(URI url) throws RestClientException_;1328020251;Retrieve all headers of the resource specified by the URL._@param url the URL_@return all HTTP headers of that resource;HttpHeaders headForHeaders(URI url) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,url,param,url,the,url,return,all,http,headers,of,that,resource;http,headers,head,for,headers,uri,url,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(URI url) throws RestClientException_;1345666836;Retrieve all headers of the resource specified by the URL._@param url the URL_@return all HTTP headers of that resource;HttpHeaders headForHeaders(URI url) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,url,param,url,the,url,return,all,http,headers,of,that,resource;http,headers,head,for,headers,uri,url,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(URI url) throws RestClientException_;1356735495;Retrieve all headers of the resource specified by the URL._@param url the URL_@return all HTTP headers of that resource;HttpHeaders headForHeaders(URI url) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,url,param,url,the,url,return,all,http,headers,of,that,resource;http,headers,head,for,headers,uri,url,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(URI url) throws RestClientException_;1377627757;Retrieve all headers of the resource specified by the URL._@param url the URL_@return all HTTP headers of that resource;HttpHeaders headForHeaders(URI url) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,url,param,url,the,url,return,all,http,headers,of,that,resource;http,headers,head,for,headers,uri,url,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(URI url) throws RestClientException_;1404245400;Retrieve all headers of the resource specified by the URL._@param url the URL_@return all HTTP headers of that resource;HttpHeaders headForHeaders(URI url) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,url,param,url,the,url,return,all,http,headers,of,that,resource;http,headers,head,for,headers,uri,url,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(URI url) throws RestClientException_;1404245400;Retrieve all headers of the resource specified by the URL._@param url the URL_@return all HTTP headers of that resource;HttpHeaders headForHeaders(URI url) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,url,param,url,the,url,return,all,http,headers,of,that,resource;http,headers,head,for,headers,uri,url,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(URI url) throws RestClientException_;1409790625;Retrieve all headers of the resource specified by the URL._@param url the URL_@return all HTTP headers of that resource;HttpHeaders headForHeaders(URI url) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,url,param,url,the,url,return,all,http,headers,of,that,resource;http,headers,head,for,headers,uri,url,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(URI url) throws RestClientException_;1431938798;Retrieve all headers of the resource specified by the URL._@param url the URL_@return all HTTP headers of that resource;HttpHeaders headForHeaders(URI url) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,url,param,url,the,url,return,all,http,headers,of,that,resource;http,headers,head,for,headers,uri,url,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(URI url) throws RestClientException_;1431949687;Retrieve all headers of the resource specified by the URL._@param url the URL_@return all HTTP headers of that resource;HttpHeaders headForHeaders(URI url) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,url,param,url,the,url,return,all,http,headers,of,that,resource;http,headers,head,for,headers,uri,url,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(URI url) throws RestClientException_;1479374349;Retrieve all headers of the resource specified by the URL._@param url the URL_@return all HTTP headers of that resource;HttpHeaders headForHeaders(URI url) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,url,param,url,the,url,return,all,http,headers,of,that,resource;http,headers,head,for,headers,uri,url,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(URI url) throws RestClientException_;1481218770;Retrieve all headers of the resource specified by the URL._@param url the URL_@return all HTTP headers of that resource;HttpHeaders headForHeaders(URI url) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,url,param,url,the,url,return,all,http,headers,of,that,resource;http,headers,head,for,headers,uri,url,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(URI url) throws RestClientException_;1482265068;Retrieve all headers of the resource specified by the URL._@param url the URL_@return all HTTP headers of that resource;HttpHeaders headForHeaders(URI url) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,url,param,url,the,url,return,all,http,headers,of,that,resource;http,headers,head,for,headers,uri,url,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(URI url) throws RestClientException_;1482841963;Retrieve all headers of the resource specified by the URL._@param url the URL_@return all HTTP headers of that resource;HttpHeaders headForHeaders(URI url) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,url,param,url,the,url,return,all,http,headers,of,that,resource;http,headers,head,for,headers,uri,url,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(URI url) throws RestClientException_;1495868221;Retrieve all headers of the resource specified by the URL._@param url the URL_@return all HTTP headers of that resource;HttpHeaders headForHeaders(URI url) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,url,param,url,the,url,return,all,http,headers,of,that,resource;http,headers,head,for,headers,uri,url,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(URI url) throws RestClientException_;1496259743;Retrieve all headers of the resource specified by the URL._@param url the URL_@return all HTTP headers of that resource;HttpHeaders headForHeaders(URI url) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,url,param,url,the,url,return,all,http,headers,of,that,resource;http,headers,head,for,headers,uri,url,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(URI url) throws RestClientException_;1496837955;Retrieve all headers of the resource specified by the URL._@param url the URL_@return all HTTP headers of that resource;HttpHeaders headForHeaders(URI url) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,url,param,url,the,url,return,all,http,headers,of,that,resource;http,headers,head,for,headers,uri,url,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(URI url) throws RestClientException_;1508532146;Retrieve all headers of the resource specified by the URL._@param url the URL_@return all HTTP headers of that resource;HttpHeaders headForHeaders(URI url) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,url,param,url,the,url,return,all,http,headers,of,that,resource;http,headers,head,for,headers,uri,url,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(URI url) throws RestClientException_;1509980418;Retrieve all headers of the resource specified by the URL._@param url the URL_@return all HTTP headers of that resource;HttpHeaders headForHeaders(URI url) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,url,param,url,the,url,return,all,http,headers,of,that,resource;http,headers,head,for,headers,uri,url,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(URI url) throws RestClientException_;1510004038;Retrieve all headers of the resource specified by the URL._@param url the URL_@return all HTTP headers of that resource;HttpHeaders headForHeaders(URI url) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,url,param,url,the,url,return,all,http,headers,of,that,resource;http,headers,head,for,headers,uri,url,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(URI url) throws RestClientException_;1532695280;Retrieve all headers of the resource specified by the URL._@param url the URL_@return all HTTP headers of that resource;HttpHeaders headForHeaders(URI url) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,url,param,url,the,url,return,all,http,headers,of,that,resource;http,headers,head,for,headers,uri,url,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(URI url) throws RestClientException_;1534440670;Retrieve all headers of the resource specified by the URL._@param url the URL_@return all HTTP headers of that resource;HttpHeaders headForHeaders(URI url) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,url,param,url,the,url,return,all,http,headers,of,that,resource;http,headers,head,for,headers,uri,url,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T patchForObject(URI url, @Nullable Object request, Class<T> responseType) 			throws RestClientException_;1508532146;Update a resource by PATCHing the given object to the URL,_and return the representation found in the response._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p><b>NOTE: The standard JDK HTTP library does not support HTTP PATCH._You need to use the Apache HttpComponents or OkHttp request factory.</b>_@param url the URL_@param request the object to be PATCHed (may be {@code null})_@param responseType the type of the return value_@return the converted object_@since 4.3.5_@see HttpEntity_@see RestTemplate#setRequestFactory_@see org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory_@see org.springframework.http.client.OkHttp3ClientHttpRequestFactory;@Nullable_	<T> T patchForObject(URI url, @Nullable Object request, Class<T> responseType)_			throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,url,and,return,the,representation,found,in,the,response,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,b,note,the,standard,jdk,http,library,does,not,support,http,patch,you,need,to,use,the,apache,http,components,or,ok,http,request,factory,b,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,converted,object,since,4,3,5,see,http,entity,see,rest,template,set,request,factory,see,org,springframework,http,client,http,components,async,client,http,request,factory,see,org,springframework,http,client,ok,http3client,http,request,factory;nullable,t,t,patch,for,object,uri,url,nullable,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T patchForObject(URI url, @Nullable Object request, Class<T> responseType) 			throws RestClientException_;1509980418;Update a resource by PATCHing the given object to the URL,_and return the representation found in the response._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p><b>NOTE: The standard JDK HTTP library does not support HTTP PATCH._You need to use the Apache HttpComponents or OkHttp request factory.</b>_@param url the URL_@param request the object to be PATCHed (may be {@code null})_@param responseType the type of the return value_@return the converted object_@since 4.3.5_@see HttpEntity_@see RestTemplate#setRequestFactory_@see org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory_@see org.springframework.http.client.OkHttp3ClientHttpRequestFactory;@Nullable_	<T> T patchForObject(URI url, @Nullable Object request, Class<T> responseType)_			throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,url,and,return,the,representation,found,in,the,response,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,b,note,the,standard,jdk,http,library,does,not,support,http,patch,you,need,to,use,the,apache,http,components,or,ok,http,request,factory,b,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,converted,object,since,4,3,5,see,http,entity,see,rest,template,set,request,factory,see,org,springframework,http,client,http,components,async,client,http,request,factory,see,org,springframework,http,client,ok,http3client,http,request,factory;nullable,t,t,patch,for,object,uri,url,nullable,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T patchForObject(URI url, @Nullable Object request, Class<T> responseType) 			throws RestClientException_;1510004038;Update a resource by PATCHing the given object to the URL,_and return the representation found in the response._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p><b>NOTE: The standard JDK HTTP library does not support HTTP PATCH._You need to use the Apache HttpComponents or OkHttp request factory.</b>_@param url the URL_@param request the object to be PATCHed (may be {@code null})_@param responseType the type of the return value_@return the converted object_@since 4.3.5_@see HttpEntity_@see RestTemplate#setRequestFactory_@see org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory_@see org.springframework.http.client.OkHttp3ClientHttpRequestFactory;@Nullable_	<T> T patchForObject(URI url, @Nullable Object request, Class<T> responseType)_			throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,url,and,return,the,representation,found,in,the,response,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,b,note,the,standard,jdk,http,library,does,not,support,http,patch,you,need,to,use,the,apache,http,components,or,ok,http,request,factory,b,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,converted,object,since,4,3,5,see,http,entity,see,rest,template,set,request,factory,see,org,springframework,http,client,http,components,async,client,http,request,factory,see,org,springframework,http,client,ok,http3client,http,request,factory;nullable,t,t,patch,for,object,uri,url,nullable,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T patchForObject(URI url, @Nullable Object request, Class<T> responseType) 			throws RestClientException_;1532695280;Update a resource by PATCHing the given object to the URL,_and return the representation found in the response._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p><b>NOTE: The standard JDK HTTP library does not support HTTP PATCH._You need to use the Apache HttpComponents or OkHttp request factory.</b>_@param url the URL_@param request the object to be PATCHed (may be {@code null})_@param responseType the type of the return value_@return the converted object_@since 4.3.5_@see HttpEntity_@see RestTemplate#setRequestFactory_@see org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory_@see org.springframework.http.client.OkHttp3ClientHttpRequestFactory;@Nullable_	<T> T patchForObject(URI url, @Nullable Object request, Class<T> responseType)_			throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,url,and,return,the,representation,found,in,the,response,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,b,note,the,standard,jdk,http,library,does,not,support,http,patch,you,need,to,use,the,apache,http,components,or,ok,http,request,factory,b,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,converted,object,since,4,3,5,see,http,entity,see,rest,template,set,request,factory,see,org,springframework,http,client,http,components,async,client,http,request,factory,see,org,springframework,http,client,ok,http3client,http,request,factory;nullable,t,t,patch,for,object,uri,url,nullable,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T patchForObject(URI url, @Nullable Object request, Class<T> responseType) 			throws RestClientException_;1534440670;Update a resource by PATCHing the given object to the URL,_and return the representation found in the response._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p><b>NOTE: The standard JDK HTTP library does not support HTTP PATCH._You need to use the Apache HttpComponents or OkHttp request factory.</b>_@param url the URL_@param request the object to be PATCHed (may be {@code null})_@param responseType the type of the return value_@return the converted object_@since 4.3.5_@see HttpEntity_@see RestTemplate#setRequestFactory_@see org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory_@see org.springframework.http.client.OkHttp3ClientHttpRequestFactory;@Nullable_	<T> T patchForObject(URI url, @Nullable Object request, Class<T> responseType)_			throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,url,and,return,the,representation,found,in,the,response,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,b,note,the,standard,jdk,http,library,does,not,support,http,patch,you,need,to,use,the,apache,http,components,or,ok,http,request,factory,b,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,return,the,converted,object,since,4,3,5,see,http,entity,see,rest,template,set,request,factory,see,org,springframework,http,client,http,components,async,client,http,request,factory,see,org,springframework,http,client,ok,http3client,http,request,factory;nullable,t,t,patch,for,object,uri,url,nullable,object,request,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, @Nullable Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1495868221;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link HttpEntity}._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the converted object_@since 3.0.2_@see HttpEntity;<T> ResponseEntity<T> postForEntity(String url, @Nullable Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,http,entity,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,3,0,2,see,http,entity;t,response,entity,t,post,for,entity,string,url,nullable,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, @Nullable Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1496259743;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link HttpEntity}._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the converted object_@since 3.0.2_@see HttpEntity;<T> ResponseEntity<T> postForEntity(String url, @Nullable Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,http,entity,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,3,0,2,see,http,entity;t,response,entity,t,post,for,entity,string,url,nullable,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, @Nullable Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1496837955;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link HttpEntity}._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the converted object_@since 3.0.2_@see HttpEntity;<T> ResponseEntity<T> postForEntity(String url, @Nullable Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,http,entity,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,3,0,2,see,http,entity;t,response,entity,t,post,for,entity,string,url,nullable,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;1328020251;Return the value of the Allow header for the given URL._@param url the URL_@return the value of the allow header;Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,url,param,url,the,url,return,the,value,of,the,allow,header;set,http,method,options,for,allow,uri,url,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;1345666836;Return the value of the Allow header for the given URL._@param url the URL_@return the value of the allow header;Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,url,param,url,the,url,return,the,value,of,the,allow,header;set,http,method,options,for,allow,uri,url,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;1356735495;Return the value of the Allow header for the given URL._@param url the URL_@return the value of the allow header;Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,url,param,url,the,url,return,the,value,of,the,allow,header;set,http,method,options,for,allow,uri,url,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;1377627757;Return the value of the Allow header for the given URL._@param url the URL_@return the value of the allow header;Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,url,param,url,the,url,return,the,value,of,the,allow,header;set,http,method,options,for,allow,uri,url,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;1404245400;Return the value of the Allow header for the given URL._@param url the URL_@return the value of the allow header;Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,url,param,url,the,url,return,the,value,of,the,allow,header;set,http,method,options,for,allow,uri,url,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;1404245400;Return the value of the Allow header for the given URL._@param url the URL_@return the value of the allow header;Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,url,param,url,the,url,return,the,value,of,the,allow,header;set,http,method,options,for,allow,uri,url,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;1409790625;Return the value of the Allow header for the given URL._@param url the URL_@return the value of the allow header;Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,url,param,url,the,url,return,the,value,of,the,allow,header;set,http,method,options,for,allow,uri,url,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;1431938798;Return the value of the Allow header for the given URL._@param url the URL_@return the value of the allow header;Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,url,param,url,the,url,return,the,value,of,the,allow,header;set,http,method,options,for,allow,uri,url,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;1431949687;Return the value of the Allow header for the given URL._@param url the URL_@return the value of the allow header;Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,url,param,url,the,url,return,the,value,of,the,allow,header;set,http,method,options,for,allow,uri,url,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;1479374349;Return the value of the Allow header for the given URL._@param url the URL_@return the value of the allow header;Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,url,param,url,the,url,return,the,value,of,the,allow,header;set,http,method,options,for,allow,uri,url,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;1481218770;Return the value of the Allow header for the given URL._@param url the URL_@return the value of the allow header;Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,url,param,url,the,url,return,the,value,of,the,allow,header;set,http,method,options,for,allow,uri,url,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;1482265068;Return the value of the Allow header for the given URL._@param url the URL_@return the value of the allow header;Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,url,param,url,the,url,return,the,value,of,the,allow,header;set,http,method,options,for,allow,uri,url,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;1482841963;Return the value of the Allow header for the given URL._@param url the URL_@return the value of the allow header;Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,url,param,url,the,url,return,the,value,of,the,allow,header;set,http,method,options,for,allow,uri,url,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;1495868221;Return the value of the Allow header for the given URL._@param url the URL_@return the value of the allow header;Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,url,param,url,the,url,return,the,value,of,the,allow,header;set,http,method,options,for,allow,uri,url,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;1496259743;Return the value of the Allow header for the given URL._@param url the URL_@return the value of the allow header;Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,url,param,url,the,url,return,the,value,of,the,allow,header;set,http,method,options,for,allow,uri,url,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;1496837955;Return the value of the Allow header for the given URL._@param url the URL_@return the value of the allow header;Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,url,param,url,the,url,return,the,value,of,the,allow,header;set,http,method,options,for,allow,uri,url,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;1508532146;Return the value of the Allow header for the given URL._@param url the URL_@return the value of the allow header;Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,url,param,url,the,url,return,the,value,of,the,allow,header;set,http,method,options,for,allow,uri,url,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;1509980418;Return the value of the Allow header for the given URL._@param url the URL_@return the value of the allow header;Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,url,param,url,the,url,return,the,value,of,the,allow,header;set,http,method,options,for,allow,uri,url,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;1510004038;Return the value of the Allow header for the given URL._@param url the URL_@return the value of the allow header;Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,url,param,url,the,url,return,the,value,of,the,allow,header;set,http,method,options,for,allow,uri,url,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;1532695280;Return the value of the Allow header for the given URL._@param url the URL_@return the value of the allow header;Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,url,param,url,the,url,return,the,value,of,the,allow,header;set,http,method,options,for,allow,uri,url,throws,rest,client,exception
RestOperations -> Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;1534440670;Return the value of the Allow header for the given URL._@param url the URL_@return the value of the allow header;Set<HttpMethod> optionsForAllow(URI url) throws RestClientException_;return,the,value,of,the,allow,header,for,the,given,url,param,url,the,url,return,the,value,of,the,allow,header;set,http,method,options,for,allow,uri,url,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1328020251;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1345666836;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1356735495;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1377627757;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1404245400;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1404245400;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1409790625;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1431938798;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1431949687;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1479374349;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1481218770;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1482265068;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity, 			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1482841963;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, HttpEntity<?> requestEntity,_			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,http,entity,request,entity,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	URI postForLocation(String url, @Nullable Object request, Object... uriVariables) throws RestClientException_;1496837955;Create a new resource by POSTing the given object to the URI template, and returns the value of_the {@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;@Nullable_	URI postForLocation(String url, @Nullable Object request, Object... uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;nullable,uri,post,for,location,string,url,nullable,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	URI postForLocation(String url, @Nullable Object request, Object... uriVariables) throws RestClientException_;1508532146;Create a new resource by POSTing the given object to the URI template, and returns the value of_the {@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;@Nullable_	URI postForLocation(String url, @Nullable Object request, Object... uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;nullable,uri,post,for,location,string,url,nullable,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	URI postForLocation(String url, @Nullable Object request, Object... uriVariables) throws RestClientException_;1509980418;Create a new resource by POSTing the given object to the URI template, and returns the value of_the {@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request. The body of the entity, or {@code request} itself,_can be a {@link org.springframework.http.client.MultipartBodyBuilder MultiValueMap} to_simulate a multipart from submission._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;@Nullable_	URI postForLocation(String url, @Nullable Object request, Object... uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,http,client,multipart,body,builder,multi,value,map,to,simulate,a,multipart,from,submission,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;nullable,uri,post,for,location,string,url,nullable,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	URI postForLocation(String url, @Nullable Object request, Object... uriVariables) throws RestClientException_;1510004038;Create a new resource by POSTing the given object to the URI template, and returns the value of_the {@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p>The body of the entity, or {@code request} itself, can be a_{@link org.springframework.util.MultiValueMap MultiValueMap} to create a multipart request._The values in the {@code MultiValueMap} can be any Object representing the body of the part,_or an {@link org.springframework.http.HttpEntity HttpEntity} representing a part with body_and headers. The {@code MultiValueMap} can be built conveniently using_{@link org.springframework.http.client.MultipartBodyBuilder MultipartBodyBuilder}._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;@Nullable_	URI postForLocation(String url, @Nullable Object request, Object... uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,util,multi,value,map,multi,value,map,to,create,a,multipart,request,the,values,in,the,code,multi,value,map,can,be,any,object,representing,the,body,of,the,part,or,an,link,org,springframework,http,http,entity,http,entity,representing,a,part,with,body,and,headers,the,code,multi,value,map,can,be,built,conveniently,using,link,org,springframework,http,client,multipart,body,builder,multipart,body,builder,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;nullable,uri,post,for,location,string,url,nullable,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	URI postForLocation(String url, @Nullable Object request, Object... uriVariables) throws RestClientException_;1532695280;Create a new resource by POSTing the given object to the URI template, and returns the value of_the {@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p>The body of the entity, or {@code request} itself, can be a_{@link org.springframework.util.MultiValueMap MultiValueMap} to create a multipart request._The values in the {@code MultiValueMap} can be any Object representing the body of the part,_or an {@link org.springframework.http.HttpEntity HttpEntity} representing a part with body_and headers. The {@code MultiValueMap} can be built conveniently using_{@link org.springframework.http.client.MultipartBodyBuilder MultipartBodyBuilder}._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;@Nullable_	URI postForLocation(String url, @Nullable Object request, Object... uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,util,multi,value,map,multi,value,map,to,create,a,multipart,request,the,values,in,the,code,multi,value,map,can,be,any,object,representing,the,body,of,the,part,or,an,link,org,springframework,http,http,entity,http,entity,representing,a,part,with,body,and,headers,the,code,multi,value,map,can,be,built,conveniently,using,link,org,springframework,http,client,multipart,body,builder,multipart,body,builder,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;nullable,uri,post,for,location,string,url,nullable,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	URI postForLocation(String url, @Nullable Object request, Object... uriVariables) throws RestClientException_;1534440670;Create a new resource by POSTing the given object to the URI template, and returns the value of_the {@code Location} header. This header typically indicates where the new resource is stored._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p>The body of the entity, or {@code request} itself, can be a_{@link org.springframework.util.MultiValueMap MultiValueMap} to create a multipart request._The values in the {@code MultiValueMap} can be any Object representing the body of the part,_or an {@link org.springframework.http.HttpEntity HttpEntity} representing a part with body_and headers. The {@code MultiValueMap} can be built conveniently using_{@link org.springframework.http.client.MultipartBodyBuilder MultipartBodyBuilder}._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the value for the {@code Location} header_@see HttpEntity;@Nullable_	URI postForLocation(String url, @Nullable Object request, Object... uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,value,of,the,code,location,header,this,header,typically,indicates,where,the,new,resource,is,stored,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,util,multi,value,map,multi,value,map,to,create,a,multipart,request,the,values,in,the,code,multi,value,map,can,be,any,object,representing,the,body,of,the,part,or,an,link,org,springframework,http,http,entity,http,entity,representing,a,part,with,body,and,headers,the,code,multi,value,map,can,be,built,conveniently,using,link,org,springframework,http,client,multipart,body,builder,multipart,body,builder,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,value,for,the,code,location,header,see,http,entity;nullable,uri,post,for,location,string,url,nullable,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;1328020251;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand the template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;1345666836;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand the template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;1356735495;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand the template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;1377627757;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand the template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;1404245400;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand the template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;1404245400;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand the template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;1409790625;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand the template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;1431938798;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand the template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;1431949687;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand the template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;1479374349;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand the template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;1481218770;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand the template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;1482265068;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand the template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;1482841963;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand the template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;1495868221;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand the template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;1496259743;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand the template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;1496837955;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand the template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;1508532146;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand the template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;1509980418;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand the template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;1510004038;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand the template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;1532695280;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand the template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;1534440670;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand the template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Object... uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,the,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T patchForObject(String url, @Nullable Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1495868221;Update a resource by PATCHing the given object to the URI template,_and return the representation found in the response._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p><b>NOTE: The standard JDK HTTP library does not support HTTP PATCH._You need to use the Apache HttpComponents or OkHttp request factory.</b>_@param url the URL_@param request the object to be PATCHed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@since 4.3.5_@see HttpEntity_@see RestTemplate#setRequestFactory_@see org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory_@see org.springframework.http.client.OkHttp3ClientHttpRequestFactory;@Nullable_	<T> T patchForObject(String url, @Nullable Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,uri,template,and,return,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,b,note,the,standard,jdk,http,library,does,not,support,http,patch,you,need,to,use,the,apache,http,components,or,ok,http,request,factory,b,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,4,3,5,see,http,entity,see,rest,template,set,request,factory,see,org,springframework,http,client,http,components,async,client,http,request,factory,see,org,springframework,http,client,ok,http3client,http,request,factory;nullable,t,t,patch,for,object,string,url,nullable,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T patchForObject(String url, @Nullable Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1496259743;Update a resource by PATCHing the given object to the URI template,_and return the representation found in the response._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p><b>NOTE: The standard JDK HTTP library does not support HTTP PATCH._You need to use the Apache HttpComponents or OkHttp request factory.</b>_@param url the URL_@param request the object to be PATCHed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@since 4.3.5_@see HttpEntity_@see RestTemplate#setRequestFactory_@see org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory_@see org.springframework.http.client.OkHttp3ClientHttpRequestFactory;@Nullable_	<T> T patchForObject(String url, @Nullable Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,uri,template,and,return,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,b,note,the,standard,jdk,http,library,does,not,support,http,patch,you,need,to,use,the,apache,http,components,or,ok,http,request,factory,b,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,4,3,5,see,http,entity,see,rest,template,set,request,factory,see,org,springframework,http,client,http,components,async,client,http,request,factory,see,org,springframework,http,client,ok,http3client,http,request,factory;nullable,t,t,patch,for,object,string,url,nullable,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T patchForObject(String url, @Nullable Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1496837955;Update a resource by PATCHing the given object to the URI template,_and return the representation found in the response._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p><b>NOTE: The standard JDK HTTP library does not support HTTP PATCH._You need to use the Apache HttpComponents or OkHttp request factory.</b>_@param url the URL_@param request the object to be PATCHed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@since 4.3.5_@see HttpEntity_@see RestTemplate#setRequestFactory_@see org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory_@see org.springframework.http.client.OkHttp3ClientHttpRequestFactory;@Nullable_	<T> T patchForObject(String url, @Nullable Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,uri,template,and,return,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,b,note,the,standard,jdk,http,library,does,not,support,http,patch,you,need,to,use,the,apache,http,components,or,ok,http,request,factory,b,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,4,3,5,see,http,entity,see,rest,template,set,request,factory,see,org,springframework,http,client,http,components,async,client,http,request,factory,see,org,springframework,http,client,ok,http3client,http,request,factory;nullable,t,t,patch,for,object,string,url,nullable,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T patchForObject(String url, @Nullable Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1508532146;Update a resource by PATCHing the given object to the URI template,_and return the representation found in the response._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p><b>NOTE: The standard JDK HTTP library does not support HTTP PATCH._You need to use the Apache HttpComponents or OkHttp request factory.</b>_@param url the URL_@param request the object to be PATCHed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@since 4.3.5_@see HttpEntity_@see RestTemplate#setRequestFactory_@see org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory_@see org.springframework.http.client.OkHttp3ClientHttpRequestFactory;@Nullable_	<T> T patchForObject(String url, @Nullable Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,uri,template,and,return,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,b,note,the,standard,jdk,http,library,does,not,support,http,patch,you,need,to,use,the,apache,http,components,or,ok,http,request,factory,b,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,4,3,5,see,http,entity,see,rest,template,set,request,factory,see,org,springframework,http,client,http,components,async,client,http,request,factory,see,org,springframework,http,client,ok,http3client,http,request,factory;nullable,t,t,patch,for,object,string,url,nullable,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T patchForObject(String url, @Nullable Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1509980418;Update a resource by PATCHing the given object to the URI template,_and return the representation found in the response._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p><b>NOTE: The standard JDK HTTP library does not support HTTP PATCH._You need to use the Apache HttpComponents or OkHttp request factory.</b>_@param url the URL_@param request the object to be PATCHed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@since 4.3.5_@see HttpEntity_@see RestTemplate#setRequestFactory_@see org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory_@see org.springframework.http.client.OkHttp3ClientHttpRequestFactory;@Nullable_	<T> T patchForObject(String url, @Nullable Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,uri,template,and,return,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,b,note,the,standard,jdk,http,library,does,not,support,http,patch,you,need,to,use,the,apache,http,components,or,ok,http,request,factory,b,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,4,3,5,see,http,entity,see,rest,template,set,request,factory,see,org,springframework,http,client,http,components,async,client,http,request,factory,see,org,springframework,http,client,ok,http3client,http,request,factory;nullable,t,t,patch,for,object,string,url,nullable,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T patchForObject(String url, @Nullable Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1510004038;Update a resource by PATCHing the given object to the URI template,_and return the representation found in the response._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p><b>NOTE: The standard JDK HTTP library does not support HTTP PATCH._You need to use the Apache HttpComponents or OkHttp request factory.</b>_@param url the URL_@param request the object to be PATCHed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@since 4.3.5_@see HttpEntity_@see RestTemplate#setRequestFactory_@see org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory_@see org.springframework.http.client.OkHttp3ClientHttpRequestFactory;@Nullable_	<T> T patchForObject(String url, @Nullable Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,uri,template,and,return,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,b,note,the,standard,jdk,http,library,does,not,support,http,patch,you,need,to,use,the,apache,http,components,or,ok,http,request,factory,b,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,4,3,5,see,http,entity,see,rest,template,set,request,factory,see,org,springframework,http,client,http,components,async,client,http,request,factory,see,org,springframework,http,client,ok,http3client,http,request,factory;nullable,t,t,patch,for,object,string,url,nullable,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T patchForObject(String url, @Nullable Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1532695280;Update a resource by PATCHing the given object to the URI template,_and return the representation found in the response._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p><b>NOTE: The standard JDK HTTP library does not support HTTP PATCH._You need to use the Apache HttpComponents or OkHttp request factory.</b>_@param url the URL_@param request the object to be PATCHed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@since 4.3.5_@see HttpEntity_@see RestTemplate#setRequestFactory_@see org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory_@see org.springframework.http.client.OkHttp3ClientHttpRequestFactory;@Nullable_	<T> T patchForObject(String url, @Nullable Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,uri,template,and,return,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,b,note,the,standard,jdk,http,library,does,not,support,http,patch,you,need,to,use,the,apache,http,components,or,ok,http,request,factory,b,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,4,3,5,see,http,entity,see,rest,template,set,request,factory,see,org,springframework,http,client,http,components,async,client,http,request,factory,see,org,springframework,http,client,ok,http3client,http,request,factory;nullable,t,t,patch,for,object,string,url,nullable,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T patchForObject(String url, @Nullable Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1534440670;Update a resource by PATCHing the given object to the URI template,_and return the representation found in the response._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p><b>NOTE: The standard JDK HTTP library does not support HTTP PATCH._You need to use the Apache HttpComponents or OkHttp request factory.</b>_@param url the URL_@param request the object to be PATCHed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@since 4.3.5_@see HttpEntity_@see RestTemplate#setRequestFactory_@see org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory_@see org.springframework.http.client.OkHttp3ClientHttpRequestFactory;@Nullable_	<T> T patchForObject(String url, @Nullable Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,uri,template,and,return,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,b,note,the,standard,jdk,http,library,does,not,support,http,patch,you,need,to,use,the,apache,http,components,or,ok,http,request,factory,b,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,4,3,5,see,http,entity,see,rest,template,set,request,factory,see,org,springframework,http,client,http,components,async,client,http,request,factory,see,org,springframework,http,client,ok,http3client,http,request,factory;nullable,t,t,patch,for,object,string,url,nullable,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, Object request, Object... uriVariables) throws RestClientException_;1328020251;Create or update a resource by PUTting the given object to the URI._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT, may be <code>null</code>_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, Object request, Object... uriVariables) throws RestClientException_;create,or,update,a,resource,by,putting,the,given,object,to,the,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,code,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, Object request, Object... uriVariables) throws RestClientException_;1345666836;Create or update a resource by PUTting the given object to the URI._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT, may be <code>null</code>_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, Object request, Object... uriVariables) throws RestClientException_;create,or,update,a,resource,by,putting,the,given,object,to,the,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,code,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, Object request, Object... uriVariables) throws RestClientException_;1356735495;Create or update a resource by PUTting the given object to the URI._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT, may be {@code null}_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, Object request, Object... uriVariables) throws RestClientException_;create,or,update,a,resource,by,putting,the,given,object,to,the,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, Object request, Object... uriVariables) throws RestClientException_;1377627757;Create or update a resource by PUTting the given object to the URI._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT, may be {@code null}_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, Object request, Object... uriVariables) throws RestClientException_;create,or,update,a,resource,by,putting,the,given,object,to,the,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, Object request, Object... uriVariables) throws RestClientException_;1404245400;Create or update a resource by PUTting the given object to the URI._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT, may be {@code null}_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, Object request, Object... uriVariables) throws RestClientException_;create,or,update,a,resource,by,putting,the,given,object,to,the,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, Object request, Object... uriVariables) throws RestClientException_;1404245400;Create or update a resource by PUTting the given object to the URI._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT, may be {@code null}_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, Object request, Object... uriVariables) throws RestClientException_;create,or,update,a,resource,by,putting,the,given,object,to,the,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, Object request, Object... uriVariables) throws RestClientException_;1409790625;Create or update a resource by PUTting the given object to the URI._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT, may be {@code null}_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, Object request, Object... uriVariables) throws RestClientException_;create,or,update,a,resource,by,putting,the,given,object,to,the,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, Object request, Object... uriVariables) throws RestClientException_;1431938798;Create or update a resource by PUTting the given object to the URI._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT, may be {@code null}_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, Object request, Object... uriVariables) throws RestClientException_;create,or,update,a,resource,by,putting,the,given,object,to,the,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, Object request, Object... uriVariables) throws RestClientException_;1431949687;Create or update a resource by PUTting the given object to the URI._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT, may be {@code null}_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, Object request, Object... uriVariables) throws RestClientException_;create,or,update,a,resource,by,putting,the,given,object,to,the,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, Object request, Object... uriVariables) throws RestClientException_;1479374349;Create or update a resource by PUTting the given object to the URI._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT, may be {@code null}_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, Object request, Object... uriVariables) throws RestClientException_;create,or,update,a,resource,by,putting,the,given,object,to,the,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, Object request, Object... uriVariables) throws RestClientException_;1481218770;Create or update a resource by PUTting the given object to the URI._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT (may be {@code null})_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, Object request, Object... uriVariables) throws RestClientException_;create,or,update,a,resource,by,putting,the,given,object,to,the,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, Object request, Object... uriVariables) throws RestClientException_;1482265068;Create or update a resource by PUTting the given object to the URI._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT (may be {@code null})_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, Object request, Object... uriVariables) throws RestClientException_;create,or,update,a,resource,by,putting,the,given,object,to,the,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, Object request, Object... uriVariables) throws RestClientException_;1482841963;Create or update a resource by PUTting the given object to the URI._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT (may be {@code null})_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, Object request, Object... uriVariables) throws RestClientException_;create,or,update,a,resource,by,putting,the,given,object,to,the,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,object,request,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T patchForObject(String url, Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1479374349;Update a resource by PATCHing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PATCHed, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity_@since 5.0;<T> T patchForObject(String url, Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity,since,5,0;t,t,patch,for,object,string,url,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T patchForObject(String url, Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1481218770;Update a resource by PATCHing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PATCHed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@since 4.3.5_@see HttpEntity;<T> T patchForObject(String url, Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,4,3,5,see,http,entity;t,t,patch,for,object,string,url,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T patchForObject(String url, Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1482265068;Update a resource by PATCHing the given object to the URI template,_and return the representation found in the response._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the object to be PATCHed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@since 4.3.5_@see HttpEntity;<T> T patchForObject(String url, Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,uri,template,and,return,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,4,3,5,see,http,entity;t,t,patch,for,object,string,url,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> T patchForObject(String url, Object request, Class<T> responseType, Object... uriVariables) 			throws RestClientException_;1482841963;Update a resource by PATCHing the given object to the URI template,_and return the representation found in the response._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p><b>NOTE: The standard JDK HTTP library does not support HTTP PATCH._You need to use the Apache HttpComponents or OkHttp request factory.</b>_@param url the URL_@param request the object to be PATCHed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@since 4.3.5_@see HttpEntity_@see RestTemplate#setRequestFactory_@see org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory_@see org.springframework.http.client.OkHttp3ClientHttpRequestFactory;<T> T patchForObject(String url, Object request, Class<T> responseType, Object... uriVariables)_			throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,uri,template,and,return,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,b,note,the,standard,jdk,http,library,does,not,support,http,patch,you,need,to,use,the,apache,http,components,or,ok,http,request,factory,b,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,4,3,5,see,http,entity,see,rest,template,set,request,factory,see,org,springframework,http,client,http,components,async,client,http,request,factory,see,org,springframework,http,client,ok,http3client,http,request,factory;t,t,patch,for,object,string,url,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T postForObject(String url, @Nullable Object request, Class<T> responseType, 			Object... uriVariables) throws RestClientException_;1508532146;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;@Nullable_	<T> T postForObject(String url, @Nullable Object request, Class<T> responseType,_			Object... uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;nullable,t,t,post,for,object,string,url,nullable,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T postForObject(String url, @Nullable Object request, Class<T> responseType, 			Object... uriVariables) throws RestClientException_;1509980418;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request. The body of the entity, or {@code request} itself,_can be a {@link org.springframework.http.client.MultipartBodyBuilder MultiValueMap} to_simulate a multipart from submission._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;@Nullable_	<T> T postForObject(String url, @Nullable Object request, Class<T> responseType,_			Object... uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,http,client,multipart,body,builder,multi,value,map,to,simulate,a,multipart,from,submission,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;nullable,t,t,post,for,object,string,url,nullable,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T postForObject(String url, @Nullable Object request, Class<T> responseType, 			Object... uriVariables) throws RestClientException_;1510004038;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p>The body of the entity, or {@code request} itself, can be a_{@link org.springframework.util.MultiValueMap MultiValueMap} to create a multipart request._The values in the {@code MultiValueMap} can be any Object representing the body of the part,_or an {@link org.springframework.http.HttpEntity HttpEntity} representing a part with body_and headers. The {@code MultiValueMap} can be built conveniently using_{@link org.springframework.http.client.MultipartBodyBuilder MultipartBodyBuilder}._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;@Nullable_	<T> T postForObject(String url, @Nullable Object request, Class<T> responseType,_			Object... uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,util,multi,value,map,multi,value,map,to,create,a,multipart,request,the,values,in,the,code,multi,value,map,can,be,any,object,representing,the,body,of,the,part,or,an,link,org,springframework,http,http,entity,http,entity,representing,a,part,with,body,and,headers,the,code,multi,value,map,can,be,built,conveniently,using,link,org,springframework,http,client,multipart,body,builder,multipart,body,builder,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;nullable,t,t,post,for,object,string,url,nullable,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T postForObject(String url, @Nullable Object request, Class<T> responseType, 			Object... uriVariables) throws RestClientException_;1532695280;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p>The body of the entity, or {@code request} itself, can be a_{@link org.springframework.util.MultiValueMap MultiValueMap} to create a multipart request._The values in the {@code MultiValueMap} can be any Object representing the body of the part,_or an {@link org.springframework.http.HttpEntity HttpEntity} representing a part with body_and headers. The {@code MultiValueMap} can be built conveniently using_{@link org.springframework.http.client.MultipartBodyBuilder MultipartBodyBuilder}._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;@Nullable_	<T> T postForObject(String url, @Nullable Object request, Class<T> responseType,_			Object... uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,util,multi,value,map,multi,value,map,to,create,a,multipart,request,the,values,in,the,code,multi,value,map,can,be,any,object,representing,the,body,of,the,part,or,an,link,org,springframework,http,http,entity,http,entity,representing,a,part,with,body,and,headers,the,code,multi,value,map,can,be,built,conveniently,using,link,org,springframework,http,client,multipart,body,builder,multipart,body,builder,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;nullable,t,t,post,for,object,string,url,nullable,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T postForObject(String url, @Nullable Object request, Class<T> responseType, 			Object... uriVariables) throws RestClientException_;1534440670;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given URI variables, if any._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p>The body of the entity, or {@code request} itself, can be a_{@link org.springframework.util.MultiValueMap MultiValueMap} to create a multipart request._The values in the {@code MultiValueMap} can be any Object representing the body of the part,_or an {@link org.springframework.http.HttpEntity HttpEntity} representing a part with body_and headers. The {@code MultiValueMap} can be built conveniently using_{@link org.springframework.http.client.MultipartBodyBuilder MultipartBodyBuilder}._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;@Nullable_	<T> T postForObject(String url, @Nullable Object request, Class<T> responseType,_			Object... uriVariables) throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,the,body,of,the,entity,or,code,request,itself,can,be,a,link,org,springframework,util,multi,value,map,multi,value,map,to,create,a,multipart,request,the,values,in,the,code,multi,value,map,can,be,any,object,representing,the,body,of,the,part,or,an,link,org,springframework,http,http,entity,http,entity,representing,a,part,with,body,and,headers,the,code,multi,value,map,can,be,built,conveniently,using,link,org,springframework,http,client,multipart,body,builder,multipart,body,builder,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;nullable,t,t,post,for,object,string,url,nullable,object,request,class,t,response,type,object,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;1328020251;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the map containing variables for the URI template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;1345666836;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the map containing variables for the URI template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;1356735495;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the map containing variables for the URI template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;1377627757;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the map containing variables for the URI template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;1404245400;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the map containing variables for the URI template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;1404245400;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the map containing variables for the URI template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;1409790625;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the map containing variables for the URI template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;1431938798;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the map containing variables for the URI template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;1431949687;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the map containing variables for the URI template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;1479374349;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the map containing variables for the URI template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;1481218770;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the map containing variables for the URI template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;1482265068;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the map containing variables for the URI template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;1482841963;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the map containing variables for the URI template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;1495868221;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the map containing variables for the URI template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;1496259743;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the map containing variables for the URI template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;1496837955;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the map containing variables for the URI template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;1508532146;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the map containing variables for the URI template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;1509980418;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the map containing variables for the URI template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;1510004038;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the map containing variables for the URI template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;1532695280;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the map containing variables for the URI template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;1534440670;Retrieve all headers of the resource specified by the URI template._<p>URI Template variables are expanded using the given map._@param url the URL_@param uriVariables the map containing variables for the URI template_@return all HTTP headers of that resource;HttpHeaders headForHeaders(String url, Map<String, ?> uriVariables) throws RestClientException_;retrieve,all,headers,of,the,resource,specified,by,the,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,param,url,the,url,param,uri,variables,the,map,containing,variables,for,the,uri,template,return,all,http,headers,of,that,resource;http,headers,head,for,headers,string,url,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void delete(URI url) throws RestClientException_;1328020251;Delete the resources at the specified URL._@param url the URL;void delete(URI url) throws RestClientException_;delete,the,resources,at,the,specified,url,param,url,the,url;void,delete,uri,url,throws,rest,client,exception
RestOperations -> void delete(URI url) throws RestClientException_;1345666836;Delete the resources at the specified URL._@param url the URL;void delete(URI url) throws RestClientException_;delete,the,resources,at,the,specified,url,param,url,the,url;void,delete,uri,url,throws,rest,client,exception
RestOperations -> void delete(URI url) throws RestClientException_;1356735495;Delete the resources at the specified URL._@param url the URL;void delete(URI url) throws RestClientException_;delete,the,resources,at,the,specified,url,param,url,the,url;void,delete,uri,url,throws,rest,client,exception
RestOperations -> void delete(URI url) throws RestClientException_;1377627757;Delete the resources at the specified URL._@param url the URL;void delete(URI url) throws RestClientException_;delete,the,resources,at,the,specified,url,param,url,the,url;void,delete,uri,url,throws,rest,client,exception
RestOperations -> void delete(URI url) throws RestClientException_;1404245400;Delete the resources at the specified URL._@param url the URL;void delete(URI url) throws RestClientException_;delete,the,resources,at,the,specified,url,param,url,the,url;void,delete,uri,url,throws,rest,client,exception
RestOperations -> void delete(URI url) throws RestClientException_;1404245400;Delete the resources at the specified URL._@param url the URL;void delete(URI url) throws RestClientException_;delete,the,resources,at,the,specified,url,param,url,the,url;void,delete,uri,url,throws,rest,client,exception
RestOperations -> void delete(URI url) throws RestClientException_;1409790625;Delete the resources at the specified URL._@param url the URL;void delete(URI url) throws RestClientException_;delete,the,resources,at,the,specified,url,param,url,the,url;void,delete,uri,url,throws,rest,client,exception
RestOperations -> void delete(URI url) throws RestClientException_;1431938798;Delete the resources at the specified URL._@param url the URL;void delete(URI url) throws RestClientException_;delete,the,resources,at,the,specified,url,param,url,the,url;void,delete,uri,url,throws,rest,client,exception
RestOperations -> void delete(URI url) throws RestClientException_;1431949687;Delete the resources at the specified URL._@param url the URL;void delete(URI url) throws RestClientException_;delete,the,resources,at,the,specified,url,param,url,the,url;void,delete,uri,url,throws,rest,client,exception
RestOperations -> void delete(URI url) throws RestClientException_;1479374349;Delete the resources at the specified URL._@param url the URL;void delete(URI url) throws RestClientException_;delete,the,resources,at,the,specified,url,param,url,the,url;void,delete,uri,url,throws,rest,client,exception
RestOperations -> void delete(URI url) throws RestClientException_;1481218770;Delete the resources at the specified URL._@param url the URL;void delete(URI url) throws RestClientException_;delete,the,resources,at,the,specified,url,param,url,the,url;void,delete,uri,url,throws,rest,client,exception
RestOperations -> void delete(URI url) throws RestClientException_;1482265068;Delete the resources at the specified URL._@param url the URL;void delete(URI url) throws RestClientException_;delete,the,resources,at,the,specified,url,param,url,the,url;void,delete,uri,url,throws,rest,client,exception
RestOperations -> void delete(URI url) throws RestClientException_;1482841963;Delete the resources at the specified URL._@param url the URL;void delete(URI url) throws RestClientException_;delete,the,resources,at,the,specified,url,param,url,the,url;void,delete,uri,url,throws,rest,client,exception
RestOperations -> void delete(URI url) throws RestClientException_;1495868221;Delete the resources at the specified URL._@param url the URL;void delete(URI url) throws RestClientException_;delete,the,resources,at,the,specified,url,param,url,the,url;void,delete,uri,url,throws,rest,client,exception
RestOperations -> void delete(URI url) throws RestClientException_;1496259743;Delete the resources at the specified URL._@param url the URL;void delete(URI url) throws RestClientException_;delete,the,resources,at,the,specified,url,param,url,the,url;void,delete,uri,url,throws,rest,client,exception
RestOperations -> void delete(URI url) throws RestClientException_;1496837955;Delete the resources at the specified URL._@param url the URL;void delete(URI url) throws RestClientException_;delete,the,resources,at,the,specified,url,param,url,the,url;void,delete,uri,url,throws,rest,client,exception
RestOperations -> void delete(URI url) throws RestClientException_;1508532146;Delete the resources at the specified URL._@param url the URL;void delete(URI url) throws RestClientException_;delete,the,resources,at,the,specified,url,param,url,the,url;void,delete,uri,url,throws,rest,client,exception
RestOperations -> void delete(URI url) throws RestClientException_;1509980418;Delete the resources at the specified URL._@param url the URL;void delete(URI url) throws RestClientException_;delete,the,resources,at,the,specified,url,param,url,the,url;void,delete,uri,url,throws,rest,client,exception
RestOperations -> void delete(URI url) throws RestClientException_;1510004038;Delete the resources at the specified URL._@param url the URL;void delete(URI url) throws RestClientException_;delete,the,resources,at,the,specified,url,param,url,the,url;void,delete,uri,url,throws,rest,client,exception
RestOperations -> void delete(URI url) throws RestClientException_;1532695280;Delete the resources at the specified URL._@param url the URL;void delete(URI url) throws RestClientException_;delete,the,resources,at,the,specified,url,param,url,the,url;void,delete,uri,url,throws,rest,client,exception
RestOperations -> void delete(URI url) throws RestClientException_;1534440670;Delete the resources at the specified URL._@param url the URL;void delete(URI url) throws RestClientException_;delete,the,resources,at,the,specified,url,param,url,the,url;void,delete,uri,url,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, ParameterizedTypeReference<T> responseType) 			throws RestClientException_;1409790625;Execute the request specified in the given {@link RequestEntity} and return_the response as {@link ResponseEntity}. The given_{@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_MyRequest body = ..._RequestEntity request = RequestEntity.post(&quot_http://example.com/{foo}&quot_, &quot_bar&quot_).accept(MediaType.APPLICATION_JSON).body(body)__ParameterizedTypeReference&lt_List&lt_MyResponse&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyResponse&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyResponse&gt_&gt_ response = template.exchange(request, myBean)__</pre>_@param requestEntity the entity to write to the request_@param responseType the type of the return value_@return the response as entity_@since 4.1;<T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, ParameterizedTypeReference<T> responseType)_			throws RestClientException_;execute,the,request,specified,in,the,given,link,request,entity,and,return,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,my,request,body,request,entity,request,request,entity,post,quot,http,example,com,foo,quot,quot,bar,quot,accept,media,type,body,body,parameterized,type,reference,lt,list,lt,my,response,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,response,gt,gt,response,entity,lt,list,lt,my,response,gt,gt,response,template,exchange,request,my,bean,pre,param,request,entity,the,entity,to,write,to,the,request,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,4,1;t,response,entity,t,exchange,request,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, ParameterizedTypeReference<T> responseType) 			throws RestClientException_;1431938798;Execute the request specified in the given {@link RequestEntity} and return_the response as {@link ResponseEntity}. The given_{@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_MyRequest body = ..._RequestEntity request = RequestEntity.post(new URI(&quot_http://example.com/foo&quot_).accept(MediaType.APPLICATION_JSON).body(body)__ParameterizedTypeReference&lt_List&lt_MyResponse&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyResponse&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyResponse&gt_&gt_ response = template.exchange(request, myBean)__</pre>_@param requestEntity the entity to write to the request_@param responseType the type of the return value_@return the response as entity_@since 4.1;<T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, ParameterizedTypeReference<T> responseType)_			throws RestClientException_;execute,the,request,specified,in,the,given,link,request,entity,and,return,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,my,request,body,request,entity,request,request,entity,post,new,uri,quot,http,example,com,foo,quot,accept,media,type,body,body,parameterized,type,reference,lt,list,lt,my,response,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,response,gt,gt,response,entity,lt,list,lt,my,response,gt,gt,response,template,exchange,request,my,bean,pre,param,request,entity,the,entity,to,write,to,the,request,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,4,1;t,response,entity,t,exchange,request,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, ParameterizedTypeReference<T> responseType) 			throws RestClientException_;1431949687;Execute the request specified in the given {@link RequestEntity} and return_the response as {@link ResponseEntity}. The given_{@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_MyRequest body = ..._RequestEntity request = RequestEntity.post(new URI(&quot_http://example.com/foo&quot_)).accept(MediaType.APPLICATION_JSON).body(body)__ParameterizedTypeReference&lt_List&lt_MyResponse&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyResponse&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyResponse&gt_&gt_ response = template.exchange(request, myBean)__</pre>_@param requestEntity the entity to write to the request_@param responseType the type of the return value_@return the response as entity_@since 4.1;<T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, ParameterizedTypeReference<T> responseType)_			throws RestClientException_;execute,the,request,specified,in,the,given,link,request,entity,and,return,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,my,request,body,request,entity,request,request,entity,post,new,uri,quot,http,example,com,foo,quot,accept,media,type,body,body,parameterized,type,reference,lt,list,lt,my,response,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,response,gt,gt,response,entity,lt,list,lt,my,response,gt,gt,response,template,exchange,request,my,bean,pre,param,request,entity,the,entity,to,write,to,the,request,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,4,1;t,response,entity,t,exchange,request,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, ParameterizedTypeReference<T> responseType) 			throws RestClientException_;1479374349;Execute the request specified in the given {@link RequestEntity} and return_the response as {@link ResponseEntity}. The given_{@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_MyRequest body = ..._RequestEntity request = RequestEntity.post(new URI(&quot_http://example.com/foo&quot_)).accept(MediaType.APPLICATION_JSON).body(body)__ParameterizedTypeReference&lt_List&lt_MyResponse&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyResponse&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyResponse&gt_&gt_ response = template.exchange(request, myBean)__</pre>_@param requestEntity the entity to write to the request_@param responseType the type of the return value_@return the response as entity_@since 4.1;<T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, ParameterizedTypeReference<T> responseType)_			throws RestClientException_;execute,the,request,specified,in,the,given,link,request,entity,and,return,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,my,request,body,request,entity,request,request,entity,post,new,uri,quot,http,example,com,foo,quot,accept,media,type,body,body,parameterized,type,reference,lt,list,lt,my,response,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,response,gt,gt,response,entity,lt,list,lt,my,response,gt,gt,response,template,exchange,request,my,bean,pre,param,request,entity,the,entity,to,write,to,the,request,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,4,1;t,response,entity,t,exchange,request,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, ParameterizedTypeReference<T> responseType) 			throws RestClientException_;1481218770;Execute the request specified in the given {@link RequestEntity} and return_the response as {@link ResponseEntity}. The given_{@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_MyRequest body = ..._RequestEntity request = RequestEntity.post(new URI(&quot_http://example.com/foo&quot_)).accept(MediaType.APPLICATION_JSON).body(body)__ParameterizedTypeReference&lt_List&lt_MyResponse&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyResponse&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyResponse&gt_&gt_ response = template.exchange(request, myBean)__</pre>_@param requestEntity the entity to write to the request_@param responseType the type of the return value_@return the response as entity_@since 4.1;<T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, ParameterizedTypeReference<T> responseType)_			throws RestClientException_;execute,the,request,specified,in,the,given,link,request,entity,and,return,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,my,request,body,request,entity,request,request,entity,post,new,uri,quot,http,example,com,foo,quot,accept,media,type,body,body,parameterized,type,reference,lt,list,lt,my,response,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,response,gt,gt,response,entity,lt,list,lt,my,response,gt,gt,response,template,exchange,request,my,bean,pre,param,request,entity,the,entity,to,write,to,the,request,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,4,1;t,response,entity,t,exchange,request,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, ParameterizedTypeReference<T> responseType) 			throws RestClientException_;1482265068;Execute the request specified in the given {@link RequestEntity} and return_the response as {@link ResponseEntity}. The given_{@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_MyRequest body = ..._RequestEntity request = RequestEntity.post(new URI(&quot_http://example.com/foo&quot_)).accept(MediaType.APPLICATION_JSON).body(body)__ParameterizedTypeReference&lt_List&lt_MyResponse&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyResponse&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyResponse&gt_&gt_ response = template.exchange(request, myBean)__</pre>_@param requestEntity the entity to write to the request_@param responseType the type of the return value_@return the response as entity_@since 4.1;<T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, ParameterizedTypeReference<T> responseType)_			throws RestClientException_;execute,the,request,specified,in,the,given,link,request,entity,and,return,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,my,request,body,request,entity,request,request,entity,post,new,uri,quot,http,example,com,foo,quot,accept,media,type,body,body,parameterized,type,reference,lt,list,lt,my,response,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,response,gt,gt,response,entity,lt,list,lt,my,response,gt,gt,response,template,exchange,request,my,bean,pre,param,request,entity,the,entity,to,write,to,the,request,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,4,1;t,response,entity,t,exchange,request,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, ParameterizedTypeReference<T> responseType) 			throws RestClientException_;1482841963;Execute the request specified in the given {@link RequestEntity} and return_the response as {@link ResponseEntity}. The given_{@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_MyRequest body = ..._RequestEntity request = RequestEntity.post(new URI(&quot_http://example.com/foo&quot_)).accept(MediaType.APPLICATION_JSON).body(body)__ParameterizedTypeReference&lt_List&lt_MyResponse&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyResponse&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyResponse&gt_&gt_ response = template.exchange(request, myBean)__</pre>_@param requestEntity the entity to write to the request_@param responseType the type of the return value_@return the response as entity_@since 4.1;<T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, ParameterizedTypeReference<T> responseType)_			throws RestClientException_;execute,the,request,specified,in,the,given,link,request,entity,and,return,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,my,request,body,request,entity,request,request,entity,post,new,uri,quot,http,example,com,foo,quot,accept,media,type,body,body,parameterized,type,reference,lt,list,lt,my,response,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,response,gt,gt,response,entity,lt,list,lt,my,response,gt,gt,response,template,exchange,request,my,bean,pre,param,request,entity,the,entity,to,write,to,the,request,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,4,1;t,response,entity,t,exchange,request,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, ParameterizedTypeReference<T> responseType) 			throws RestClientException_;1495868221;Execute the request specified in the given {@link RequestEntity} and return_the response as {@link ResponseEntity}. The given_{@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_MyRequest body = ..._RequestEntity request = RequestEntity.post(new URI(&quot_http://example.com/foo&quot_)).accept(MediaType.APPLICATION_JSON).body(body)__ParameterizedTypeReference&lt_List&lt_MyResponse&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyResponse&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyResponse&gt_&gt_ response = template.exchange(request, myBean)__</pre>_@param requestEntity the entity to write to the request_@param responseType the type of the return value_@return the response as entity_@since 4.1;<T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, ParameterizedTypeReference<T> responseType)_			throws RestClientException_;execute,the,request,specified,in,the,given,link,request,entity,and,return,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,my,request,body,request,entity,request,request,entity,post,new,uri,quot,http,example,com,foo,quot,accept,media,type,body,body,parameterized,type,reference,lt,list,lt,my,response,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,response,gt,gt,response,entity,lt,list,lt,my,response,gt,gt,response,template,exchange,request,my,bean,pre,param,request,entity,the,entity,to,write,to,the,request,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,4,1;t,response,entity,t,exchange,request,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, ParameterizedTypeReference<T> responseType) 			throws RestClientException_;1496259743;Execute the request specified in the given {@link RequestEntity} and return_the response as {@link ResponseEntity}. The given_{@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_MyRequest body = ..._RequestEntity request = RequestEntity.post(new URI(&quot_http://example.com/foo&quot_)).accept(MediaType.APPLICATION_JSON).body(body)__ParameterizedTypeReference&lt_List&lt_MyResponse&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyResponse&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyResponse&gt_&gt_ response = template.exchange(request, myBean)__</pre>_@param requestEntity the entity to write to the request_@param responseType the type of the return value_@return the response as entity_@since 4.1;<T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, ParameterizedTypeReference<T> responseType)_			throws RestClientException_;execute,the,request,specified,in,the,given,link,request,entity,and,return,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,my,request,body,request,entity,request,request,entity,post,new,uri,quot,http,example,com,foo,quot,accept,media,type,body,body,parameterized,type,reference,lt,list,lt,my,response,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,response,gt,gt,response,entity,lt,list,lt,my,response,gt,gt,response,template,exchange,request,my,bean,pre,param,request,entity,the,entity,to,write,to,the,request,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,4,1;t,response,entity,t,exchange,request,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, ParameterizedTypeReference<T> responseType) 			throws RestClientException_;1496837955;Execute the request specified in the given {@link RequestEntity} and return_the response as {@link ResponseEntity}. The given_{@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_MyRequest body = ..._RequestEntity request = RequestEntity.post(new URI(&quot_http://example.com/foo&quot_)).accept(MediaType.APPLICATION_JSON).body(body)__ParameterizedTypeReference&lt_List&lt_MyResponse&gt_&gt_ myBean = new ParameterizedTypeReference&lt_List&lt_MyResponse&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyResponse&gt_&gt_ response = template.exchange(request, myBean)__</pre>_@param requestEntity the entity to write to the request_@param responseType the type of the return value_@return the response as entity_@since 4.1;<T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, ParameterizedTypeReference<T> responseType)_			throws RestClientException_;execute,the,request,specified,in,the,given,link,request,entity,and,return,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,my,request,body,request,entity,request,request,entity,post,new,uri,quot,http,example,com,foo,quot,accept,media,type,body,body,parameterized,type,reference,lt,list,lt,my,response,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,response,gt,gt,response,entity,lt,list,lt,my,response,gt,gt,response,template,exchange,request,my,bean,pre,param,request,entity,the,entity,to,write,to,the,request,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,4,1;t,response,entity,t,exchange,request,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, ParameterizedTypeReference<T> responseType) 			throws RestClientException_;1508532146;Execute the request specified in the given {@link RequestEntity} and return_the response as {@link ResponseEntity}. The given_{@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_MyRequest body = ..._RequestEntity request = RequestEntity_.post(new URI(&quot_http://example.com/foo&quot_))_.accept(MediaType.APPLICATION_JSON)_.body(body)__ParameterizedTypeReference&lt_List&lt_MyResponse&gt_&gt_ myBean =_new ParameterizedTypeReference&lt_List&lt_MyResponse&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyResponse&gt_&gt_ response = template.exchange(request, myBean)__</pre>_@param requestEntity the entity to write to the request_@param responseType the type of the return value_@return the response as entity_@since 4.1;<T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, ParameterizedTypeReference<T> responseType)_			throws RestClientException_;execute,the,request,specified,in,the,given,link,request,entity,and,return,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,my,request,body,request,entity,request,request,entity,post,new,uri,quot,http,example,com,foo,quot,accept,media,type,body,body,parameterized,type,reference,lt,list,lt,my,response,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,response,gt,gt,response,entity,lt,list,lt,my,response,gt,gt,response,template,exchange,request,my,bean,pre,param,request,entity,the,entity,to,write,to,the,request,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,4,1;t,response,entity,t,exchange,request,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, ParameterizedTypeReference<T> responseType) 			throws RestClientException_;1509980418;Execute the request specified in the given {@link RequestEntity} and return_the response as {@link ResponseEntity}. The given_{@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_MyRequest body = ..._RequestEntity request = RequestEntity_.post(new URI(&quot_http://example.com/foo&quot_))_.accept(MediaType.APPLICATION_JSON)_.body(body)__ParameterizedTypeReference&lt_List&lt_MyResponse&gt_&gt_ myBean =_new ParameterizedTypeReference&lt_List&lt_MyResponse&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyResponse&gt_&gt_ response = template.exchange(request, myBean)__</pre>_@param requestEntity the entity to write to the request_@param responseType the type of the return value_@return the response as entity_@since 4.1;<T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, ParameterizedTypeReference<T> responseType)_			throws RestClientException_;execute,the,request,specified,in,the,given,link,request,entity,and,return,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,my,request,body,request,entity,request,request,entity,post,new,uri,quot,http,example,com,foo,quot,accept,media,type,body,body,parameterized,type,reference,lt,list,lt,my,response,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,response,gt,gt,response,entity,lt,list,lt,my,response,gt,gt,response,template,exchange,request,my,bean,pre,param,request,entity,the,entity,to,write,to,the,request,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,4,1;t,response,entity,t,exchange,request,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, ParameterizedTypeReference<T> responseType) 			throws RestClientException_;1510004038;Execute the request specified in the given {@link RequestEntity} and return_the response as {@link ResponseEntity}. The given_{@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_MyRequest body = ..._RequestEntity request = RequestEntity_.post(new URI(&quot_http://example.com/foo&quot_))_.accept(MediaType.APPLICATION_JSON)_.body(body)__ParameterizedTypeReference&lt_List&lt_MyResponse&gt_&gt_ myBean =_new ParameterizedTypeReference&lt_List&lt_MyResponse&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyResponse&gt_&gt_ response = template.exchange(request, myBean)__</pre>_@param requestEntity the entity to write to the request_@param responseType the type of the return value_@return the response as entity_@since 4.1;<T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, ParameterizedTypeReference<T> responseType)_			throws RestClientException_;execute,the,request,specified,in,the,given,link,request,entity,and,return,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,my,request,body,request,entity,request,request,entity,post,new,uri,quot,http,example,com,foo,quot,accept,media,type,body,body,parameterized,type,reference,lt,list,lt,my,response,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,response,gt,gt,response,entity,lt,list,lt,my,response,gt,gt,response,template,exchange,request,my,bean,pre,param,request,entity,the,entity,to,write,to,the,request,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,4,1;t,response,entity,t,exchange,request,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, ParameterizedTypeReference<T> responseType) 			throws RestClientException_;1532695280;Execute the request specified in the given {@link RequestEntity} and return_the response as {@link ResponseEntity}. The given_{@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_MyRequest body = ..._RequestEntity request = RequestEntity_.post(new URI(&quot_http://example.com/foo&quot_))_.accept(MediaType.APPLICATION_JSON)_.body(body)__ParameterizedTypeReference&lt_List&lt_MyResponse&gt_&gt_ myBean =_new ParameterizedTypeReference&lt_List&lt_MyResponse&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyResponse&gt_&gt_ response = template.exchange(request, myBean)__</pre>_@param requestEntity the entity to write to the request_@param responseType the type of the return value_@return the response as entity_@since 4.1;<T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, ParameterizedTypeReference<T> responseType)_			throws RestClientException_;execute,the,request,specified,in,the,given,link,request,entity,and,return,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,my,request,body,request,entity,request,request,entity,post,new,uri,quot,http,example,com,foo,quot,accept,media,type,body,body,parameterized,type,reference,lt,list,lt,my,response,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,response,gt,gt,response,entity,lt,list,lt,my,response,gt,gt,response,template,exchange,request,my,bean,pre,param,request,entity,the,entity,to,write,to,the,request,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,4,1;t,response,entity,t,exchange,request,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, ParameterizedTypeReference<T> responseType) 			throws RestClientException_;1534440670;Execute the request specified in the given {@link RequestEntity} and return_the response as {@link ResponseEntity}. The given_{@link ParameterizedTypeReference} is used to pass generic type information:_<pre class="code">_MyRequest body = ..._RequestEntity request = RequestEntity_.post(new URI(&quot_http://example.com/foo&quot_))_.accept(MediaType.APPLICATION_JSON)_.body(body)__ParameterizedTypeReference&lt_List&lt_MyResponse&gt_&gt_ myBean =_new ParameterizedTypeReference&lt_List&lt_MyResponse&gt_&gt_() {}__ResponseEntity&lt_List&lt_MyResponse&gt_&gt_ response = template.exchange(request, myBean)__</pre>_@param requestEntity the entity to write to the request_@param responseType the type of the return value_@return the response as entity_@since 4.1;<T> ResponseEntity<T> exchange(RequestEntity<?> requestEntity, ParameterizedTypeReference<T> responseType)_			throws RestClientException_;execute,the,request,specified,in,the,given,link,request,entity,and,return,the,response,as,link,response,entity,the,given,link,parameterized,type,reference,is,used,to,pass,generic,type,information,pre,class,code,my,request,body,request,entity,request,request,entity,post,new,uri,quot,http,example,com,foo,quot,accept,media,type,body,body,parameterized,type,reference,lt,list,lt,my,response,gt,gt,my,bean,new,parameterized,type,reference,lt,list,lt,my,response,gt,gt,response,entity,lt,list,lt,my,response,gt,gt,response,template,exchange,request,my,bean,pre,param,request,entity,the,entity,to,write,to,the,request,param,response,type,the,type,of,the,return,value,return,the,response,as,entity,since,4,1;t,response,entity,t,exchange,request,entity,request,entity,parameterized,type,reference,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1328020251;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link HttpEntity}._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be <code>null</code>_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity_@since 3.0.2;<T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,http,entity,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,code,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity,since,3,0,2;t,response,entity,t,post,for,entity,string,url,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1345666836;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link HttpEntity}._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be <code>null</code>_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity_@since 3.0.2;<T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,http,entity,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,code,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity,since,3,0,2;t,response,entity,t,post,for,entity,string,url,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1356735495;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link HttpEntity}._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity_@since 3.0.2;<T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,http,entity,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity,since,3,0,2;t,response,entity,t,post,for,entity,string,url,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1377627757;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link HttpEntity}._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity_@since 3.0.2;<T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,http,entity,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity,since,3,0,2;t,response,entity,t,post,for,entity,string,url,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1404245400;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link HttpEntity}._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity_@since 3.0.2;<T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,http,entity,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity,since,3,0,2;t,response,entity,t,post,for,entity,string,url,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1404245400;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link HttpEntity}._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity_@since 3.0.2;<T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,http,entity,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity,since,3,0,2;t,response,entity,t,post,for,entity,string,url,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1409790625;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link HttpEntity}._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity_@since 3.0.2;<T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,http,entity,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity,since,3,0,2;t,response,entity,t,post,for,entity,string,url,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1431938798;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link HttpEntity}._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity_@since 3.0.2;<T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,http,entity,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity,since,3,0,2;t,response,entity,t,post,for,entity,string,url,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1431949687;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link HttpEntity}._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity_@since 3.0.2;<T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,http,entity,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity,since,3,0,2;t,response,entity,t,post,for,entity,string,url,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1479374349;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link HttpEntity}._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity_@since 3.0.2;<T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,http,entity,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity,since,3,0,2;t,response,entity,t,post,for,entity,string,url,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1481218770;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link HttpEntity}._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the converted object_@since 3.0.2_@see HttpEntity;<T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,http,entity,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,3,0,2,see,http,entity;t,response,entity,t,post,for,entity,string,url,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1482265068;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link HttpEntity}._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the converted object_@since 3.0.2_@see HttpEntity;<T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,http,entity,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,3,0,2,see,http,entity;t,response,entity,t,post,for,entity,string,url,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1482841963;Create a new resource by POSTing the given object to the URI template,_and returns the response as {@link HttpEntity}._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param uriVariables the variables to expand the template_@return the converted object_@since 3.0.2_@see HttpEntity;<T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,response,as,link,http,entity,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,3,0,2,see,http,entity;t,response,entity,t,post,for,entity,string,url,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T patchForObject(String url, @Nullable Object request, Class<T> responseType, 			Map<String, ?> uriVariables) throws RestClientException_;1508532146;Update a resource by PATCHing the given object to the URI template,_and return the representation found in the response._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p><b>NOTE: The standard JDK HTTP library does not support HTTP PATCH._You need to use the Apache HttpComponents or OkHttp request factory.</b>_@param url the URL_@param request the object to be PATCHed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@since 4.3.5_@see HttpEntity_@see RestTemplate#setRequestFactory_@see org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory_@see org.springframework.http.client.OkHttp3ClientHttpRequestFactory;@Nullable_	<T> T patchForObject(String url, @Nullable Object request, Class<T> responseType,_			Map<String, ?> uriVariables) throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,uri,template,and,return,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,b,note,the,standard,jdk,http,library,does,not,support,http,patch,you,need,to,use,the,apache,http,components,or,ok,http,request,factory,b,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,4,3,5,see,http,entity,see,rest,template,set,request,factory,see,org,springframework,http,client,http,components,async,client,http,request,factory,see,org,springframework,http,client,ok,http3client,http,request,factory;nullable,t,t,patch,for,object,string,url,nullable,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T patchForObject(String url, @Nullable Object request, Class<T> responseType, 			Map<String, ?> uriVariables) throws RestClientException_;1509980418;Update a resource by PATCHing the given object to the URI template,_and return the representation found in the response._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p><b>NOTE: The standard JDK HTTP library does not support HTTP PATCH._You need to use the Apache HttpComponents or OkHttp request factory.</b>_@param url the URL_@param request the object to be PATCHed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@since 4.3.5_@see HttpEntity_@see RestTemplate#setRequestFactory_@see org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory_@see org.springframework.http.client.OkHttp3ClientHttpRequestFactory;@Nullable_	<T> T patchForObject(String url, @Nullable Object request, Class<T> responseType,_			Map<String, ?> uriVariables) throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,uri,template,and,return,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,b,note,the,standard,jdk,http,library,does,not,support,http,patch,you,need,to,use,the,apache,http,components,or,ok,http,request,factory,b,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,4,3,5,see,http,entity,see,rest,template,set,request,factory,see,org,springframework,http,client,http,components,async,client,http,request,factory,see,org,springframework,http,client,ok,http3client,http,request,factory;nullable,t,t,patch,for,object,string,url,nullable,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T patchForObject(String url, @Nullable Object request, Class<T> responseType, 			Map<String, ?> uriVariables) throws RestClientException_;1510004038;Update a resource by PATCHing the given object to the URI template,_and return the representation found in the response._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p><b>NOTE: The standard JDK HTTP library does not support HTTP PATCH._You need to use the Apache HttpComponents or OkHttp request factory.</b>_@param url the URL_@param request the object to be PATCHed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@since 4.3.5_@see HttpEntity_@see RestTemplate#setRequestFactory_@see org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory_@see org.springframework.http.client.OkHttp3ClientHttpRequestFactory;@Nullable_	<T> T patchForObject(String url, @Nullable Object request, Class<T> responseType,_			Map<String, ?> uriVariables) throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,uri,template,and,return,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,b,note,the,standard,jdk,http,library,does,not,support,http,patch,you,need,to,use,the,apache,http,components,or,ok,http,request,factory,b,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,4,3,5,see,http,entity,see,rest,template,set,request,factory,see,org,springframework,http,client,http,components,async,client,http,request,factory,see,org,springframework,http,client,ok,http3client,http,request,factory;nullable,t,t,patch,for,object,string,url,nullable,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T patchForObject(String url, @Nullable Object request, Class<T> responseType, 			Map<String, ?> uriVariables) throws RestClientException_;1532695280;Update a resource by PATCHing the given object to the URI template,_and return the representation found in the response._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p><b>NOTE: The standard JDK HTTP library does not support HTTP PATCH._You need to use the Apache HttpComponents or OkHttp request factory.</b>_@param url the URL_@param request the object to be PATCHed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@since 4.3.5_@see HttpEntity_@see RestTemplate#setRequestFactory_@see org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory_@see org.springframework.http.client.OkHttp3ClientHttpRequestFactory;@Nullable_	<T> T patchForObject(String url, @Nullable Object request, Class<T> responseType,_			Map<String, ?> uriVariables) throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,uri,template,and,return,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,b,note,the,standard,jdk,http,library,does,not,support,http,patch,you,need,to,use,the,apache,http,components,or,ok,http,request,factory,b,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,4,3,5,see,http,entity,see,rest,template,set,request,factory,see,org,springframework,http,client,http,components,async,client,http,request,factory,see,org,springframework,http,client,ok,http3client,http,request,factory;nullable,t,t,patch,for,object,string,url,nullable,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> @Nullable 	<T> T patchForObject(String url, @Nullable Object request, Class<T> responseType, 			Map<String, ?> uriVariables) throws RestClientException_;1534440670;Update a resource by PATCHing the given object to the URI template,_and return the representation found in the response._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._<p><b>NOTE: The standard JDK HTTP library does not support HTTP PATCH._You need to use the Apache HttpComponents or OkHttp request factory.</b>_@param url the URL_@param request the object to be PATCHed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@since 4.3.5_@see HttpEntity_@see RestTemplate#setRequestFactory_@see org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory_@see org.springframework.http.client.OkHttp3ClientHttpRequestFactory;@Nullable_	<T> T patchForObject(String url, @Nullable Object request, Class<T> responseType,_			Map<String, ?> uriVariables) throws RestClientException_;update,a,resource,by,patching,the,given,object,to,the,uri,template,and,return,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,p,b,note,the,standard,jdk,http,library,does,not,support,http,patch,you,need,to,use,the,apache,http,components,or,ok,http,request,factory,b,param,url,the,url,param,request,the,object,to,be,patched,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,since,4,3,5,see,http,entity,see,rest,template,set,request,factory,see,org,springframework,http,client,http,components,async,client,http,request,factory,see,org,springframework,http,client,ok,http3client,http,request,factory;nullable,t,t,patch,for,object,string,url,nullable,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Object... uriVariables) throws RestClientException_;1328020251;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template;void delete(String url, Object... uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template;void,delete,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Object... uriVariables) throws RestClientException_;1345666836;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template;void delete(String url, Object... uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template;void,delete,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Object... uriVariables) throws RestClientException_;1356735495;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template;void delete(String url, Object... uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template;void,delete,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Object... uriVariables) throws RestClientException_;1377627757;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template;void delete(String url, Object... uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template;void,delete,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Object... uriVariables) throws RestClientException_;1404245400;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template;void delete(String url, Object... uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template;void,delete,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Object... uriVariables) throws RestClientException_;1404245400;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template;void delete(String url, Object... uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template;void,delete,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Object... uriVariables) throws RestClientException_;1409790625;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template;void delete(String url, Object... uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template;void,delete,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Object... uriVariables) throws RestClientException_;1431938798;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template;void delete(String url, Object... uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template;void,delete,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Object... uriVariables) throws RestClientException_;1431949687;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template;void delete(String url, Object... uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template;void,delete,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Object... uriVariables) throws RestClientException_;1479374349;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template;void delete(String url, Object... uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template;void,delete,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Object... uriVariables) throws RestClientException_;1481218770;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template;void delete(String url, Object... uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template;void,delete,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Object... uriVariables) throws RestClientException_;1482265068;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template;void delete(String url, Object... uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template;void,delete,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Object... uriVariables) throws RestClientException_;1482841963;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template;void delete(String url, Object... uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template;void,delete,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Object... uriVariables) throws RestClientException_;1495868221;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template;void delete(String url, Object... uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template;void,delete,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Object... uriVariables) throws RestClientException_;1496259743;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template;void delete(String url, Object... uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template;void,delete,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Object... uriVariables) throws RestClientException_;1496837955;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template;void delete(String url, Object... uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template;void,delete,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Object... uriVariables) throws RestClientException_;1508532146;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template;void delete(String url, Object... uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template;void,delete,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Object... uriVariables) throws RestClientException_;1509980418;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template;void delete(String url, Object... uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template;void,delete,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Object... uriVariables) throws RestClientException_;1510004038;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template;void delete(String url, Object... uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template;void,delete,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Object... uriVariables) throws RestClientException_;1532695280;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template;void delete(String url, Object... uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template;void,delete,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> void delete(String url, Object... uriVariables) throws RestClientException_;1534440670;Delete the resources at the specified URI._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param uriVariables the variables to expand in the template;void delete(String url, Object... uriVariables) throws RestClientException_;delete,the,resources,at,the,specified,uri,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,uri,variables,the,variables,to,expand,in,the,template;void,delete,string,url,object,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1495868221;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,nullable,http,entity,request,entity,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1496259743;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,nullable,http,entity,request,entity,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1496837955;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,nullable,http,entity,request,entity,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1508532146;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,nullable,http,entity,request,entity,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1509980418;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,nullable,http,entity,request,entity,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1510004038;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,nullable,http,entity,request,entity,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1532695280;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,nullable,http,entity,request,entity,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity, 			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;1534440670;Execute the HTTP method to the given URI template, writing the given request entity to the request, and_returns the response as {@link ResponseEntity}._<p>URI Template variables are expanded using the given URI variables, if any._@param url the URL_@param method the HTTP method (GET, POST, etc)_@param requestEntity the entity (headers and/or body) to write to the request_(may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand in the template_@return the response as entity_@since 3.0.2;<T> ResponseEntity<T> exchange(String url, HttpMethod method, @Nullable HttpEntity<?> requestEntity,_			Class<T> responseType, Map<String, ?> uriVariables) throws RestClientException_;execute,the,http,method,to,the,given,uri,template,writing,the,given,request,entity,to,the,request,and,returns,the,response,as,link,response,entity,p,uri,template,variables,are,expanded,using,the,given,uri,variables,if,any,param,url,the,url,param,method,the,http,method,get,post,etc,param,request,entity,the,entity,headers,and,or,body,to,write,to,the,request,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,in,the,template,return,the,response,as,entity,since,3,0,2;t,response,entity,t,exchange,string,url,http,method,method,nullable,http,entity,request,entity,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, @Nullable Object request, Map<String, ?> uriVariables) throws RestClientException_;1495868221;Creates a new resource by PUTting the given object to URI template._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT (may be {@code null})_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, @Nullable Object request, Map<String, ?> uriVariables) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,nullable,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, @Nullable Object request, Map<String, ?> uriVariables) throws RestClientException_;1496259743;Creates a new resource by PUTting the given object to URI template._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT (may be {@code null})_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, @Nullable Object request, Map<String, ?> uriVariables) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,nullable,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, @Nullable Object request, Map<String, ?> uriVariables) throws RestClientException_;1496837955;Creates a new resource by PUTting the given object to URI template._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT (may be {@code null})_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, @Nullable Object request, Map<String, ?> uriVariables) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,nullable,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, @Nullable Object request, Map<String, ?> uriVariables) throws RestClientException_;1508532146;Creates a new resource by PUTting the given object to URI template._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT (may be {@code null})_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, @Nullable Object request, Map<String, ?> uriVariables) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,nullable,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, @Nullable Object request, Map<String, ?> uriVariables) throws RestClientException_;1509980418;Creates a new resource by PUTting the given object to URI template._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT (may be {@code null})_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, @Nullable Object request, Map<String, ?> uriVariables) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,nullable,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, @Nullable Object request, Map<String, ?> uriVariables) throws RestClientException_;1510004038;Creates a new resource by PUTting the given object to URI template._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT (may be {@code null})_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, @Nullable Object request, Map<String, ?> uriVariables) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,nullable,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, @Nullable Object request, Map<String, ?> uriVariables) throws RestClientException_;1532695280;Creates a new resource by PUTting the given object to URI template._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT (may be {@code null})_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, @Nullable Object request, Map<String, ?> uriVariables) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,nullable,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> void put(String url, @Nullable Object request, Map<String, ?> uriVariables) throws RestClientException_;1534440670;Creates a new resource by PUTting the given object to URI template._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be PUT (may be {@code null})_@param uriVariables the variables to expand the template_@see HttpEntity;void put(String url, @Nullable Object request, Map<String, ?> uriVariables) throws RestClientException_;creates,a,new,resource,by,putting,the,given,object,to,uri,template,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,put,may,be,code,null,param,uri,variables,the,variables,to,expand,the,template,see,http,entity;void,put,string,url,nullable,object,request,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;1328020251;Retrieve a representation by doing a GET on the URL ._The response is converted and stored in an {@link ResponseEntity}._@param url the URL_@param responseType the type of the return value_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,is,converted,and,stored,in,an,link,response,entity,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;1345666836;Retrieve a representation by doing a GET on the URL ._The response is converted and stored in an {@link ResponseEntity}._@param url the URL_@param responseType the type of the return value_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,is,converted,and,stored,in,an,link,response,entity,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;1356735495;Retrieve a representation by doing a GET on the URL ._The response is converted and stored in an {@link ResponseEntity}._@param url the URL_@param responseType the type of the return value_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,is,converted,and,stored,in,an,link,response,entity,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;1377627757;Retrieve a representation by doing a GET on the URL ._The response is converted and stored in an {@link ResponseEntity}._@param url the URL_@param responseType the type of the return value_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,is,converted,and,stored,in,an,link,response,entity,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;1404245400;Retrieve a representation by doing a GET on the URL ._The response is converted and stored in an {@link ResponseEntity}._@param url the URL_@param responseType the type of the return value_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,is,converted,and,stored,in,an,link,response,entity,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;1404245400;Retrieve a representation by doing a GET on the URL ._The response is converted and stored in an {@link ResponseEntity}._@param url the URL_@param responseType the type of the return value_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,is,converted,and,stored,in,an,link,response,entity,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;1409790625;Retrieve a representation by doing a GET on the URL ._The response is converted and stored in an {@link ResponseEntity}._@param url the URL_@param responseType the type of the return value_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,is,converted,and,stored,in,an,link,response,entity,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;1431938798;Retrieve a representation by doing a GET on the URL ._The response is converted and stored in an {@link ResponseEntity}._@param url the URL_@param responseType the type of the return value_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,is,converted,and,stored,in,an,link,response,entity,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;1431949687;Retrieve a representation by doing a GET on the URL ._The response is converted and stored in an {@link ResponseEntity}._@param url the URL_@param responseType the type of the return value_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,is,converted,and,stored,in,an,link,response,entity,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;1479374349;Retrieve a representation by doing a GET on the URL ._The response is converted and stored in an {@link ResponseEntity}._@param url the URL_@param responseType the type of the return value_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,is,converted,and,stored,in,an,link,response,entity,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;1481218770;Retrieve a representation by doing a GET on the URL ._The response is converted and stored in an {@link ResponseEntity}._@param url the URL_@param responseType the type of the return value_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,is,converted,and,stored,in,an,link,response,entity,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;1482265068;Retrieve a representation by doing a GET on the URL ._The response is converted and stored in an {@link ResponseEntity}._@param url the URL_@param responseType the type of the return value_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,is,converted,and,stored,in,an,link,response,entity,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;1482841963;Retrieve a representation by doing a GET on the URL ._The response is converted and stored in an {@link ResponseEntity}._@param url the URL_@param responseType the type of the return value_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,is,converted,and,stored,in,an,link,response,entity,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;1495868221;Retrieve a representation by doing a GET on the URL ._The response is converted and stored in an {@link ResponseEntity}._@param url the URL_@param responseType the type of the return value_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,is,converted,and,stored,in,an,link,response,entity,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;1496259743;Retrieve a representation by doing a GET on the URL ._The response is converted and stored in an {@link ResponseEntity}._@param url the URL_@param responseType the type of the return value_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,is,converted,and,stored,in,an,link,response,entity,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;1496837955;Retrieve a representation by doing a GET on the URL ._The response is converted and stored in an {@link ResponseEntity}._@param url the URL_@param responseType the type of the return value_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,is,converted,and,stored,in,an,link,response,entity,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;1508532146;Retrieve a representation by doing a GET on the URL ._The response is converted and stored in an {@link ResponseEntity}._@param url the URL_@param responseType the type of the return value_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,is,converted,and,stored,in,an,link,response,entity,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;1509980418;Retrieve a representation by doing a GET on the URL ._The response is converted and stored in an {@link ResponseEntity}._@param url the URL_@param responseType the type of the return value_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,is,converted,and,stored,in,an,link,response,entity,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;1510004038;Retrieve a representation by doing a GET on the URL ._The response is converted and stored in an {@link ResponseEntity}._@param url the URL_@param responseType the type of the return value_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,is,converted,and,stored,in,an,link,response,entity,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;1532695280;Retrieve a representation by doing a GET on the URL ._The response is converted and stored in an {@link ResponseEntity}._@param url the URL_@param responseType the type of the return value_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,is,converted,and,stored,in,an,link,response,entity,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;1534440670;Retrieve a representation by doing a GET on the URL ._The response is converted and stored in an {@link ResponseEntity}._@param url the URL_@param responseType the type of the return value_@return the converted object_@since 3.0.2;<T> ResponseEntity<T> getForEntity(URI url, Class<T> responseType) throws RestClientException_;retrieve,a,representation,by,doing,a,get,on,the,url,the,response,is,converted,and,stored,in,an,link,response,entity,param,url,the,url,param,response,type,the,type,of,the,return,value,return,the,converted,object,since,3,0,2;t,response,entity,t,get,for,entity,uri,url,class,t,response,type,throws,rest,client,exception
RestOperations -> <T> T postForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1328020251;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be <code>null</code>_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;<T> T postForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,code,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;t,t,post,for,object,string,url,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T postForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1345666836;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be <code>null</code>_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;<T> T postForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,code,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;t,t,post,for,object,string,url,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T postForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1356735495;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;<T> T postForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;t,t,post,for,object,string,url,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T postForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1377627757;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;<T> T postForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;t,t,post,for,object,string,url,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T postForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1404245400;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;<T> T postForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;t,t,post,for,object,string,url,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T postForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1404245400;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;<T> T postForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;t,t,post,for,object,string,url,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T postForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1409790625;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;<T> T postForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;t,t,post,for,object,string,url,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T postForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1431938798;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;<T> T postForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;t,t,post,for,object,string,url,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T postForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1431949687;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;<T> T postForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;t,t,post,for,object,string,url,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T postForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1479374349;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed, may be {@code null}_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;<T> T postForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;t,t,post,for,object,string,url,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T postForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1481218770;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;<T> T postForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;t,t,post,for,object,string,url,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T postForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1482265068;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;<T> T postForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;t,t,post,for,object,string,url,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
RestOperations -> <T> T postForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables) 			throws RestClientException_;1482841963;Create a new resource by POSTing the given object to the URI template,_and returns the representation found in the response._<p>URI Template variables are expanded using the given map._<p>The {@code request} parameter can be a {@link HttpEntity} in order to_add additional HTTP headers to the request._@param url the URL_@param request the Object to be POSTed (may be {@code null})_@param responseType the type of the return value_@param uriVariables the variables to expand the template_@return the converted object_@see HttpEntity;<T> T postForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables)_			throws RestClientException_;create,a,new,resource,by,posting,the,given,object,to,the,uri,template,and,returns,the,representation,found,in,the,response,p,uri,template,variables,are,expanded,using,the,given,map,p,the,code,request,parameter,can,be,a,link,http,entity,in,order,to,add,additional,http,headers,to,the,request,param,url,the,url,param,request,the,object,to,be,posted,may,be,code,null,param,response,type,the,type,of,the,return,value,param,uri,variables,the,variables,to,expand,the,template,return,the,converted,object,see,http,entity;t,t,post,for,object,string,url,object,request,class,t,response,type,map,string,uri,variables,throws,rest,client,exception
