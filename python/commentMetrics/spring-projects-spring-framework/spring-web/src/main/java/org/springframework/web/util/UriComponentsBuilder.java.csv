# id;timestamp;commentText;codeText;commentWords;codeWords
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1328020251;Returns a builder that is initialized with the given path.__@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1329142650;Returns a builder that is initialized with the given path.__@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1335903038;Returns a builder that is initialized with the given path.__@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1345652603;Returns a builder that is initialized with the given path.__@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1348582810;Returns a builder that is initialized with the given path.__@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1349904861;Returns a builder that is initialized with the given path.__@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1350918288;Returns a builder that is initialized with the given path.__@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1356735495;Returns a builder that is initialized with the given path.__@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1357119239;Returns a builder that is initialized with the given path.__@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1362408075;Returns a builder that is initialized with the given path.__@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1363208506;Returns a builder that is initialized with the given path.__@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1367580131;Returns a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1367955086;Returns a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1368482696;Returns a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1375201821;Returns a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1380131933;Returns a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1382387167;Returns a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1382387168;Returns a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1382744567;Returns a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1382754578;Returns a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1391723719;Returns a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1400538909;Returns a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1400541968;Returns a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1403775847;Returns a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1404917891;Returns a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1409317151;Returns a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1409318475;Returns a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1409822411;Returns a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1414695064;Returns a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1417799775;Returns a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1423547594;Returns a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1424274316;Returns a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1425610347;Returns a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1426255003;Returns a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1426266172;Returns a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1426267150;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1426553101;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1426880143;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1426880143;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1427143443;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1430734105;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1433951292;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1437567436;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1438166381;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1443431031;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1443797712;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1447791580;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1449004145;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1458830024;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1465299497;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1467730834;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1471517882;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1472594218;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1475874694;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1476136805;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1485553611;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1486074560;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1492678922;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1493758742;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1495868221;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1496837955;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1498780456;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1500460652;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1513715892;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1515504834;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1519588127;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1522332352;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1522351714;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1522361849;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1527192852;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1530174524;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1531746971;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1531843156;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1531863556;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1532041662;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1532041662;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1536571897;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1546464968;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1546963593;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(String path);1547005422;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQuery(@Nullable String query);1495868221;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQuery(@Nullable String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,nullable,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQuery(@Nullable String query);1496259743;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQuery(@Nullable String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,nullable,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQuery(@Nullable String query);1496370972;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQuery(@Nullable String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,nullable,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQuery(@Nullable String query);1496837955;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQuery(@Nullable String query) {_		this.queryParams.clear()__		if (query != null) {_			query(query)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,nullable,string,query,this,query,params,clear,if,query,null,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQuery(@Nullable String query);1498780456;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQuery(@Nullable String query) {_		this.queryParams.clear()__		if (query != null) {_			query(query)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,nullable,string,query,this,query,params,clear,if,query,null,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQuery(@Nullable String query);1500460652;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQuery(@Nullable String query) {_		this.queryParams.clear()__		if (query != null) {_			query(query)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,nullable,string,query,this,query,params,clear,if,query,null,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQuery(@Nullable String query);1513715892;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQuery(@Nullable String query) {_		this.queryParams.clear()__		if (query != null) {_			query(query)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,nullable,string,query,this,query,params,clear,if,query,null,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQuery(@Nullable String query);1515504834;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQuery(@Nullable String query) {_		this.queryParams.clear()__		if (query != null) {_			query(query)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,nullable,string,query,this,query,params,clear,if,query,null,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQuery(@Nullable String query);1519588127;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQuery(@Nullable String query) {_		this.queryParams.clear()__		if (query != null) {_			query(query)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,nullable,string,query,this,query,params,clear,if,query,null,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQuery(@Nullable String query);1522332352;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQuery(@Nullable String query) {_		this.queryParams.clear()__		if (query != null) {_			query(query)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,nullable,string,query,this,query,params,clear,if,query,null,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQuery(@Nullable String query);1522351714;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQuery(@Nullable String query) {_		this.queryParams.clear()__		if (query != null) {_			query(query)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,nullable,string,query,this,query,params,clear,if,query,null,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQuery(@Nullable String query);1522361849;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQuery(@Nullable String query) {_		this.queryParams.clear()__		if (query != null) {_			query(query)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,nullable,string,query,this,query,params,clear,if,query,null,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQuery(@Nullable String query);1527192852;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQuery(@Nullable String query) {_		this.queryParams.clear()__		if (query != null) {_			query(query)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,nullable,string,query,this,query,params,clear,if,query,null,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQuery(@Nullable String query);1530174524;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQuery(@Nullable String query) {_		this.queryParams.clear()__		if (query != null) {_			query(query)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,nullable,string,query,this,query,params,clear,if,query,null,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQuery(@Nullable String query);1531746971;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQuery(@Nullable String query) {_		this.queryParams.clear()__		if (query != null) {_			query(query)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,nullable,string,query,this,query,params,clear,if,query,null,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQuery(@Nullable String query);1531843156;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQuery(@Nullable String query) {_		this.queryParams.clear()__		if (query != null) {_			query(query)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,nullable,string,query,this,query,params,clear,if,query,null,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQuery(@Nullable String query);1531863556;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQuery(@Nullable String query) {_		this.queryParams.clear()__		if (query != null) {_			query(query)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,nullable,string,query,this,query,params,clear,if,query,null,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQuery(@Nullable String query);1532041662;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQuery(@Nullable String query) {_		this.queryParams.clear()__		if (query != null) {_			query(query)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,nullable,string,query,this,query,params,clear,if,query,null,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQuery(@Nullable String query);1532041662;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQuery(@Nullable String query) {_		this.queryParams.clear()__		if (query != null) {_			query(query)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,nullable,string,query,this,query,params,clear,if,query,null,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQuery(@Nullable String query);1536571897;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQuery(@Nullable String query) {_		this.queryParams.clear()__		if (query != null) {_			query(query)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,nullable,string,query,this,query,params,clear,if,query,null,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQuery(@Nullable String query);1546464968;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQuery(@Nullable String query) {_		this.queryParams.clear()__		if (query != null) {_			query(query)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,nullable,string,query,this,query,params,clear,if,query,null,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQuery(@Nullable String query);1546963593;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQuery(@Nullable String query) {_		this.queryParams.clear()__		if (query != null) {_			query(query)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,nullable,string,query,this,query,params,clear,if,query,null,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQuery(@Nullable String query);1547005422;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQuery(@Nullable String query) {_		this.queryParams.clear()__		if (query != null) {_			query(query)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,nullable,string,query,this,query,params,clear,if,query,null,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParam(String name, Object... values);1492678922;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParam(String name, Object... values);1493758742;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParam(String name, Object... values);1495868221;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParam(String name, Object... values);1496259743;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParam(String name, Object... values);1496370972;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParam(String name, Object... values);1496837955;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParam(String name, Object... values);1498780456;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParam(String name, Object... values);1500460652;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParam(String name, Object... values);1513715892;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar})._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParam(String name, Object... values);1515504834;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar})._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParam(String name, Object... values);1519588127;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar})._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParam(String name, Object... values);1522332352;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar})._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParam(String name, Object... values);1522351714;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar})._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParam(String name, Object... values);1522361849;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar})._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParam(String name, Object... values);1527192852;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar})._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParam(String name, Object... values);1530174524;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar})._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParam(String name, Object... values);1531746971;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar})._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParam(String name, Object... values);1531843156;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar})._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParam(String name, Object... values);1531863556;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar})._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParam(String name, Object... values);1532041662;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar})._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParam(String name, Object... values);1532041662;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar})._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParam(String name, Object... values);1536571897;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar})._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParam(String name, Object... values);1546464968;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar})._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParam(String name, Object... values);1546963593;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar})._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParam(String name, Object... values);1547005422;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar})._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(@Nullable String path);1496259743;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(@Nullable String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,nullable,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromPath(@Nullable String path);1496370972;Create a builder that is initialized with the given path._@param path the path to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromPath(@Nullable String path) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.path(path)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,path,param,path,the,path,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,path,nullable,string,path,uri,components,builder,builder,new,uri,components,builder,builder,path,path,return,builder
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(@Nullable String port);1495868221;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(@Nullable String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,nullable,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(@Nullable String port);1496259743;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(@Nullable String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,nullable,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(@Nullable String port);1496370972;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(@Nullable String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,nullable,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(@Nullable String port);1496837955;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(@Nullable String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,nullable,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(@Nullable String port);1498780456;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(@Nullable String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,nullable,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(@Nullable String port);1500460652;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(@Nullable String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,nullable,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(@Nullable String port);1513715892;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(@Nullable String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,nullable,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(@Nullable String port);1515504834;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(@Nullable String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,nullable,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(@Nullable String port);1519588127;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(@Nullable String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,nullable,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(@Nullable String port);1522332352;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(@Nullable String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,nullable,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(@Nullable String port);1522351714;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(@Nullable String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,nullable,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(@Nullable String port);1522361849;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(@Nullable String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,nullable,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(@Nullable String port);1527192852;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(@Nullable String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,nullable,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(@Nullable String port);1530174524;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(@Nullable String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,nullable,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(@Nullable String port);1531746971;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(@Nullable String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,nullable,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(@Nullable String port);1531843156;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(@Nullable String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,nullable,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(@Nullable String port);1531863556;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(@Nullable String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,nullable,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(@Nullable String port);1532041662;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(@Nullable String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,nullable,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(@Nullable String port);1532041662;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(@Nullable String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,nullable,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(@Nullable String port);1536571897;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(@Nullable String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,nullable,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(@Nullable String port);1546464968;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(@Nullable String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,nullable,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(@Nullable String port);1546963593;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(@Nullable String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,nullable,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(@Nullable String port);1547005422;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(@Nullable String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,nullable,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1328020251;Appends the given query parameter to the existing query parameters. The given name or any of the values may contain_URI template variables. If no values are given, the resulting URI will contain the query parameter name only (i.e._{@code ?foo} instead of {@code ?foo=bar}.__@param name   the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = value != null ? value.toString() : null__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		return this__	};appends,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1329142650;Appends the given query parameter to the existing query parameters. The given name or any of the values may contain_URI template variables. If no values are given, the resulting URI will contain the query parameter name only (i.e._{@code ?foo} instead of {@code ?foo=bar}.__@param name   the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = value != null ? value.toString() : null__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		return this__	};appends,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1335903038;Appends the given query parameter to the existing query parameters. The given name or any of the values may contain_URI template variables. If no values are given, the resulting URI will contain the query parameter name only (i.e._{@code ?foo} instead of {@code ?foo=bar}.__@param name   the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = value != null ? value.toString() : null__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		return this__	};appends,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1345652603;Appends the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}.__@param name_the query parameter name_@param values_the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = value != null ? value.toString() : null__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		return this__	};appends,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1348582810;Appends the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}.__@param name_the query parameter name_@param values_the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = value != null ? value.toString() : null__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1349904861;Appends the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}.__@param name_the query parameter name_@param values_the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = value != null ? value.toString() : null__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1350918288;Appends the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}.__@param name_the query parameter name_@param values_the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = value != null ? value.toString() : null__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1356735495;Appends the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}.__@param name_the query parameter name_@param values_the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = value != null ? value.toString() : null__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1357119239;Appends the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}.__@param name_the query parameter name_@param values_the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = value != null ? value.toString() : null__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1362408075;Appends the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}.__@param name_the query parameter name_@param values_the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = value != null ? value.toString() : null__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1363208506;Appends the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}.__@param name_the query parameter name_@param values_the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = value != null ? value.toString() : null__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1367580131;Appends the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = value != null ? value.toString() : null__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1367955086;Appends the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = value != null ? value.toString() : null__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1368482696;Appends the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = value != null ? value.toString() : null__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1375201821;Appends the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = value != null ? value.toString() : null__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1380131933;Appends the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = value != null ? value.toString() : null__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1382387167;Appends the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = value != null ? value.toString() : null__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1382387168;Appends the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = value != null ? value.toString() : null__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1382744567;Appends the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = value != null ? value.toString() : null__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1382754578;Appends the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = value != null ? value.toString() : null__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1391723719;Appends the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = value != null ? value.toString() : null__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1400538909;Appends the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = value != null ? value.toString() : null__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1400541968;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = value != null ? value.toString() : null__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1403775847;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = value != null ? value.toString() : null__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1404917891;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = value != null ? value.toString() : null__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1409317151;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = value != null ? value.toString() : null__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1409318475;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = value != null ? value.toString() : null__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1409822411;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1414695064;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1417799775;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1423547594;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1424274316;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1425610347;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1426255003;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1426266172;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1426267150;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1426553101;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1426880143;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1426880143;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1427143443;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1430734105;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1433951292;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1437567436;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1438166381;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1443431031;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1443797712;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1447791580;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1449004145;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1458830024;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1465299497;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1467730834;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1471517882;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1472594218;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1475874694;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1476136805;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1485553611;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParam(String name, Object... values);1486074560;Append the given query parameter to the existing query parameters. The_given name or any of the values may contain URI template variables. If no_values are given, the resulting URI will contain the query parameter name_only (i.e. {@code ?foo} instead of {@code ?foo=bar}._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder queryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		if (!ObjectUtils.isEmpty(values)) {_			for (Object value : values) {_				String valueAsString = (value != null ? value.toString() : null)__				this.queryParams.add(name, valueAsString)__			}_		}_		else {_			this.queryParams.add(name, null)__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,parameter,to,the,existing,query,parameters,the,given,name,or,any,of,the,values,may,contain,uri,template,variables,if,no,values,are,given,the,resulting,uri,will,contain,the,query,parameter,name,only,i,e,code,foo,instead,of,code,foo,bar,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,if,object,utils,is,empty,values,for,object,value,values,string,value,as,string,value,null,value,to,string,null,this,query,params,add,name,value,as,string,else,this,query,params,add,name,null,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder host(@Nullable String host);1495868221;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder host(@Nullable String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;override,public,uri,components,builder,host,nullable,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder host(@Nullable String host);1496259743;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder host(@Nullable String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;override,public,uri,components,builder,host,nullable,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder host(@Nullable String host);1496370972;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder host(@Nullable String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;override,public,uri,components,builder,host,nullable,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder host(@Nullable String host);1496837955;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder host(@Nullable String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;override,public,uri,components,builder,host,nullable,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder host(@Nullable String host);1498780456;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder host(@Nullable String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;override,public,uri,components,builder,host,nullable,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder host(@Nullable String host);1500460652;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder host(@Nullable String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;override,public,uri,components,builder,host,nullable,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder host(@Nullable String host);1513715892;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder host(@Nullable String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;override,public,uri,components,builder,host,nullable,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder host(@Nullable String host);1515504834;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder host(@Nullable String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;override,public,uri,components,builder,host,nullable,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder host(@Nullable String host);1519588127;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder host(@Nullable String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;override,public,uri,components,builder,host,nullable,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder host(@Nullable String host);1522332352;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder host(@Nullable String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;override,public,uri,components,builder,host,nullable,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder host(@Nullable String host);1522351714;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder host(@Nullable String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;override,public,uri,components,builder,host,nullable,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder host(@Nullable String host);1522361849;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder host(@Nullable String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;override,public,uri,components,builder,host,nullable,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder host(@Nullable String host);1527192852;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder host(@Nullable String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;override,public,uri,components,builder,host,nullable,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder host(@Nullable String host);1530174524;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder host(@Nullable String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;override,public,uri,components,builder,host,nullable,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder host(@Nullable String host);1531746971;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder host(@Nullable String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;override,public,uri,components,builder,host,nullable,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder host(@Nullable String host);1531843156;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder host(@Nullable String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;override,public,uri,components,builder,host,nullable,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder host(@Nullable String host);1531863556;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder host(@Nullable String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;override,public,uri,components,builder,host,nullable,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder host(@Nullable String host);1532041662;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder host(@Nullable String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;override,public,uri,components,builder,host,nullable,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder host(@Nullable String host);1532041662;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder host(@Nullable String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;override,public,uri,components,builder,host,nullable,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder host(@Nullable String host);1536571897;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder host(@Nullable String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;override,public,uri,components,builder,host,nullable,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder host(@Nullable String host);1546464968;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder host(@Nullable String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;override,public,uri,components,builder,host,nullable,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder host(@Nullable String host);1546963593;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder host(@Nullable String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;override,public,uri,components,builder,host,nullable,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder host(@Nullable String host);1547005422;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder host(@Nullable String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;override,public,uri,components,builder,host,nullable,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1328020251;Sets the query of this builder overriding all existing query parameters.__@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		return this__	};sets,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1329142650;Sets the query of this builder overriding all existing query parameters.__@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		return this__	};sets,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1335903038;Sets the query of this builder overriding all existing query parameters.__@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		return this__	};sets,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1345652603;Sets the query of this builder overriding all existing query parameters.__@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		return this__	};sets,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1348582810;Sets the query of this builder overriding all existing query parameters.__@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};sets,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1349904861;Sets the query of this builder overriding all existing query parameters.__@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};sets,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1350918288;Sets the query of this builder overriding all existing query parameters.__@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};sets,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1356735495;Sets the query of this builder overriding all existing query parameters.__@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};sets,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1357119239;Sets the query of this builder overriding all existing query parameters.__@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};sets,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1362408075;Sets the query of this builder overriding all existing query parameters.__@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};sets,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1363208506;Sets the query of this builder overriding all existing query parameters.__@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};sets,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1367580131;Sets the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};sets,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1367955086;Sets the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};sets,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1368482696;Sets the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};sets,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1375201821;Sets the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};sets,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1380131933;Sets the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};sets,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1382387167;Sets the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};sets,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1382387168;Sets the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};sets,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1382744567;Sets the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};sets,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1382754578;Sets the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};sets,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1391723719;Sets the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};sets,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1400538909;Sets the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};sets,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1400541968;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1403775847;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1404917891;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1409317151;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1409318475;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1409822411;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1414695064;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1417799775;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1423547594;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1424274316;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1425610347;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1426255003;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1426266172;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1426267150;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1426553101;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1426880143;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1426880143;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1427143443;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1430734105;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1433951292;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1437567436;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1438166381;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1443431031;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1443797712;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1447791580;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1449004145;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1458830024;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1465299497;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1467730834;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1471517882;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1472594218;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1475874694;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1476136805;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1485553611;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQuery(String query);1486074560;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public Object clone();1458830024;Public declaration of Object's {@code clone()} method._Delegates to {@link #cloneBuilder()}._@see Object#clone();@Override_	public Object clone() {_		return cloneBuilder()__	};public,declaration,of,object,s,code,clone,method,delegates,to,link,clone,builder,see,object,clone;override,public,object,clone,return,clone,builder
UriComponentsBuilder -> @Override 	public Object clone();1465299497;Public declaration of Object's {@code clone()} method._Delegates to {@link #cloneBuilder()}._@see Object#clone();@Override_	public Object clone() {_		return cloneBuilder()__	};public,declaration,of,object,s,code,clone,method,delegates,to,link,clone,builder,see,object,clone;override,public,object,clone,return,clone,builder
UriComponentsBuilder -> @Override 	public Object clone();1467730834;Public declaration of Object's {@code clone()} method._Delegates to {@link #cloneBuilder()}._@see Object#clone();@Override_	public Object clone() {_		return cloneBuilder()__	};public,declaration,of,object,s,code,clone,method,delegates,to,link,clone,builder,see,object,clone;override,public,object,clone,return,clone,builder
UriComponentsBuilder -> @Override 	public Object clone();1471517882;Public declaration of Object's {@code clone()} method._Delegates to {@link #cloneBuilder()}._@see Object#clone();@Override_	public Object clone() {_		return cloneBuilder()__	};public,declaration,of,object,s,code,clone,method,delegates,to,link,clone,builder,see,object,clone;override,public,object,clone,return,clone,builder
UriComponentsBuilder -> @Override 	public Object clone();1472594218;Public declaration of Object's {@code clone()} method._Delegates to {@link #cloneBuilder()}._@see Object#clone();@Override_	public Object clone() {_		return cloneBuilder()__	};public,declaration,of,object,s,code,clone,method,delegates,to,link,clone,builder,see,object,clone;override,public,object,clone,return,clone,builder
UriComponentsBuilder -> @Override 	public Object clone();1475874694;Public declaration of Object's {@code clone()} method._Delegates to {@link #cloneBuilder()}._@see Object#clone();@Override_	public Object clone() {_		return cloneBuilder()__	};public,declaration,of,object,s,code,clone,method,delegates,to,link,clone,builder,see,object,clone;override,public,object,clone,return,clone,builder
UriComponentsBuilder -> @Override 	public Object clone();1476136805;Public declaration of Object's {@code clone()} method._Delegates to {@link #cloneBuilder()}._@see Object#clone();@Override_	public Object clone() {_		return cloneBuilder()__	};public,declaration,of,object,s,code,clone,method,delegates,to,link,clone,builder,see,object,clone;override,public,object,clone,return,clone,builder
UriComponentsBuilder -> @Override 	public Object clone();1485553611;Public declaration of Object's {@code clone()} method._Delegates to {@link #cloneBuilder()}._@see Object#clone();@Override_	public Object clone() {_		return cloneBuilder()__	};public,declaration,of,object,s,code,clone,method,delegates,to,link,clone,builder,see,object,clone;override,public,object,clone,return,clone,builder
UriComponentsBuilder -> @Override 	public Object clone();1486074560;Public declaration of Object's {@code clone()} method._Delegates to {@link #cloneBuilder()}._@see Object#clone();@Override_	public Object clone() {_		return cloneBuilder()__	};public,declaration,of,object,s,code,clone,method,delegates,to,link,clone,builder,see,object,clone;override,public,object,clone,return,clone,builder
UriComponentsBuilder -> @Override 	public Object clone();1492678922;Public declaration of Object's {@code clone()} method._Delegates to {@link #cloneBuilder()}.;@Override_	public Object clone() {_		return cloneBuilder()__	};public,declaration,of,object,s,code,clone,method,delegates,to,link,clone,builder;override,public,object,clone,return,clone,builder
UriComponentsBuilder -> @Override 	public Object clone();1493758742;Public declaration of Object's {@code clone()} method._Delegates to {@link #cloneBuilder()}.;@Override_	public Object clone() {_		return cloneBuilder()__	};public,declaration,of,object,s,code,clone,method,delegates,to,link,clone,builder;override,public,object,clone,return,clone,builder
UriComponentsBuilder -> @Override 	public Object clone();1495868221;Public declaration of Object's {@code clone()} method._Delegates to {@link #cloneBuilder()}.;@Override_	public Object clone() {_		return cloneBuilder()__	};public,declaration,of,object,s,code,clone,method,delegates,to,link,clone,builder;override,public,object,clone,return,clone,builder
UriComponentsBuilder -> @Override 	public Object clone();1496259743;Public declaration of Object's {@code clone()} method._Delegates to {@link #cloneBuilder()}.;@Override_	public Object clone() {_		return cloneBuilder()__	};public,declaration,of,object,s,code,clone,method,delegates,to,link,clone,builder;override,public,object,clone,return,clone,builder
UriComponentsBuilder -> @Override 	public Object clone();1496370972;Public declaration of Object's {@code clone()} method._Delegates to {@link #cloneBuilder()}.;@Override_	public Object clone() {_		return cloneBuilder()__	};public,declaration,of,object,s,code,clone,method,delegates,to,link,clone,builder;override,public,object,clone,return,clone,builder
UriComponentsBuilder -> @Override 	public Object clone();1496837955;Public declaration of Object's {@code clone()} method._Delegates to {@link #cloneBuilder()}.;@Override_	public Object clone() {_		return cloneBuilder()__	};public,declaration,of,object,s,code,clone,method,delegates,to,link,clone,builder;override,public,object,clone,return,clone,builder
UriComponentsBuilder -> @Override 	public Object clone();1498780456;Public declaration of Object's {@code clone()} method._Delegates to {@link #cloneBuilder()}.;@Override_	public Object clone() {_		return cloneBuilder()__	};public,declaration,of,object,s,code,clone,method,delegates,to,link,clone,builder;override,public,object,clone,return,clone,builder
UriComponentsBuilder -> @Override 	public Object clone();1500460652;Public declaration of Object's {@code clone()} method._Delegates to {@link #cloneBuilder()}.;@Override_	public Object clone() {_		return cloneBuilder()__	};public,declaration,of,object,s,code,clone,method,delegates,to,link,clone,builder;override,public,object,clone,return,clone,builder
UriComponentsBuilder -> @Override 	public Object clone();1513715892;Public declaration of Object's {@code clone()} method._Delegates to {@link #cloneBuilder()}.;@Override_	public Object clone() {_		return cloneBuilder()__	};public,declaration,of,object,s,code,clone,method,delegates,to,link,clone,builder;override,public,object,clone,return,clone,builder
UriComponentsBuilder -> @Override 	public Object clone();1515504834;Public declaration of Object's {@code clone()} method._Delegates to {@link #cloneBuilder()}.;@Override_	public Object clone() {_		return cloneBuilder()__	};public,declaration,of,object,s,code,clone,method,delegates,to,link,clone,builder;override,public,object,clone,return,clone,builder
UriComponentsBuilder -> @Override 	public Object clone();1519588127;Public declaration of Object's {@code clone()} method._Delegates to {@link #cloneBuilder()}.;@Override_	public Object clone() {_		return cloneBuilder()__	};public,declaration,of,object,s,code,clone,method,delegates,to,link,clone,builder;override,public,object,clone,return,clone,builder
UriComponentsBuilder -> @Override 	public Object clone();1522332352;Public declaration of Object's {@code clone()} method._Delegates to {@link #cloneBuilder()}.;@Override_	public Object clone() {_		return cloneBuilder()__	};public,declaration,of,object,s,code,clone,method,delegates,to,link,clone,builder;override,public,object,clone,return,clone,builder
UriComponentsBuilder -> @Override 	public Object clone();1522351714;Public declaration of Object's {@code clone()} method._Delegates to {@link #cloneBuilder()}.;@Override_	public Object clone() {_		return cloneBuilder()__	};public,declaration,of,object,s,code,clone,method,delegates,to,link,clone,builder;override,public,object,clone,return,clone,builder
UriComponentsBuilder -> @Override 	public Object clone();1522361849;Public declaration of Object's {@code clone()} method._Delegates to {@link #cloneBuilder()}.;@Override_	public Object clone() {_		return cloneBuilder()__	};public,declaration,of,object,s,code,clone,method,delegates,to,link,clone,builder;override,public,object,clone,return,clone,builder
UriComponentsBuilder -> @Override 	public Object clone();1527192852;Public declaration of Object's {@code clone()} method._Delegates to {@link #cloneBuilder()}.;@Override_	public Object clone() {_		return cloneBuilder()__	};public,declaration,of,object,s,code,clone,method,delegates,to,link,clone,builder;override,public,object,clone,return,clone,builder
UriComponentsBuilder -> @Override 	public Object clone();1530174524;Public declaration of Object's {@code clone()} method._Delegates to {@link #cloneBuilder()}.;@Override_	public Object clone() {_		return cloneBuilder()__	};public,declaration,of,object,s,code,clone,method,delegates,to,link,clone,builder;override,public,object,clone,return,clone,builder
UriComponentsBuilder -> @Override 	public Object clone();1531746971;Public declaration of Object's {@code clone()} method._Delegates to {@link #cloneBuilder()}.;@Override_	public Object clone() {_		return cloneBuilder()__	};public,declaration,of,object,s,code,clone,method,delegates,to,link,clone,builder;override,public,object,clone,return,clone,builder
UriComponentsBuilder -> @Override 	public Object clone();1531843156;Public declaration of Object's {@code clone()} method._Delegates to {@link #cloneBuilder()}.;@Override_	public Object clone() {_		return cloneBuilder()__	};public,declaration,of,object,s,code,clone,method,delegates,to,link,clone,builder;override,public,object,clone,return,clone,builder
UriComponentsBuilder -> @Override 	public Object clone();1531863556;Public declaration of Object's {@code clone()} method._Delegates to {@link #cloneBuilder()}.;@Override_	public Object clone() {_		return cloneBuilder()__	};public,declaration,of,object,s,code,clone,method,delegates,to,link,clone,builder;override,public,object,clone,return,clone,builder
UriComponentsBuilder -> @Override 	public Object clone();1532041662;Public declaration of Object's {@code clone()} method._Delegates to {@link #cloneBuilder()}.;@Override_	public Object clone() {_		return cloneBuilder()__	};public,declaration,of,object,s,code,clone,method,delegates,to,link,clone,builder;override,public,object,clone,return,clone,builder
UriComponentsBuilder -> @Override 	public Object clone();1532041662;Public declaration of Object's {@code clone()} method._Delegates to {@link #cloneBuilder()}.;@Override_	public Object clone() {_		return cloneBuilder()__	};public,declaration,of,object,s,code,clone,method,delegates,to,link,clone,builder;override,public,object,clone,return,clone,builder
UriComponentsBuilder -> @Override 	public Object clone();1536571897;Public declaration of Object's {@code clone()} method._Delegates to {@link #cloneBuilder()}.;@Override_	public Object clone() {_		return cloneBuilder()__	};public,declaration,of,object,s,code,clone,method,delegates,to,link,clone,builder;override,public,object,clone,return,clone,builder
UriComponentsBuilder -> @Override 	public Object clone();1546464968;Public declaration of Object's {@code clone()} method._Delegates to {@link #cloneBuilder()}.;@Override_	public Object clone() {_		return cloneBuilder()__	};public,declaration,of,object,s,code,clone,method,delegates,to,link,clone,builder;override,public,object,clone,return,clone,builder
UriComponentsBuilder -> @Override 	public Object clone();1546963593;Public declaration of Object's {@code clone()} method._Delegates to {@link #cloneBuilder()}.;@Override_	public Object clone() {_		return cloneBuilder()__	};public,declaration,of,object,s,code,clone,method,delegates,to,link,clone,builder;override,public,object,clone,return,clone,builder
UriComponentsBuilder -> @Override 	public Object clone();1547005422;Public declaration of Object's {@code clone()} method._Delegates to {@link #cloneBuilder()}.;@Override_	public Object clone() {_		return cloneBuilder()__	};public,declaration,of,object,s,code,clone,method,delegates,to,link,clone,builder;override,public,object,clone,return,clone,builder
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1328020251;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}.__@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1329142650;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}.__@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1335903038;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}.__@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1345652603;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}.__@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1348582810;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}.__@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1349904861;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}.__@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1350918288;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}.__@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1356735495;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}.__@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1357119239;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}.__@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1362408075;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}.__@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1363208506;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}.__@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1367580131;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1367955086;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1368482696;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1375201821;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1380131933;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1382387167;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1382387168;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1382744567;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1382754578;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1391723719;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1400538909;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1400541968;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1403775847;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1404917891;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1409317151;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1409318475;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1409822411;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1414695064;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1417799775;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1423547594;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1424274316;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1425610347;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1426255003;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1426266172;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1426267150;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1426553101;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1426880143;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1426880143;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1427143443;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1430734105;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1433951292;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1437567436;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1438166381;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1443431031;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1443797712;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1447791580;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1449004145;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1458830024;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1465299497;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1467730834;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1471517882;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1472594218;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1475874694;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1476136805;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1485553611;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1486074560;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1492678922;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1493758742;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1495868221;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1496259743;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1496370972;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1496837955;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1498780456;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1500460652;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1513715892;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1515504834;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1519588127;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1522332352;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1522351714;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1522361849;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1527192852;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1530174524;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build(false).expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,false,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1531746971;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build().expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1531843156;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build().expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1531863556;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build().expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1532041662;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build().expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1532041662;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build().expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1536571897;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build().expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1546464968;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build().expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1546963593;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build().expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,expand,uri,variables
UriComponentsBuilder -> public UriComponents buildAndExpand(Map<String, ?> uriVariables);1547005422;Build a {@code UriComponents} instance and replaces URI template variables_with the values from a map. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Map)}._@param uriVariables the map of URI variables_@return the URI components with expanded values;public UriComponents buildAndExpand(Map<String, ?> uriVariables) {_		return build().expand(uriVariables)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,map,param,uri,variables,the,map,of,uri,variables,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,map,string,uri,variables,return,build,expand,uri,variables
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1348582810;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}.__@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1349904861;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}.__@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1350918288;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}.__@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1356735495;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}.__@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1357119239;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}.__@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1362408075;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}.__@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1363208506;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}.__@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1367580131;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1367955086;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1368482696;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1375201821;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1380131933;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1382387167;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1382387168;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1382744567;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1382754578;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1391723719;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1400538909;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1400541968;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1403775847;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1404917891;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1409317151;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1409318475;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1409822411;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1414695064;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1417799775;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1423547594;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1424274316;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1425610347;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1426255003;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1426266172;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1426267150;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1426553101;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1426880143;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1426880143;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1427143443;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1430734105;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1433951292;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1437567436;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1438166381;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1443431031;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1443797712;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1447791580;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1449004145;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1458830024;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1465299497;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1467730834;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1471517882;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1472594218;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1475874694;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1476136805;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1485553611;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1486074560;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1492678922;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1493758742;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1495868221;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1496259743;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1496370972;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1496837955;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1498780456;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1500460652;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1513715892;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1515504834;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1519588127;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1522332352;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1522351714;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1522361849;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1527192852;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1530174524;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1531746971;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1531843156;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1531863556;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1532041662;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1532041662;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1536571897;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1546464968;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1546963593;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder schemeSpecificPart(String ssp);1547005422;Set the URI scheme-specific-part. When invoked, this method overwrites_{@linkplain #userInfo(String) user-info}, {@linkplain #host(String) host},_{@linkplain #port(int) port}, {@linkplain #path(String) path}, and_{@link #query(String) query}._@param ssp the URI scheme-specific-part, may contain URI template parameters_@return this UriComponentsBuilder;public UriComponentsBuilder schemeSpecificPart(String ssp) {_		this.ssp = ssp__		resetHierarchicalComponents()__		return this__	};set,the,uri,scheme,specific,part,when,invoked,this,method,overwrites,linkplain,user,info,string,user,info,linkplain,host,string,host,linkplain,port,int,port,linkplain,path,string,path,and,link,query,string,query,param,ssp,the,uri,scheme,specific,part,may,contain,uri,template,parameters,return,this,uri,components,builder;public,uri,components,builder,scheme,specific,part,string,ssp,this,ssp,ssp,reset,hierarchical,components,return,this
UriComponentsBuilder -> public UriComponentsBuilder cloneBuilder();1458830024;Clone this {@code UriComponentsBuilder}._@return the cloned {@code UriComponentsBuilder} object_@since 4.3;public UriComponentsBuilder cloneBuilder() {_		return new UriComponentsBuilder(this)__	};clone,this,code,uri,components,builder,return,the,cloned,code,uri,components,builder,object,since,4,3;public,uri,components,builder,clone,builder,return,new,uri,components,builder,this
UriComponentsBuilder -> public UriComponentsBuilder cloneBuilder();1465299497;Clone this {@code UriComponentsBuilder}._@return the cloned {@code UriComponentsBuilder} object_@since 4.2.7;public UriComponentsBuilder cloneBuilder() {_		return new UriComponentsBuilder(this)__	};clone,this,code,uri,components,builder,return,the,cloned,code,uri,components,builder,object,since,4,2,7;public,uri,components,builder,clone,builder,return,new,uri,components,builder,this
UriComponentsBuilder -> public UriComponentsBuilder cloneBuilder();1467730834;Clone this {@code UriComponentsBuilder}._@return the cloned {@code UriComponentsBuilder} object_@since 4.2.7;public UriComponentsBuilder cloneBuilder() {_		return new UriComponentsBuilder(this)__	};clone,this,code,uri,components,builder,return,the,cloned,code,uri,components,builder,object,since,4,2,7;public,uri,components,builder,clone,builder,return,new,uri,components,builder,this
UriComponentsBuilder -> public UriComponentsBuilder cloneBuilder();1471517882;Clone this {@code UriComponentsBuilder}._@return the cloned {@code UriComponentsBuilder} object_@since 4.2.7;public UriComponentsBuilder cloneBuilder() {_		return new UriComponentsBuilder(this)__	};clone,this,code,uri,components,builder,return,the,cloned,code,uri,components,builder,object,since,4,2,7;public,uri,components,builder,clone,builder,return,new,uri,components,builder,this
UriComponentsBuilder -> public UriComponentsBuilder cloneBuilder();1472594218;Clone this {@code UriComponentsBuilder}._@return the cloned {@code UriComponentsBuilder} object_@since 4.2.7;public UriComponentsBuilder cloneBuilder() {_		return new UriComponentsBuilder(this)__	};clone,this,code,uri,components,builder,return,the,cloned,code,uri,components,builder,object,since,4,2,7;public,uri,components,builder,clone,builder,return,new,uri,components,builder,this
UriComponentsBuilder -> public UriComponentsBuilder cloneBuilder();1475874694;Clone this {@code UriComponentsBuilder}._@return the cloned {@code UriComponentsBuilder} object_@since 4.2.7;public UriComponentsBuilder cloneBuilder() {_		return new UriComponentsBuilder(this)__	};clone,this,code,uri,components,builder,return,the,cloned,code,uri,components,builder,object,since,4,2,7;public,uri,components,builder,clone,builder,return,new,uri,components,builder,this
UriComponentsBuilder -> public UriComponentsBuilder cloneBuilder();1476136805;Clone this {@code UriComponentsBuilder}._@return the cloned {@code UriComponentsBuilder} object_@since 4.2.7;public UriComponentsBuilder cloneBuilder() {_		return new UriComponentsBuilder(this)__	};clone,this,code,uri,components,builder,return,the,cloned,code,uri,components,builder,object,since,4,2,7;public,uri,components,builder,clone,builder,return,new,uri,components,builder,this
UriComponentsBuilder -> public UriComponentsBuilder cloneBuilder();1485553611;Clone this {@code UriComponentsBuilder}._@return the cloned {@code UriComponentsBuilder} object_@since 4.2.7;public UriComponentsBuilder cloneBuilder() {_		return new UriComponentsBuilder(this)__	};clone,this,code,uri,components,builder,return,the,cloned,code,uri,components,builder,object,since,4,2,7;public,uri,components,builder,clone,builder,return,new,uri,components,builder,this
UriComponentsBuilder -> public UriComponentsBuilder cloneBuilder();1486074560;Clone this {@code UriComponentsBuilder}._@return the cloned {@code UriComponentsBuilder} object_@since 4.2.7;public UriComponentsBuilder cloneBuilder() {_		return new UriComponentsBuilder(this)__	};clone,this,code,uri,components,builder,return,the,cloned,code,uri,components,builder,object,since,4,2,7;public,uri,components,builder,clone,builder,return,new,uri,components,builder,this
UriComponentsBuilder -> public UriComponentsBuilder cloneBuilder();1492678922;Clone this {@code UriComponentsBuilder}._@return the cloned {@code UriComponentsBuilder} object_@since 4.2.7;public UriComponentsBuilder cloneBuilder() {_		return new UriComponentsBuilder(this)__	};clone,this,code,uri,components,builder,return,the,cloned,code,uri,components,builder,object,since,4,2,7;public,uri,components,builder,clone,builder,return,new,uri,components,builder,this
UriComponentsBuilder -> public UriComponentsBuilder cloneBuilder();1493758742;Clone this {@code UriComponentsBuilder}._@return the cloned {@code UriComponentsBuilder} object_@since 4.2.7;public UriComponentsBuilder cloneBuilder() {_		return new UriComponentsBuilder(this)__	};clone,this,code,uri,components,builder,return,the,cloned,code,uri,components,builder,object,since,4,2,7;public,uri,components,builder,clone,builder,return,new,uri,components,builder,this
UriComponentsBuilder -> public UriComponentsBuilder cloneBuilder();1495868221;Clone this {@code UriComponentsBuilder}._@return the cloned {@code UriComponentsBuilder} object_@since 4.2.7;public UriComponentsBuilder cloneBuilder() {_		return new UriComponentsBuilder(this)__	};clone,this,code,uri,components,builder,return,the,cloned,code,uri,components,builder,object,since,4,2,7;public,uri,components,builder,clone,builder,return,new,uri,components,builder,this
UriComponentsBuilder -> public UriComponentsBuilder cloneBuilder();1496259743;Clone this {@code UriComponentsBuilder}._@return the cloned {@code UriComponentsBuilder} object_@since 4.2.7;public UriComponentsBuilder cloneBuilder() {_		return new UriComponentsBuilder(this)__	};clone,this,code,uri,components,builder,return,the,cloned,code,uri,components,builder,object,since,4,2,7;public,uri,components,builder,clone,builder,return,new,uri,components,builder,this
UriComponentsBuilder -> public UriComponentsBuilder cloneBuilder();1496370972;Clone this {@code UriComponentsBuilder}._@return the cloned {@code UriComponentsBuilder} object_@since 4.2.7;public UriComponentsBuilder cloneBuilder() {_		return new UriComponentsBuilder(this)__	};clone,this,code,uri,components,builder,return,the,cloned,code,uri,components,builder,object,since,4,2,7;public,uri,components,builder,clone,builder,return,new,uri,components,builder,this
UriComponentsBuilder -> public UriComponentsBuilder cloneBuilder();1496837955;Clone this {@code UriComponentsBuilder}._@return the cloned {@code UriComponentsBuilder} object_@since 4.2.7;public UriComponentsBuilder cloneBuilder() {_		return new UriComponentsBuilder(this)__	};clone,this,code,uri,components,builder,return,the,cloned,code,uri,components,builder,object,since,4,2,7;public,uri,components,builder,clone,builder,return,new,uri,components,builder,this
UriComponentsBuilder -> public UriComponentsBuilder cloneBuilder();1498780456;Clone this {@code UriComponentsBuilder}._@return the cloned {@code UriComponentsBuilder} object_@since 4.2.7;public UriComponentsBuilder cloneBuilder() {_		return new UriComponentsBuilder(this)__	};clone,this,code,uri,components,builder,return,the,cloned,code,uri,components,builder,object,since,4,2,7;public,uri,components,builder,clone,builder,return,new,uri,components,builder,this
UriComponentsBuilder -> public UriComponentsBuilder cloneBuilder();1500460652;Clone this {@code UriComponentsBuilder}._@return the cloned {@code UriComponentsBuilder} object_@since 4.2.7;public UriComponentsBuilder cloneBuilder() {_		return new UriComponentsBuilder(this)__	};clone,this,code,uri,components,builder,return,the,cloned,code,uri,components,builder,object,since,4,2,7;public,uri,components,builder,clone,builder,return,new,uri,components,builder,this
UriComponentsBuilder -> public UriComponentsBuilder cloneBuilder();1513715892;Clone this {@code UriComponentsBuilder}._@return the cloned {@code UriComponentsBuilder} object_@since 4.2.7;public UriComponentsBuilder cloneBuilder() {_		return new UriComponentsBuilder(this)__	};clone,this,code,uri,components,builder,return,the,cloned,code,uri,components,builder,object,since,4,2,7;public,uri,components,builder,clone,builder,return,new,uri,components,builder,this
UriComponentsBuilder -> public UriComponentsBuilder cloneBuilder();1515504834;Clone this {@code UriComponentsBuilder}._@return the cloned {@code UriComponentsBuilder} object_@since 4.2.7;public UriComponentsBuilder cloneBuilder() {_		return new UriComponentsBuilder(this)__	};clone,this,code,uri,components,builder,return,the,cloned,code,uri,components,builder,object,since,4,2,7;public,uri,components,builder,clone,builder,return,new,uri,components,builder,this
UriComponentsBuilder -> public UriComponentsBuilder cloneBuilder();1519588127;Clone this {@code UriComponentsBuilder}._@return the cloned {@code UriComponentsBuilder} object_@since 4.2.7;public UriComponentsBuilder cloneBuilder() {_		return new UriComponentsBuilder(this)__	};clone,this,code,uri,components,builder,return,the,cloned,code,uri,components,builder,object,since,4,2,7;public,uri,components,builder,clone,builder,return,new,uri,components,builder,this
UriComponentsBuilder -> public UriComponentsBuilder cloneBuilder();1522332352;Clone this {@code UriComponentsBuilder}._@return the cloned {@code UriComponentsBuilder} object_@since 4.2.7;public UriComponentsBuilder cloneBuilder() {_		return new UriComponentsBuilder(this)__	};clone,this,code,uri,components,builder,return,the,cloned,code,uri,components,builder,object,since,4,2,7;public,uri,components,builder,clone,builder,return,new,uri,components,builder,this
UriComponentsBuilder -> public UriComponentsBuilder cloneBuilder();1522351714;Clone this {@code UriComponentsBuilder}._@return the cloned {@code UriComponentsBuilder} object_@since 4.2.7;public UriComponentsBuilder cloneBuilder() {_		return new UriComponentsBuilder(this)__	};clone,this,code,uri,components,builder,return,the,cloned,code,uri,components,builder,object,since,4,2,7;public,uri,components,builder,clone,builder,return,new,uri,components,builder,this
UriComponentsBuilder -> public UriComponentsBuilder cloneBuilder();1522361849;Clone this {@code UriComponentsBuilder}._@return the cloned {@code UriComponentsBuilder} object_@since 4.2.7;public UriComponentsBuilder cloneBuilder() {_		return new UriComponentsBuilder(this)__	};clone,this,code,uri,components,builder,return,the,cloned,code,uri,components,builder,object,since,4,2,7;public,uri,components,builder,clone,builder,return,new,uri,components,builder,this
UriComponentsBuilder -> public UriComponentsBuilder cloneBuilder();1527192852;Clone this {@code UriComponentsBuilder}._@return the cloned {@code UriComponentsBuilder} object_@since 4.2.7;public UriComponentsBuilder cloneBuilder() {_		return new UriComponentsBuilder(this)__	};clone,this,code,uri,components,builder,return,the,cloned,code,uri,components,builder,object,since,4,2,7;public,uri,components,builder,clone,builder,return,new,uri,components,builder,this
UriComponentsBuilder -> public UriComponentsBuilder cloneBuilder();1530174524;Clone this {@code UriComponentsBuilder}._@return the cloned {@code UriComponentsBuilder} object_@since 4.2.7;public UriComponentsBuilder cloneBuilder() {_		return new UriComponentsBuilder(this)__	};clone,this,code,uri,components,builder,return,the,cloned,code,uri,components,builder,object,since,4,2,7;public,uri,components,builder,clone,builder,return,new,uri,components,builder,this
UriComponentsBuilder -> public UriComponentsBuilder cloneBuilder();1531746971;Clone this {@code UriComponentsBuilder}._@return the cloned {@code UriComponentsBuilder} object_@since 4.2.7;public UriComponentsBuilder cloneBuilder() {_		return new UriComponentsBuilder(this)__	};clone,this,code,uri,components,builder,return,the,cloned,code,uri,components,builder,object,since,4,2,7;public,uri,components,builder,clone,builder,return,new,uri,components,builder,this
UriComponentsBuilder -> public UriComponentsBuilder cloneBuilder();1531843156;Clone this {@code UriComponentsBuilder}._@return the cloned {@code UriComponentsBuilder} object_@since 4.2.7;public UriComponentsBuilder cloneBuilder() {_		return new UriComponentsBuilder(this)__	};clone,this,code,uri,components,builder,return,the,cloned,code,uri,components,builder,object,since,4,2,7;public,uri,components,builder,clone,builder,return,new,uri,components,builder,this
UriComponentsBuilder -> public UriComponentsBuilder cloneBuilder();1531863556;Clone this {@code UriComponentsBuilder}._@return the cloned {@code UriComponentsBuilder} object_@since 4.2.7;public UriComponentsBuilder cloneBuilder() {_		return new UriComponentsBuilder(this)__	};clone,this,code,uri,components,builder,return,the,cloned,code,uri,components,builder,object,since,4,2,7;public,uri,components,builder,clone,builder,return,new,uri,components,builder,this
UriComponentsBuilder -> public UriComponentsBuilder cloneBuilder();1532041662;Clone this {@code UriComponentsBuilder}._@return the cloned {@code UriComponentsBuilder} object_@since 4.2.7;public UriComponentsBuilder cloneBuilder() {_		return new UriComponentsBuilder(this)__	};clone,this,code,uri,components,builder,return,the,cloned,code,uri,components,builder,object,since,4,2,7;public,uri,components,builder,clone,builder,return,new,uri,components,builder,this
UriComponentsBuilder -> public UriComponentsBuilder cloneBuilder();1532041662;Clone this {@code UriComponentsBuilder}._@return the cloned {@code UriComponentsBuilder} object_@since 4.2.7;public UriComponentsBuilder cloneBuilder() {_		return new UriComponentsBuilder(this)__	};clone,this,code,uri,components,builder,return,the,cloned,code,uri,components,builder,object,since,4,2,7;public,uri,components,builder,clone,builder,return,new,uri,components,builder,this
UriComponentsBuilder -> public UriComponentsBuilder cloneBuilder();1536571897;Clone this {@code UriComponentsBuilder}._@return the cloned {@code UriComponentsBuilder} object_@since 4.2.7;public UriComponentsBuilder cloneBuilder() {_		return new UriComponentsBuilder(this)__	};clone,this,code,uri,components,builder,return,the,cloned,code,uri,components,builder,object,since,4,2,7;public,uri,components,builder,clone,builder,return,new,uri,components,builder,this
UriComponentsBuilder -> public UriComponentsBuilder cloneBuilder();1546464968;Clone this {@code UriComponentsBuilder}._@return the cloned {@code UriComponentsBuilder} object_@since 4.2.7;public UriComponentsBuilder cloneBuilder() {_		return new UriComponentsBuilder(this)__	};clone,this,code,uri,components,builder,return,the,cloned,code,uri,components,builder,object,since,4,2,7;public,uri,components,builder,clone,builder,return,new,uri,components,builder,this
UriComponentsBuilder -> public UriComponentsBuilder cloneBuilder();1546963593;Clone this {@code UriComponentsBuilder}._@return the cloned {@code UriComponentsBuilder} object_@since 4.2.7;public UriComponentsBuilder cloneBuilder() {_		return new UriComponentsBuilder(this)__	};clone,this,code,uri,components,builder,return,the,cloned,code,uri,components,builder,object,since,4,2,7;public,uri,components,builder,clone,builder,return,new,uri,components,builder,this
UriComponentsBuilder -> public UriComponentsBuilder cloneBuilder();1547005422;Clone this {@code UriComponentsBuilder}._@return the cloned {@code UriComponentsBuilder} object_@since 4.2.7;public UriComponentsBuilder cloneBuilder() {_		return new UriComponentsBuilder(this)__	};clone,this,code,uri,components,builder,return,the,cloned,code,uri,components,builder,object,since,4,2,7;public,uri,components,builder,clone,builder,return,new,uri,components,builder,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParam(String name, Object... values);1492678922;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParam(String name, Object... values);1493758742;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParam(String name, Object... values);1495868221;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParam(String name, Object... values);1496259743;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParam(String name, Object... values);1496370972;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParam(String name, Object... values);1496837955;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParam(String name, Object... values);1498780456;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParam(String name, Object... values);1500460652;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParam(String name, Object... values);1513715892;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParam(String name, Object... values);1515504834;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParam(String name, Object... values);1519588127;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParam(String name, Object... values);1522332352;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParam(String name, Object... values);1522351714;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParam(String name, Object... values);1522361849;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParam(String name, Object... values);1527192852;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParam(String name, Object... values);1530174524;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParam(String name, Object... values);1531746971;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParam(String name, Object... values);1531843156;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParam(String name, Object... values);1531863556;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParam(String name, Object... values);1532041662;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParam(String name, Object... values);1532041662;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParam(String name, Object... values);1536571897;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParam(String name, Object... values);1546464968;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParam(String name, Object... values);1546963593;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParam(String name, Object... values);1547005422;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(String port);1409317151;Set the URI port. Passing {@code "-1"} will clear the port of this builder._The given port may contain URI template variables._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,the,given,port,may,contain,uri,template,variables,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(String port);1409318475;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(String port);1409822411;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(String port);1414695064;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(String port);1417799775;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(String port);1423547594;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(String port);1424274316;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(String port);1425610347;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(String port);1426255003;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(String port);1426266172;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(String port);1426267150;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(String port);1426553101;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(String port);1426880143;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(String port);1426880143;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(String port);1427143443;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(String port);1430734105;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(String port);1433951292;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(String port);1437567436;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(String port);1438166381;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(String port);1443431031;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(String port);1443797712;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(String port);1447791580;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(String port);1449004145;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(String port);1458830024;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(String port);1465299497;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(String port);1467730834;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(String port);1471517882;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(String port);1472594218;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(String port);1475874694;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(String port);1476136805;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(String port);1485553611;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(String port);1486074560;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1328020251;Creates a new {@code UriComponents} object from the string HTTP URL.__@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher m = HTTP_URL_PATTERN.matcher(httpUrl)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			builder.scheme(m.group(1))__			builder.userInfo(m.group(4))__			builder.host(m.group(5))__			String port = m.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(Integer.parseInt(port))__			}_			builder.path(m.group(8))__			builder.query(m.group(10))___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,m,matcher,http,url,if,m,matches,uri,components,builder,builder,new,uri,components,builder,builder,scheme,m,group,1,builder,user,info,m,group,4,builder,host,m,group,5,string,port,m,group,7,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,m,group,8,builder,query,m,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1329142650;Creates a new {@code UriComponents} object from the string HTTP URL.__@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher m = HTTP_URL_PATTERN.matcher(httpUrl)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			builder.scheme(m.group(1))__			builder.userInfo(m.group(4))__			builder.host(m.group(5))__			String port = m.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(Integer.parseInt(port))__			}_			builder.path(m.group(8))__			builder.query(m.group(10))___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,m,matcher,http,url,if,m,matches,uri,components,builder,builder,new,uri,components,builder,builder,scheme,m,group,1,builder,user,info,m,group,4,builder,host,m,group,5,string,port,m,group,7,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,m,group,8,builder,query,m,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1335903038;Creates a new {@code UriComponents} object from the string HTTP URL.__@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher m = HTTP_URL_PATTERN.matcher(httpUrl)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			builder.scheme(m.group(1))__			builder.userInfo(m.group(4))__			builder.host(m.group(5))__			String port = m.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(Integer.parseInt(port))__			}_			builder.path(m.group(8))__			builder.query(m.group(10))___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,m,matcher,http,url,if,m,matches,uri,components,builder,builder,new,uri,components,builder,builder,scheme,m,group,1,builder,user,info,m,group,4,builder,host,m,group,5,string,port,m,group,7,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,m,group,8,builder,query,m,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1345652603;Creates a new {@code UriComponents} object from the string HTTP URL.__<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:__<pre>_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>__@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher m = HTTP_URL_PATTERN.matcher(httpUrl)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			builder.scheme(m.group(1))__			builder.userInfo(m.group(4))__			builder.host(m.group(5))__			String port = m.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(Integer.parseInt(port))__			}_			builder.path(m.group(8))__			builder.query(m.group(10))___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,m,matcher,http,url,if,m,matches,uri,components,builder,builder,new,uri,components,builder,builder,scheme,m,group,1,builder,user,info,m,group,4,builder,host,m,group,5,string,port,m,group,7,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,m,group,8,builder,query,m,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1348582810;Creates a new {@code UriComponents} object from the string HTTP URL.__<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:__<pre>_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>__@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher m = HTTP_URL_PATTERN.matcher(httpUrl)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			builder.scheme(m.group(1))__			builder.userInfo(m.group(4))__			builder.host(m.group(5))__			String port = m.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(Integer.parseInt(port))__			}_			builder.path(m.group(8))__			builder.query(m.group(10))___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,m,matcher,http,url,if,m,matches,uri,components,builder,builder,new,uri,components,builder,builder,scheme,m,group,1,builder,user,info,m,group,4,builder,host,m,group,5,string,port,m,group,7,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,m,group,8,builder,query,m,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1349904861;Creates a new {@code UriComponents} object from the string HTTP URL.__<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:__<pre>_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>__@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher m = HTTP_URL_PATTERN.matcher(httpUrl)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			builder.scheme(m.group(1))__			builder.userInfo(m.group(4))__			builder.host(m.group(5))__			String port = m.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(Integer.parseInt(port))__			}_			builder.path(m.group(8))__			builder.query(m.group(10))___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,m,matcher,http,url,if,m,matches,uri,components,builder,builder,new,uri,components,builder,builder,scheme,m,group,1,builder,user,info,m,group,4,builder,host,m,group,5,string,port,m,group,7,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,m,group,8,builder,query,m,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1350918288;Creates a new {@code UriComponents} object from the string HTTP URL.__<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:__<pre>_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>__@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher m = HTTP_URL_PATTERN.matcher(httpUrl)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			builder.scheme(m.group(1))__			builder.userInfo(m.group(4))__			builder.host(m.group(5))__			String port = m.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(Integer.parseInt(port))__			}_			builder.path(m.group(8))__			builder.query(m.group(10))___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,m,matcher,http,url,if,m,matches,uri,components,builder,builder,new,uri,components,builder,builder,scheme,m,group,1,builder,user,info,m,group,4,builder,host,m,group,5,string,port,m,group,7,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,m,group,8,builder,query,m,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1356735495;Creates a new {@code UriComponents} object from the string HTTP URL.__<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:__<pre>_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>__@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher m = HTTP_URL_PATTERN.matcher(httpUrl)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			builder.scheme(m.group(1))__			builder.userInfo(m.group(4))__			builder.host(m.group(5))__			String port = m.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(Integer.parseInt(port))__			}_			builder.path(m.group(8))__			builder.query(m.group(10))___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,m,matcher,http,url,if,m,matches,uri,components,builder,builder,new,uri,components,builder,builder,scheme,m,group,1,builder,user,info,m,group,4,builder,host,m,group,5,string,port,m,group,7,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,m,group,8,builder,query,m,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1357119239;Creates a new {@code UriComponents} object from the string HTTP URL.__<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:__<pre>_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>__@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher m = HTTP_URL_PATTERN.matcher(httpUrl)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			builder.scheme(m.group(1))__			builder.userInfo(m.group(4))__			builder.host(m.group(5))__			String port = m.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(Integer.parseInt(port))__			}_			builder.path(m.group(8))__			builder.query(m.group(10))___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,m,matcher,http,url,if,m,matches,uri,components,builder,builder,new,uri,components,builder,builder,scheme,m,group,1,builder,user,info,m,group,4,builder,host,m,group,5,string,port,m,group,7,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,m,group,8,builder,query,m,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1362408075;Creates a new {@code UriComponents} object from the string HTTP URL.__<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:__<pre>_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>__@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher m = HTTP_URL_PATTERN.matcher(httpUrl)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			builder.scheme(m.group(1))__			builder.userInfo(m.group(4))__			builder.host(m.group(5))__			String port = m.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(Integer.parseInt(port))__			}_			builder.path(m.group(8))__			builder.query(m.group(10))___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,m,matcher,http,url,if,m,matches,uri,components,builder,builder,new,uri,components,builder,builder,scheme,m,group,1,builder,user,info,m,group,4,builder,host,m,group,5,string,port,m,group,7,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,m,group,8,builder,query,m,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1363208506;Creates a new {@code UriComponents} object from the string HTTP URL.__<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:__<pre>_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>__@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher m = HTTP_URL_PATTERN.matcher(httpUrl)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			builder.scheme(m.group(1))__			builder.userInfo(m.group(4))__			builder.host(m.group(5))__			String port = m.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(Integer.parseInt(port))__			}_			builder.path(m.group(8))__			builder.query(m.group(10))___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,m,matcher,http,url,if,m,matches,uri,components,builder,builder,new,uri,components,builder,builder,scheme,m,group,1,builder,user,info,m,group,4,builder,host,m,group,5,string,port,m,group,7,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,m,group,8,builder,query,m,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1367580131;Creates a new {@code UriComponents} object from the string HTTP URL._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre>_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher m = HTTP_URL_PATTERN.matcher(httpUrl)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			builder.scheme(m.group(1))__			builder.userInfo(m.group(4))__			builder.host(m.group(5))__			String port = m.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(Integer.parseInt(port))__			}_			builder.path(m.group(8))__			builder.query(m.group(10))___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,m,matcher,http,url,if,m,matches,uri,components,builder,builder,new,uri,components,builder,builder,scheme,m,group,1,builder,user,info,m,group,4,builder,host,m,group,5,string,port,m,group,7,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,m,group,8,builder,query,m,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1367955086;Creates a new {@code UriComponents} object from the string HTTP URL._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher m = HTTP_URL_PATTERN.matcher(httpUrl)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			builder.scheme(m.group(1))__			builder.userInfo(m.group(4))__			builder.host(m.group(5))__			String port = m.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(Integer.parseInt(port))__			}_			builder.path(m.group(8))__			builder.query(m.group(10))___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,m,matcher,http,url,if,m,matches,uri,components,builder,builder,new,uri,components,builder,builder,scheme,m,group,1,builder,user,info,m,group,4,builder,host,m,group,5,string,port,m,group,7,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,m,group,8,builder,query,m,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1368482696;Creates a new {@code UriComponents} object from the string HTTP URL._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher m = HTTP_URL_PATTERN.matcher(httpUrl)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			builder.scheme(m.group(1))__			builder.userInfo(m.group(4))__			builder.host(m.group(5))__			String port = m.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(Integer.parseInt(port))__			}_			builder.path(m.group(8))__			builder.query(m.group(10))___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,m,matcher,http,url,if,m,matches,uri,components,builder,builder,new,uri,components,builder,builder,scheme,m,group,1,builder,user,info,m,group,4,builder,host,m,group,5,string,port,m,group,7,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,m,group,8,builder,query,m,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1375201821;Creates a new {@code UriComponents} object from the string HTTP URL._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher m = HTTP_URL_PATTERN.matcher(httpUrl)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			String scheme = m.group(1)__			builder.scheme((scheme != null) ? scheme.toLowerCase() : scheme)__			builder.userInfo(m.group(4))__			builder.host(m.group(5))__			String port = m.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(Integer.parseInt(port))__			}_			builder.path(m.group(8))__			builder.query(m.group(10))___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,m,matcher,http,url,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,1,builder,scheme,scheme,null,scheme,to,lower,case,scheme,builder,user,info,m,group,4,builder,host,m,group,5,string,port,m,group,7,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,m,group,8,builder,query,m,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1380131933;Creates a new {@code UriComponents} object from the string HTTP URL._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher m = HTTP_URL_PATTERN.matcher(httpUrl)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			String scheme = m.group(1)__			builder.scheme((scheme != null) ? scheme.toLowerCase() : scheme)__			builder.userInfo(m.group(4))__			String host = m.group(5)__			if(StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = m.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(Integer.parseInt(port))__			}_			builder.path(m.group(8))__			builder.query(m.group(10))___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,m,matcher,http,url,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,1,builder,scheme,scheme,null,scheme,to,lower,case,scheme,builder,user,info,m,group,4,string,host,m,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,m,group,7,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,m,group,8,builder,query,m,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1382387167;Creates a new {@code UriComponents} object from the string HTTP URL._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher m = HTTP_URL_PATTERN.matcher(httpUrl)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			String scheme = m.group(1)__			builder.scheme((scheme != null) ? scheme.toLowerCase() : scheme)__			builder.userInfo(m.group(4))__			String host = m.group(5)__			if(StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = m.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(Integer.parseInt(port))__			}_			builder.path(m.group(8))__			builder.query(m.group(10))___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,m,matcher,http,url,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,1,builder,scheme,scheme,null,scheme,to,lower,case,scheme,builder,user,info,m,group,4,string,host,m,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,m,group,7,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,m,group,8,builder,query,m,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1382387168;Creates a new {@code UriComponents} object from the string HTTP URL._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher m = HTTP_URL_PATTERN.matcher(httpUrl)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			String scheme = m.group(1)__			builder.scheme((scheme != null) ? scheme.toLowerCase() : scheme)__			builder.userInfo(m.group(4))__			String host = m.group(5)__			if(StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = m.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(Integer.parseInt(port))__			}_			builder.path(m.group(8))__			builder.query(m.group(10))___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,m,matcher,http,url,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,1,builder,scheme,scheme,null,scheme,to,lower,case,scheme,builder,user,info,m,group,4,string,host,m,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,m,group,7,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,m,group,8,builder,query,m,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1382744567;Creates a new {@code UriComponents} object from the string HTTP URL._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher m = HTTP_URL_PATTERN.matcher(httpUrl)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			String scheme = m.group(1)__			builder.scheme((scheme != null) ? scheme.toLowerCase() : scheme)__			builder.userInfo(m.group(4))__			String host = m.group(5)__			if(StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = m.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(Integer.parseInt(port))__			}_			builder.path(m.group(8))__			builder.query(m.group(10))___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,m,matcher,http,url,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,1,builder,scheme,scheme,null,scheme,to,lower,case,scheme,builder,user,info,m,group,4,string,host,m,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,m,group,7,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,m,group,8,builder,query,m,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1382754578;Creates a new {@code UriComponents} object from the string HTTP URL._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher m = HTTP_URL_PATTERN.matcher(httpUrl)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			String scheme = m.group(1)__			builder.scheme((scheme != null) ? scheme.toLowerCase() : scheme)__			builder.userInfo(m.group(4))__			String host = m.group(5)__			if(StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = m.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(Integer.parseInt(port))__			}_			builder.path(m.group(8))__			builder.query(m.group(10))___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,m,matcher,http,url,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,1,builder,scheme,scheme,null,scheme,to,lower,case,scheme,builder,user,info,m,group,4,string,host,m,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,m,group,7,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,m,group,8,builder,query,m,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1391723719;Creates a new {@code UriComponents} object from the string HTTP URL._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher m = HTTP_URL_PATTERN.matcher(httpUrl)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			String scheme = m.group(1)__			builder.scheme((scheme != null) ? scheme.toLowerCase() : scheme)__			builder.userInfo(m.group(4))__			String host = m.group(5)__			if(StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = m.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(Integer.parseInt(port))__			}_			builder.path(m.group(8))__			builder.query(m.group(10))___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,m,matcher,http,url,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,1,builder,scheme,scheme,null,scheme,to,lower,case,scheme,builder,user,info,m,group,4,string,host,m,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,m,group,7,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,m,group,8,builder,query,m,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1400538909;Creates a new {@code UriComponents} object from the string HTTP URL._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher m = HTTP_URL_PATTERN.matcher(httpUrl)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			String scheme = m.group(1)__			builder.scheme((scheme != null) ? scheme.toLowerCase() : scheme)__			builder.userInfo(m.group(4))__			String host = m.group(5)__			if(StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = m.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(Integer.parseInt(port))__			}_			builder.path(m.group(8))__			builder.query(m.group(10))___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,m,matcher,http,url,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,1,builder,scheme,scheme,null,scheme,to,lower,case,scheme,builder,user,info,m,group,4,string,host,m,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,m,group,7,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,m,group,8,builder,query,m,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1400541968;Creates a new {@code UriComponents} object from the string HTTP URL._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher m = HTTP_URL_PATTERN.matcher(httpUrl)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			String scheme = m.group(1)__			builder.scheme((scheme != null) ? scheme.toLowerCase() : scheme)__			builder.userInfo(m.group(4))__			String host = m.group(5)__			if(StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = m.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(Integer.parseInt(port))__			}_			builder.path(m.group(8))__			builder.query(m.group(10))___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,m,matcher,http,url,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,1,builder,scheme,scheme,null,scheme,to,lower,case,scheme,builder,user,info,m,group,4,string,host,m,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,m,group,7,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,m,group,8,builder,query,m,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1403775847;Creates a new {@code UriComponents} object from the string HTTP URL._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher m = HTTP_URL_PATTERN.matcher(httpUrl)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			String scheme = m.group(1)__			builder.scheme((scheme != null) ? scheme.toLowerCase() : scheme)__			builder.userInfo(m.group(4))__			String host = m.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = m.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(Integer.parseInt(port))__			}_			builder.path(m.group(8))__			builder.query(m.group(10))___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,m,matcher,http,url,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,1,builder,scheme,scheme,null,scheme,to,lower,case,scheme,builder,user,info,m,group,4,string,host,m,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,m,group,7,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,m,group,8,builder,query,m,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1404917891;Creates a new {@code UriComponents} object from the string HTTP URL._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher m = HTTP_URL_PATTERN.matcher(httpUrl)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			String scheme = m.group(1)__			builder.scheme((scheme != null) ? scheme.toLowerCase() : scheme)__			builder.userInfo(m.group(4))__			String host = m.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = m.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(Integer.parseInt(port))__			}_			builder.path(m.group(8))__			builder.query(m.group(10))___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,m,matcher,http,url,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,1,builder,scheme,scheme,null,scheme,to,lower,case,scheme,builder,user,info,m,group,4,string,host,m,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,m,group,7,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,m,group,8,builder,query,m,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1409317151;Creates a new {@code UriComponents} object from the string HTTP URL._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher m = HTTP_URL_PATTERN.matcher(httpUrl)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			String scheme = m.group(1)__			builder.scheme((scheme != null) ? scheme.toLowerCase() : scheme)__			builder.userInfo(m.group(4))__			String host = m.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = m.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(m.group(8))__			builder.query(m.group(10))___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,m,matcher,http,url,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,1,builder,scheme,scheme,null,scheme,to,lower,case,scheme,builder,user,info,m,group,4,string,host,m,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,m,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,m,group,8,builder,query,m,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1409318475;Creates a new {@code UriComponents} object from the string HTTP URL._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher m = HTTP_URL_PATTERN.matcher(httpUrl)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			String scheme = m.group(1)__			builder.scheme((scheme != null) ? scheme.toLowerCase() : scheme)__			builder.userInfo(m.group(4))__			String host = m.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = m.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(m.group(8))__			builder.query(m.group(10))___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,m,matcher,http,url,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,1,builder,scheme,scheme,null,scheme,to,lower,case,scheme,builder,user,info,m,group,4,string,host,m,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,m,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,m,group,8,builder,query,m,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1409822411;Creates a new {@code UriComponents} object from the string HTTP URL._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1414695064;Creates a new {@code UriComponents} object from the string HTTP URL._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1417799775;Creates a new {@code UriComponents} object from the string HTTP URL._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1423547594;Creates a new {@code UriComponents} object from the string HTTP URL._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1424274316;Creates a new {@code UriComponents} object from the string HTTP URL._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1425610347;Creates a new {@code UriComponents} object from the string HTTP URL._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1426255003;Creates a new {@code UriComponents} object from the string HTTP URL._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1426266172;Creates a new {@code UriComponents} object from the string HTTP URL._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};creates,a,new,code,uri,components,object,from,the,string,http,url,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1426267150;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1426553101;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1426880143;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1426880143;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1427143443;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1430734105;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1433951292;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1437567436;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "'httpUrl' must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1438166381;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1443431031;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1443797712;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1447791580;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1449004145;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1458830024;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1465299497;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1467730834;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1471517882;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1472594218;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1475874694;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1476136805;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1485553611;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1486074560;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String urlString = &quot_https://example.com/hotels/42?filter={value}&quot___UriComponentsBuilder.fromHttpUrl(urlString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,url,string,quot,https,example,com,hotels,42,filter,value,quot,uri,components,builder,from,http,url,url,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1492678922;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String urlString = &quot_https://example.com/hotels/42?filter={value}&quot___UriComponentsBuilder.fromHttpUrl(urlString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,url,string,quot,https,example,com,hotels,42,filter,value,quot,uri,components,builder,from,http,url,url,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1493758742;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String urlString = &quot_https://example.com/hotels/42?filter={value}&quot___UriComponentsBuilder.fromHttpUrl(urlString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,url,string,quot,https,example,com,hotels,42,filter,value,quot,uri,components,builder,from,http,url,url,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1495868221;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String urlString = &quot_https://example.com/hotels/42?filter={value}&quot___UriComponentsBuilder.fromHttpUrl(urlString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,url,string,quot,https,example,com,hotels,42,filter,value,quot,uri,components,builder,from,http,url,url,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1496259743;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String urlString = &quot_https://example.com/hotels/42?filter={value}&quot___UriComponentsBuilder.fromHttpUrl(urlString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,url,string,quot,https,example,com,hotels,42,filter,value,quot,uri,components,builder,from,http,url,url,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1496370972;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String urlString = &quot_https://example.com/hotels/42?filter={value}&quot___UriComponentsBuilder.fromHttpUrl(urlString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,url,string,quot,https,example,com,hotels,42,filter,value,quot,uri,components,builder,from,http,url,url,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1496837955;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String urlString = &quot_https://example.com/hotels/42?filter={value}&quot___UriComponentsBuilder.fromHttpUrl(urlString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,url,string,quot,https,example,com,hotels,42,filter,value,quot,uri,components,builder,from,http,url,url,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1498780456;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String urlString = &quot_https://example.com/hotels/42?filter={value}&quot___UriComponentsBuilder.fromHttpUrl(urlString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,url,string,quot,https,example,com,hotels,42,filter,value,quot,uri,components,builder,from,http,url,url,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1500460652;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String urlString = &quot_https://example.com/hotels/42?filter={value}&quot___UriComponentsBuilder.fromHttpUrl(urlString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,url,string,quot,https,example,com,hotels,42,filter,value,quot,uri,components,builder,from,http,url,url,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1513715892;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String urlString = &quot_https://example.com/hotels/42?filter={value}&quot___UriComponentsBuilder.fromHttpUrl(urlString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,url,string,quot,https,example,com,hotels,42,filter,value,quot,uri,components,builder,from,http,url,url,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1515504834;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String urlString = &quot_https://example.com/hotels/42?filter={value}&quot___UriComponentsBuilder.fromHttpUrl(urlString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,url,string,quot,https,example,com,hotels,42,filter,value,quot,uri,components,builder,from,http,url,url,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1519588127;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String urlString = &quot_https://example.com/hotels/42?filter={value}&quot___UriComponentsBuilder.fromHttpUrl(urlString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,url,string,quot,https,example,com,hotels,42,filter,value,quot,uri,components,builder,from,http,url,url,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1522332352;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String urlString = &quot_https://example.com/hotels/42?filter={value}&quot___UriComponentsBuilder.fromHttpUrl(urlString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,url,string,quot,https,example,com,hotels,42,filter,value,quot,uri,components,builder,from,http,url,url,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1522351714;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String urlString = &quot_https://example.com/hotels/42?filter={value}&quot___UriComponentsBuilder.fromHttpUrl(urlString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,url,string,quot,https,example,com,hotels,42,filter,value,quot,uri,components,builder,from,http,url,url,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1522361849;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String urlString = &quot_https://example.com/hotels/42?filter={value}&quot___UriComponentsBuilder.fromHttpUrl(urlString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,url,string,quot,https,example,com,hotels,42,filter,value,quot,uri,components,builder,from,http,url,url,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1527192852;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String urlString = &quot_https://example.com/hotels/42?filter={value}&quot___UriComponentsBuilder.fromHttpUrl(urlString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,url,string,quot,https,example,com,hotels,42,filter,value,quot,uri,components,builder,from,http,url,url,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1530174524;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String urlString = &quot_https://example.com/hotels/42?filter={value}&quot___UriComponentsBuilder.fromHttpUrl(urlString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,url,string,quot,https,example,com,hotels,42,filter,value,quot,uri,components,builder,from,http,url,url,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1531746971;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String urlString = &quot_https://example.com/hotels/42?filter={value}&quot___UriComponentsBuilder.fromHttpUrl(urlString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,url,string,quot,https,example,com,hotels,42,filter,value,quot,uri,components,builder,from,http,url,url,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1531843156;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String urlString = &quot_https://example.com/hotels/42?filter={value}&quot___UriComponentsBuilder.fromHttpUrl(urlString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,url,string,quot,https,example,com,hotels,42,filter,value,quot,uri,components,builder,from,http,url,url,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1531863556;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String urlString = &quot_https://example.com/hotels/42?filter={value}&quot___UriComponentsBuilder.fromHttpUrl(urlString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,url,string,quot,https,example,com,hotels,42,filter,value,quot,uri,components,builder,from,http,url,url,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1532041662;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String urlString = &quot_https://example.com/hotels/42?filter={value}&quot___UriComponentsBuilder.fromHttpUrl(urlString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,url,string,quot,https,example,com,hotels,42,filter,value,quot,uri,components,builder,from,http,url,url,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1532041662;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String urlString = &quot_https://example.com/hotels/42?filter={value}&quot___UriComponentsBuilder.fromHttpUrl(urlString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,url,string,quot,https,example,com,hotels,42,filter,value,quot,uri,components,builder,from,http,url,url,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1536571897;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String urlString = &quot_https://example.com/hotels/42?filter={value}&quot___UriComponentsBuilder.fromHttpUrl(urlString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,url,string,quot,https,example,com,hotels,42,filter,value,quot,uri,components,builder,from,http,url,url,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1546464968;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String urlString = &quot_https://example.com/hotels/42?filter={value}&quot___UriComponentsBuilder.fromHttpUrl(urlString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,url,string,quot,https,example,com,hotels,42,filter,value,quot,uri,components,builder,from,http,url,url,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1546963593;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String urlString = &quot_https://example.com/hotels/42?filter={value}&quot___UriComponentsBuilder.fromHttpUrl(urlString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,url,string,quot,https,example,com,hotels,42,filter,value,quot,uri,components,builder,from,http,url,url,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpUrl(String httpUrl);1547005422;Create a URI components builder from the given HTTP URL String._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String urlString = &quot_https://example.com/hotels/42?filter={value}&quot___UriComponentsBuilder.fromHttpUrl(urlString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param httpUrl the source URI_@return the URI components of the URI;public static UriComponentsBuilder fromHttpUrl(String httpUrl) {_		Assert.notNull(httpUrl, "HTTP URL must not be null")__		Matcher matcher = HTTP_URL_PATTERN.matcher(httpUrl)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(1)__			builder.scheme(scheme != null ? scheme.toLowerCase() : null)__			builder.userInfo(matcher.group(4))__			String host = matcher.group(5)__			if (StringUtils.hasLength(scheme) && !StringUtils.hasLength(host)) {_				throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__			}_			builder.host(host)__			String port = matcher.group(7)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			builder.path(matcher.group(8))__			builder.query(matcher.group(10))__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + httpUrl + "] is not a valid HTTP URL")__		}_	};create,a,uri,components,builder,from,the,given,http,url,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,url,string,quot,https,example,com,hotels,42,filter,value,quot,uri,components,builder,from,http,url,url,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,http,url,the,source,uri,return,the,uri,components,of,the,uri;public,static,uri,components,builder,from,http,url,string,http,url,assert,not,null,http,url,http,url,must,not,be,null,matcher,matcher,matcher,http,url,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,1,builder,scheme,scheme,null,scheme,to,lower,case,null,builder,user,info,matcher,group,4,string,host,matcher,group,5,if,string,utils,has,length,scheme,string,utils,has,length,host,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url,builder,host,host,string,port,matcher,group,7,if,string,utils,has,length,port,builder,port,port,builder,path,matcher,group,8,builder,query,matcher,group,10,return,builder,else,throw,new,illegal,argument,exception,http,url,is,not,a,valid,http,url
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1328020251;Sets the URI port. Passing {@code -1} will clear the port of this builder.__@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = port__		return this__	};sets,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,port,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1329142650;Sets the URI port. Passing {@code -1} will clear the port of this builder.__@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = port__		return this__	};sets,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,port,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1335903038;Sets the URI port. Passing {@code -1} will clear the port of this builder.__@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = port__		return this__	};sets,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,port,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1345652603;Sets the URI port. Passing {@code -1} will clear the port of this builder.__@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = port__		return this__	};sets,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,port,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1348582810;Sets the URI port. Passing {@code -1} will clear the port of this builder.__@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = port__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1349904861;Sets the URI port. Passing {@code -1} will clear the port of this builder.__@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = port__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1350918288;Sets the URI port. Passing {@code -1} will clear the port of this builder.__@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = port__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1356735495;Sets the URI port. Passing {@code -1} will clear the port of this builder.__@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = port__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1357119239;Sets the URI port. Passing {@code -1} will clear the port of this builder.__@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = port__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1362408075;Sets the URI port. Passing {@code -1} will clear the port of this builder.__@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = port__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1363208506;Sets the URI port. Passing {@code -1} will clear the port of this builder.__@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = port__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1367580131;Sets the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = port__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1367955086;Sets the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = port__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1368482696;Sets the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = port__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1375201821;Sets the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = port__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1380131933;Sets the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = port__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1382387167;Sets the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = port__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1382387168;Sets the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = port__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1382744567;Sets the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = port__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1382754578;Sets the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = port__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1391723719;Sets the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = port__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1400538909;Sets the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = port__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1400541968;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1403775847;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1404917891;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1409317151;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1409318475;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1409822411;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1414695064;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1417799775;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1423547594;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1424274316;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1425610347;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1426255003;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1426266172;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1426267150;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1426553101;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1426880143;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1426880143;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1427143443;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1430734105;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1433951292;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1437567436;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "'port' must not be < -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,not,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1438166381;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1443431031;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1443797712;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1447791580;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1449004145;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1458830024;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1465299497;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1467730834;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1471517882;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1472594218;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1475874694;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1476136805;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1485553611;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder port(int port);1486074560;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder query(@Nullable String query);1496837955;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder query(@Nullable String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;override,public,uri,components,builder,query,nullable,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder query(@Nullable String query);1498780456;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder query(@Nullable String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;override,public,uri,components,builder,query,nullable,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder query(@Nullable String query);1500460652;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder query(@Nullable String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;override,public,uri,components,builder,query,nullable,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder query(@Nullable String query);1513715892;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder query(@Nullable String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;override,public,uri,components,builder,query,nullable,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder query(@Nullable String query);1515504834;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder query(@Nullable String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;override,public,uri,components,builder,query,nullable,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder query(@Nullable String query);1519588127;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder query(@Nullable String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;override,public,uri,components,builder,query,nullable,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder query(@Nullable String query);1522332352;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder query(@Nullable String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;override,public,uri,components,builder,query,nullable,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder query(@Nullable String query);1522351714;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder query(@Nullable String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;override,public,uri,components,builder,query,nullable,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder query(@Nullable String query);1522361849;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder query(@Nullable String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;override,public,uri,components,builder,query,nullable,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder query(@Nullable String query);1527192852;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder query(@Nullable String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;override,public,uri,components,builder,query,nullable,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder query(@Nullable String query);1530174524;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder query(@Nullable String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;override,public,uri,components,builder,query,nullable,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder query(@Nullable String query);1531746971;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder query(@Nullable String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;override,public,uri,components,builder,query,nullable,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder query(@Nullable String query);1531843156;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder query(@Nullable String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;override,public,uri,components,builder,query,nullable,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder query(@Nullable String query);1531863556;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder query(@Nullable String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;override,public,uri,components,builder,query,nullable,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder query(@Nullable String query);1532041662;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder query(@Nullable String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;override,public,uri,components,builder,query,nullable,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder query(@Nullable String query);1532041662;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder query(@Nullable String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;override,public,uri,components,builder,query,nullable,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder query(@Nullable String query);1536571897;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder query(@Nullable String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;override,public,uri,components,builder,query,nullable,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder query(@Nullable String query);1546464968;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder query(@Nullable String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;override,public,uri,components,builder,query,nullable,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder query(@Nullable String query);1546963593;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder query(@Nullable String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;override,public,uri,components,builder,query,nullable,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder query(@Nullable String query);1547005422;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder query(@Nullable String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;override,public,uri,components,builder,query,nullable,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1417799775;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = (CompositePathComponentBuilder) other.pathBuilder.clone()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,composite,path,component,builder,other,path,builder,clone,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1423547594;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = (CompositePathComponentBuilder) other.pathBuilder.clone()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,composite,path,component,builder,other,path,builder,clone,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1424274316;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = (CompositePathComponentBuilder) other.pathBuilder.clone()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,composite,path,component,builder,other,path,builder,clone,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1425610347;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = (CompositePathComponentBuilder) other.pathBuilder.clone()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,composite,path,component,builder,other,path,builder,clone,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1426255003;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = (CompositePathComponentBuilder) other.pathBuilder.clone()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,composite,path,component,builder,other,path,builder,clone,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1426266172;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = (CompositePathComponentBuilder) other.pathBuilder.clone()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,composite,path,component,builder,other,path,builder,clone,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1426267150;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = (CompositePathComponentBuilder) other.pathBuilder.clone()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,composite,path,component,builder,other,path,builder,clone,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1426553101;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = (CompositePathComponentBuilder) other.pathBuilder.clone()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,composite,path,component,builder,other,path,builder,clone,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1426880143;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = (CompositePathComponentBuilder) other.pathBuilder.clone()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,composite,path,component,builder,other,path,builder,clone,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1426880143;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = (CompositePathComponentBuilder) other.pathBuilder.clone()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,composite,path,component,builder,other,path,builder,clone,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1427143443;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = (CompositePathComponentBuilder) other.pathBuilder.clone()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,composite,path,component,builder,other,path,builder,clone,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1430734105;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = (CompositePathComponentBuilder) other.pathBuilder.clone()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,composite,path,component,builder,other,path,builder,clone,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1433951292;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = (CompositePathComponentBuilder) other.pathBuilder.clone()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,composite,path,component,builder,other,path,builder,clone,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1437567436;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = (CompositePathComponentBuilder) other.pathBuilder.clone()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,composite,path,component,builder,other,path,builder,clone,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1438166381;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = (CompositePathComponentBuilder) other.pathBuilder.clone()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,composite,path,component,builder,other,path,builder,clone,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1443431031;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = (CompositePathComponentBuilder) other.pathBuilder.clone()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,composite,path,component,builder,other,path,builder,clone,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1443797712;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = (CompositePathComponentBuilder) other.pathBuilder.clone()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,composite,path,component,builder,other,path,builder,clone,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1447791580;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = (CompositePathComponentBuilder) other.pathBuilder.clone()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,composite,path,component,builder,other,path,builder,clone,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1449004145;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = (CompositePathComponentBuilder) other.pathBuilder.clone()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,composite,path,component,builder,other,path,builder,clone,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1458830024;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = other.pathBuilder.cloneBuilder()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,other,path,builder,clone,builder,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1465299497;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = other.pathBuilder.cloneBuilder()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,other,path,builder,clone,builder,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1467730834;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = other.pathBuilder.cloneBuilder()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,other,path,builder,clone,builder,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1471517882;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from_@since 4.1.3;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = other.pathBuilder.cloneBuilder()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from,since,4,1,3;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,other,path,builder,clone,builder,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1472594218;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from_@since 4.1.3;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = other.pathBuilder.cloneBuilder()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from,since,4,1,3;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,other,path,builder,clone,builder,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1475874694;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from_@since 4.1.3;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = other.pathBuilder.cloneBuilder()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from,since,4,1,3;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,other,path,builder,clone,builder,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1476136805;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from_@since 4.1.3;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = other.pathBuilder.cloneBuilder()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from,since,4,1,3;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,other,path,builder,clone,builder,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1485553611;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from_@since 4.1.3;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = other.pathBuilder.cloneBuilder()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from,since,4,1,3;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,other,path,builder,clone,builder,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1486074560;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from_@since 4.1.3;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = other.pathBuilder.cloneBuilder()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from,since,4,1,3;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,other,path,builder,clone,builder,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1492678922;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from_@since 4.1.3;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = other.pathBuilder.cloneBuilder()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from,since,4,1,3;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,other,path,builder,clone,builder,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1493758742;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from_@since 4.1.3;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = other.pathBuilder.cloneBuilder()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from,since,4,1,3;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,other,path,builder,clone,builder,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1495868221;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from_@since 4.1.3;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = other.pathBuilder.cloneBuilder()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from,since,4,1,3;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,other,path,builder,clone,builder,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1496259743;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from_@since 4.1.3;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = other.pathBuilder.cloneBuilder()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from,since,4,1,3;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,other,path,builder,clone,builder,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1496370972;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from_@since 4.1.3;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = other.pathBuilder.cloneBuilder()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from,since,4,1,3;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,other,path,builder,clone,builder,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1496837955;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from_@since 4.1.3;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = other.pathBuilder.cloneBuilder()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from,since,4,1,3;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,other,path,builder,clone,builder,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1498780456;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from_@since 4.1.3;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = other.pathBuilder.cloneBuilder()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from,since,4,1,3;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,other,path,builder,clone,builder,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1500460652;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from_@since 4.1.3;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = other.pathBuilder.cloneBuilder()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from,since,4,1,3;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,other,path,builder,clone,builder,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1513715892;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from_@since 4.1.3;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = other.pathBuilder.cloneBuilder()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from,since,4,1,3;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,other,path,builder,clone,builder,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1515504834;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from_@since 4.1.3;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = other.pathBuilder.cloneBuilder()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from,since,4,1,3;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,other,path,builder,clone,builder,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1519588127;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from_@since 4.1.3;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = other.pathBuilder.cloneBuilder()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from,since,4,1,3;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,other,path,builder,clone,builder,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1522332352;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from_@since 4.1.3;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = other.pathBuilder.cloneBuilder()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from,since,4,1,3;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,other,path,builder,clone,builder,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1522351714;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from_@since 4.1.3;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = other.pathBuilder.cloneBuilder()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from,since,4,1,3;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,other,path,builder,clone,builder,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1522361849;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from_@since 4.1.3;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = other.pathBuilder.cloneBuilder()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from,since,4,1,3;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,other,path,builder,clone,builder,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1527192852;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from_@since 4.1.3;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = other.pathBuilder.cloneBuilder()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from,since,4,1,3;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,other,path,builder,clone,builder,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1530174524;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from_@since 4.1.3;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = other.pathBuilder.cloneBuilder()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from,since,4,1,3;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,other,path,builder,clone,builder,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1531746971;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from_@since 4.1.3;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = other.pathBuilder.cloneBuilder()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from,since,4,1,3;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,other,path,builder,clone,builder,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1531843156;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from_@since 4.1.3;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = other.pathBuilder.cloneBuilder()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from,since,4,1,3;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,other,path,builder,clone,builder,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1531863556;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from_@since 4.1.3;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = other.pathBuilder.cloneBuilder()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from,since,4,1,3;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,other,path,builder,clone,builder,this,query,params,put,all,other,query,params,this,fragment,other,fragment
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1532041662;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from_@since 4.1.3;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = other.pathBuilder.cloneBuilder()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__		this.encodeTemplate = other.encodeTemplate__		this.charset = other.charset__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from,since,4,1,3;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,other,path,builder,clone,builder,this,query,params,put,all,other,query,params,this,fragment,other,fragment,this,encode,template,other,encode,template,this,charset,other,charset
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1532041662;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from_@since 4.1.3;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = other.pathBuilder.cloneBuilder()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__		this.encodeTemplate = other.encodeTemplate__		this.charset = other.charset__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from,since,4,1,3;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,other,path,builder,clone,builder,this,query,params,put,all,other,query,params,this,fragment,other,fragment,this,encode,template,other,encode,template,this,charset,other,charset
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1536571897;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from_@since 4.1.3;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = other.pathBuilder.cloneBuilder()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__		this.encodeTemplate = other.encodeTemplate__		this.charset = other.charset__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from,since,4,1,3;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,other,path,builder,clone,builder,this,query,params,put,all,other,query,params,this,fragment,other,fragment,this,encode,template,other,encode,template,this,charset,other,charset
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1546464968;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from_@since 4.1.3;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = other.pathBuilder.cloneBuilder()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__		this.encodeTemplate = other.encodeTemplate__		this.charset = other.charset__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from,since,4,1,3;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,other,path,builder,clone,builder,this,query,params,put,all,other,query,params,this,fragment,other,fragment,this,encode,template,other,encode,template,this,charset,other,charset
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1546963593;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from_@since 4.1.3;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = other.pathBuilder.cloneBuilder()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__		this.encodeTemplate = other.encodeTemplate__		this.charset = other.charset__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from,since,4,1,3;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,other,path,builder,clone,builder,this,query,params,put,all,other,query,params,this,fragment,other,fragment,this,encode,template,other,encode,template,this,charset,other,charset
UriComponentsBuilder -> protected UriComponentsBuilder(UriComponentsBuilder other);1547005422;Create a deep copy of the given UriComponentsBuilder._@param other the other builder to copy from_@since 4.1.3;protected UriComponentsBuilder(UriComponentsBuilder other) {_		this.scheme = other.scheme__		this.ssp = other.ssp__		this.userInfo = other.userInfo__		this.host = other.host__		this.port = other.port__		this.pathBuilder = other.pathBuilder.cloneBuilder()__		this.queryParams.putAll(other.queryParams)__		this.fragment = other.fragment__		this.encodeTemplate = other.encodeTemplate__		this.charset = other.charset__	};create,a,deep,copy,of,the,given,uri,components,builder,param,other,the,other,builder,to,copy,from,since,4,1,3;protected,uri,components,builder,uri,components,builder,other,this,scheme,other,scheme,this,ssp,other,ssp,this,user,info,other,user,info,this,host,other,host,this,port,other,port,this,path,builder,other,path,builder,clone,builder,this,query,params,put,all,other,query,params,this,fragment,other,fragment,this,encode,template,other,encode,template,this,charset,other,charset
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1423547594;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if present.__@param request the source request_@return the URI components of the UR;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		URI uri = request.getURI()__		UriComponentsBuilder builder = UriComponentsBuilder.fromUri(uri)___		String scheme = uri.getScheme()__		String host = uri.getHost()__		int port = uri.getPort()___		String hostHeader = request.getHeaders().getFirst("X-Forwarded-Host")__		if (StringUtils.hasText(hostHeader)) {_			String[] hosts = StringUtils.commaDelimitedListToStringArray(hostHeader)__			String hostToUse = hosts[0]__			if (hostToUse.contains(":")) {_				String[] hostAndPort = StringUtils.split(hostToUse, ":")__				host  = hostAndPort[0]__				port = Integer.parseInt(hostAndPort[1])__			}_			else {_				host = hostToUse__				port = -1__			}_		}__		String portHeader = request.getHeaders().getFirst("X-Forwarded-Port")__		if (StringUtils.hasText(portHeader)) {_			port = Integer.parseInt(portHeader)__		}__		String protocolHeader = request.getHeaders().getFirst("X-Forwarded-Proto")__		if (StringUtils.hasText(protocolHeader)) {_			scheme = protocolHeader__		}__		builder.scheme(scheme)__		builder.host(host)__		if (scheme.equals("http") && port != 80 || scheme.equals("https") && port != 443) {_			builder.port(port)__		}_		return builder__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,present,param,request,the,source,request,return,the,uri,components,of,the,ur;public,static,uri,components,builder,from,http,request,http,request,request,uri,uri,request,get,uri,uri,components,builder,builder,uri,components,builder,from,uri,uri,string,scheme,uri,get,scheme,string,host,uri,get,host,int,port,uri,get,port,string,host,header,request,get,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,string,hosts,string,utils,comma,delimited,list,to,string,array,host,header,string,host,to,use,hosts,0,if,host,to,use,contains,string,host,and,port,string,utils,split,host,to,use,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,host,to,use,port,1,string,port,header,request,get,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,port,header,string,protocol,header,request,get,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,protocol,header,builder,scheme,scheme,builder,host,host,if,scheme,equals,http,port,80,scheme,equals,https,port,443,builder,port,port,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1424274316;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if present._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		URI uri = request.getURI()__		UriComponentsBuilder builder = UriComponentsBuilder.fromUri(uri)___		String scheme = uri.getScheme()__		String host = uri.getHost()__		int port = uri.getPort()___		String hostHeader = request.getHeaders().getFirst("X-Forwarded-Host")__		if (StringUtils.hasText(hostHeader)) {_			String[] hosts = StringUtils.commaDelimitedListToStringArray(hostHeader)__			String hostToUse = hosts[0]__			if (hostToUse.contains(":")) {_				String[] hostAndPort = StringUtils.split(hostToUse, ":")__				host  = hostAndPort[0]__				port = Integer.parseInt(hostAndPort[1])__			}_			else {_				host = hostToUse__				port = -1__			}_		}__		String portHeader = request.getHeaders().getFirst("X-Forwarded-Port")__		if (StringUtils.hasText(portHeader)) {_			port = Integer.parseInt(portHeader)__		}__		String protocolHeader = request.getHeaders().getFirst("X-Forwarded-Proto")__		if (StringUtils.hasText(protocolHeader)) {_			scheme = protocolHeader__		}__		builder.scheme(scheme)__		builder.host(host)__		if (scheme.equals("http") && port != 80 || scheme.equals("https") && port != 443) {_			builder.port(port)__		}_		return builder__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,present,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,uri,uri,request,get,uri,uri,components,builder,builder,uri,components,builder,from,uri,uri,string,scheme,uri,get,scheme,string,host,uri,get,host,int,port,uri,get,port,string,host,header,request,get,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,string,hosts,string,utils,comma,delimited,list,to,string,array,host,header,string,host,to,use,hosts,0,if,host,to,use,contains,string,host,and,port,string,utils,split,host,to,use,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,host,to,use,port,1,string,port,header,request,get,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,port,header,string,protocol,header,request,get,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,protocol,header,builder,scheme,scheme,builder,host,host,if,scheme,equals,http,port,80,scheme,equals,https,port,443,builder,port,port,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1425610347;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if present._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		URI uri = request.getURI()__		UriComponentsBuilder builder = UriComponentsBuilder.fromUri(uri)___		String scheme = uri.getScheme()__		String host = uri.getHost()__		int port = uri.getPort()___		String hostHeader = request.getHeaders().getFirst("X-Forwarded-Host")__		if (StringUtils.hasText(hostHeader)) {_			String[] hosts = StringUtils.commaDelimitedListToStringArray(hostHeader)__			String hostToUse = hosts[0]__			if (hostToUse.contains(":")) {_				String[] hostAndPort = StringUtils.split(hostToUse, ":")__				host  = hostAndPort[0]__				port = Integer.parseInt(hostAndPort[1])__			}_			else {_				host = hostToUse__				port = -1__			}_		}__		String portHeader = request.getHeaders().getFirst("X-Forwarded-Port")__		if (StringUtils.hasText(portHeader)) {_			port = Integer.parseInt(portHeader)__		}__		String protocolHeader = request.getHeaders().getFirst("X-Forwarded-Proto")__		if (StringUtils.hasText(protocolHeader)) {_			scheme = protocolHeader__		}__		builder.scheme(scheme)__		builder.host(host)__		builder.port(null)__		if (scheme.equals("http") && port != 80 || scheme.equals("https") && port != 443) {_			builder.port(port)__		}_		return builder__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,present,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,uri,uri,request,get,uri,uri,components,builder,builder,uri,components,builder,from,uri,uri,string,scheme,uri,get,scheme,string,host,uri,get,host,int,port,uri,get,port,string,host,header,request,get,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,string,hosts,string,utils,comma,delimited,list,to,string,array,host,header,string,host,to,use,hosts,0,if,host,to,use,contains,string,host,and,port,string,utils,split,host,to,use,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,host,to,use,port,1,string,port,header,request,get,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,port,header,string,protocol,header,request,get,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,protocol,header,builder,scheme,scheme,builder,host,host,builder,port,null,if,scheme,equals,http,port,80,scheme,equals,https,port,443,builder,port,port,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1426255003;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if present._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		URI uri = request.getURI()__		UriComponentsBuilder builder = UriComponentsBuilder.fromUri(uri)___		String scheme = uri.getScheme()__		String host = uri.getHost()__		int port = uri.getPort()___		String hostHeader = request.getHeaders().getFirst("X-Forwarded-Host")__		if (StringUtils.hasText(hostHeader)) {_			String[] hosts = StringUtils.commaDelimitedListToStringArray(hostHeader)__			String hostToUse = hosts[0]__			if (hostToUse.contains(":")) {_				String[] hostAndPort = StringUtils.split(hostToUse, ":")__				host  = hostAndPort[0]__				port = Integer.parseInt(hostAndPort[1])__			}_			else {_				host = hostToUse__				port = -1__			}_		}__		String portHeader = request.getHeaders().getFirst("X-Forwarded-Port")__		if (StringUtils.hasText(portHeader)) {_			String[] ports = StringUtils.commaDelimitedListToStringArray(portHeader)__			port = Integer.parseInt(ports[0])__		}__		String protocolHeader = request.getHeaders().getFirst("X-Forwarded-Proto")__		if (StringUtils.hasText(protocolHeader)) {_			scheme = protocolHeader__		}__		builder.scheme(scheme)__		builder.host(host)__		builder.port(null)__		if (scheme.equals("http") && port != 80 || scheme.equals("https") && port != 443) {_			builder.port(port)__		}_		return builder__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,present,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,uri,uri,request,get,uri,uri,components,builder,builder,uri,components,builder,from,uri,uri,string,scheme,uri,get,scheme,string,host,uri,get,host,int,port,uri,get,port,string,host,header,request,get,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,string,hosts,string,utils,comma,delimited,list,to,string,array,host,header,string,host,to,use,hosts,0,if,host,to,use,contains,string,host,and,port,string,utils,split,host,to,use,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,host,to,use,port,1,string,port,header,request,get,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,string,ports,string,utils,comma,delimited,list,to,string,array,port,header,port,integer,parse,int,ports,0,string,protocol,header,request,get,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,protocol,header,builder,scheme,scheme,builder,host,host,builder,port,null,if,scheme,equals,http,port,80,scheme,equals,https,port,443,builder,port,port,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1426266172;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if present._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		URI uri = request.getURI()__		UriComponentsBuilder builder = UriComponentsBuilder.fromUri(uri)___		String scheme = uri.getScheme()__		String host = uri.getHost()__		int port = uri.getPort()___		String hostHeader = request.getHeaders().getFirst("X-Forwarded-Host")__		if (StringUtils.hasText(hostHeader)) {_			String[] hosts = StringUtils.commaDelimitedListToStringArray(hostHeader)__			String hostToUse = hosts[0]__			if (hostToUse.contains(":")) {_				String[] hostAndPort = StringUtils.split(hostToUse, ":")__				host  = hostAndPort[0]__				port = Integer.parseInt(hostAndPort[1])__			}_			else {_				host = hostToUse__				port = -1__			}_		}__		String portHeader = request.getHeaders().getFirst("X-Forwarded-Port")__		if (StringUtils.hasText(portHeader)) {_			String[] ports = StringUtils.commaDelimitedListToStringArray(portHeader)__			port = Integer.parseInt(ports[0])__		}__		String protocolHeader = request.getHeaders().getFirst("X-Forwarded-Proto")__		if (StringUtils.hasText(protocolHeader)) {_			String[] protocols = StringUtils.commaDelimitedListToStringArray(protocolHeader)__			scheme = protocols[0]__		}__		builder.scheme(scheme)__		builder.host(host)__		builder.port(null)__		if (scheme.equals("http") && port != 80 || scheme.equals("https") && port != 443) {_			builder.port(port)__		}_		return builder__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,present,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,uri,uri,request,get,uri,uri,components,builder,builder,uri,components,builder,from,uri,uri,string,scheme,uri,get,scheme,string,host,uri,get,host,int,port,uri,get,port,string,host,header,request,get,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,string,hosts,string,utils,comma,delimited,list,to,string,array,host,header,string,host,to,use,hosts,0,if,host,to,use,contains,string,host,and,port,string,utils,split,host,to,use,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,host,to,use,port,1,string,port,header,request,get,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,string,ports,string,utils,comma,delimited,list,to,string,array,port,header,port,integer,parse,int,ports,0,string,protocol,header,request,get,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,string,protocols,string,utils,comma,delimited,list,to,string,array,protocol,header,scheme,protocols,0,builder,scheme,scheme,builder,host,host,builder,port,null,if,scheme,equals,http,port,80,scheme,equals,https,port,443,builder,port,port,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1426267150;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if present._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		URI uri = request.getURI()__		UriComponentsBuilder builder = UriComponentsBuilder.fromUri(uri)___		String scheme = uri.getScheme()__		String host = uri.getHost()__		int port = uri.getPort()___		String hostHeader = request.getHeaders().getFirst("X-Forwarded-Host")__		if (StringUtils.hasText(hostHeader)) {_			String[] hosts = StringUtils.commaDelimitedListToStringArray(hostHeader)__			String hostToUse = hosts[0]__			if (hostToUse.contains(":")) {_				String[] hostAndPort = StringUtils.split(hostToUse, ":")__				host = hostAndPort[0]__				port = Integer.parseInt(hostAndPort[1])__			}_			else {_				host = hostToUse__				port = -1__			}_		}__		String portHeader = request.getHeaders().getFirst("X-Forwarded-Port")__		if (StringUtils.hasText(portHeader)) {_			String[] ports = StringUtils.commaDelimitedListToStringArray(portHeader)__			port = Integer.parseInt(ports[0])__		}__		String protocolHeader = request.getHeaders().getFirst("X-Forwarded-Proto")__		if (StringUtils.hasText(protocolHeader)) {_			String[] protocols = StringUtils.commaDelimitedListToStringArray(protocolHeader)__			scheme = protocols[0]__		}__		builder.scheme(scheme)__		builder.host(host)__		builder.port(null)__		if (scheme.equals("http") && port != 80 || scheme.equals("https") && port != 443) {_			builder.port(port)__		}_		return builder__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,present,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,uri,uri,request,get,uri,uri,components,builder,builder,uri,components,builder,from,uri,uri,string,scheme,uri,get,scheme,string,host,uri,get,host,int,port,uri,get,port,string,host,header,request,get,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,string,hosts,string,utils,comma,delimited,list,to,string,array,host,header,string,host,to,use,hosts,0,if,host,to,use,contains,string,host,and,port,string,utils,split,host,to,use,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,host,to,use,port,1,string,port,header,request,get,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,string,ports,string,utils,comma,delimited,list,to,string,array,port,header,port,integer,parse,int,ports,0,string,protocol,header,request,get,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,string,protocols,string,utils,comma,delimited,list,to,string,array,protocol,header,scheme,protocols,0,builder,scheme,scheme,builder,host,host,builder,port,null,if,scheme,equals,http,port,80,scheme,equals,https,port,443,builder,port,port,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1426553101;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if present._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		URI uri = request.getURI()__		UriComponentsBuilder builder = UriComponentsBuilder.fromUri(uri)___		String scheme = uri.getScheme()__		String host = uri.getHost()__		int port = uri.getPort()___		String hostHeader = request.getHeaders().getFirst("X-Forwarded-Host")__		if (StringUtils.hasText(hostHeader)) {_			String[] hosts = StringUtils.commaDelimitedListToStringArray(hostHeader)__			String hostToUse = hosts[0]__			if (hostToUse.contains(":")) {_				String[] hostAndPort = StringUtils.split(hostToUse, ":")__				host = hostAndPort[0]__				port = Integer.parseInt(hostAndPort[1])__			}_			else {_				host = hostToUse__				port = -1__			}_		}__		String portHeader = request.getHeaders().getFirst("X-Forwarded-Port")__		if (StringUtils.hasText(portHeader)) {_			String[] ports = StringUtils.commaDelimitedListToStringArray(portHeader)__			port = Integer.parseInt(ports[0])__		}__		String protocolHeader = request.getHeaders().getFirst("X-Forwarded-Proto")__		if (StringUtils.hasText(protocolHeader)) {_			String[] protocols = StringUtils.commaDelimitedListToStringArray(protocolHeader)__			scheme = protocols[0]__		}__		builder.scheme(scheme)__		builder.host(host)__		builder.port(null)__		if (scheme.equals("http") && port != 80 || scheme.equals("https") && port != 443) {_			builder.port(port)__		}_		return builder__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,present,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,uri,uri,request,get,uri,uri,components,builder,builder,uri,components,builder,from,uri,uri,string,scheme,uri,get,scheme,string,host,uri,get,host,int,port,uri,get,port,string,host,header,request,get,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,string,hosts,string,utils,comma,delimited,list,to,string,array,host,header,string,host,to,use,hosts,0,if,host,to,use,contains,string,host,and,port,string,utils,split,host,to,use,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,host,to,use,port,1,string,port,header,request,get,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,string,ports,string,utils,comma,delimited,list,to,string,array,port,header,port,integer,parse,int,ports,0,string,protocol,header,request,get,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,string,protocols,string,utils,comma,delimited,list,to,string,array,protocol,header,scheme,protocols,0,builder,scheme,scheme,builder,host,host,builder,port,null,if,scheme,equals,http,port,80,scheme,equals,https,port,443,builder,port,port,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1426880143;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if present._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		URI uri = request.getURI()__		UriComponentsBuilder builder = UriComponentsBuilder.fromUri(uri)___		String scheme = uri.getScheme()__		String host = uri.getHost()__		int port = uri.getPort()___		String hostHeader = request.getHeaders().getFirst("X-Forwarded-Host")__		if (StringUtils.hasText(hostHeader)) {_			String[] hosts = StringUtils.commaDelimitedListToStringArray(hostHeader)__			String hostToUse = hosts[0]__			if (hostToUse.contains(":")) {_				String[] hostAndPort = StringUtils.split(hostToUse, ":")__				host = hostAndPort[0]__				port = Integer.parseInt(hostAndPort[1])__			}_			else {_				host = hostToUse__				port = -1__			}_		}__		String portHeader = request.getHeaders().getFirst("X-Forwarded-Port")__		if (StringUtils.hasText(portHeader)) {_			String[] ports = StringUtils.commaDelimitedListToStringArray(portHeader)__			port = Integer.parseInt(ports[0])__		}__		String protocolHeader = request.getHeaders().getFirst("X-Forwarded-Proto")__		if (StringUtils.hasText(protocolHeader)) {_			String[] protocols = StringUtils.commaDelimitedListToStringArray(protocolHeader)__			scheme = protocols[0]__		}__		builder.scheme(scheme)__		builder.host(host)__		builder.port(null)__		if (scheme.equals("http") && port != 80 || scheme.equals("https") && port != 443) {_			builder.port(port)__		}_		return builder__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,present,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,uri,uri,request,get,uri,uri,components,builder,builder,uri,components,builder,from,uri,uri,string,scheme,uri,get,scheme,string,host,uri,get,host,int,port,uri,get,port,string,host,header,request,get,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,string,hosts,string,utils,comma,delimited,list,to,string,array,host,header,string,host,to,use,hosts,0,if,host,to,use,contains,string,host,and,port,string,utils,split,host,to,use,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,host,to,use,port,1,string,port,header,request,get,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,string,ports,string,utils,comma,delimited,list,to,string,array,port,header,port,integer,parse,int,ports,0,string,protocol,header,request,get,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,string,protocols,string,utils,comma,delimited,list,to,string,array,protocol,header,scheme,protocols,0,builder,scheme,scheme,builder,host,host,builder,port,null,if,scheme,equals,http,port,80,scheme,equals,https,port,443,builder,port,port,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1426880143;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if present._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		URI uri = request.getURI()__		UriComponentsBuilder builder = UriComponentsBuilder.fromUri(uri)___		String scheme = uri.getScheme()__		String host = uri.getHost()__		int port = uri.getPort()___		String hostHeader = request.getHeaders().getFirst("X-Forwarded-Host")__		if (StringUtils.hasText(hostHeader)) {_			String[] hosts = StringUtils.commaDelimitedListToStringArray(hostHeader)__			String hostToUse = hosts[0]__			if (hostToUse.contains(":")) {_				String[] hostAndPort = StringUtils.split(hostToUse, ":")__				host = hostAndPort[0]__				port = Integer.parseInt(hostAndPort[1])__			}_			else {_				host = hostToUse__				port = -1__			}_		}__		String portHeader = request.getHeaders().getFirst("X-Forwarded-Port")__		if (StringUtils.hasText(portHeader)) {_			String[] ports = StringUtils.commaDelimitedListToStringArray(portHeader)__			port = Integer.parseInt(ports[0])__		}__		String protocolHeader = request.getHeaders().getFirst("X-Forwarded-Proto")__		if (StringUtils.hasText(protocolHeader)) {_			String[] protocols = StringUtils.commaDelimitedListToStringArray(protocolHeader)__			scheme = protocols[0]__		}__		builder.scheme(scheme)__		builder.host(host)__		builder.port(null)__		if (scheme.equals("http") && port != 80 || scheme.equals("https") && port != 443) {_			builder.port(port)__		}_		return builder__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,present,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,uri,uri,request,get,uri,uri,components,builder,builder,uri,components,builder,from,uri,uri,string,scheme,uri,get,scheme,string,host,uri,get,host,int,port,uri,get,port,string,host,header,request,get,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,string,hosts,string,utils,comma,delimited,list,to,string,array,host,header,string,host,to,use,hosts,0,if,host,to,use,contains,string,host,and,port,string,utils,split,host,to,use,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,host,to,use,port,1,string,port,header,request,get,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,string,ports,string,utils,comma,delimited,list,to,string,array,port,header,port,integer,parse,int,ports,0,string,protocol,header,request,get,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,string,protocols,string,utils,comma,delimited,list,to,string,array,protocol,header,scheme,protocols,0,builder,scheme,scheme,builder,host,host,builder,port,null,if,scheme,equals,http,port,80,scheme,equals,https,port,443,builder,port,port,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1427143443;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if present._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		URI uri = request.getURI()__		UriComponentsBuilder builder = UriComponentsBuilder.fromUri(uri)___		String scheme = uri.getScheme()__		String host = uri.getHost()__		int port = uri.getPort()___		String hostHeader = request.getHeaders().getFirst("X-Forwarded-Host")__		if (StringUtils.hasText(hostHeader)) {_			String[] hosts = StringUtils.commaDelimitedListToStringArray(hostHeader)__			String hostToUse = hosts[0]__			if (hostToUse.contains(":")) {_				String[] hostAndPort = StringUtils.split(hostToUse, ":")__				host = hostAndPort[0]__				port = Integer.parseInt(hostAndPort[1])__			}_			else {_				host = hostToUse__				port = -1__			}_		}__		String portHeader = request.getHeaders().getFirst("X-Forwarded-Port")__		if (StringUtils.hasText(portHeader)) {_			String[] ports = StringUtils.commaDelimitedListToStringArray(portHeader)__			port = Integer.parseInt(ports[0])__		}__		String protocolHeader = request.getHeaders().getFirst("X-Forwarded-Proto")__		if (StringUtils.hasText(protocolHeader)) {_			String[] protocols = StringUtils.commaDelimitedListToStringArray(protocolHeader)__			scheme = protocols[0]__		}__		builder.scheme(scheme)__		builder.host(host)__		builder.port(null)__		if (scheme.equals("http") && port != 80 || scheme.equals("https") && port != 443) {_			builder.port(port)__		}_		return builder__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,present,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,uri,uri,request,get,uri,uri,components,builder,builder,uri,components,builder,from,uri,uri,string,scheme,uri,get,scheme,string,host,uri,get,host,int,port,uri,get,port,string,host,header,request,get,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,string,hosts,string,utils,comma,delimited,list,to,string,array,host,header,string,host,to,use,hosts,0,if,host,to,use,contains,string,host,and,port,string,utils,split,host,to,use,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,host,to,use,port,1,string,port,header,request,get,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,string,ports,string,utils,comma,delimited,list,to,string,array,port,header,port,integer,parse,int,ports,0,string,protocol,header,request,get,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,string,protocols,string,utils,comma,delimited,list,to,string,array,protocol,header,scheme,protocols,0,builder,scheme,scheme,builder,host,host,builder,port,null,if,scheme,equals,http,port,80,scheme,equals,https,port,443,builder,port,port,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1430734105;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if present._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		URI uri = request.getURI()__		UriComponentsBuilder builder = UriComponentsBuilder.fromUri(uri)___		String scheme = uri.getScheme()__		String host = uri.getHost()__		int port = uri.getPort()___		String hostHeader = request.getHeaders().getFirst("X-Forwarded-Host")__		if (StringUtils.hasText(hostHeader)) {_			String[] hosts = StringUtils.commaDelimitedListToStringArray(hostHeader)__			String hostToUse = hosts[0]__			if (hostToUse.contains(":")) {_				String[] hostAndPort = StringUtils.split(hostToUse, ":")__				host = hostAndPort[0]__				port = Integer.parseInt(hostAndPort[1])__			}_			else {_				host = hostToUse__				port = -1__			}_		}__		String portHeader = request.getHeaders().getFirst("X-Forwarded-Port")__		if (StringUtils.hasText(portHeader)) {_			String[] ports = StringUtils.commaDelimitedListToStringArray(portHeader)__			port = Integer.parseInt(ports[0])__		}__		String protocolHeader = request.getHeaders().getFirst("X-Forwarded-Proto")__		if (StringUtils.hasText(protocolHeader)) {_			String[] protocols = StringUtils.commaDelimitedListToStringArray(protocolHeader)__			scheme = protocols[0]__		}__		builder.scheme(scheme)__		builder.host(host)__		builder.port(null)__		if (scheme.equals("http") && port != 80 || scheme.equals("https") && port != 443) {_			builder.port(port)__		}_		return builder__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,present,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,uri,uri,request,get,uri,uri,components,builder,builder,uri,components,builder,from,uri,uri,string,scheme,uri,get,scheme,string,host,uri,get,host,int,port,uri,get,port,string,host,header,request,get,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,string,hosts,string,utils,comma,delimited,list,to,string,array,host,header,string,host,to,use,hosts,0,if,host,to,use,contains,string,host,and,port,string,utils,split,host,to,use,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,host,to,use,port,1,string,port,header,request,get,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,string,ports,string,utils,comma,delimited,list,to,string,array,port,header,port,integer,parse,int,ports,0,string,protocol,header,request,get,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,string,protocols,string,utils,comma,delimited,list,to,string,array,protocol,header,scheme,protocols,0,builder,scheme,scheme,builder,host,host,builder,port,null,if,scheme,equals,http,port,80,scheme,equals,https,port,443,builder,port,port,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1433951292;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>, or_"X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if "Forwarded" is_not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		URI uri = request.getURI()__		UriComponentsBuilder builder = UriComponentsBuilder.fromUri(uri)___		String scheme = uri.getScheme()__		String host = uri.getHost()__		int port = uri.getPort()___		String forwardedHeader = request.getHeaders().getFirst("Forwarded")__		if (StringUtils.hasText(forwardedHeader)) {_			String forwardedToUse = StringUtils.commaDelimitedListToStringArray(forwardedHeader)[0]__			Matcher m = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__			if (m.find()) {_				host = m.group(1).trim()__			}_			m = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__			if (m.find()) {_				scheme = m.group(1).trim()__			}_		}_		else {_			String hostHeader = request.getHeaders().getFirst("X-Forwarded-Host")__			if (StringUtils.hasText(hostHeader)) {_				String[] hosts = StringUtils.commaDelimitedListToStringArray(hostHeader)__				String hostToUse = hosts[0]__				if (hostToUse.contains(":")) {_					String[] hostAndPort = StringUtils.split(hostToUse, ":")__					host = hostAndPort[0]__					port = Integer.parseInt(hostAndPort[1])__				}_				else {_					host = hostToUse__					port = -1__				}_			}__			String portHeader = request.getHeaders().getFirst("X-Forwarded-Port")__			if (StringUtils.hasText(portHeader)) {_				String[] ports = StringUtils.commaDelimitedListToStringArray(portHeader)__				port = Integer.parseInt(ports[0])__			}__			String protocolHeader = request.getHeaders().getFirst("X-Forwarded-Proto")__			if (StringUtils.hasText(protocolHeader)) {_				String[] protocols = StringUtils.commaDelimitedListToStringArray(protocolHeader)__				scheme = protocols[0]__			}_		}__		builder.scheme(scheme)__		builder.host(host)__		builder.port(null)__		if (scheme.equals("http") && port != 80 || scheme.equals("https") && port != 443) {_			builder.port(port)__		}_		return builder__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,uri,uri,request,get,uri,uri,components,builder,builder,uri,components,builder,from,uri,uri,string,scheme,uri,get,scheme,string,host,uri,get,host,int,port,uri,get,port,string,forwarded,header,request,get,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,comma,delimited,list,to,string,array,forwarded,header,0,matcher,m,matcher,forwarded,to,use,if,m,find,host,m,group,1,trim,m,matcher,forwarded,to,use,if,m,find,scheme,m,group,1,trim,else,string,host,header,request,get,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,string,hosts,string,utils,comma,delimited,list,to,string,array,host,header,string,host,to,use,hosts,0,if,host,to,use,contains,string,host,and,port,string,utils,split,host,to,use,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,host,to,use,port,1,string,port,header,request,get,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,string,ports,string,utils,comma,delimited,list,to,string,array,port,header,port,integer,parse,int,ports,0,string,protocol,header,request,get,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,string,protocols,string,utils,comma,delimited,list,to,string,array,protocol,header,scheme,protocols,0,builder,scheme,scheme,builder,host,host,builder,port,null,if,scheme,equals,http,port,80,scheme,equals,https,port,443,builder,port,port,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1437567436;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>, or_"X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if "Forwarded" is_not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		URI uri = request.getURI()__		UriComponentsBuilder builder = UriComponentsBuilder.fromUri(uri)___		String scheme = uri.getScheme()__		String host = uri.getHost()__		int port = uri.getPort()___		String forwardedHeader = request.getHeaders().getFirst("Forwarded")__		if (StringUtils.hasText(forwardedHeader)) {_			String forwardedToUse = StringUtils.commaDelimitedListToStringArray(forwardedHeader)[0]__			Matcher m = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__			if (m.find()) {_				host = m.group(1).trim()__			}_			m = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__			if (m.find()) {_				scheme = m.group(1).trim()__			}_		}_		else {_			String hostHeader = request.getHeaders().getFirst("X-Forwarded-Host")__			if (StringUtils.hasText(hostHeader)) {_				String[] hosts = StringUtils.commaDelimitedListToStringArray(hostHeader)__				String hostToUse = hosts[0]__				if (hostToUse.contains(":")) {_					String[] hostAndPort = StringUtils.split(hostToUse, ":")__					host = hostAndPort[0]__					port = Integer.parseInt(hostAndPort[1])__				}_				else {_					host = hostToUse__					port = -1__				}_			}__			String portHeader = request.getHeaders().getFirst("X-Forwarded-Port")__			if (StringUtils.hasText(portHeader)) {_				String[] ports = StringUtils.commaDelimitedListToStringArray(portHeader)__				port = Integer.parseInt(ports[0])__			}__			String protocolHeader = request.getHeaders().getFirst("X-Forwarded-Proto")__			if (StringUtils.hasText(protocolHeader)) {_				String[] protocols = StringUtils.commaDelimitedListToStringArray(protocolHeader)__				scheme = protocols[0]__			}_		}__		builder.scheme(scheme)__		builder.host(host)__		builder.port(null)__		if (scheme.equals("http") && port != 80 || scheme.equals("https") && port != 443) {_			builder.port(port)__		}_		return builder__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,uri,uri,request,get,uri,uri,components,builder,builder,uri,components,builder,from,uri,uri,string,scheme,uri,get,scheme,string,host,uri,get,host,int,port,uri,get,port,string,forwarded,header,request,get,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,comma,delimited,list,to,string,array,forwarded,header,0,matcher,m,matcher,forwarded,to,use,if,m,find,host,m,group,1,trim,m,matcher,forwarded,to,use,if,m,find,scheme,m,group,1,trim,else,string,host,header,request,get,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,string,hosts,string,utils,comma,delimited,list,to,string,array,host,header,string,host,to,use,hosts,0,if,host,to,use,contains,string,host,and,port,string,utils,split,host,to,use,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,host,to,use,port,1,string,port,header,request,get,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,string,ports,string,utils,comma,delimited,list,to,string,array,port,header,port,integer,parse,int,ports,0,string,protocol,header,request,get,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,string,protocols,string,utils,comma,delimited,list,to,string,array,protocol,header,scheme,protocols,0,builder,scheme,scheme,builder,host,host,builder,port,null,if,scheme,equals,http,port,80,scheme,equals,https,port,443,builder,port,port,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1438166381;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>, or_"X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if "Forwarded" is_not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		URI uri = request.getURI()__		UriComponentsBuilder builder = UriComponentsBuilder.fromUri(uri)___		String scheme = uri.getScheme()__		String host = uri.getHost()__		int port = uri.getPort()___		String forwardedHeader = request.getHeaders().getFirst("Forwarded")__		if (StringUtils.hasText(forwardedHeader)) {_			String forwardedToUse = StringUtils.commaDelimitedListToStringArray(forwardedHeader)[0]__			Matcher m = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__			if (m.find()) {_				host = m.group(1).trim()__			}_			m = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__			if (m.find()) {_				scheme = m.group(1).trim()__			}_		}_		else {_			String hostHeader = request.getHeaders().getFirst("X-Forwarded-Host")__			if (StringUtils.hasText(hostHeader)) {_				String[] hosts = StringUtils.commaDelimitedListToStringArray(hostHeader)__				String hostToUse = hosts[0]__				if (hostToUse.contains(":")) {_					String[] hostAndPort = StringUtils.split(hostToUse, ":")__					host = hostAndPort[0]__					port = Integer.parseInt(hostAndPort[1])__				}_				else {_					host = hostToUse__					port = -1__				}_			}__			String portHeader = request.getHeaders().getFirst("X-Forwarded-Port")__			if (StringUtils.hasText(portHeader)) {_				String[] ports = StringUtils.commaDelimitedListToStringArray(portHeader)__				port = Integer.parseInt(ports[0])__			}__			String protocolHeader = request.getHeaders().getFirst("X-Forwarded-Proto")__			if (StringUtils.hasText(protocolHeader)) {_				String[] protocols = StringUtils.commaDelimitedListToStringArray(protocolHeader)__				scheme = protocols[0]__			}_		}__		builder.scheme(scheme)__		builder.host(host)__		builder.port(null)__		if (scheme.equals("http") && port != 80 || scheme.equals("https") && port != 443) {_			builder.port(port)__		}_		return builder__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,uri,uri,request,get,uri,uri,components,builder,builder,uri,components,builder,from,uri,uri,string,scheme,uri,get,scheme,string,host,uri,get,host,int,port,uri,get,port,string,forwarded,header,request,get,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,comma,delimited,list,to,string,array,forwarded,header,0,matcher,m,matcher,forwarded,to,use,if,m,find,host,m,group,1,trim,m,matcher,forwarded,to,use,if,m,find,scheme,m,group,1,trim,else,string,host,header,request,get,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,string,hosts,string,utils,comma,delimited,list,to,string,array,host,header,string,host,to,use,hosts,0,if,host,to,use,contains,string,host,and,port,string,utils,split,host,to,use,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,host,to,use,port,1,string,port,header,request,get,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,string,ports,string,utils,comma,delimited,list,to,string,array,port,header,port,integer,parse,int,ports,0,string,protocol,header,request,get,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,string,protocols,string,utils,comma,delimited,list,to,string,array,protocol,header,scheme,protocols,0,builder,scheme,scheme,builder,host,host,builder,port,null,if,scheme,equals,http,port,80,scheme,equals,https,port,443,builder,port,port,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1443431031;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>, or_"X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if "Forwarded" is_not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		URI uri = request.getURI()__		UriComponentsBuilder builder = UriComponentsBuilder.fromUri(uri)___		String scheme = uri.getScheme()__		String host = uri.getHost()__		int port = uri.getPort()___		String forwardedHeader = request.getHeaders().getFirst("Forwarded")__		if (StringUtils.hasText(forwardedHeader)) {_			String forwardedToUse = StringUtils.commaDelimitedListToStringArray(forwardedHeader)[0]__			Matcher m = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__			if (m.find()) {_				host = m.group(1).trim()__			}_			m = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__			if (m.find()) {_				scheme = m.group(1).trim()__			}_		}_		else {_			String hostHeader = request.getHeaders().getFirst("X-Forwarded-Host")__			if (StringUtils.hasText(hostHeader)) {_				String[] hosts = StringUtils.commaDelimitedListToStringArray(hostHeader)__				String hostToUse = hosts[0]__				if (hostToUse.contains(":")) {_					String[] hostAndPort = StringUtils.split(hostToUse, ":")__					host = hostAndPort[0]__					port = Integer.parseInt(hostAndPort[1])__				}_				else {_					host = hostToUse__					port = -1__				}_			}__			String portHeader = request.getHeaders().getFirst("X-Forwarded-Port")__			if (StringUtils.hasText(portHeader)) {_				String[] ports = StringUtils.commaDelimitedListToStringArray(portHeader)__				port = Integer.parseInt(ports[0])__			}__			String protocolHeader = request.getHeaders().getFirst("X-Forwarded-Proto")__			if (StringUtils.hasText(protocolHeader)) {_				String[] protocols = StringUtils.commaDelimitedListToStringArray(protocolHeader)__				scheme = protocols[0]__			}_		}__		builder.scheme(scheme)__		builder.host(host)__		builder.port(null)__		if (scheme.equals("http") && port != 80 || scheme.equals("https") && port != 443) {_			builder.port(port)__		}_		return builder__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,uri,uri,request,get,uri,uri,components,builder,builder,uri,components,builder,from,uri,uri,string,scheme,uri,get,scheme,string,host,uri,get,host,int,port,uri,get,port,string,forwarded,header,request,get,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,comma,delimited,list,to,string,array,forwarded,header,0,matcher,m,matcher,forwarded,to,use,if,m,find,host,m,group,1,trim,m,matcher,forwarded,to,use,if,m,find,scheme,m,group,1,trim,else,string,host,header,request,get,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,string,hosts,string,utils,comma,delimited,list,to,string,array,host,header,string,host,to,use,hosts,0,if,host,to,use,contains,string,host,and,port,string,utils,split,host,to,use,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,host,to,use,port,1,string,port,header,request,get,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,string,ports,string,utils,comma,delimited,list,to,string,array,port,header,port,integer,parse,int,ports,0,string,protocol,header,request,get,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,string,protocols,string,utils,comma,delimited,list,to,string,array,protocol,header,scheme,protocols,0,builder,scheme,scheme,builder,host,host,builder,port,null,if,scheme,equals,http,port,80,scheme,equals,https,port,443,builder,port,port,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1443797712;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>, or_"X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if "Forwarded" is_not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		URI uri = request.getURI()__		UriComponentsBuilder builder = UriComponentsBuilder.fromUri(uri)___		String scheme = uri.getScheme()__		String host = uri.getHost()__		int port = uri.getPort()___		String forwardedHeader = request.getHeaders().getFirst("Forwarded")__		if (StringUtils.hasText(forwardedHeader)) {_			String forwardedToUse = StringUtils.commaDelimitedListToStringArray(forwardedHeader)[0]__			Matcher m = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__			if (m.find()) {_				host = m.group(1).trim()__			}_			m = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__			if (m.find()) {_				scheme = m.group(1).trim()__			}_		}_		else {_			String hostHeader = request.getHeaders().getFirst("X-Forwarded-Host")__			if (StringUtils.hasText(hostHeader)) {_				String[] hosts = StringUtils.commaDelimitedListToStringArray(hostHeader)__				String hostToUse = hosts[0]__				if (hostToUse.contains(":")) {_					String[] hostAndPort = StringUtils.split(hostToUse, ":")__					host = hostAndPort[0]__					port = Integer.parseInt(hostAndPort[1])__				}_				else {_					host = hostToUse__					port = -1__				}_			}__			String portHeader = request.getHeaders().getFirst("X-Forwarded-Port")__			if (StringUtils.hasText(portHeader)) {_				String[] ports = StringUtils.commaDelimitedListToStringArray(portHeader)__				port = Integer.parseInt(ports[0])__			}__			String protocolHeader = request.getHeaders().getFirst("X-Forwarded-Proto")__			if (StringUtils.hasText(protocolHeader)) {_				String[] protocols = StringUtils.commaDelimitedListToStringArray(protocolHeader)__				scheme = protocols[0]__			}_		}__		builder.scheme(scheme)__		builder.host(host)__		builder.port(null)__		if (scheme.equals("http") && port != 80 || scheme.equals("https") && port != 443) {_			builder.port(port)__		}_		return builder__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,uri,uri,request,get,uri,uri,components,builder,builder,uri,components,builder,from,uri,uri,string,scheme,uri,get,scheme,string,host,uri,get,host,int,port,uri,get,port,string,forwarded,header,request,get,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,comma,delimited,list,to,string,array,forwarded,header,0,matcher,m,matcher,forwarded,to,use,if,m,find,host,m,group,1,trim,m,matcher,forwarded,to,use,if,m,find,scheme,m,group,1,trim,else,string,host,header,request,get,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,string,hosts,string,utils,comma,delimited,list,to,string,array,host,header,string,host,to,use,hosts,0,if,host,to,use,contains,string,host,and,port,string,utils,split,host,to,use,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,host,to,use,port,1,string,port,header,request,get,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,string,ports,string,utils,comma,delimited,list,to,string,array,port,header,port,integer,parse,int,ports,0,string,protocol,header,request,get,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,string,protocols,string,utils,comma,delimited,list,to,string,array,protocol,header,scheme,protocols,0,builder,scheme,scheme,builder,host,host,builder,port,null,if,scheme,equals,http,port,80,scheme,equals,https,port,443,builder,port,port,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1447791580;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>, or_"X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if "Forwarded" is_not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		URI uri = request.getURI()__		UriComponentsBuilder builder = UriComponentsBuilder.fromUri(uri)___		String scheme = uri.getScheme()__		String host = uri.getHost()__		int port = uri.getPort()___		String forwardedHeader = request.getHeaders().getFirst("Forwarded")__		if (StringUtils.hasText(forwardedHeader)) {_			String forwardedToUse = StringUtils.commaDelimitedListToStringArray(forwardedHeader)[0]__			Matcher m = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__			if (m.find()) {_				host = m.group(1).trim()__			}_			m = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__			if (m.find()) {_				scheme = m.group(1).trim()__			}_		}_		else {_			String hostHeader = request.getHeaders().getFirst("X-Forwarded-Host")__			if (StringUtils.hasText(hostHeader)) {_				String[] hosts = StringUtils.commaDelimitedListToStringArray(hostHeader)__				String hostToUse = hosts[0]__				if (hostToUse.contains(":")) {_					String[] hostAndPort = StringUtils.split(hostToUse, ":")__					host = hostAndPort[0]__					port = Integer.parseInt(hostAndPort[1])__				}_				else {_					host = hostToUse__					port = -1__				}_			}__			String portHeader = request.getHeaders().getFirst("X-Forwarded-Port")__			if (StringUtils.hasText(portHeader)) {_				String[] ports = StringUtils.commaDelimitedListToStringArray(portHeader)__				port = Integer.parseInt(ports[0])__			}__			String protocolHeader = request.getHeaders().getFirst("X-Forwarded-Proto")__			if (StringUtils.hasText(protocolHeader)) {_				String[] protocols = StringUtils.commaDelimitedListToStringArray(protocolHeader)__				scheme = protocols[0]__			}_		}__		builder.scheme(scheme)__		builder.host(host)__		builder.port(null)__		if (scheme.equals("http") && port != 80 || scheme.equals("https") && port != 443) {_			builder.port(port)__		}_		return builder__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,uri,uri,request,get,uri,uri,components,builder,builder,uri,components,builder,from,uri,uri,string,scheme,uri,get,scheme,string,host,uri,get,host,int,port,uri,get,port,string,forwarded,header,request,get,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,comma,delimited,list,to,string,array,forwarded,header,0,matcher,m,matcher,forwarded,to,use,if,m,find,host,m,group,1,trim,m,matcher,forwarded,to,use,if,m,find,scheme,m,group,1,trim,else,string,host,header,request,get,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,string,hosts,string,utils,comma,delimited,list,to,string,array,host,header,string,host,to,use,hosts,0,if,host,to,use,contains,string,host,and,port,string,utils,split,host,to,use,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,host,to,use,port,1,string,port,header,request,get,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,string,ports,string,utils,comma,delimited,list,to,string,array,port,header,port,integer,parse,int,ports,0,string,protocol,header,request,get,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,string,protocols,string,utils,comma,delimited,list,to,string,array,protocol,header,scheme,protocols,0,builder,scheme,scheme,builder,host,host,builder,port,null,if,scheme,equals,http,port,80,scheme,equals,https,port,443,builder,port,port,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1449004145;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>, or_"X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if "Forwarded" is_not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		URI uri = request.getURI()__		UriComponentsBuilder builder = UriComponentsBuilder.fromUri(uri)___		String scheme = uri.getScheme()__		String host = uri.getHost()__		int port = uri.getPort()___		String forwardedHeader = request.getHeaders().getFirst("Forwarded")__		if (StringUtils.hasText(forwardedHeader)) {_			String forwardedToUse = StringUtils.commaDelimitedListToStringArray(forwardedHeader)[0]__			Matcher m = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__			if (m.find()) {_				host = m.group(1).trim()__			}_			m = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__			if (m.find()) {_				scheme = m.group(1).trim()__			}_		}_		else {_			String hostHeader = request.getHeaders().getFirst("X-Forwarded-Host")__			if (StringUtils.hasText(hostHeader)) {_				String[] hosts = StringUtils.commaDelimitedListToStringArray(hostHeader)__				String hostToUse = hosts[0]__				if (hostToUse.contains(":")) {_					String[] hostAndPort = StringUtils.split(hostToUse, ":")__					host = hostAndPort[0]__					port = Integer.parseInt(hostAndPort[1])__				}_				else {_					host = hostToUse__					port = -1__				}_			}__			String portHeader = request.getHeaders().getFirst("X-Forwarded-Port")__			if (StringUtils.hasText(portHeader)) {_				String[] ports = StringUtils.commaDelimitedListToStringArray(portHeader)__				port = Integer.parseInt(ports[0])__			}__			String protocolHeader = request.getHeaders().getFirst("X-Forwarded-Proto")__			if (StringUtils.hasText(protocolHeader)) {_				String[] protocols = StringUtils.commaDelimitedListToStringArray(protocolHeader)__				scheme = protocols[0]__			}_		}__		builder.scheme(scheme)__		builder.host(host)__		builder.port(null)__		if (scheme.equals("http") && port != 80 || scheme.equals("https") && port != 443) {_			builder.port(port)__		}_		return builder__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,uri,uri,request,get,uri,uri,components,builder,builder,uri,components,builder,from,uri,uri,string,scheme,uri,get,scheme,string,host,uri,get,host,int,port,uri,get,port,string,forwarded,header,request,get,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,comma,delimited,list,to,string,array,forwarded,header,0,matcher,m,matcher,forwarded,to,use,if,m,find,host,m,group,1,trim,m,matcher,forwarded,to,use,if,m,find,scheme,m,group,1,trim,else,string,host,header,request,get,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,string,hosts,string,utils,comma,delimited,list,to,string,array,host,header,string,host,to,use,hosts,0,if,host,to,use,contains,string,host,and,port,string,utils,split,host,to,use,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,host,to,use,port,1,string,port,header,request,get,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,string,ports,string,utils,comma,delimited,list,to,string,array,port,header,port,integer,parse,int,ports,0,string,protocol,header,request,get,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,string,protocols,string,utils,comma,delimited,list,to,string,array,protocol,header,scheme,protocols,0,builder,scheme,scheme,builder,host,host,builder,port,null,if,scheme,equals,http,port,80,scheme,equals,https,port,443,builder,port,port,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1458830024;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		return fromUri(request.getURI()).adaptFromForwardedHeaders(request.getHeaders())__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,return,from,uri,request,get,uri,adapt,from,forwarded,headers,request,get,headers
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1465299497;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		return fromUri(request.getURI()).adaptFromForwardedHeaders(request.getHeaders())__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,return,from,uri,request,get,uri,adapt,from,forwarded,headers,request,get,headers
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1467730834;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		return fromUri(request.getURI()).adaptFromForwardedHeaders(request.getHeaders())__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,return,from,uri,request,get,uri,adapt,from,forwarded,headers,request,get,headers
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1471517882;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		return fromUri(request.getURI()).adaptFromForwardedHeaders(request.getHeaders())__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,return,from,uri,request,get,uri,adapt,from,forwarded,headers,request,get,headers
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1472594218;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		return fromUri(request.getURI()).adaptFromForwardedHeaders(request.getHeaders())__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,return,from,uri,request,get,uri,adapt,from,forwarded,headers,request,get,headers
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1475874694;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		return fromUri(request.getURI()).adaptFromForwardedHeaders(request.getHeaders())__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,return,from,uri,request,get,uri,adapt,from,forwarded,headers,request,get,headers
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1476136805;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		return fromUri(request.getURI()).adaptFromForwardedHeaders(request.getHeaders())__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,return,from,uri,request,get,uri,adapt,from,forwarded,headers,request,get,headers
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1485553611;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		return fromUri(request.getURI()).adaptFromForwardedHeaders(request.getHeaders())__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,return,from,uri,request,get,uri,adapt,from,forwarded,headers,request,get,headers
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1486074560;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		return fromUri(request.getURI()).adaptFromForwardedHeaders(request.getHeaders())__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,return,from,uri,request,get,uri,adapt,from,forwarded,headers,request,get,headers
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1492678922;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		return fromUri(request.getURI()).adaptFromForwardedHeaders(request.getHeaders())__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,return,from,uri,request,get,uri,adapt,from,forwarded,headers,request,get,headers
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1493758742;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		return fromUri(request.getURI()).adaptFromForwardedHeaders(request.getHeaders())__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,return,from,uri,request,get,uri,adapt,from,forwarded,headers,request,get,headers
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1495868221;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		return fromUri(request.getURI()).adaptFromForwardedHeaders(request.getHeaders())__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,return,from,uri,request,get,uri,adapt,from,forwarded,headers,request,get,headers
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1496259743;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		return fromUri(request.getURI()).adaptFromForwardedHeaders(request.getHeaders())__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,return,from,uri,request,get,uri,adapt,from,forwarded,headers,request,get,headers
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1496370972;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>),_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		return fromUri(request.getURI()).adaptFromForwardedHeaders(request.getHeaders())__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,return,from,uri,request,get,uri,adapt,from,forwarded,headers,request,get,headers
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1496837955;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>),_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		return fromUri(request.getURI()).adaptFromForwardedHeaders(request.getHeaders())__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,return,from,uri,request,get,uri,adapt,from,forwarded,headers,request,get,headers
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1498780456;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>),_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		return fromUri(request.getURI()).adaptFromForwardedHeaders(request.getHeaders())__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,return,from,uri,request,get,uri,adapt,from,forwarded,headers,request,get,headers
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1500460652;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>),_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		return fromUri(request.getURI()).adaptFromForwardedHeaders(request.getHeaders())__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,return,from,uri,request,get,uri,adapt,from,forwarded,headers,request,get,headers
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1513715892;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>),_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		return fromUri(request.getURI()).adaptFromForwardedHeaders(request.getHeaders())__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,return,from,uri,request,get,uri,adapt,from,forwarded,headers,request,get,headers
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1515504834;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>),_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		return fromUri(request.getURI()).adaptFromForwardedHeaders(request.getHeaders())__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,return,from,uri,request,get,uri,adapt,from,forwarded,headers,request,get,headers
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1519588127;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>),_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		return fromUri(request.getURI()).adaptFromForwardedHeaders(request.getHeaders())__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,return,from,uri,request,get,uri,adapt,from,forwarded,headers,request,get,headers
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1522332352;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>),_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		return fromUri(request.getURI()).adaptFromForwardedHeaders(request.getHeaders())__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,return,from,uri,request,get,uri,adapt,from,forwarded,headers,request,get,headers
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1522351714;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>),_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		return fromUri(request.getURI()).adaptFromForwardedHeaders(request.getHeaders())__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,return,from,uri,request,get,uri,adapt,from,forwarded,headers,request,get,headers
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1522361849;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>),_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		return fromUri(request.getURI()).adaptFromForwardedHeaders(request.getHeaders())__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,return,from,uri,request,get,uri,adapt,from,forwarded,headers,request,get,headers
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1527192852;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>),_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		return fromUri(request.getURI()).adaptFromForwardedHeaders(request.getHeaders())__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,return,from,uri,request,get,uri,adapt,from,forwarded,headers,request,get,headers
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1530174524;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>),_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		return fromUri(request.getURI()).adaptFromForwardedHeaders(request.getHeaders())__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,return,from,uri,request,get,uri,adapt,from,forwarded,headers,request,get,headers
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1531746971;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>),_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		return fromUri(request.getURI()).adaptFromForwardedHeaders(request.getHeaders())__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,return,from,uri,request,get,uri,adapt,from,forwarded,headers,request,get,headers
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1531843156;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>),_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		return fromUri(request.getURI()).adaptFromForwardedHeaders(request.getHeaders())__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,return,from,uri,request,get,uri,adapt,from,forwarded,headers,request,get,headers
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1531863556;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>),_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		return fromUri(request.getURI()).adaptFromForwardedHeaders(request.getHeaders())__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,return,from,uri,request,get,uri,adapt,from,forwarded,headers,request,get,headers
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1532041662;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>),_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		return fromUri(request.getURI()).adaptFromForwardedHeaders(request.getHeaders())__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,return,from,uri,request,get,uri,adapt,from,forwarded,headers,request,get,headers
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1532041662;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>),_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		return fromUri(request.getURI()).adaptFromForwardedHeaders(request.getHeaders())__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,return,from,uri,request,get,uri,adapt,from,forwarded,headers,request,get,headers
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1536571897;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>),_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		return fromUri(request.getURI()).adaptFromForwardedHeaders(request.getHeaders())__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,return,from,uri,request,get,uri,adapt,from,forwarded,headers,request,get,headers
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1546464968;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>),_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		return fromUri(request.getURI()).adaptFromForwardedHeaders(request.getHeaders())__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,return,from,uri,request,get,uri,adapt,from,forwarded,headers,request,get,headers
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1546963593;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>),_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		return fromUri(request.getURI()).adaptFromForwardedHeaders(request.getHeaders())__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,return,from,uri,request,get,uri,adapt,from,forwarded,headers,request,get,headers
UriComponentsBuilder -> public static UriComponentsBuilder fromHttpRequest(HttpRequest request);1547005422;Create a new {@code UriComponents} object from the URI associated with_the given HttpRequest while also overlaying with values from the headers_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>),_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param request the source request_@return the URI components of the URI_@since 4.1.5;public static UriComponentsBuilder fromHttpRequest(HttpRequest request) {_		return fromUri(request.getURI()).adaptFromForwardedHeaders(request.getHeaders())__	};create,a,new,code,uri,components,object,from,the,uri,associated,with,the,given,http,request,while,also,overlaying,with,values,from,the,headers,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,request,the,source,request,return,the,uri,components,of,the,uri,since,4,1,5;public,static,uri,components,builder,from,http,request,http,request,request,return,from,uri,request,get,uri,adapt,from,forwarded,headers,request,get,headers
UriComponentsBuilder -> @Override 	public URI build(Map<String, ?> uriVariables);1485553611;Build a {@link URI} instance and replaces URI template variables_with the values from a map._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Map<String, ?> uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,map,string,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> @Override 	public URI build(Map<String, ?> uriVariables);1486074560;Build a {@link URI} instance and replaces URI template variables_with the values from a map._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Map<String, ?> uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,map,string,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> @Override 	public URI build(Map<String, ?> uriVariables);1492678922;Build a {@link URI} instance and replaces URI template variables_with the values from a map._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Map<String, ?> uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,map,string,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> @Override 	public URI build(Map<String, ?> uriVariables);1493758742;Build a {@link URI} instance and replaces URI template variables_with the values from a map._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Map<String, ?> uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,map,string,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> @Override 	public URI build(Map<String, ?> uriVariables);1495868221;Build a {@link URI} instance and replaces URI template variables_with the values from a map._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Map<String, ?> uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,map,string,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> @Override 	public URI build(Map<String, ?> uriVariables);1496259743;Build a {@link URI} instance and replaces URI template variables_with the values from a map._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Map<String, ?> uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,map,string,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> @Override 	public URI build(Map<String, ?> uriVariables);1496370972;Build a {@link URI} instance and replaces URI template variables_with the values from a map._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Map<String, ?> uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,map,string,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> @Override 	public URI build(Map<String, ?> uriVariables);1496837955;Build a {@link URI} instance and replaces URI template variables_with the values from a map._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Map<String, ?> uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,map,string,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> @Override 	public URI build(Map<String, ?> uriVariables);1498780456;Build a {@link URI} instance and replaces URI template variables_with the values from a map._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Map<String, ?> uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,map,string,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> @Override 	public URI build(Map<String, ?> uriVariables);1500460652;Build a {@link URI} instance and replaces URI template variables_with the values from a map._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Map<String, ?> uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,map,string,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> @Override 	public URI build(Map<String, ?> uriVariables);1513715892;Build a {@link URI} instance and replaces URI template variables_with the values from a map._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Map<String, ?> uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,map,string,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> @Override 	public URI build(Map<String, ?> uriVariables);1515504834;Build a {@link URI} instance and replaces URI template variables_with the values from a map._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Map<String, ?> uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,map,string,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> @Override 	public URI build(Map<String, ?> uriVariables);1519588127;Build a {@link URI} instance and replaces URI template variables_with the values from a map._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Map<String, ?> uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,map,string,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> @Override 	public URI build(Map<String, ?> uriVariables);1522332352;Build a {@link URI} instance and replaces URI template variables_with the values from a map._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Map<String, ?> uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,map,string,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> @Override 	public URI build(Map<String, ?> uriVariables);1522351714;Build a {@link URI} instance and replaces URI template variables_with the values from a map._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Map<String, ?> uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,map,string,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> @Override 	public URI build(Map<String, ?> uriVariables);1522361849;Build a {@link URI} instance and replaces URI template variables_with the values from a map._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Map<String, ?> uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,map,string,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> @Override 	public URI build(Map<String, ?> uriVariables);1527192852;Build a {@link URI} instance and replaces URI template variables_with the values from a map._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Map<String, ?> uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,map,string,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> @Override 	public URI build(Map<String, ?> uriVariables);1530174524;Build a {@link URI} instance and replaces URI template variables_with the values from a map._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Map<String, ?> uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,a,map,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,map,string,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> public UriComponentsBuilder encode(Charset charset);1531746971;A variant of {@link #encode()} with a charset other than "UTF-8"._@param charset the charset to use for encoding_@since 5.0.8;public UriComponentsBuilder encode(Charset charset) {_		this.encodeTemplate = true__		this.charset = charset__		return this__	};a,variant,of,link,encode,with,a,charset,other,than,utf,8,param,charset,the,charset,to,use,for,encoding,since,5,0,8;public,uri,components,builder,encode,charset,charset,this,encode,template,true,this,charset,charset,return,this
UriComponentsBuilder -> public UriComponentsBuilder encode(Charset charset);1531843156;A variant of {@link #encode()} with a charset other than "UTF-8"._@param charset the charset to use for encoding_@since 5.0.8;public UriComponentsBuilder encode(Charset charset) {_		this.encodeTemplate = true__		this.charset = charset__		return this__	};a,variant,of,link,encode,with,a,charset,other,than,utf,8,param,charset,the,charset,to,use,for,encoding,since,5,0,8;public,uri,components,builder,encode,charset,charset,this,encode,template,true,this,charset,charset,return,this
UriComponentsBuilder -> public UriComponentsBuilder encode(Charset charset);1531863556;A variant of {@link #encode()} with a charset other than "UTF-8"._@param charset the charset to use for encoding_@since 5.0.8;public UriComponentsBuilder encode(Charset charset) {_		this.encodeTemplate = true__		this.charset = charset__		return this__	};a,variant,of,link,encode,with,a,charset,other,than,utf,8,param,charset,the,charset,to,use,for,encoding,since,5,0,8;public,uri,components,builder,encode,charset,charset,this,encode,template,true,this,charset,charset,return,this
UriComponentsBuilder -> public UriComponentsBuilder encode(Charset charset);1532041662;A variant of {@link #encode()} with a charset other than "UTF-8"._@param charset the charset to use for encoding_@since 5.0.8;public UriComponentsBuilder encode(Charset charset) {_		this.encodeTemplate = true__		this.charset = charset__		return this__	};a,variant,of,link,encode,with,a,charset,other,than,utf,8,param,charset,the,charset,to,use,for,encoding,since,5,0,8;public,uri,components,builder,encode,charset,charset,this,encode,template,true,this,charset,charset,return,this
UriComponentsBuilder -> public UriComponentsBuilder encode(Charset charset);1532041662;A variant of {@link #encode()} with a charset other than "UTF-8"._@param charset the charset to use for encoding_@since 5.0.8;public UriComponentsBuilder encode(Charset charset) {_		this.encodeTemplate = true__		this.charset = charset__		return this__	};a,variant,of,link,encode,with,a,charset,other,than,utf,8,param,charset,the,charset,to,use,for,encoding,since,5,0,8;public,uri,components,builder,encode,charset,charset,this,encode,template,true,this,charset,charset,return,this
UriComponentsBuilder -> public UriComponentsBuilder encode(Charset charset);1536571897;A variant of {@link #encode()} with a charset other than "UTF-8"._@param charset the charset to use for encoding_@since 5.0.8;public UriComponentsBuilder encode(Charset charset) {_		this.encodeTemplate = true__		this.charset = charset__		return this__	};a,variant,of,link,encode,with,a,charset,other,than,utf,8,param,charset,the,charset,to,use,for,encoding,since,5,0,8;public,uri,components,builder,encode,charset,charset,this,encode,template,true,this,charset,charset,return,this
UriComponentsBuilder -> public UriComponentsBuilder encode(Charset charset);1546464968;A variant of {@link #encode()} with a charset other than "UTF-8"._@param charset the charset to use for encoding_@since 5.0.8;public UriComponentsBuilder encode(Charset charset) {_		this.encodeTemplate = true__		this.charset = charset__		return this__	};a,variant,of,link,encode,with,a,charset,other,than,utf,8,param,charset,the,charset,to,use,for,encoding,since,5,0,8;public,uri,components,builder,encode,charset,charset,this,encode,template,true,this,charset,charset,return,this
UriComponentsBuilder -> public UriComponentsBuilder encode(Charset charset);1546963593;A variant of {@link #encode()} with a charset other than "UTF-8"._@param charset the charset to use for encoding_@since 5.0.8;public UriComponentsBuilder encode(Charset charset) {_		this.encodeTemplate = true__		this.charset = charset__		return this__	};a,variant,of,link,encode,with,a,charset,other,than,utf,8,param,charset,the,charset,to,use,for,encoding,since,5,0,8;public,uri,components,builder,encode,charset,charset,this,encode,template,true,this,charset,charset,return,this
UriComponentsBuilder -> public UriComponentsBuilder encode(Charset charset);1547005422;A variant of {@link #encode()} with a charset other than "UTF-8"._@param charset the charset to use for encoding_@since 5.0.8;public UriComponentsBuilder encode(Charset charset) {_		this.encodeTemplate = true__		this.charset = charset__		return this__	};a,variant,of,link,encode,with,a,charset,other,than,utf,8,param,charset,the,charset,to,use,for,encoding,since,5,0,8;public,uri,components,builder,encode,charset,charset,this,encode,template,true,this,charset,charset,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1328020251;Initializes all components of this URI builder with the components of the given URI.__@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		Assert.isTrue(!uri.isOpaque(), "Opaque URI [" + uri + "] not supported")___		this.scheme = uri.getScheme()___		if (uri.getUserInfo() != null) {_			this.userInfo = uri.getUserInfo()__		}_		if (uri.getHost() != null) {_			this.host = uri.getHost()__		}_		if (uri.getPort() != -1) {_			this.port = uri.getPort()__		}_		if (StringUtils.hasLength(uri.getPath())) {_			this.pathBuilder = new FullPathComponentBuilder(uri.getPath())__		}_		if (StringUtils.hasLength(uri.getQuery())) {_			this.queryParams.clear()__			query(uri.getQuery())__		}_		if (uri.getFragment() != null) {_			this.fragment = uri.getFragment()__		}_		return this__	};initializes,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,assert,is,true,uri,is,opaque,opaque,uri,uri,not,supported,this,scheme,uri,get,scheme,if,uri,get,user,info,null,this,user,info,uri,get,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,uri,get,port,if,string,utils,has,length,uri,get,path,this,path,builder,new,full,path,component,builder,uri,get,path,if,string,utils,has,length,uri,get,query,this,query,params,clear,query,uri,get,query,if,uri,get,fragment,null,this,fragment,uri,get,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1329142650;Initializes all components of this URI builder with the components of the given URI.__@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		Assert.isTrue(!uri.isOpaque(), "Opaque URI [" + uri + "] not supported")___		this.scheme = uri.getScheme()___		if (uri.getUserInfo() != null) {_			this.userInfo = uri.getUserInfo()__		}_		if (uri.getHost() != null) {_			this.host = uri.getHost()__		}_		if (uri.getPort() != -1) {_			this.port = uri.getPort()__		}_		if (StringUtils.hasLength(uri.getPath())) {_			this.pathBuilder = new FullPathComponentBuilder(uri.getPath())__		}_		if (StringUtils.hasLength(uri.getQuery())) {_			this.queryParams.clear()__			query(uri.getQuery())__		}_		if (uri.getFragment() != null) {_			this.fragment = uri.getFragment()__		}_		return this__	};initializes,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,assert,is,true,uri,is,opaque,opaque,uri,uri,not,supported,this,scheme,uri,get,scheme,if,uri,get,user,info,null,this,user,info,uri,get,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,uri,get,port,if,string,utils,has,length,uri,get,path,this,path,builder,new,full,path,component,builder,uri,get,path,if,string,utils,has,length,uri,get,query,this,query,params,clear,query,uri,get,query,if,uri,get,fragment,null,this,fragment,uri,get,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1335903038;Initializes all components of this URI builder with the components of the given URI.__@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		Assert.isTrue(!uri.isOpaque(), "Opaque URI [" + uri + "] not supported")___		this.scheme = uri.getScheme()___		if (uri.getRawUserInfo() != null) {_			this.userInfo = uri.getRawUserInfo()__		}_		if (uri.getHost() != null) {_			this.host = uri.getHost()__		}_		if (uri.getPort() != -1) {_			this.port = uri.getPort()__		}_		if (StringUtils.hasLength(uri.getRawPath())) {_			this.pathBuilder = new FullPathComponentBuilder(uri.getRawPath())__		}_		if (StringUtils.hasLength(uri.getRawQuery())) {_			this.queryParams.clear()__			query(uri.getRawQuery())__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initializes,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,assert,is,true,uri,is,opaque,opaque,uri,uri,not,supported,this,scheme,uri,get,scheme,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,full,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1345652603;Initializes all components of this URI builder with the components of the given URI.__@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		Assert.isTrue(!uri.isOpaque(), "Opaque URI [" + uri + "] not supported")___		this.scheme = uri.getScheme()___		if (uri.getRawUserInfo() != null) {_			this.userInfo = uri.getRawUserInfo()__		}_		if (uri.getHost() != null) {_			this.host = uri.getHost()__		}_		if (uri.getPort() != -1) {_			this.port = uri.getPort()__		}_		if (StringUtils.hasLength(uri.getRawPath())) {_			this.pathBuilder = new FullPathComponentBuilder(uri.getRawPath())__		}_		if (StringUtils.hasLength(uri.getRawQuery())) {_			this.queryParams.clear()__			query(uri.getRawQuery())__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initializes,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,assert,is,true,uri,is,opaque,opaque,uri,uri,not,supported,this,scheme,uri,get,scheme,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,full,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1348582810;Initializes all components of this URI builder with the components of the given URI.__@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")___		this.scheme = uri.getScheme()___		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = uri.getPort()__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new FullPathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initializes,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,full,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1349904861;Initializes all components of this URI builder with the components of the given URI.__@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")___		this.scheme = uri.getScheme()___		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = uri.getPort()__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new FullPathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initializes,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,full,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1350918288;Initializes all components of this URI builder with the components of the given URI.__@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")___		this.scheme = uri.getScheme()___		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = uri.getPort()__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new FullPathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initializes,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,full,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1356735495;Initializes all components of this URI builder with the components of the given URI.__@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")___		this.scheme = uri.getScheme()___		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = uri.getPort()__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new FullPathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initializes,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,full,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1357119239;Initializes all components of this URI builder with the components of the given URI.__@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")___		this.scheme = uri.getScheme()___		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = uri.getPort()__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new FullPathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initializes,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,full,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1362408075;Initializes all components of this URI builder with the components of the given URI.__@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")___		this.scheme = uri.getScheme()___		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = uri.getPort()__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initializes,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1363208506;Initializes all components of this URI builder with the components of the given URI.__@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")___		this.scheme = uri.getScheme()___		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = uri.getPort()__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initializes,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1367580131;Initializes all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = uri.getPort()__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initializes,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1367955086;Initializes all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = uri.getPort()__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initializes,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1368482696;Initializes all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = uri.getPort()__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initializes,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1375201821;Initializes all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = uri.getPort()__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initializes,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1380131933;Initializes all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = uri.getPort()__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initializes,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1382387167;Initializes all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = uri.getPort()__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initializes,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1382387168;Initializes all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = uri.getPort()__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initializes,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1382744567;Initializes all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = uri.getPort()__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initializes,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1382754578;Initializes all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = uri.getPort()__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initializes,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1391723719;Initializes all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = uri.getPort()__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initializes,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1400538909;Initializes all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = uri.getPort()__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initializes,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1400541968;Initialize all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = uri.getPort()__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1403775847;Initialize all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = uri.getPort()__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1404917891;Initialize all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = uri.getPort()__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1409317151;Initialize all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1409318475;Initialize all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1409822411;Initialize all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1414695064;Initialize all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1417799775;Initialize all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1423547594;Initialize all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1424274316;Initialize all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1425610347;Initialize all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1426255003;Initialize all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1426266172;Initialize all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1426267150;Initialize all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1426553101;Initialize all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1426880143;Initialize all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1426880143;Initialize all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1427143443;Initialize all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1430734105;Initialize all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1433951292;Initialize all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1437567436;Initialize all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1438166381;Initialize all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1443431031;Initialize all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1443797712;Initialize all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1447791580;Initialize all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1449004145;Initialize all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1458830024;Initialize all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1465299497;Initialize all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1467730834;Initialize all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1471517882;Initialize all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1472594218;Initialize all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1475874694;Initialize all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1476136805;Initialize all components of this URI builder with the components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,all,components,of,this,uri,builder,with,the,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1485553611;Initialize components of this builder from components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,components,of,this,builder,from,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1486074560;Initialize components of this builder from components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,components,of,this,builder,from,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1492678922;Initialize components of this builder from components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,components,of,this,builder,from,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1493758742;Initialize components of this builder from components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,components,of,this,builder,from,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1495868221;Initialize components of this builder from components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,components,of,this,builder,from,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1496259743;Initialize components of this builder from components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,components,of,this,builder,from,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1496370972;Initialize components of this builder from components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,components,of,this,builder,from,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1496837955;Initialize components of this builder from components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder()__				this.pathBuilder.addPath(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,components,of,this,builder,from,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,this,path,builder,add,path,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1498780456;Initialize components of this builder from components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder()__				this.pathBuilder.addPath(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,components,of,this,builder,from,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,this,path,builder,add,path,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1500460652;Initialize components of this builder from components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder()__				this.pathBuilder.addPath(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,components,of,this,builder,from,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,this,path,builder,add,path,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1513715892;Initialize components of this builder from components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder()__				this.pathBuilder.addPath(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,components,of,this,builder,from,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,this,path,builder,add,path,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1515504834;Initialize components of this builder from components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder()__				this.pathBuilder.addPath(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,components,of,this,builder,from,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,this,path,builder,add,path,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1519588127;Initialize components of this builder from components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder()__				this.pathBuilder.addPath(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,components,of,this,builder,from,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,this,path,builder,add,path,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1522332352;Initialize components of this builder from components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder()__				this.pathBuilder.addPath(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,components,of,this,builder,from,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,this,path,builder,add,path,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1522351714;Initialize components of this builder from components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder()__				this.pathBuilder.addPath(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,components,of,this,builder,from,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,this,path,builder,add,path,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1522361849;Initialize components of this builder from components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder()__				this.pathBuilder.addPath(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,components,of,this,builder,from,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,this,path,builder,add,path,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1527192852;Initialize components of this builder from components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder()__				this.pathBuilder.addPath(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,components,of,this,builder,from,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,this,path,builder,add,path,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1530174524;Initialize components of this builder from components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder()__				this.pathBuilder.addPath(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,components,of,this,builder,from,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,this,path,builder,add,path,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1531746971;Initialize components of this builder from components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder()__				this.pathBuilder.addPath(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,components,of,this,builder,from,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,this,path,builder,add,path,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1531843156;Initialize components of this builder from components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder()__				this.pathBuilder.addPath(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,components,of,this,builder,from,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,this,path,builder,add,path,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1531863556;Initialize components of this builder from components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder()__				this.pathBuilder.addPath(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,components,of,this,builder,from,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,this,path,builder,add,path,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1532041662;Initialize components of this builder from components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder()__				this.pathBuilder.addPath(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,components,of,this,builder,from,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,this,path,builder,add,path,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1532041662;Initialize components of this builder from components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder()__				this.pathBuilder.addPath(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,components,of,this,builder,from,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,this,path,builder,add,path,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1536571897;Initialize components of this builder from components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder()__				this.pathBuilder.addPath(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,components,of,this,builder,from,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,this,path,builder,add,path,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1546464968;Initialize components of this builder from components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder()__				this.pathBuilder.addPath(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,components,of,this,builder,from,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,this,path,builder,add,path,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1546963593;Initialize components of this builder from components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder()__				this.pathBuilder.addPath(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,components,of,this,builder,from,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,this,path,builder,add,path,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uri(URI uri);1547005422;Initialize components of this builder from components of the given URI._@param uri the URI_@return this UriComponentsBuilder;public UriComponentsBuilder uri(URI uri) {_		Assert.notNull(uri, "URI must not be null")__		this.scheme = uri.getScheme()__		if (uri.isOpaque()) {_			this.ssp = uri.getRawSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uri.getRawUserInfo() != null) {_				this.userInfo = uri.getRawUserInfo()__			}_			if (uri.getHost() != null) {_				this.host = uri.getHost()__			}_			if (uri.getPort() != -1) {_				this.port = String.valueOf(uri.getPort())__			}_			if (StringUtils.hasLength(uri.getRawPath())) {_				this.pathBuilder = new CompositePathComponentBuilder()__				this.pathBuilder.addPath(uri.getRawPath())__			}_			if (StringUtils.hasLength(uri.getRawQuery())) {_				this.queryParams.clear()__				query(uri.getRawQuery())__			}_			resetSchemeSpecificPart()__		}_		if (uri.getRawFragment() != null) {_			this.fragment = uri.getRawFragment()__		}_		return this__	};initialize,components,of,this,builder,from,components,of,the,given,uri,param,uri,the,uri,return,this,uri,components,builder;public,uri,components,builder,uri,uri,uri,assert,not,null,uri,uri,must,not,be,null,this,scheme,uri,get,scheme,if,uri,is,opaque,this,ssp,uri,get,raw,scheme,specific,part,reset,hierarchical,components,else,if,uri,get,raw,user,info,null,this,user,info,uri,get,raw,user,info,if,uri,get,host,null,this,host,uri,get,host,if,uri,get,port,1,this,port,string,value,of,uri,get,port,if,string,utils,has,length,uri,get,raw,path,this,path,builder,new,composite,path,component,builder,this,path,builder,add,path,uri,get,raw,path,if,string,utils,has,length,uri,get,raw,query,this,query,params,clear,query,uri,get,raw,query,reset,scheme,specific,part,if,uri,get,raw,fragment,null,this,fragment,uri,get,raw,fragment,return,this
UriComponentsBuilder -> UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers);1458830024;Adapt this builder's scheme+host+port from the given headers, specifically_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param headers the HTTP headers to consider_@return this UriComponentsBuilder_@since 4.3;UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {_		String forwardedHeader = headers.getFirst("Forwarded")__		if (StringUtils.hasText(forwardedHeader)) {_			String forwardedToUse = StringUtils.commaDelimitedListToStringArray(forwardedHeader)[0]__			Matcher matcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				host(matcher.group(1).trim())__			}_			matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				scheme(matcher.group(1).trim())__			}_		}_		else {_			String hostHeader = headers.getFirst("X-Forwarded-Host")__			if (StringUtils.hasText(hostHeader)) {_				String[] hosts = StringUtils.commaDelimitedListToStringArray(hostHeader)__				String hostToUse = hosts[0]__				if (hostToUse.contains(":")) {_					String[] hostAndPort = StringUtils.split(hostToUse, ":")__					host(hostAndPort[0])__					port(Integer.parseInt(hostAndPort[1]))__				}_				else {_					host(hostToUse)__					port(null)__				}_			}__			String portHeader = headers.getFirst("X-Forwarded-Port")__			if (StringUtils.hasText(portHeader)) {_				String[] ports = StringUtils.commaDelimitedListToStringArray(portHeader)__				port(Integer.parseInt(ports[0]))__			}__			String protocolHeader = headers.getFirst("X-Forwarded-Proto")__			if (StringUtils.hasText(protocolHeader)) {_				String[] protocols = StringUtils.commaDelimitedListToStringArray(protocolHeader)__				scheme(protocols[0])__			}_		}__		if ((this.scheme.equals("http") && "80".equals(this.port)) ||_				(this.scheme.equals("https") && "443".equals(this.port))) {_			this.port = null__		}__		return this__	};adapt,this,builder,s,scheme,host,port,from,the,given,headers,specifically,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,headers,the,http,headers,to,consider,return,this,uri,components,builder,since,4,3;uri,components,builder,adapt,from,forwarded,headers,http,headers,headers,string,forwarded,header,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,comma,delimited,list,to,string,array,forwarded,header,0,matcher,matcher,matcher,forwarded,to,use,if,matcher,find,host,matcher,group,1,trim,matcher,matcher,forwarded,to,use,if,matcher,find,scheme,matcher,group,1,trim,else,string,host,header,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,string,hosts,string,utils,comma,delimited,list,to,string,array,host,header,string,host,to,use,hosts,0,if,host,to,use,contains,string,host,and,port,string,utils,split,host,to,use,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,host,to,use,port,null,string,port,header,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,string,ports,string,utils,comma,delimited,list,to,string,array,port,header,port,integer,parse,int,ports,0,string,protocol,header,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,string,protocols,string,utils,comma,delimited,list,to,string,array,protocol,header,scheme,protocols,0,if,this,scheme,equals,http,80,equals,this,port,this,scheme,equals,https,443,equals,this,port,this,port,null,return,this
UriComponentsBuilder -> UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers);1465299497;Adapt this builder's scheme+host+port from the given headers, specifically_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param headers the HTTP headers to consider_@return this UriComponentsBuilder_@since 4.2.7;UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {_		String forwardedHeader = headers.getFirst("Forwarded")__		if (StringUtils.hasText(forwardedHeader)) {_			String forwardedToUse = StringUtils.commaDelimitedListToStringArray(forwardedHeader)[0]__			Matcher matcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				host(matcher.group(1).trim())__			}_			matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				scheme(matcher.group(1).trim())__			}_		}_		else {_			String hostHeader = headers.getFirst("X-Forwarded-Host")__			if (StringUtils.hasText(hostHeader)) {_				String[] hosts = StringUtils.commaDelimitedListToStringArray(hostHeader)__				String hostToUse = hosts[0]__				if (hostToUse.contains(":")) {_					String[] hostAndPort = StringUtils.split(hostToUse, ":")__					host(hostAndPort[0])__					port(Integer.parseInt(hostAndPort[1]))__				}_				else {_					host(hostToUse)__					port(null)__				}_			}__			String portHeader = headers.getFirst("X-Forwarded-Port")__			if (StringUtils.hasText(portHeader)) {_				String[] ports = StringUtils.commaDelimitedListToStringArray(portHeader)__				port(Integer.parseInt(ports[0]))__			}__			String protocolHeader = headers.getFirst("X-Forwarded-Proto")__			if (StringUtils.hasText(protocolHeader)) {_				String[] protocols = StringUtils.commaDelimitedListToStringArray(protocolHeader)__				scheme(protocols[0])__			}_		}__		if ((this.scheme.equals("http") && "80".equals(this.port)) ||_				(this.scheme.equals("https") && "443".equals(this.port))) {_			this.port = null__		}__		return this__	};adapt,this,builder,s,scheme,host,port,from,the,given,headers,specifically,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,headers,the,http,headers,to,consider,return,this,uri,components,builder,since,4,2,7;uri,components,builder,adapt,from,forwarded,headers,http,headers,headers,string,forwarded,header,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,comma,delimited,list,to,string,array,forwarded,header,0,matcher,matcher,matcher,forwarded,to,use,if,matcher,find,host,matcher,group,1,trim,matcher,matcher,forwarded,to,use,if,matcher,find,scheme,matcher,group,1,trim,else,string,host,header,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,string,hosts,string,utils,comma,delimited,list,to,string,array,host,header,string,host,to,use,hosts,0,if,host,to,use,contains,string,host,and,port,string,utils,split,host,to,use,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,host,to,use,port,null,string,port,header,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,string,ports,string,utils,comma,delimited,list,to,string,array,port,header,port,integer,parse,int,ports,0,string,protocol,header,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,string,protocols,string,utils,comma,delimited,list,to,string,array,protocol,header,scheme,protocols,0,if,this,scheme,equals,http,80,equals,this,port,this,scheme,equals,https,443,equals,this,port,this,port,null,return,this
UriComponentsBuilder -> UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers);1467730834;Adapt this builder's scheme+host+port from the given headers, specifically_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param headers the HTTP headers to consider_@return this UriComponentsBuilder_@since 4.2.7;UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {_		String forwardedHeader = headers.getFirst("Forwarded")__		if (StringUtils.hasText(forwardedHeader)) {_			String forwardedToUse = StringUtils.commaDelimitedListToStringArray(forwardedHeader)[0]__			Matcher matcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				host(matcher.group(1).trim())__			}_			matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				scheme(matcher.group(1).trim())__			}_		}_		else {_			String hostHeader = headers.getFirst("X-Forwarded-Host")__			if (StringUtils.hasText(hostHeader)) {_				String[] hosts = StringUtils.commaDelimitedListToStringArray(hostHeader)__				String hostToUse = hosts[0]__				if (hostToUse.contains(":")) {_					String[] hostAndPort = StringUtils.split(hostToUse, ":")__					host(hostAndPort[0])__					port(Integer.parseInt(hostAndPort[1]))__				}_				else {_					host(hostToUse)__					port(null)__				}_			}__			String portHeader = headers.getFirst("X-Forwarded-Port")__			if (StringUtils.hasText(portHeader)) {_				String[] ports = StringUtils.commaDelimitedListToStringArray(portHeader)__				port(Integer.parseInt(ports[0]))__			}__			String protocolHeader = headers.getFirst("X-Forwarded-Proto")__			if (StringUtils.hasText(protocolHeader)) {_				String[] protocols = StringUtils.commaDelimitedListToStringArray(protocolHeader)__				scheme(protocols[0])__			}_		}__		if ((this.scheme.equals("http") && "80".equals(this.port)) ||_				(this.scheme.equals("https") && "443".equals(this.port))) {_			this.port = null__		}__		return this__	};adapt,this,builder,s,scheme,host,port,from,the,given,headers,specifically,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,headers,the,http,headers,to,consider,return,this,uri,components,builder,since,4,2,7;uri,components,builder,adapt,from,forwarded,headers,http,headers,headers,string,forwarded,header,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,comma,delimited,list,to,string,array,forwarded,header,0,matcher,matcher,matcher,forwarded,to,use,if,matcher,find,host,matcher,group,1,trim,matcher,matcher,forwarded,to,use,if,matcher,find,scheme,matcher,group,1,trim,else,string,host,header,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,string,hosts,string,utils,comma,delimited,list,to,string,array,host,header,string,host,to,use,hosts,0,if,host,to,use,contains,string,host,and,port,string,utils,split,host,to,use,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,host,to,use,port,null,string,port,header,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,string,ports,string,utils,comma,delimited,list,to,string,array,port,header,port,integer,parse,int,ports,0,string,protocol,header,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,string,protocols,string,utils,comma,delimited,list,to,string,array,protocol,header,scheme,protocols,0,if,this,scheme,equals,http,80,equals,this,port,this,scheme,equals,https,443,equals,this,port,this,port,null,return,this
UriComponentsBuilder -> UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers);1471517882;Adapt this builder's scheme+host+port from the given headers, specifically_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param headers the HTTP headers to consider_@return this UriComponentsBuilder_@since 4.2.7;UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {_		String forwardedHeader = headers.getFirst("Forwarded")__		if (StringUtils.hasText(forwardedHeader)) {_			String forwardedToUse = StringUtils.commaDelimitedListToStringArray(forwardedHeader)[0]__			Matcher matcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				host(matcher.group(1).trim())__			}_			matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				scheme(matcher.group(1).trim())__			}_		}_		else {_			String hostHeader = headers.getFirst("X-Forwarded-Host")__			if (StringUtils.hasText(hostHeader)) {_				String[] hosts = StringUtils.commaDelimitedListToStringArray(hostHeader)__				String hostToUse = hosts[0]__				if (hostToUse.contains(":")) {_					String[] hostAndPort = StringUtils.split(hostToUse, ":")__					host(hostAndPort[0])__					port(Integer.parseInt(hostAndPort[1]))__				}_				else {_					host(hostToUse)__					port(null)__				}_			}__			String portHeader = headers.getFirst("X-Forwarded-Port")__			if (StringUtils.hasText(portHeader)) {_				String[] ports = StringUtils.commaDelimitedListToStringArray(portHeader)__				port(Integer.parseInt(ports[0]))__			}__			String protocolHeader = headers.getFirst("X-Forwarded-Proto")__			if (StringUtils.hasText(protocolHeader)) {_				String[] protocols = StringUtils.commaDelimitedListToStringArray(protocolHeader)__				scheme(protocols[0])__			}_		}__		if ((this.scheme.equals("http") && "80".equals(this.port)) ||_				(this.scheme.equals("https") && "443".equals(this.port))) {_			this.port = null__		}__		return this__	};adapt,this,builder,s,scheme,host,port,from,the,given,headers,specifically,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,headers,the,http,headers,to,consider,return,this,uri,components,builder,since,4,2,7;uri,components,builder,adapt,from,forwarded,headers,http,headers,headers,string,forwarded,header,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,comma,delimited,list,to,string,array,forwarded,header,0,matcher,matcher,matcher,forwarded,to,use,if,matcher,find,host,matcher,group,1,trim,matcher,matcher,forwarded,to,use,if,matcher,find,scheme,matcher,group,1,trim,else,string,host,header,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,string,hosts,string,utils,comma,delimited,list,to,string,array,host,header,string,host,to,use,hosts,0,if,host,to,use,contains,string,host,and,port,string,utils,split,host,to,use,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,host,to,use,port,null,string,port,header,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,string,ports,string,utils,comma,delimited,list,to,string,array,port,header,port,integer,parse,int,ports,0,string,protocol,header,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,string,protocols,string,utils,comma,delimited,list,to,string,array,protocol,header,scheme,protocols,0,if,this,scheme,equals,http,80,equals,this,port,this,scheme,equals,https,443,equals,this,port,this,port,null,return,this
UriComponentsBuilder -> UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers);1472594218;Adapt this builder's scheme+host+port from the given headers, specifically_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param headers the HTTP headers to consider_@return this UriComponentsBuilder_@since 4.2.7;UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {_		String forwardedHeader = headers.getFirst("Forwarded")__		if (StringUtils.hasText(forwardedHeader)) {_			String forwardedToUse = StringUtils.tokenizeToStringArray(forwardedHeader, ",")[0]__			Matcher matcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				host(matcher.group(1).trim())__			}_			matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				scheme(matcher.group(1).trim())__			}_		}_		else {_			String hostHeader = headers.getFirst("X-Forwarded-Host")__			if (StringUtils.hasText(hostHeader)) {_				String hostToUse = StringUtils.tokenizeToStringArray(hostHeader, ",")[0]__				String[] hostAndPort = StringUtils.split(hostToUse, ":")__				if (hostAndPort != null) {_					host(hostAndPort[0])__					port(Integer.parseInt(hostAndPort[1]))__				}_				else {_					host(hostToUse)__					port(null)__				}_			}__			String portHeader = headers.getFirst("X-Forwarded-Port")__			if (StringUtils.hasText(portHeader)) {_				port(Integer.parseInt(StringUtils.tokenizeToStringArray(portHeader, ",")[0]))__			}__			String protocolHeader = headers.getFirst("X-Forwarded-Proto")__			if (StringUtils.hasText(protocolHeader)) {_				scheme(StringUtils.tokenizeToStringArray(protocolHeader, ",")[0])__			}_		}__		if ((this.scheme.equals("http") && "80".equals(this.port)) ||_				(this.scheme.equals("https") && "443".equals(this.port))) {_			this.port = null__		}__		return this__	};adapt,this,builder,s,scheme,host,port,from,the,given,headers,specifically,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,headers,the,http,headers,to,consider,return,this,uri,components,builder,since,4,2,7;uri,components,builder,adapt,from,forwarded,headers,http,headers,headers,string,forwarded,header,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,tokenize,to,string,array,forwarded,header,0,matcher,matcher,matcher,forwarded,to,use,if,matcher,find,host,matcher,group,1,trim,matcher,matcher,forwarded,to,use,if,matcher,find,scheme,matcher,group,1,trim,else,string,host,header,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,string,host,to,use,string,utils,tokenize,to,string,array,host,header,0,string,host,and,port,string,utils,split,host,to,use,if,host,and,port,null,host,host,and,port,0,port,integer,parse,int,host,and,port,1,else,host,host,to,use,port,null,string,port,header,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,string,utils,tokenize,to,string,array,port,header,0,string,protocol,header,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,string,utils,tokenize,to,string,array,protocol,header,0,if,this,scheme,equals,http,80,equals,this,port,this,scheme,equals,https,443,equals,this,port,this,port,null,return,this
UriComponentsBuilder -> UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers);1475874694;Adapt this builder's scheme+host+port from the given headers, specifically_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param headers the HTTP headers to consider_@return this UriComponentsBuilder_@since 4.2.7;UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {_		String forwardedHeader = headers.getFirst("Forwarded")__		if (StringUtils.hasText(forwardedHeader)) {_			String forwardedToUse = StringUtils.tokenizeToStringArray(forwardedHeader, ",")[0]__			Matcher matcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				host(matcher.group(1).trim())__			}_			matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				scheme(matcher.group(1).trim())__			}_		}_		else {_			String hostHeader = headers.getFirst("X-Forwarded-Host")__			if (StringUtils.hasText(hostHeader)) {_				String hostToUse = StringUtils.tokenizeToStringArray(hostHeader, ",")[0]__				int portSeparatorIdx = hostToUse.lastIndexOf(":")__				if (portSeparatorIdx > hostToUse.lastIndexOf("]")) {_					host(hostToUse.substring(0, portSeparatorIdx))__					port(Integer.parseInt(hostToUse.substring(portSeparatorIdx + 1)))__				}_				else {_					host(hostToUse)__					port(null)__				}_			}__			String portHeader = headers.getFirst("X-Forwarded-Port")__			if (StringUtils.hasText(portHeader)) {_				port(Integer.parseInt(StringUtils.tokenizeToStringArray(portHeader, ",")[0]))__			}__			String protocolHeader = headers.getFirst("X-Forwarded-Proto")__			if (StringUtils.hasText(protocolHeader)) {_				scheme(StringUtils.tokenizeToStringArray(protocolHeader, ",")[0])__			}_		}__		if ((this.scheme.equals("http") && "80".equals(this.port)) ||_				(this.scheme.equals("https") && "443".equals(this.port))) {_			this.port = null__		}__		return this__	};adapt,this,builder,s,scheme,host,port,from,the,given,headers,specifically,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,headers,the,http,headers,to,consider,return,this,uri,components,builder,since,4,2,7;uri,components,builder,adapt,from,forwarded,headers,http,headers,headers,string,forwarded,header,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,tokenize,to,string,array,forwarded,header,0,matcher,matcher,matcher,forwarded,to,use,if,matcher,find,host,matcher,group,1,trim,matcher,matcher,forwarded,to,use,if,matcher,find,scheme,matcher,group,1,trim,else,string,host,header,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,string,host,to,use,string,utils,tokenize,to,string,array,host,header,0,int,port,separator,idx,host,to,use,last,index,of,if,port,separator,idx,host,to,use,last,index,of,host,host,to,use,substring,0,port,separator,idx,port,integer,parse,int,host,to,use,substring,port,separator,idx,1,else,host,host,to,use,port,null,string,port,header,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,string,utils,tokenize,to,string,array,port,header,0,string,protocol,header,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,string,utils,tokenize,to,string,array,protocol,header,0,if,this,scheme,equals,http,80,equals,this,port,this,scheme,equals,https,443,equals,this,port,this,port,null,return,this
UriComponentsBuilder -> UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers);1476136805;Adapt this builder's scheme+host+port from the given headers, specifically_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param headers the HTTP headers to consider_@return this UriComponentsBuilder_@since 4.2.7;UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {_		String forwardedHeader = headers.getFirst("Forwarded")__		if (StringUtils.hasText(forwardedHeader)) {_			String forwardedToUse = StringUtils.tokenizeToStringArray(forwardedHeader, ",")[0]__			Matcher matcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				host(matcher.group(1).trim())__			}_			matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				scheme(matcher.group(1).trim())__			}_		}_		else {_			String hostHeader = headers.getFirst("X-Forwarded-Host")__			if (StringUtils.hasText(hostHeader)) {_				String hostToUse = StringUtils.tokenizeToStringArray(hostHeader, ",")[0]__				int portSeparatorIdx = hostToUse.lastIndexOf(":")__				if (portSeparatorIdx > hostToUse.lastIndexOf("]")) {_					host(hostToUse.substring(0, portSeparatorIdx))__					port(Integer.parseInt(hostToUse.substring(portSeparatorIdx + 1)))__				}_				else {_					host(hostToUse)__					port(null)__				}_			}__			String portHeader = headers.getFirst("X-Forwarded-Port")__			if (StringUtils.hasText(portHeader)) {_				port(Integer.parseInt(StringUtils.tokenizeToStringArray(portHeader, ",")[0]))__			}__			String protocolHeader = headers.getFirst("X-Forwarded-Proto")__			if (StringUtils.hasText(protocolHeader)) {_				scheme(StringUtils.tokenizeToStringArray(protocolHeader, ",")[0])__			}_		}__		if ((this.scheme != null) && ((this.scheme.equals("http") && "80".equals(this.port)) ||_				(this.scheme.equals("https") && "443".equals(this.port)))) {_			this.port = null__		}__		return this__	};adapt,this,builder,s,scheme,host,port,from,the,given,headers,specifically,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,headers,the,http,headers,to,consider,return,this,uri,components,builder,since,4,2,7;uri,components,builder,adapt,from,forwarded,headers,http,headers,headers,string,forwarded,header,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,tokenize,to,string,array,forwarded,header,0,matcher,matcher,matcher,forwarded,to,use,if,matcher,find,host,matcher,group,1,trim,matcher,matcher,forwarded,to,use,if,matcher,find,scheme,matcher,group,1,trim,else,string,host,header,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,string,host,to,use,string,utils,tokenize,to,string,array,host,header,0,int,port,separator,idx,host,to,use,last,index,of,if,port,separator,idx,host,to,use,last,index,of,host,host,to,use,substring,0,port,separator,idx,port,integer,parse,int,host,to,use,substring,port,separator,idx,1,else,host,host,to,use,port,null,string,port,header,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,string,utils,tokenize,to,string,array,port,header,0,string,protocol,header,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,string,utils,tokenize,to,string,array,protocol,header,0,if,this,scheme,null,this,scheme,equals,http,80,equals,this,port,this,scheme,equals,https,443,equals,this,port,this,port,null,return,this
UriComponentsBuilder -> UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers);1485553611;Adapt this builder's scheme+host+port from the given headers, specifically_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param headers the HTTP headers to consider_@return this UriComponentsBuilder_@since 4.2.7;UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {_		String forwardedHeader = headers.getFirst("Forwarded")__		if (StringUtils.hasText(forwardedHeader)) {_			String forwardedToUse = StringUtils.tokenizeToStringArray(forwardedHeader, ",")[0]__			Matcher matcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				host(matcher.group(1).trim())__			}_			matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				scheme(matcher.group(1).trim())__			}_		}_		else {_			String hostHeader = headers.getFirst("X-Forwarded-Host")__			if (StringUtils.hasText(hostHeader)) {_				String hostToUse = StringUtils.tokenizeToStringArray(hostHeader, ",")[0]__				int portSeparatorIdx = hostToUse.lastIndexOf(":")__				if (portSeparatorIdx > hostToUse.lastIndexOf("]")) {_					host(hostToUse.substring(0, portSeparatorIdx))__					port(Integer.parseInt(hostToUse.substring(portSeparatorIdx + 1)))__				}_				else {_					host(hostToUse)__					port(null)__				}_			}__			String portHeader = headers.getFirst("X-Forwarded-Port")__			if (StringUtils.hasText(portHeader)) {_				port(Integer.parseInt(StringUtils.tokenizeToStringArray(portHeader, ",")[0]))__			}__			String protocolHeader = headers.getFirst("X-Forwarded-Proto")__			if (StringUtils.hasText(protocolHeader)) {_				scheme(StringUtils.tokenizeToStringArray(protocolHeader, ",")[0])__			}_		}__		if ((this.scheme != null) && ((this.scheme.equals("http") && "80".equals(this.port)) ||_				(this.scheme.equals("https") && "443".equals(this.port)))) {_			this.port = null__		}__		return this__	};adapt,this,builder,s,scheme,host,port,from,the,given,headers,specifically,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,headers,the,http,headers,to,consider,return,this,uri,components,builder,since,4,2,7;uri,components,builder,adapt,from,forwarded,headers,http,headers,headers,string,forwarded,header,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,tokenize,to,string,array,forwarded,header,0,matcher,matcher,matcher,forwarded,to,use,if,matcher,find,host,matcher,group,1,trim,matcher,matcher,forwarded,to,use,if,matcher,find,scheme,matcher,group,1,trim,else,string,host,header,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,string,host,to,use,string,utils,tokenize,to,string,array,host,header,0,int,port,separator,idx,host,to,use,last,index,of,if,port,separator,idx,host,to,use,last,index,of,host,host,to,use,substring,0,port,separator,idx,port,integer,parse,int,host,to,use,substring,port,separator,idx,1,else,host,host,to,use,port,null,string,port,header,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,string,utils,tokenize,to,string,array,port,header,0,string,protocol,header,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,string,utils,tokenize,to,string,array,protocol,header,0,if,this,scheme,null,this,scheme,equals,http,80,equals,this,port,this,scheme,equals,https,443,equals,this,port,this,port,null,return,this
UriComponentsBuilder -> UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers);1486074560;Adapt this builder's scheme+host+port from the given headers, specifically_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param headers the HTTP headers to consider_@return this UriComponentsBuilder_@since 4.2.7;UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {_		String forwardedHeader = headers.getFirst("Forwarded")__		if (StringUtils.hasText(forwardedHeader)) {_			String forwardedToUse = StringUtils.tokenizeToStringArray(forwardedHeader, ",")[0]__			Matcher matcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				host(matcher.group(1).trim())__			}_			matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				scheme(matcher.group(1).trim())__			}_		}_		else {_			String hostHeader = headers.getFirst("X-Forwarded-Host")__			if (StringUtils.hasText(hostHeader)) {_				String hostToUse = StringUtils.tokenizeToStringArray(hostHeader, ",")[0]__				int portSeparatorIdx = hostToUse.lastIndexOf(":")__				if (portSeparatorIdx > hostToUse.lastIndexOf("]")) {_					host(hostToUse.substring(0, portSeparatorIdx))__					port(Integer.parseInt(hostToUse.substring(portSeparatorIdx + 1)))__				}_				else {_					host(hostToUse)__					port(null)__				}_			}__			String portHeader = headers.getFirst("X-Forwarded-Port")__			if (StringUtils.hasText(portHeader)) {_				port(Integer.parseInt(StringUtils.tokenizeToStringArray(portHeader, ",")[0]))__			}__			String protocolHeader = headers.getFirst("X-Forwarded-Proto")__			if (StringUtils.hasText(protocolHeader)) {_				scheme(StringUtils.tokenizeToStringArray(protocolHeader, ",")[0])__			}_		}__		if ((this.scheme != null) && ((this.scheme.equals("http") && "80".equals(this.port)) ||_				(this.scheme.equals("https") && "443".equals(this.port)))) {_			this.port = null__		}__		return this__	};adapt,this,builder,s,scheme,host,port,from,the,given,headers,specifically,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,headers,the,http,headers,to,consider,return,this,uri,components,builder,since,4,2,7;uri,components,builder,adapt,from,forwarded,headers,http,headers,headers,string,forwarded,header,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,tokenize,to,string,array,forwarded,header,0,matcher,matcher,matcher,forwarded,to,use,if,matcher,find,host,matcher,group,1,trim,matcher,matcher,forwarded,to,use,if,matcher,find,scheme,matcher,group,1,trim,else,string,host,header,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,string,host,to,use,string,utils,tokenize,to,string,array,host,header,0,int,port,separator,idx,host,to,use,last,index,of,if,port,separator,idx,host,to,use,last,index,of,host,host,to,use,substring,0,port,separator,idx,port,integer,parse,int,host,to,use,substring,port,separator,idx,1,else,host,host,to,use,port,null,string,port,header,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,string,utils,tokenize,to,string,array,port,header,0,string,protocol,header,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,string,utils,tokenize,to,string,array,protocol,header,0,if,this,scheme,null,this,scheme,equals,http,80,equals,this,port,this,scheme,equals,https,443,equals,this,port,this,port,null,return,this
UriComponentsBuilder -> UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers);1492678922;Adapt this builder's scheme+host+port from the given headers, specifically_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param headers the HTTP headers to consider_@return this UriComponentsBuilder_@since 4.2.7;UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {_		String forwardedHeader = headers.getFirst("Forwarded")__		if (StringUtils.hasText(forwardedHeader)) {_			String forwardedToUse = StringUtils.tokenizeToStringArray(forwardedHeader, ",")[0]__			Matcher matcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				host(matcher.group(1).trim())__			}_			matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				scheme(matcher.group(1).trim())__			}_		}_		else {_			String hostHeader = headers.getFirst("X-Forwarded-Host")__			if (StringUtils.hasText(hostHeader)) {_				String hostToUse = StringUtils.tokenizeToStringArray(hostHeader, ",")[0]__				int portSeparatorIdx = hostToUse.lastIndexOf(":")__				if (portSeparatorIdx > hostToUse.lastIndexOf("]")) {_					host(hostToUse.substring(0, portSeparatorIdx))__					port(Integer.parseInt(hostToUse.substring(portSeparatorIdx + 1)))__				}_				else {_					host(hostToUse)__					port(null)__				}_			}__			String portHeader = headers.getFirst("X-Forwarded-Port")__			if (StringUtils.hasText(portHeader)) {_				port(Integer.parseInt(StringUtils.tokenizeToStringArray(portHeader, ",")[0]))__			}__			String protocolHeader = headers.getFirst("X-Forwarded-Proto")__			if (StringUtils.hasText(protocolHeader)) {_				scheme(StringUtils.tokenizeToStringArray(protocolHeader, ",")[0])__			}_		}__		if ((this.scheme != null) && ((this.scheme.equals("http") && "80".equals(this.port)) ||_				(this.scheme.equals("https") && "443".equals(this.port)))) {_			this.port = null__		}__		return this__	};adapt,this,builder,s,scheme,host,port,from,the,given,headers,specifically,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,headers,the,http,headers,to,consider,return,this,uri,components,builder,since,4,2,7;uri,components,builder,adapt,from,forwarded,headers,http,headers,headers,string,forwarded,header,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,tokenize,to,string,array,forwarded,header,0,matcher,matcher,matcher,forwarded,to,use,if,matcher,find,host,matcher,group,1,trim,matcher,matcher,forwarded,to,use,if,matcher,find,scheme,matcher,group,1,trim,else,string,host,header,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,string,host,to,use,string,utils,tokenize,to,string,array,host,header,0,int,port,separator,idx,host,to,use,last,index,of,if,port,separator,idx,host,to,use,last,index,of,host,host,to,use,substring,0,port,separator,idx,port,integer,parse,int,host,to,use,substring,port,separator,idx,1,else,host,host,to,use,port,null,string,port,header,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,string,utils,tokenize,to,string,array,port,header,0,string,protocol,header,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,string,utils,tokenize,to,string,array,protocol,header,0,if,this,scheme,null,this,scheme,equals,http,80,equals,this,port,this,scheme,equals,https,443,equals,this,port,this,port,null,return,this
UriComponentsBuilder -> UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers);1493758742;Adapt this builder's scheme+host+port from the given headers, specifically_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param headers the HTTP headers to consider_@return this UriComponentsBuilder_@since 4.2.7;UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {_		String forwardedHeader = headers.getFirst("Forwarded")__		if (StringUtils.hasText(forwardedHeader)) {_			String forwardedToUse = StringUtils.tokenizeToStringArray(forwardedHeader, ",")[0]__			Matcher matcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				adaptForwardedHost(matcher.group(1).trim())__			}_			matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				scheme(matcher.group(1).trim())__			}_		}_		else {_			String hostHeader = headers.getFirst("X-Forwarded-Host")__			if (StringUtils.hasText(hostHeader)) {_				adaptForwardedHost(StringUtils.tokenizeToStringArray(hostHeader, ",")[0])__			}__			String portHeader = headers.getFirst("X-Forwarded-Port")__			if (StringUtils.hasText(portHeader)) {_				port(Integer.parseInt(StringUtils.tokenizeToStringArray(portHeader, ",")[0]))__			}__			String protocolHeader = headers.getFirst("X-Forwarded-Proto")__			if (StringUtils.hasText(protocolHeader)) {_				scheme(StringUtils.tokenizeToStringArray(protocolHeader, ",")[0])__			}_		}__		if ((this.scheme != null) && ((this.scheme.equals("http") && "80".equals(this.port)) ||_				(this.scheme.equals("https") && "443".equals(this.port)))) {_			this.port = null__		}__		return this__	};adapt,this,builder,s,scheme,host,port,from,the,given,headers,specifically,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,headers,the,http,headers,to,consider,return,this,uri,components,builder,since,4,2,7;uri,components,builder,adapt,from,forwarded,headers,http,headers,headers,string,forwarded,header,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,tokenize,to,string,array,forwarded,header,0,matcher,matcher,matcher,forwarded,to,use,if,matcher,find,adapt,forwarded,host,matcher,group,1,trim,matcher,matcher,forwarded,to,use,if,matcher,find,scheme,matcher,group,1,trim,else,string,host,header,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,adapt,forwarded,host,string,utils,tokenize,to,string,array,host,header,0,string,port,header,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,string,utils,tokenize,to,string,array,port,header,0,string,protocol,header,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,string,utils,tokenize,to,string,array,protocol,header,0,if,this,scheme,null,this,scheme,equals,http,80,equals,this,port,this,scheme,equals,https,443,equals,this,port,this,port,null,return,this
UriComponentsBuilder -> UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers);1495868221;Adapt this builder's scheme+host+port from the given headers, specifically_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param headers the HTTP headers to consider_@return this UriComponentsBuilder_@since 4.2.7;UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {_		String forwardedHeader = headers.getFirst("Forwarded")__		if (StringUtils.hasText(forwardedHeader)) {_			String forwardedToUse = StringUtils.tokenizeToStringArray(forwardedHeader, ",")[0]__			Matcher matcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				adaptForwardedHost(matcher.group(1).trim())__			}_			matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				scheme(matcher.group(1).trim())__			}_		}_		else {_			String hostHeader = headers.getFirst("X-Forwarded-Host")__			if (StringUtils.hasText(hostHeader)) {_				adaptForwardedHost(StringUtils.tokenizeToStringArray(hostHeader, ",")[0])__			}__			String portHeader = headers.getFirst("X-Forwarded-Port")__			if (StringUtils.hasText(portHeader)) {_				port(Integer.parseInt(StringUtils.tokenizeToStringArray(portHeader, ",")[0]))__			}__			String protocolHeader = headers.getFirst("X-Forwarded-Proto")__			if (StringUtils.hasText(protocolHeader)) {_				scheme(StringUtils.tokenizeToStringArray(protocolHeader, ",")[0])__			}_		}__		if ((this.scheme != null) && ((this.scheme.equals("http") && "80".equals(this.port)) ||_				(this.scheme.equals("https") && "443".equals(this.port)))) {_			this.port = null__		}__		return this__	};adapt,this,builder,s,scheme,host,port,from,the,given,headers,specifically,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,headers,the,http,headers,to,consider,return,this,uri,components,builder,since,4,2,7;uri,components,builder,adapt,from,forwarded,headers,http,headers,headers,string,forwarded,header,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,tokenize,to,string,array,forwarded,header,0,matcher,matcher,matcher,forwarded,to,use,if,matcher,find,adapt,forwarded,host,matcher,group,1,trim,matcher,matcher,forwarded,to,use,if,matcher,find,scheme,matcher,group,1,trim,else,string,host,header,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,adapt,forwarded,host,string,utils,tokenize,to,string,array,host,header,0,string,port,header,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,string,utils,tokenize,to,string,array,port,header,0,string,protocol,header,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,string,utils,tokenize,to,string,array,protocol,header,0,if,this,scheme,null,this,scheme,equals,http,80,equals,this,port,this,scheme,equals,https,443,equals,this,port,this,port,null,return,this
UriComponentsBuilder -> UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers);1496259743;Adapt this builder's scheme+host+port from the given headers, specifically_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param headers the HTTP headers to consider_@return this UriComponentsBuilder_@since 4.2.7;UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {_		String forwardedHeader = headers.getFirst("Forwarded")__		if (StringUtils.hasText(forwardedHeader)) {_			String forwardedToUse = StringUtils.tokenizeToStringArray(forwardedHeader, ",")[0]__			Matcher matcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				adaptForwardedHost(matcher.group(1).trim())__			}_			matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				scheme(matcher.group(1).trim())__			}_		}_		else {_			String hostHeader = headers.getFirst("X-Forwarded-Host")__			if (StringUtils.hasText(hostHeader)) {_				adaptForwardedHost(StringUtils.tokenizeToStringArray(hostHeader, ",")[0])__			}__			String portHeader = headers.getFirst("X-Forwarded-Port")__			if (StringUtils.hasText(portHeader)) {_				port(Integer.parseInt(StringUtils.tokenizeToStringArray(portHeader, ",")[0]))__			}__			String protocolHeader = headers.getFirst("X-Forwarded-Proto")__			if (StringUtils.hasText(protocolHeader)) {_				scheme(StringUtils.tokenizeToStringArray(protocolHeader, ",")[0])__			}_		}__		if ((this.scheme != null) && ((this.scheme.equals("http") && "80".equals(this.port)) ||_				(this.scheme.equals("https") && "443".equals(this.port)))) {_			this.port = null__		}__		return this__	};adapt,this,builder,s,scheme,host,port,from,the,given,headers,specifically,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,headers,the,http,headers,to,consider,return,this,uri,components,builder,since,4,2,7;uri,components,builder,adapt,from,forwarded,headers,http,headers,headers,string,forwarded,header,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,tokenize,to,string,array,forwarded,header,0,matcher,matcher,matcher,forwarded,to,use,if,matcher,find,adapt,forwarded,host,matcher,group,1,trim,matcher,matcher,forwarded,to,use,if,matcher,find,scheme,matcher,group,1,trim,else,string,host,header,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,adapt,forwarded,host,string,utils,tokenize,to,string,array,host,header,0,string,port,header,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,string,utils,tokenize,to,string,array,port,header,0,string,protocol,header,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,string,utils,tokenize,to,string,array,protocol,header,0,if,this,scheme,null,this,scheme,equals,http,80,equals,this,port,this,scheme,equals,https,443,equals,this,port,this,port,null,return,this
UriComponentsBuilder -> UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers);1496370972;Adapt this builder's scheme+host+port from the given headers, specifically_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param headers the HTTP headers to consider_@return this UriComponentsBuilder_@since 4.2.7;UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {_		String forwardedHeader = headers.getFirst("Forwarded")__		if (StringUtils.hasText(forwardedHeader)) {_			String forwardedToUse = StringUtils.tokenizeToStringArray(forwardedHeader, ",")[0]__			Matcher matcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				adaptForwardedHost(matcher.group(1).trim())__			}_			matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				scheme(matcher.group(1).trim())__			}_		}_		else {_			String hostHeader = headers.getFirst("X-Forwarded-Host")__			if (StringUtils.hasText(hostHeader)) {_				adaptForwardedHost(StringUtils.tokenizeToStringArray(hostHeader, ",")[0])__			}__			String portHeader = headers.getFirst("X-Forwarded-Port")__			if (StringUtils.hasText(portHeader)) {_				port(Integer.parseInt(StringUtils.tokenizeToStringArray(portHeader, ",")[0]))__			}__			String protocolHeader = headers.getFirst("X-Forwarded-Proto")__			if (StringUtils.hasText(protocolHeader)) {_				scheme(StringUtils.tokenizeToStringArray(protocolHeader, ",")[0])__			}_		}__		if ((this.scheme != null) && ((this.scheme.equals("http") && "80".equals(this.port)) ||_				(this.scheme.equals("https") && "443".equals(this.port)))) {_			this.port = null__		}__		return this__	};adapt,this,builder,s,scheme,host,port,from,the,given,headers,specifically,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,headers,the,http,headers,to,consider,return,this,uri,components,builder,since,4,2,7;uri,components,builder,adapt,from,forwarded,headers,http,headers,headers,string,forwarded,header,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,tokenize,to,string,array,forwarded,header,0,matcher,matcher,matcher,forwarded,to,use,if,matcher,find,adapt,forwarded,host,matcher,group,1,trim,matcher,matcher,forwarded,to,use,if,matcher,find,scheme,matcher,group,1,trim,else,string,host,header,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,adapt,forwarded,host,string,utils,tokenize,to,string,array,host,header,0,string,port,header,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,string,utils,tokenize,to,string,array,port,header,0,string,protocol,header,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,string,utils,tokenize,to,string,array,protocol,header,0,if,this,scheme,null,this,scheme,equals,http,80,equals,this,port,this,scheme,equals,https,443,equals,this,port,this,port,null,return,this
UriComponentsBuilder -> UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers);1496837955;Adapt this builder's scheme+host+port from the given headers, specifically_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param headers the HTTP headers to consider_@return this UriComponentsBuilder_@since 4.2.7;UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {_		String forwardedHeader = headers.getFirst("Forwarded")__		if (StringUtils.hasText(forwardedHeader)) {_			String forwardedToUse = StringUtils.tokenizeToStringArray(forwardedHeader, ",")[0]__			Matcher matcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				adaptForwardedHost(matcher.group(1).trim())__			}_			matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				scheme(matcher.group(1).trim())__			}_		}_		else {_			String hostHeader = headers.getFirst("X-Forwarded-Host")__			if (StringUtils.hasText(hostHeader)) {_				adaptForwardedHost(StringUtils.tokenizeToStringArray(hostHeader, ",")[0])__			}__			String portHeader = headers.getFirst("X-Forwarded-Port")__			if (StringUtils.hasText(portHeader)) {_				port(Integer.parseInt(StringUtils.tokenizeToStringArray(portHeader, ",")[0]))__			}__			String protocolHeader = headers.getFirst("X-Forwarded-Proto")__			if (StringUtils.hasText(protocolHeader)) {_				scheme(StringUtils.tokenizeToStringArray(protocolHeader, ",")[0])__			}_		}__		if ((this.scheme != null) && ((this.scheme.equals("http") && "80".equals(this.port)) ||_				(this.scheme.equals("https") && "443".equals(this.port)))) {_			this.port = null__		}__		return this__	};adapt,this,builder,s,scheme,host,port,from,the,given,headers,specifically,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,headers,the,http,headers,to,consider,return,this,uri,components,builder,since,4,2,7;uri,components,builder,adapt,from,forwarded,headers,http,headers,headers,string,forwarded,header,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,tokenize,to,string,array,forwarded,header,0,matcher,matcher,matcher,forwarded,to,use,if,matcher,find,adapt,forwarded,host,matcher,group,1,trim,matcher,matcher,forwarded,to,use,if,matcher,find,scheme,matcher,group,1,trim,else,string,host,header,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,adapt,forwarded,host,string,utils,tokenize,to,string,array,host,header,0,string,port,header,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,string,utils,tokenize,to,string,array,port,header,0,string,protocol,header,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,string,utils,tokenize,to,string,array,protocol,header,0,if,this,scheme,null,this,scheme,equals,http,80,equals,this,port,this,scheme,equals,https,443,equals,this,port,this,port,null,return,this
UriComponentsBuilder -> UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers);1498780456;Adapt this builder's scheme+host+port from the given headers, specifically_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param headers the HTTP headers to consider_@return this UriComponentsBuilder_@since 4.2.7;UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {_		String forwardedHeader = headers.getFirst("Forwarded")__		if (StringUtils.hasText(forwardedHeader)) {_			String forwardedToUse = StringUtils.tokenizeToStringArray(forwardedHeader, ",")[0]__			Matcher matcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				adaptForwardedHost(matcher.group(1).trim())__			}_			matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				scheme(matcher.group(1).trim())__			}_		}_		else {_			String hostHeader = headers.getFirst("X-Forwarded-Host")__			if (StringUtils.hasText(hostHeader)) {_				adaptForwardedHost(StringUtils.tokenizeToStringArray(hostHeader, ",")[0])__			}__			String portHeader = headers.getFirst("X-Forwarded-Port")__			if (StringUtils.hasText(portHeader)) {_				port(Integer.parseInt(StringUtils.tokenizeToStringArray(portHeader, ",")[0]))__			}__			String protocolHeader = headers.getFirst("X-Forwarded-Proto")__			if (StringUtils.hasText(protocolHeader)) {_				scheme(StringUtils.tokenizeToStringArray(protocolHeader, ",")[0])__			}_		}__		if ((this.scheme != null) && ((this.scheme.equals("http") && "80".equals(this.port)) ||_				(this.scheme.equals("https") && "443".equals(this.port)))) {_			this.port = null__		}__		return this__	};adapt,this,builder,s,scheme,host,port,from,the,given,headers,specifically,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,headers,the,http,headers,to,consider,return,this,uri,components,builder,since,4,2,7;uri,components,builder,adapt,from,forwarded,headers,http,headers,headers,string,forwarded,header,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,tokenize,to,string,array,forwarded,header,0,matcher,matcher,matcher,forwarded,to,use,if,matcher,find,adapt,forwarded,host,matcher,group,1,trim,matcher,matcher,forwarded,to,use,if,matcher,find,scheme,matcher,group,1,trim,else,string,host,header,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,adapt,forwarded,host,string,utils,tokenize,to,string,array,host,header,0,string,port,header,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,string,utils,tokenize,to,string,array,port,header,0,string,protocol,header,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,string,utils,tokenize,to,string,array,protocol,header,0,if,this,scheme,null,this,scheme,equals,http,80,equals,this,port,this,scheme,equals,https,443,equals,this,port,this,port,null,return,this
UriComponentsBuilder -> UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers);1500460652;Adapt this builder's scheme+host+port from the given headers, specifically_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param headers the HTTP headers to consider_@return this UriComponentsBuilder_@since 4.2.7;UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {_		String forwardedHeader = headers.getFirst("Forwarded")__		if (StringUtils.hasText(forwardedHeader)) {_			String forwardedToUse = StringUtils.tokenizeToStringArray(forwardedHeader, ",")[0]__			Matcher matcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				adaptForwardedHost(matcher.group(1).trim())__			}_			matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				scheme(matcher.group(1).trim())__			}_		}_		else {_			String hostHeader = headers.getFirst("X-Forwarded-Host")__			if (StringUtils.hasText(hostHeader)) {_				adaptForwardedHost(StringUtils.tokenizeToStringArray(hostHeader, ",")[0])__			}__			String portHeader = headers.getFirst("X-Forwarded-Port")__			if (StringUtils.hasText(portHeader)) {_				port(Integer.parseInt(StringUtils.tokenizeToStringArray(portHeader, ",")[0]))__			}__			String protocolHeader = headers.getFirst("X-Forwarded-Proto")__			if (StringUtils.hasText(protocolHeader)) {_				scheme(StringUtils.tokenizeToStringArray(protocolHeader, ",")[0])__			}_		}__		if ((this.scheme != null) && ((this.scheme.equals("http") && "80".equals(this.port)) ||_				(this.scheme.equals("https") && "443".equals(this.port)))) {_			this.port = null__		}__		return this__	};adapt,this,builder,s,scheme,host,port,from,the,given,headers,specifically,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,headers,the,http,headers,to,consider,return,this,uri,components,builder,since,4,2,7;uri,components,builder,adapt,from,forwarded,headers,http,headers,headers,string,forwarded,header,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,tokenize,to,string,array,forwarded,header,0,matcher,matcher,matcher,forwarded,to,use,if,matcher,find,adapt,forwarded,host,matcher,group,1,trim,matcher,matcher,forwarded,to,use,if,matcher,find,scheme,matcher,group,1,trim,else,string,host,header,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,adapt,forwarded,host,string,utils,tokenize,to,string,array,host,header,0,string,port,header,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,string,utils,tokenize,to,string,array,port,header,0,string,protocol,header,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,string,utils,tokenize,to,string,array,protocol,header,0,if,this,scheme,null,this,scheme,equals,http,80,equals,this,port,this,scheme,equals,https,443,equals,this,port,this,port,null,return,this
UriComponentsBuilder -> UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers);1513715892;Adapt this builder's scheme+host+port from the given headers, specifically_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param headers the HTTP headers to consider_@return this UriComponentsBuilder_@since 4.2.7;UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {_		String forwardedHeader = headers.getFirst("Forwarded")__		if (StringUtils.hasText(forwardedHeader)) {_			String forwardedToUse = StringUtils.tokenizeToStringArray(forwardedHeader, ",")[0]__			Matcher matcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				adaptForwardedHost(matcher.group(1).trim())__			}_			matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				scheme(matcher.group(1).trim())__			}_		}_		else {_			String hostHeader = headers.getFirst("X-Forwarded-Host")__			if (StringUtils.hasText(hostHeader)) {_				adaptForwardedHost(StringUtils.tokenizeToStringArray(hostHeader, ",")[0])__			}__			String portHeader = headers.getFirst("X-Forwarded-Port")__			if (StringUtils.hasText(portHeader)) {_				port(Integer.parseInt(StringUtils.tokenizeToStringArray(portHeader, ",")[0]))__			}__			String protocolHeader = headers.getFirst("X-Forwarded-Proto")__			if (StringUtils.hasText(protocolHeader)) {_				scheme(StringUtils.tokenizeToStringArray(protocolHeader, ",")[0])__			}_		}__		if ((this.scheme != null) && ((this.scheme.equals("http") && "80".equals(this.port)) ||_				(this.scheme.equals("https") && "443".equals(this.port)))) {_			this.port = null__		}__		return this__	};adapt,this,builder,s,scheme,host,port,from,the,given,headers,specifically,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,headers,the,http,headers,to,consider,return,this,uri,components,builder,since,4,2,7;uri,components,builder,adapt,from,forwarded,headers,http,headers,headers,string,forwarded,header,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,tokenize,to,string,array,forwarded,header,0,matcher,matcher,matcher,forwarded,to,use,if,matcher,find,adapt,forwarded,host,matcher,group,1,trim,matcher,matcher,forwarded,to,use,if,matcher,find,scheme,matcher,group,1,trim,else,string,host,header,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,adapt,forwarded,host,string,utils,tokenize,to,string,array,host,header,0,string,port,header,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,string,utils,tokenize,to,string,array,port,header,0,string,protocol,header,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,string,utils,tokenize,to,string,array,protocol,header,0,if,this,scheme,null,this,scheme,equals,http,80,equals,this,port,this,scheme,equals,https,443,equals,this,port,this,port,null,return,this
UriComponentsBuilder -> UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers);1515504834;Adapt this builder's scheme+host+port from the given headers, specifically_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param headers the HTTP headers to consider_@return this UriComponentsBuilder_@since 4.2.7;UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {_		String forwardedHeader = headers.getFirst("Forwarded")__		if (StringUtils.hasText(forwardedHeader)) {_			String forwardedToUse = StringUtils.tokenizeToStringArray(forwardedHeader, ",")[0]__			Matcher matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				scheme(matcher.group(1).trim())__				port(null)__			}_			matcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				adaptForwardedHost(matcher.group(1).trim())__			}_		}_		else {_			String protocolHeader = headers.getFirst("X-Forwarded-Proto")__			if (StringUtils.hasText(protocolHeader)) {_				scheme(StringUtils.tokenizeToStringArray(protocolHeader, ",")[0])__				port(null)__			}__			String hostHeader = headers.getFirst("X-Forwarded-Host")__			if (StringUtils.hasText(hostHeader)) {_				adaptForwardedHost(StringUtils.tokenizeToStringArray(hostHeader, ",")[0])__			}__			String portHeader = headers.getFirst("X-Forwarded-Port")__			if (StringUtils.hasText(portHeader)) {_				port(Integer.parseInt(StringUtils.tokenizeToStringArray(portHeader, ",")[0]))__			}_		}__		if ((this.scheme != null) && ((this.scheme.equals("http") && "80".equals(this.port)) ||_				(this.scheme.equals("https") && "443".equals(this.port)))) {_			port(null)__		}__		return this__	};adapt,this,builder,s,scheme,host,port,from,the,given,headers,specifically,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,headers,the,http,headers,to,consider,return,this,uri,components,builder,since,4,2,7;uri,components,builder,adapt,from,forwarded,headers,http,headers,headers,string,forwarded,header,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,tokenize,to,string,array,forwarded,header,0,matcher,matcher,matcher,forwarded,to,use,if,matcher,find,scheme,matcher,group,1,trim,port,null,matcher,matcher,forwarded,to,use,if,matcher,find,adapt,forwarded,host,matcher,group,1,trim,else,string,protocol,header,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,string,utils,tokenize,to,string,array,protocol,header,0,port,null,string,host,header,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,adapt,forwarded,host,string,utils,tokenize,to,string,array,host,header,0,string,port,header,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,string,utils,tokenize,to,string,array,port,header,0,if,this,scheme,null,this,scheme,equals,http,80,equals,this,port,this,scheme,equals,https,443,equals,this,port,port,null,return,this
UriComponentsBuilder -> UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers);1519588127;Adapt this builder's scheme+host+port from the given headers, specifically_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param headers the HTTP headers to consider_@return this UriComponentsBuilder_@since 4.2.7;UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {_		String forwardedHeader = headers.getFirst("Forwarded")__		if (StringUtils.hasText(forwardedHeader)) {_			String forwardedToUse = StringUtils.tokenizeToStringArray(forwardedHeader, ",")[0]__			Matcher matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				scheme(matcher.group(1).trim())__				port(null)__			}_			matcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				adaptForwardedHost(matcher.group(1).trim())__			}_		}_		else {_			String protocolHeader = headers.getFirst("X-Forwarded-Proto")__			if (StringUtils.hasText(protocolHeader)) {_				scheme(StringUtils.tokenizeToStringArray(protocolHeader, ",")[0])__				port(null)__			}__			String hostHeader = headers.getFirst("X-Forwarded-Host")__			if (StringUtils.hasText(hostHeader)) {_				adaptForwardedHost(StringUtils.tokenizeToStringArray(hostHeader, ",")[0])__			}__			String portHeader = headers.getFirst("X-Forwarded-Port")__			if (StringUtils.hasText(portHeader)) {_				port(Integer.parseInt(StringUtils.tokenizeToStringArray(portHeader, ",")[0]))__			}_		}__		if ((this.scheme != null) && ((this.scheme.equals("http") && "80".equals(this.port)) ||_				(this.scheme.equals("https") && "443".equals(this.port)))) {_			port(null)__		}__		return this__	};adapt,this,builder,s,scheme,host,port,from,the,given,headers,specifically,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,headers,the,http,headers,to,consider,return,this,uri,components,builder,since,4,2,7;uri,components,builder,adapt,from,forwarded,headers,http,headers,headers,string,forwarded,header,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,tokenize,to,string,array,forwarded,header,0,matcher,matcher,matcher,forwarded,to,use,if,matcher,find,scheme,matcher,group,1,trim,port,null,matcher,matcher,forwarded,to,use,if,matcher,find,adapt,forwarded,host,matcher,group,1,trim,else,string,protocol,header,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,string,utils,tokenize,to,string,array,protocol,header,0,port,null,string,host,header,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,adapt,forwarded,host,string,utils,tokenize,to,string,array,host,header,0,string,port,header,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,string,utils,tokenize,to,string,array,port,header,0,if,this,scheme,null,this,scheme,equals,http,80,equals,this,port,this,scheme,equals,https,443,equals,this,port,port,null,return,this
UriComponentsBuilder -> UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers);1522332352;Adapt this builder's scheme+host+port from the given headers, specifically_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param headers the HTTP headers to consider_@return this UriComponentsBuilder_@since 4.2.7;UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {_		String forwardedHeader = headers.getFirst("Forwarded")__		if (StringUtils.hasText(forwardedHeader)) {_			String forwardedToUse = StringUtils.tokenizeToStringArray(forwardedHeader, ",")[0]__			Matcher matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				scheme(matcher.group(1).trim())__				port(null)__			}_			matcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__			if (matcher.find()) {_				adaptForwardedHost(matcher.group(1).trim())__			}_		}_		else {_			String protocolHeader = headers.getFirst("X-Forwarded-Proto")__			if (StringUtils.hasText(protocolHeader)) {_				scheme(StringUtils.tokenizeToStringArray(protocolHeader, ",")[0])__				port(null)__			}__			String hostHeader = headers.getFirst("X-Forwarded-Host")__			if (StringUtils.hasText(hostHeader)) {_				adaptForwardedHost(StringUtils.tokenizeToStringArray(hostHeader, ",")[0])__			}__			String portHeader = headers.getFirst("X-Forwarded-Port")__			if (StringUtils.hasText(portHeader)) {_				port(Integer.parseInt(StringUtils.tokenizeToStringArray(portHeader, ",")[0]))__			}_		}__		if (this.scheme != null && ((this.scheme.equals("http") && "80".equals(this.port)) ||_				(this.scheme.equals("https") && "443".equals(this.port)))) {_			port(null)__		}__		return this__	};adapt,this,builder,s,scheme,host,port,from,the,given,headers,specifically,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,headers,the,http,headers,to,consider,return,this,uri,components,builder,since,4,2,7;uri,components,builder,adapt,from,forwarded,headers,http,headers,headers,string,forwarded,header,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,tokenize,to,string,array,forwarded,header,0,matcher,matcher,matcher,forwarded,to,use,if,matcher,find,scheme,matcher,group,1,trim,port,null,matcher,matcher,forwarded,to,use,if,matcher,find,adapt,forwarded,host,matcher,group,1,trim,else,string,protocol,header,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,string,utils,tokenize,to,string,array,protocol,header,0,port,null,string,host,header,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,adapt,forwarded,host,string,utils,tokenize,to,string,array,host,header,0,string,port,header,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,string,utils,tokenize,to,string,array,port,header,0,if,this,scheme,null,this,scheme,equals,http,80,equals,this,port,this,scheme,equals,https,443,equals,this,port,port,null,return,this
UriComponentsBuilder -> UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers);1522351714;Adapt this builder's scheme+host+port from the given headers, specifically_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._@param headers the HTTP headers to consider_@return this UriComponentsBuilder_@since 4.2.7;UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {_		try {_			String forwardedHeader = headers.getFirst("Forwarded")__			if (StringUtils.hasText(forwardedHeader)) {_				String forwardedToUse = StringUtils.tokenizeToStringArray(forwardedHeader, ",")[0]__				Matcher matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__				if (matcher.find()) {_					scheme(matcher.group(1).trim())__					port(null)__				}_				matcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__				if (matcher.find()) {_					adaptForwardedHost(matcher.group(1).trim())__				}_			}_			else {_				String protocolHeader = headers.getFirst("X-Forwarded-Proto")__				if (StringUtils.hasText(protocolHeader)) {_					scheme(StringUtils.tokenizeToStringArray(protocolHeader, ",")[0])__					port(null)__				}__				String hostHeader = headers.getFirst("X-Forwarded-Host")__				if (StringUtils.hasText(hostHeader)) {_					adaptForwardedHost(StringUtils.tokenizeToStringArray(hostHeader, ",")[0])__				}__				String portHeader = headers.getFirst("X-Forwarded-Port")__				if (StringUtils.hasText(portHeader)) {_					port(Integer.parseInt(StringUtils.tokenizeToStringArray(portHeader, ",")[0]))__				}_			}_		}_		catch (NumberFormatException ex) {_			throw new IllegalArgumentException("Failed to parse a port from \"forwarded\"-type headers. " +_					"If not behind a trusted proxy, consider using ForwardedHeaderFilter " +_					"with the removeOnly=true. Request headers: " + headers)__		}__		if (this.scheme != null && ((this.scheme.equals("http") && "80".equals(this.port)) ||_				(this.scheme.equals("https") && "443".equals(this.port)))) {_			port(null)__		}__		return this__	};adapt,this,builder,s,scheme,host,port,from,the,given,headers,specifically,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,param,headers,the,http,headers,to,consider,return,this,uri,components,builder,since,4,2,7;uri,components,builder,adapt,from,forwarded,headers,http,headers,headers,try,string,forwarded,header,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,tokenize,to,string,array,forwarded,header,0,matcher,matcher,matcher,forwarded,to,use,if,matcher,find,scheme,matcher,group,1,trim,port,null,matcher,matcher,forwarded,to,use,if,matcher,find,adapt,forwarded,host,matcher,group,1,trim,else,string,protocol,header,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,string,utils,tokenize,to,string,array,protocol,header,0,port,null,string,host,header,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,adapt,forwarded,host,string,utils,tokenize,to,string,array,host,header,0,string,port,header,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,string,utils,tokenize,to,string,array,port,header,0,catch,number,format,exception,ex,throw,new,illegal,argument,exception,failed,to,parse,a,port,from,forwarded,type,headers,if,not,behind,a,trusted,proxy,consider,using,forwarded,header,filter,with,the,remove,only,true,request,headers,headers,if,this,scheme,null,this,scheme,equals,http,80,equals,this,port,this,scheme,equals,https,443,equals,this,port,port,null,return,this
UriComponentsBuilder -> UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers);1522361849;Adapt this builder's scheme+host+port from the given headers, specifically_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._<p><strong>Note:</strong> this method uses values from forwarded headers,_if present, in order to reflect the client-originated protocol and address._Consider using the {@code ForwardedHeaderFilter} in order to choose from a_central place whether to extract and use, or to discard such headers._See the Spring Framework reference for more on this filter._@param headers the HTTP headers to consider_@return this UriComponentsBuilder_@since 4.2.7;UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {_		try {_			String forwardedHeader = headers.getFirst("Forwarded")__			if (StringUtils.hasText(forwardedHeader)) {_				String forwardedToUse = StringUtils.tokenizeToStringArray(forwardedHeader, ",")[0]__				Matcher matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__				if (matcher.find()) {_					scheme(matcher.group(1).trim())__					port(null)__				}_				matcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__				if (matcher.find()) {_					adaptForwardedHost(matcher.group(1).trim())__				}_			}_			else {_				String protocolHeader = headers.getFirst("X-Forwarded-Proto")__				if (StringUtils.hasText(protocolHeader)) {_					scheme(StringUtils.tokenizeToStringArray(protocolHeader, ",")[0])__					port(null)__				}__				String hostHeader = headers.getFirst("X-Forwarded-Host")__				if (StringUtils.hasText(hostHeader)) {_					adaptForwardedHost(StringUtils.tokenizeToStringArray(hostHeader, ",")[0])__				}__				String portHeader = headers.getFirst("X-Forwarded-Port")__				if (StringUtils.hasText(portHeader)) {_					port(Integer.parseInt(StringUtils.tokenizeToStringArray(portHeader, ",")[0]))__				}_			}_		}_		catch (NumberFormatException ex) {_			throw new IllegalArgumentException("Failed to parse a port from \"forwarded\"-type headers. " +_					"If not behind a trusted proxy, consider using ForwardedHeaderFilter " +_					"with the removeOnly=true. Request headers: " + headers)__		}__		if (this.scheme != null && ((this.scheme.equals("http") && "80".equals(this.port)) ||_				(this.scheme.equals("https") && "443".equals(this.port)))) {_			port(null)__		}__		return this__	};adapt,this,builder,s,scheme,host,port,from,the,given,headers,specifically,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,p,strong,note,strong,this,method,uses,values,from,forwarded,headers,if,present,in,order,to,reflect,the,client,originated,protocol,and,address,consider,using,the,code,forwarded,header,filter,in,order,to,choose,from,a,central,place,whether,to,extract,and,use,or,to,discard,such,headers,see,the,spring,framework,reference,for,more,on,this,filter,param,headers,the,http,headers,to,consider,return,this,uri,components,builder,since,4,2,7;uri,components,builder,adapt,from,forwarded,headers,http,headers,headers,try,string,forwarded,header,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,tokenize,to,string,array,forwarded,header,0,matcher,matcher,matcher,forwarded,to,use,if,matcher,find,scheme,matcher,group,1,trim,port,null,matcher,matcher,forwarded,to,use,if,matcher,find,adapt,forwarded,host,matcher,group,1,trim,else,string,protocol,header,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,string,utils,tokenize,to,string,array,protocol,header,0,port,null,string,host,header,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,adapt,forwarded,host,string,utils,tokenize,to,string,array,host,header,0,string,port,header,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,string,utils,tokenize,to,string,array,port,header,0,catch,number,format,exception,ex,throw,new,illegal,argument,exception,failed,to,parse,a,port,from,forwarded,type,headers,if,not,behind,a,trusted,proxy,consider,using,forwarded,header,filter,with,the,remove,only,true,request,headers,headers,if,this,scheme,null,this,scheme,equals,http,80,equals,this,port,this,scheme,equals,https,443,equals,this,port,port,null,return,this
UriComponentsBuilder -> UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers);1527192852;Adapt this builder's scheme+host+port from the given headers, specifically_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._<p><strong>Note:</strong> this method uses values from forwarded headers,_if present, in order to reflect the client-originated protocol and address._Consider using the {@code ForwardedHeaderFilter} in order to choose from a_central place whether to extract and use, or to discard such headers._See the Spring Framework reference for more on this filter._@param headers the HTTP headers to consider_@return this UriComponentsBuilder_@since 4.2.7;UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {_		try {_			String forwardedHeader = headers.getFirst("Forwarded")__			if (StringUtils.hasText(forwardedHeader)) {_				String forwardedToUse = StringUtils.tokenizeToStringArray(forwardedHeader, ",")[0]__				Matcher matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__				if (matcher.find()) {_					scheme(matcher.group(1).trim())__					port(null)__				}_				else if (isForwardedSslOn(headers)) {_					scheme("https")__					port(null)__				}_				matcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__				if (matcher.find()) {_					adaptForwardedHost(matcher.group(1).trim())__				}_			}_			else {_				String protocolHeader = headers.getFirst("X-Forwarded-Proto")__				if (StringUtils.hasText(protocolHeader)) {_					scheme(StringUtils.tokenizeToStringArray(protocolHeader, ",")[0])__					port(null)__				}_				else if (isForwardedSslOn(headers)) {_					scheme("https")__					port(null)__				}__				String hostHeader = headers.getFirst("X-Forwarded-Host")__				if (StringUtils.hasText(hostHeader)) {_					adaptForwardedHost(StringUtils.tokenizeToStringArray(hostHeader, ",")[0])__				}__				String portHeader = headers.getFirst("X-Forwarded-Port")__				if (StringUtils.hasText(portHeader)) {_					port(Integer.parseInt(StringUtils.tokenizeToStringArray(portHeader, ",")[0]))__				}_			}_		}_		catch (NumberFormatException ex) {_			throw new IllegalArgumentException("Failed to parse a port from \"forwarded\"-type headers. " +_					"If not behind a trusted proxy, consider using ForwardedHeaderFilter " +_					"with the removeOnly=true. Request headers: " + headers)__		}__		if (this.scheme != null && ((this.scheme.equals("http") && "80".equals(this.port)) ||_				(this.scheme.equals("https") && "443".equals(this.port)))) {_			port(null)__		}__		return this__	};adapt,this,builder,s,scheme,host,port,from,the,given,headers,specifically,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,p,strong,note,strong,this,method,uses,values,from,forwarded,headers,if,present,in,order,to,reflect,the,client,originated,protocol,and,address,consider,using,the,code,forwarded,header,filter,in,order,to,choose,from,a,central,place,whether,to,extract,and,use,or,to,discard,such,headers,see,the,spring,framework,reference,for,more,on,this,filter,param,headers,the,http,headers,to,consider,return,this,uri,components,builder,since,4,2,7;uri,components,builder,adapt,from,forwarded,headers,http,headers,headers,try,string,forwarded,header,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,tokenize,to,string,array,forwarded,header,0,matcher,matcher,matcher,forwarded,to,use,if,matcher,find,scheme,matcher,group,1,trim,port,null,else,if,is,forwarded,ssl,on,headers,scheme,https,port,null,matcher,matcher,forwarded,to,use,if,matcher,find,adapt,forwarded,host,matcher,group,1,trim,else,string,protocol,header,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,string,utils,tokenize,to,string,array,protocol,header,0,port,null,else,if,is,forwarded,ssl,on,headers,scheme,https,port,null,string,host,header,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,adapt,forwarded,host,string,utils,tokenize,to,string,array,host,header,0,string,port,header,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,string,utils,tokenize,to,string,array,port,header,0,catch,number,format,exception,ex,throw,new,illegal,argument,exception,failed,to,parse,a,port,from,forwarded,type,headers,if,not,behind,a,trusted,proxy,consider,using,forwarded,header,filter,with,the,remove,only,true,request,headers,headers,if,this,scheme,null,this,scheme,equals,http,80,equals,this,port,this,scheme,equals,https,443,equals,this,port,port,null,return,this
UriComponentsBuilder -> UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers);1530174524;Adapt this builder's scheme+host+port from the given headers, specifically_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._<p><strong>Note:</strong> this method uses values from forwarded headers,_if present, in order to reflect the client-originated protocol and address._Consider using the {@code ForwardedHeaderFilter} in order to choose from a_central place whether to extract and use, or to discard such headers._See the Spring Framework reference for more on this filter._@param headers the HTTP headers to consider_@return this UriComponentsBuilder_@since 4.2.7;UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {_		try {_			String forwardedHeader = headers.getFirst("Forwarded")__			if (StringUtils.hasText(forwardedHeader)) {_				String forwardedToUse = StringUtils.tokenizeToStringArray(forwardedHeader, ",")[0]__				Matcher matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__				if (matcher.find()) {_					scheme(matcher.group(1).trim())__					port(null)__				}_				else if (isForwardedSslOn(headers)) {_					scheme("https")__					port(null)__				}_				matcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__				if (matcher.find()) {_					adaptForwardedHost(matcher.group(1).trim())__				}_			}_			else {_				String protocolHeader = headers.getFirst("X-Forwarded-Proto")__				if (StringUtils.hasText(protocolHeader)) {_					scheme(StringUtils.tokenizeToStringArray(protocolHeader, ",")[0])__					port(null)__				}_				else if (isForwardedSslOn(headers)) {_					scheme("https")__					port(null)__				}__				String hostHeader = headers.getFirst("X-Forwarded-Host")__				if (StringUtils.hasText(hostHeader)) {_					adaptForwardedHost(StringUtils.tokenizeToStringArray(hostHeader, ",")[0])__				}__				String portHeader = headers.getFirst("X-Forwarded-Port")__				if (StringUtils.hasText(portHeader)) {_					port(Integer.parseInt(StringUtils.tokenizeToStringArray(portHeader, ",")[0]))__				}_			}_		}_		catch (NumberFormatException ex) {_			throw new IllegalArgumentException("Failed to parse a port from \"forwarded\"-type headers. " +_					"If not behind a trusted proxy, consider using ForwardedHeaderFilter " +_					"with the removeOnly=true. Request headers: " + headers)__		}__		if (this.scheme != null && ((this.scheme.equals("http") && "80".equals(this.port)) ||_				(this.scheme.equals("https") && "443".equals(this.port)))) {_			port(null)__		}__		return this__	};adapt,this,builder,s,scheme,host,port,from,the,given,headers,specifically,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,p,strong,note,strong,this,method,uses,values,from,forwarded,headers,if,present,in,order,to,reflect,the,client,originated,protocol,and,address,consider,using,the,code,forwarded,header,filter,in,order,to,choose,from,a,central,place,whether,to,extract,and,use,or,to,discard,such,headers,see,the,spring,framework,reference,for,more,on,this,filter,param,headers,the,http,headers,to,consider,return,this,uri,components,builder,since,4,2,7;uri,components,builder,adapt,from,forwarded,headers,http,headers,headers,try,string,forwarded,header,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,tokenize,to,string,array,forwarded,header,0,matcher,matcher,matcher,forwarded,to,use,if,matcher,find,scheme,matcher,group,1,trim,port,null,else,if,is,forwarded,ssl,on,headers,scheme,https,port,null,matcher,matcher,forwarded,to,use,if,matcher,find,adapt,forwarded,host,matcher,group,1,trim,else,string,protocol,header,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,string,utils,tokenize,to,string,array,protocol,header,0,port,null,else,if,is,forwarded,ssl,on,headers,scheme,https,port,null,string,host,header,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,adapt,forwarded,host,string,utils,tokenize,to,string,array,host,header,0,string,port,header,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,string,utils,tokenize,to,string,array,port,header,0,catch,number,format,exception,ex,throw,new,illegal,argument,exception,failed,to,parse,a,port,from,forwarded,type,headers,if,not,behind,a,trusted,proxy,consider,using,forwarded,header,filter,with,the,remove,only,true,request,headers,headers,if,this,scheme,null,this,scheme,equals,http,80,equals,this,port,this,scheme,equals,https,443,equals,this,port,port,null,return,this
UriComponentsBuilder -> UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers);1531746971;Adapt this builder's scheme+host+port from the given headers, specifically_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._<p><strong>Note:</strong> this method uses values from forwarded headers,_if present, in order to reflect the client-originated protocol and address._Consider using the {@code ForwardedHeaderFilter} in order to choose from a_central place whether to extract and use, or to discard such headers._See the Spring Framework reference for more on this filter._@param headers the HTTP headers to consider_@return this UriComponentsBuilder_@since 4.2.7;UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {_		try {_			String forwardedHeader = headers.getFirst("Forwarded")__			if (StringUtils.hasText(forwardedHeader)) {_				String forwardedToUse = StringUtils.tokenizeToStringArray(forwardedHeader, ",")[0]__				Matcher matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__				if (matcher.find()) {_					scheme(matcher.group(1).trim())__					port(null)__				}_				else if (isForwardedSslOn(headers)) {_					scheme("https")__					port(null)__				}_				matcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__				if (matcher.find()) {_					adaptForwardedHost(matcher.group(1).trim())__				}_			}_			else {_				String protocolHeader = headers.getFirst("X-Forwarded-Proto")__				if (StringUtils.hasText(protocolHeader)) {_					scheme(StringUtils.tokenizeToStringArray(protocolHeader, ",")[0])__					port(null)__				}_				else if (isForwardedSslOn(headers)) {_					scheme("https")__					port(null)__				}__				String hostHeader = headers.getFirst("X-Forwarded-Host")__				if (StringUtils.hasText(hostHeader)) {_					adaptForwardedHost(StringUtils.tokenizeToStringArray(hostHeader, ",")[0])__				}__				String portHeader = headers.getFirst("X-Forwarded-Port")__				if (StringUtils.hasText(portHeader)) {_					port(Integer.parseInt(StringUtils.tokenizeToStringArray(portHeader, ",")[0]))__				}_			}_		}_		catch (NumberFormatException ex) {_			throw new IllegalArgumentException("Failed to parse a port from \"forwarded\"-type headers. " +_					"If not behind a trusted proxy, consider using ForwardedHeaderFilter " +_					"with the removeOnly=true. Request headers: " + headers)__		}__		if (this.scheme != null && ((this.scheme.equals("http") && "80".equals(this.port)) ||_				(this.scheme.equals("https") && "443".equals(this.port)))) {_			port(null)__		}__		return this__	};adapt,this,builder,s,scheme,host,port,from,the,given,headers,specifically,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,p,strong,note,strong,this,method,uses,values,from,forwarded,headers,if,present,in,order,to,reflect,the,client,originated,protocol,and,address,consider,using,the,code,forwarded,header,filter,in,order,to,choose,from,a,central,place,whether,to,extract,and,use,or,to,discard,such,headers,see,the,spring,framework,reference,for,more,on,this,filter,param,headers,the,http,headers,to,consider,return,this,uri,components,builder,since,4,2,7;uri,components,builder,adapt,from,forwarded,headers,http,headers,headers,try,string,forwarded,header,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,tokenize,to,string,array,forwarded,header,0,matcher,matcher,matcher,forwarded,to,use,if,matcher,find,scheme,matcher,group,1,trim,port,null,else,if,is,forwarded,ssl,on,headers,scheme,https,port,null,matcher,matcher,forwarded,to,use,if,matcher,find,adapt,forwarded,host,matcher,group,1,trim,else,string,protocol,header,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,string,utils,tokenize,to,string,array,protocol,header,0,port,null,else,if,is,forwarded,ssl,on,headers,scheme,https,port,null,string,host,header,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,adapt,forwarded,host,string,utils,tokenize,to,string,array,host,header,0,string,port,header,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,string,utils,tokenize,to,string,array,port,header,0,catch,number,format,exception,ex,throw,new,illegal,argument,exception,failed,to,parse,a,port,from,forwarded,type,headers,if,not,behind,a,trusted,proxy,consider,using,forwarded,header,filter,with,the,remove,only,true,request,headers,headers,if,this,scheme,null,this,scheme,equals,http,80,equals,this,port,this,scheme,equals,https,443,equals,this,port,port,null,return,this
UriComponentsBuilder -> UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers);1531843156;Adapt this builder's scheme+host+port from the given headers, specifically_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._<p><strong>Note:</strong> this method uses values from forwarded headers,_if present, in order to reflect the client-originated protocol and address._Consider using the {@code ForwardedHeaderFilter} in order to choose from a_central place whether to extract and use, or to discard such headers._See the Spring Framework reference for more on this filter._@param headers the HTTP headers to consider_@return this UriComponentsBuilder_@since 4.2.7;UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {_		try {_			String forwardedHeader = headers.getFirst("Forwarded")__			if (StringUtils.hasText(forwardedHeader)) {_				String forwardedToUse = StringUtils.tokenizeToStringArray(forwardedHeader, ",")[0]__				Matcher matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__				if (matcher.find()) {_					scheme(matcher.group(1).trim())__					port(null)__				}_				else if (isForwardedSslOn(headers)) {_					scheme("https")__					port(null)__				}_				matcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__				if (matcher.find()) {_					adaptForwardedHost(matcher.group(1).trim())__				}_			}_			else {_				String protocolHeader = headers.getFirst("X-Forwarded-Proto")__				if (StringUtils.hasText(protocolHeader)) {_					scheme(StringUtils.tokenizeToStringArray(protocolHeader, ",")[0])__					port(null)__				}_				else if (isForwardedSslOn(headers)) {_					scheme("https")__					port(null)__				}__				String hostHeader = headers.getFirst("X-Forwarded-Host")__				if (StringUtils.hasText(hostHeader)) {_					adaptForwardedHost(StringUtils.tokenizeToStringArray(hostHeader, ",")[0])__				}__				String portHeader = headers.getFirst("X-Forwarded-Port")__				if (StringUtils.hasText(portHeader)) {_					port(Integer.parseInt(StringUtils.tokenizeToStringArray(portHeader, ",")[0]))__				}_			}_		}_		catch (NumberFormatException ex) {_			throw new IllegalArgumentException("Failed to parse a port from \"forwarded\"-type headers. " +_					"If not behind a trusted proxy, consider using ForwardedHeaderFilter " +_					"with the removeOnly=true. Request headers: " + headers)__		}__		if (this.scheme != null && ((this.scheme.equals("http") && "80".equals(this.port)) ||_				(this.scheme.equals("https") && "443".equals(this.port)))) {_			port(null)__		}__		return this__	};adapt,this,builder,s,scheme,host,port,from,the,given,headers,specifically,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,p,strong,note,strong,this,method,uses,values,from,forwarded,headers,if,present,in,order,to,reflect,the,client,originated,protocol,and,address,consider,using,the,code,forwarded,header,filter,in,order,to,choose,from,a,central,place,whether,to,extract,and,use,or,to,discard,such,headers,see,the,spring,framework,reference,for,more,on,this,filter,param,headers,the,http,headers,to,consider,return,this,uri,components,builder,since,4,2,7;uri,components,builder,adapt,from,forwarded,headers,http,headers,headers,try,string,forwarded,header,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,tokenize,to,string,array,forwarded,header,0,matcher,matcher,matcher,forwarded,to,use,if,matcher,find,scheme,matcher,group,1,trim,port,null,else,if,is,forwarded,ssl,on,headers,scheme,https,port,null,matcher,matcher,forwarded,to,use,if,matcher,find,adapt,forwarded,host,matcher,group,1,trim,else,string,protocol,header,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,string,utils,tokenize,to,string,array,protocol,header,0,port,null,else,if,is,forwarded,ssl,on,headers,scheme,https,port,null,string,host,header,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,adapt,forwarded,host,string,utils,tokenize,to,string,array,host,header,0,string,port,header,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,string,utils,tokenize,to,string,array,port,header,0,catch,number,format,exception,ex,throw,new,illegal,argument,exception,failed,to,parse,a,port,from,forwarded,type,headers,if,not,behind,a,trusted,proxy,consider,using,forwarded,header,filter,with,the,remove,only,true,request,headers,headers,if,this,scheme,null,this,scheme,equals,http,80,equals,this,port,this,scheme,equals,https,443,equals,this,port,port,null,return,this
UriComponentsBuilder -> UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers);1531863556;Adapt this builder's scheme+host+port from the given headers, specifically_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._<p><strong>Note:</strong> this method uses values from forwarded headers,_if present, in order to reflect the client-originated protocol and address._Consider using the {@code ForwardedHeaderFilter} in order to choose from a_central place whether to extract and use, or to discard such headers._See the Spring Framework reference for more on this filter._@param headers the HTTP headers to consider_@return this UriComponentsBuilder_@since 4.2.7;UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {_		try {_			String forwardedHeader = headers.getFirst("Forwarded")__			if (StringUtils.hasText(forwardedHeader)) {_				String forwardedToUse = StringUtils.tokenizeToStringArray(forwardedHeader, ",")[0]__				Matcher matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__				if (matcher.find()) {_					scheme(matcher.group(1).trim())__					port(null)__				}_				else if (isForwardedSslOn(headers)) {_					scheme("https")__					port(null)__				}_				matcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__				if (matcher.find()) {_					adaptForwardedHost(matcher.group(1).trim())__				}_			}_			else {_				String protocolHeader = headers.getFirst("X-Forwarded-Proto")__				if (StringUtils.hasText(protocolHeader)) {_					scheme(StringUtils.tokenizeToStringArray(protocolHeader, ",")[0])__					port(null)__				}_				else if (isForwardedSslOn(headers)) {_					scheme("https")__					port(null)__				}__				String hostHeader = headers.getFirst("X-Forwarded-Host")__				if (StringUtils.hasText(hostHeader)) {_					adaptForwardedHost(StringUtils.tokenizeToStringArray(hostHeader, ",")[0])__				}__				String portHeader = headers.getFirst("X-Forwarded-Port")__				if (StringUtils.hasText(portHeader)) {_					port(Integer.parseInt(StringUtils.tokenizeToStringArray(portHeader, ",")[0]))__				}_			}_		}_		catch (NumberFormatException ex) {_			throw new IllegalArgumentException("Failed to parse a port from \"forwarded\"-type headers. " +_					"If not behind a trusted proxy, consider using ForwardedHeaderFilter " +_					"with the removeOnly=true. Request headers: " + headers)__		}__		if (this.scheme != null && ((this.scheme.equals("http") && "80".equals(this.port)) ||_				(this.scheme.equals("https") && "443".equals(this.port)))) {_			port(null)__		}__		return this__	};adapt,this,builder,s,scheme,host,port,from,the,given,headers,specifically,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,p,strong,note,strong,this,method,uses,values,from,forwarded,headers,if,present,in,order,to,reflect,the,client,originated,protocol,and,address,consider,using,the,code,forwarded,header,filter,in,order,to,choose,from,a,central,place,whether,to,extract,and,use,or,to,discard,such,headers,see,the,spring,framework,reference,for,more,on,this,filter,param,headers,the,http,headers,to,consider,return,this,uri,components,builder,since,4,2,7;uri,components,builder,adapt,from,forwarded,headers,http,headers,headers,try,string,forwarded,header,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,tokenize,to,string,array,forwarded,header,0,matcher,matcher,matcher,forwarded,to,use,if,matcher,find,scheme,matcher,group,1,trim,port,null,else,if,is,forwarded,ssl,on,headers,scheme,https,port,null,matcher,matcher,forwarded,to,use,if,matcher,find,adapt,forwarded,host,matcher,group,1,trim,else,string,protocol,header,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,string,utils,tokenize,to,string,array,protocol,header,0,port,null,else,if,is,forwarded,ssl,on,headers,scheme,https,port,null,string,host,header,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,adapt,forwarded,host,string,utils,tokenize,to,string,array,host,header,0,string,port,header,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,string,utils,tokenize,to,string,array,port,header,0,catch,number,format,exception,ex,throw,new,illegal,argument,exception,failed,to,parse,a,port,from,forwarded,type,headers,if,not,behind,a,trusted,proxy,consider,using,forwarded,header,filter,with,the,remove,only,true,request,headers,headers,if,this,scheme,null,this,scheme,equals,http,80,equals,this,port,this,scheme,equals,https,443,equals,this,port,port,null,return,this
UriComponentsBuilder -> UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers);1532041662;Adapt this builder's scheme+host+port from the given headers, specifically_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._<p><strong>Note:</strong> this method uses values from forwarded headers,_if present, in order to reflect the client-originated protocol and address._Consider using the {@code ForwardedHeaderFilter} in order to choose from a_central place whether to extract and use, or to discard such headers._See the Spring Framework reference for more on this filter._@param headers the HTTP headers to consider_@return this UriComponentsBuilder_@since 4.2.7;UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {_		try {_			String forwardedHeader = headers.getFirst("Forwarded")__			if (StringUtils.hasText(forwardedHeader)) {_				String forwardedToUse = StringUtils.tokenizeToStringArray(forwardedHeader, ",")[0]__				Matcher matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__				if (matcher.find()) {_					scheme(matcher.group(1).trim())__					port(null)__				}_				else if (isForwardedSslOn(headers)) {_					scheme("https")__					port(null)__				}_				matcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__				if (matcher.find()) {_					adaptForwardedHost(matcher.group(1).trim())__				}_			}_			else {_				String protocolHeader = headers.getFirst("X-Forwarded-Proto")__				if (StringUtils.hasText(protocolHeader)) {_					scheme(StringUtils.tokenizeToStringArray(protocolHeader, ",")[0])__					port(null)__				}_				else if (isForwardedSslOn(headers)) {_					scheme("https")__					port(null)__				}__				String hostHeader = headers.getFirst("X-Forwarded-Host")__				if (StringUtils.hasText(hostHeader)) {_					adaptForwardedHost(StringUtils.tokenizeToStringArray(hostHeader, ",")[0])__				}__				String portHeader = headers.getFirst("X-Forwarded-Port")__				if (StringUtils.hasText(portHeader)) {_					port(Integer.parseInt(StringUtils.tokenizeToStringArray(portHeader, ",")[0]))__				}_			}_		}_		catch (NumberFormatException ex) {_			throw new IllegalArgumentException("Failed to parse a port from \"forwarded\"-type headers. " +_					"If not behind a trusted proxy, consider using ForwardedHeaderFilter " +_					"with the removeOnly=true. Request headers: " + headers)__		}__		if (this.scheme != null && ((this.scheme.equals("http") && "80".equals(this.port)) ||_				(this.scheme.equals("https") && "443".equals(this.port)))) {_			port(null)__		}__		return this__	};adapt,this,builder,s,scheme,host,port,from,the,given,headers,specifically,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,p,strong,note,strong,this,method,uses,values,from,forwarded,headers,if,present,in,order,to,reflect,the,client,originated,protocol,and,address,consider,using,the,code,forwarded,header,filter,in,order,to,choose,from,a,central,place,whether,to,extract,and,use,or,to,discard,such,headers,see,the,spring,framework,reference,for,more,on,this,filter,param,headers,the,http,headers,to,consider,return,this,uri,components,builder,since,4,2,7;uri,components,builder,adapt,from,forwarded,headers,http,headers,headers,try,string,forwarded,header,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,tokenize,to,string,array,forwarded,header,0,matcher,matcher,matcher,forwarded,to,use,if,matcher,find,scheme,matcher,group,1,trim,port,null,else,if,is,forwarded,ssl,on,headers,scheme,https,port,null,matcher,matcher,forwarded,to,use,if,matcher,find,adapt,forwarded,host,matcher,group,1,trim,else,string,protocol,header,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,string,utils,tokenize,to,string,array,protocol,header,0,port,null,else,if,is,forwarded,ssl,on,headers,scheme,https,port,null,string,host,header,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,adapt,forwarded,host,string,utils,tokenize,to,string,array,host,header,0,string,port,header,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,string,utils,tokenize,to,string,array,port,header,0,catch,number,format,exception,ex,throw,new,illegal,argument,exception,failed,to,parse,a,port,from,forwarded,type,headers,if,not,behind,a,trusted,proxy,consider,using,forwarded,header,filter,with,the,remove,only,true,request,headers,headers,if,this,scheme,null,this,scheme,equals,http,80,equals,this,port,this,scheme,equals,https,443,equals,this,port,port,null,return,this
UriComponentsBuilder -> UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers);1532041662;Adapt this builder's scheme+host+port from the given headers, specifically_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._<p><strong>Note:</strong> this method uses values from forwarded headers,_if present, in order to reflect the client-originated protocol and address._Consider using the {@code ForwardedHeaderFilter} in order to choose from a_central place whether to extract and use, or to discard such headers._See the Spring Framework reference for more on this filter._@param headers the HTTP headers to consider_@return this UriComponentsBuilder_@since 4.2.7;UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {_		try {_			String forwardedHeader = headers.getFirst("Forwarded")__			if (StringUtils.hasText(forwardedHeader)) {_				String forwardedToUse = StringUtils.tokenizeToStringArray(forwardedHeader, ",")[0]__				Matcher matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__				if (matcher.find()) {_					scheme(matcher.group(1).trim())__					port(null)__				}_				else if (isForwardedSslOn(headers)) {_					scheme("https")__					port(null)__				}_				matcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__				if (matcher.find()) {_					adaptForwardedHost(matcher.group(1).trim())__				}_			}_			else {_				String protocolHeader = headers.getFirst("X-Forwarded-Proto")__				if (StringUtils.hasText(protocolHeader)) {_					scheme(StringUtils.tokenizeToStringArray(protocolHeader, ",")[0])__					port(null)__				}_				else if (isForwardedSslOn(headers)) {_					scheme("https")__					port(null)__				}__				String hostHeader = headers.getFirst("X-Forwarded-Host")__				if (StringUtils.hasText(hostHeader)) {_					adaptForwardedHost(StringUtils.tokenizeToStringArray(hostHeader, ",")[0])__				}__				String portHeader = headers.getFirst("X-Forwarded-Port")__				if (StringUtils.hasText(portHeader)) {_					port(Integer.parseInt(StringUtils.tokenizeToStringArray(portHeader, ",")[0]))__				}_			}_		}_		catch (NumberFormatException ex) {_			throw new IllegalArgumentException("Failed to parse a port from \"forwarded\"-type headers. " +_					"If not behind a trusted proxy, consider using ForwardedHeaderFilter " +_					"with the removeOnly=true. Request headers: " + headers)__		}__		if (this.scheme != null && ((this.scheme.equals("http") && "80".equals(this.port)) ||_				(this.scheme.equals("https") && "443".equals(this.port)))) {_			port(null)__		}__		return this__	};adapt,this,builder,s,scheme,host,port,from,the,given,headers,specifically,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,p,strong,note,strong,this,method,uses,values,from,forwarded,headers,if,present,in,order,to,reflect,the,client,originated,protocol,and,address,consider,using,the,code,forwarded,header,filter,in,order,to,choose,from,a,central,place,whether,to,extract,and,use,or,to,discard,such,headers,see,the,spring,framework,reference,for,more,on,this,filter,param,headers,the,http,headers,to,consider,return,this,uri,components,builder,since,4,2,7;uri,components,builder,adapt,from,forwarded,headers,http,headers,headers,try,string,forwarded,header,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,tokenize,to,string,array,forwarded,header,0,matcher,matcher,matcher,forwarded,to,use,if,matcher,find,scheme,matcher,group,1,trim,port,null,else,if,is,forwarded,ssl,on,headers,scheme,https,port,null,matcher,matcher,forwarded,to,use,if,matcher,find,adapt,forwarded,host,matcher,group,1,trim,else,string,protocol,header,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,string,utils,tokenize,to,string,array,protocol,header,0,port,null,else,if,is,forwarded,ssl,on,headers,scheme,https,port,null,string,host,header,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,adapt,forwarded,host,string,utils,tokenize,to,string,array,host,header,0,string,port,header,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,string,utils,tokenize,to,string,array,port,header,0,catch,number,format,exception,ex,throw,new,illegal,argument,exception,failed,to,parse,a,port,from,forwarded,type,headers,if,not,behind,a,trusted,proxy,consider,using,forwarded,header,filter,with,the,remove,only,true,request,headers,headers,if,this,scheme,null,this,scheme,equals,http,80,equals,this,port,this,scheme,equals,https,443,equals,this,port,port,null,return,this
UriComponentsBuilder -> UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers);1536571897;Adapt this builder's scheme+host+port from the given headers, specifically_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._<p><strong>Note:</strong> this method uses values from forwarded headers,_if present, in order to reflect the client-originated protocol and address._Consider using the {@code ForwardedHeaderFilter} in order to choose from a_central place whether to extract and use, or to discard such headers._See the Spring Framework reference for more on this filter._@param headers the HTTP headers to consider_@return this UriComponentsBuilder_@since 4.2.7;UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {_		try {_			String forwardedHeader = headers.getFirst("Forwarded")__			if (StringUtils.hasText(forwardedHeader)) {_				String forwardedToUse = StringUtils.tokenizeToStringArray(forwardedHeader, ",")[0]__				Matcher matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__				if (matcher.find()) {_					scheme(matcher.group(1).trim())__					port(null)__				}_				else if (isForwardedSslOn(headers)) {_					scheme("https")__					port(null)__				}_				matcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__				if (matcher.find()) {_					adaptForwardedHost(matcher.group(1).trim())__				}_			}_			else {_				String protocolHeader = headers.getFirst("X-Forwarded-Proto")__				if (StringUtils.hasText(protocolHeader)) {_					scheme(StringUtils.tokenizeToStringArray(protocolHeader, ",")[0])__					port(null)__				}_				else if (isForwardedSslOn(headers)) {_					scheme("https")__					port(null)__				}__				String hostHeader = headers.getFirst("X-Forwarded-Host")__				if (StringUtils.hasText(hostHeader)) {_					adaptForwardedHost(StringUtils.tokenizeToStringArray(hostHeader, ",")[0])__				}__				String portHeader = headers.getFirst("X-Forwarded-Port")__				if (StringUtils.hasText(portHeader)) {_					port(Integer.parseInt(StringUtils.tokenizeToStringArray(portHeader, ",")[0]))__				}_			}_		}_		catch (NumberFormatException ex) {_			throw new IllegalArgumentException("Failed to parse a port from \"forwarded\"-type headers. " +_					"If not behind a trusted proxy, consider using ForwardedHeaderFilter " +_					"with the removeOnly=true. Request headers: " + headers)__		}__		if (this.scheme != null && ((this.scheme.equals("http") && "80".equals(this.port)) ||_				(this.scheme.equals("https") && "443".equals(this.port)))) {_			port(null)__		}__		return this__	};adapt,this,builder,s,scheme,host,port,from,the,given,headers,specifically,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,p,strong,note,strong,this,method,uses,values,from,forwarded,headers,if,present,in,order,to,reflect,the,client,originated,protocol,and,address,consider,using,the,code,forwarded,header,filter,in,order,to,choose,from,a,central,place,whether,to,extract,and,use,or,to,discard,such,headers,see,the,spring,framework,reference,for,more,on,this,filter,param,headers,the,http,headers,to,consider,return,this,uri,components,builder,since,4,2,7;uri,components,builder,adapt,from,forwarded,headers,http,headers,headers,try,string,forwarded,header,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,tokenize,to,string,array,forwarded,header,0,matcher,matcher,matcher,forwarded,to,use,if,matcher,find,scheme,matcher,group,1,trim,port,null,else,if,is,forwarded,ssl,on,headers,scheme,https,port,null,matcher,matcher,forwarded,to,use,if,matcher,find,adapt,forwarded,host,matcher,group,1,trim,else,string,protocol,header,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,string,utils,tokenize,to,string,array,protocol,header,0,port,null,else,if,is,forwarded,ssl,on,headers,scheme,https,port,null,string,host,header,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,adapt,forwarded,host,string,utils,tokenize,to,string,array,host,header,0,string,port,header,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,string,utils,tokenize,to,string,array,port,header,0,catch,number,format,exception,ex,throw,new,illegal,argument,exception,failed,to,parse,a,port,from,forwarded,type,headers,if,not,behind,a,trusted,proxy,consider,using,forwarded,header,filter,with,the,remove,only,true,request,headers,headers,if,this,scheme,null,this,scheme,equals,http,80,equals,this,port,this,scheme,equals,https,443,equals,this,port,port,null,return,this
UriComponentsBuilder -> UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers);1546464968;Adapt this builder's scheme+host+port from the given headers, specifically_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._<p><strong>Note:</strong> this method uses values from forwarded headers,_if present, in order to reflect the client-originated protocol and address._Consider using the {@code ForwardedHeaderFilter} in order to choose from a_central place whether to extract and use, or to discard such headers._See the Spring Framework reference for more on this filter._@param headers the HTTP headers to consider_@return this UriComponentsBuilder_@since 4.2.7;UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {_		try {_			String forwardedHeader = headers.getFirst("Forwarded")__			if (StringUtils.hasText(forwardedHeader)) {_				String forwardedToUse = StringUtils.tokenizeToStringArray(forwardedHeader, ",")[0]__				Matcher matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__				if (matcher.find()) {_					scheme(matcher.group(1).trim())__					port(null)__				}_				else if (isForwardedSslOn(headers)) {_					scheme("https")__					port(null)__				}_				matcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__				if (matcher.find()) {_					adaptForwardedHost(matcher.group(1).trim())__				}_			}_			else {_				String protocolHeader = headers.getFirst("X-Forwarded-Proto")__				if (StringUtils.hasText(protocolHeader)) {_					scheme(StringUtils.tokenizeToStringArray(protocolHeader, ",")[0])__					port(null)__				}_				else if (isForwardedSslOn(headers)) {_					scheme("https")__					port(null)__				}__				String hostHeader = headers.getFirst("X-Forwarded-Host")__				if (StringUtils.hasText(hostHeader)) {_					adaptForwardedHost(StringUtils.tokenizeToStringArray(hostHeader, ",")[0])__				}__				String portHeader = headers.getFirst("X-Forwarded-Port")__				if (StringUtils.hasText(portHeader)) {_					port(Integer.parseInt(StringUtils.tokenizeToStringArray(portHeader, ",")[0]))__				}_			}_		}_		catch (NumberFormatException ex) {_			throw new IllegalArgumentException("Failed to parse a port from \"forwarded\"-type headers. " +_					"If not behind a trusted proxy, consider using ForwardedHeaderFilter " +_					"with the removeOnly=true. Request headers: " + headers)__		}__		if (this.scheme != null && ((this.scheme.equals("http") && "80".equals(this.port)) ||_				(this.scheme.equals("https") && "443".equals(this.port)))) {_			port(null)__		}__		return this__	};adapt,this,builder,s,scheme,host,port,from,the,given,headers,specifically,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,p,strong,note,strong,this,method,uses,values,from,forwarded,headers,if,present,in,order,to,reflect,the,client,originated,protocol,and,address,consider,using,the,code,forwarded,header,filter,in,order,to,choose,from,a,central,place,whether,to,extract,and,use,or,to,discard,such,headers,see,the,spring,framework,reference,for,more,on,this,filter,param,headers,the,http,headers,to,consider,return,this,uri,components,builder,since,4,2,7;uri,components,builder,adapt,from,forwarded,headers,http,headers,headers,try,string,forwarded,header,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,tokenize,to,string,array,forwarded,header,0,matcher,matcher,matcher,forwarded,to,use,if,matcher,find,scheme,matcher,group,1,trim,port,null,else,if,is,forwarded,ssl,on,headers,scheme,https,port,null,matcher,matcher,forwarded,to,use,if,matcher,find,adapt,forwarded,host,matcher,group,1,trim,else,string,protocol,header,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,string,utils,tokenize,to,string,array,protocol,header,0,port,null,else,if,is,forwarded,ssl,on,headers,scheme,https,port,null,string,host,header,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,adapt,forwarded,host,string,utils,tokenize,to,string,array,host,header,0,string,port,header,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,string,utils,tokenize,to,string,array,port,header,0,catch,number,format,exception,ex,throw,new,illegal,argument,exception,failed,to,parse,a,port,from,forwarded,type,headers,if,not,behind,a,trusted,proxy,consider,using,forwarded,header,filter,with,the,remove,only,true,request,headers,headers,if,this,scheme,null,this,scheme,equals,http,80,equals,this,port,this,scheme,equals,https,443,equals,this,port,port,null,return,this
UriComponentsBuilder -> UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers);1546963593;Adapt this builder's scheme+host+port from the given headers, specifically_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._<p><strong>Note:</strong> this method uses values from forwarded headers,_if present, in order to reflect the client-originated protocol and address._Consider using the {@code ForwardedHeaderFilter} in order to choose from a_central place whether to extract and use, or to discard such headers._See the Spring Framework reference for more on this filter._@param headers the HTTP headers to consider_@return this UriComponentsBuilder_@since 4.2.7;UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {_		try {_			String forwardedHeader = headers.getFirst("Forwarded")__			if (StringUtils.hasText(forwardedHeader)) {_				String forwardedToUse = StringUtils.tokenizeToStringArray(forwardedHeader, ",")[0]__				Matcher matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__				if (matcher.find()) {_					scheme(matcher.group(1).trim())__					port(null)__				}_				else if (isForwardedSslOn(headers)) {_					scheme("https")__					port(null)__				}_				matcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__				if (matcher.find()) {_					adaptForwardedHost(matcher.group(1).trim())__				}_			}_			else {_				String protocolHeader = headers.getFirst("X-Forwarded-Proto")__				if (StringUtils.hasText(protocolHeader)) {_					scheme(StringUtils.tokenizeToStringArray(protocolHeader, ",")[0])__					port(null)__				}_				else if (isForwardedSslOn(headers)) {_					scheme("https")__					port(null)__				}__				String hostHeader = headers.getFirst("X-Forwarded-Host")__				if (StringUtils.hasText(hostHeader)) {_					adaptForwardedHost(StringUtils.tokenizeToStringArray(hostHeader, ",")[0])__				}__				String portHeader = headers.getFirst("X-Forwarded-Port")__				if (StringUtils.hasText(portHeader)) {_					port(Integer.parseInt(StringUtils.tokenizeToStringArray(portHeader, ",")[0]))__				}_			}_		}_		catch (NumberFormatException ex) {_			throw new IllegalArgumentException("Failed to parse a port from \"forwarded\"-type headers. " +_					"If not behind a trusted proxy, consider using ForwardedHeaderFilter " +_					"with the removeOnly=true. Request headers: " + headers)__		}__		if (this.scheme != null && ((this.scheme.equals("http") && "80".equals(this.port)) ||_				(this.scheme.equals("https") && "443".equals(this.port)))) {_			port(null)__		}__		return this__	};adapt,this,builder,s,scheme,host,port,from,the,given,headers,specifically,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,p,strong,note,strong,this,method,uses,values,from,forwarded,headers,if,present,in,order,to,reflect,the,client,originated,protocol,and,address,consider,using,the,code,forwarded,header,filter,in,order,to,choose,from,a,central,place,whether,to,extract,and,use,or,to,discard,such,headers,see,the,spring,framework,reference,for,more,on,this,filter,param,headers,the,http,headers,to,consider,return,this,uri,components,builder,since,4,2,7;uri,components,builder,adapt,from,forwarded,headers,http,headers,headers,try,string,forwarded,header,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,tokenize,to,string,array,forwarded,header,0,matcher,matcher,matcher,forwarded,to,use,if,matcher,find,scheme,matcher,group,1,trim,port,null,else,if,is,forwarded,ssl,on,headers,scheme,https,port,null,matcher,matcher,forwarded,to,use,if,matcher,find,adapt,forwarded,host,matcher,group,1,trim,else,string,protocol,header,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,string,utils,tokenize,to,string,array,protocol,header,0,port,null,else,if,is,forwarded,ssl,on,headers,scheme,https,port,null,string,host,header,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,adapt,forwarded,host,string,utils,tokenize,to,string,array,host,header,0,string,port,header,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,string,utils,tokenize,to,string,array,port,header,0,catch,number,format,exception,ex,throw,new,illegal,argument,exception,failed,to,parse,a,port,from,forwarded,type,headers,if,not,behind,a,trusted,proxy,consider,using,forwarded,header,filter,with,the,remove,only,true,request,headers,headers,if,this,scheme,null,this,scheme,equals,http,80,equals,this,port,this,scheme,equals,https,443,equals,this,port,port,null,return,this
UriComponentsBuilder -> UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers);1547005422;Adapt this builder's scheme+host+port from the given headers, specifically_"Forwarded" (<a href="http://tools.ietf.org/html/rfc7239">RFC 7239</a>,_or "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto" if_"Forwarded" is not found._<p><strong>Note:</strong> this method uses values from forwarded headers,_if present, in order to reflect the client-originated protocol and address._Consider using the {@code ForwardedHeaderFilter} in order to choose from a_central place whether to extract and use, or to discard such headers._See the Spring Framework reference for more on this filter._@param headers the HTTP headers to consider_@return this UriComponentsBuilder_@since 4.2.7;UriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {_		try {_			String forwardedHeader = headers.getFirst("Forwarded")__			if (StringUtils.hasText(forwardedHeader)) {_				String forwardedToUse = StringUtils.tokenizeToStringArray(forwardedHeader, ",")[0]__				Matcher matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse)__				if (matcher.find()) {_					scheme(matcher.group(1).trim())__					port(null)__				}_				else if (isForwardedSslOn(headers)) {_					scheme("https")__					port(null)__				}_				matcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse)__				if (matcher.find()) {_					adaptForwardedHost(matcher.group(1).trim())__				}_			}_			else {_				String protocolHeader = headers.getFirst("X-Forwarded-Proto")__				if (StringUtils.hasText(protocolHeader)) {_					scheme(StringUtils.tokenizeToStringArray(protocolHeader, ",")[0])__					port(null)__				}_				else if (isForwardedSslOn(headers)) {_					scheme("https")__					port(null)__				}__				String hostHeader = headers.getFirst("X-Forwarded-Host")__				if (StringUtils.hasText(hostHeader)) {_					adaptForwardedHost(StringUtils.tokenizeToStringArray(hostHeader, ",")[0])__				}__				String portHeader = headers.getFirst("X-Forwarded-Port")__				if (StringUtils.hasText(portHeader)) {_					port(Integer.parseInt(StringUtils.tokenizeToStringArray(portHeader, ",")[0]))__				}_			}_		}_		catch (NumberFormatException ex) {_			throw new IllegalArgumentException("Failed to parse a port from \"forwarded\"-type headers. " +_					"If not behind a trusted proxy, consider using ForwardedHeaderFilter " +_					"with the removeOnly=true. Request headers: " + headers)__		}__		if (this.scheme != null && ((this.scheme.equals("http") && "80".equals(this.port)) ||_				(this.scheme.equals("https") && "443".equals(this.port)))) {_			port(null)__		}__		return this__	};adapt,this,builder,s,scheme,host,port,from,the,given,headers,specifically,forwarded,a,href,http,tools,ietf,org,html,rfc7239,rfc,7239,a,or,x,forwarded,host,x,forwarded,port,and,x,forwarded,proto,if,forwarded,is,not,found,p,strong,note,strong,this,method,uses,values,from,forwarded,headers,if,present,in,order,to,reflect,the,client,originated,protocol,and,address,consider,using,the,code,forwarded,header,filter,in,order,to,choose,from,a,central,place,whether,to,extract,and,use,or,to,discard,such,headers,see,the,spring,framework,reference,for,more,on,this,filter,param,headers,the,http,headers,to,consider,return,this,uri,components,builder,since,4,2,7;uri,components,builder,adapt,from,forwarded,headers,http,headers,headers,try,string,forwarded,header,headers,get,first,forwarded,if,string,utils,has,text,forwarded,header,string,forwarded,to,use,string,utils,tokenize,to,string,array,forwarded,header,0,matcher,matcher,matcher,forwarded,to,use,if,matcher,find,scheme,matcher,group,1,trim,port,null,else,if,is,forwarded,ssl,on,headers,scheme,https,port,null,matcher,matcher,forwarded,to,use,if,matcher,find,adapt,forwarded,host,matcher,group,1,trim,else,string,protocol,header,headers,get,first,x,forwarded,proto,if,string,utils,has,text,protocol,header,scheme,string,utils,tokenize,to,string,array,protocol,header,0,port,null,else,if,is,forwarded,ssl,on,headers,scheme,https,port,null,string,host,header,headers,get,first,x,forwarded,host,if,string,utils,has,text,host,header,adapt,forwarded,host,string,utils,tokenize,to,string,array,host,header,0,string,port,header,headers,get,first,x,forwarded,port,if,string,utils,has,text,port,header,port,integer,parse,int,string,utils,tokenize,to,string,array,port,header,0,catch,number,format,exception,ex,throw,new,illegal,argument,exception,failed,to,parse,a,port,from,forwarded,type,headers,if,not,behind,a,trusted,proxy,consider,using,forwarded,header,filter,with,the,remove,only,true,request,headers,headers,if,this,scheme,null,this,scheme,equals,http,80,equals,this,port,this,scheme,equals,https,443,equals,this,port,port,null,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replacePath(@Nullable String path);1495868221;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replacePath(@Nullable String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;override,public,uri,components,builder,replace,path,nullable,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replacePath(@Nullable String path);1496259743;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replacePath(@Nullable String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;override,public,uri,components,builder,replace,path,nullable,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replacePath(@Nullable String path);1496370972;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replacePath(@Nullable String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;override,public,uri,components,builder,replace,path,nullable,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replacePath(@Nullable String path);1496837955;Set the path of this builder overriding all existing path and path segment values._@param path the URI path (a {@code null} value results in an empty path)_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replacePath(@Nullable String path) {_		this.pathBuilder = new CompositePathComponentBuilder()__		if (path != null) {_			this.pathBuilder.addPath(path)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;override,public,uri,components,builder,replace,path,nullable,string,path,this,path,builder,new,composite,path,component,builder,if,path,null,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replacePath(@Nullable String path);1498780456;Set the path of this builder overriding all existing path and path segment values._@param path the URI path (a {@code null} value results in an empty path)_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replacePath(@Nullable String path) {_		this.pathBuilder = new CompositePathComponentBuilder()__		if (path != null) {_			this.pathBuilder.addPath(path)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;override,public,uri,components,builder,replace,path,nullable,string,path,this,path,builder,new,composite,path,component,builder,if,path,null,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replacePath(@Nullable String path);1500460652;Set the path of this builder overriding all existing path and path segment values._@param path the URI path (a {@code null} value results in an empty path)_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replacePath(@Nullable String path) {_		this.pathBuilder = new CompositePathComponentBuilder()__		if (path != null) {_			this.pathBuilder.addPath(path)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;override,public,uri,components,builder,replace,path,nullable,string,path,this,path,builder,new,composite,path,component,builder,if,path,null,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replacePath(@Nullable String path);1513715892;Set the path of this builder overriding all existing path and path segment values._@param path the URI path (a {@code null} value results in an empty path)_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replacePath(@Nullable String path) {_		this.pathBuilder = new CompositePathComponentBuilder()__		if (path != null) {_			this.pathBuilder.addPath(path)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;override,public,uri,components,builder,replace,path,nullable,string,path,this,path,builder,new,composite,path,component,builder,if,path,null,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replacePath(@Nullable String path);1515504834;Set the path of this builder overriding all existing path and path segment values._@param path the URI path (a {@code null} value results in an empty path)_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replacePath(@Nullable String path) {_		this.pathBuilder = new CompositePathComponentBuilder()__		if (path != null) {_			this.pathBuilder.addPath(path)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;override,public,uri,components,builder,replace,path,nullable,string,path,this,path,builder,new,composite,path,component,builder,if,path,null,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replacePath(@Nullable String path);1519588127;Set the path of this builder overriding all existing path and path segment values._@param path the URI path (a {@code null} value results in an empty path)_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replacePath(@Nullable String path) {_		this.pathBuilder = new CompositePathComponentBuilder()__		if (path != null) {_			this.pathBuilder.addPath(path)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;override,public,uri,components,builder,replace,path,nullable,string,path,this,path,builder,new,composite,path,component,builder,if,path,null,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replacePath(@Nullable String path);1522332352;Set the path of this builder overriding all existing path and path segment values._@param path the URI path (a {@code null} value results in an empty path)_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replacePath(@Nullable String path) {_		this.pathBuilder = new CompositePathComponentBuilder()__		if (path != null) {_			this.pathBuilder.addPath(path)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;override,public,uri,components,builder,replace,path,nullable,string,path,this,path,builder,new,composite,path,component,builder,if,path,null,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replacePath(@Nullable String path);1522351714;Set the path of this builder overriding all existing path and path segment values._@param path the URI path (a {@code null} value results in an empty path)_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replacePath(@Nullable String path) {_		this.pathBuilder = new CompositePathComponentBuilder()__		if (path != null) {_			this.pathBuilder.addPath(path)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;override,public,uri,components,builder,replace,path,nullable,string,path,this,path,builder,new,composite,path,component,builder,if,path,null,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replacePath(@Nullable String path);1522361849;Set the path of this builder overriding all existing path and path segment values._@param path the URI path (a {@code null} value results in an empty path)_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replacePath(@Nullable String path) {_		this.pathBuilder = new CompositePathComponentBuilder()__		if (path != null) {_			this.pathBuilder.addPath(path)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;override,public,uri,components,builder,replace,path,nullable,string,path,this,path,builder,new,composite,path,component,builder,if,path,null,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replacePath(@Nullable String path);1527192852;Set the path of this builder overriding all existing path and path segment values._@param path the URI path (a {@code null} value results in an empty path)_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replacePath(@Nullable String path) {_		this.pathBuilder = new CompositePathComponentBuilder()__		if (path != null) {_			this.pathBuilder.addPath(path)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;override,public,uri,components,builder,replace,path,nullable,string,path,this,path,builder,new,composite,path,component,builder,if,path,null,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replacePath(@Nullable String path);1530174524;Set the path of this builder overriding all existing path and path segment values._@param path the URI path (a {@code null} value results in an empty path)_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replacePath(@Nullable String path) {_		this.pathBuilder = new CompositePathComponentBuilder()__		if (path != null) {_			this.pathBuilder.addPath(path)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;override,public,uri,components,builder,replace,path,nullable,string,path,this,path,builder,new,composite,path,component,builder,if,path,null,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replacePath(@Nullable String path);1531746971;Set the path of this builder overriding all existing path and path segment values._@param path the URI path (a {@code null} value results in an empty path)_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replacePath(@Nullable String path) {_		this.pathBuilder = new CompositePathComponentBuilder()__		if (path != null) {_			this.pathBuilder.addPath(path)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;override,public,uri,components,builder,replace,path,nullable,string,path,this,path,builder,new,composite,path,component,builder,if,path,null,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replacePath(@Nullable String path);1531843156;Set the path of this builder overriding all existing path and path segment values._@param path the URI path (a {@code null} value results in an empty path)_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replacePath(@Nullable String path) {_		this.pathBuilder = new CompositePathComponentBuilder()__		if (path != null) {_			this.pathBuilder.addPath(path)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;override,public,uri,components,builder,replace,path,nullable,string,path,this,path,builder,new,composite,path,component,builder,if,path,null,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replacePath(@Nullable String path);1531863556;Set the path of this builder overriding all existing path and path segment values._@param path the URI path (a {@code null} value results in an empty path)_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replacePath(@Nullable String path) {_		this.pathBuilder = new CompositePathComponentBuilder()__		if (path != null) {_			this.pathBuilder.addPath(path)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;override,public,uri,components,builder,replace,path,nullable,string,path,this,path,builder,new,composite,path,component,builder,if,path,null,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replacePath(@Nullable String path);1532041662;Set the path of this builder overriding all existing path and path segment values._@param path the URI path (a {@code null} value results in an empty path)_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replacePath(@Nullable String path) {_		this.pathBuilder = new CompositePathComponentBuilder()__		if (path != null) {_			this.pathBuilder.addPath(path)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;override,public,uri,components,builder,replace,path,nullable,string,path,this,path,builder,new,composite,path,component,builder,if,path,null,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replacePath(@Nullable String path);1532041662;Set the path of this builder overriding all existing path and path segment values._@param path the URI path (a {@code null} value results in an empty path)_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replacePath(@Nullable String path) {_		this.pathBuilder = new CompositePathComponentBuilder()__		if (path != null) {_			this.pathBuilder.addPath(path)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;override,public,uri,components,builder,replace,path,nullable,string,path,this,path,builder,new,composite,path,component,builder,if,path,null,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replacePath(@Nullable String path);1536571897;Set the path of this builder overriding all existing path and path segment values._@param path the URI path (a {@code null} value results in an empty path)_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replacePath(@Nullable String path) {_		this.pathBuilder = new CompositePathComponentBuilder()__		if (path != null) {_			this.pathBuilder.addPath(path)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;override,public,uri,components,builder,replace,path,nullable,string,path,this,path,builder,new,composite,path,component,builder,if,path,null,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replacePath(@Nullable String path);1546464968;Set the path of this builder overriding all existing path and path segment values._@param path the URI path (a {@code null} value results in an empty path)_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replacePath(@Nullable String path) {_		this.pathBuilder = new CompositePathComponentBuilder()__		if (path != null) {_			this.pathBuilder.addPath(path)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;override,public,uri,components,builder,replace,path,nullable,string,path,this,path,builder,new,composite,path,component,builder,if,path,null,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replacePath(@Nullable String path);1546963593;Set the path of this builder overriding all existing path and path segment values._@param path the URI path (a {@code null} value results in an empty path)_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replacePath(@Nullable String path) {_		this.pathBuilder = new CompositePathComponentBuilder()__		if (path != null) {_			this.pathBuilder.addPath(path)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;override,public,uri,components,builder,replace,path,nullable,string,path,this,path,builder,new,composite,path,component,builder,if,path,null,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replacePath(@Nullable String path);1547005422;Set the path of this builder overriding all existing path and path segment values._@param path the URI path (a {@code null} value results in an empty path)_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replacePath(@Nullable String path) {_		this.pathBuilder = new CompositePathComponentBuilder()__		if (path != null) {_			this.pathBuilder.addPath(path)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;override,public,uri,components,builder,replace,path,nullable,string,path,this,path,builder,new,composite,path,component,builder,if,path,null,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1328020251;Appends the given path segments to the existing path of this builder. Each given path segments may contain URI_template variables.__@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder = this.pathBuilder.appendPathSegments(pathSegments)__		return this__	};appends,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segments,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,this,path,builder,append,path,segments,path,segments,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1329142650;Appends the given path segments to the existing path of this builder. Each given path segments may contain URI_template variables.__@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder = this.pathBuilder.appendPathSegments(pathSegments)__		return this__	};appends,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segments,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,this,path,builder,append,path,segments,path,segments,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1335903038;Appends the given path segments to the existing path of this builder. Each given path segments may contain URI_template variables.__@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder = this.pathBuilder.appendPathSegments(pathSegments)__		return this__	};appends,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segments,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,this,path,builder,append,path,segments,path,segments,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1345652603;Appends the given path segments to the existing path of this builder. Each given path segments may contain URI_template variables.__@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder = this.pathBuilder.appendPathSegments(pathSegments)__		return this__	};appends,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segments,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,this,path,builder,append,path,segments,path,segments,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1348582810;Appends the given path segments to the existing path of this builder. Each given path segments may contain URI_template variables.__@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder = this.pathBuilder.appendPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segments,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,this,path,builder,append,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1349904861;Appends the given path segments to the existing path of this builder. Each given path segments may contain URI_template variables.__@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder = this.pathBuilder.appendPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segments,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,this,path,builder,append,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1350918288;Appends the given path segments to the existing path of this builder. Each given path segments may contain URI_template variables.__@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder = this.pathBuilder.appendPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segments,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,this,path,builder,append,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1356735495;Appends the given path segments to the existing path of this builder. Each given path segments may contain URI_template variables.__@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder = this.pathBuilder.appendPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segments,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,this,path,builder,append,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1357119239;Appends the given path segments to the existing path of this builder. Each given path segments may contain URI_template variables.__@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder = this.pathBuilder.appendPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segments,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,this,path,builder,append,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1362408075;Appends the given path segments to the existing path of this builder. Each given_path segments may contain URI template variables.__@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segments,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1363208506;Appends the given path segments to the existing path of this builder. Each given_path segments may contain URI template variables.__@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segments,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1367580131;Appends the given path segments to the existing path of this builder. Each given_path segments may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segments,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1367955086;Appends the given path segments to the existing path of this builder. Each given_path segments may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segments,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1368482696;Appends the given path segments to the existing path of this builder. Each given_path segments may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segments,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1375201821;Appends the given path segments to the existing path of this builder. Each given_path segments may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segments,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1380131933;Appends the given path segments to the existing path of this builder. Each given_path segments may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segments,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1382387167;Appends the given path segments to the existing path of this builder. Each given_path segments may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segments,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1382387168;Appends the given path segments to the existing path of this builder. Each given_path segments may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segments,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1382744567;Appends the given path segments to the existing path of this builder. Each given_path segments may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segments,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1382754578;Appends the given path segments to the existing path of this builder. Each given_path segments may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segments,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1391723719;Appends the given path segments to the existing path of this builder. Each given_path segments may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segments,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1400538909;Appends the given path segments to the existing path of this builder. Each given_path segments may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segments,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1400541968;Append the given path segments to the existing path of this builder._Each given path segment may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segment,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1403775847;Append the given path segments to the existing path of this builder._Each given path segment may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segment,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1404917891;Append the given path segments to the existing path of this builder._Each given path segment may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segment,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1409317151;Append the given path segments to the existing path of this builder._Each given path segment may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segment,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1409318475;Append the given path segments to the existing path of this builder._Each given path segment may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segment,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1409822411;Append the given path segments to the existing path of this builder._Each given path segment may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segment,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1414695064;Append the given path segments to the existing path of this builder._Each given path segment may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segment,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1417799775;Append the given path segments to the existing path of this builder._Each given path segment may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segment,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1423547594;Append the given path segments to the existing path of this builder._Each given path segment may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segment,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1424274316;Append the given path segments to the existing path of this builder._Each given path segment may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segment,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1425610347;Append the given path segments to the existing path of this builder._Each given path segment may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segment,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1426255003;Append the given path segments to the existing path of this builder._Each given path segment may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segment,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1426266172;Append the given path segments to the existing path of this builder._Each given path segment may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segment,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1426267150;Append the given path segments to the existing path of this builder._Each given path segment may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segment,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1426553101;Append the given path segments to the existing path of this builder._Each given path segment may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segment,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1426880143;Append the given path segments to the existing path of this builder._Each given path segment may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segment,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1426880143;Append the given path segments to the existing path of this builder._Each given path segment may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segment,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1427143443;Append the given path segments to the existing path of this builder._Each given path segment may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segment,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1430734105;Append the given path segments to the existing path of this builder._Each given path segment may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segment,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1433951292;Append the given path segments to the existing path of this builder._Each given path segment may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segment,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1437567436;Append the given path segments to the existing path of this builder._Each given path segment may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		Assert.notNull(pathSegments, "'segments' must not be null")__		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segment,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,assert,not,null,path,segments,segments,must,not,be,null,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1438166381;Append the given path segments to the existing path of this builder._Each given path segment may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segment,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1443431031;Append the given path segments to the existing path of this builder._Each given path segment may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segment,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1443797712;Append the given path segments to the existing path of this builder._Each given path segment may contain URI template variables._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,segments,to,the,existing,path,of,this,builder,each,given,path,segment,may,contain,uri,template,variables,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1447791580;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1449004145;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1458830024;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1465299497;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1467730834;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1471517882;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1472594218;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1475874694;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1476136805;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1485553611;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1486074560;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder host(String host);1492678922;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;override,public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder host(String host);1493758742;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;override,public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params);1496837955;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder_@since 4.2;@Override_	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder,since,4,2;override,public,uri,components,builder,replace,query,params,nullable,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params);1498780456;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder_@since 4.2;@Override_	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder,since,4,2;override,public,uri,components,builder,replace,query,params,nullable,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params);1500460652;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder_@since 4.2;@Override_	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder,since,4,2;override,public,uri,components,builder,replace,query,params,nullable,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params);1513715892;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder_@since 4.2;@Override_	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder,since,4,2;override,public,uri,components,builder,replace,query,params,nullable,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params);1515504834;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder_@since 4.2;@Override_	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder,since,4,2;override,public,uri,components,builder,replace,query,params,nullable,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params);1519588127;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder_@since 4.2;@Override_	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder,since,4,2;override,public,uri,components,builder,replace,query,params,nullable,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params);1522332352;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder_@since 4.2;@Override_	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder,since,4,2;override,public,uri,components,builder,replace,query,params,nullable,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params);1522351714;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder_@since 4.2;@Override_	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder,since,4,2;override,public,uri,components,builder,replace,query,params,nullable,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params);1522361849;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder_@since 4.2;@Override_	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder,since,4,2;override,public,uri,components,builder,replace,query,params,nullable,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params);1527192852;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder_@since 4.2;@Override_	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder,since,4,2;override,public,uri,components,builder,replace,query,params,nullable,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params);1530174524;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder_@since 4.2;@Override_	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder,since,4,2;override,public,uri,components,builder,replace,query,params,nullable,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params);1531746971;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder_@since 4.2;@Override_	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder,since,4,2;override,public,uri,components,builder,replace,query,params,nullable,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params);1531843156;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder_@since 4.2;@Override_	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder,since,4,2;override,public,uri,components,builder,replace,query,params,nullable,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params);1531863556;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder_@since 4.2;@Override_	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder,since,4,2;override,public,uri,components,builder,replace,query,params,nullable,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params);1532041662;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder_@since 4.2;@Override_	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder,since,4,2;override,public,uri,components,builder,replace,query,params,nullable,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params);1532041662;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder_@since 4.2;@Override_	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder,since,4,2;override,public,uri,components,builder,replace,query,params,nullable,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params);1536571897;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder_@since 4.2;@Override_	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder,since,4,2;override,public,uri,components,builder,replace,query,params,nullable,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params);1546464968;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder_@since 4.2;@Override_	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder,since,4,2;override,public,uri,components,builder,replace,query,params,nullable,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params);1546963593;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder_@since 4.2;@Override_	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder,since,4,2;override,public,uri,components,builder,replace,query,params,nullable,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params);1547005422;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder_@since 4.2;@Override_	public UriComponentsBuilder replaceQueryParams(@Nullable MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder,since,4,2;override,public,uri,components,builder,replace,query,params,nullable,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder path(String path);1492678922;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;override,public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder path(String path);1493758742;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;override,public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder path(String path);1495868221;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;override,public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder path(String path);1496259743;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;override,public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder path(String path);1496370972;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;override,public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder path(String path);1496837955;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;override,public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder path(String path);1498780456;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;override,public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder path(String path);1500460652;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;override,public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder path(String path);1513715892;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;override,public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder path(String path);1515504834;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;override,public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder path(String path);1519588127;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;override,public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder path(String path);1522332352;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;override,public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder path(String path);1522351714;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;override,public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder path(String path);1522361849;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;override,public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder path(String path);1527192852;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;override,public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder path(String path);1530174524;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;override,public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder path(String path);1531746971;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;override,public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder path(String path);1531843156;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;override,public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder path(String path);1531863556;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;override,public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder path(String path);1532041662;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;override,public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder path(String path);1532041662;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;override,public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder path(String path);1536571897;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;override,public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder path(String path);1546464968;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;override,public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder path(String path);1546963593;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;override,public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder path(String path);1547005422;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;override,public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1328020251;Sets the URI user info. The given user info may contain URI template variables, and may also be {@code null} to_clear the user info of this builder.__@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		return this__	};sets,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1329142650;Sets the URI user info. The given user info may contain URI template variables, and may also be {@code null} to_clear the user info of this builder.__@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		return this__	};sets,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1335903038;Sets the URI user info. The given user info may contain URI template variables, and may also be {@code null} to_clear the user info of this builder.__@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		return this__	};sets,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1345652603;Sets the URI user info. The given user info may contain URI template_variables, and may also be {@code null} to clear the user info of this_builder.__@param userInfo_the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		return this__	};sets,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1348582810;Sets the URI user info. The given user info may contain URI template_variables, and may also be {@code null} to clear the user info of this_builder.__@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1349904861;Sets the URI user info. The given user info may contain URI template_variables, and may also be {@code null} to clear the user info of this_builder.__@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1350918288;Sets the URI user info. The given user info may contain URI template_variables, and may also be {@code null} to clear the user info of this_builder.__@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1356735495;Sets the URI user info. The given user info may contain URI template_variables, and may also be {@code null} to clear the user info of this_builder.__@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1357119239;Sets the URI user info. The given user info may contain URI template_variables, and may also be {@code null} to clear the user info of this_builder.__@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1362408075;Sets the URI user info. The given user info may contain URI template_variables, and may also be {@code null} to clear the user info of this_builder.__@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1363208506;Sets the URI user info. The given user info may contain URI template_variables, and may also be {@code null} to clear the user info of this_builder.__@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1367580131;Sets the URI user info. The given user info may contain URI template_variables, and may also be {@code null} to clear the user info of this_builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1367955086;Sets the URI user info. The given user info may contain URI template_variables, and may also be {@code null} to clear the user info of this_builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1368482696;Sets the URI user info. The given user info may contain URI template_variables, and may also be {@code null} to clear the user info of this_builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1375201821;Sets the URI user info. The given user info may contain URI template_variables, and may also be {@code null} to clear the user info of this_builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1380131933;Sets the URI user info. The given user info may contain URI template_variables, and may also be {@code null} to clear the user info of this_builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1382387167;Sets the URI user info. The given user info may contain URI template_variables, and may also be {@code null} to clear the user info of this_builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1382387168;Sets the URI user info. The given user info may contain URI template_variables, and may also be {@code null} to clear the user info of this_builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1382744567;Sets the URI user info. The given user info may contain URI template_variables, and may also be {@code null} to clear the user info of this_builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1382754578;Sets the URI user info. The given user info may contain URI template_variables, and may also be {@code null} to clear the user info of this_builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1391723719;Sets the URI user info. The given user info may contain URI template_variables, and may also be {@code null} to clear the user info of this_builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1400538909;Sets the URI user info. The given user info may contain URI template_variables, and may also be {@code null} to clear the user info of this_builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1400541968;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1403775847;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1404917891;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1409317151;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1409318475;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1409822411;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1414695064;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1417799775;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1423547594;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1424274316;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1425610347;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1426255003;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1426266172;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1426267150;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1426553101;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1426880143;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1426880143;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1427143443;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1430734105;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1433951292;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1437567436;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1438166381;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1443431031;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1443797712;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1447791580;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1449004145;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1458830024;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1465299497;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1467730834;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1471517882;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1472594218;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1475874694;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1476136805;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1485553611;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder userInfo(String userInfo);1486074560;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params);1492678922;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder_@since 4.2;@Override_	public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder,since,4,2;override,public,uri,components,builder,replace,query,params,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params);1493758742;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder_@since 4.2;@Override_	public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder,since,4,2;override,public,uri,components,builder,replace,query,params,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params);1495868221;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder_@since 4.2;@Override_	public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder,since,4,2;override,public,uri,components,builder,replace,query,params,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params);1496259743;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder_@since 4.2;@Override_	public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder,since,4,2;override,public,uri,components,builder,replace,query,params,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params);1496370972;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder_@since 4.2;@Override_	public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder,since,4,2;override,public,uri,components,builder,replace,query,params,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(String port);1492678922;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(String port);1493758742;Set the URI port. Use this method only when the port needs to be_parameterized with a URI variable. Otherwise use {@link #port(int)}._Passing {@code null} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(String port) {_		this.port = port__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,use,this,method,only,when,the,port,needs,to,be,parameterized,with,a,uri,variable,otherwise,use,link,port,int,passing,code,null,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,string,port,this,port,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder query(String query);1492678922;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;override,public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder query(String query);1493758742;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;override,public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder query(String query);1495868221;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;override,public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder query(String query);1496259743;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;override,public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder query(String query);1496370972;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;override,public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1328020251;Sets the URI host. The given host may contain URI template variables, and may also be {@code null} to clear the host_of this builder.__@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		return this__	};sets,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1329142650;Sets the URI host. The given host may contain URI template variables, and may also be {@code null} to clear the host_of this builder.__@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		return this__	};sets,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1335903038;Sets the URI host. The given host may contain URI template variables, and may also be {@code null} to clear the host_of this builder.__@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		return this__	};sets,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1345652603;Sets the URI host. The given host may contain URI template variables, and_may also be {@code null} to clear the host of this builder.__@param host_the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		return this__	};sets,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1348582810;Sets the URI host. The given host may contain URI template variables, and_may also be {@code null} to clear the host of this builder.__@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1349904861;Sets the URI host. The given host may contain URI template variables, and_may also be {@code null} to clear the host of this builder.__@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1350918288;Sets the URI host. The given host may contain URI template variables, and_may also be {@code null} to clear the host of this builder.__@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1356735495;Sets the URI host. The given host may contain URI template variables, and_may also be {@code null} to clear the host of this builder.__@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1357119239;Sets the URI host. The given host may contain URI template variables, and_may also be {@code null} to clear the host of this builder.__@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1362408075;Sets the URI host. The given host may contain URI template variables, and_may also be {@code null} to clear the host of this builder.__@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1363208506;Sets the URI host. The given host may contain URI template variables, and_may also be {@code null} to clear the host of this builder.__@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1367580131;Sets the URI host. The given host may contain URI template variables, and_may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1367955086;Sets the URI host. The given host may contain URI template variables, and_may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1368482696;Sets the URI host. The given host may contain URI template variables, and_may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1375201821;Sets the URI host. The given host may contain URI template variables, and_may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1380131933;Sets the URI host. The given host may contain URI template variables, and_may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1382387167;Sets the URI host. The given host may contain URI template variables, and_may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1382387168;Sets the URI host. The given host may contain URI template variables, and_may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1382744567;Sets the URI host. The given host may contain URI template variables, and_may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1382754578;Sets the URI host. The given host may contain URI template variables, and_may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1391723719;Sets the URI host. The given host may contain URI template variables, and_may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1400538909;Sets the URI host. The given host may contain URI template variables, and_may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};sets,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1400541968;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1403775847;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1404917891;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1409317151;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1409318475;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1409822411;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1414695064;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1417799775;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1423547594;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1424274316;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1425610347;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1426255003;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1426266172;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1426267150;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1426553101;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1426880143;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1426880143;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1427143443;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1430734105;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1433951292;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1437567436;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1438166381;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1443431031;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1443797712;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1447791580;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1449004145;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1458830024;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1465299497;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1467730834;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1471517882;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1472594218;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1475874694;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1476136805;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1485553611;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder host(String host);1486074560;Set the URI host. The given host may contain URI template variables,_and may also be {@code null} to clear the host of this builder._@param host the URI host_@return this UriComponentsBuilder;public UriComponentsBuilder host(String host) {_		this.host = host__		resetSchemeSpecificPart()__		return this__	};set,the,uri,host,the,given,host,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,host,of,this,builder,param,host,the,uri,host,return,this,uri,components,builder;public,uri,components,builder,host,string,host,this,host,host,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder scheme(@Nullable String scheme);1495868221;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder scheme(@Nullable String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;override,public,uri,components,builder,scheme,nullable,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder scheme(@Nullable String scheme);1496259743;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder scheme(@Nullable String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;override,public,uri,components,builder,scheme,nullable,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder scheme(@Nullable String scheme);1496370972;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder scheme(@Nullable String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;override,public,uri,components,builder,scheme,nullable,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder scheme(@Nullable String scheme);1496837955;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder scheme(@Nullable String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;override,public,uri,components,builder,scheme,nullable,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder scheme(@Nullable String scheme);1498780456;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder scheme(@Nullable String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;override,public,uri,components,builder,scheme,nullable,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder scheme(@Nullable String scheme);1500460652;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder scheme(@Nullable String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;override,public,uri,components,builder,scheme,nullable,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder scheme(@Nullable String scheme);1513715892;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder scheme(@Nullable String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;override,public,uri,components,builder,scheme,nullable,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder scheme(@Nullable String scheme);1515504834;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder scheme(@Nullable String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;override,public,uri,components,builder,scheme,nullable,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder scheme(@Nullable String scheme);1519588127;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder scheme(@Nullable String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;override,public,uri,components,builder,scheme,nullable,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder scheme(@Nullable String scheme);1522332352;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder scheme(@Nullable String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;override,public,uri,components,builder,scheme,nullable,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder scheme(@Nullable String scheme);1522351714;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder scheme(@Nullable String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;override,public,uri,components,builder,scheme,nullable,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder scheme(@Nullable String scheme);1522361849;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder scheme(@Nullable String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;override,public,uri,components,builder,scheme,nullable,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder scheme(@Nullable String scheme);1527192852;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder scheme(@Nullable String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;override,public,uri,components,builder,scheme,nullable,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder scheme(@Nullable String scheme);1530174524;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder scheme(@Nullable String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;override,public,uri,components,builder,scheme,nullable,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder scheme(@Nullable String scheme);1531746971;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder scheme(@Nullable String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;override,public,uri,components,builder,scheme,nullable,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder scheme(@Nullable String scheme);1531843156;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder scheme(@Nullable String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;override,public,uri,components,builder,scheme,nullable,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder scheme(@Nullable String scheme);1531863556;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder scheme(@Nullable String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;override,public,uri,components,builder,scheme,nullable,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder scheme(@Nullable String scheme);1532041662;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder scheme(@Nullable String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;override,public,uri,components,builder,scheme,nullable,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder scheme(@Nullable String scheme);1532041662;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder scheme(@Nullable String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;override,public,uri,components,builder,scheme,nullable,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder scheme(@Nullable String scheme);1536571897;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder scheme(@Nullable String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;override,public,uri,components,builder,scheme,nullable,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder scheme(@Nullable String scheme);1546464968;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder scheme(@Nullable String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;override,public,uri,components,builder,scheme,nullable,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder scheme(@Nullable String scheme);1546963593;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder scheme(@Nullable String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;override,public,uri,components,builder,scheme,nullable,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder scheme(@Nullable String scheme);1547005422;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder scheme(@Nullable String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;override,public,uri,components,builder,scheme,nullable,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(int port);1492678922;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(int port);1493758742;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(int port);1495868221;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(int port);1496259743;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(int port);1496370972;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(int port);1496837955;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(int port);1498780456;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(int port);1500460652;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(int port);1513715892;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(int port);1515504834;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(int port);1519588127;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(int port);1522332352;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(int port);1522351714;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(int port);1522361849;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(int port);1527192852;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(int port);1530174524;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(int port);1531746971;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(int port);1531843156;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(int port);1531863556;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(int port);1532041662;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(int port);1532041662;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(int port);1536571897;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(int port);1546464968;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(int port);1546963593;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder port(int port);1547005422;Set the URI port. Passing {@code -1} will clear the port of this builder._@param port the URI port_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder port(int port) {_		Assert.isTrue(port >= -1, "Port must be >= -1")__		this.port = String.valueOf(port)__		resetSchemeSpecificPart()__		return this__	};set,the,uri,port,passing,code,1,will,clear,the,port,of,this,builder,param,port,the,uri,port,return,this,uri,components,builder;override,public,uri,components,builder,port,int,port,assert,is,true,port,1,port,must,be,1,this,port,string,value,of,port,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public String toUriString();1400538909;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1400541968;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1403775847;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1404917891;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1409317151;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1409318475;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1409822411;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1414695064;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1417799775;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1423547594;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1424274316;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1425610347;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1426255003;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1426266172;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1426267150;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1426553101;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1426880143;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1426880143;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1427143443;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1430734105;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1433951292;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1437567436;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1438166381;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1443431031;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1443797712;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1447791580;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1449004145;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1458830024;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1465299497;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1467730834;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1471517882;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1472594218;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1475874694;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1476136805;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1485553611;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1486074560;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1492678922;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1493758742;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1495868221;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1496259743;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1496370972;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1496837955;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1498780456;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1500460652;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1513715892;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1515504834;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1519588127;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1522332352;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1522351714;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1522361849;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1527192852;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1530174524;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build(false).encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,false,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1531746971;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build().encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1531843156;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build().encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1531863556;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build().encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1532041662;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return build().encode().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,encode,to,uri,string
UriComponentsBuilder -> public String toUriString();1532041662;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return encode().build().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,encode,build,to,uri,string
UriComponentsBuilder -> public String toUriString();1536571897;Build a URI String. This is a shortcut method which combines calls_to {@link #build()}, then {@link UriComponents#encode()} and finally_{@link UriComponents#toUriString()}._@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return encode().build().toUriString()__	};build,a,uri,string,this,is,a,shortcut,method,which,combines,calls,to,link,build,then,link,uri,components,encode,and,finally,link,uri,components,to,uri,string,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,encode,build,to,uri,string
UriComponentsBuilder -> public String toUriString();1546464968;Build a URI String. This is a shortcut for:_<pre>_String uri = builder.encode().build().toUriString()_</pre>_@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return buildInternal(EncodingHint.ENCODE_TEMPLATE).toUriString()__	};build,a,uri,string,this,is,a,shortcut,for,pre,string,uri,builder,encode,build,to,uri,string,pre,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,build,internal,encoding,hint,to,uri,string
UriComponentsBuilder -> public String toUriString();1546963593;Build a URI String._<p>Effectively, a shortcut for building, encoding, and returning the_String representation:_<pre class="code">_String uri = builder.build().encode().toUriString()_</pre>_<p>However if {@link #uriVariables(Map) URI variables} have been provided_then the URI template is pre-encoded separately from URI variables (see_{@link #encode()} for details), i.e. equivalent to:_<pre>_String uri = builder.encode().build().toUriString()_</pre>_@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return this.uriVariables.isEmpty() ?_				encode().build().toUriString() :_				buildInternal(EncodingHint.ENCODE_TEMPLATE).toUriString()__	};build,a,uri,string,p,effectively,a,shortcut,for,building,encoding,and,returning,the,string,representation,pre,class,code,string,uri,builder,build,encode,to,uri,string,pre,p,however,if,link,uri,variables,map,uri,variables,have,been,provided,then,the,uri,template,is,pre,encoded,separately,from,uri,variables,see,link,encode,for,details,i,e,equivalent,to,pre,string,uri,builder,encode,build,to,uri,string,pre,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,this,uri,variables,is,empty,encode,build,to,uri,string,build,internal,encoding,hint,to,uri,string
UriComponentsBuilder -> public String toUriString();1547005422;Build a URI String._<p>Effectively, a shortcut for building, encoding, and returning the_String representation:_<pre class="code">_String uri = builder.build().encode().toUriString()_</pre>_<p>However if {@link #uriVariables(Map) URI variables} have been provided_then the URI template is pre-encoded separately from URI variables (see_{@link #encode()} for details), i.e. equivalent to:_<pre>_String uri = builder.encode().build().toUriString()_</pre>_@since 4.1_@see UriComponents#toUriString();public String toUriString() {_		return this.uriVariables.isEmpty() ?_				build().encode().toUriString() :_				buildInternal(EncodingHint.ENCODE_TEMPLATE).toUriString()__	};build,a,uri,string,p,effectively,a,shortcut,for,building,encoding,and,returning,the,string,representation,pre,class,code,string,uri,builder,build,encode,to,uri,string,pre,p,however,if,link,uri,variables,map,uri,variables,have,been,provided,then,the,uri,template,is,pre,encoded,separately,from,uri,variables,see,link,encode,for,details,i,e,equivalent,to,pre,string,uri,builder,encode,build,to,uri,string,pre,since,4,1,see,uri,components,to,uri,string;public,string,to,uri,string,return,this,uri,variables,is,empty,build,encode,to,uri,string,build,internal,encoding,hint,to,uri,string
UriComponentsBuilder -> public final UriComponentsBuilder encode();1531746971;Request to have the URI template encoded first at build time, and_URI variables encoded later when expanded.__<p>In comparison to {@link UriComponents#encode()}, this method has the_same effect on the URI template, i.e. each URI component is encoded by_quoting <em>only</em> illegal characters within that URI component type._However URI variables are encoded more strictly, by quoting both illegal_characters and characters with reserved meaning.__<p>For most cases, prefer this method over {@link UriComponents#encode()}_which is useful only if intentionally expanding variables with reserved_characters. For example '_' is legal in a path, but also has reserved_meaning as a separator. When expanding a variable that contains '_' it_probably should be encoded, unless the intent is to insert path params_through the expanded variable.__@since 5.0.8;public final UriComponentsBuilder encode() {_		return encode(StandardCharsets.UTF_8)__	};request,to,have,the,uri,template,encoded,first,at,build,time,and,uri,variables,encoded,later,when,expanded,p,in,comparison,to,link,uri,components,encode,this,method,has,the,same,effect,on,the,uri,template,i,e,each,uri,component,is,encoded,by,quoting,em,only,em,illegal,characters,within,that,uri,component,type,however,uri,variables,are,encoded,more,strictly,by,quoting,both,illegal,characters,and,characters,with,reserved,meaning,p,for,most,cases,prefer,this,method,over,link,uri,components,encode,which,is,useful,only,if,intentionally,expanding,variables,with,reserved,characters,for,example,is,legal,in,a,path,but,also,has,reserved,meaning,as,a,separator,when,expanding,a,variable,that,contains,it,probably,should,be,encoded,unless,the,intent,is,to,insert,path,params,through,the,expanded,variable,since,5,0,8;public,final,uri,components,builder,encode,return,encode,standard,charsets
UriComponentsBuilder -> public final UriComponentsBuilder encode();1531843156;Request to have the URI template encoded first at build time, and_URI variables encoded later when expanded._<p>In comparison to {@link UriComponents#encode()}, this method has the_same effect on the URI template, i.e. each URI component is encoded by_quoting <em>only</em> illegal characters within that URI component type._However URI variables are encoded more strictly, by quoting both illegal_characters and characters with reserved meaning._<p>For most cases, prefer this method over {@link UriComponents#encode()}_which is useful only if intentionally expanding variables with reserved_characters. For example '_' is legal in a path, but also has reserved_meaning as a separator. When expanding a variable that contains '_' it_probably should be encoded, unless the intent is to insert path params_through the expanded variable._@since 5.0.8;public final UriComponentsBuilder encode() {_		return encode(StandardCharsets.UTF_8)__	};request,to,have,the,uri,template,encoded,first,at,build,time,and,uri,variables,encoded,later,when,expanded,p,in,comparison,to,link,uri,components,encode,this,method,has,the,same,effect,on,the,uri,template,i,e,each,uri,component,is,encoded,by,quoting,em,only,em,illegal,characters,within,that,uri,component,type,however,uri,variables,are,encoded,more,strictly,by,quoting,both,illegal,characters,and,characters,with,reserved,meaning,p,for,most,cases,prefer,this,method,over,link,uri,components,encode,which,is,useful,only,if,intentionally,expanding,variables,with,reserved,characters,for,example,is,legal,in,a,path,but,also,has,reserved,meaning,as,a,separator,when,expanding,a,variable,that,contains,it,probably,should,be,encoded,unless,the,intent,is,to,insert,path,params,through,the,expanded,variable,since,5,0,8;public,final,uri,components,builder,encode,return,encode,standard,charsets
UriComponentsBuilder -> public final UriComponentsBuilder encode();1531863556;Request to have the URI template pre-encoded at build time, and_URI variables encoded separately when expanded._<p>In comparison to {@link UriComponents#encode()}, this method has the_same effect on the URI template, i.e. each URI component is encoded by_replacing non-ASCII and illegal (within the URI component type) characters_with escaped octets. However URI variables are encoded more strictly, by_also escaping characters with reserved meaning._<p>For most cases, this method is more likely to give the expected result_because in treats URI variables as opaque data to be fully encoded, while_{@link UriComponents#encode()} is useful only if intentionally expanding_URI variables that contain reserved characters._<p>For example '_' is legal in a path but has reserved meaning. This_method replaces "_" with "%3B" in URI variables but not in the URI_template. By contrast, {@link UriComponents#encode()} never replaces "_"_since it is a legal character in a path._@since 5.0.8;public final UriComponentsBuilder encode() {_		return encode(StandardCharsets.UTF_8)__	};request,to,have,the,uri,template,pre,encoded,at,build,time,and,uri,variables,encoded,separately,when,expanded,p,in,comparison,to,link,uri,components,encode,this,method,has,the,same,effect,on,the,uri,template,i,e,each,uri,component,is,encoded,by,replacing,non,ascii,and,illegal,within,the,uri,component,type,characters,with,escaped,octets,however,uri,variables,are,encoded,more,strictly,by,also,escaping,characters,with,reserved,meaning,p,for,most,cases,this,method,is,more,likely,to,give,the,expected,result,because,in,treats,uri,variables,as,opaque,data,to,be,fully,encoded,while,link,uri,components,encode,is,useful,only,if,intentionally,expanding,uri,variables,that,contain,reserved,characters,p,for,example,is,legal,in,a,path,but,has,reserved,meaning,this,method,replaces,with,3b,in,uri,variables,but,not,in,the,uri,template,by,contrast,link,uri,components,encode,never,replaces,since,it,is,a,legal,character,in,a,path,since,5,0,8;public,final,uri,components,builder,encode,return,encode,standard,charsets
UriComponentsBuilder -> public final UriComponentsBuilder encode();1532041662;Request to have the URI template pre-encoded at build time, and_URI variables encoded separately when expanded._<p>In comparison to {@link UriComponents#encode()}, this method has the_same effect on the URI template, i.e. each URI component is encoded by_replacing non-ASCII and illegal (within the URI component type) characters_with escaped octets. However URI variables are encoded more strictly, by_also escaping characters with reserved meaning._<p>For most cases, this method is more likely to give the expected result_because in treats URI variables as opaque data to be fully encoded, while_{@link UriComponents#encode()} is useful only if intentionally expanding_URI variables that contain reserved characters._<p>For example '_' is legal in a path but has reserved meaning. This_method replaces "_" with "%3B" in URI variables but not in the URI_template. By contrast, {@link UriComponents#encode()} never replaces "_"_since it is a legal character in a path._@since 5.0.8;public final UriComponentsBuilder encode() {_		return encode(StandardCharsets.UTF_8)__	};request,to,have,the,uri,template,pre,encoded,at,build,time,and,uri,variables,encoded,separately,when,expanded,p,in,comparison,to,link,uri,components,encode,this,method,has,the,same,effect,on,the,uri,template,i,e,each,uri,component,is,encoded,by,replacing,non,ascii,and,illegal,within,the,uri,component,type,characters,with,escaped,octets,however,uri,variables,are,encoded,more,strictly,by,also,escaping,characters,with,reserved,meaning,p,for,most,cases,this,method,is,more,likely,to,give,the,expected,result,because,in,treats,uri,variables,as,opaque,data,to,be,fully,encoded,while,link,uri,components,encode,is,useful,only,if,intentionally,expanding,uri,variables,that,contain,reserved,characters,p,for,example,is,legal,in,a,path,but,has,reserved,meaning,this,method,replaces,with,3b,in,uri,variables,but,not,in,the,uri,template,by,contrast,link,uri,components,encode,never,replaces,since,it,is,a,legal,character,in,a,path,since,5,0,8;public,final,uri,components,builder,encode,return,encode,standard,charsets
UriComponentsBuilder -> public final UriComponentsBuilder encode();1532041662;Request to have the URI template pre-encoded at build time, and_URI variables encoded separately when expanded._<p>In comparison to {@link UriComponents#encode()}, this method has the_same effect on the URI template, i.e. each URI component is encoded by_replacing non-ASCII and illegal (within the URI component type) characters_with escaped octets. However URI variables are encoded more strictly, by_also escaping characters with reserved meaning._<p>For most cases, this method is more likely to give the expected result_because in treats URI variables as opaque data to be fully encoded, while_{@link UriComponents#encode()} is useful only if intentionally expanding_URI variables that contain reserved characters._<p>For example '_' is legal in a path but has reserved meaning. This_method replaces "_" with "%3B" in URI variables but not in the URI_template. By contrast, {@link UriComponents#encode()} never replaces "_"_since it is a legal character in a path._@since 5.0.8;public final UriComponentsBuilder encode() {_		return encode(StandardCharsets.UTF_8)__	};request,to,have,the,uri,template,pre,encoded,at,build,time,and,uri,variables,encoded,separately,when,expanded,p,in,comparison,to,link,uri,components,encode,this,method,has,the,same,effect,on,the,uri,template,i,e,each,uri,component,is,encoded,by,replacing,non,ascii,and,illegal,within,the,uri,component,type,characters,with,escaped,octets,however,uri,variables,are,encoded,more,strictly,by,also,escaping,characters,with,reserved,meaning,p,for,most,cases,this,method,is,more,likely,to,give,the,expected,result,because,in,treats,uri,variables,as,opaque,data,to,be,fully,encoded,while,link,uri,components,encode,is,useful,only,if,intentionally,expanding,uri,variables,that,contain,reserved,characters,p,for,example,is,legal,in,a,path,but,has,reserved,meaning,this,method,replaces,with,3b,in,uri,variables,but,not,in,the,uri,template,by,contrast,link,uri,components,encode,never,replaces,since,it,is,a,legal,character,in,a,path,since,5,0,8;public,final,uri,components,builder,encode,return,encode,standard,charsets
UriComponentsBuilder -> public final UriComponentsBuilder encode();1536571897;Request to have the URI template pre-encoded at build time, and_URI variables encoded separately when expanded._<p>In comparison to {@link UriComponents#encode()}, this method has the_same effect on the URI template, i.e. each URI component is encoded by_replacing non-ASCII and illegal (within the URI component type) characters_with escaped octets. However URI variables are encoded more strictly, by_also escaping characters with reserved meaning._<p>For most cases, this method is more likely to give the expected result_because in treats URI variables as opaque data to be fully encoded, while_{@link UriComponents#encode()} is useful only if intentionally expanding_URI variables that contain reserved characters._<p>For example '_' is legal in a path but has reserved meaning. This_method replaces "_" with "%3B" in URI variables but not in the URI_template. By contrast, {@link UriComponents#encode()} never replaces "_"_since it is a legal character in a path._@since 5.0.8;public final UriComponentsBuilder encode() {_		return encode(StandardCharsets.UTF_8)__	};request,to,have,the,uri,template,pre,encoded,at,build,time,and,uri,variables,encoded,separately,when,expanded,p,in,comparison,to,link,uri,components,encode,this,method,has,the,same,effect,on,the,uri,template,i,e,each,uri,component,is,encoded,by,replacing,non,ascii,and,illegal,within,the,uri,component,type,characters,with,escaped,octets,however,uri,variables,are,encoded,more,strictly,by,also,escaping,characters,with,reserved,meaning,p,for,most,cases,this,method,is,more,likely,to,give,the,expected,result,because,in,treats,uri,variables,as,opaque,data,to,be,fully,encoded,while,link,uri,components,encode,is,useful,only,if,intentionally,expanding,uri,variables,that,contain,reserved,characters,p,for,example,is,legal,in,a,path,but,has,reserved,meaning,this,method,replaces,with,3b,in,uri,variables,but,not,in,the,uri,template,by,contrast,link,uri,components,encode,never,replaces,since,it,is,a,legal,character,in,a,path,since,5,0,8;public,final,uri,components,builder,encode,return,encode,standard,charsets
UriComponentsBuilder -> public final UriComponentsBuilder encode();1546464968;Request to have the URI template pre-encoded at build time, and_URI variables encoded separately when expanded._<p>In comparison to {@link UriComponents#encode()}, this method has the_same effect on the URI template, i.e. each URI component is encoded by_replacing non-ASCII and illegal (within the URI component type) characters_with escaped octets. However URI variables are encoded more strictly, by_also escaping characters with reserved meaning._<p>For most cases, this method is more likely to give the expected result_because in treats URI variables as opaque data to be fully encoded, while_{@link UriComponents#encode()} is useful only if intentionally expanding_URI variables that contain reserved characters._<p>For example '_' is legal in a path but has reserved meaning. This_method replaces "_" with "%3B" in URI variables but not in the URI_template. By contrast, {@link UriComponents#encode()} never replaces "_"_since it is a legal character in a path._@since 5.0.8;public final UriComponentsBuilder encode() {_		return encode(StandardCharsets.UTF_8)__	};request,to,have,the,uri,template,pre,encoded,at,build,time,and,uri,variables,encoded,separately,when,expanded,p,in,comparison,to,link,uri,components,encode,this,method,has,the,same,effect,on,the,uri,template,i,e,each,uri,component,is,encoded,by,replacing,non,ascii,and,illegal,within,the,uri,component,type,characters,with,escaped,octets,however,uri,variables,are,encoded,more,strictly,by,also,escaping,characters,with,reserved,meaning,p,for,most,cases,this,method,is,more,likely,to,give,the,expected,result,because,in,treats,uri,variables,as,opaque,data,to,be,fully,encoded,while,link,uri,components,encode,is,useful,only,if,intentionally,expanding,uri,variables,that,contain,reserved,characters,p,for,example,is,legal,in,a,path,but,has,reserved,meaning,this,method,replaces,with,3b,in,uri,variables,but,not,in,the,uri,template,by,contrast,link,uri,components,encode,never,replaces,since,it,is,a,legal,character,in,a,path,since,5,0,8;public,final,uri,components,builder,encode,return,encode,standard,charsets
UriComponentsBuilder -> public final UriComponentsBuilder encode();1546963593;Request to have the URI template pre-encoded at build time, and_URI variables encoded separately when expanded._<p>In comparison to {@link UriComponents#encode()}, this method has the_same effect on the URI template, i.e. each URI component is encoded by_replacing non-ASCII and illegal (within the URI component type) characters_with escaped octets. However URI variables are encoded more strictly, by_also escaping characters with reserved meaning._<p>For most cases, this method is more likely to give the expected result_because in treats URI variables as opaque data to be fully encoded, while_{@link UriComponents#encode()} is useful only if intentionally expanding_URI variables that contain reserved characters._<p>For example '_' is legal in a path but has reserved meaning. This_method replaces "_" with "%3B" in URI variables but not in the URI_template. By contrast, {@link UriComponents#encode()} never replaces "_"_since it is a legal character in a path._@since 5.0.8;public final UriComponentsBuilder encode() {_		return encode(StandardCharsets.UTF_8)__	};request,to,have,the,uri,template,pre,encoded,at,build,time,and,uri,variables,encoded,separately,when,expanded,p,in,comparison,to,link,uri,components,encode,this,method,has,the,same,effect,on,the,uri,template,i,e,each,uri,component,is,encoded,by,replacing,non,ascii,and,illegal,within,the,uri,component,type,characters,with,escaped,octets,however,uri,variables,are,encoded,more,strictly,by,also,escaping,characters,with,reserved,meaning,p,for,most,cases,this,method,is,more,likely,to,give,the,expected,result,because,in,treats,uri,variables,as,opaque,data,to,be,fully,encoded,while,link,uri,components,encode,is,useful,only,if,intentionally,expanding,uri,variables,that,contain,reserved,characters,p,for,example,is,legal,in,a,path,but,has,reserved,meaning,this,method,replaces,with,3b,in,uri,variables,but,not,in,the,uri,template,by,contrast,link,uri,components,encode,never,replaces,since,it,is,a,legal,character,in,a,path,since,5,0,8;public,final,uri,components,builder,encode,return,encode,standard,charsets
UriComponentsBuilder -> public final UriComponentsBuilder encode();1547005422;Request to have the URI template pre-encoded at build time, and_URI variables encoded separately when expanded._<p>In comparison to {@link UriComponents#encode()}, this method has the_same effect on the URI template, i.e. each URI component is encoded by_replacing non-ASCII and illegal (within the URI component type) characters_with escaped octets. However URI variables are encoded more strictly, by_also escaping characters with reserved meaning._<p>For most cases, this method is more likely to give the expected result_because in treats URI variables as opaque data to be fully encoded, while_{@link UriComponents#encode()} is useful only if intentionally expanding_URI variables that contain reserved characters._<p>For example '_' is legal in a path but has reserved meaning. This_method replaces "_" with "%3B" in URI variables but not in the URI_template. By contrast, {@link UriComponents#encode()} never replaces "_"_since it is a legal character in a path._@since 5.0.8;public final UriComponentsBuilder encode() {_		return encode(StandardCharsets.UTF_8)__	};request,to,have,the,uri,template,pre,encoded,at,build,time,and,uri,variables,encoded,separately,when,expanded,p,in,comparison,to,link,uri,components,encode,this,method,has,the,same,effect,on,the,uri,template,i,e,each,uri,component,is,encoded,by,replacing,non,ascii,and,illegal,within,the,uri,component,type,characters,with,escaped,octets,however,uri,variables,are,encoded,more,strictly,by,also,escaping,characters,with,reserved,meaning,p,for,most,cases,this,method,is,more,likely,to,give,the,expected,result,because,in,treats,uri,variables,as,opaque,data,to,be,fully,encoded,while,link,uri,components,encode,is,useful,only,if,intentionally,expanding,uri,variables,that,contain,reserved,characters,p,for,example,is,legal,in,a,path,but,has,reserved,meaning,this,method,replaces,with,3b,in,uri,variables,but,not,in,the,uri,template,by,contrast,link,uri,components,encode,never,replaces,since,it,is,a,legal,character,in,a,path,since,5,0,8;public,final,uri,components,builder,encode,return,encode,standard,charsets
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1328020251;Sets the query parameter values overriding all existing query values for the same parameter._If no values are given, the query parameter is removed.__@param name   the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		return this__	};sets,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1329142650;Sets the query parameter values overriding all existing query values for the same parameter._If no values are given, the query parameter is removed.__@param name   the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		return this__	};sets,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1335903038;Sets the query parameter values overriding all existing query values for the same parameter._If no values are given, the query parameter is removed.__@param name   the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		return this__	};sets,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1345652603;Sets the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is_removed.__@param name_the query parameter name_@param values_the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		return this__	};sets,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1348582810;Sets the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is_removed.__@param name_the query parameter name_@param values_the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};sets,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1349904861;Sets the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is_removed.__@param name_the query parameter name_@param values_the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};sets,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1350918288;Sets the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is_removed.__@param name_the query parameter name_@param values_the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};sets,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1356735495;Sets the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is_removed.__@param name_the query parameter name_@param values_the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};sets,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1357119239;Sets the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is_removed.__@param name_the query parameter name_@param values_the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};sets,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1362408075;Sets the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is_removed.__@param name_the query parameter name_@param values_the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};sets,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1363208506;Sets the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is_removed.__@param name_the query parameter name_@param values_the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};sets,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1367580131;Sets the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is_removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};sets,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1367955086;Sets the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is_removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};sets,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1368482696;Sets the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is_removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};sets,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1375201821;Sets the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is_removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};sets,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1380131933;Sets the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is_removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};sets,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1382387167;Sets the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is_removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};sets,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1382387168;Sets the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is_removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};sets,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1382744567;Sets the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is_removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};sets,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1382754578;Sets the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is_removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};sets,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1391723719;Sets the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is_removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};sets,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1400538909;Sets the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is_removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};sets,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1400541968;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1403775847;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1404917891;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1409317151;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1409318475;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1409822411;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1414695064;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1417799775;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1423547594;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1424274316;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1425610347;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1426255003;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1426266172;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1426267150;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1426553101;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1426880143;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1426880143;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1427143443;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1430734105;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1433951292;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1437567436;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "'name' must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1438166381;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1443431031;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1443797712;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1447791580;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1449004145;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1458830024;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1465299497;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1467730834;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1471517882;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1472594218;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1475874694;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1476136805;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1485553611;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParam(String name, Object... values);1486074560;Set the query parameter values overriding all existing query values for_the same parameter. If no values are given, the query parameter is removed._@param name the query parameter name_@param values the query parameter values_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParam(String name, Object... values) {_		Assert.notNull(name, "Name must not be null")__		this.queryParams.remove(name)__		if (!ObjectUtils.isEmpty(values)) {_			queryParam(name, values)__		}_		resetSchemeSpecificPart()__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,for,the,same,parameter,if,no,values,are,given,the,query,parameter,is,removed,param,name,the,query,parameter,name,param,values,the,query,parameter,values,return,this,uri,components,builder;public,uri,components,builder,replace,query,param,string,name,object,values,assert,not,null,name,name,must,not,be,null,this,query,params,remove,name,if,object,utils,is,empty,values,query,param,name,values,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1492678922;Add the given query parameters._@param params the params_@return this UriComponentsBuilder_@since 4.0;@Override_	public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder,since,4,0;override,public,uri,components,builder,query,params,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1493758742;Add the given query parameters._@param params the params_@return this UriComponentsBuilder_@since 4.0;@Override_	public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder,since,4,0;override,public,uri,components,builder,query,params,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1495868221;Add the given query parameters._@param params the params_@return this UriComponentsBuilder_@since 4.0;@Override_	public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder,since,4,0;override,public,uri,components,builder,query,params,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1496259743;Add the given query parameters._@param params the params_@return this UriComponentsBuilder_@since 4.0;@Override_	public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder,since,4,0;override,public,uri,components,builder,query,params,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1496370972;Add the given query parameters._@param params the params_@return this UriComponentsBuilder_@since 4.0;@Override_	public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder,since,4,0;override,public,uri,components,builder,query,params,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1328020251;Appends the given query to the existing query of this builder. The given query may contain URI template variables.__@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher m = QUERY_PARAM_PATTERN.matcher(query)__			while (m.find()) {_				String name = m.group(1)__				String value = m.group(2)__				queryParam(name, value)__			}_		}_		else {_			this.queryParams.clear()__		}_		return this__	};appends,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,m,matcher,query,while,m,find,string,name,m,group,1,string,value,m,group,2,query,param,name,value,else,this,query,params,clear,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1329142650;Appends the given query to the existing query of this builder. The given query may contain URI template variables.__@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher m = QUERY_PARAM_PATTERN.matcher(query)__			while (m.find()) {_				String name = m.group(1)__				String value = m.group(2)__				queryParam(name, value)__			}_		}_		else {_			this.queryParams.clear()__		}_		return this__	};appends,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,m,matcher,query,while,m,find,string,name,m,group,1,string,value,m,group,2,query,param,name,value,else,this,query,params,clear,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1335903038;Appends the given query to the existing query of this builder. The given query may contain URI template variables.__@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher m = QUERY_PARAM_PATTERN.matcher(query)__			while (m.find()) {_				String name = m.group(1)__				String value = m.group(2)__				queryParam(name, value)__			}_		}_		else {_			this.queryParams.clear()__		}_		return this__	};appends,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,m,matcher,query,while,m,find,string,name,m,group,1,string,value,m,group,2,query,param,name,value,else,this,query,params,clear,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1345652603;Appends the given query to the existing query of this builder._The given query may contain URI template variables.__<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:__<pre>_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>__@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher m = QUERY_PARAM_PATTERN.matcher(query)__			while (m.find()) {_				String name = m.group(1)__				String value = m.group(2)__				queryParam(name, value)__			}_		}_		else {_			this.queryParams.clear()__		}_		return this__	};appends,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,m,matcher,query,while,m,find,string,name,m,group,1,string,value,m,group,2,query,param,name,value,else,this,query,params,clear,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1348582810;Appends the given query to the existing query of this builder._The given query may contain URI template variables.__<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:__<pre>_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>__@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher m = QUERY_PARAM_PATTERN.matcher(query)__			while (m.find()) {_				String name = m.group(1)__				String value = m.group(2)__				queryParam(name, value)__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,m,matcher,query,while,m,find,string,name,m,group,1,string,value,m,group,2,query,param,name,value,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1349904861;Appends the given query to the existing query of this builder._The given query may contain URI template variables.__<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:__<pre>_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>__@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher m = QUERY_PARAM_PATTERN.matcher(query)__			while (m.find()) {_				String name = m.group(1)__				String value = m.group(2)__				queryParam(name, value)__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,m,matcher,query,while,m,find,string,name,m,group,1,string,value,m,group,2,query,param,name,value,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1350918288;Appends the given query to the existing query of this builder._The given query may contain URI template variables.__<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:__<pre>_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>__@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher m = QUERY_PARAM_PATTERN.matcher(query)__			while (m.find()) {_				String name = m.group(1)__				String value = m.group(2)__				queryParam(name, value)__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,m,matcher,query,while,m,find,string,name,m,group,1,string,value,m,group,2,query,param,name,value,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1356735495;Appends the given query to the existing query of this builder._The given query may contain URI template variables.__<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:__<pre>_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>__@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher m = QUERY_PARAM_PATTERN.matcher(query)__			while (m.find()) {_				String name = m.group(1)__				String value = m.group(2)__				queryParam(name, value)__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,m,matcher,query,while,m,find,string,name,m,group,1,string,value,m,group,2,query,param,name,value,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1357119239;Appends the given query to the existing query of this builder._The given query may contain URI template variables.__<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:__<pre>_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>__@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher m = QUERY_PARAM_PATTERN.matcher(query)__			while (m.find()) {_				String name = m.group(1)__				String value = m.group(2)__				queryParam(name, value)__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,m,matcher,query,while,m,find,string,name,m,group,1,string,value,m,group,2,query,param,name,value,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1362408075;Appends the given query to the existing query of this builder._The given query may contain URI template variables.__<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:__<pre>_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>__@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher m = QUERY_PARAM_PATTERN.matcher(query)__			while (m.find()) {_				String name = m.group(1)__				String eq = m.group(2)__				String value = m.group(3)__				queryParam(name, (value != null ? value :_					(StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,m,matcher,query,while,m,find,string,name,m,group,1,string,eq,m,group,2,string,value,m,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1363208506;Appends the given query to the existing query of this builder._The given query may contain URI template variables.__<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:__<pre>_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>__@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher m = QUERY_PARAM_PATTERN.matcher(query)__			while (m.find()) {_				String name = m.group(1)__				String eq = m.group(2)__				String value = m.group(3)__				queryParam(name, (value != null ? value :_					(StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,m,matcher,query,while,m,find,string,name,m,group,1,string,eq,m,group,2,string,value,m,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1367580131;Appends the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre>_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher m = QUERY_PARAM_PATTERN.matcher(query)__			while (m.find()) {_				String name = m.group(1)__				String eq = m.group(2)__				String value = m.group(3)__				queryParam(name, (value != null ? value :_					(StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,m,matcher,query,while,m,find,string,name,m,group,1,string,eq,m,group,2,string,value,m,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1367955086;Appends the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher m = QUERY_PARAM_PATTERN.matcher(query)__			while (m.find()) {_				String name = m.group(1)__				String eq = m.group(2)__				String value = m.group(3)__				queryParam(name, (value != null ? value :_					(StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,m,matcher,query,while,m,find,string,name,m,group,1,string,eq,m,group,2,string,value,m,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1368482696;Appends the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher m = QUERY_PARAM_PATTERN.matcher(query)__			while (m.find()) {_				String name = m.group(1)__				String eq = m.group(2)__				String value = m.group(3)__				queryParam(name, (value != null ? value :_					(StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,m,matcher,query,while,m,find,string,name,m,group,1,string,eq,m,group,2,string,value,m,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1375201821;Appends the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher m = QUERY_PARAM_PATTERN.matcher(query)__			while (m.find()) {_				String name = m.group(1)__				String eq = m.group(2)__				String value = m.group(3)__				queryParam(name, (value != null ? value :_					(StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,m,matcher,query,while,m,find,string,name,m,group,1,string,eq,m,group,2,string,value,m,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1380131933;Appends the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher m = QUERY_PARAM_PATTERN.matcher(query)__			while (m.find()) {_				String name = m.group(1)__				String eq = m.group(2)__				String value = m.group(3)__				queryParam(name, (value != null ? value :_					(StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,m,matcher,query,while,m,find,string,name,m,group,1,string,eq,m,group,2,string,value,m,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1382387167;Appends the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher m = QUERY_PARAM_PATTERN.matcher(query)__			while (m.find()) {_				String name = m.group(1)__				String eq = m.group(2)__				String value = m.group(3)__				queryParam(name, (value != null ? value :_					(StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,m,matcher,query,while,m,find,string,name,m,group,1,string,eq,m,group,2,string,value,m,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1382387168;Appends the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher m = QUERY_PARAM_PATTERN.matcher(query)__			while (m.find()) {_				String name = m.group(1)__				String eq = m.group(2)__				String value = m.group(3)__				queryParam(name, (value != null ? value :_					(StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,m,matcher,query,while,m,find,string,name,m,group,1,string,eq,m,group,2,string,value,m,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1382744567;Appends the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher m = QUERY_PARAM_PATTERN.matcher(query)__			while (m.find()) {_				String name = m.group(1)__				String eq = m.group(2)__				String value = m.group(3)__				queryParam(name, (value != null ? value :_					(StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,m,matcher,query,while,m,find,string,name,m,group,1,string,eq,m,group,2,string,value,m,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1382754578;Appends the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher m = QUERY_PARAM_PATTERN.matcher(query)__			while (m.find()) {_				String name = m.group(1)__				String eq = m.group(2)__				String value = m.group(3)__				queryParam(name, (value != null ? value :_					(StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,m,matcher,query,while,m,find,string,name,m,group,1,string,eq,m,group,2,string,value,m,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1391723719;Appends the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher m = QUERY_PARAM_PATTERN.matcher(query)__			while (m.find()) {_				String name = m.group(1)__				String eq = m.group(2)__				String value = m.group(3)__				queryParam(name, (value != null ? value :_					(StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,m,matcher,query,while,m,find,string,name,m,group,1,string,eq,m,group,2,string,value,m,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1400538909;Appends the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher m = QUERY_PARAM_PATTERN.matcher(query)__			while (m.find()) {_				String name = m.group(1)__				String eq = m.group(2)__				String value = m.group(3)__				queryParam(name, (value != null ? value :_					(StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,m,matcher,query,while,m,find,string,name,m,group,1,string,eq,m,group,2,string,value,m,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1400541968;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher m = QUERY_PARAM_PATTERN.matcher(query)__			while (m.find()) {_				String name = m.group(1)__				String eq = m.group(2)__				String value = m.group(3)__				queryParam(name, (value != null ? value :_					(StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,m,matcher,query,while,m,find,string,name,m,group,1,string,eq,m,group,2,string,value,m,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1403775847;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher m = QUERY_PARAM_PATTERN.matcher(query)__			while (m.find()) {_				String name = m.group(1)__				String eq = m.group(2)__				String value = m.group(3)__				queryParam(name, (value != null ? value :_					(StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,m,matcher,query,while,m,find,string,name,m,group,1,string,eq,m,group,2,string,value,m,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1404917891;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher m = QUERY_PARAM_PATTERN.matcher(query)__			while (m.find()) {_				String name = m.group(1)__				String eq = m.group(2)__				String value = m.group(3)__				queryParam(name, (value != null ? value :_					(StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,m,matcher,query,while,m,find,string,name,m,group,1,string,eq,m,group,2,string,value,m,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1409317151;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher m = QUERY_PARAM_PATTERN.matcher(query)__			while (m.find()) {_				String name = m.group(1)__				String eq = m.group(2)__				String value = m.group(3)__				queryParam(name, (value != null ? value :_					(StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,m,matcher,query,while,m,find,string,name,m,group,1,string,eq,m,group,2,string,value,m,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1409318475;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher m = QUERY_PARAM_PATTERN.matcher(query)__			while (m.find()) {_				String name = m.group(1)__				String eq = m.group(2)__				String value = m.group(3)__				queryParam(name, (value != null ? value :_					(StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,m,matcher,query,while,m,find,string,name,m,group,1,string,eq,m,group,2,string,value,m,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1409822411;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1414695064;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1417799775;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1423547594;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1424274316;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1425610347;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1426255003;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1426266172;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1426267150;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1426553101;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1426880143;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1426880143;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1427143443;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1430734105;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1433951292;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1437567436;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1438166381;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1443431031;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1443797712;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1447791580;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1449004145;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1458830024;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1465299497;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1467730834;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1471517882;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1472594218;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1475874694;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1476136805;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1485553611;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder query(String query);1486074560;Append the given query to the existing query of this builder._The given query may contain URI template variables._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_UriComponentsBuilder.fromUriString(&quot_/hotels/42&quot_)_.query(&quot_filter={value}&quot_)_.buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param query the query string_@return this UriComponentsBuilder;public UriComponentsBuilder query(String query) {_		if (query != null) {_			Matcher matcher = QUERY_PARAM_PATTERN.matcher(query)__			while (matcher.find()) {_				String name = matcher.group(1)__				String eq = matcher.group(2)__				String value = matcher.group(3)__				queryParam(name, (value != null ? value : (StringUtils.hasLength(eq) ? "" : null)))__			}_		}_		else {_			this.queryParams.clear()__		}_		resetSchemeSpecificPart()__		return this__	};append,the,given,query,to,the,existing,query,of,this,builder,the,given,query,may,contain,uri,template,variables,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,uri,components,builder,from,uri,string,quot,hotels,42,quot,query,quot,filter,value,quot,build,and,expand,quot,hot,amp,cold,quot,pre,param,query,the,query,string,return,this,uri,components,builder;public,uri,components,builder,query,string,query,if,query,null,matcher,matcher,matcher,query,while,matcher,find,string,name,matcher,group,1,string,eq,matcher,group,2,string,value,matcher,group,3,query,param,name,value,null,value,string,utils,has,length,eq,null,else,this,query,params,clear,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1328020251;Returns a new, empty builder.__@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1329142650;Returns a new, empty builder.__@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1335903038;Returns a new, empty builder.__@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1345652603;Returns a new, empty builder.__@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1348582810;Returns a new, empty builder.__@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1349904861;Returns a new, empty builder.__@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1350918288;Returns a new, empty builder.__@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1356735495;Returns a new, empty builder.__@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1357119239;Returns a new, empty builder.__@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1362408075;Returns a new, empty builder.__@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1363208506;Returns a new, empty builder.__@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1367580131;Returns a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1367955086;Returns a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1368482696;Returns a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1375201821;Returns a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1380131933;Returns a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1382387167;Returns a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1382387168;Returns a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1382744567;Returns a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1382754578;Returns a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1391723719;Returns a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1400538909;Returns a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1400541968;Returns a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1403775847;Returns a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1404917891;Returns a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1409317151;Returns a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1409318475;Returns a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1409822411;Returns a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1414695064;Returns a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1417799775;Returns a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1423547594;Returns a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1424274316;Returns a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1425610347;Returns a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1426255003;Returns a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1426266172;Returns a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};returns,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1426267150;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1426553101;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1426880143;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1426880143;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1427143443;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1430734105;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1433951292;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1437567436;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1438166381;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1443431031;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1443797712;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1447791580;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1449004145;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1458830024;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1465299497;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1467730834;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1471517882;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1472594218;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1475874694;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1476136805;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1485553611;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1486074560;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1492678922;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1493758742;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1495868221;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1496259743;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1496370972;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1496837955;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1498780456;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1500460652;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1513715892;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1515504834;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1519588127;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1522332352;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1522351714;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1522361849;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1527192852;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1530174524;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1531746971;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1531843156;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1531863556;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1532041662;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1532041662;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1536571897;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1546464968;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1546963593;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public static UriComponentsBuilder newInstance();1547005422;Create a new, empty builder._@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder newInstance() {_		return new UriComponentsBuilder()__	};create,a,new,empty,builder,return,the,new,code,uri,components,builder;public,static,uri,components,builder,new,instance,return,new,uri,components,builder
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1328020251;Sets the URI fragment. The given fragment may contain URI template variables, and may also be {@code null} to clear_the fragment of this builder.__@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};sets,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1329142650;Sets the URI fragment. The given fragment may contain URI template variables, and may also be {@code null} to clear_the fragment of this builder.__@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};sets,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1335903038;Sets the URI fragment. The given fragment may contain URI template variables, and may also be {@code null} to clear_the fragment of this builder.__@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};sets,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1345652603;Sets the URI fragment. The given fragment may contain URI template_variables, and may also be {@code null} to clear the fragment of this_builder.__@param fragment_the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};sets,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1348582810;Sets the URI fragment. The given fragment may contain URI template_variables, and may also be {@code null} to clear the fragment of this_builder.__@param fragment_the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};sets,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1349904861;Sets the URI fragment. The given fragment may contain URI template_variables, and may also be {@code null} to clear the fragment of this_builder.__@param fragment_the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};sets,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1350918288;Sets the URI fragment. The given fragment may contain URI template_variables, and may also be {@code null} to clear the fragment of this_builder.__@param fragment_the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};sets,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1356735495;Sets the URI fragment. The given fragment may contain URI template_variables, and may also be {@code null} to clear the fragment of this_builder.__@param fragment_the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};sets,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1357119239;Sets the URI fragment. The given fragment may contain URI template_variables, and may also be {@code null} to clear the fragment of this_builder.__@param fragment_the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};sets,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1362408075;Sets the URI fragment. The given fragment may contain URI template_variables, and may also be {@code null} to clear the fragment of this_builder.__@param fragment_the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};sets,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1363208506;Sets the URI fragment. The given fragment may contain URI template_variables, and may also be {@code null} to clear the fragment of this_builder.__@param fragment_the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};sets,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1367580131;Sets the URI fragment. The given fragment may contain URI template_variables, and may also be {@code null} to clear the fragment of this_builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};sets,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1367955086;Sets the URI fragment. The given fragment may contain URI template_variables, and may also be {@code null} to clear the fragment of this_builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};sets,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1368482696;Sets the URI fragment. The given fragment may contain URI template_variables, and may also be {@code null} to clear the fragment of this_builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};sets,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1375201821;Sets the URI fragment. The given fragment may contain URI template_variables, and may also be {@code null} to clear the fragment of this_builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};sets,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1380131933;Sets the URI fragment. The given fragment may contain URI template_variables, and may also be {@code null} to clear the fragment of this_builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};sets,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1382387167;Sets the URI fragment. The given fragment may contain URI template_variables, and may also be {@code null} to clear the fragment of this_builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};sets,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1382387168;Sets the URI fragment. The given fragment may contain URI template_variables, and may also be {@code null} to clear the fragment of this_builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};sets,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1382744567;Sets the URI fragment. The given fragment may contain URI template_variables, and may also be {@code null} to clear the fragment of this_builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};sets,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1382754578;Sets the URI fragment. The given fragment may contain URI template_variables, and may also be {@code null} to clear the fragment of this_builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};sets,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1391723719;Sets the URI fragment. The given fragment may contain URI template_variables, and may also be {@code null} to clear the fragment of this_builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};sets,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1400538909;Sets the URI fragment. The given fragment may contain URI template_variables, and may also be {@code null} to clear the fragment of this_builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};sets,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1400541968;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1403775847;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1404917891;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1409317151;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1409318475;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1409822411;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1414695064;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1417799775;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1423547594;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1424274316;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1425610347;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1426255003;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1426266172;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1426267150;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1426553101;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1426880143;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1426880143;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1427143443;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1430734105;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1433951292;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1437567436;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "'fragment' must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1438166381;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1443431031;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1443797712;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1447791580;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1449004145;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1458830024;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1465299497;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1467730834;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1471517882;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1472594218;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1475874694;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1476136805;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1485553611;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponentsBuilder fragment(String fragment);1486074560;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponents build();1328020251;Builds a {@code UriComponents} instance from the various components contained in this builder.__@return the URI components;public UriComponents build() {_		return build(false)__	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1329142650;Builds a {@code UriComponents} instance from the various components contained in this builder.__@return the URI components;public UriComponents build() {_		return build(false)__	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1335903038;Builds a {@code UriComponents} instance from the various components contained in this builder.__@return the URI components;public UriComponents build() {_		return build(false)__	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1345652603;Builds a {@code UriComponents} instance from the various components contained in this builder.__@return the URI components;public UriComponents build() {_		return build(false)__	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1348582810;Builds a {@code UriComponents} instance from the various components contained in this builder.__@return the URI components;public UriComponents build() {_		return build(false)__	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1349904861;Builds a {@code UriComponents} instance from the various components contained in this builder.__@return the URI components;public UriComponents build() {_		return build(false)__	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1350918288;Builds a {@code UriComponents} instance from the various components contained in this builder.__@return the URI components;public UriComponents build() {_		return build(false)__	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1356735495;Builds a {@code UriComponents} instance from the various components contained in this builder.__@return the URI components;public UriComponents build() {_		return build(false)__	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1357119239;Builds a {@code UriComponents} instance from the various components contained in this builder.__@return the URI components;public UriComponents build() {_		return build(false)__	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1362408075;Builds a {@code UriComponents} instance from the various components contained in this builder.__@return the URI components;public UriComponents build() {_		return build(false)__	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1363208506;Builds a {@code UriComponents} instance from the various components contained in this builder.__@return the URI components;public UriComponents build() {_		return build(false)__	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1367580131;Builds a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1367955086;Builds a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1368482696;Builds a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1375201821;Builds a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1380131933;Builds a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1382387167;Builds a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1382387168;Builds a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1382744567;Builds a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1382754578;Builds a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1391723719;Builds a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1400538909;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1400541968;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1403775847;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1404917891;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1409317151;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1409318475;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1409822411;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1414695064;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1417799775;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1423547594;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1424274316;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1425610347;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1426255003;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1426266172;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1426267150;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1426553101;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1426880143;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1426880143;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1427143443;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1430734105;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1433951292;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1437567436;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1438166381;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1443431031;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1443797712;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1447791580;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1449004145;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1458830024;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1465299497;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1467730834;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1471517882;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1472594218;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1475874694;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1476136805;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1485553611;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1486074560;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1492678922;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1493758742;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1495868221;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1496259743;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1496370972;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1496837955;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1498780456;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1500460652;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1513715892;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1515504834;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1519588127;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1522332352;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1522351714;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1522361849;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1527192852;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1530174524;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1531746971;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1531843156;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1531863556;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1532041662;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1532041662;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1536571897;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1546464968;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1546963593;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public UriComponents build();1547005422;Build a {@code UriComponents} instance from the various components contained in this builder._@return the URI components;public UriComponents build() {_		return build(false)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,return,the,uri,components;public,uri,components,build,return,build,false
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1430734105;Create an instance by parsing the "origin" header of an HTTP request.;public static UriComponentsBuilder fromOriginHeader(String origin) {_		UriComponentsBuilder builder = UriComponentsBuilder.newInstance()__		if (StringUtils.hasText(origin)) {_			int schemaIdx = origin.indexOf("://")__			String schema = (schemaIdx != -1 ? origin.substring(0, schemaIdx) : "http")__			builder.scheme(schema)__			String hostString = (schemaIdx != -1 ? origin.substring(schemaIdx + 3) : origin)__			if (hostString.contains(":")) {_				String[] hostAndPort = StringUtils.split(hostString, ":")__				builder.host(hostAndPort[0])__				builder.port(Integer.parseInt(hostAndPort[1]))__			}_			else {_				builder.host(hostString)__			}_		}_		return builder__	};create,an,instance,by,parsing,the,origin,header,of,an,http,request;public,static,uri,components,builder,from,origin,header,string,origin,uri,components,builder,builder,uri,components,builder,new,instance,if,string,utils,has,text,origin,int,schema,idx,origin,index,of,string,schema,schema,idx,1,origin,substring,0,schema,idx,http,builder,scheme,schema,string,host,string,schema,idx,1,origin,substring,schema,idx,3,origin,if,host,string,contains,string,host,and,port,string,utils,split,host,string,builder,host,host,and,port,0,builder,port,integer,parse,int,host,and,port,1,else,builder,host,host,string,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1433951292;Create an instance by parsing the "origin" header of an HTTP request.;public static UriComponentsBuilder fromOriginHeader(String origin) {_		UriComponentsBuilder builder = UriComponentsBuilder.newInstance()__		if (StringUtils.hasText(origin)) {_			int schemaIdx = origin.indexOf("://")__			String schema = (schemaIdx != -1 ? origin.substring(0, schemaIdx) : "http")__			builder.scheme(schema)__			String hostString = (schemaIdx != -1 ? origin.substring(schemaIdx + 3) : origin)__			if (hostString.contains(":")) {_				String[] hostAndPort = StringUtils.split(hostString, ":")__				builder.host(hostAndPort[0])__				builder.port(Integer.parseInt(hostAndPort[1]))__			}_			else {_				builder.host(hostString)__			}_		}_		return builder__	};create,an,instance,by,parsing,the,origin,header,of,an,http,request;public,static,uri,components,builder,from,origin,header,string,origin,uri,components,builder,builder,uri,components,builder,new,instance,if,string,utils,has,text,origin,int,schema,idx,origin,index,of,string,schema,schema,idx,1,origin,substring,0,schema,idx,http,builder,scheme,schema,string,host,string,schema,idx,1,origin,substring,schema,idx,3,origin,if,host,string,contains,string,host,and,port,string,utils,split,host,string,builder,host,host,and,port,0,builder,port,integer,parse,int,host,and,port,1,else,builder,host,host,string,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1437567436;Create an instance by parsing the "origin" header of an HTTP request.;public static UriComponentsBuilder fromOriginHeader(String origin) {_		UriComponentsBuilder builder = UriComponentsBuilder.newInstance()__		if (StringUtils.hasText(origin)) {_			int schemaIdx = origin.indexOf("://")__			String schema = (schemaIdx != -1 ? origin.substring(0, schemaIdx) : "http")__			builder.scheme(schema)__			String hostString = (schemaIdx != -1 ? origin.substring(schemaIdx + 3) : origin)__			if (hostString.contains(":")) {_				String[] hostAndPort = StringUtils.split(hostString, ":")__				builder.host(hostAndPort[0])__				builder.port(Integer.parseInt(hostAndPort[1]))__			}_			else {_				builder.host(hostString)__			}_		}_		return builder__	};create,an,instance,by,parsing,the,origin,header,of,an,http,request;public,static,uri,components,builder,from,origin,header,string,origin,uri,components,builder,builder,uri,components,builder,new,instance,if,string,utils,has,text,origin,int,schema,idx,origin,index,of,string,schema,schema,idx,1,origin,substring,0,schema,idx,http,builder,scheme,schema,string,host,string,schema,idx,1,origin,substring,schema,idx,3,origin,if,host,string,contains,string,host,and,port,string,utils,split,host,string,builder,host,host,and,port,0,builder,port,integer,parse,int,host,and,port,1,else,builder,host,host,string,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1438166381;Create an instance by parsing the "origin" header of an HTTP request.;public static UriComponentsBuilder fromOriginHeader(String origin) {_		UriComponentsBuilder builder = UriComponentsBuilder.newInstance()__		if (StringUtils.hasText(origin)) {_			int schemaIdx = origin.indexOf("://")__			String schema = (schemaIdx != -1 ? origin.substring(0, schemaIdx) : "http")__			builder.scheme(schema)__			String hostString = (schemaIdx != -1 ? origin.substring(schemaIdx + 3) : origin)__			if (hostString.contains(":")) {_				String[] hostAndPort = StringUtils.split(hostString, ":")__				builder.host(hostAndPort[0])__				builder.port(Integer.parseInt(hostAndPort[1]))__			}_			else {_				builder.host(hostString)__			}_		}_		return builder__	};create,an,instance,by,parsing,the,origin,header,of,an,http,request;public,static,uri,components,builder,from,origin,header,string,origin,uri,components,builder,builder,uri,components,builder,new,instance,if,string,utils,has,text,origin,int,schema,idx,origin,index,of,string,schema,schema,idx,1,origin,substring,0,schema,idx,http,builder,scheme,schema,string,host,string,schema,idx,1,origin,substring,schema,idx,3,origin,if,host,string,contains,string,host,and,port,string,utils,split,host,string,builder,host,host,and,port,0,builder,port,integer,parse,int,host,and,port,1,else,builder,host,host,string,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1443431031;Create an instance by parsing the "origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		UriComponentsBuilder builder = UriComponentsBuilder.newInstance()__		if (StringUtils.hasText(origin)) {_			int schemaIdx = origin.indexOf("://")__			String schema = (schemaIdx != -1 ? origin.substring(0, schemaIdx) : "http")__			builder.scheme(schema)__			String hostString = (schemaIdx != -1 ? origin.substring(schemaIdx + 3) : origin)__			_			int firstSlashIdx = hostString.indexOf("/")__			if (firstSlashIdx != -1) {_				hostString = hostString.substring(0, firstSlashIdx)__			}_			if (hostString.contains(":")) {_				String[] hostAndPort = StringUtils.split(hostString, ":")__				builder.host(hostAndPort[0])__				builder.port(Integer.parseInt(hostAndPort[1]))__			}_			else {_				builder.host(hostString)__			}_		}_		return builder__	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,uri,components,builder,builder,uri,components,builder,new,instance,if,string,utils,has,text,origin,int,schema,idx,origin,index,of,string,schema,schema,idx,1,origin,substring,0,schema,idx,http,builder,scheme,schema,string,host,string,schema,idx,1,origin,substring,schema,idx,3,origin,int,first,slash,idx,host,string,index,of,if,first,slash,idx,1,host,string,host,string,substring,0,first,slash,idx,if,host,string,contains,string,host,and,port,string,utils,split,host,string,builder,host,host,and,port,0,builder,port,integer,parse,int,host,and,port,1,else,builder,host,host,string,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1443797712;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1447791580;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1449004145;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1458830024;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1465299497;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1467730834;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1471517882;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1472594218;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1475874694;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1476136805;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1485553611;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1486074560;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1492678922;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1493758742;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1495868221;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1496259743;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1496370972;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1496837955;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1498780456;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1500460652;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1513715892;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1515504834;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1519588127;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1522332352;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1522351714;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1522361849;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1527192852;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1530174524;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1531746971;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1531843156;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1531863556;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1532041662;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1532041662;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1536571897;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1546464968;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1546963593;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> public static UriComponentsBuilder fromOriginHeader(String origin);1547005422;Create an instance by parsing the "Origin" header of an HTTP request._@see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454</a>;public static UriComponentsBuilder fromOriginHeader(String origin) {_		Matcher matcher = URI_PATTERN.matcher(origin)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String host = matcher.group(6)__			String port = matcher.group(8)__			if (StringUtils.hasLength(scheme)) {_				builder.scheme(scheme)__			}_			builder.host(host)__			if (StringUtils.hasLength(port)) {_				builder.port(port)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value")__		}_	};create,an,instance,by,parsing,the,origin,header,of,an,http,request,see,a,href,https,tools,ietf,org,html,rfc6454,rfc,6454,a;public,static,uri,components,builder,from,origin,header,string,origin,matcher,matcher,matcher,origin,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,host,matcher,group,6,string,port,matcher,group,8,if,string,utils,has,length,scheme,builder,scheme,scheme,builder,host,host,if,string,utils,has,length,port,builder,port,port,return,builder,else,throw,new,illegal,argument,exception,origin,is,not,a,valid,origin,header,value
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replacePath(String path);1492678922;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;override,public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replacePath(String path);1493758742;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;override,public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1492678922;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;override,public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1493758742;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;override,public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1495868221;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;override,public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1496259743;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;override,public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1496370972;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;override,public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1496837955;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;override,public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1498780456;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;override,public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1500460652;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;override,public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1513715892;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;override,public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1515504834;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;override,public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1519588127;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;override,public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1522332352;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;override,public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1522351714;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;override,public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1522361849;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;override,public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1527192852;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;override,public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1530174524;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;override,public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1531746971;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;override,public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1531843156;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;override,public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1531863556;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;override,public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1532041662;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;override,public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1532041662;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;override,public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1536571897;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;override,public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1546464968;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;override,public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1546963593;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;override,public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException;1547005422;Append path segments to the existing path. Each path segment may contain_URI template variables and should not contain any slashes._Use {@code path("/")} subsequently to ensure a trailing slash._@param pathSegments the URI path segments_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {_		this.pathBuilder.addPathSegments(pathSegments)__		resetSchemeSpecificPart()__		return this__	};append,path,segments,to,the,existing,path,each,path,segment,may,contain,uri,template,variables,and,should,not,contain,any,slashes,use,code,path,subsequently,to,ensure,a,trailing,slash,param,path,segments,the,uri,path,segments,return,this,uri,components,builder;override,public,uri,components,builder,path,segment,string,path,segments,throws,illegal,argument,exception,this,path,builder,add,path,segments,path,segments,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1328020251;Sets the path of this builder overriding all existing path and path segment values.__@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = NULL_PATH_COMPONENT_BUILDER__		path(path)__		return this__	};sets,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,path,path,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1329142650;Sets the path of this builder overriding all existing path and path segment values.__@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = NULL_PATH_COMPONENT_BUILDER__		path(path)__		return this__	};sets,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,path,path,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1335903038;Sets the path of this builder overriding all existing path and path segment values.__@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = NULL_PATH_COMPONENT_BUILDER__		path(path)__		return this__	};sets,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,path,path,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1345652603;Sets the path of this builder overriding all existing path and path segment values.__@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = NULL_PATH_COMPONENT_BUILDER__		path(path)__		return this__	};sets,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,path,path,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1348582810;Sets the path of this builder overriding all existing path and path segment values.__@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = NULL_PATH_COMPONENT_BUILDER__		path(path)__		resetSchemeSpecificPart()__		return this__	};sets,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1349904861;Sets the path of this builder overriding all existing path and path segment values.__@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = NULL_PATH_COMPONENT_BUILDER__		path(path)__		resetSchemeSpecificPart()__		return this__	};sets,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1350918288;Sets the path of this builder overriding all existing path and path segment values.__@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = NULL_PATH_COMPONENT_BUILDER__		path(path)__		resetSchemeSpecificPart()__		return this__	};sets,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1356735495;Sets the path of this builder overriding all existing path and path segment values.__@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = NULL_PATH_COMPONENT_BUILDER__		path(path)__		resetSchemeSpecificPart()__		return this__	};sets,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1357119239;Sets the path of this builder overriding all existing path and path segment values.__@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = NULL_PATH_COMPONENT_BUILDER__		path(path)__		resetSchemeSpecificPart()__		return this__	};sets,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1362408075;Sets the path of this builder overriding all existing path and path segment values.__@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};sets,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1363208506;Sets the path of this builder overriding all existing path and path segment values.__@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};sets,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1367580131;Sets the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};sets,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1367955086;Sets the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};sets,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1368482696;Sets the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};sets,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1375201821;Sets the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};sets,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1380131933;Sets the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};sets,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1382387167;Sets the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};sets,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1382387168;Sets the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};sets,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1382744567;Sets the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};sets,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1382754578;Sets the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};sets,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1391723719;Sets the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};sets,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1400538909;Sets the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};sets,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1400541968;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1403775847;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1404917891;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1409317151;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1409318475;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1409822411;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1414695064;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1417799775;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1423547594;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1424274316;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1425610347;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1426255003;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1426266172;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1426267150;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1426553101;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1426880143;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1426880143;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1427143443;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1430734105;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1433951292;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1437567436;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1438166381;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1443431031;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1443797712;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1447791580;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1449004145;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1458830024;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1465299497;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1467730834;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1471517882;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1472594218;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1475874694;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1476136805;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1485553611;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder replacePath(String path);1486074560;Set the path of this builder overriding all existing path and path segment values._@param path the URI path_ a {@code null} value results in an empty path._@return this UriComponentsBuilder;public UriComponentsBuilder replacePath(String path) {_		this.pathBuilder = new CompositePathComponentBuilder(path)__		resetSchemeSpecificPart()__		return this__	};set,the,path,of,this,builder,overriding,all,existing,path,and,path,segment,values,param,path,the,uri,path,a,code,null,value,results,in,an,empty,path,return,this,uri,components,builder;public,uri,components,builder,replace,path,string,path,this,path,builder,new,composite,path,component,builder,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1328020251;Returns a builder that is initialized with the given URI string.__@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher m = URI_PATTERN.matcher(uri)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			builder.scheme(m.group(2))__			builder.userInfo(m.group(5))__			builder.host(m.group(6))__			String port = m.group(8)__			if (StringUtils.hasLength(port)) {_				builder.port(Integer.parseInt(port))__			}_			builder.path(m.group(9))__			builder.query(m.group(11))__			builder.fragment(m.group(13))___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,m,matcher,uri,if,m,matches,uri,components,builder,builder,new,uri,components,builder,builder,scheme,m,group,2,builder,user,info,m,group,5,builder,host,m,group,6,string,port,m,group,8,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,m,group,9,builder,query,m,group,11,builder,fragment,m,group,13,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1329142650;Returns a builder that is initialized with the given URI string.__@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher m = URI_PATTERN.matcher(uri)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			builder.scheme(m.group(2))__			builder.userInfo(m.group(5))__			builder.host(m.group(6))__			String port = m.group(8)__			if (StringUtils.hasLength(port)) {_				builder.port(Integer.parseInt(port))__			}_			builder.path(m.group(9))__			builder.query(m.group(11))__			builder.fragment(m.group(13))___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,m,matcher,uri,if,m,matches,uri,components,builder,builder,new,uri,components,builder,builder,scheme,m,group,2,builder,user,info,m,group,5,builder,host,m,group,6,string,port,m,group,8,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,m,group,9,builder,query,m,group,11,builder,fragment,m,group,13,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1335903038;Returns a builder that is initialized with the given URI string.__@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher m = URI_PATTERN.matcher(uri)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			builder.scheme(m.group(2))__			builder.userInfo(m.group(5))__			builder.host(m.group(6))__			String port = m.group(8)__			if (StringUtils.hasLength(port)) {_				builder.port(Integer.parseInt(port))__			}_			builder.path(m.group(9))__			builder.query(m.group(11))__			builder.fragment(m.group(13))___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,m,matcher,uri,if,m,matches,uri,components,builder,builder,new,uri,components,builder,builder,scheme,m,group,2,builder,user,info,m,group,5,builder,host,m,group,6,string,port,m,group,8,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,m,group,9,builder,query,m,group,11,builder,fragment,m,group,13,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1345652603;Returns a builder that is initialized with the given URI string.__<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:__<pre>_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>__@param uri_the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher m = URI_PATTERN.matcher(uri)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			builder.scheme(m.group(2))__			builder.userInfo(m.group(5))__			builder.host(m.group(6))__			String port = m.group(8)__			if (StringUtils.hasLength(port)) {_				builder.port(Integer.parseInt(port))__			}_			builder.path(m.group(9))__			builder.query(m.group(11))__			builder.fragment(m.group(13))___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,m,matcher,uri,if,m,matches,uri,components,builder,builder,new,uri,components,builder,builder,scheme,m,group,2,builder,user,info,m,group,5,builder,host,m,group,6,string,port,m,group,8,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,m,group,9,builder,query,m,group,11,builder,fragment,m,group,13,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1348582810;Returns a builder that is initialized with the given URI string.__<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:__<pre>_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>__@param uri_the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher m = URI_PATTERN.matcher(uri)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			String scheme = m.group(2)__			String userInfo = m.group(5)__			String host = m.group(6)__			String port = m.group(8)__			String path = m.group(9)__			String query = m.group(11)__			String fragment = m.group(13)___			boolean opaque = false___			if (StringUtils.hasLength(scheme)) {_				String s = uri.substring(scheme.length())__				if (!s.startsWith(":/")) {_					opaque = true__				}_			}__			builder.scheme(scheme)____			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(Integer.parseInt(port))__				}_				builder.path(path)__				builder.query(query)__			}_			builder.fragment(fragment)___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,m,matcher,uri,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,2,string,user,info,m,group,5,string,host,m,group,6,string,port,m,group,8,string,path,m,group,9,string,query,m,group,11,string,fragment,m,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,s,uri,substring,scheme,length,if,s,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,path,builder,query,query,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1349904861;Returns a builder that is initialized with the given URI string.__<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:__<pre>_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>__@param uri_the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher m = URI_PATTERN.matcher(uri)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			String scheme = m.group(2)__			String userInfo = m.group(5)__			String host = m.group(6)__			String port = m.group(8)__			String path = m.group(9)__			String query = m.group(11)__			String fragment = m.group(13)___			boolean opaque = false___			if (StringUtils.hasLength(scheme)) {_				String s = uri.substring(scheme.length())__				if (!s.startsWith(":/")) {_					opaque = true__				}_			}__			builder.scheme(scheme)____			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(Integer.parseInt(port))__				}_				builder.path(path)__				builder.query(query)__			}_			builder.fragment(fragment)___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,m,matcher,uri,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,2,string,user,info,m,group,5,string,host,m,group,6,string,port,m,group,8,string,path,m,group,9,string,query,m,group,11,string,fragment,m,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,s,uri,substring,scheme,length,if,s,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,path,builder,query,query,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1350918288;Returns a builder that is initialized with the given URI string.__<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:__<pre>_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>__@param uri_the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher m = URI_PATTERN.matcher(uri)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			String scheme = m.group(2)__			String userInfo = m.group(5)__			String host = m.group(6)__			String port = m.group(8)__			String path = m.group(9)__			String query = m.group(11)__			String fragment = m.group(13)___			boolean opaque = false___			if (StringUtils.hasLength(scheme)) {_				String s = uri.substring(scheme.length())__				if (!s.startsWith(":/")) {_					opaque = true__				}_			}__			builder.scheme(scheme)____			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(Integer.parseInt(port))__				}_				builder.path(path)__				builder.query(query)__			}_			builder.fragment(fragment)___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,m,matcher,uri,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,2,string,user,info,m,group,5,string,host,m,group,6,string,port,m,group,8,string,path,m,group,9,string,query,m,group,11,string,fragment,m,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,s,uri,substring,scheme,length,if,s,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,path,builder,query,query,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1356735495;Returns a builder that is initialized with the given URI string.__<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:__<pre>_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>__@param uri_the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher m = URI_PATTERN.matcher(uri)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			String scheme = m.group(2)__			String userInfo = m.group(5)__			String host = m.group(6)__			String port = m.group(8)__			String path = m.group(9)__			String query = m.group(11)__			String fragment = m.group(13)___			boolean opaque = false___			if (StringUtils.hasLength(scheme)) {_				String s = uri.substring(scheme.length())__				if (!s.startsWith(":/")) {_					opaque = true__				}_			}__			builder.scheme(scheme)____			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(Integer.parseInt(port))__				}_				builder.path(path)__				builder.query(query)__			}_			builder.fragment(fragment)___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,m,matcher,uri,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,2,string,user,info,m,group,5,string,host,m,group,6,string,port,m,group,8,string,path,m,group,9,string,query,m,group,11,string,fragment,m,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,s,uri,substring,scheme,length,if,s,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,path,builder,query,query,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1357119239;Returns a builder that is initialized with the given URI string.__<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:__<pre>_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>__@param uri_the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher m = URI_PATTERN.matcher(uri)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			String scheme = m.group(2)__			String userInfo = m.group(5)__			String host = m.group(6)__			String port = m.group(8)__			String path = m.group(9)__			String query = m.group(11)__			String fragment = m.group(13)___			boolean opaque = false___			if (StringUtils.hasLength(scheme)) {_				String s = uri.substring(scheme.length())__				if (!s.startsWith(":/")) {_					opaque = true__				}_			}__			builder.scheme(scheme)____			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(Integer.parseInt(port))__				}_				builder.path(path)__				builder.query(query)__			}_			builder.fragment(fragment)___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,m,matcher,uri,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,2,string,user,info,m,group,5,string,host,m,group,6,string,port,m,group,8,string,path,m,group,9,string,query,m,group,11,string,fragment,m,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,s,uri,substring,scheme,length,if,s,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,path,builder,query,query,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1362408075;Returns a builder that is initialized with the given URI string.__<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:__<pre>_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>__@param uri_the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher m = URI_PATTERN.matcher(uri)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			String scheme = m.group(2)__			String userInfo = m.group(5)__			String host = m.group(6)__			String port = m.group(8)__			String path = m.group(9)__			String query = m.group(11)__			String fragment = m.group(13)___			boolean opaque = false___			if (StringUtils.hasLength(scheme)) {_				String s = uri.substring(scheme.length())__				if (!s.startsWith(":/")) {_					opaque = true__				}_			}__			builder.scheme(scheme)____			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(Integer.parseInt(port))__				}_				builder.path(path)__				builder.query(query)__			}_			builder.fragment(fragment)___			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,m,matcher,uri,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,2,string,user,info,m,group,5,string,host,m,group,6,string,port,m,group,8,string,path,m,group,9,string,query,m,group,11,string,fragment,m,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,s,uri,substring,scheme,length,if,s,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,path,builder,query,query,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1363208506;Returns a builder that is initialized with the given URI string.__<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:__<pre>_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>__@param uri_the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher m = URI_PATTERN.matcher(uri)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()___			String scheme = m.group(2)__			String userInfo = m.group(5)__			String host = m.group(6)__			String port = m.group(8)__			String path = m.group(9)__			String query = m.group(11)__			String fragment = m.group(13)___			boolean opaque = false___			if (StringUtils.hasLength(scheme)) {_				String s = uri.substring(scheme.length())__				if (!s.startsWith(":/")) {_					opaque = true__				}_			}__			builder.scheme(scheme)____			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(Integer.parseInt(port))__				}_				builder.path(path)__				builder.query(query)__			}__			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}__			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,m,matcher,uri,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,2,string,user,info,m,group,5,string,host,m,group,6,string,port,m,group,8,string,path,m,group,9,string,query,m,group,11,string,fragment,m,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,s,uri,substring,scheme,length,if,s,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1367580131;Returns a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre>_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher m = URI_PATTERN.matcher(uri)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = m.group(2)__			String userInfo = m.group(5)__			String host = m.group(6)__			String port = m.group(8)__			String path = m.group(9)__			String query = m.group(11)__			String fragment = m.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String s = uri.substring(scheme.length())__				if (!s.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(Integer.parseInt(port))__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,m,matcher,uri,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,2,string,user,info,m,group,5,string,host,m,group,6,string,port,m,group,8,string,path,m,group,9,string,query,m,group,11,string,fragment,m,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,s,uri,substring,scheme,length,if,s,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1367955086;Returns a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher m = URI_PATTERN.matcher(uri)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = m.group(2)__			String userInfo = m.group(5)__			String host = m.group(6)__			String port = m.group(8)__			String path = m.group(9)__			String query = m.group(11)__			String fragment = m.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String s = uri.substring(scheme.length())__				if (!s.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(Integer.parseInt(port))__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,m,matcher,uri,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,2,string,user,info,m,group,5,string,host,m,group,6,string,port,m,group,8,string,path,m,group,9,string,query,m,group,11,string,fragment,m,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,s,uri,substring,scheme,length,if,s,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1368482696;Returns a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher m = URI_PATTERN.matcher(uri)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = m.group(2)__			String userInfo = m.group(5)__			String host = m.group(6)__			String port = m.group(8)__			String path = m.group(9)__			String query = m.group(11)__			String fragment = m.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String s = uri.substring(scheme.length())__				if (!s.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(Integer.parseInt(port))__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,m,matcher,uri,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,2,string,user,info,m,group,5,string,host,m,group,6,string,port,m,group,8,string,path,m,group,9,string,query,m,group,11,string,fragment,m,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,s,uri,substring,scheme,length,if,s,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1375201821;Returns a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher m = URI_PATTERN.matcher(uri)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = m.group(2)__			String userInfo = m.group(5)__			String host = m.group(6)__			String port = m.group(8)__			String path = m.group(9)__			String query = m.group(11)__			String fragment = m.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String s = uri.substring(scheme.length())__				if (!s.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(Integer.parseInt(port))__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,m,matcher,uri,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,2,string,user,info,m,group,5,string,host,m,group,6,string,port,m,group,8,string,path,m,group,9,string,query,m,group,11,string,fragment,m,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,s,uri,substring,scheme,length,if,s,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1380131933;Returns a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher m = URI_PATTERN.matcher(uri)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = m.group(2)__			String userInfo = m.group(5)__			String host = m.group(6)__			String port = m.group(8)__			String path = m.group(9)__			String query = m.group(11)__			String fragment = m.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String s = uri.substring(scheme.length())__				if (!s.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(Integer.parseInt(port))__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,m,matcher,uri,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,2,string,user,info,m,group,5,string,host,m,group,6,string,port,m,group,8,string,path,m,group,9,string,query,m,group,11,string,fragment,m,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,s,uri,substring,scheme,length,if,s,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1382387167;Returns a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher m = URI_PATTERN.matcher(uri)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = m.group(2)__			String userInfo = m.group(5)__			String host = m.group(6)__			String port = m.group(8)__			String path = m.group(9)__			String query = m.group(11)__			String fragment = m.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String s = uri.substring(scheme.length())__				if (!s.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(Integer.parseInt(port))__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,m,matcher,uri,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,2,string,user,info,m,group,5,string,host,m,group,6,string,port,m,group,8,string,path,m,group,9,string,query,m,group,11,string,fragment,m,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,s,uri,substring,scheme,length,if,s,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1382387168;Returns a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher m = URI_PATTERN.matcher(uri)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = m.group(2)__			String userInfo = m.group(5)__			String host = m.group(6)__			String port = m.group(8)__			String path = m.group(9)__			String query = m.group(11)__			String fragment = m.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String s = uri.substring(scheme.length())__				if (!s.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(Integer.parseInt(port))__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,m,matcher,uri,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,2,string,user,info,m,group,5,string,host,m,group,6,string,port,m,group,8,string,path,m,group,9,string,query,m,group,11,string,fragment,m,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,s,uri,substring,scheme,length,if,s,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1382744567;Returns a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher m = URI_PATTERN.matcher(uri)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = m.group(2)__			String userInfo = m.group(5)__			String host = m.group(6)__			String port = m.group(8)__			String path = m.group(9)__			String query = m.group(11)__			String fragment = m.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String s = uri.substring(scheme.length())__				if (!s.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(Integer.parseInt(port))__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,m,matcher,uri,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,2,string,user,info,m,group,5,string,host,m,group,6,string,port,m,group,8,string,path,m,group,9,string,query,m,group,11,string,fragment,m,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,s,uri,substring,scheme,length,if,s,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1382754578;Returns a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher m = URI_PATTERN.matcher(uri)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = m.group(2)__			String userInfo = m.group(5)__			String host = m.group(6)__			String port = m.group(8)__			String path = m.group(9)__			String query = m.group(11)__			String fragment = m.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String s = uri.substring(scheme.length())__				if (!s.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(Integer.parseInt(port))__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,m,matcher,uri,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,2,string,user,info,m,group,5,string,host,m,group,6,string,port,m,group,8,string,path,m,group,9,string,query,m,group,11,string,fragment,m,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,s,uri,substring,scheme,length,if,s,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1391723719;Returns a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher m = URI_PATTERN.matcher(uri)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = m.group(2)__			String userInfo = m.group(5)__			String host = m.group(6)__			String port = m.group(8)__			String path = m.group(9)__			String query = m.group(11)__			String fragment = m.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String s = uri.substring(scheme.length())__				if (!s.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(Integer.parseInt(port))__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,m,matcher,uri,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,2,string,user,info,m,group,5,string,host,m,group,6,string,port,m,group,8,string,path,m,group,9,string,query,m,group,11,string,fragment,m,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,s,uri,substring,scheme,length,if,s,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1400538909;Returns a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher m = URI_PATTERN.matcher(uri)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = m.group(2)__			String userInfo = m.group(5)__			String host = m.group(6)__			String port = m.group(8)__			String path = m.group(9)__			String query = m.group(11)__			String fragment = m.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String s = uri.substring(scheme.length())__				if (!s.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(Integer.parseInt(port))__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,m,matcher,uri,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,2,string,user,info,m,group,5,string,host,m,group,6,string,port,m,group,8,string,path,m,group,9,string,query,m,group,11,string,fragment,m,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,s,uri,substring,scheme,length,if,s,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1400541968;Returns a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher m = URI_PATTERN.matcher(uri)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = m.group(2)__			String userInfo = m.group(5)__			String host = m.group(6)__			String port = m.group(8)__			String path = m.group(9)__			String query = m.group(11)__			String fragment = m.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String s = uri.substring(scheme.length())__				if (!s.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(Integer.parseInt(port))__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,m,matcher,uri,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,2,string,user,info,m,group,5,string,host,m,group,6,string,port,m,group,8,string,path,m,group,9,string,query,m,group,11,string,fragment,m,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,s,uri,substring,scheme,length,if,s,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1403775847;Returns a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher m = URI_PATTERN.matcher(uri)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = m.group(2)__			String userInfo = m.group(5)__			String host = m.group(6)__			String port = m.group(8)__			String path = m.group(9)__			String query = m.group(11)__			String fragment = m.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String s = uri.substring(scheme.length())__				if (!s.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(Integer.parseInt(port))__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,m,matcher,uri,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,2,string,user,info,m,group,5,string,host,m,group,6,string,port,m,group,8,string,path,m,group,9,string,query,m,group,11,string,fragment,m,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,s,uri,substring,scheme,length,if,s,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1404917891;Returns a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher m = URI_PATTERN.matcher(uri)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = m.group(2)__			String userInfo = m.group(5)__			String host = m.group(6)__			String port = m.group(8)__			String path = m.group(9)__			String query = m.group(11)__			String fragment = m.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String s = uri.substring(scheme.length())__				if (!s.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(Integer.parseInt(port))__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,m,matcher,uri,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,2,string,user,info,m,group,5,string,host,m,group,6,string,port,m,group,8,string,path,m,group,9,string,query,m,group,11,string,fragment,m,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,s,uri,substring,scheme,length,if,s,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,integer,parse,int,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1409317151;Returns a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher m = URI_PATTERN.matcher(uri)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = m.group(2)__			String userInfo = m.group(5)__			String host = m.group(6)__			String port = m.group(8)__			String path = m.group(9)__			String query = m.group(11)__			String fragment = m.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String s = uri.substring(scheme.length())__				if (!s.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,m,matcher,uri,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,2,string,user,info,m,group,5,string,host,m,group,6,string,port,m,group,8,string,path,m,group,9,string,query,m,group,11,string,fragment,m,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,s,uri,substring,scheme,length,if,s,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1409318475;Returns a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher m = URI_PATTERN.matcher(uri)__		if (m.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = m.group(2)__			String userInfo = m.group(5)__			String host = m.group(6)__			String port = m.group(8)__			String path = m.group(9)__			String query = m.group(11)__			String fragment = m.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String s = uri.substring(scheme.length())__				if (!s.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,m,matcher,uri,if,m,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,m,group,2,string,user,info,m,group,5,string,host,m,group,6,string,port,m,group,8,string,path,m,group,9,string,query,m,group,11,string,fragment,m,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,s,uri,substring,scheme,length,if,s,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1409822411;Returns a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1414695064;Returns a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1417799775;Returns a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1423547594;Returns a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1424274316;Returns a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1425610347;Returns a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1426255003;Returns a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1426266172;Returns a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};returns,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1426267150;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1426553101;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1426880143;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1426880143;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1427143443;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1430734105;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1433951292;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.hasLength(uri, "'uri' must not be empty")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,has,length,uri,uri,must,not,be,empty,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1437567436;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "'uri' must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1438166381;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1443431031;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1443797712;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1447791580;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1449004145;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1458830024;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1465299497;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1467730834;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1471517882;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1472594218;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1475874694;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1476136805;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1485553611;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1486074560;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1492678922;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1493758742;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1495868221;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1496259743;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1496370972;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1496837955;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1498780456;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1500460652;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1513715892;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1515504834;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1519588127;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1522332352;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1522351714;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1522361849;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1527192852;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1530174524;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1531746971;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1531843156;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1531863556;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1532041662;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1532041662;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1536571897;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1546464968;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1546963593;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public static UriComponentsBuilder fromUriString(String uri);1547005422;Create a builder that is initialized with the given URI string._<p><strong>Note:</strong> The presence of reserved characters can prevent_correct parsing of the URI string. For example if a query parameter_contains {@code '='} or {@code '&'} characters, the query string cannot_be parsed unambiguously. Such values should be substituted for URI_variables to enable correct parsing:_<pre class="code">_String uriString = &quot_/hotels/42?filter={value}&quot___UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot_hot&amp_cold&quot_)__</pre>_@param uri the URI string to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUriString(String uri) {_		Assert.notNull(uri, "URI must not be null")__		Matcher matcher = URI_PATTERN.matcher(uri)__		if (matcher.matches()) {_			UriComponentsBuilder builder = new UriComponentsBuilder()__			String scheme = matcher.group(2)__			String userInfo = matcher.group(5)__			String host = matcher.group(6)__			String port = matcher.group(8)__			String path = matcher.group(9)__			String query = matcher.group(11)__			String fragment = matcher.group(13)__			boolean opaque = false__			if (StringUtils.hasLength(scheme)) {_				String rest = uri.substring(scheme.length())__				if (!rest.startsWith(":/")) {_					opaque = true__				}_			}_			builder.scheme(scheme)__			if (opaque) {_				String ssp = uri.substring(scheme.length()).substring(1)__				if (StringUtils.hasLength(fragment)) {_					ssp = ssp.substring(0, ssp.length() - (fragment.length() + 1))__				}_				builder.schemeSpecificPart(ssp)__			}_			else {_				builder.userInfo(userInfo)__				builder.host(host)__				if (StringUtils.hasLength(port)) {_					builder.port(port)__				}_				builder.path(path)__				builder.query(query)__			}_			if (StringUtils.hasText(fragment)) {_				builder.fragment(fragment)__			}_			return builder__		}_		else {_			throw new IllegalArgumentException("[" + uri + "] is not a valid URI")__		}_	};create,a,builder,that,is,initialized,with,the,given,uri,string,p,strong,note,strong,the,presence,of,reserved,characters,can,prevent,correct,parsing,of,the,uri,string,for,example,if,a,query,parameter,contains,code,or,code,characters,the,query,string,cannot,be,parsed,unambiguously,such,values,should,be,substituted,for,uri,variables,to,enable,correct,parsing,pre,class,code,string,uri,string,quot,hotels,42,filter,value,quot,uri,components,builder,from,uri,string,uri,string,build,and,expand,quot,hot,amp,cold,quot,pre,param,uri,the,uri,string,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,string,string,uri,assert,not,null,uri,uri,must,not,be,null,matcher,matcher,matcher,uri,if,matcher,matches,uri,components,builder,builder,new,uri,components,builder,string,scheme,matcher,group,2,string,user,info,matcher,group,5,string,host,matcher,group,6,string,port,matcher,group,8,string,path,matcher,group,9,string,query,matcher,group,11,string,fragment,matcher,group,13,boolean,opaque,false,if,string,utils,has,length,scheme,string,rest,uri,substring,scheme,length,if,rest,starts,with,opaque,true,builder,scheme,scheme,if,opaque,string,ssp,uri,substring,scheme,length,substring,1,if,string,utils,has,length,fragment,ssp,ssp,substring,0,ssp,length,fragment,length,1,builder,scheme,specific,part,ssp,else,builder,user,info,user,info,builder,host,host,if,string,utils,has,length,port,builder,port,port,builder,path,path,builder,query,query,if,string,utils,has,text,fragment,builder,fragment,fragment,return,builder,else,throw,new,illegal,argument,exception,uri,is,not,a,valid,uri
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params);1426880143;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params) {_		Assert.notNull(params, "'params' must not be null")__		this.queryParams.clear()__		this.queryParams.putAll(params)__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder;public,uri,components,builder,replace,query,params,multi,value,map,string,string,params,assert,not,null,params,params,must,not,be,null,this,query,params,clear,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params);1426880143;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params) {_		Assert.notNull(params, "'params' must not be null")__		this.queryParams.clear()__		this.queryParams.putAll(params)__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder;public,uri,components,builder,replace,query,params,multi,value,map,string,string,params,assert,not,null,params,params,must,not,be,null,this,query,params,clear,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params);1427143443;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params) {_		Assert.notNull(params, "'params' must not be null")__		this.queryParams.clear()__		this.queryParams.putAll(params)__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder;public,uri,components,builder,replace,query,params,multi,value,map,string,string,params,assert,not,null,params,params,must,not,be,null,this,query,params,clear,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params);1430734105;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params) {_		Assert.notNull(params, "'params' must not be null")__		this.queryParams.clear()__		this.queryParams.putAll(params)__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder;public,uri,components,builder,replace,query,params,multi,value,map,string,string,params,assert,not,null,params,params,must,not,be,null,this,query,params,clear,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params);1433951292;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params) {_		Assert.notNull(params, "'params' must not be null")__		this.queryParams.clear()__		this.queryParams.putAll(params)__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder;public,uri,components,builder,replace,query,params,multi,value,map,string,string,params,assert,not,null,params,params,must,not,be,null,this,query,params,clear,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params);1437567436;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params) {_		Assert.notNull(params, "'params' must not be null")__		this.queryParams.clear()__		this.queryParams.putAll(params)__		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder;public,uri,components,builder,replace,query,params,multi,value,map,string,string,params,assert,not,null,params,params,must,not,be,null,this,query,params,clear,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params);1438166381;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder;public,uri,components,builder,replace,query,params,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params);1443431031;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder;public,uri,components,builder,replace,query,params,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params);1443797712;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder;public,uri,components,builder,replace,query,params,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params);1447791580;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder;public,uri,components,builder,replace,query,params,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params);1449004145;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder;public,uri,components,builder,replace,query,params,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params);1458830024;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder;public,uri,components,builder,replace,query,params,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params);1465299497;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder;public,uri,components,builder,replace,query,params,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params);1467730834;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder;public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder;public,uri,components,builder,replace,query,params,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params);1471517882;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder_@since 4.2;public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder,since,4,2;public,uri,components,builder,replace,query,params,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params);1472594218;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder_@since 4.2;public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder,since,4,2;public,uri,components,builder,replace,query,params,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params);1475874694;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder_@since 4.2;public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder,since,4,2;public,uri,components,builder,replace,query,params,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params);1476136805;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder_@since 4.2;public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder,since,4,2;public,uri,components,builder,replace,query,params,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params);1485553611;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder_@since 4.2;public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder,since,4,2;public,uri,components,builder,replace,query,params,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params);1486074560;Set the query parameter values overriding all existing query values._@param params the query parameter name_@return this UriComponentsBuilder_@since 4.2;public UriComponentsBuilder replaceQueryParams(MultiValueMap<String, String> params) {_		this.queryParams.clear()__		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};set,the,query,parameter,values,overriding,all,existing,query,values,param,params,the,query,parameter,name,return,this,uri,components,builder,since,4,2;public,uri,components,builder,replace,query,params,multi,value,map,string,string,params,this,query,params,clear,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1328020251;Sets the URI scheme. The given scheme may contain URI template variables, and may also be {@code null} to clear the_scheme of this builder.__@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};sets,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1329142650;Sets the URI scheme. The given scheme may contain URI template variables, and may also be {@code null} to clear the_scheme of this builder.__@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};sets,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1335903038;Sets the URI scheme. The given scheme may contain URI template variables, and may also be {@code null} to clear the_scheme of this builder.__@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};sets,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1345652603;Sets the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder.__@param scheme_the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};sets,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1348582810;Sets the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder.__@param scheme_the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};sets,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1349904861;Sets the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder.__@param scheme_the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};sets,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1350918288;Sets the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder.__@param scheme_the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};sets,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1356735495;Sets the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder.__@param scheme_the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};sets,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1357119239;Sets the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder.__@param scheme_the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};sets,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1362408075;Sets the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder.__@param scheme_the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};sets,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1363208506;Sets the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder.__@param scheme_the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};sets,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1367580131;Sets the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};sets,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1367955086;Sets the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};sets,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1368482696;Sets the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};sets,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1375201821;Sets the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};sets,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1380131933;Sets the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};sets,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1382387167;Sets the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};sets,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1382387168;Sets the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};sets,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1382744567;Sets the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};sets,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1382754578;Sets the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};sets,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1391723719;Sets the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};sets,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1400538909;Sets the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};sets,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1400541968;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1403775847;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1404917891;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1409317151;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1409318475;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1409822411;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1414695064;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1417799775;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1423547594;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1424274316;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1425610347;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1426255003;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1426266172;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1426267150;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1426553101;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1426880143;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1426880143;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1427143443;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1430734105;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1433951292;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1437567436;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1438166381;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1443431031;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1443797712;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1447791580;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1449004145;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1458830024;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1465299497;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1467730834;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1471517882;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1472594218;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1475874694;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1476136805;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1485553611;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponentsBuilder scheme(String scheme);1486074560;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> public UriComponents build(boolean encoded);1328020251;Builds a {@code UriComponents} instance from the various components contained in this builder.__@param encoded whether all the components set in this builder are encoded ({@code true}) or not ({@code false})._@return the URI components;public UriComponents build(boolean encoded) {_		return new UriComponents(scheme, userInfo, host, port, pathBuilder.build(), queryParams, fragment, encoded, true)__	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,return,new,uri,components,scheme,user,info,host,port,path,builder,build,query,params,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1329142650;Builds a {@code UriComponents} instance from the various components contained in this builder.__@param encoded whether all the components set in this builder are encoded ({@code true}) or not ({@code false})._@return the URI components;public UriComponents build(boolean encoded) {_		return new UriComponents(scheme, userInfo, host, port, pathBuilder.build(), queryParams, fragment, encoded, true)__	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,return,new,uri,components,scheme,user,info,host,port,path,builder,build,query,params,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1335903038;Builds a {@code UriComponents} instance from the various components contained in this builder.__@param encoded whether all the components set in this builder are encoded ({@code true}) or not ({@code false})._@return the URI components;public UriComponents build(boolean encoded) {_		return new UriComponents(scheme, userInfo, host, port, pathBuilder.build(), queryParams, fragment, encoded, true)__	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,return,new,uri,components,scheme,user,info,host,port,path,builder,build,query,params,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1345652603;Builds a {@code UriComponents} instance from the various components_contained in this builder.__@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})._@return the URI components;public UriComponents build(boolean encoded) {_		return new UriComponents(scheme, userInfo, host, port, pathBuilder.build(), queryParams, fragment, encoded, true)__	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,return,new,uri,components,scheme,user,info,host,port,path,builder,build,query,params,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1348582810;Builds a {@code UriComponents} instance from the various components_contained in this builder.__@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})._@return the URI components;public UriComponents build(boolean encoded) {_		if (ssp != null) {_			return new OpaqueUriComponents(scheme, ssp, fragment)__		}_		else {_			return new HierarchicalUriComponents(_					scheme, userInfo, host, port, pathBuilder.build(), queryParams, fragment, encoded, true)__		}_	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,ssp,null,return,new,opaque,uri,components,scheme,ssp,fragment,else,return,new,hierarchical,uri,components,scheme,user,info,host,port,path,builder,build,query,params,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1349904861;Builds a {@code UriComponents} instance from the various components_contained in this builder.__@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})._@return the URI components;public UriComponents build(boolean encoded) {_		if (ssp != null) {_			return new OpaqueUriComponents(scheme, ssp, fragment)__		}_		else {_			return new HierarchicalUriComponents(_					scheme, userInfo, host, port, pathBuilder.build(), queryParams, fragment, encoded, true)__		}_	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,ssp,null,return,new,opaque,uri,components,scheme,ssp,fragment,else,return,new,hierarchical,uri,components,scheme,user,info,host,port,path,builder,build,query,params,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1350918288;Builds a {@code UriComponents} instance from the various components_contained in this builder.__@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})._@return the URI components;public UriComponents build(boolean encoded) {_		if (ssp != null) {_			return new OpaqueUriComponents(scheme, ssp, fragment)__		}_		else {_			return new HierarchicalUriComponents(_					scheme, userInfo, host, port, pathBuilder.build(), queryParams, fragment, encoded, true)__		}_	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,ssp,null,return,new,opaque,uri,components,scheme,ssp,fragment,else,return,new,hierarchical,uri,components,scheme,user,info,host,port,path,builder,build,query,params,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1356735495;Builds a {@code UriComponents} instance from the various components_contained in this builder.__@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})._@return the URI components;public UriComponents build(boolean encoded) {_		if (ssp != null) {_			return new OpaqueUriComponents(scheme, ssp, fragment)__		}_		else {_			return new HierarchicalUriComponents(_					scheme, userInfo, host, port, pathBuilder.build(), queryParams, fragment, encoded, true)__		}_	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,ssp,null,return,new,opaque,uri,components,scheme,ssp,fragment,else,return,new,hierarchical,uri,components,scheme,user,info,host,port,path,builder,build,query,params,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1357119239;Builds a {@code UriComponents} instance from the various components_contained in this builder.__@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})._@return the URI components;public UriComponents build(boolean encoded) {_		if (ssp != null) {_			return new OpaqueUriComponents(scheme, ssp, fragment)__		}_		else {_			return new HierarchicalUriComponents(_					scheme, userInfo, host, port, pathBuilder.build(), queryParams, fragment, encoded, true)__		}_	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,ssp,null,return,new,opaque,uri,components,scheme,ssp,fragment,else,return,new,hierarchical,uri,components,scheme,user,info,host,port,path,builder,build,query,params,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1362408075;Builds a {@code UriComponents} instance from the various components_contained in this builder.__@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})._@return the URI components;public UriComponents build(boolean encoded) {_		if (ssp != null) {_			return new OpaqueUriComponents(scheme, ssp, fragment)__		}_		else {_			return new HierarchicalUriComponents(_					scheme, userInfo, host, port, pathBuilder.build(), queryParams, fragment, encoded, true)__		}_	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,ssp,null,return,new,opaque,uri,components,scheme,ssp,fragment,else,return,new,hierarchical,uri,components,scheme,user,info,host,port,path,builder,build,query,params,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1363208506;Builds a {@code UriComponents} instance from the various components_contained in this builder.__@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})._@return the URI components;public UriComponents build(boolean encoded) {_		if (ssp != null) {_			return new OpaqueUriComponents(scheme, ssp, fragment)__		}_		else {_			return new HierarchicalUriComponents(_					scheme, userInfo, host, port, pathBuilder.build(), queryParams, fragment, encoded, true)__		}_	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,ssp,null,return,new,opaque,uri,components,scheme,ssp,fragment,else,return,new,hierarchical,uri,components,scheme,user,info,host,port,path,builder,build,query,params,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1367580131;Builds a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})._@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1367955086;Builds a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})._@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1368482696;Builds a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})._@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1375201821;Builds a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})._@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1380131933;Builds a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})._@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1382387167;Builds a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})._@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1382387168;Builds a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})._@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1382744567;Builds a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})._@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1382754578;Builds a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})._@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1391723719;Builds a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})._@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};builds,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1400538909;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})._@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1400541968;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})._@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1403775847;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})._@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1404917891;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})._@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1409317151;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})._@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, String.valueOf(this.port),_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,string,value,of,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1409318475;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})._@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1409822411;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1414695064;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1417799775;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1423547594;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1424274316;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1425610347;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1426255003;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1426266172;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1426267150;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1426553101;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1426880143;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1426880143;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1427143443;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1430734105;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1433951292;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1437567436;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1438166381;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1443431031;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1443797712;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1447791580;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1449004145;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1458830024;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1465299497;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1467730834;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1471517882;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1472594218;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1475874694;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1476136805;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1485553611;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1486074560;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1492678922;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1493758742;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1495868221;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1496259743;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1496370972;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.userInfo, this.host, this.port,_					this.pathBuilder.build(), this.queryParams, this.fragment, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,this,fragment,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1496837955;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.fragment, this.userInfo,_					this.host, this.port, this.pathBuilder.build(), this.queryParams, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,fragment,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1498780456;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.fragment, this.userInfo,_					this.host, this.port, this.pathBuilder.build(), this.queryParams, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,fragment,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1500460652;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.fragment, this.userInfo,_					this.host, this.port, this.pathBuilder.build(), this.queryParams, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,fragment,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1513715892;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.fragment, this.userInfo,_					this.host, this.port, this.pathBuilder.build(), this.queryParams, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,fragment,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1515504834;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.fragment, this.userInfo,_					this.host, this.port, this.pathBuilder.build(), this.queryParams, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,fragment,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1519588127;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.fragment, this.userInfo,_					this.host, this.port, this.pathBuilder.build(), this.queryParams, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,fragment,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1522332352;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.fragment, this.userInfo,_					this.host, this.port, this.pathBuilder.build(), this.queryParams, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,fragment,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1522351714;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.fragment, this.userInfo,_					this.host, this.port, this.pathBuilder.build(), this.queryParams, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,fragment,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1522361849;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.fragment, this.userInfo,_					this.host, this.port, this.pathBuilder.build(), this.queryParams, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,fragment,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1527192852;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.fragment, this.userInfo,_					this.host, this.port, this.pathBuilder.build(), this.queryParams, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,fragment,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1530174524;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			return new HierarchicalUriComponents(this.scheme, this.fragment, this.userInfo,_					this.host, this.port, this.pathBuilder.build(), this.queryParams, encoded, true)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,return,new,hierarchical,uri,components,this,scheme,this,fragment,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,encoded,true
UriComponentsBuilder -> public UriComponents build(boolean encoded);1531746971;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			HierarchicalUriComponents uriComponents =_					new HierarchicalUriComponents(this.scheme, this.fragment, this.userInfo,_							this.host, this.port, this.pathBuilder.build(), this.queryParams, encoded)___			return this.encodeTemplate ? uriComponents.encodeTemplate(this.charset) : uriComponents__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,hierarchical,uri,components,uri,components,new,hierarchical,uri,components,this,scheme,this,fragment,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,encoded,return,this,encode,template,uri,components,encode,template,this,charset,uri,components
UriComponentsBuilder -> public UriComponents build(boolean encoded);1531843156;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			HierarchicalUriComponents uriComponents =_					new HierarchicalUriComponents(this.scheme, this.fragment, this.userInfo,_							this.host, this.port, this.pathBuilder.build(), this.queryParams, encoded)__			return (this.encodeTemplate ? uriComponents.encodeTemplate(this.charset) : uriComponents)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,hierarchical,uri,components,uri,components,new,hierarchical,uri,components,this,scheme,this,fragment,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,encoded,return,this,encode,template,uri,components,encode,template,this,charset,uri,components
UriComponentsBuilder -> public UriComponents build(boolean encoded);1531863556;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			HierarchicalUriComponents uriComponents =_					new HierarchicalUriComponents(this.scheme, this.fragment, this.userInfo,_							this.host, this.port, this.pathBuilder.build(), this.queryParams, encoded)__			return (this.encodeTemplate ? uriComponents.encodeTemplate(this.charset) : uriComponents)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,hierarchical,uri,components,uri,components,new,hierarchical,uri,components,this,scheme,this,fragment,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,encoded,return,this,encode,template,uri,components,encode,template,this,charset,uri,components
UriComponentsBuilder -> public UriComponents build(boolean encoded);1532041662;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		if (this.ssp != null) {_			return new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			HierarchicalUriComponents uriComponents =_					new HierarchicalUriComponents(this.scheme, this.fragment, this.userInfo,_							this.host, this.port, this.pathBuilder.build(), this.queryParams, encoded)__			return (this.encodeTemplate ? uriComponents.encodeTemplate(this.charset) : uriComponents)__		}_	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,if,this,ssp,null,return,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,hierarchical,uri,components,uri,components,new,hierarchical,uri,components,this,scheme,this,fragment,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,encoded,return,this,encode,template,uri,components,encode,template,this,charset,uri,components
UriComponentsBuilder -> public UriComponents build(boolean encoded);1532041662;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		UriComponents result__		if (this.ssp != null) {_			result = new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			HierarchicalUriComponents uric = new HierarchicalUriComponents(this.scheme, this.fragment,_					this.userInfo, this.host, this.port, this.pathBuilder.build(), this.queryParams, encoded)___			result = this.encodeTemplate ? uric.encodeTemplate(this.charset) : uric__		}_		if (!this.uriVariables.isEmpty()) {_			result = result.expand(name -> this.uriVariables.getOrDefault(name, UriTemplateVariables.SKIP_VALUE))__		}_		return result__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,uri,components,result,if,this,ssp,null,result,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,hierarchical,uri,components,uric,new,hierarchical,uri,components,this,scheme,this,fragment,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,encoded,result,this,encode,template,uric,encode,template,this,charset,uric,if,this,uri,variables,is,empty,result,result,expand,name,this,uri,variables,get,or,default,name,uri,template,variables,return,result
UriComponentsBuilder -> public UriComponents build(boolean encoded);1536571897;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		UriComponents result__		if (this.ssp != null) {_			result = new OpaqueUriComponents(this.scheme, this.ssp, this.fragment)__		}_		else {_			HierarchicalUriComponents uric = new HierarchicalUriComponents(this.scheme, this.fragment,_					this.userInfo, this.host, this.port, this.pathBuilder.build(), this.queryParams, encoded)___			result = this.encodeTemplate ? uric.encodeTemplate(this.charset) : uric__		}_		if (!this.uriVariables.isEmpty()) {_			result = result.expand(name -> this.uriVariables.getOrDefault(name, UriTemplateVariables.SKIP_VALUE))__		}_		return result__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,uri,components,result,if,this,ssp,null,result,new,opaque,uri,components,this,scheme,this,ssp,this,fragment,else,hierarchical,uri,components,uric,new,hierarchical,uri,components,this,scheme,this,fragment,this,user,info,this,host,this,port,this,path,builder,build,this,query,params,encoded,result,this,encode,template,uric,encode,template,this,charset,uric,if,this,uri,variables,is,empty,result,result,expand,name,this,uri,variables,get,or,default,name,uri,template,variables,return,result
UriComponentsBuilder -> public UriComponents build(boolean encoded);1546464968;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		return buildInternal(encoded ?_				EncodingHint.FULLY_ENCODED :_				this.encodeTemplate ? EncodingHint.ENCODE_TEMPLATE : EncodingHint.NONE)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,return,build,internal,encoded,encoding,hint,this,encode,template,encoding,hint,encoding,hint,none
UriComponentsBuilder -> public UriComponents build(boolean encoded);1546963593;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		return buildInternal(encoded ?_				EncodingHint.FULLY_ENCODED :_				this.encodeTemplate ? EncodingHint.ENCODE_TEMPLATE : EncodingHint.NONE)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,return,build,internal,encoded,encoding,hint,this,encode,template,encoding,hint,encoding,hint,none
UriComponentsBuilder -> public UriComponents build(boolean encoded);1547005422;Build a {@code UriComponents} instance from the various components_contained in this builder._@param encoded whether all the components set in this builder are_encoded ({@code true}) or not ({@code false})_@return the URI components;public UriComponents build(boolean encoded) {_		return buildInternal(encoded ?_				EncodingHint.FULLY_ENCODED :_				this.encodeTemplate ? EncodingHint.ENCODE_TEMPLATE : EncodingHint.NONE)__	};build,a,code,uri,components,instance,from,the,various,components,contained,in,this,builder,param,encoded,whether,all,the,components,set,in,this,builder,are,encoded,code,true,or,not,code,false,return,the,uri,components;public,uri,components,build,boolean,encoded,return,build,internal,encoded,encoding,hint,this,encode,template,encoding,hint,encoding,hint,none
UriComponentsBuilder -> @Override 	public UriComponentsBuilder fragment(@Nullable String fragment);1495868221;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder fragment(@Nullable String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;override,public,uri,components,builder,fragment,nullable,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder fragment(@Nullable String fragment);1496259743;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder fragment(@Nullable String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;override,public,uri,components,builder,fragment,nullable,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder fragment(@Nullable String fragment);1496370972;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder fragment(@Nullable String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;override,public,uri,components,builder,fragment,nullable,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder fragment(@Nullable String fragment);1496837955;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder fragment(@Nullable String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;override,public,uri,components,builder,fragment,nullable,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder fragment(@Nullable String fragment);1498780456;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder fragment(@Nullable String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;override,public,uri,components,builder,fragment,nullable,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder fragment(@Nullable String fragment);1500460652;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder fragment(@Nullable String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;override,public,uri,components,builder,fragment,nullable,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder fragment(@Nullable String fragment);1513715892;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder fragment(@Nullable String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;override,public,uri,components,builder,fragment,nullable,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder fragment(@Nullable String fragment);1515504834;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder fragment(@Nullable String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;override,public,uri,components,builder,fragment,nullable,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder fragment(@Nullable String fragment);1519588127;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder fragment(@Nullable String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;override,public,uri,components,builder,fragment,nullable,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder fragment(@Nullable String fragment);1522332352;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder fragment(@Nullable String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;override,public,uri,components,builder,fragment,nullable,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder fragment(@Nullable String fragment);1522351714;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder fragment(@Nullable String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;override,public,uri,components,builder,fragment,nullable,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder fragment(@Nullable String fragment);1522361849;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder fragment(@Nullable String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;override,public,uri,components,builder,fragment,nullable,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder fragment(@Nullable String fragment);1527192852;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder fragment(@Nullable String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;override,public,uri,components,builder,fragment,nullable,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder fragment(@Nullable String fragment);1530174524;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder fragment(@Nullable String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;override,public,uri,components,builder,fragment,nullable,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder fragment(@Nullable String fragment);1531746971;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder fragment(@Nullable String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;override,public,uri,components,builder,fragment,nullable,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder fragment(@Nullable String fragment);1531843156;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder fragment(@Nullable String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;override,public,uri,components,builder,fragment,nullable,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder fragment(@Nullable String fragment);1531863556;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder fragment(@Nullable String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;override,public,uri,components,builder,fragment,nullable,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder fragment(@Nullable String fragment);1532041662;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder fragment(@Nullable String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;override,public,uri,components,builder,fragment,nullable,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder fragment(@Nullable String fragment);1532041662;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder fragment(@Nullable String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;override,public,uri,components,builder,fragment,nullable,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder fragment(@Nullable String fragment);1536571897;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder fragment(@Nullable String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;override,public,uri,components,builder,fragment,nullable,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder fragment(@Nullable String fragment);1546464968;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder fragment(@Nullable String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;override,public,uri,components,builder,fragment,nullable,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder fragment(@Nullable String fragment);1546963593;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder fragment(@Nullable String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;override,public,uri,components,builder,fragment,nullable,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder fragment(@Nullable String fragment);1547005422;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder fragment(@Nullable String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;override,public,uri,components,builder,fragment,nullable,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1328020251;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}.__@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1329142650;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}.__@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1335903038;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}.__@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1345652603;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}.__@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1348582810;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}.__@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1349904861;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}.__@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1350918288;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}.__@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1356735495;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}.__@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1357119239;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}.__@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1362408075;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}.__@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1363208506;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}.__@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1367580131;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1367955086;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1368482696;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1375201821;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1380131933;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1382387167;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1382387168;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1382744567;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1382754578;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1391723719;Builds a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method, which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};builds,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1400538909;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1400541968;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1403775847;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1404917891;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1409317151;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1409318475;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1409822411;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1414695064;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1417799775;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1423547594;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1424274316;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1425610347;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1426255003;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1426266172;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1426267150;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1426553101;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1426880143;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1426880143;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1427143443;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1430734105;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1433951292;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1437567436;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1438166381;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1443431031;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1443797712;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1447791580;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1449004145;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1458830024;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1465299497;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1467730834;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1471517882;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1472594218;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1475874694;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1476136805;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1485553611;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1486074560;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1492678922;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1493758742;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1495868221;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1496259743;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1496370972;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1496837955;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1498780456;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1500460652;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1513715892;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1515504834;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1519588127;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1522332352;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1522351714;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1522361849;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1527192852;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1530174524;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues the URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build(false).expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,the,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,false,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1531746971;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues the URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build().expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,the,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1531843156;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues the URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build().expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,the,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1531863556;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues the URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build().expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,the,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1532041662;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues the URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build().expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,the,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1532041662;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues the URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build().expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,the,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1536571897;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues the URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build().expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,the,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1546464968;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues the URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build().expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,the,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1546963593;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues the URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build().expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,the,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,expand,uri,variable,values
UriComponentsBuilder -> public UriComponents buildAndExpand(Object... uriVariableValues);1547005422;Build a {@code UriComponents} instance and replaces URI template variables_with the values from an array. This is a shortcut method which combines_calls to {@link #build()} and then {@link UriComponents#expand(Object...)}._@param uriVariableValues the URI variable values_@return the URI components with expanded values;public UriComponents buildAndExpand(Object... uriVariableValues) {_		return build().expand(uriVariableValues)__	};build,a,code,uri,components,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,this,is,a,shortcut,method,which,combines,calls,to,link,build,and,then,link,uri,components,expand,object,param,uri,variable,values,the,uri,variable,values,return,the,uri,components,with,expanded,values;public,uri,components,build,and,expand,object,uri,variable,values,return,build,expand,uri,variable,values
UriComponentsBuilder -> public UriComponentsBuilder uriVariables(Map<String, Object> uriVariables);1532041662;Configure URI variables to be expanded at build time._<p>The provided variables may be a subset of all required ones. At build_time, the available ones are expanded, while unresolved URI placeholders_are left in place and can still be expanded later._<p>In contrast to {@link UriComponents#expand(Map)} or_{@link #buildAndExpand(Map)}, this method is useful when you need to_supply URI variables without building the {@link UriComponents} instance_just yet, or perhaps pre-expand some shared default values such as host_and port._@param uriVariables the URI variables to use_@return this UriComponentsBuilder_@since 5.0.8;public UriComponentsBuilder uriVariables(Map<String, Object> uriVariables) {_		this.uriVariables.putAll(uriVariables)__		return this__	};configure,uri,variables,to,be,expanded,at,build,time,p,the,provided,variables,may,be,a,subset,of,all,required,ones,at,build,time,the,available,ones,are,expanded,while,unresolved,uri,placeholders,are,left,in,place,and,can,still,be,expanded,later,p,in,contrast,to,link,uri,components,expand,map,or,link,build,and,expand,map,this,method,is,useful,when,you,need,to,supply,uri,variables,without,building,the,link,uri,components,instance,just,yet,or,perhaps,pre,expand,some,shared,default,values,such,as,host,and,port,param,uri,variables,the,uri,variables,to,use,return,this,uri,components,builder,since,5,0,8;public,uri,components,builder,uri,variables,map,string,object,uri,variables,this,uri,variables,put,all,uri,variables,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriVariables(Map<String, Object> uriVariables);1536571897;Configure URI variables to be expanded at build time._<p>The provided variables may be a subset of all required ones. At build_time, the available ones are expanded, while unresolved URI placeholders_are left in place and can still be expanded later._<p>In contrast to {@link UriComponents#expand(Map)} or_{@link #buildAndExpand(Map)}, this method is useful when you need to_supply URI variables without building the {@link UriComponents} instance_just yet, or perhaps pre-expand some shared default values such as host_and port._@param uriVariables the URI variables to use_@return this UriComponentsBuilder_@since 5.0.8;public UriComponentsBuilder uriVariables(Map<String, Object> uriVariables) {_		this.uriVariables.putAll(uriVariables)__		return this__	};configure,uri,variables,to,be,expanded,at,build,time,p,the,provided,variables,may,be,a,subset,of,all,required,ones,at,build,time,the,available,ones,are,expanded,while,unresolved,uri,placeholders,are,left,in,place,and,can,still,be,expanded,later,p,in,contrast,to,link,uri,components,expand,map,or,link,build,and,expand,map,this,method,is,useful,when,you,need,to,supply,uri,variables,without,building,the,link,uri,components,instance,just,yet,or,perhaps,pre,expand,some,shared,default,values,such,as,host,and,port,param,uri,variables,the,uri,variables,to,use,return,this,uri,components,builder,since,5,0,8;public,uri,components,builder,uri,variables,map,string,object,uri,variables,this,uri,variables,put,all,uri,variables,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriVariables(Map<String, Object> uriVariables);1546464968;Configure URI variables to be expanded at build time._<p>The provided variables may be a subset of all required ones. At build_time, the available ones are expanded, while unresolved URI placeholders_are left in place and can still be expanded later._<p>In contrast to {@link UriComponents#expand(Map)} or_{@link #buildAndExpand(Map)}, this method is useful when you need to_supply URI variables without building the {@link UriComponents} instance_just yet, or perhaps pre-expand some shared default values such as host_and port._@param uriVariables the URI variables to use_@return this UriComponentsBuilder_@since 5.0.8;public UriComponentsBuilder uriVariables(Map<String, Object> uriVariables) {_		this.uriVariables.putAll(uriVariables)__		return this__	};configure,uri,variables,to,be,expanded,at,build,time,p,the,provided,variables,may,be,a,subset,of,all,required,ones,at,build,time,the,available,ones,are,expanded,while,unresolved,uri,placeholders,are,left,in,place,and,can,still,be,expanded,later,p,in,contrast,to,link,uri,components,expand,map,or,link,build,and,expand,map,this,method,is,useful,when,you,need,to,supply,uri,variables,without,building,the,link,uri,components,instance,just,yet,or,perhaps,pre,expand,some,shared,default,values,such,as,host,and,port,param,uri,variables,the,uri,variables,to,use,return,this,uri,components,builder,since,5,0,8;public,uri,components,builder,uri,variables,map,string,object,uri,variables,this,uri,variables,put,all,uri,variables,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriVariables(Map<String, Object> uriVariables);1546963593;Configure URI variables to be expanded at build time._<p>The provided variables may be a subset of all required ones. At build_time, the available ones are expanded, while unresolved URI placeholders_are left in place and can still be expanded later._<p>In contrast to {@link UriComponents#expand(Map)} or_{@link #buildAndExpand(Map)}, this method is useful when you need to_supply URI variables without building the {@link UriComponents} instance_just yet, or perhaps pre-expand some shared default values such as host_and port._@param uriVariables the URI variables to use_@return this UriComponentsBuilder_@since 5.0.8;public UriComponentsBuilder uriVariables(Map<String, Object> uriVariables) {_		this.uriVariables.putAll(uriVariables)__		return this__	};configure,uri,variables,to,be,expanded,at,build,time,p,the,provided,variables,may,be,a,subset,of,all,required,ones,at,build,time,the,available,ones,are,expanded,while,unresolved,uri,placeholders,are,left,in,place,and,can,still,be,expanded,later,p,in,contrast,to,link,uri,components,expand,map,or,link,build,and,expand,map,this,method,is,useful,when,you,need,to,supply,uri,variables,without,building,the,link,uri,components,instance,just,yet,or,perhaps,pre,expand,some,shared,default,values,such,as,host,and,port,param,uri,variables,the,uri,variables,to,use,return,this,uri,components,builder,since,5,0,8;public,uri,components,builder,uri,variables,map,string,object,uri,variables,this,uri,variables,put,all,uri,variables,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriVariables(Map<String, Object> uriVariables);1547005422;Configure URI variables to be expanded at build time._<p>The provided variables may be a subset of all required ones. At build_time, the available ones are expanded, while unresolved URI placeholders_are left in place and can still be expanded later._<p>In contrast to {@link UriComponents#expand(Map)} or_{@link #buildAndExpand(Map)}, this method is useful when you need to_supply URI variables without building the {@link UriComponents} instance_just yet, or perhaps pre-expand some shared default values such as host_and port._@param uriVariables the URI variables to use_@return this UriComponentsBuilder_@since 5.0.8;public UriComponentsBuilder uriVariables(Map<String, Object> uriVariables) {_		this.uriVariables.putAll(uriVariables)__		return this__	};configure,uri,variables,to,be,expanded,at,build,time,p,the,provided,variables,may,be,a,subset,of,all,required,ones,at,build,time,the,available,ones,are,expanded,while,unresolved,uri,placeholders,are,left,in,place,and,can,still,be,expanded,later,p,in,contrast,to,link,uri,components,expand,map,or,link,build,and,expand,map,this,method,is,useful,when,you,need,to,supply,uri,variables,without,building,the,link,uri,components,instance,just,yet,or,perhaps,pre,expand,some,shared,default,values,such,as,host,and,port,param,uri,variables,the,uri,variables,to,use,return,this,uri,components,builder,since,5,0,8;public,uri,components,builder,uri,variables,map,string,object,uri,variables,this,uri,variables,put,all,uri,variables,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder scheme(String scheme);1492678922;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;override,public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder scheme(String scheme);1493758742;Set the URI scheme. The given scheme may contain URI template variables,_and may also be {@code null} to clear the scheme of this builder._@param scheme the URI scheme_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder scheme(String scheme) {_		this.scheme = scheme__		return this__	};set,the,uri,scheme,the,given,scheme,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,scheme,of,this,builder,param,scheme,the,uri,scheme,return,this,uri,components,builder;override,public,uri,components,builder,scheme,string,scheme,this,scheme,scheme,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder fragment(String fragment);1492678922;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;override,public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder fragment(String fragment);1493758742;Set the URI fragment. The given fragment may contain URI template variables,_and may also be {@code null} to clear the fragment of this builder._@param fragment the URI fragment_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder fragment(String fragment) {_		if (fragment != null) {_			Assert.hasLength(fragment, "Fragment must not be empty")__			this.fragment = fragment__		}_		else {_			this.fragment = null__		}_		return this__	};set,the,uri,fragment,the,given,fragment,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,fragment,of,this,builder,param,fragment,the,uri,fragment,return,this,uri,components,builder;override,public,uri,components,builder,fragment,string,fragment,if,fragment,null,assert,has,length,fragment,fragment,must,not,be,empty,this,fragment,fragment,else,this,fragment,null,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder userInfo(@Nullable String userInfo);1495868221;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder userInfo(@Nullable String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;override,public,uri,components,builder,user,info,nullable,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder userInfo(@Nullable String userInfo);1496259743;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder userInfo(@Nullable String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;override,public,uri,components,builder,user,info,nullable,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder userInfo(@Nullable String userInfo);1496370972;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder userInfo(@Nullable String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;override,public,uri,components,builder,user,info,nullable,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder userInfo(@Nullable String userInfo);1496837955;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder userInfo(@Nullable String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;override,public,uri,components,builder,user,info,nullable,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder userInfo(@Nullable String userInfo);1498780456;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder userInfo(@Nullable String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;override,public,uri,components,builder,user,info,nullable,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder userInfo(@Nullable String userInfo);1500460652;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder userInfo(@Nullable String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;override,public,uri,components,builder,user,info,nullable,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder userInfo(@Nullable String userInfo);1513715892;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder userInfo(@Nullable String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;override,public,uri,components,builder,user,info,nullable,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder userInfo(@Nullable String userInfo);1515504834;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder userInfo(@Nullable String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;override,public,uri,components,builder,user,info,nullable,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder userInfo(@Nullable String userInfo);1519588127;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder userInfo(@Nullable String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;override,public,uri,components,builder,user,info,nullable,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder userInfo(@Nullable String userInfo);1522332352;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder userInfo(@Nullable String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;override,public,uri,components,builder,user,info,nullable,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder userInfo(@Nullable String userInfo);1522351714;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder userInfo(@Nullable String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;override,public,uri,components,builder,user,info,nullable,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder userInfo(@Nullable String userInfo);1522361849;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder userInfo(@Nullable String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;override,public,uri,components,builder,user,info,nullable,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder userInfo(@Nullable String userInfo);1527192852;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder userInfo(@Nullable String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;override,public,uri,components,builder,user,info,nullable,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder userInfo(@Nullable String userInfo);1530174524;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder userInfo(@Nullable String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;override,public,uri,components,builder,user,info,nullable,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder userInfo(@Nullable String userInfo);1531746971;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder userInfo(@Nullable String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;override,public,uri,components,builder,user,info,nullable,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder userInfo(@Nullable String userInfo);1531843156;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder userInfo(@Nullable String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;override,public,uri,components,builder,user,info,nullable,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder userInfo(@Nullable String userInfo);1531863556;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder userInfo(@Nullable String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;override,public,uri,components,builder,user,info,nullable,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder userInfo(@Nullable String userInfo);1532041662;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder userInfo(@Nullable String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;override,public,uri,components,builder,user,info,nullable,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder userInfo(@Nullable String userInfo);1532041662;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder userInfo(@Nullable String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;override,public,uri,components,builder,user,info,nullable,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder userInfo(@Nullable String userInfo);1536571897;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder userInfo(@Nullable String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;override,public,uri,components,builder,user,info,nullable,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder userInfo(@Nullable String userInfo);1546464968;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder userInfo(@Nullable String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;override,public,uri,components,builder,user,info,nullable,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder userInfo(@Nullable String userInfo);1546963593;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder userInfo(@Nullable String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;override,public,uri,components,builder,user,info,nullable,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder userInfo(@Nullable String userInfo);1547005422;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder userInfo(@Nullable String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;override,public,uri,components,builder,user,info,nullable,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1328020251;Returns a builder that is initialized with the given {@code URI}.__@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1329142650;Returns a builder that is initialized with the given {@code URI}.__@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1335903038;Returns a builder that is initialized with the given {@code URI}.__@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1345652603;Returns a builder that is initialized with the given {@code URI}.__@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1348582810;Returns a builder that is initialized with the given {@code URI}.__@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1349904861;Returns a builder that is initialized with the given {@code URI}.__@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1350918288;Returns a builder that is initialized with the given {@code URI}.__@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1356735495;Returns a builder that is initialized with the given {@code URI}.__@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1357119239;Returns a builder that is initialized with the given {@code URI}.__@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1362408075;Returns a builder that is initialized with the given {@code URI}.__@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1363208506;Returns a builder that is initialized with the given {@code URI}.__@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1367580131;Returns a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1367955086;Returns a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1368482696;Returns a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1375201821;Returns a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1380131933;Returns a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1382387167;Returns a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1382387168;Returns a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1382744567;Returns a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1382754578;Returns a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1391723719;Returns a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1400538909;Returns a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1400541968;Returns a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1403775847;Returns a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1404917891;Returns a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1409317151;Returns a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1409318475;Returns a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1409822411;Returns a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1414695064;Returns a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1417799775;Returns a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1423547594;Returns a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1424274316;Returns a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1425610347;Returns a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1426255003;Returns a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1426266172;Returns a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};returns,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1426267150;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1426553101;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1426880143;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1426880143;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1427143443;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1430734105;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1433951292;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1437567436;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1438166381;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1443431031;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1443797712;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1447791580;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1449004145;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1458830024;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1465299497;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1467730834;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1471517882;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1472594218;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1475874694;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1476136805;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1485553611;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1486074560;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1492678922;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1493758742;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1495868221;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1496259743;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1496370972;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1496837955;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1498780456;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1500460652;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1513715892;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1515504834;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1519588127;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1522332352;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1522351714;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1522361849;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1527192852;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1530174524;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1531746971;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1531843156;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1531863556;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1532041662;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1532041662;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1536571897;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1546464968;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1546963593;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> public static UriComponentsBuilder fromUri(URI uri);1547005422;Create a builder that is initialized with the given {@code URI}._@param uri the URI to initialize with_@return the new {@code UriComponentsBuilder};public static UriComponentsBuilder fromUri(URI uri) {_		UriComponentsBuilder builder = new UriComponentsBuilder()__		builder.uri(uri)__		return builder__	};create,a,builder,that,is,initialized,with,the,given,code,uri,param,uri,the,uri,to,initialize,with,return,the,new,code,uri,components,builder;public,static,uri,components,builder,from,uri,uri,uri,uri,components,builder,builder,new,uri,components,builder,builder,uri,uri,return,builder
UriComponentsBuilder -> @Override 	public URI build(Object... uriVariables);1485553611;Build a {@link URI} instance and replaces URI template variables_with the values from an array._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Object... uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,object,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> @Override 	public URI build(Object... uriVariables);1486074560;Build a {@link URI} instance and replaces URI template variables_with the values from an array._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Object... uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,object,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> @Override 	public URI build(Object... uriVariables);1492678922;Build a {@link URI} instance and replaces URI template variables_with the values from an array._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Object... uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,object,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> @Override 	public URI build(Object... uriVariables);1493758742;Build a {@link URI} instance and replaces URI template variables_with the values from an array._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Object... uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,object,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> @Override 	public URI build(Object... uriVariables);1495868221;Build a {@link URI} instance and replaces URI template variables_with the values from an array._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Object... uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,object,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> @Override 	public URI build(Object... uriVariables);1496259743;Build a {@link URI} instance and replaces URI template variables_with the values from an array._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Object... uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,object,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> @Override 	public URI build(Object... uriVariables);1496370972;Build a {@link URI} instance and replaces URI template variables_with the values from an array._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Object... uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,object,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> @Override 	public URI build(Object... uriVariables);1496837955;Build a {@link URI} instance and replaces URI template variables_with the values from an array._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Object... uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,object,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> @Override 	public URI build(Object... uriVariables);1498780456;Build a {@link URI} instance and replaces URI template variables_with the values from an array._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Object... uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,object,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> @Override 	public URI build(Object... uriVariables);1500460652;Build a {@link URI} instance and replaces URI template variables_with the values from an array._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Object... uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,object,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> @Override 	public URI build(Object... uriVariables);1513715892;Build a {@link URI} instance and replaces URI template variables_with the values from an array._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Object... uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,object,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> @Override 	public URI build(Object... uriVariables);1515504834;Build a {@link URI} instance and replaces URI template variables_with the values from an array._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Object... uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,object,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> @Override 	public URI build(Object... uriVariables);1519588127;Build a {@link URI} instance and replaces URI template variables_with the values from an array._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Object... uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,object,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> @Override 	public URI build(Object... uriVariables);1522332352;Build a {@link URI} instance and replaces URI template variables_with the values from an array._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Object... uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,object,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> @Override 	public URI build(Object... uriVariables);1522351714;Build a {@link URI} instance and replaces URI template variables_with the values from an array._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Object... uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,object,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> @Override 	public URI build(Object... uriVariables);1522361849;Build a {@link URI} instance and replaces URI template variables_with the values from an array._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Object... uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,object,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> @Override 	public URI build(Object... uriVariables);1527192852;Build a {@link URI} instance and replaces URI template variables_with the values from an array._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Object... uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,object,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> @Override 	public URI build(Object... uriVariables);1530174524;Build a {@link URI} instance and replaces URI template variables_with the values from an array._@param uriVariables the map of URI variables_@return the URI;@Override_	public URI build(Object... uriVariables) {_		return buildAndExpand(uriVariables).encode().toUri()__	};build,a,link,uri,instance,and,replaces,uri,template,variables,with,the,values,from,an,array,param,uri,variables,the,map,of,uri,variables,return,the,uri;override,public,uri,build,object,uri,variables,return,build,and,expand,uri,variables,encode,to,uri
UriComponentsBuilder -> protected UriComponentsBuilder();1328020251;Default constructor. Protected to prevent direct instantiation.__@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1329142650;Default constructor. Protected to prevent direct instantiation.__@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1335903038;Default constructor. Protected to prevent direct instantiation.__@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1345652603;Default constructor. Protected to prevent direct instantiation.__@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1348582810;Default constructor. Protected to prevent direct instantiation.__@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1349904861;Default constructor. Protected to prevent direct instantiation.__@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1350918288;Default constructor. Protected to prevent direct instantiation.__@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1356735495;Default constructor. Protected to prevent direct instantiation.__@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1357119239;Default constructor. Protected to prevent direct instantiation.__@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1362408075;Default constructor. Protected to prevent direct instantiation.__@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1363208506;Default constructor. Protected to prevent direct instantiation.__@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1367580131;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1367955086;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1368482696;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1375201821;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1380131933;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1382387167;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1382387168;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1382744567;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1382754578;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1391723719;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1400538909;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1400541968;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1403775847;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1404917891;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1409317151;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1409318475;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1409822411;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1414695064;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1417799775;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1423547594;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1424274316;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1425610347;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1426255003;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1426266172;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1426267150;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1426553101;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1426880143;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1426880143;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1427143443;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1430734105;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1433951292;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1437567436;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1438166381;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1443431031;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1443797712;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1447791580;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1449004145;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1458830024;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1465299497;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1467730834;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1471517882;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1472594218;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1475874694;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1476136805;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1485553611;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1486074560;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1492678922;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1493758742;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1495868221;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1496259743;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1496370972;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1496837955;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1498780456;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1500460652;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1513715892;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1515504834;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1519588127;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1522332352;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1522351714;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1522361849;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1527192852;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1530174524;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1531746971;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1531843156;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1531863556;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1532041662;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1532041662;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1536571897;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1546464968;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1546963593;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> protected UriComponentsBuilder();1547005422;Default constructor. Protected to prevent direct instantiation._@see #newInstance()_@see #fromPath(String)_@see #fromUri(URI);protected UriComponentsBuilder() {_		this.pathBuilder = new CompositePathComponentBuilder()__	};default,constructor,protected,to,prevent,direct,instantiation,see,new,instance,see,from,path,string,see,from,uri,uri;protected,uri,components,builder,this,path,builder,new,composite,path,component,builder
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQuery(String query);1492678922;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder replaceQuery(String query);1493758742;Set the query of this builder overriding all existing query parameters._@param query the query string_ a {@code null} value removes all query parameters._@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder replaceQuery(String query) {_		this.queryParams.clear()__		query(query)__		resetSchemeSpecificPart()__		return this__	};set,the,query,of,this,builder,overriding,all,existing,query,parameters,param,query,the,query,string,a,code,null,value,removes,all,query,parameters,return,this,uri,components,builder;override,public,uri,components,builder,replace,query,string,query,this,query,params,clear,query,query,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params);1496837955;Add the given query parameters._@param params the params_@return this UriComponentsBuilder_@since 4.0;@Override_	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder,since,4,0;override,public,uri,components,builder,query,params,nullable,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params);1498780456;Add the given query parameters._@param params the params_@return this UriComponentsBuilder_@since 4.0;@Override_	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder,since,4,0;override,public,uri,components,builder,query,params,nullable,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params);1500460652;Add the given query parameters._@param params the params_@return this UriComponentsBuilder_@since 4.0;@Override_	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder,since,4,0;override,public,uri,components,builder,query,params,nullable,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params);1513715892;Add the given query parameters._@param params the params_@return this UriComponentsBuilder_@since 4.0;@Override_	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder,since,4,0;override,public,uri,components,builder,query,params,nullable,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params);1515504834;Add the given query parameters._@param params the params_@return this UriComponentsBuilder_@since 4.0;@Override_	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder,since,4,0;override,public,uri,components,builder,query,params,nullable,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params);1519588127;Add the given query parameters._@param params the params_@return this UriComponentsBuilder_@since 4.0;@Override_	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder,since,4,0;override,public,uri,components,builder,query,params,nullable,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params);1522332352;Add the given query parameters._@param params the params_@return this UriComponentsBuilder_@since 4.0;@Override_	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder,since,4,0;override,public,uri,components,builder,query,params,nullable,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params);1522351714;Add the given query parameters._@param params the params_@return this UriComponentsBuilder_@since 4.0;@Override_	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder,since,4,0;override,public,uri,components,builder,query,params,nullable,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params);1522361849;Add the given query parameters._@param params the params_@return this UriComponentsBuilder_@since 4.0;@Override_	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder,since,4,0;override,public,uri,components,builder,query,params,nullable,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params);1527192852;Add the given query parameters._@param params the params_@return this UriComponentsBuilder_@since 4.0;@Override_	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder,since,4,0;override,public,uri,components,builder,query,params,nullable,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params);1530174524;Add the given query parameters._@param params the params_@return this UriComponentsBuilder_@since 4.0;@Override_	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder,since,4,0;override,public,uri,components,builder,query,params,nullable,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params);1531746971;Add the given query parameters._@param params the params_@return this UriComponentsBuilder_@since 4.0;@Override_	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder,since,4,0;override,public,uri,components,builder,query,params,nullable,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params);1531843156;Add the given query parameters._@param params the params_@return this UriComponentsBuilder_@since 4.0;@Override_	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder,since,4,0;override,public,uri,components,builder,query,params,nullable,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params);1531863556;Add the given query parameters._@param params the params_@return this UriComponentsBuilder_@since 4.0;@Override_	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder,since,4,0;override,public,uri,components,builder,query,params,nullable,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params);1532041662;Add the given query parameters._@param params the params_@return this UriComponentsBuilder_@since 4.0;@Override_	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder,since,4,0;override,public,uri,components,builder,query,params,nullable,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params);1532041662;Add the given query parameters._@param params the params_@return this UriComponentsBuilder_@since 4.0;@Override_	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder,since,4,0;override,public,uri,components,builder,query,params,nullable,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params);1536571897;Add the given query parameters._@param params the params_@return this UriComponentsBuilder_@since 4.0;@Override_	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.addAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder,since,4,0;override,public,uri,components,builder,query,params,nullable,multi,value,map,string,string,params,if,params,null,this,query,params,add,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params);1546464968;Add the given query parameters._@param params the params_@return this UriComponentsBuilder_@since 4.0;@Override_	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.addAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder,since,4,0;override,public,uri,components,builder,query,params,nullable,multi,value,map,string,string,params,if,params,null,this,query,params,add,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params);1546963593;Add the given query parameters._@param params the params_@return this UriComponentsBuilder_@since 4.0;@Override_	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.addAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder,since,4,0;override,public,uri,components,builder,query,params,nullable,multi,value,map,string,string,params,if,params,null,this,query,params,add,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params);1547005422;Add the given query parameters._@param params the params_@return this UriComponentsBuilder_@since 4.0;@Override_	public UriComponentsBuilder queryParams(@Nullable MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.addAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder,since,4,0;override,public,uri,components,builder,query,params,nullable,multi,value,map,string,string,params,if,params,null,this,query,params,add,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1382387168;Initializes all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "'uriComponents' must not be null")__		this.scheme = uriComponents.getScheme()__		if (uriComponents instanceof OpaqueUriComponents) {_			this.ssp = uriComponents.getSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uriComponents.getUserInfo() != null) {_				this.userInfo = uriComponents.getUserInfo()__			}_			if (uriComponents.getHost() != null) {_				this.host = uriComponents.getHost()__			}_			if (uriComponents.getPort() != -1) {_				this.port = uriComponents.getPort()__			}_			if (StringUtils.hasLength(uriComponents.getPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uriComponents.getPath())__			}_			if (!uriComponents.getQueryParams().isEmpty()) {_				this.queryParams.clear()__				this.queryParams.putAll(uriComponents.getQueryParams())__			}_			resetSchemeSpecificPart()__		}_		if (uriComponents.getFragment() != null) {_			this.fragment = uriComponents.getFragment()__		}_		return this__	};initializes,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,this,scheme,uri,components,get,scheme,if,uri,components,instanceof,opaque,uri,components,this,ssp,uri,components,get,scheme,specific,part,reset,hierarchical,components,else,if,uri,components,get,user,info,null,this,user,info,uri,components,get,user,info,if,uri,components,get,host,null,this,host,uri,components,get,host,if,uri,components,get,port,1,this,port,uri,components,get,port,if,string,utils,has,length,uri,components,get,path,this,path,builder,new,composite,path,component,builder,uri,components,get,path,if,uri,components,get,query,params,is,empty,this,query,params,clear,this,query,params,put,all,uri,components,get,query,params,reset,scheme,specific,part,if,uri,components,get,fragment,null,this,fragment,uri,components,get,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1382744567;Initializes all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "'uriComponents' must not be null")__		this.scheme = uriComponents.getScheme()__		if (uriComponents instanceof OpaqueUriComponents) {_			this.ssp = uriComponents.getSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uriComponents.getUserInfo() != null) {_				this.userInfo = uriComponents.getUserInfo()__			}_			if (uriComponents.getHost() != null) {_				this.host = uriComponents.getHost()__			}_			if (uriComponents.getPort() != -1) {_				this.port = uriComponents.getPort()__			}_			if (StringUtils.hasLength(uriComponents.getPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uriComponents.getPath())__			}_			if (!uriComponents.getQueryParams().isEmpty()) {_				this.queryParams.clear()__				this.queryParams.putAll(uriComponents.getQueryParams())__			}_			resetSchemeSpecificPart()__		}_		if (uriComponents.getFragment() != null) {_			this.fragment = uriComponents.getFragment()__		}_		return this__	};initializes,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,this,scheme,uri,components,get,scheme,if,uri,components,instanceof,opaque,uri,components,this,ssp,uri,components,get,scheme,specific,part,reset,hierarchical,components,else,if,uri,components,get,user,info,null,this,user,info,uri,components,get,user,info,if,uri,components,get,host,null,this,host,uri,components,get,host,if,uri,components,get,port,1,this,port,uri,components,get,port,if,string,utils,has,length,uri,components,get,path,this,path,builder,new,composite,path,component,builder,uri,components,get,path,if,uri,components,get,query,params,is,empty,this,query,params,clear,this,query,params,put,all,uri,components,get,query,params,reset,scheme,specific,part,if,uri,components,get,fragment,null,this,fragment,uri,components,get,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1382754578;Initializes all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "'uriComponents' must not be null")__		this.scheme = uriComponents.getScheme()__		if (uriComponents instanceof OpaqueUriComponents) {_			this.ssp = uriComponents.getSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uriComponents.getUserInfo() != null) {_				this.userInfo = uriComponents.getUserInfo()__			}_			if (uriComponents.getHost() != null) {_				this.host = uriComponents.getHost()__			}_			if (uriComponents.getPort() != -1) {_				this.port = uriComponents.getPort()__			}_			if (StringUtils.hasLength(uriComponents.getPath())) {_				this.pathBuilder = new CompositePathComponentBuilder(uriComponents.getPath())__			}_			if (!uriComponents.getQueryParams().isEmpty()) {_				this.queryParams.clear()__				this.queryParams.putAll(uriComponents.getQueryParams())__			}_			resetSchemeSpecificPart()__		}_		if (uriComponents.getFragment() != null) {_			this.fragment = uriComponents.getFragment()__		}_		return this__	};initializes,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,this,scheme,uri,components,get,scheme,if,uri,components,instanceof,opaque,uri,components,this,ssp,uri,components,get,scheme,specific,part,reset,hierarchical,components,else,if,uri,components,get,user,info,null,this,user,info,uri,components,get,user,info,if,uri,components,get,host,null,this,host,uri,components,get,host,if,uri,components,get,port,1,this,port,uri,components,get,port,if,string,utils,has,length,uri,components,get,path,this,path,builder,new,composite,path,component,builder,uri,components,get,path,if,uri,components,get,query,params,is,empty,this,query,params,clear,this,query,params,put,all,uri,components,get,query,params,reset,scheme,specific,part,if,uri,components,get,fragment,null,this,fragment,uri,components,get,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1391723719;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "'uriComponents' must not be null")__		this.scheme = uriComponents.getScheme()__		if (uriComponents instanceof OpaqueUriComponents) {_			this.ssp = uriComponents.getSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uriComponents.getUserInfo() != null) {_				this.userInfo = uriComponents.getUserInfo()__			}_			if (uriComponents.getHost() != null) {_				this.host = uriComponents.getHost()__			}_			if (uriComponents.getPort() != -1) {_				this.port = uriComponents.getPort()__			}_			if (StringUtils.hasLength(uriComponents.getPath())) {_				List<String> segments = uriComponents.getPathSegments()__				if (segments.isEmpty()) {_					_					this.pathBuilder.addPath(uriComponents.getPath())__				}_				else {_					this.pathBuilder.addPathSegments(segments.toArray(new String[segments.size()]))__				}_			}_			if (!uriComponents.getQueryParams().isEmpty()) {_				this.queryParams.clear()__				this.queryParams.putAll(uriComponents.getQueryParams())__			}_			resetSchemeSpecificPart()__		}_		if (uriComponents.getFragment() != null) {_			this.fragment = uriComponents.getFragment()__		}_		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,this,scheme,uri,components,get,scheme,if,uri,components,instanceof,opaque,uri,components,this,ssp,uri,components,get,scheme,specific,part,reset,hierarchical,components,else,if,uri,components,get,user,info,null,this,user,info,uri,components,get,user,info,if,uri,components,get,host,null,this,host,uri,components,get,host,if,uri,components,get,port,1,this,port,uri,components,get,port,if,string,utils,has,length,uri,components,get,path,list,string,segments,uri,components,get,path,segments,if,segments,is,empty,this,path,builder,add,path,uri,components,get,path,else,this,path,builder,add,path,segments,segments,to,array,new,string,segments,size,if,uri,components,get,query,params,is,empty,this,query,params,clear,this,query,params,put,all,uri,components,get,query,params,reset,scheme,specific,part,if,uri,components,get,fragment,null,this,fragment,uri,components,get,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1400538909;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "'uriComponents' must not be null")__		this.scheme = uriComponents.getScheme()__		if (uriComponents instanceof OpaqueUriComponents) {_			this.ssp = uriComponents.getSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uriComponents.getUserInfo() != null) {_				this.userInfo = uriComponents.getUserInfo()__			}_			if (uriComponents.getHost() != null) {_				this.host = uriComponents.getHost()__			}_			if (uriComponents.getPort() != -1) {_				this.port = uriComponents.getPort()__			}_			if (StringUtils.hasLength(uriComponents.getPath())) {_				List<String> segments = uriComponents.getPathSegments()__				if (segments.isEmpty()) {_					_					this.pathBuilder.addPath(uriComponents.getPath())__				}_				else {_					this.pathBuilder.addPathSegments(segments.toArray(new String[segments.size()]))__				}_			}_			if (!uriComponents.getQueryParams().isEmpty()) {_				this.queryParams.clear()__				this.queryParams.putAll(uriComponents.getQueryParams())__			}_			resetSchemeSpecificPart()__		}_		if (uriComponents.getFragment() != null) {_			this.fragment = uriComponents.getFragment()__		}_		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,this,scheme,uri,components,get,scheme,if,uri,components,instanceof,opaque,uri,components,this,ssp,uri,components,get,scheme,specific,part,reset,hierarchical,components,else,if,uri,components,get,user,info,null,this,user,info,uri,components,get,user,info,if,uri,components,get,host,null,this,host,uri,components,get,host,if,uri,components,get,port,1,this,port,uri,components,get,port,if,string,utils,has,length,uri,components,get,path,list,string,segments,uri,components,get,path,segments,if,segments,is,empty,this,path,builder,add,path,uri,components,get,path,else,this,path,builder,add,path,segments,segments,to,array,new,string,segments,size,if,uri,components,get,query,params,is,empty,this,query,params,clear,this,query,params,put,all,uri,components,get,query,params,reset,scheme,specific,part,if,uri,components,get,fragment,null,this,fragment,uri,components,get,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1400541968;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "'uriComponents' must not be null")__		this.scheme = uriComponents.getScheme()__		if (uriComponents instanceof OpaqueUriComponents) {_			this.ssp = uriComponents.getSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uriComponents.getUserInfo() != null) {_				this.userInfo = uriComponents.getUserInfo()__			}_			if (uriComponents.getHost() != null) {_				this.host = uriComponents.getHost()__			}_			if (uriComponents.getPort() != -1) {_				this.port = uriComponents.getPort()__			}_			if (StringUtils.hasLength(uriComponents.getPath())) {_				List<String> segments = uriComponents.getPathSegments()__				if (segments.isEmpty()) {_					_					this.pathBuilder.addPath(uriComponents.getPath())__				}_				else {_					this.pathBuilder.addPathSegments(segments.toArray(new String[segments.size()]))__				}_			}_			if (!uriComponents.getQueryParams().isEmpty()) {_				this.queryParams.clear()__				this.queryParams.putAll(uriComponents.getQueryParams())__			}_			resetSchemeSpecificPart()__		}_		if (uriComponents.getFragment() != null) {_			this.fragment = uriComponents.getFragment()__		}_		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,this,scheme,uri,components,get,scheme,if,uri,components,instanceof,opaque,uri,components,this,ssp,uri,components,get,scheme,specific,part,reset,hierarchical,components,else,if,uri,components,get,user,info,null,this,user,info,uri,components,get,user,info,if,uri,components,get,host,null,this,host,uri,components,get,host,if,uri,components,get,port,1,this,port,uri,components,get,port,if,string,utils,has,length,uri,components,get,path,list,string,segments,uri,components,get,path,segments,if,segments,is,empty,this,path,builder,add,path,uri,components,get,path,else,this,path,builder,add,path,segments,segments,to,array,new,string,segments,size,if,uri,components,get,query,params,is,empty,this,query,params,clear,this,query,params,put,all,uri,components,get,query,params,reset,scheme,specific,part,if,uri,components,get,fragment,null,this,fragment,uri,components,get,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1403775847;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "'uriComponents' must not be null")__		this.scheme = uriComponents.getScheme()__		if (uriComponents instanceof OpaqueUriComponents) {_			this.ssp = uriComponents.getSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uriComponents.getUserInfo() != null) {_				this.userInfo = uriComponents.getUserInfo()__			}_			if (uriComponents.getHost() != null) {_				this.host = uriComponents.getHost()__			}_			if (uriComponents.getPort() != -1) {_				this.port = uriComponents.getPort()__			}_			if (StringUtils.hasLength(uriComponents.getPath())) {_				List<String> segments = uriComponents.getPathSegments()__				if (segments.isEmpty()) {_					_					this.pathBuilder.addPath(uriComponents.getPath())__				}_				else {_					this.pathBuilder.addPathSegments(segments.toArray(new String[segments.size()]))__				}_			}_			if (!uriComponents.getQueryParams().isEmpty()) {_				this.queryParams.clear()__				this.queryParams.putAll(uriComponents.getQueryParams())__			}_			resetSchemeSpecificPart()__		}_		if (uriComponents.getFragment() != null) {_			this.fragment = uriComponents.getFragment()__		}_		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,this,scheme,uri,components,get,scheme,if,uri,components,instanceof,opaque,uri,components,this,ssp,uri,components,get,scheme,specific,part,reset,hierarchical,components,else,if,uri,components,get,user,info,null,this,user,info,uri,components,get,user,info,if,uri,components,get,host,null,this,host,uri,components,get,host,if,uri,components,get,port,1,this,port,uri,components,get,port,if,string,utils,has,length,uri,components,get,path,list,string,segments,uri,components,get,path,segments,if,segments,is,empty,this,path,builder,add,path,uri,components,get,path,else,this,path,builder,add,path,segments,segments,to,array,new,string,segments,size,if,uri,components,get,query,params,is,empty,this,query,params,clear,this,query,params,put,all,uri,components,get,query,params,reset,scheme,specific,part,if,uri,components,get,fragment,null,this,fragment,uri,components,get,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1404917891;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "'uriComponents' must not be null")__		this.scheme = uriComponents.getScheme()__		if (uriComponents instanceof OpaqueUriComponents) {_			this.ssp = uriComponents.getSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uriComponents.getUserInfo() != null) {_				this.userInfo = uriComponents.getUserInfo()__			}_			if (uriComponents.getHost() != null) {_				this.host = uriComponents.getHost()__			}_			if (uriComponents.getPort() != -1) {_				this.port = uriComponents.getPort()__			}_			if (StringUtils.hasLength(uriComponents.getPath())) {_				List<String> segments = uriComponents.getPathSegments()__				if (segments.isEmpty()) {_					_					this.pathBuilder.addPath(uriComponents.getPath())__				}_				else {_					this.pathBuilder.addPathSegments(segments.toArray(new String[segments.size()]))__				}_			}_			if (!uriComponents.getQueryParams().isEmpty()) {_				this.queryParams.clear()__				this.queryParams.putAll(uriComponents.getQueryParams())__			}_			resetSchemeSpecificPart()__		}_		if (uriComponents.getFragment() != null) {_			this.fragment = uriComponents.getFragment()__		}_		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,this,scheme,uri,components,get,scheme,if,uri,components,instanceof,opaque,uri,components,this,ssp,uri,components,get,scheme,specific,part,reset,hierarchical,components,else,if,uri,components,get,user,info,null,this,user,info,uri,components,get,user,info,if,uri,components,get,host,null,this,host,uri,components,get,host,if,uri,components,get,port,1,this,port,uri,components,get,port,if,string,utils,has,length,uri,components,get,path,list,string,segments,uri,components,get,path,segments,if,segments,is,empty,this,path,builder,add,path,uri,components,get,path,else,this,path,builder,add,path,segments,segments,to,array,new,string,segments,size,if,uri,components,get,query,params,is,empty,this,query,params,clear,this,query,params,put,all,uri,components,get,query,params,reset,scheme,specific,part,if,uri,components,get,fragment,null,this,fragment,uri,components,get,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1409317151;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "'uriComponents' must not be null")__		this.scheme = uriComponents.getScheme()__		if (uriComponents instanceof OpaqueUriComponents) {_			this.ssp = uriComponents.getSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uriComponents.getUserInfo() != null) {_				this.userInfo = uriComponents.getUserInfo()__			}_			if (uriComponents.getHost() != null) {_				this.host = uriComponents.getHost()__			}_			if (uriComponents.getPort() != -1) {_				this.port = String.valueOf(uriComponents.getPort())__			}_			if (StringUtils.hasLength(uriComponents.getPath())) {_				List<String> segments = uriComponents.getPathSegments()__				if (segments.isEmpty()) {_					_					this.pathBuilder.addPath(uriComponents.getPath())__				}_				else {_					this.pathBuilder.addPathSegments(segments.toArray(new String[segments.size()]))__				}_			}_			if (!uriComponents.getQueryParams().isEmpty()) {_				this.queryParams.clear()__				this.queryParams.putAll(uriComponents.getQueryParams())__			}_			resetSchemeSpecificPart()__		}_		if (uriComponents.getFragment() != null) {_			this.fragment = uriComponents.getFragment()__		}_		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,this,scheme,uri,components,get,scheme,if,uri,components,instanceof,opaque,uri,components,this,ssp,uri,components,get,scheme,specific,part,reset,hierarchical,components,else,if,uri,components,get,user,info,null,this,user,info,uri,components,get,user,info,if,uri,components,get,host,null,this,host,uri,components,get,host,if,uri,components,get,port,1,this,port,string,value,of,uri,components,get,port,if,string,utils,has,length,uri,components,get,path,list,string,segments,uri,components,get,path,segments,if,segments,is,empty,this,path,builder,add,path,uri,components,get,path,else,this,path,builder,add,path,segments,segments,to,array,new,string,segments,size,if,uri,components,get,query,params,is,empty,this,query,params,clear,this,query,params,put,all,uri,components,get,query,params,reset,scheme,specific,part,if,uri,components,get,fragment,null,this,fragment,uri,components,get,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1409318475;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "'uriComponents' must not be null")__		this.scheme = uriComponents.getScheme()__		if (uriComponents instanceof OpaqueUriComponents) {_			this.ssp = uriComponents.getSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uriComponents.getUserInfo() != null) {_				this.userInfo = uriComponents.getUserInfo()__			}_			if (uriComponents.getHost() != null) {_				this.host = uriComponents.getHost()__			}_			if (uriComponents.getPort() != -1) {_				this.port = String.valueOf(uriComponents.getPort())__			}_			if (StringUtils.hasLength(uriComponents.getPath())) {_				List<String> segments = uriComponents.getPathSegments()__				if (segments.isEmpty()) {_					_					this.pathBuilder.addPath(uriComponents.getPath())__				}_				else {_					this.pathBuilder.addPathSegments(segments.toArray(new String[segments.size()]))__				}_			}_			if (!uriComponents.getQueryParams().isEmpty()) {_				this.queryParams.clear()__				this.queryParams.putAll(uriComponents.getQueryParams())__			}_			resetSchemeSpecificPart()__		}_		if (uriComponents.getFragment() != null) {_			this.fragment = uriComponents.getFragment()__		}_		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,this,scheme,uri,components,get,scheme,if,uri,components,instanceof,opaque,uri,components,this,ssp,uri,components,get,scheme,specific,part,reset,hierarchical,components,else,if,uri,components,get,user,info,null,this,user,info,uri,components,get,user,info,if,uri,components,get,host,null,this,host,uri,components,get,host,if,uri,components,get,port,1,this,port,string,value,of,uri,components,get,port,if,string,utils,has,length,uri,components,get,path,list,string,segments,uri,components,get,path,segments,if,segments,is,empty,this,path,builder,add,path,uri,components,get,path,else,this,path,builder,add,path,segments,segments,to,array,new,string,segments,size,if,uri,components,get,query,params,is,empty,this,query,params,clear,this,query,params,put,all,uri,components,get,query,params,reset,scheme,specific,part,if,uri,components,get,fragment,null,this,fragment,uri,components,get,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1409822411;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "'uriComponents' must not be null")__		this.scheme = uriComponents.getScheme()__		if (uriComponents instanceof OpaqueUriComponents) {_			this.ssp = uriComponents.getSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uriComponents.getUserInfo() != null) {_				this.userInfo = uriComponents.getUserInfo()__			}_			if (uriComponents.getHost() != null) {_				this.host = uriComponents.getHost()__			}_			if (uriComponents.getPort() != -1) {_				this.port = String.valueOf(uriComponents.getPort())__			}_			if (StringUtils.hasLength(uriComponents.getPath())) {_				List<String> segments = uriComponents.getPathSegments()__				if (segments.isEmpty()) {_					_					this.pathBuilder.addPath(uriComponents.getPath())__				}_				else {_					this.pathBuilder.addPathSegments(segments.toArray(new String[segments.size()]))__				}_			}_			if (!uriComponents.getQueryParams().isEmpty()) {_				this.queryParams.clear()__				this.queryParams.putAll(uriComponents.getQueryParams())__			}_			resetSchemeSpecificPart()__		}_		if (uriComponents.getFragment() != null) {_			this.fragment = uriComponents.getFragment()__		}_		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,this,scheme,uri,components,get,scheme,if,uri,components,instanceof,opaque,uri,components,this,ssp,uri,components,get,scheme,specific,part,reset,hierarchical,components,else,if,uri,components,get,user,info,null,this,user,info,uri,components,get,user,info,if,uri,components,get,host,null,this,host,uri,components,get,host,if,uri,components,get,port,1,this,port,string,value,of,uri,components,get,port,if,string,utils,has,length,uri,components,get,path,list,string,segments,uri,components,get,path,segments,if,segments,is,empty,this,path,builder,add,path,uri,components,get,path,else,this,path,builder,add,path,segments,segments,to,array,new,string,segments,size,if,uri,components,get,query,params,is,empty,this,query,params,clear,this,query,params,put,all,uri,components,get,query,params,reset,scheme,specific,part,if,uri,components,get,fragment,null,this,fragment,uri,components,get,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1414695064;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "'uriComponents' must not be null")__		this.scheme = uriComponents.getScheme()__		if (uriComponents instanceof OpaqueUriComponents) {_			this.ssp = uriComponents.getSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uriComponents.getUserInfo() != null) {_				this.userInfo = uriComponents.getUserInfo()__			}_			if (uriComponents.getHost() != null) {_				this.host = uriComponents.getHost()__			}_			if (uriComponents.getPort() != -1) {_				this.port = String.valueOf(uriComponents.getPort())__			}_			if (StringUtils.hasLength(uriComponents.getPath())) {_				List<String> segments = uriComponents.getPathSegments()__				if (segments.isEmpty()) {_					_					this.pathBuilder.addPath(uriComponents.getPath())__				}_				else {_					this.pathBuilder.addPathSegments(segments.toArray(new String[segments.size()]))__				}_			}_			if (!uriComponents.getQueryParams().isEmpty()) {_				this.queryParams.clear()__				this.queryParams.putAll(uriComponents.getQueryParams())__			}_			resetSchemeSpecificPart()__		}_		if (uriComponents.getFragment() != null) {_			this.fragment = uriComponents.getFragment()__		}_		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,this,scheme,uri,components,get,scheme,if,uri,components,instanceof,opaque,uri,components,this,ssp,uri,components,get,scheme,specific,part,reset,hierarchical,components,else,if,uri,components,get,user,info,null,this,user,info,uri,components,get,user,info,if,uri,components,get,host,null,this,host,uri,components,get,host,if,uri,components,get,port,1,this,port,string,value,of,uri,components,get,port,if,string,utils,has,length,uri,components,get,path,list,string,segments,uri,components,get,path,segments,if,segments,is,empty,this,path,builder,add,path,uri,components,get,path,else,this,path,builder,add,path,segments,segments,to,array,new,string,segments,size,if,uri,components,get,query,params,is,empty,this,query,params,clear,this,query,params,put,all,uri,components,get,query,params,reset,scheme,specific,part,if,uri,components,get,fragment,null,this,fragment,uri,components,get,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1417799775;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "'uriComponents' must not be null")__		this.scheme = uriComponents.getScheme()__		if (uriComponents instanceof OpaqueUriComponents) {_			this.ssp = uriComponents.getSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uriComponents.getUserInfo() != null) {_				this.userInfo = uriComponents.getUserInfo()__			}_			if (uriComponents.getHost() != null) {_				this.host = uriComponents.getHost()__			}_			if (uriComponents.getPort() != -1) {_				this.port = String.valueOf(uriComponents.getPort())__			}_			if (StringUtils.hasLength(uriComponents.getPath())) {_				List<String> segments = uriComponents.getPathSegments()__				if (segments.isEmpty()) {_					_					this.pathBuilder.addPath(uriComponents.getPath())__				}_				else {_					this.pathBuilder.addPathSegments(segments.toArray(new String[segments.size()]))__				}_			}_			if (!uriComponents.getQueryParams().isEmpty()) {_				this.queryParams.clear()__				this.queryParams.putAll(uriComponents.getQueryParams())__			}_			resetSchemeSpecificPart()__		}_		if (uriComponents.getFragment() != null) {_			this.fragment = uriComponents.getFragment()__		}_		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,this,scheme,uri,components,get,scheme,if,uri,components,instanceof,opaque,uri,components,this,ssp,uri,components,get,scheme,specific,part,reset,hierarchical,components,else,if,uri,components,get,user,info,null,this,user,info,uri,components,get,user,info,if,uri,components,get,host,null,this,host,uri,components,get,host,if,uri,components,get,port,1,this,port,string,value,of,uri,components,get,port,if,string,utils,has,length,uri,components,get,path,list,string,segments,uri,components,get,path,segments,if,segments,is,empty,this,path,builder,add,path,uri,components,get,path,else,this,path,builder,add,path,segments,segments,to,array,new,string,segments,size,if,uri,components,get,query,params,is,empty,this,query,params,clear,this,query,params,put,all,uri,components,get,query,params,reset,scheme,specific,part,if,uri,components,get,fragment,null,this,fragment,uri,components,get,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1423547594;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "'uriComponents' must not be null")__		this.scheme = uriComponents.getScheme()__		if (uriComponents instanceof OpaqueUriComponents) {_			this.ssp = uriComponents.getSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uriComponents.getUserInfo() != null) {_				this.userInfo = uriComponents.getUserInfo()__			}_			if (uriComponents.getHost() != null) {_				this.host = uriComponents.getHost()__			}_			if (uriComponents.getPort() != -1) {_				this.port = String.valueOf(uriComponents.getPort())__			}_			if (StringUtils.hasLength(uriComponents.getPath())) {_				List<String> segments = uriComponents.getPathSegments()__				if (segments.isEmpty()) {_					_					this.pathBuilder.addPath(uriComponents.getPath())__				}_				else {_					this.pathBuilder.addPathSegments(segments.toArray(new String[segments.size()]))__				}_			}_			if (!uriComponents.getQueryParams().isEmpty()) {_				this.queryParams.clear()__				this.queryParams.putAll(uriComponents.getQueryParams())__			}_			resetSchemeSpecificPart()__		}_		if (uriComponents.getFragment() != null) {_			this.fragment = uriComponents.getFragment()__		}_		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,this,scheme,uri,components,get,scheme,if,uri,components,instanceof,opaque,uri,components,this,ssp,uri,components,get,scheme,specific,part,reset,hierarchical,components,else,if,uri,components,get,user,info,null,this,user,info,uri,components,get,user,info,if,uri,components,get,host,null,this,host,uri,components,get,host,if,uri,components,get,port,1,this,port,string,value,of,uri,components,get,port,if,string,utils,has,length,uri,components,get,path,list,string,segments,uri,components,get,path,segments,if,segments,is,empty,this,path,builder,add,path,uri,components,get,path,else,this,path,builder,add,path,segments,segments,to,array,new,string,segments,size,if,uri,components,get,query,params,is,empty,this,query,params,clear,this,query,params,put,all,uri,components,get,query,params,reset,scheme,specific,part,if,uri,components,get,fragment,null,this,fragment,uri,components,get,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1424274316;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "'uriComponents' must not be null")__		this.scheme = uriComponents.getScheme()__		if (uriComponents instanceof OpaqueUriComponents) {_			this.ssp = uriComponents.getSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uriComponents.getUserInfo() != null) {_				this.userInfo = uriComponents.getUserInfo()__			}_			if (uriComponents.getHost() != null) {_				this.host = uriComponents.getHost()__			}_			if (uriComponents.getPort() != -1) {_				this.port = String.valueOf(uriComponents.getPort())__			}_			if (StringUtils.hasLength(uriComponents.getPath())) {_				List<String> segments = uriComponents.getPathSegments()__				if (segments.isEmpty()) {_					_					this.pathBuilder.addPath(uriComponents.getPath())__				}_				else {_					this.pathBuilder.addPathSegments(segments.toArray(new String[segments.size()]))__				}_			}_			if (!uriComponents.getQueryParams().isEmpty()) {_				this.queryParams.clear()__				this.queryParams.putAll(uriComponents.getQueryParams())__			}_			resetSchemeSpecificPart()__		}_		if (uriComponents.getFragment() != null) {_			this.fragment = uriComponents.getFragment()__		}_		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,this,scheme,uri,components,get,scheme,if,uri,components,instanceof,opaque,uri,components,this,ssp,uri,components,get,scheme,specific,part,reset,hierarchical,components,else,if,uri,components,get,user,info,null,this,user,info,uri,components,get,user,info,if,uri,components,get,host,null,this,host,uri,components,get,host,if,uri,components,get,port,1,this,port,string,value,of,uri,components,get,port,if,string,utils,has,length,uri,components,get,path,list,string,segments,uri,components,get,path,segments,if,segments,is,empty,this,path,builder,add,path,uri,components,get,path,else,this,path,builder,add,path,segments,segments,to,array,new,string,segments,size,if,uri,components,get,query,params,is,empty,this,query,params,clear,this,query,params,put,all,uri,components,get,query,params,reset,scheme,specific,part,if,uri,components,get,fragment,null,this,fragment,uri,components,get,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1425610347;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "'uriComponents' must not be null")__		this.scheme = uriComponents.getScheme()__		if (uriComponents instanceof OpaqueUriComponents) {_			this.ssp = uriComponents.getSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uriComponents.getUserInfo() != null) {_				this.userInfo = uriComponents.getUserInfo()__			}_			if (uriComponents.getHost() != null) {_				this.host = uriComponents.getHost()__			}_			if (uriComponents.getPort() != -1) {_				this.port = String.valueOf(uriComponents.getPort())__			}_			if (StringUtils.hasLength(uriComponents.getPath())) {_				List<String> segments = uriComponents.getPathSegments()__				if (segments.isEmpty()) {_					_					this.pathBuilder.addPath(uriComponents.getPath())__				}_				else {_					this.pathBuilder.addPathSegments(segments.toArray(new String[segments.size()]))__				}_			}_			if (!uriComponents.getQueryParams().isEmpty()) {_				this.queryParams.clear()__				this.queryParams.putAll(uriComponents.getQueryParams())__			}_			resetSchemeSpecificPart()__		}_		if (uriComponents.getFragment() != null) {_			this.fragment = uriComponents.getFragment()__		}_		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,this,scheme,uri,components,get,scheme,if,uri,components,instanceof,opaque,uri,components,this,ssp,uri,components,get,scheme,specific,part,reset,hierarchical,components,else,if,uri,components,get,user,info,null,this,user,info,uri,components,get,user,info,if,uri,components,get,host,null,this,host,uri,components,get,host,if,uri,components,get,port,1,this,port,string,value,of,uri,components,get,port,if,string,utils,has,length,uri,components,get,path,list,string,segments,uri,components,get,path,segments,if,segments,is,empty,this,path,builder,add,path,uri,components,get,path,else,this,path,builder,add,path,segments,segments,to,array,new,string,segments,size,if,uri,components,get,query,params,is,empty,this,query,params,clear,this,query,params,put,all,uri,components,get,query,params,reset,scheme,specific,part,if,uri,components,get,fragment,null,this,fragment,uri,components,get,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1426255003;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "'uriComponents' must not be null")__		this.scheme = uriComponents.getScheme()__		if (uriComponents instanceof OpaqueUriComponents) {_			this.ssp = uriComponents.getSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uriComponents.getUserInfo() != null) {_				this.userInfo = uriComponents.getUserInfo()__			}_			if (uriComponents.getHost() != null) {_				this.host = uriComponents.getHost()__			}_			if (uriComponents.getPort() != -1) {_				this.port = String.valueOf(uriComponents.getPort())__			}_			if (StringUtils.hasLength(uriComponents.getPath())) {_				List<String> segments = uriComponents.getPathSegments()__				if (segments.isEmpty()) {_					_					this.pathBuilder.addPath(uriComponents.getPath())__				}_				else {_					this.pathBuilder.addPathSegments(segments.toArray(new String[segments.size()]))__				}_			}_			if (!uriComponents.getQueryParams().isEmpty()) {_				this.queryParams.clear()__				this.queryParams.putAll(uriComponents.getQueryParams())__			}_			resetSchemeSpecificPart()__		}_		if (uriComponents.getFragment() != null) {_			this.fragment = uriComponents.getFragment()__		}_		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,this,scheme,uri,components,get,scheme,if,uri,components,instanceof,opaque,uri,components,this,ssp,uri,components,get,scheme,specific,part,reset,hierarchical,components,else,if,uri,components,get,user,info,null,this,user,info,uri,components,get,user,info,if,uri,components,get,host,null,this,host,uri,components,get,host,if,uri,components,get,port,1,this,port,string,value,of,uri,components,get,port,if,string,utils,has,length,uri,components,get,path,list,string,segments,uri,components,get,path,segments,if,segments,is,empty,this,path,builder,add,path,uri,components,get,path,else,this,path,builder,add,path,segments,segments,to,array,new,string,segments,size,if,uri,components,get,query,params,is,empty,this,query,params,clear,this,query,params,put,all,uri,components,get,query,params,reset,scheme,specific,part,if,uri,components,get,fragment,null,this,fragment,uri,components,get,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1426266172;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "'uriComponents' must not be null")__		this.scheme = uriComponents.getScheme()__		if (uriComponents instanceof OpaqueUriComponents) {_			this.ssp = uriComponents.getSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uriComponents.getUserInfo() != null) {_				this.userInfo = uriComponents.getUserInfo()__			}_			if (uriComponents.getHost() != null) {_				this.host = uriComponents.getHost()__			}_			if (uriComponents.getPort() != -1) {_				this.port = String.valueOf(uriComponents.getPort())__			}_			if (StringUtils.hasLength(uriComponents.getPath())) {_				List<String> segments = uriComponents.getPathSegments()__				if (segments.isEmpty()) {_					_					this.pathBuilder.addPath(uriComponents.getPath())__				}_				else {_					this.pathBuilder.addPathSegments(segments.toArray(new String[segments.size()]))__				}_			}_			if (!uriComponents.getQueryParams().isEmpty()) {_				this.queryParams.clear()__				this.queryParams.putAll(uriComponents.getQueryParams())__			}_			resetSchemeSpecificPart()__		}_		if (uriComponents.getFragment() != null) {_			this.fragment = uriComponents.getFragment()__		}_		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,this,scheme,uri,components,get,scheme,if,uri,components,instanceof,opaque,uri,components,this,ssp,uri,components,get,scheme,specific,part,reset,hierarchical,components,else,if,uri,components,get,user,info,null,this,user,info,uri,components,get,user,info,if,uri,components,get,host,null,this,host,uri,components,get,host,if,uri,components,get,port,1,this,port,string,value,of,uri,components,get,port,if,string,utils,has,length,uri,components,get,path,list,string,segments,uri,components,get,path,segments,if,segments,is,empty,this,path,builder,add,path,uri,components,get,path,else,this,path,builder,add,path,segments,segments,to,array,new,string,segments,size,if,uri,components,get,query,params,is,empty,this,query,params,clear,this,query,params,put,all,uri,components,get,query,params,reset,scheme,specific,part,if,uri,components,get,fragment,null,this,fragment,uri,components,get,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1426267150;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "'uriComponents' must not be null")__		this.scheme = uriComponents.getScheme()__		if (uriComponents instanceof OpaqueUriComponents) {_			this.ssp = uriComponents.getSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uriComponents.getUserInfo() != null) {_				this.userInfo = uriComponents.getUserInfo()__			}_			if (uriComponents.getHost() != null) {_				this.host = uriComponents.getHost()__			}_			if (uriComponents.getPort() != -1) {_				this.port = String.valueOf(uriComponents.getPort())__			}_			if (StringUtils.hasLength(uriComponents.getPath())) {_				List<String> segments = uriComponents.getPathSegments()__				if (segments.isEmpty()) {_					_					this.pathBuilder.addPath(uriComponents.getPath())__				}_				else {_					this.pathBuilder.addPathSegments(segments.toArray(new String[segments.size()]))__				}_			}_			if (!uriComponents.getQueryParams().isEmpty()) {_				this.queryParams.clear()__				this.queryParams.putAll(uriComponents.getQueryParams())__			}_			resetSchemeSpecificPart()__		}_		if (uriComponents.getFragment() != null) {_			this.fragment = uriComponents.getFragment()__		}_		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,this,scheme,uri,components,get,scheme,if,uri,components,instanceof,opaque,uri,components,this,ssp,uri,components,get,scheme,specific,part,reset,hierarchical,components,else,if,uri,components,get,user,info,null,this,user,info,uri,components,get,user,info,if,uri,components,get,host,null,this,host,uri,components,get,host,if,uri,components,get,port,1,this,port,string,value,of,uri,components,get,port,if,string,utils,has,length,uri,components,get,path,list,string,segments,uri,components,get,path,segments,if,segments,is,empty,this,path,builder,add,path,uri,components,get,path,else,this,path,builder,add,path,segments,segments,to,array,new,string,segments,size,if,uri,components,get,query,params,is,empty,this,query,params,clear,this,query,params,put,all,uri,components,get,query,params,reset,scheme,specific,part,if,uri,components,get,fragment,null,this,fragment,uri,components,get,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1426553101;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "'uriComponents' must not be null")__		this.scheme = uriComponents.getScheme()__		if (uriComponents instanceof OpaqueUriComponents) {_			this.ssp = uriComponents.getSchemeSpecificPart()__			resetHierarchicalComponents()__		}_		else {_			if (uriComponents.getUserInfo() != null) {_				this.userInfo = uriComponents.getUserInfo()__			}_			if (uriComponents.getHost() != null) {_				this.host = uriComponents.getHost()__			}_			if (uriComponents.getPort() != -1) {_				this.port = String.valueOf(uriComponents.getPort())__			}_			if (StringUtils.hasLength(uriComponents.getPath())) {_				List<String> segments = uriComponents.getPathSegments()__				if (segments.isEmpty()) {_					_					this.pathBuilder.addPath(uriComponents.getPath())__				}_				else {_					this.pathBuilder.addPathSegments(segments.toArray(new String[segments.size()]))__				}_			}_			if (!uriComponents.getQueryParams().isEmpty()) {_				this.queryParams.clear()__				this.queryParams.putAll(uriComponents.getQueryParams())__			}_			resetSchemeSpecificPart()__		}_		if (uriComponents.getFragment() != null) {_			this.fragment = uriComponents.getFragment()__		}_		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,this,scheme,uri,components,get,scheme,if,uri,components,instanceof,opaque,uri,components,this,ssp,uri,components,get,scheme,specific,part,reset,hierarchical,components,else,if,uri,components,get,user,info,null,this,user,info,uri,components,get,user,info,if,uri,components,get,host,null,this,host,uri,components,get,host,if,uri,components,get,port,1,this,port,string,value,of,uri,components,get,port,if,string,utils,has,length,uri,components,get,path,list,string,segments,uri,components,get,path,segments,if,segments,is,empty,this,path,builder,add,path,uri,components,get,path,else,this,path,builder,add,path,segments,segments,to,array,new,string,segments,size,if,uri,components,get,query,params,is,empty,this,query,params,clear,this,query,params,put,all,uri,components,get,query,params,reset,scheme,specific,part,if,uri,components,get,fragment,null,this,fragment,uri,components,get,fragment,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1426880143;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "'uriComponents' must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1426880143;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "'uriComponents' must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1427143443;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "'uriComponents' must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1430734105;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "'uriComponents' must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1433951292;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "'uriComponents' must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1437567436;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "'uriComponents' must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1438166381;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1443431031;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1443797712;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1447791580;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1449004145;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1458830024;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1465299497;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1467730834;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1471517882;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1472594218;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1475874694;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1476136805;Set all components of this URI builder from the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,all,components,of,this,uri,builder,from,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1485553611;Initialize components of this {@link UriComponentsBuilder} from the_components of the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};initialize,components,of,this,link,uri,components,builder,from,the,components,of,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1486074560;Initialize components of this {@link UriComponentsBuilder} from the_components of the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};initialize,components,of,this,link,uri,components,builder,from,the,components,of,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1492678922;Initialize components of this {@code UriComponentsBuilder} from the_components of the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};initialize,components,of,this,code,uri,components,builder,from,the,components,of,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1493758742;Initialize components of this {@code UriComponentsBuilder} from the_components of the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};initialize,components,of,this,code,uri,components,builder,from,the,components,of,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1495868221;Initialize components of this {@code UriComponentsBuilder} from the_components of the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};initialize,components,of,this,code,uri,components,builder,from,the,components,of,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1496259743;Initialize components of this {@code UriComponentsBuilder} from the_components of the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};initialize,components,of,this,code,uri,components,builder,from,the,components,of,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1496370972;Initialize components of this {@code UriComponentsBuilder} from the_components of the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};initialize,components,of,this,code,uri,components,builder,from,the,components,of,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1496837955;Initialize components of this {@code UriComponentsBuilder} from the_components of the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};initialize,components,of,this,code,uri,components,builder,from,the,components,of,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1498780456;Initialize components of this {@code UriComponentsBuilder} from the_components of the given {@link UriComponents}._@param uriComponents the UriComponents instance_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};initialize,components,of,this,code,uri,components,builder,from,the,components,of,the,given,link,uri,components,param,uri,components,the,uri,components,instance,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1500460652;Set or append individual URI components of this builder from the values_of the given {@link UriComponents} instance._<p>For the semantics of each component (i.e. set vs append) check the_builder methods on this class. For example {@link #host(String)} sets_while {@link #path(String)} appends._@param uriComponents the UriComponents to copy from_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,or,append,individual,uri,components,of,this,builder,from,the,values,of,the,given,link,uri,components,instance,p,for,the,semantics,of,each,component,i,e,set,vs,append,check,the,builder,methods,on,this,class,for,example,link,host,string,sets,while,link,path,string,appends,param,uri,components,the,uri,components,to,copy,from,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1513715892;Set or append individual URI components of this builder from the values_of the given {@link UriComponents} instance._<p>For the semantics of each component (i.e. set vs append) check the_builder methods on this class. For example {@link #host(String)} sets_while {@link #path(String)} appends._@param uriComponents the UriComponents to copy from_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,or,append,individual,uri,components,of,this,builder,from,the,values,of,the,given,link,uri,components,instance,p,for,the,semantics,of,each,component,i,e,set,vs,append,check,the,builder,methods,on,this,class,for,example,link,host,string,sets,while,link,path,string,appends,param,uri,components,the,uri,components,to,copy,from,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1515504834;Set or append individual URI components of this builder from the values_of the given {@link UriComponents} instance._<p>For the semantics of each component (i.e. set vs append) check the_builder methods on this class. For example {@link #host(String)} sets_while {@link #path(String)} appends._@param uriComponents the UriComponents to copy from_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,or,append,individual,uri,components,of,this,builder,from,the,values,of,the,given,link,uri,components,instance,p,for,the,semantics,of,each,component,i,e,set,vs,append,check,the,builder,methods,on,this,class,for,example,link,host,string,sets,while,link,path,string,appends,param,uri,components,the,uri,components,to,copy,from,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1519588127;Set or append individual URI components of this builder from the values_of the given {@link UriComponents} instance._<p>For the semantics of each component (i.e. set vs append) check the_builder methods on this class. For example {@link #host(String)} sets_while {@link #path(String)} appends._@param uriComponents the UriComponents to copy from_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,or,append,individual,uri,components,of,this,builder,from,the,values,of,the,given,link,uri,components,instance,p,for,the,semantics,of,each,component,i,e,set,vs,append,check,the,builder,methods,on,this,class,for,example,link,host,string,sets,while,link,path,string,appends,param,uri,components,the,uri,components,to,copy,from,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1522332352;Set or append individual URI components of this builder from the values_of the given {@link UriComponents} instance._<p>For the semantics of each component (i.e. set vs append) check the_builder methods on this class. For example {@link #host(String)} sets_while {@link #path(String)} appends._@param uriComponents the UriComponents to copy from_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,or,append,individual,uri,components,of,this,builder,from,the,values,of,the,given,link,uri,components,instance,p,for,the,semantics,of,each,component,i,e,set,vs,append,check,the,builder,methods,on,this,class,for,example,link,host,string,sets,while,link,path,string,appends,param,uri,components,the,uri,components,to,copy,from,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1522351714;Set or append individual URI components of this builder from the values_of the given {@link UriComponents} instance._<p>For the semantics of each component (i.e. set vs append) check the_builder methods on this class. For example {@link #host(String)} sets_while {@link #path(String)} appends._@param uriComponents the UriComponents to copy from_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,or,append,individual,uri,components,of,this,builder,from,the,values,of,the,given,link,uri,components,instance,p,for,the,semantics,of,each,component,i,e,set,vs,append,check,the,builder,methods,on,this,class,for,example,link,host,string,sets,while,link,path,string,appends,param,uri,components,the,uri,components,to,copy,from,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1522361849;Set or append individual URI components of this builder from the values_of the given {@link UriComponents} instance._<p>For the semantics of each component (i.e. set vs append) check the_builder methods on this class. For example {@link #host(String)} sets_while {@link #path(String)} appends._@param uriComponents the UriComponents to copy from_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,or,append,individual,uri,components,of,this,builder,from,the,values,of,the,given,link,uri,components,instance,p,for,the,semantics,of,each,component,i,e,set,vs,append,check,the,builder,methods,on,this,class,for,example,link,host,string,sets,while,link,path,string,appends,param,uri,components,the,uri,components,to,copy,from,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1527192852;Set or append individual URI components of this builder from the values_of the given {@link UriComponents} instance._<p>For the semantics of each component (i.e. set vs append) check the_builder methods on this class. For example {@link #host(String)} sets_while {@link #path(String)} appends._@param uriComponents the UriComponents to copy from_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,or,append,individual,uri,components,of,this,builder,from,the,values,of,the,given,link,uri,components,instance,p,for,the,semantics,of,each,component,i,e,set,vs,append,check,the,builder,methods,on,this,class,for,example,link,host,string,sets,while,link,path,string,appends,param,uri,components,the,uri,components,to,copy,from,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1530174524;Set or append individual URI components of this builder from the values_of the given {@link UriComponents} instance._<p>For the semantics of each component (i.e. set vs append) check the_builder methods on this class. For example {@link #host(String)} sets_while {@link #path(String)} appends._@param uriComponents the UriComponents to copy from_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,or,append,individual,uri,components,of,this,builder,from,the,values,of,the,given,link,uri,components,instance,p,for,the,semantics,of,each,component,i,e,set,vs,append,check,the,builder,methods,on,this,class,for,example,link,host,string,sets,while,link,path,string,appends,param,uri,components,the,uri,components,to,copy,from,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1531746971;Set or append individual URI components of this builder from the values_of the given {@link UriComponents} instance._<p>For the semantics of each component (i.e. set vs append) check the_builder methods on this class. For example {@link #host(String)} sets_while {@link #path(String)} appends._@param uriComponents the UriComponents to copy from_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,or,append,individual,uri,components,of,this,builder,from,the,values,of,the,given,link,uri,components,instance,p,for,the,semantics,of,each,component,i,e,set,vs,append,check,the,builder,methods,on,this,class,for,example,link,host,string,sets,while,link,path,string,appends,param,uri,components,the,uri,components,to,copy,from,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1531843156;Set or append individual URI components of this builder from the values_of the given {@link UriComponents} instance._<p>For the semantics of each component (i.e. set vs append) check the_builder methods on this class. For example {@link #host(String)} sets_while {@link #path(String)} appends._@param uriComponents the UriComponents to copy from_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,or,append,individual,uri,components,of,this,builder,from,the,values,of,the,given,link,uri,components,instance,p,for,the,semantics,of,each,component,i,e,set,vs,append,check,the,builder,methods,on,this,class,for,example,link,host,string,sets,while,link,path,string,appends,param,uri,components,the,uri,components,to,copy,from,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1531863556;Set or append individual URI components of this builder from the values_of the given {@link UriComponents} instance._<p>For the semantics of each component (i.e. set vs append) check the_builder methods on this class. For example {@link #host(String)} sets_while {@link #path(String)} appends._@param uriComponents the UriComponents to copy from_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,or,append,individual,uri,components,of,this,builder,from,the,values,of,the,given,link,uri,components,instance,p,for,the,semantics,of,each,component,i,e,set,vs,append,check,the,builder,methods,on,this,class,for,example,link,host,string,sets,while,link,path,string,appends,param,uri,components,the,uri,components,to,copy,from,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1532041662;Set or append individual URI components of this builder from the values_of the given {@link UriComponents} instance._<p>For the semantics of each component (i.e. set vs append) check the_builder methods on this class. For example {@link #host(String)} sets_while {@link #path(String)} appends._@param uriComponents the UriComponents to copy from_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,or,append,individual,uri,components,of,this,builder,from,the,values,of,the,given,link,uri,components,instance,p,for,the,semantics,of,each,component,i,e,set,vs,append,check,the,builder,methods,on,this,class,for,example,link,host,string,sets,while,link,path,string,appends,param,uri,components,the,uri,components,to,copy,from,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1532041662;Set or append individual URI components of this builder from the values_of the given {@link UriComponents} instance._<p>For the semantics of each component (i.e. set vs append) check the_builder methods on this class. For example {@link #host(String)} sets_while {@link #path(String)} appends._@param uriComponents the UriComponents to copy from_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,or,append,individual,uri,components,of,this,builder,from,the,values,of,the,given,link,uri,components,instance,p,for,the,semantics,of,each,component,i,e,set,vs,append,check,the,builder,methods,on,this,class,for,example,link,host,string,sets,while,link,path,string,appends,param,uri,components,the,uri,components,to,copy,from,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1536571897;Set or append individual URI components of this builder from the values_of the given {@link UriComponents} instance._<p>For the semantics of each component (i.e. set vs append) check the_builder methods on this class. For example {@link #host(String)} sets_while {@link #path(String)} appends._@param uriComponents the UriComponents to copy from_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,or,append,individual,uri,components,of,this,builder,from,the,values,of,the,given,link,uri,components,instance,p,for,the,semantics,of,each,component,i,e,set,vs,append,check,the,builder,methods,on,this,class,for,example,link,host,string,sets,while,link,path,string,appends,param,uri,components,the,uri,components,to,copy,from,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1546464968;Set or append individual URI components of this builder from the values_of the given {@link UriComponents} instance._<p>For the semantics of each component (i.e. set vs append) check the_builder methods on this class. For example {@link #host(String)} sets_while {@link #path(String)} appends._@param uriComponents the UriComponents to copy from_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,or,append,individual,uri,components,of,this,builder,from,the,values,of,the,given,link,uri,components,instance,p,for,the,semantics,of,each,component,i,e,set,vs,append,check,the,builder,methods,on,this,class,for,example,link,host,string,sets,while,link,path,string,appends,param,uri,components,the,uri,components,to,copy,from,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1546963593;Set or append individual URI components of this builder from the values_of the given {@link UriComponents} instance._<p>For the semantics of each component (i.e. set vs append) check the_builder methods on this class. For example {@link #host(String)} sets_while {@link #path(String)} appends._@param uriComponents the UriComponents to copy from_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,or,append,individual,uri,components,of,this,builder,from,the,values,of,the,given,link,uri,components,instance,p,for,the,semantics,of,each,component,i,e,set,vs,append,check,the,builder,methods,on,this,class,for,example,link,host,string,sets,while,link,path,string,appends,param,uri,components,the,uri,components,to,copy,from,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder uriComponents(UriComponents uriComponents);1547005422;Set or append individual URI components of this builder from the values_of the given {@link UriComponents} instance._<p>For the semantics of each component (i.e. set vs append) check the_builder methods on this class. For example {@link #host(String)} sets_while {@link #path(String)} appends._@param uriComponents the UriComponents to copy from_@return this UriComponentsBuilder;public UriComponentsBuilder uriComponents(UriComponents uriComponents) {_		Assert.notNull(uriComponents, "UriComponents must not be null")__		uriComponents.copyToUriComponentsBuilder(this)__		return this__	};set,or,append,individual,uri,components,of,this,builder,from,the,values,of,the,given,link,uri,components,instance,p,for,the,semantics,of,each,component,i,e,set,vs,append,check,the,builder,methods,on,this,class,for,example,link,host,string,sets,while,link,path,string,appends,param,uri,components,the,uri,components,to,copy,from,return,this,uri,components,builder;public,uri,components,builder,uri,components,uri,components,uri,components,assert,not,null,uri,components,uri,components,must,not,be,null,uri,components,copy,to,uri,components,builder,this,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1328020251;Appends the given path to the existing path of this builder. The given path may contain URI template variables.__@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		if (path != null) {_			this.pathBuilder = this.pathBuilder.appendPath(path)__		}_		else {_			this.pathBuilder = NULL_PATH_COMPONENT_BUILDER__		}_		return this__	};appends,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,if,path,null,this,path,builder,this,path,builder,append,path,path,else,this,path,builder,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1329142650;Appends the given path to the existing path of this builder. The given path may contain URI template variables.__@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		if (path != null) {_			this.pathBuilder = this.pathBuilder.appendPath(path)__		}_		else {_			this.pathBuilder = NULL_PATH_COMPONENT_BUILDER__		}_		return this__	};appends,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,if,path,null,this,path,builder,this,path,builder,append,path,path,else,this,path,builder,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1335903038;Appends the given path to the existing path of this builder. The given path may contain URI template variables.__@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		if (path != null) {_			this.pathBuilder = this.pathBuilder.appendPath(path)__		}_		else {_			this.pathBuilder = NULL_PATH_COMPONENT_BUILDER__		}_		return this__	};appends,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,if,path,null,this,path,builder,this,path,builder,append,path,path,else,this,path,builder,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1345652603;Appends the given path to the existing path of this builder. The given_path may contain URI template variables.__@param path_the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		if (path != null) {_			this.pathBuilder = this.pathBuilder.appendPath(path)__		}_		else {_			this.pathBuilder = NULL_PATH_COMPONENT_BUILDER__		}_		return this__	};appends,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,if,path,null,this,path,builder,this,path,builder,append,path,path,else,this,path,builder,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1348582810;Appends the given path to the existing path of this builder. The given_path may contain URI template variables.__@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		if (path != null) {_			this.pathBuilder = this.pathBuilder.appendPath(path)__		}_		else {_			this.pathBuilder = NULL_PATH_COMPONENT_BUILDER__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,if,path,null,this,path,builder,this,path,builder,append,path,path,else,this,path,builder,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1349904861;Appends the given path to the existing path of this builder. The given_path may contain URI template variables.__@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		if (path != null) {_			this.pathBuilder = this.pathBuilder.appendPath(path)__		}_		else {_			this.pathBuilder = NULL_PATH_COMPONENT_BUILDER__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,if,path,null,this,path,builder,this,path,builder,append,path,path,else,this,path,builder,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1350918288;Appends the given path to the existing path of this builder. The given_path may contain URI template variables.__@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		if (path != null) {_			this.pathBuilder = this.pathBuilder.appendPath(path)__		}_		else {_			this.pathBuilder = NULL_PATH_COMPONENT_BUILDER__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,if,path,null,this,path,builder,this,path,builder,append,path,path,else,this,path,builder,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1356735495;Appends the given path to the existing path of this builder. The given_path may contain URI template variables.__@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		if (path != null) {_			this.pathBuilder = this.pathBuilder.appendPath(path)__		}_		else {_			this.pathBuilder = NULL_PATH_COMPONENT_BUILDER__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,if,path,null,this,path,builder,this,path,builder,append,path,path,else,this,path,builder,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1357119239;Appends the given path to the existing path of this builder. The given_path may contain URI template variables.__@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		if (path != null) {_			this.pathBuilder = this.pathBuilder.appendPath(path)__		}_		else {_			this.pathBuilder = NULL_PATH_COMPONENT_BUILDER__		}_		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,if,path,null,this,path,builder,this,path,builder,append,path,path,else,this,path,builder,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1362408075;Appends the given path to the existing path of this builder. The given_path may contain URI template variables.__@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1363208506;Appends the given path to the existing path of this builder. The given_path may contain URI template variables.__@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1367580131;Appends the given path to the existing path of this builder. The given_path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1367955086;Appends the given path to the existing path of this builder. The given_path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1368482696;Appends the given path to the existing path of this builder. The given_path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1375201821;Appends the given path to the existing path of this builder. The given_path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1380131933;Appends the given path to the existing path of this builder. The given_path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1382387167;Appends the given path to the existing path of this builder. The given_path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1382387168;Appends the given path to the existing path of this builder. The given_path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1382744567;Appends the given path to the existing path of this builder. The given_path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1382754578;Appends the given path to the existing path of this builder. The given_path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1391723719;Appends the given path to the existing path of this builder. The given_path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1400538909;Appends the given path to the existing path of this builder. The given_path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};appends,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1400541968;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1403775847;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1404917891;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1409317151;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1409318475;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1409822411;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1414695064;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1417799775;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1423547594;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1424274316;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1425610347;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1426255003;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1426266172;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1426267150;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1426553101;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1426880143;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1426880143;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1427143443;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1430734105;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1433951292;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1437567436;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1438166381;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1443431031;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1443797712;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1447791580;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1449004145;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1458830024;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1465299497;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1467730834;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1471517882;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1472594218;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1475874694;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1476136805;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1485553611;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder path(String path);1486074560;Append the given path to the existing path of this builder._The given path may contain URI template variables._@param path the URI path_@return this UriComponentsBuilder;public UriComponentsBuilder path(String path) {_		this.pathBuilder.addPath(path)__		resetSchemeSpecificPart()__		return this__	};append,the,given,path,to,the,existing,path,of,this,builder,the,given,path,may,contain,uri,template,variables,param,path,the,uri,path,return,this,uri,components,builder;public,uri,components,builder,path,string,path,this,path,builder,add,path,path,reset,scheme,specific,part,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1382754578;Adds the given query parameters._@param params the params_@return this UriComponentsBuilder;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		Assert.notNull(params, "'params' must not be null")__		this.queryParams.putAll(params)__		return this__	};adds,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder;public,uri,components,builder,query,params,multi,value,map,string,string,params,assert,not,null,params,params,must,not,be,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1391723719;Adds the given query parameters._@param params the params_@return this UriComponentsBuilder;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		Assert.notNull(params, "'params' must not be null")__		this.queryParams.putAll(params)__		return this__	};adds,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder;public,uri,components,builder,query,params,multi,value,map,string,string,params,assert,not,null,params,params,must,not,be,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1400538909;Adds the given query parameters._@param params the params_@return this UriComponentsBuilder;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		Assert.notNull(params, "'params' must not be null")__		this.queryParams.putAll(params)__		return this__	};adds,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder;public,uri,components,builder,query,params,multi,value,map,string,string,params,assert,not,null,params,params,must,not,be,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1400541968;Add the given query parameters._@param params the params_@return this UriComponentsBuilder;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		Assert.notNull(params, "'params' must not be null")__		this.queryParams.putAll(params)__		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder;public,uri,components,builder,query,params,multi,value,map,string,string,params,assert,not,null,params,params,must,not,be,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1403775847;Add the given query parameters._@param params the params_@return this UriComponentsBuilder;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		Assert.notNull(params, "'params' must not be null")__		this.queryParams.putAll(params)__		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder;public,uri,components,builder,query,params,multi,value,map,string,string,params,assert,not,null,params,params,must,not,be,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1404917891;Add the given query parameters._@param params the params_@return this UriComponentsBuilder;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		Assert.notNull(params, "'params' must not be null")__		this.queryParams.putAll(params)__		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder;public,uri,components,builder,query,params,multi,value,map,string,string,params,assert,not,null,params,params,must,not,be,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1409317151;Add the given query parameters._@param params the params_@return this UriComponentsBuilder;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		Assert.notNull(params, "'params' must not be null")__		this.queryParams.putAll(params)__		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder;public,uri,components,builder,query,params,multi,value,map,string,string,params,assert,not,null,params,params,must,not,be,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1409318475;Add the given query parameters._@param params the params_@return this UriComponentsBuilder;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		Assert.notNull(params, "'params' must not be null")__		this.queryParams.putAll(params)__		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder;public,uri,components,builder,query,params,multi,value,map,string,string,params,assert,not,null,params,params,must,not,be,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1409822411;Add the given query parameters._@param params the params_@return this UriComponentsBuilder;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		Assert.notNull(params, "'params' must not be null")__		this.queryParams.putAll(params)__		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder;public,uri,components,builder,query,params,multi,value,map,string,string,params,assert,not,null,params,params,must,not,be,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1414695064;Add the given query parameters._@param params the params_@return this UriComponentsBuilder;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		Assert.notNull(params, "'params' must not be null")__		this.queryParams.putAll(params)__		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder;public,uri,components,builder,query,params,multi,value,map,string,string,params,assert,not,null,params,params,must,not,be,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1417799775;Add the given query parameters._@param params the params_@return this UriComponentsBuilder;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		Assert.notNull(params, "'params' must not be null")__		this.queryParams.putAll(params)__		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder;public,uri,components,builder,query,params,multi,value,map,string,string,params,assert,not,null,params,params,must,not,be,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1423547594;Add the given query parameters._@param params the params_@return this UriComponentsBuilder;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		Assert.notNull(params, "'params' must not be null")__		this.queryParams.putAll(params)__		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder;public,uri,components,builder,query,params,multi,value,map,string,string,params,assert,not,null,params,params,must,not,be,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1424274316;Add the given query parameters._@param params the params_@return this UriComponentsBuilder;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		Assert.notNull(params, "'params' must not be null")__		this.queryParams.putAll(params)__		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder;public,uri,components,builder,query,params,multi,value,map,string,string,params,assert,not,null,params,params,must,not,be,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1425610347;Add the given query parameters._@param params the params_@return this UriComponentsBuilder;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		Assert.notNull(params, "'params' must not be null")__		this.queryParams.putAll(params)__		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder;public,uri,components,builder,query,params,multi,value,map,string,string,params,assert,not,null,params,params,must,not,be,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1426255003;Add the given query parameters._@param params the params_@return this UriComponentsBuilder;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		Assert.notNull(params, "'params' must not be null")__		this.queryParams.putAll(params)__		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder;public,uri,components,builder,query,params,multi,value,map,string,string,params,assert,not,null,params,params,must,not,be,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1426266172;Add the given query parameters._@param params the params_@return this UriComponentsBuilder;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		Assert.notNull(params, "'params' must not be null")__		this.queryParams.putAll(params)__		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder;public,uri,components,builder,query,params,multi,value,map,string,string,params,assert,not,null,params,params,must,not,be,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1426267150;Add the given query parameters._@param params the params_@return this UriComponentsBuilder;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		Assert.notNull(params, "'params' must not be null")__		this.queryParams.putAll(params)__		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder;public,uri,components,builder,query,params,multi,value,map,string,string,params,assert,not,null,params,params,must,not,be,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1426553101;Add the given query parameters._@param params the params_@return this UriComponentsBuilder;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		Assert.notNull(params, "'params' must not be null")__		this.queryParams.putAll(params)__		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder;public,uri,components,builder,query,params,multi,value,map,string,string,params,assert,not,null,params,params,must,not,be,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1426880143;Add the given query parameters._@param params the params_@return this UriComponentsBuilder;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		Assert.notNull(params, "'params' must not be null")__		this.queryParams.putAll(params)__		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder;public,uri,components,builder,query,params,multi,value,map,string,string,params,assert,not,null,params,params,must,not,be,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1426880143;Add the given query parameters._@param params the params_@return this UriComponentsBuilder;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		Assert.notNull(params, "'params' must not be null")__		this.queryParams.putAll(params)__		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder;public,uri,components,builder,query,params,multi,value,map,string,string,params,assert,not,null,params,params,must,not,be,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1427143443;Add the given query parameters._@param params the params_@return this UriComponentsBuilder;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		Assert.notNull(params, "'params' must not be null")__		this.queryParams.putAll(params)__		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder;public,uri,components,builder,query,params,multi,value,map,string,string,params,assert,not,null,params,params,must,not,be,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1430734105;Add the given query parameters._@param params the params_@return this UriComponentsBuilder;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		Assert.notNull(params, "'params' must not be null")__		this.queryParams.putAll(params)__		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder;public,uri,components,builder,query,params,multi,value,map,string,string,params,assert,not,null,params,params,must,not,be,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1433951292;Add the given query parameters._@param params the params_@return this UriComponentsBuilder;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		Assert.notNull(params, "'params' must not be null")__		this.queryParams.putAll(params)__		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder;public,uri,components,builder,query,params,multi,value,map,string,string,params,assert,not,null,params,params,must,not,be,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1437567436;Add the given query parameters._@param params the params_@return this UriComponentsBuilder;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		Assert.notNull(params, "'params' must not be null")__		this.queryParams.putAll(params)__		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder;public,uri,components,builder,query,params,multi,value,map,string,string,params,assert,not,null,params,params,must,not,be,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1438166381;Add the given query parameters._@param params the params_@return this UriComponentsBuilder;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder;public,uri,components,builder,query,params,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1443431031;Add the given query parameters._@param params the params_@return this UriComponentsBuilder;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder;public,uri,components,builder,query,params,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1443797712;Add the given query parameters._@param params the params_@return this UriComponentsBuilder;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder;public,uri,components,builder,query,params,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1447791580;Add the given query parameters._@param params the params_@return this UriComponentsBuilder;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder;public,uri,components,builder,query,params,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1449004145;Add the given query parameters._@param params the params_@return this UriComponentsBuilder;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder;public,uri,components,builder,query,params,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1458830024;Add the given query parameters._@param params the params_@return this UriComponentsBuilder;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder;public,uri,components,builder,query,params,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1465299497;Add the given query parameters._@param params the params_@return this UriComponentsBuilder;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder;public,uri,components,builder,query,params,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1467730834;Add the given query parameters._@param params the params_@return this UriComponentsBuilder;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder;public,uri,components,builder,query,params,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1471517882;Add the given query parameters._@param params the params_@return this UriComponentsBuilder_@since 4.0;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder,since,4,0;public,uri,components,builder,query,params,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1472594218;Add the given query parameters._@param params the params_@return this UriComponentsBuilder_@since 4.0;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder,since,4,0;public,uri,components,builder,query,params,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1475874694;Add the given query parameters._@param params the params_@return this UriComponentsBuilder_@since 4.0;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder,since,4,0;public,uri,components,builder,query,params,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1476136805;Add the given query parameters._@param params the params_@return this UriComponentsBuilder_@since 4.0;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder,since,4,0;public,uri,components,builder,query,params,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1485553611;Add the given query parameters._@param params the params_@return this UriComponentsBuilder_@since 4.0;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder,since,4,0;public,uri,components,builder,query,params,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> public UriComponentsBuilder queryParams(MultiValueMap<String, String> params);1486074560;Add the given query parameters._@param params the params_@return this UriComponentsBuilder_@since 4.0;public UriComponentsBuilder queryParams(MultiValueMap<String, String> params) {_		if (params != null) {_			this.queryParams.putAll(params)__		}_		return this__	};add,the,given,query,parameters,param,params,the,params,return,this,uri,components,builder,since,4,0;public,uri,components,builder,query,params,multi,value,map,string,string,params,if,params,null,this,query,params,put,all,params,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder userInfo(String userInfo);1492678922;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;override,public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
UriComponentsBuilder -> @Override 	public UriComponentsBuilder userInfo(String userInfo);1493758742;Set the URI user info. The given user info may contain URI template variables,_and may also be {@code null} to clear the user info of this builder._@param userInfo the URI user info_@return this UriComponentsBuilder;@Override_	public UriComponentsBuilder userInfo(String userInfo) {_		this.userInfo = userInfo__		resetSchemeSpecificPart()__		return this__	};set,the,uri,user,info,the,given,user,info,may,contain,uri,template,variables,and,may,also,be,code,null,to,clear,the,user,info,of,this,builder,param,user,info,the,uri,user,info,return,this,uri,components,builder;override,public,uri,components,builder,user,info,string,user,info,this,user,info,user,info,reset,scheme,specific,part,return,this
