# id;timestamp;commentText;codeText;commentWords;codeWords
HttpInvokerClientInterceptor -> public HttpInvokerRequestExecutor getHttpInvokerRequestExecutor();1328020251;Return the HttpInvokerRequestExecutor used by this remote accessor._<p>Creates a default SimpleHttpInvokerRequestExecutor if no executor_has been initialized already.;public HttpInvokerRequestExecutor getHttpInvokerRequestExecutor() {_		if (this.httpInvokerRequestExecutor == null) {_			SimpleHttpInvokerRequestExecutor executor = new SimpleHttpInvokerRequestExecutor()__			executor.setBeanClassLoader(getBeanClassLoader())__			this.httpInvokerRequestExecutor = executor__		}_		return this.httpInvokerRequestExecutor__	};return,the,http,invoker,request,executor,used,by,this,remote,accessor,p,creates,a,default,simple,http,invoker,request,executor,if,no,executor,has,been,initialized,already;public,http,invoker,request,executor,get,http,invoker,request,executor,if,this,http,invoker,request,executor,null,simple,http,invoker,request,executor,executor,new,simple,http,invoker,request,executor,executor,set,bean,class,loader,get,bean,class,loader,this,http,invoker,request,executor,executor,return,this,http,invoker,request,executor
HttpInvokerClientInterceptor -> public HttpInvokerRequestExecutor getHttpInvokerRequestExecutor();1356735495;Return the HttpInvokerRequestExecutor used by this remote accessor._<p>Creates a default SimpleHttpInvokerRequestExecutor if no executor_has been initialized already.;public HttpInvokerRequestExecutor getHttpInvokerRequestExecutor() {_		if (this.httpInvokerRequestExecutor == null) {_			SimpleHttpInvokerRequestExecutor executor = new SimpleHttpInvokerRequestExecutor()__			executor.setBeanClassLoader(getBeanClassLoader())__			this.httpInvokerRequestExecutor = executor__		}_		return this.httpInvokerRequestExecutor__	};return,the,http,invoker,request,executor,used,by,this,remote,accessor,p,creates,a,default,simple,http,invoker,request,executor,if,no,executor,has,been,initialized,already;public,http,invoker,request,executor,get,http,invoker,request,executor,if,this,http,invoker,request,executor,null,simple,http,invoker,request,executor,executor,new,simple,http,invoker,request,executor,executor,set,bean,class,loader,get,bean,class,loader,this,http,invoker,request,executor,executor,return,this,http,invoker,request,executor
HttpInvokerClientInterceptor -> public HttpInvokerRequestExecutor getHttpInvokerRequestExecutor();1357119239;Return the HttpInvokerRequestExecutor used by this remote accessor._<p>Creates a default SimpleHttpInvokerRequestExecutor if no executor_has been initialized already.;public HttpInvokerRequestExecutor getHttpInvokerRequestExecutor() {_		if (this.httpInvokerRequestExecutor == null) {_			SimpleHttpInvokerRequestExecutor executor = new SimpleHttpInvokerRequestExecutor()__			executor.setBeanClassLoader(getBeanClassLoader())__			this.httpInvokerRequestExecutor = executor__		}_		return this.httpInvokerRequestExecutor__	};return,the,http,invoker,request,executor,used,by,this,remote,accessor,p,creates,a,default,simple,http,invoker,request,executor,if,no,executor,has,been,initialized,already;public,http,invoker,request,executor,get,http,invoker,request,executor,if,this,http,invoker,request,executor,null,simple,http,invoker,request,executor,executor,new,simple,http,invoker,request,executor,executor,set,bean,class,loader,get,bean,class,loader,this,http,invoker,request,executor,executor,return,this,http,invoker,request,executor
HttpInvokerClientInterceptor -> public HttpInvokerRequestExecutor getHttpInvokerRequestExecutor();1368482696;Return the HttpInvokerRequestExecutor used by this remote accessor._<p>Creates a default SimpleHttpInvokerRequestExecutor if no executor_has been initialized already.;public HttpInvokerRequestExecutor getHttpInvokerRequestExecutor() {_		if (this.httpInvokerRequestExecutor == null) {_			SimpleHttpInvokerRequestExecutor executor = new SimpleHttpInvokerRequestExecutor()__			executor.setBeanClassLoader(getBeanClassLoader())__			this.httpInvokerRequestExecutor = executor__		}_		return this.httpInvokerRequestExecutor__	};return,the,http,invoker,request,executor,used,by,this,remote,accessor,p,creates,a,default,simple,http,invoker,request,executor,if,no,executor,has,been,initialized,already;public,http,invoker,request,executor,get,http,invoker,request,executor,if,this,http,invoker,request,executor,null,simple,http,invoker,request,executor,executor,new,simple,http,invoker,request,executor,executor,set,bean,class,loader,get,bean,class,loader,this,http,invoker,request,executor,executor,return,this,http,invoker,request,executor
HttpInvokerClientInterceptor -> public HttpInvokerRequestExecutor getHttpInvokerRequestExecutor();1381528078;Return the HttpInvokerRequestExecutor used by this remote accessor._<p>Creates a default SimpleHttpInvokerRequestExecutor if no executor_has been initialized already.;public HttpInvokerRequestExecutor getHttpInvokerRequestExecutor() {_		if (this.httpInvokerRequestExecutor == null) {_			SimpleHttpInvokerRequestExecutor executor = new SimpleHttpInvokerRequestExecutor()__			executor.setBeanClassLoader(getBeanClassLoader())__			this.httpInvokerRequestExecutor = executor__		}_		return this.httpInvokerRequestExecutor__	};return,the,http,invoker,request,executor,used,by,this,remote,accessor,p,creates,a,default,simple,http,invoker,request,executor,if,no,executor,has,been,initialized,already;public,http,invoker,request,executor,get,http,invoker,request,executor,if,this,http,invoker,request,executor,null,simple,http,invoker,request,executor,executor,new,simple,http,invoker,request,executor,executor,set,bean,class,loader,get,bean,class,loader,this,http,invoker,request,executor,executor,return,this,http,invoker,request,executor
HttpInvokerClientInterceptor -> public HttpInvokerRequestExecutor getHttpInvokerRequestExecutor();1385501137;Return the HttpInvokerRequestExecutor used by this remote accessor._<p>Creates a default SimpleHttpInvokerRequestExecutor if no executor_has been initialized already.;public HttpInvokerRequestExecutor getHttpInvokerRequestExecutor() {_		if (this.httpInvokerRequestExecutor == null) {_			SimpleHttpInvokerRequestExecutor executor = new SimpleHttpInvokerRequestExecutor()__			executor.setBeanClassLoader(getBeanClassLoader())__			this.httpInvokerRequestExecutor = executor__		}_		return this.httpInvokerRequestExecutor__	};return,the,http,invoker,request,executor,used,by,this,remote,accessor,p,creates,a,default,simple,http,invoker,request,executor,if,no,executor,has,been,initialized,already;public,http,invoker,request,executor,get,http,invoker,request,executor,if,this,http,invoker,request,executor,null,simple,http,invoker,request,executor,executor,new,simple,http,invoker,request,executor,executor,set,bean,class,loader,get,bean,class,loader,this,http,invoker,request,executor,executor,return,this,http,invoker,request,executor
HttpInvokerClientInterceptor -> public HttpInvokerRequestExecutor getHttpInvokerRequestExecutor();1403799291;Return the HttpInvokerRequestExecutor used by this remote accessor._<p>Creates a default SimpleHttpInvokerRequestExecutor if no executor_has been initialized already.;public HttpInvokerRequestExecutor getHttpInvokerRequestExecutor() {_		if (this.httpInvokerRequestExecutor == null) {_			SimpleHttpInvokerRequestExecutor executor = new SimpleHttpInvokerRequestExecutor()__			executor.setBeanClassLoader(getBeanClassLoader())__			this.httpInvokerRequestExecutor = executor__		}_		return this.httpInvokerRequestExecutor__	};return,the,http,invoker,request,executor,used,by,this,remote,accessor,p,creates,a,default,simple,http,invoker,request,executor,if,no,executor,has,been,initialized,already;public,http,invoker,request,executor,get,http,invoker,request,executor,if,this,http,invoker,request,executor,null,simple,http,invoker,request,executor,executor,new,simple,http,invoker,request,executor,executor,set,bean,class,loader,get,bean,class,loader,this,http,invoker,request,executor,executor,return,this,http,invoker,request,executor
HttpInvokerClientInterceptor -> public HttpInvokerRequestExecutor getHttpInvokerRequestExecutor();1468613531;Return the HttpInvokerRequestExecutor used by this remote accessor._<p>Creates a default SimpleHttpInvokerRequestExecutor if no executor_has been initialized already.;public HttpInvokerRequestExecutor getHttpInvokerRequestExecutor() {_		if (this.httpInvokerRequestExecutor == null) {_			SimpleHttpInvokerRequestExecutor executor = new SimpleHttpInvokerRequestExecutor()__			executor.setBeanClassLoader(getBeanClassLoader())__			this.httpInvokerRequestExecutor = executor__		}_		return this.httpInvokerRequestExecutor__	};return,the,http,invoker,request,executor,used,by,this,remote,accessor,p,creates,a,default,simple,http,invoker,request,executor,if,no,executor,has,been,initialized,already;public,http,invoker,request,executor,get,http,invoker,request,executor,if,this,http,invoker,request,executor,null,simple,http,invoker,request,executor,executor,new,simple,http,invoker,request,executor,executor,set,bean,class,loader,get,bean,class,loader,this,http,invoker,request,executor,executor,return,this,http,invoker,request,executor
HttpInvokerClientInterceptor -> public HttpInvokerRequestExecutor getHttpInvokerRequestExecutor();1481218181;Return the HttpInvokerRequestExecutor used by this remote accessor._<p>Creates a default SimpleHttpInvokerRequestExecutor if no executor_has been initialized already.;public HttpInvokerRequestExecutor getHttpInvokerRequestExecutor() {_		if (this.httpInvokerRequestExecutor == null) {_			SimpleHttpInvokerRequestExecutor executor = new SimpleHttpInvokerRequestExecutor()__			executor.setBeanClassLoader(getBeanClassLoader())__			this.httpInvokerRequestExecutor = executor__		}_		return this.httpInvokerRequestExecutor__	};return,the,http,invoker,request,executor,used,by,this,remote,accessor,p,creates,a,default,simple,http,invoker,request,executor,if,no,executor,has,been,initialized,already;public,http,invoker,request,executor,get,http,invoker,request,executor,if,this,http,invoker,request,executor,null,simple,http,invoker,request,executor,executor,new,simple,http,invoker,request,executor,executor,set,bean,class,loader,get,bean,class,loader,this,http,invoker,request,executor,executor,return,this,http,invoker,request,executor
HttpInvokerClientInterceptor -> public HttpInvokerRequestExecutor getHttpInvokerRequestExecutor();1490350197;Return the HttpInvokerRequestExecutor used by this remote accessor._<p>Creates a default SimpleHttpInvokerRequestExecutor if no executor_has been initialized already.;public HttpInvokerRequestExecutor getHttpInvokerRequestExecutor() {_		if (this.httpInvokerRequestExecutor == null) {_			SimpleHttpInvokerRequestExecutor executor = new SimpleHttpInvokerRequestExecutor()__			executor.setBeanClassLoader(getBeanClassLoader())__			this.httpInvokerRequestExecutor = executor__		}_		return this.httpInvokerRequestExecutor__	};return,the,http,invoker,request,executor,used,by,this,remote,accessor,p,creates,a,default,simple,http,invoker,request,executor,if,no,executor,has,been,initialized,already;public,http,invoker,request,executor,get,http,invoker,request,executor,if,this,http,invoker,request,executor,null,simple,http,invoker,request,executor,executor,new,simple,http,invoker,request,executor,executor,set,bean,class,loader,get,bean,class,loader,this,http,invoker,request,executor,executor,return,this,http,invoker,request,executor
HttpInvokerClientInterceptor -> public HttpInvokerRequestExecutor getHttpInvokerRequestExecutor();1495868221;Return the HttpInvokerRequestExecutor used by this remote accessor._<p>Creates a default SimpleHttpInvokerRequestExecutor if no executor_has been initialized already.;public HttpInvokerRequestExecutor getHttpInvokerRequestExecutor() {_		if (this.httpInvokerRequestExecutor == null) {_			SimpleHttpInvokerRequestExecutor executor = new SimpleHttpInvokerRequestExecutor()__			executor.setBeanClassLoader(getBeanClassLoader())__			this.httpInvokerRequestExecutor = executor__		}_		return this.httpInvokerRequestExecutor__	};return,the,http,invoker,request,executor,used,by,this,remote,accessor,p,creates,a,default,simple,http,invoker,request,executor,if,no,executor,has,been,initialized,already;public,http,invoker,request,executor,get,http,invoker,request,executor,if,this,http,invoker,request,executor,null,simple,http,invoker,request,executor,executor,new,simple,http,invoker,request,executor,executor,set,bean,class,loader,get,bean,class,loader,this,http,invoker,request,executor,executor,return,this,http,invoker,request,executor
HttpInvokerClientInterceptor -> public HttpInvokerRequestExecutor getHttpInvokerRequestExecutor();1498780456;Return the HttpInvokerRequestExecutor used by this remote accessor._<p>Creates a default SimpleHttpInvokerRequestExecutor if no executor_has been initialized already.;public HttpInvokerRequestExecutor getHttpInvokerRequestExecutor() {_		if (this.httpInvokerRequestExecutor == null) {_			SimpleHttpInvokerRequestExecutor executor = new SimpleHttpInvokerRequestExecutor()__			executor.setBeanClassLoader(getBeanClassLoader())__			this.httpInvokerRequestExecutor = executor__		}_		return this.httpInvokerRequestExecutor__	};return,the,http,invoker,request,executor,used,by,this,remote,accessor,p,creates,a,default,simple,http,invoker,request,executor,if,no,executor,has,been,initialized,already;public,http,invoker,request,executor,get,http,invoker,request,executor,if,this,http,invoker,request,executor,null,simple,http,invoker,request,executor,executor,new,simple,http,invoker,request,executor,executor,set,bean,class,loader,get,bean,class,loader,this,http,invoker,request,executor,executor,return,this,http,invoker,request,executor
HttpInvokerClientInterceptor -> public HttpInvokerRequestExecutor getHttpInvokerRequestExecutor();1500448076;Return the HttpInvokerRequestExecutor used by this remote accessor._<p>Creates a default SimpleHttpInvokerRequestExecutor if no executor_has been initialized already.;public HttpInvokerRequestExecutor getHttpInvokerRequestExecutor() {_		if (this.httpInvokerRequestExecutor == null) {_			SimpleHttpInvokerRequestExecutor executor = new SimpleHttpInvokerRequestExecutor()__			executor.setBeanClassLoader(getBeanClassLoader())__			this.httpInvokerRequestExecutor = executor__		}_		return this.httpInvokerRequestExecutor__	};return,the,http,invoker,request,executor,used,by,this,remote,accessor,p,creates,a,default,simple,http,invoker,request,executor,if,no,executor,has,been,initialized,already;public,http,invoker,request,executor,get,http,invoker,request,executor,if,this,http,invoker,request,executor,null,simple,http,invoker,request,executor,executor,new,simple,http,invoker,request,executor,executor,set,bean,class,loader,get,bean,class,loader,this,http,invoker,request,executor,executor,return,this,http,invoker,request,executor
HttpInvokerClientInterceptor -> protected RemoteInvocationResult executeRequest(RemoteInvocation invocation) throws Exception;1328020251;Execute the given remote invocation via the HttpInvokerRequestExecutor._<p>Can be overridden in subclasses to pass a different configuration object_to the executor. Alternatively, add further configuration properties in a_subclass of this accessor: By default, the accessor passed itself as_configuration object to the executor._@param invocation the RemoteInvocation to execute_@return the RemoteInvocationResult object_@throws IOException if thrown by I/O operations_@throws ClassNotFoundException if thrown during deserialization_@throws Exception in case of general errors_@see #getHttpInvokerRequestExecutor_@see HttpInvokerClientConfiguration;protected RemoteInvocationResult executeRequest(RemoteInvocation invocation) throws Exception {_		return getHttpInvokerRequestExecutor().executeRequest(this, invocation)__	};execute,the,given,remote,invocation,via,the,http,invoker,request,executor,p,can,be,overridden,in,subclasses,to,pass,a,different,configuration,object,to,the,executor,alternatively,add,further,configuration,properties,in,a,subclass,of,this,accessor,by,default,the,accessor,passed,itself,as,configuration,object,to,the,executor,param,invocation,the,remote,invocation,to,execute,return,the,remote,invocation,result,object,throws,ioexception,if,thrown,by,i,o,operations,throws,class,not,found,exception,if,thrown,during,deserialization,throws,exception,in,case,of,general,errors,see,get,http,invoker,request,executor,see,http,invoker,client,configuration;protected,remote,invocation,result,execute,request,remote,invocation,invocation,throws,exception,return,get,http,invoker,request,executor,execute,request,this,invocation
HttpInvokerClientInterceptor -> protected RemoteInvocationResult executeRequest(RemoteInvocation invocation) throws Exception;1356735495;Execute the given remote invocation via the HttpInvokerRequestExecutor._<p>Can be overridden in subclasses to pass a different configuration object_to the executor. Alternatively, add further configuration properties in a_subclass of this accessor: By default, the accessor passed itself as_configuration object to the executor._@param invocation the RemoteInvocation to execute_@return the RemoteInvocationResult object_@throws IOException if thrown by I/O operations_@throws ClassNotFoundException if thrown during deserialization_@throws Exception in case of general errors_@see #getHttpInvokerRequestExecutor_@see HttpInvokerClientConfiguration;protected RemoteInvocationResult executeRequest(RemoteInvocation invocation) throws Exception {_		return getHttpInvokerRequestExecutor().executeRequest(this, invocation)__	};execute,the,given,remote,invocation,via,the,http,invoker,request,executor,p,can,be,overridden,in,subclasses,to,pass,a,different,configuration,object,to,the,executor,alternatively,add,further,configuration,properties,in,a,subclass,of,this,accessor,by,default,the,accessor,passed,itself,as,configuration,object,to,the,executor,param,invocation,the,remote,invocation,to,execute,return,the,remote,invocation,result,object,throws,ioexception,if,thrown,by,i,o,operations,throws,class,not,found,exception,if,thrown,during,deserialization,throws,exception,in,case,of,general,errors,see,get,http,invoker,request,executor,see,http,invoker,client,configuration;protected,remote,invocation,result,execute,request,remote,invocation,invocation,throws,exception,return,get,http,invoker,request,executor,execute,request,this,invocation
HttpInvokerClientInterceptor -> protected RemoteInvocationResult executeRequest(RemoteInvocation invocation) throws Exception;1357119239;Execute the given remote invocation via the HttpInvokerRequestExecutor._<p>Can be overridden in subclasses to pass a different configuration object_to the executor. Alternatively, add further configuration properties in a_subclass of this accessor: By default, the accessor passed itself as_configuration object to the executor._@param invocation the RemoteInvocation to execute_@return the RemoteInvocationResult object_@throws IOException if thrown by I/O operations_@throws ClassNotFoundException if thrown during deserialization_@throws Exception in case of general errors_@see #getHttpInvokerRequestExecutor_@see HttpInvokerClientConfiguration;protected RemoteInvocationResult executeRequest(RemoteInvocation invocation) throws Exception {_		return getHttpInvokerRequestExecutor().executeRequest(this, invocation)__	};execute,the,given,remote,invocation,via,the,http,invoker,request,executor,p,can,be,overridden,in,subclasses,to,pass,a,different,configuration,object,to,the,executor,alternatively,add,further,configuration,properties,in,a,subclass,of,this,accessor,by,default,the,accessor,passed,itself,as,configuration,object,to,the,executor,param,invocation,the,remote,invocation,to,execute,return,the,remote,invocation,result,object,throws,ioexception,if,thrown,by,i,o,operations,throws,class,not,found,exception,if,thrown,during,deserialization,throws,exception,in,case,of,general,errors,see,get,http,invoker,request,executor,see,http,invoker,client,configuration;protected,remote,invocation,result,execute,request,remote,invocation,invocation,throws,exception,return,get,http,invoker,request,executor,execute,request,this,invocation
HttpInvokerClientInterceptor -> protected RemoteInvocationResult executeRequest(RemoteInvocation invocation) throws Exception;1368482696;Execute the given remote invocation via the HttpInvokerRequestExecutor._<p>Can be overridden in subclasses to pass a different configuration object_to the executor. Alternatively, add further configuration properties in a_subclass of this accessor: By default, the accessor passed itself as_configuration object to the executor._@param invocation the RemoteInvocation to execute_@return the RemoteInvocationResult object_@throws IOException if thrown by I/O operations_@throws ClassNotFoundException if thrown during deserialization_@throws Exception in case of general errors_@see #getHttpInvokerRequestExecutor_@see HttpInvokerClientConfiguration;protected RemoteInvocationResult executeRequest(RemoteInvocation invocation) throws Exception {_		return getHttpInvokerRequestExecutor().executeRequest(this, invocation)__	};execute,the,given,remote,invocation,via,the,http,invoker,request,executor,p,can,be,overridden,in,subclasses,to,pass,a,different,configuration,object,to,the,executor,alternatively,add,further,configuration,properties,in,a,subclass,of,this,accessor,by,default,the,accessor,passed,itself,as,configuration,object,to,the,executor,param,invocation,the,remote,invocation,to,execute,return,the,remote,invocation,result,object,throws,ioexception,if,thrown,by,i,o,operations,throws,class,not,found,exception,if,thrown,during,deserialization,throws,exception,in,case,of,general,errors,see,get,http,invoker,request,executor,see,http,invoker,client,configuration;protected,remote,invocation,result,execute,request,remote,invocation,invocation,throws,exception,return,get,http,invoker,request,executor,execute,request,this,invocation
HttpInvokerClientInterceptor -> protected RemoteInvocationResult executeRequest(RemoteInvocation invocation) throws Exception;1381528078;Execute the given remote invocation via the HttpInvokerRequestExecutor._<p>Can be overridden in subclasses to pass a different configuration object_to the executor. Alternatively, add further configuration properties in a_subclass of this accessor: By default, the accessor passed itself as_configuration object to the executor._@param invocation the RemoteInvocation to execute_@return the RemoteInvocationResult object_@throws IOException if thrown by I/O operations_@throws ClassNotFoundException if thrown during deserialization_@throws Exception in case of general errors_@see #getHttpInvokerRequestExecutor_@see HttpInvokerClientConfiguration;protected RemoteInvocationResult executeRequest(RemoteInvocation invocation) throws Exception {_		return getHttpInvokerRequestExecutor().executeRequest(this, invocation)__	};execute,the,given,remote,invocation,via,the,http,invoker,request,executor,p,can,be,overridden,in,subclasses,to,pass,a,different,configuration,object,to,the,executor,alternatively,add,further,configuration,properties,in,a,subclass,of,this,accessor,by,default,the,accessor,passed,itself,as,configuration,object,to,the,executor,param,invocation,the,remote,invocation,to,execute,return,the,remote,invocation,result,object,throws,ioexception,if,thrown,by,i,o,operations,throws,class,not,found,exception,if,thrown,during,deserialization,throws,exception,in,case,of,general,errors,see,get,http,invoker,request,executor,see,http,invoker,client,configuration;protected,remote,invocation,result,execute,request,remote,invocation,invocation,throws,exception,return,get,http,invoker,request,executor,execute,request,this,invocation
HttpInvokerClientInterceptor -> protected RemoteInvocationResult executeRequest(RemoteInvocation invocation) throws Exception;1385501137;Execute the given remote invocation via the HttpInvokerRequestExecutor._<p>Can be overridden in subclasses to pass a different configuration object_to the executor. Alternatively, add further configuration properties in a_subclass of this accessor: By default, the accessor passed itself as_configuration object to the executor._@param invocation the RemoteInvocation to execute_@return the RemoteInvocationResult object_@throws IOException if thrown by I/O operations_@throws ClassNotFoundException if thrown during deserialization_@throws Exception in case of general errors_@see #getHttpInvokerRequestExecutor_@see HttpInvokerClientConfiguration;protected RemoteInvocationResult executeRequest(RemoteInvocation invocation) throws Exception {_		return getHttpInvokerRequestExecutor().executeRequest(this, invocation)__	};execute,the,given,remote,invocation,via,the,http,invoker,request,executor,p,can,be,overridden,in,subclasses,to,pass,a,different,configuration,object,to,the,executor,alternatively,add,further,configuration,properties,in,a,subclass,of,this,accessor,by,default,the,accessor,passed,itself,as,configuration,object,to,the,executor,param,invocation,the,remote,invocation,to,execute,return,the,remote,invocation,result,object,throws,ioexception,if,thrown,by,i,o,operations,throws,class,not,found,exception,if,thrown,during,deserialization,throws,exception,in,case,of,general,errors,see,get,http,invoker,request,executor,see,http,invoker,client,configuration;protected,remote,invocation,result,execute,request,remote,invocation,invocation,throws,exception,return,get,http,invoker,request,executor,execute,request,this,invocation
HttpInvokerClientInterceptor -> protected RemoteInvocationResult executeRequest(RemoteInvocation invocation) throws Exception;1403799291;Execute the given remote invocation via the HttpInvokerRequestExecutor._<p>Can be overridden in subclasses to pass a different configuration object_to the executor. Alternatively, add further configuration properties in a_subclass of this accessor: By default, the accessor passed itself as_configuration object to the executor._@param invocation the RemoteInvocation to execute_@return the RemoteInvocationResult object_@throws IOException if thrown by I/O operations_@throws ClassNotFoundException if thrown during deserialization_@throws Exception in case of general errors_@see #getHttpInvokerRequestExecutor_@see HttpInvokerClientConfiguration;protected RemoteInvocationResult executeRequest(RemoteInvocation invocation) throws Exception {_		return getHttpInvokerRequestExecutor().executeRequest(this, invocation)__	};execute,the,given,remote,invocation,via,the,http,invoker,request,executor,p,can,be,overridden,in,subclasses,to,pass,a,different,configuration,object,to,the,executor,alternatively,add,further,configuration,properties,in,a,subclass,of,this,accessor,by,default,the,accessor,passed,itself,as,configuration,object,to,the,executor,param,invocation,the,remote,invocation,to,execute,return,the,remote,invocation,result,object,throws,ioexception,if,thrown,by,i,o,operations,throws,class,not,found,exception,if,thrown,during,deserialization,throws,exception,in,case,of,general,errors,see,get,http,invoker,request,executor,see,http,invoker,client,configuration;protected,remote,invocation,result,execute,request,remote,invocation,invocation,throws,exception,return,get,http,invoker,request,executor,execute,request,this,invocation
HttpInvokerClientInterceptor -> protected RemoteInvocationResult executeRequest(RemoteInvocation invocation) throws Exception;1468613531;Execute the given remote invocation via the HttpInvokerRequestExecutor._<p>Can be overridden in subclasses to pass a different configuration object_to the executor. Alternatively, add further configuration properties in a_subclass of this accessor: By default, the accessor passed itself as_configuration object to the executor._@param invocation the RemoteInvocation to execute_@return the RemoteInvocationResult object_@throws IOException if thrown by I/O operations_@throws ClassNotFoundException if thrown during deserialization_@throws Exception in case of general errors_@see #getHttpInvokerRequestExecutor_@see HttpInvokerClientConfiguration;protected RemoteInvocationResult executeRequest(RemoteInvocation invocation) throws Exception {_		return getHttpInvokerRequestExecutor().executeRequest(this, invocation)__	};execute,the,given,remote,invocation,via,the,http,invoker,request,executor,p,can,be,overridden,in,subclasses,to,pass,a,different,configuration,object,to,the,executor,alternatively,add,further,configuration,properties,in,a,subclass,of,this,accessor,by,default,the,accessor,passed,itself,as,configuration,object,to,the,executor,param,invocation,the,remote,invocation,to,execute,return,the,remote,invocation,result,object,throws,ioexception,if,thrown,by,i,o,operations,throws,class,not,found,exception,if,thrown,during,deserialization,throws,exception,in,case,of,general,errors,see,get,http,invoker,request,executor,see,http,invoker,client,configuration;protected,remote,invocation,result,execute,request,remote,invocation,invocation,throws,exception,return,get,http,invoker,request,executor,execute,request,this,invocation
HttpInvokerClientInterceptor -> protected RemoteInvocationResult executeRequest(RemoteInvocation invocation) throws Exception;1481218181;Execute the given remote invocation via the {@link HttpInvokerRequestExecutor}._<p>Can be overridden in subclasses to pass a different configuration object_to the executor. Alternatively, add further configuration properties in a_subclass of this accessor: By default, the accessor passed itself as_configuration object to the executor._@param invocation the RemoteInvocation to execute_@return the RemoteInvocationResult object_@throws IOException if thrown by I/O operations_@throws ClassNotFoundException if thrown during deserialization_@throws Exception in case of general errors_@see #getHttpInvokerRequestExecutor_@see HttpInvokerClientConfiguration;protected RemoteInvocationResult executeRequest(RemoteInvocation invocation) throws Exception {_		return getHttpInvokerRequestExecutor().executeRequest(this, invocation)__	};execute,the,given,remote,invocation,via,the,link,http,invoker,request,executor,p,can,be,overridden,in,subclasses,to,pass,a,different,configuration,object,to,the,executor,alternatively,add,further,configuration,properties,in,a,subclass,of,this,accessor,by,default,the,accessor,passed,itself,as,configuration,object,to,the,executor,param,invocation,the,remote,invocation,to,execute,return,the,remote,invocation,result,object,throws,ioexception,if,thrown,by,i,o,operations,throws,class,not,found,exception,if,thrown,during,deserialization,throws,exception,in,case,of,general,errors,see,get,http,invoker,request,executor,see,http,invoker,client,configuration;protected,remote,invocation,result,execute,request,remote,invocation,invocation,throws,exception,return,get,http,invoker,request,executor,execute,request,this,invocation
HttpInvokerClientInterceptor -> protected RemoteInvocationResult executeRequest(RemoteInvocation invocation) throws Exception;1490350197;Execute the given remote invocation via the {@link HttpInvokerRequestExecutor}._<p>Can be overridden in subclasses to pass a different configuration object_to the executor. Alternatively, add further configuration properties in a_subclass of this accessor: By default, the accessor passed itself as_configuration object to the executor._@param invocation the RemoteInvocation to execute_@return the RemoteInvocationResult object_@throws IOException if thrown by I/O operations_@throws ClassNotFoundException if thrown during deserialization_@throws Exception in case of general errors_@see #getHttpInvokerRequestExecutor_@see HttpInvokerClientConfiguration;protected RemoteInvocationResult executeRequest(RemoteInvocation invocation) throws Exception {_		return getHttpInvokerRequestExecutor().executeRequest(this, invocation)__	};execute,the,given,remote,invocation,via,the,link,http,invoker,request,executor,p,can,be,overridden,in,subclasses,to,pass,a,different,configuration,object,to,the,executor,alternatively,add,further,configuration,properties,in,a,subclass,of,this,accessor,by,default,the,accessor,passed,itself,as,configuration,object,to,the,executor,param,invocation,the,remote,invocation,to,execute,return,the,remote,invocation,result,object,throws,ioexception,if,thrown,by,i,o,operations,throws,class,not,found,exception,if,thrown,during,deserialization,throws,exception,in,case,of,general,errors,see,get,http,invoker,request,executor,see,http,invoker,client,configuration;protected,remote,invocation,result,execute,request,remote,invocation,invocation,throws,exception,return,get,http,invoker,request,executor,execute,request,this,invocation
HttpInvokerClientInterceptor -> protected RemoteInvocationResult executeRequest(RemoteInvocation invocation) throws Exception;1495868221;Execute the given remote invocation via the {@link HttpInvokerRequestExecutor}._<p>Can be overridden in subclasses to pass a different configuration object_to the executor. Alternatively, add further configuration properties in a_subclass of this accessor: By default, the accessor passed itself as_configuration object to the executor._@param invocation the RemoteInvocation to execute_@return the RemoteInvocationResult object_@throws IOException if thrown by I/O operations_@throws ClassNotFoundException if thrown during deserialization_@throws Exception in case of general errors_@see #getHttpInvokerRequestExecutor_@see HttpInvokerClientConfiguration;protected RemoteInvocationResult executeRequest(RemoteInvocation invocation) throws Exception {_		return getHttpInvokerRequestExecutor().executeRequest(this, invocation)__	};execute,the,given,remote,invocation,via,the,link,http,invoker,request,executor,p,can,be,overridden,in,subclasses,to,pass,a,different,configuration,object,to,the,executor,alternatively,add,further,configuration,properties,in,a,subclass,of,this,accessor,by,default,the,accessor,passed,itself,as,configuration,object,to,the,executor,param,invocation,the,remote,invocation,to,execute,return,the,remote,invocation,result,object,throws,ioexception,if,thrown,by,i,o,operations,throws,class,not,found,exception,if,thrown,during,deserialization,throws,exception,in,case,of,general,errors,see,get,http,invoker,request,executor,see,http,invoker,client,configuration;protected,remote,invocation,result,execute,request,remote,invocation,invocation,throws,exception,return,get,http,invoker,request,executor,execute,request,this,invocation
HttpInvokerClientInterceptor -> protected RemoteInvocationResult executeRequest(RemoteInvocation invocation) throws Exception;1498780456;Execute the given remote invocation via the {@link HttpInvokerRequestExecutor}._<p>Can be overridden in subclasses to pass a different configuration object_to the executor. Alternatively, add further configuration properties in a_subclass of this accessor: By default, the accessor passed itself as_configuration object to the executor._@param invocation the RemoteInvocation to execute_@return the RemoteInvocationResult object_@throws IOException if thrown by I/O operations_@throws ClassNotFoundException if thrown during deserialization_@throws Exception in case of general errors_@see #getHttpInvokerRequestExecutor_@see HttpInvokerClientConfiguration;protected RemoteInvocationResult executeRequest(RemoteInvocation invocation) throws Exception {_		return getHttpInvokerRequestExecutor().executeRequest(this, invocation)__	};execute,the,given,remote,invocation,via,the,link,http,invoker,request,executor,p,can,be,overridden,in,subclasses,to,pass,a,different,configuration,object,to,the,executor,alternatively,add,further,configuration,properties,in,a,subclass,of,this,accessor,by,default,the,accessor,passed,itself,as,configuration,object,to,the,executor,param,invocation,the,remote,invocation,to,execute,return,the,remote,invocation,result,object,throws,ioexception,if,thrown,by,i,o,operations,throws,class,not,found,exception,if,thrown,during,deserialization,throws,exception,in,case,of,general,errors,see,get,http,invoker,request,executor,see,http,invoker,client,configuration;protected,remote,invocation,result,execute,request,remote,invocation,invocation,throws,exception,return,get,http,invoker,request,executor,execute,request,this,invocation
HttpInvokerClientInterceptor -> protected RemoteInvocationResult executeRequest(RemoteInvocation invocation) throws Exception;1500448076;Execute the given remote invocation via the {@link HttpInvokerRequestExecutor}._<p>Can be overridden in subclasses to pass a different configuration object_to the executor. Alternatively, add further configuration properties in a_subclass of this accessor: By default, the accessor passed itself as_configuration object to the executor._@param invocation the RemoteInvocation to execute_@return the RemoteInvocationResult object_@throws IOException if thrown by I/O operations_@throws ClassNotFoundException if thrown during deserialization_@throws Exception in case of general errors_@see #getHttpInvokerRequestExecutor_@see HttpInvokerClientConfiguration;protected RemoteInvocationResult executeRequest(RemoteInvocation invocation) throws Exception {_		return getHttpInvokerRequestExecutor().executeRequest(this, invocation)__	};execute,the,given,remote,invocation,via,the,link,http,invoker,request,executor,p,can,be,overridden,in,subclasses,to,pass,a,different,configuration,object,to,the,executor,alternatively,add,further,configuration,properties,in,a,subclass,of,this,accessor,by,default,the,accessor,passed,itself,as,configuration,object,to,the,executor,param,invocation,the,remote,invocation,to,execute,return,the,remote,invocation,result,object,throws,ioexception,if,thrown,by,i,o,operations,throws,class,not,found,exception,if,thrown,during,deserialization,throws,exception,in,case,of,general,errors,see,get,http,invoker,request,executor,see,http,invoker,client,configuration;protected,remote,invocation,result,execute,request,remote,invocation,invocation,throws,exception,return,get,http,invoker,request,executor,execute,request,this,invocation
HttpInvokerClientInterceptor -> @Nullable 	protected RemoteAccessException convertHttpInvokerAccessException(Throwable ex);1495868221;Convert the given HTTP invoker access exception to an appropriate_Spring {@link RemoteAccessException}._@param ex the exception to convert_@return the RemoteAccessException to throw, or {@code null} to have the_original exception propagated to the caller;@Nullable_	protected RemoteAccessException convertHttpInvokerAccessException(Throwable ex) {_		if (ex instanceof ConnectException) {_			return new RemoteConnectFailureException(_					"Could not connect to HTTP invoker remote service at [" + getServiceUrl() + "]", ex)__		}__		if (ex instanceof ClassNotFoundException || ex instanceof NoClassDefFoundError ||_				ex instanceof InvalidClassException) {_			return new RemoteAccessException(_					"Could not deserialize result from HTTP invoker remote service [" + getServiceUrl() + "]", ex)__		}__		if (ex instanceof Exception) {_			return new RemoteAccessException(_					"Could not access HTTP invoker remote service at [" + getServiceUrl() + "]", ex)__		}__		_		return null__	};convert,the,given,http,invoker,access,exception,to,an,appropriate,spring,link,remote,access,exception,param,ex,the,exception,to,convert,return,the,remote,access,exception,to,throw,or,code,null,to,have,the,original,exception,propagated,to,the,caller;nullable,protected,remote,access,exception,convert,http,invoker,access,exception,throwable,ex,if,ex,instanceof,connect,exception,return,new,remote,connect,failure,exception,could,not,connect,to,http,invoker,remote,service,at,get,service,url,ex,if,ex,instanceof,class,not,found,exception,ex,instanceof,no,class,def,found,error,ex,instanceof,invalid,class,exception,return,new,remote,access,exception,could,not,deserialize,result,from,http,invoker,remote,service,get,service,url,ex,if,ex,instanceof,exception,return,new,remote,access,exception,could,not,access,http,invoker,remote,service,at,get,service,url,ex,return,null
HttpInvokerClientInterceptor -> @Nullable 	protected RemoteAccessException convertHttpInvokerAccessException(Throwable ex);1498780456;Convert the given HTTP invoker access exception to an appropriate_Spring {@link RemoteAccessException}._@param ex the exception to convert_@return the RemoteAccessException to throw, or {@code null} to have the_original exception propagated to the caller;@Nullable_	protected RemoteAccessException convertHttpInvokerAccessException(Throwable ex) {_		if (ex instanceof ConnectException) {_			return new RemoteConnectFailureException(_					"Could not connect to HTTP invoker remote service at [" + getServiceUrl() + "]", ex)__		}__		if (ex instanceof ClassNotFoundException || ex instanceof NoClassDefFoundError ||_				ex instanceof InvalidClassException) {_			return new RemoteAccessException(_					"Could not deserialize result from HTTP invoker remote service [" + getServiceUrl() + "]", ex)__		}__		if (ex instanceof Exception) {_			return new RemoteAccessException(_					"Could not access HTTP invoker remote service at [" + getServiceUrl() + "]", ex)__		}__		_		return null__	};convert,the,given,http,invoker,access,exception,to,an,appropriate,spring,link,remote,access,exception,param,ex,the,exception,to,convert,return,the,remote,access,exception,to,throw,or,code,null,to,have,the,original,exception,propagated,to,the,caller;nullable,protected,remote,access,exception,convert,http,invoker,access,exception,throwable,ex,if,ex,instanceof,connect,exception,return,new,remote,connect,failure,exception,could,not,connect,to,http,invoker,remote,service,at,get,service,url,ex,if,ex,instanceof,class,not,found,exception,ex,instanceof,no,class,def,found,error,ex,instanceof,invalid,class,exception,return,new,remote,access,exception,could,not,deserialize,result,from,http,invoker,remote,service,get,service,url,ex,if,ex,instanceof,exception,return,new,remote,access,exception,could,not,access,http,invoker,remote,service,at,get,service,url,ex,return,null
HttpInvokerClientInterceptor -> @Nullable 	protected RemoteAccessException convertHttpInvokerAccessException(Throwable ex);1500448076;Convert the given HTTP invoker access exception to an appropriate_Spring {@link RemoteAccessException}._@param ex the exception to convert_@return the RemoteAccessException to throw, or {@code null} to have the_original exception propagated to the caller;@Nullable_	protected RemoteAccessException convertHttpInvokerAccessException(Throwable ex) {_		if (ex instanceof ConnectException) {_			return new RemoteConnectFailureException(_					"Could not connect to HTTP invoker remote service at [" + getServiceUrl() + "]", ex)__		}__		if (ex instanceof ClassNotFoundException || ex instanceof NoClassDefFoundError ||_				ex instanceof InvalidClassException) {_			return new RemoteAccessException(_					"Could not deserialize result from HTTP invoker remote service [" + getServiceUrl() + "]", ex)__		}__		if (ex instanceof Exception) {_			return new RemoteAccessException(_					"Could not access HTTP invoker remote service at [" + getServiceUrl() + "]", ex)__		}__		_		return null__	};convert,the,given,http,invoker,access,exception,to,an,appropriate,spring,link,remote,access,exception,param,ex,the,exception,to,convert,return,the,remote,access,exception,to,throw,or,code,null,to,have,the,original,exception,propagated,to,the,caller;nullable,protected,remote,access,exception,convert,http,invoker,access,exception,throwable,ex,if,ex,instanceof,connect,exception,return,new,remote,connect,failure,exception,could,not,connect,to,http,invoker,remote,service,at,get,service,url,ex,if,ex,instanceof,class,not,found,exception,ex,instanceof,no,class,def,found,error,ex,instanceof,invalid,class,exception,return,new,remote,access,exception,could,not,deserialize,result,from,http,invoker,remote,service,get,service,url,ex,if,ex,instanceof,exception,return,new,remote,access,exception,could,not,access,http,invoker,remote,service,at,get,service,url,ex,return,null
HttpInvokerClientInterceptor -> public String getCodebaseUrl();1328020251;Return the codebase URL to download classes from if not found locally.;public String getCodebaseUrl() {_		return this.codebaseUrl__	};return,the,codebase,url,to,download,classes,from,if,not,found,locally;public,string,get,codebase,url,return,this,codebase,url
HttpInvokerClientInterceptor -> public String getCodebaseUrl();1357119239;Return the codebase URL to download classes from if not found locally.;public String getCodebaseUrl() {_		return this.codebaseUrl__	};return,the,codebase,url,to,download,classes,from,if,not,found,locally;public,string,get,codebase,url,return,this,codebase,url
HttpInvokerClientInterceptor -> @Override 	@Nullable 	public String getCodebaseUrl();1498780456;Return the codebase URL to download classes from if not found locally.;@Override_	@Nullable_	public String getCodebaseUrl() {_		return this.codebaseUrl__	};return,the,codebase,url,to,download,classes,from,if,not,found,locally;override,nullable,public,string,get,codebase,url,return,this,codebase,url
HttpInvokerClientInterceptor -> @Override 	@Nullable 	public String getCodebaseUrl();1500448076;Return the codebase URL to download classes from if not found locally.;@Override_	@Nullable_	public String getCodebaseUrl() {_		return this.codebaseUrl__	};return,the,codebase,url,to,download,classes,from,if,not,found,locally;override,nullable,public,string,get,codebase,url,return,this,codebase,url
HttpInvokerClientInterceptor -> protected RemoteInvocationResult executeRequest( 			RemoteInvocation invocation, MethodInvocation originalInvocation) throws Exception;1328020251;Execute the given remote invocation via the HttpInvokerRequestExecutor._<p>This implementation delegates to {@link #executeRequest(RemoteInvocation)}._Can be overridden to react to the specific original MethodInvocation._@param invocation the RemoteInvocation to execute_@param originalInvocation the original MethodInvocation (can e.g. be cast_to the ProxyMethodInvocation interface for accessing user attributes)_@return the RemoteInvocationResult object_@throws Exception in case of errors;protected RemoteInvocationResult executeRequest(_			RemoteInvocation invocation, MethodInvocation originalInvocation) throws Exception {__		return executeRequest(invocation)__	};execute,the,given,remote,invocation,via,the,http,invoker,request,executor,p,this,implementation,delegates,to,link,execute,request,remote,invocation,can,be,overridden,to,react,to,the,specific,original,method,invocation,param,invocation,the,remote,invocation,to,execute,param,original,invocation,the,original,method,invocation,can,e,g,be,cast,to,the,proxy,method,invocation,interface,for,accessing,user,attributes,return,the,remote,invocation,result,object,throws,exception,in,case,of,errors;protected,remote,invocation,result,execute,request,remote,invocation,invocation,method,invocation,original,invocation,throws,exception,return,execute,request,invocation
HttpInvokerClientInterceptor -> protected RemoteInvocationResult executeRequest( 			RemoteInvocation invocation, MethodInvocation originalInvocation) throws Exception;1356735495;Execute the given remote invocation via the HttpInvokerRequestExecutor._<p>This implementation delegates to {@link #executeRequest(RemoteInvocation)}._Can be overridden to react to the specific original MethodInvocation._@param invocation the RemoteInvocation to execute_@param originalInvocation the original MethodInvocation (can e.g. be cast_to the ProxyMethodInvocation interface for accessing user attributes)_@return the RemoteInvocationResult object_@throws Exception in case of errors;protected RemoteInvocationResult executeRequest(_			RemoteInvocation invocation, MethodInvocation originalInvocation) throws Exception {__		return executeRequest(invocation)__	};execute,the,given,remote,invocation,via,the,http,invoker,request,executor,p,this,implementation,delegates,to,link,execute,request,remote,invocation,can,be,overridden,to,react,to,the,specific,original,method,invocation,param,invocation,the,remote,invocation,to,execute,param,original,invocation,the,original,method,invocation,can,e,g,be,cast,to,the,proxy,method,invocation,interface,for,accessing,user,attributes,return,the,remote,invocation,result,object,throws,exception,in,case,of,errors;protected,remote,invocation,result,execute,request,remote,invocation,invocation,method,invocation,original,invocation,throws,exception,return,execute,request,invocation
HttpInvokerClientInterceptor -> protected RemoteInvocationResult executeRequest( 			RemoteInvocation invocation, MethodInvocation originalInvocation) throws Exception;1357119239;Execute the given remote invocation via the HttpInvokerRequestExecutor._<p>This implementation delegates to {@link #executeRequest(RemoteInvocation)}._Can be overridden to react to the specific original MethodInvocation._@param invocation the RemoteInvocation to execute_@param originalInvocation the original MethodInvocation (can e.g. be cast_to the ProxyMethodInvocation interface for accessing user attributes)_@return the RemoteInvocationResult object_@throws Exception in case of errors;protected RemoteInvocationResult executeRequest(_			RemoteInvocation invocation, MethodInvocation originalInvocation) throws Exception {__		return executeRequest(invocation)__	};execute,the,given,remote,invocation,via,the,http,invoker,request,executor,p,this,implementation,delegates,to,link,execute,request,remote,invocation,can,be,overridden,to,react,to,the,specific,original,method,invocation,param,invocation,the,remote,invocation,to,execute,param,original,invocation,the,original,method,invocation,can,e,g,be,cast,to,the,proxy,method,invocation,interface,for,accessing,user,attributes,return,the,remote,invocation,result,object,throws,exception,in,case,of,errors;protected,remote,invocation,result,execute,request,remote,invocation,invocation,method,invocation,original,invocation,throws,exception,return,execute,request,invocation
HttpInvokerClientInterceptor -> protected RemoteInvocationResult executeRequest( 			RemoteInvocation invocation, MethodInvocation originalInvocation) throws Exception;1368482696;Execute the given remote invocation via the HttpInvokerRequestExecutor._<p>This implementation delegates to {@link #executeRequest(RemoteInvocation)}._Can be overridden to react to the specific original MethodInvocation._@param invocation the RemoteInvocation to execute_@param originalInvocation the original MethodInvocation (can e.g. be cast_to the ProxyMethodInvocation interface for accessing user attributes)_@return the RemoteInvocationResult object_@throws Exception in case of errors;protected RemoteInvocationResult executeRequest(_			RemoteInvocation invocation, MethodInvocation originalInvocation) throws Exception {__		return executeRequest(invocation)__	};execute,the,given,remote,invocation,via,the,http,invoker,request,executor,p,this,implementation,delegates,to,link,execute,request,remote,invocation,can,be,overridden,to,react,to,the,specific,original,method,invocation,param,invocation,the,remote,invocation,to,execute,param,original,invocation,the,original,method,invocation,can,e,g,be,cast,to,the,proxy,method,invocation,interface,for,accessing,user,attributes,return,the,remote,invocation,result,object,throws,exception,in,case,of,errors;protected,remote,invocation,result,execute,request,remote,invocation,invocation,method,invocation,original,invocation,throws,exception,return,execute,request,invocation
HttpInvokerClientInterceptor -> protected RemoteInvocationResult executeRequest( 			RemoteInvocation invocation, MethodInvocation originalInvocation) throws Exception;1381528078;Execute the given remote invocation via the HttpInvokerRequestExecutor._<p>This implementation delegates to {@link #executeRequest(RemoteInvocation)}._Can be overridden to react to the specific original MethodInvocation._@param invocation the RemoteInvocation to execute_@param originalInvocation the original MethodInvocation (can e.g. be cast_to the ProxyMethodInvocation interface for accessing user attributes)_@return the RemoteInvocationResult object_@throws Exception in case of errors;protected RemoteInvocationResult executeRequest(_			RemoteInvocation invocation, MethodInvocation originalInvocation) throws Exception {__		return executeRequest(invocation)__	};execute,the,given,remote,invocation,via,the,http,invoker,request,executor,p,this,implementation,delegates,to,link,execute,request,remote,invocation,can,be,overridden,to,react,to,the,specific,original,method,invocation,param,invocation,the,remote,invocation,to,execute,param,original,invocation,the,original,method,invocation,can,e,g,be,cast,to,the,proxy,method,invocation,interface,for,accessing,user,attributes,return,the,remote,invocation,result,object,throws,exception,in,case,of,errors;protected,remote,invocation,result,execute,request,remote,invocation,invocation,method,invocation,original,invocation,throws,exception,return,execute,request,invocation
HttpInvokerClientInterceptor -> protected RemoteInvocationResult executeRequest( 			RemoteInvocation invocation, MethodInvocation originalInvocation) throws Exception;1385501137;Execute the given remote invocation via the HttpInvokerRequestExecutor._<p>This implementation delegates to {@link #executeRequest(RemoteInvocation)}._Can be overridden to react to the specific original MethodInvocation._@param invocation the RemoteInvocation to execute_@param originalInvocation the original MethodInvocation (can e.g. be cast_to the ProxyMethodInvocation interface for accessing user attributes)_@return the RemoteInvocationResult object_@throws Exception in case of errors;protected RemoteInvocationResult executeRequest(_			RemoteInvocation invocation, MethodInvocation originalInvocation) throws Exception {__		return executeRequest(invocation)__	};execute,the,given,remote,invocation,via,the,http,invoker,request,executor,p,this,implementation,delegates,to,link,execute,request,remote,invocation,can,be,overridden,to,react,to,the,specific,original,method,invocation,param,invocation,the,remote,invocation,to,execute,param,original,invocation,the,original,method,invocation,can,e,g,be,cast,to,the,proxy,method,invocation,interface,for,accessing,user,attributes,return,the,remote,invocation,result,object,throws,exception,in,case,of,errors;protected,remote,invocation,result,execute,request,remote,invocation,invocation,method,invocation,original,invocation,throws,exception,return,execute,request,invocation
HttpInvokerClientInterceptor -> protected RemoteInvocationResult executeRequest( 			RemoteInvocation invocation, MethodInvocation originalInvocation) throws Exception;1403799291;Execute the given remote invocation via the HttpInvokerRequestExecutor._<p>This implementation delegates to {@link #executeRequest(RemoteInvocation)}._Can be overridden to react to the specific original MethodInvocation._@param invocation the RemoteInvocation to execute_@param originalInvocation the original MethodInvocation (can e.g. be cast_to the ProxyMethodInvocation interface for accessing user attributes)_@return the RemoteInvocationResult object_@throws Exception in case of errors;protected RemoteInvocationResult executeRequest(_			RemoteInvocation invocation, MethodInvocation originalInvocation) throws Exception {__		return executeRequest(invocation)__	};execute,the,given,remote,invocation,via,the,http,invoker,request,executor,p,this,implementation,delegates,to,link,execute,request,remote,invocation,can,be,overridden,to,react,to,the,specific,original,method,invocation,param,invocation,the,remote,invocation,to,execute,param,original,invocation,the,original,method,invocation,can,e,g,be,cast,to,the,proxy,method,invocation,interface,for,accessing,user,attributes,return,the,remote,invocation,result,object,throws,exception,in,case,of,errors;protected,remote,invocation,result,execute,request,remote,invocation,invocation,method,invocation,original,invocation,throws,exception,return,execute,request,invocation
HttpInvokerClientInterceptor -> protected RemoteInvocationResult executeRequest( 			RemoteInvocation invocation, MethodInvocation originalInvocation) throws Exception;1468613531;Execute the given remote invocation via the HttpInvokerRequestExecutor._<p>This implementation delegates to {@link #executeRequest(RemoteInvocation)}._Can be overridden to react to the specific original MethodInvocation._@param invocation the RemoteInvocation to execute_@param originalInvocation the original MethodInvocation (can e.g. be cast_to the ProxyMethodInvocation interface for accessing user attributes)_@return the RemoteInvocationResult object_@throws Exception in case of errors;protected RemoteInvocationResult executeRequest(_			RemoteInvocation invocation, MethodInvocation originalInvocation) throws Exception {__		return executeRequest(invocation)__	};execute,the,given,remote,invocation,via,the,http,invoker,request,executor,p,this,implementation,delegates,to,link,execute,request,remote,invocation,can,be,overridden,to,react,to,the,specific,original,method,invocation,param,invocation,the,remote,invocation,to,execute,param,original,invocation,the,original,method,invocation,can,e,g,be,cast,to,the,proxy,method,invocation,interface,for,accessing,user,attributes,return,the,remote,invocation,result,object,throws,exception,in,case,of,errors;protected,remote,invocation,result,execute,request,remote,invocation,invocation,method,invocation,original,invocation,throws,exception,return,execute,request,invocation
HttpInvokerClientInterceptor -> protected RemoteInvocationResult executeRequest( 			RemoteInvocation invocation, MethodInvocation originalInvocation) throws Exception;1481218181;Execute the given remote invocation via the {@link HttpInvokerRequestExecutor}._<p>This implementation delegates to {@link #executeRequest(RemoteInvocation)}._Can be overridden to react to the specific original MethodInvocation._@param invocation the RemoteInvocation to execute_@param originalInvocation the original MethodInvocation (can e.g. be cast_to the ProxyMethodInvocation interface for accessing user attributes)_@return the RemoteInvocationResult object_@throws Exception in case of errors;protected RemoteInvocationResult executeRequest(_			RemoteInvocation invocation, MethodInvocation originalInvocation) throws Exception {__		return executeRequest(invocation)__	};execute,the,given,remote,invocation,via,the,link,http,invoker,request,executor,p,this,implementation,delegates,to,link,execute,request,remote,invocation,can,be,overridden,to,react,to,the,specific,original,method,invocation,param,invocation,the,remote,invocation,to,execute,param,original,invocation,the,original,method,invocation,can,e,g,be,cast,to,the,proxy,method,invocation,interface,for,accessing,user,attributes,return,the,remote,invocation,result,object,throws,exception,in,case,of,errors;protected,remote,invocation,result,execute,request,remote,invocation,invocation,method,invocation,original,invocation,throws,exception,return,execute,request,invocation
HttpInvokerClientInterceptor -> protected RemoteInvocationResult executeRequest( 			RemoteInvocation invocation, MethodInvocation originalInvocation) throws Exception;1490350197;Execute the given remote invocation via the {@link HttpInvokerRequestExecutor}._<p>This implementation delegates to {@link #executeRequest(RemoteInvocation)}._Can be overridden to react to the specific original MethodInvocation._@param invocation the RemoteInvocation to execute_@param originalInvocation the original MethodInvocation (can e.g. be cast_to the ProxyMethodInvocation interface for accessing user attributes)_@return the RemoteInvocationResult object_@throws Exception in case of errors;protected RemoteInvocationResult executeRequest(_			RemoteInvocation invocation, MethodInvocation originalInvocation) throws Exception {__		return executeRequest(invocation)__	};execute,the,given,remote,invocation,via,the,link,http,invoker,request,executor,p,this,implementation,delegates,to,link,execute,request,remote,invocation,can,be,overridden,to,react,to,the,specific,original,method,invocation,param,invocation,the,remote,invocation,to,execute,param,original,invocation,the,original,method,invocation,can,e,g,be,cast,to,the,proxy,method,invocation,interface,for,accessing,user,attributes,return,the,remote,invocation,result,object,throws,exception,in,case,of,errors;protected,remote,invocation,result,execute,request,remote,invocation,invocation,method,invocation,original,invocation,throws,exception,return,execute,request,invocation
HttpInvokerClientInterceptor -> protected RemoteInvocationResult executeRequest( 			RemoteInvocation invocation, MethodInvocation originalInvocation) throws Exception;1495868221;Execute the given remote invocation via the {@link HttpInvokerRequestExecutor}._<p>This implementation delegates to {@link #executeRequest(RemoteInvocation)}._Can be overridden to react to the specific original MethodInvocation._@param invocation the RemoteInvocation to execute_@param originalInvocation the original MethodInvocation (can e.g. be cast_to the ProxyMethodInvocation interface for accessing user attributes)_@return the RemoteInvocationResult object_@throws Exception in case of errors;protected RemoteInvocationResult executeRequest(_			RemoteInvocation invocation, MethodInvocation originalInvocation) throws Exception {__		return executeRequest(invocation)__	};execute,the,given,remote,invocation,via,the,link,http,invoker,request,executor,p,this,implementation,delegates,to,link,execute,request,remote,invocation,can,be,overridden,to,react,to,the,specific,original,method,invocation,param,invocation,the,remote,invocation,to,execute,param,original,invocation,the,original,method,invocation,can,e,g,be,cast,to,the,proxy,method,invocation,interface,for,accessing,user,attributes,return,the,remote,invocation,result,object,throws,exception,in,case,of,errors;protected,remote,invocation,result,execute,request,remote,invocation,invocation,method,invocation,original,invocation,throws,exception,return,execute,request,invocation
HttpInvokerClientInterceptor -> protected RemoteInvocationResult executeRequest( 			RemoteInvocation invocation, MethodInvocation originalInvocation) throws Exception;1498780456;Execute the given remote invocation via the {@link HttpInvokerRequestExecutor}._<p>This implementation delegates to {@link #executeRequest(RemoteInvocation)}._Can be overridden to react to the specific original MethodInvocation._@param invocation the RemoteInvocation to execute_@param originalInvocation the original MethodInvocation (can e.g. be cast_to the ProxyMethodInvocation interface for accessing user attributes)_@return the RemoteInvocationResult object_@throws Exception in case of errors;protected RemoteInvocationResult executeRequest(_			RemoteInvocation invocation, MethodInvocation originalInvocation) throws Exception {__		return executeRequest(invocation)__	};execute,the,given,remote,invocation,via,the,link,http,invoker,request,executor,p,this,implementation,delegates,to,link,execute,request,remote,invocation,can,be,overridden,to,react,to,the,specific,original,method,invocation,param,invocation,the,remote,invocation,to,execute,param,original,invocation,the,original,method,invocation,can,e,g,be,cast,to,the,proxy,method,invocation,interface,for,accessing,user,attributes,return,the,remote,invocation,result,object,throws,exception,in,case,of,errors;protected,remote,invocation,result,execute,request,remote,invocation,invocation,method,invocation,original,invocation,throws,exception,return,execute,request,invocation
HttpInvokerClientInterceptor -> protected RemoteInvocationResult executeRequest( 			RemoteInvocation invocation, MethodInvocation originalInvocation) throws Exception;1500448076;Execute the given remote invocation via the {@link HttpInvokerRequestExecutor}._<p>This implementation delegates to {@link #executeRequest(RemoteInvocation)}._Can be overridden to react to the specific original MethodInvocation._@param invocation the RemoteInvocation to execute_@param originalInvocation the original MethodInvocation (can e.g. be cast_to the ProxyMethodInvocation interface for accessing user attributes)_@return the RemoteInvocationResult object_@throws Exception in case of errors;protected RemoteInvocationResult executeRequest(_			RemoteInvocation invocation, MethodInvocation originalInvocation) throws Exception {__		return executeRequest(invocation)__	};execute,the,given,remote,invocation,via,the,link,http,invoker,request,executor,p,this,implementation,delegates,to,link,execute,request,remote,invocation,can,be,overridden,to,react,to,the,specific,original,method,invocation,param,invocation,the,remote,invocation,to,execute,param,original,invocation,the,original,method,invocation,can,e,g,be,cast,to,the,proxy,method,invocation,interface,for,accessing,user,attributes,return,the,remote,invocation,result,object,throws,exception,in,case,of,errors;protected,remote,invocation,result,execute,request,remote,invocation,invocation,method,invocation,original,invocation,throws,exception,return,execute,request,invocation
HttpInvokerClientInterceptor -> public void setCodebaseUrl(String codebaseUrl);1328020251;Set the codebase URL to download classes from if not found locally._Can consists of multiple URLs, separated by spaces._<p>Follows RMI's codebase conventions for dynamic class download._In contrast to RMI, where the server determines the URL for class download_(via the "java.rmi.server.codebase" system property), it's the client_that determines the codebase URL here. The server will usually be the_same as for the service URL, just pointing to a different path there._@see #setServiceUrl_@see org.springframework.remoting.rmi.CodebaseAwareObjectInputStream_@see java.rmi.server.RMIClassLoader;public void setCodebaseUrl(String codebaseUrl) {_		this.codebaseUrl = codebaseUrl__	};set,the,codebase,url,to,download,classes,from,if,not,found,locally,can,consists,of,multiple,urls,separated,by,spaces,p,follows,rmi,s,codebase,conventions,for,dynamic,class,download,in,contrast,to,rmi,where,the,server,determines,the,url,for,class,download,via,the,java,rmi,server,codebase,system,property,it,s,the,client,that,determines,the,codebase,url,here,the,server,will,usually,be,the,same,as,for,the,service,url,just,pointing,to,a,different,path,there,see,set,service,url,see,org,springframework,remoting,rmi,codebase,aware,object,input,stream,see,java,rmi,server,rmiclass,loader;public,void,set,codebase,url,string,codebase,url,this,codebase,url,codebase,url
HttpInvokerClientInterceptor -> public void setCodebaseUrl(String codebaseUrl);1356735495;Set the codebase URL to download classes from if not found locally._Can consists of multiple URLs, separated by spaces._<p>Follows RMI's codebase conventions for dynamic class download._In contrast to RMI, where the server determines the URL for class download_(via the "java.rmi.server.codebase" system property), it's the client_that determines the codebase URL here. The server will usually be the_same as for the service URL, just pointing to a different path there._@see #setServiceUrl_@see org.springframework.remoting.rmi.CodebaseAwareObjectInputStream_@see java.rmi.server.RMIClassLoader;public void setCodebaseUrl(String codebaseUrl) {_		this.codebaseUrl = codebaseUrl__	};set,the,codebase,url,to,download,classes,from,if,not,found,locally,can,consists,of,multiple,urls,separated,by,spaces,p,follows,rmi,s,codebase,conventions,for,dynamic,class,download,in,contrast,to,rmi,where,the,server,determines,the,url,for,class,download,via,the,java,rmi,server,codebase,system,property,it,s,the,client,that,determines,the,codebase,url,here,the,server,will,usually,be,the,same,as,for,the,service,url,just,pointing,to,a,different,path,there,see,set,service,url,see,org,springframework,remoting,rmi,codebase,aware,object,input,stream,see,java,rmi,server,rmiclass,loader;public,void,set,codebase,url,string,codebase,url,this,codebase,url,codebase,url
HttpInvokerClientInterceptor -> public void setCodebaseUrl(String codebaseUrl);1357119239;Set the codebase URL to download classes from if not found locally._Can consists of multiple URLs, separated by spaces._<p>Follows RMI's codebase conventions for dynamic class download._In contrast to RMI, where the server determines the URL for class download_(via the "java.rmi.server.codebase" system property), it's the client_that determines the codebase URL here. The server will usually be the_same as for the service URL, just pointing to a different path there._@see #setServiceUrl_@see org.springframework.remoting.rmi.CodebaseAwareObjectInputStream_@see java.rmi.server.RMIClassLoader;public void setCodebaseUrl(String codebaseUrl) {_		this.codebaseUrl = codebaseUrl__	};set,the,codebase,url,to,download,classes,from,if,not,found,locally,can,consists,of,multiple,urls,separated,by,spaces,p,follows,rmi,s,codebase,conventions,for,dynamic,class,download,in,contrast,to,rmi,where,the,server,determines,the,url,for,class,download,via,the,java,rmi,server,codebase,system,property,it,s,the,client,that,determines,the,codebase,url,here,the,server,will,usually,be,the,same,as,for,the,service,url,just,pointing,to,a,different,path,there,see,set,service,url,see,org,springframework,remoting,rmi,codebase,aware,object,input,stream,see,java,rmi,server,rmiclass,loader;public,void,set,codebase,url,string,codebase,url,this,codebase,url,codebase,url
HttpInvokerClientInterceptor -> public void setCodebaseUrl(String codebaseUrl);1368482696;Set the codebase URL to download classes from if not found locally._Can consists of multiple URLs, separated by spaces._<p>Follows RMI's codebase conventions for dynamic class download._In contrast to RMI, where the server determines the URL for class download_(via the "java.rmi.server.codebase" system property), it's the client_that determines the codebase URL here. The server will usually be the_same as for the service URL, just pointing to a different path there._@see #setServiceUrl_@see org.springframework.remoting.rmi.CodebaseAwareObjectInputStream_@see java.rmi.server.RMIClassLoader;public void setCodebaseUrl(String codebaseUrl) {_		this.codebaseUrl = codebaseUrl__	};set,the,codebase,url,to,download,classes,from,if,not,found,locally,can,consists,of,multiple,urls,separated,by,spaces,p,follows,rmi,s,codebase,conventions,for,dynamic,class,download,in,contrast,to,rmi,where,the,server,determines,the,url,for,class,download,via,the,java,rmi,server,codebase,system,property,it,s,the,client,that,determines,the,codebase,url,here,the,server,will,usually,be,the,same,as,for,the,service,url,just,pointing,to,a,different,path,there,see,set,service,url,see,org,springframework,remoting,rmi,codebase,aware,object,input,stream,see,java,rmi,server,rmiclass,loader;public,void,set,codebase,url,string,codebase,url,this,codebase,url,codebase,url
HttpInvokerClientInterceptor -> public void setCodebaseUrl(String codebaseUrl);1381528078;Set the codebase URL to download classes from if not found locally._Can consists of multiple URLs, separated by spaces._<p>Follows RMI's codebase conventions for dynamic class download._In contrast to RMI, where the server determines the URL for class download_(via the "java.rmi.server.codebase" system property), it's the client_that determines the codebase URL here. The server will usually be the_same as for the service URL, just pointing to a different path there._@see #setServiceUrl_@see org.springframework.remoting.rmi.CodebaseAwareObjectInputStream_@see java.rmi.server.RMIClassLoader;public void setCodebaseUrl(String codebaseUrl) {_		this.codebaseUrl = codebaseUrl__	};set,the,codebase,url,to,download,classes,from,if,not,found,locally,can,consists,of,multiple,urls,separated,by,spaces,p,follows,rmi,s,codebase,conventions,for,dynamic,class,download,in,contrast,to,rmi,where,the,server,determines,the,url,for,class,download,via,the,java,rmi,server,codebase,system,property,it,s,the,client,that,determines,the,codebase,url,here,the,server,will,usually,be,the,same,as,for,the,service,url,just,pointing,to,a,different,path,there,see,set,service,url,see,org,springframework,remoting,rmi,codebase,aware,object,input,stream,see,java,rmi,server,rmiclass,loader;public,void,set,codebase,url,string,codebase,url,this,codebase,url,codebase,url
HttpInvokerClientInterceptor -> public void setCodebaseUrl(String codebaseUrl);1385501137;Set the codebase URL to download classes from if not found locally._Can consists of multiple URLs, separated by spaces._<p>Follows RMI's codebase conventions for dynamic class download._In contrast to RMI, where the server determines the URL for class download_(via the "java.rmi.server.codebase" system property), it's the client_that determines the codebase URL here. The server will usually be the_same as for the service URL, just pointing to a different path there._@see #setServiceUrl_@see org.springframework.remoting.rmi.CodebaseAwareObjectInputStream_@see java.rmi.server.RMIClassLoader;public void setCodebaseUrl(String codebaseUrl) {_		this.codebaseUrl = codebaseUrl__	};set,the,codebase,url,to,download,classes,from,if,not,found,locally,can,consists,of,multiple,urls,separated,by,spaces,p,follows,rmi,s,codebase,conventions,for,dynamic,class,download,in,contrast,to,rmi,where,the,server,determines,the,url,for,class,download,via,the,java,rmi,server,codebase,system,property,it,s,the,client,that,determines,the,codebase,url,here,the,server,will,usually,be,the,same,as,for,the,service,url,just,pointing,to,a,different,path,there,see,set,service,url,see,org,springframework,remoting,rmi,codebase,aware,object,input,stream,see,java,rmi,server,rmiclass,loader;public,void,set,codebase,url,string,codebase,url,this,codebase,url,codebase,url
HttpInvokerClientInterceptor -> public void setCodebaseUrl(String codebaseUrl);1403799291;Set the codebase URL to download classes from if not found locally._Can consists of multiple URLs, separated by spaces._<p>Follows RMI's codebase conventions for dynamic class download._In contrast to RMI, where the server determines the URL for class download_(via the "java.rmi.server.codebase" system property), it's the client_that determines the codebase URL here. The server will usually be the_same as for the service URL, just pointing to a different path there._@see #setServiceUrl_@see org.springframework.remoting.rmi.CodebaseAwareObjectInputStream_@see java.rmi.server.RMIClassLoader;public void setCodebaseUrl(String codebaseUrl) {_		this.codebaseUrl = codebaseUrl__	};set,the,codebase,url,to,download,classes,from,if,not,found,locally,can,consists,of,multiple,urls,separated,by,spaces,p,follows,rmi,s,codebase,conventions,for,dynamic,class,download,in,contrast,to,rmi,where,the,server,determines,the,url,for,class,download,via,the,java,rmi,server,codebase,system,property,it,s,the,client,that,determines,the,codebase,url,here,the,server,will,usually,be,the,same,as,for,the,service,url,just,pointing,to,a,different,path,there,see,set,service,url,see,org,springframework,remoting,rmi,codebase,aware,object,input,stream,see,java,rmi,server,rmiclass,loader;public,void,set,codebase,url,string,codebase,url,this,codebase,url,codebase,url
HttpInvokerClientInterceptor -> public void setCodebaseUrl(String codebaseUrl);1468613531;Set the codebase URL to download classes from if not found locally._Can consists of multiple URLs, separated by spaces._<p>Follows RMI's codebase conventions for dynamic class download._In contrast to RMI, where the server determines the URL for class download_(via the "java.rmi.server.codebase" system property), it's the client_that determines the codebase URL here. The server will usually be the_same as for the service URL, just pointing to a different path there._@see #setServiceUrl_@see org.springframework.remoting.rmi.CodebaseAwareObjectInputStream_@see java.rmi.server.RMIClassLoader;public void setCodebaseUrl(String codebaseUrl) {_		this.codebaseUrl = codebaseUrl__	};set,the,codebase,url,to,download,classes,from,if,not,found,locally,can,consists,of,multiple,urls,separated,by,spaces,p,follows,rmi,s,codebase,conventions,for,dynamic,class,download,in,contrast,to,rmi,where,the,server,determines,the,url,for,class,download,via,the,java,rmi,server,codebase,system,property,it,s,the,client,that,determines,the,codebase,url,here,the,server,will,usually,be,the,same,as,for,the,service,url,just,pointing,to,a,different,path,there,see,set,service,url,see,org,springframework,remoting,rmi,codebase,aware,object,input,stream,see,java,rmi,server,rmiclass,loader;public,void,set,codebase,url,string,codebase,url,this,codebase,url,codebase,url
HttpInvokerClientInterceptor -> public void setCodebaseUrl(String codebaseUrl);1481218181;Set the codebase URL to download classes from if not found locally._Can consists of multiple URLs, separated by spaces._<p>Follows RMI's codebase conventions for dynamic class download._In contrast to RMI, where the server determines the URL for class download_(via the "java.rmi.server.codebase" system property), it's the client_that determines the codebase URL here. The server will usually be the_same as for the service URL, just pointing to a different path there._@see #setServiceUrl_@see org.springframework.remoting.rmi.CodebaseAwareObjectInputStream_@see java.rmi.server.RMIClassLoader;public void setCodebaseUrl(String codebaseUrl) {_		this.codebaseUrl = codebaseUrl__	};set,the,codebase,url,to,download,classes,from,if,not,found,locally,can,consists,of,multiple,urls,separated,by,spaces,p,follows,rmi,s,codebase,conventions,for,dynamic,class,download,in,contrast,to,rmi,where,the,server,determines,the,url,for,class,download,via,the,java,rmi,server,codebase,system,property,it,s,the,client,that,determines,the,codebase,url,here,the,server,will,usually,be,the,same,as,for,the,service,url,just,pointing,to,a,different,path,there,see,set,service,url,see,org,springframework,remoting,rmi,codebase,aware,object,input,stream,see,java,rmi,server,rmiclass,loader;public,void,set,codebase,url,string,codebase,url,this,codebase,url,codebase,url
HttpInvokerClientInterceptor -> public void setCodebaseUrl(String codebaseUrl);1490350197;Set the codebase URL to download classes from if not found locally._Can consists of multiple URLs, separated by spaces._<p>Follows RMI's codebase conventions for dynamic class download._In contrast to RMI, where the server determines the URL for class download_(via the "java.rmi.server.codebase" system property), it's the client_that determines the codebase URL here. The server will usually be the_same as for the service URL, just pointing to a different path there._@see #setServiceUrl_@see org.springframework.remoting.rmi.CodebaseAwareObjectInputStream_@see java.rmi.server.RMIClassLoader;public void setCodebaseUrl(String codebaseUrl) {_		this.codebaseUrl = codebaseUrl__	};set,the,codebase,url,to,download,classes,from,if,not,found,locally,can,consists,of,multiple,urls,separated,by,spaces,p,follows,rmi,s,codebase,conventions,for,dynamic,class,download,in,contrast,to,rmi,where,the,server,determines,the,url,for,class,download,via,the,java,rmi,server,codebase,system,property,it,s,the,client,that,determines,the,codebase,url,here,the,server,will,usually,be,the,same,as,for,the,service,url,just,pointing,to,a,different,path,there,see,set,service,url,see,org,springframework,remoting,rmi,codebase,aware,object,input,stream,see,java,rmi,server,rmiclass,loader;public,void,set,codebase,url,string,codebase,url,this,codebase,url,codebase,url
HttpInvokerClientInterceptor -> public void setCodebaseUrl(String codebaseUrl);1495868221;Set the codebase URL to download classes from if not found locally._Can consists of multiple URLs, separated by spaces._<p>Follows RMI's codebase conventions for dynamic class download._In contrast to RMI, where the server determines the URL for class download_(via the "java.rmi.server.codebase" system property), it's the client_that determines the codebase URL here. The server will usually be the_same as for the service URL, just pointing to a different path there._@see #setServiceUrl_@see org.springframework.remoting.rmi.CodebaseAwareObjectInputStream_@see java.rmi.server.RMIClassLoader;public void setCodebaseUrl(String codebaseUrl) {_		this.codebaseUrl = codebaseUrl__	};set,the,codebase,url,to,download,classes,from,if,not,found,locally,can,consists,of,multiple,urls,separated,by,spaces,p,follows,rmi,s,codebase,conventions,for,dynamic,class,download,in,contrast,to,rmi,where,the,server,determines,the,url,for,class,download,via,the,java,rmi,server,codebase,system,property,it,s,the,client,that,determines,the,codebase,url,here,the,server,will,usually,be,the,same,as,for,the,service,url,just,pointing,to,a,different,path,there,see,set,service,url,see,org,springframework,remoting,rmi,codebase,aware,object,input,stream,see,java,rmi,server,rmiclass,loader;public,void,set,codebase,url,string,codebase,url,this,codebase,url,codebase,url
HttpInvokerClientInterceptor -> public void setCodebaseUrl(String codebaseUrl);1498780456;Set the codebase URL to download classes from if not found locally._Can consists of multiple URLs, separated by spaces._<p>Follows RMI's codebase conventions for dynamic class download._In contrast to RMI, where the server determines the URL for class download_(via the "java.rmi.server.codebase" system property), it's the client_that determines the codebase URL here. The server will usually be the_same as for the service URL, just pointing to a different path there._@see #setServiceUrl_@see org.springframework.remoting.rmi.CodebaseAwareObjectInputStream_@see java.rmi.server.RMIClassLoader;public void setCodebaseUrl(String codebaseUrl) {_		this.codebaseUrl = codebaseUrl__	};set,the,codebase,url,to,download,classes,from,if,not,found,locally,can,consists,of,multiple,urls,separated,by,spaces,p,follows,rmi,s,codebase,conventions,for,dynamic,class,download,in,contrast,to,rmi,where,the,server,determines,the,url,for,class,download,via,the,java,rmi,server,codebase,system,property,it,s,the,client,that,determines,the,codebase,url,here,the,server,will,usually,be,the,same,as,for,the,service,url,just,pointing,to,a,different,path,there,see,set,service,url,see,org,springframework,remoting,rmi,codebase,aware,object,input,stream,see,java,rmi,server,rmiclass,loader;public,void,set,codebase,url,string,codebase,url,this,codebase,url,codebase,url
HttpInvokerClientInterceptor -> public void setHttpInvokerRequestExecutor(HttpInvokerRequestExecutor httpInvokerRequestExecutor);1328020251;Set the HttpInvokerRequestExecutor implementation to use for executing_remote invocations._<p>Default is {@link SimpleHttpInvokerRequestExecutor}. Alternatively,_consider using {@link CommonsHttpInvokerRequestExecutor} for more_sophisticated needs._@see SimpleHttpInvokerRequestExecutor_@see CommonsHttpInvokerRequestExecutor;public void setHttpInvokerRequestExecutor(HttpInvokerRequestExecutor httpInvokerRequestExecutor) {_		this.httpInvokerRequestExecutor = httpInvokerRequestExecutor__	};set,the,http,invoker,request,executor,implementation,to,use,for,executing,remote,invocations,p,default,is,link,simple,http,invoker,request,executor,alternatively,consider,using,link,commons,http,invoker,request,executor,for,more,sophisticated,needs,see,simple,http,invoker,request,executor,see,commons,http,invoker,request,executor;public,void,set,http,invoker,request,executor,http,invoker,request,executor,http,invoker,request,executor,this,http,invoker,request,executor,http,invoker,request,executor
HttpInvokerClientInterceptor -> public void setHttpInvokerRequestExecutor(HttpInvokerRequestExecutor httpInvokerRequestExecutor);1356735495;Set the HttpInvokerRequestExecutor implementation to use for executing_remote invocations._<p>Default is {@link SimpleHttpInvokerRequestExecutor}. Alternatively,_consider using {@link CommonsHttpInvokerRequestExecutor} for more_sophisticated needs._@see SimpleHttpInvokerRequestExecutor_@see CommonsHttpInvokerRequestExecutor;public void setHttpInvokerRequestExecutor(HttpInvokerRequestExecutor httpInvokerRequestExecutor) {_		this.httpInvokerRequestExecutor = httpInvokerRequestExecutor__	};set,the,http,invoker,request,executor,implementation,to,use,for,executing,remote,invocations,p,default,is,link,simple,http,invoker,request,executor,alternatively,consider,using,link,commons,http,invoker,request,executor,for,more,sophisticated,needs,see,simple,http,invoker,request,executor,see,commons,http,invoker,request,executor;public,void,set,http,invoker,request,executor,http,invoker,request,executor,http,invoker,request,executor,this,http,invoker,request,executor,http,invoker,request,executor
HttpInvokerClientInterceptor -> public void setHttpInvokerRequestExecutor(HttpInvokerRequestExecutor httpInvokerRequestExecutor);1357119239;Set the HttpInvokerRequestExecutor implementation to use for executing_remote invocations._<p>Default is {@link SimpleHttpInvokerRequestExecutor}. Alternatively,_consider using {@link CommonsHttpInvokerRequestExecutor} for more_sophisticated needs._@see SimpleHttpInvokerRequestExecutor_@see CommonsHttpInvokerRequestExecutor;public void setHttpInvokerRequestExecutor(HttpInvokerRequestExecutor httpInvokerRequestExecutor) {_		this.httpInvokerRequestExecutor = httpInvokerRequestExecutor__	};set,the,http,invoker,request,executor,implementation,to,use,for,executing,remote,invocations,p,default,is,link,simple,http,invoker,request,executor,alternatively,consider,using,link,commons,http,invoker,request,executor,for,more,sophisticated,needs,see,simple,http,invoker,request,executor,see,commons,http,invoker,request,executor;public,void,set,http,invoker,request,executor,http,invoker,request,executor,http,invoker,request,executor,this,http,invoker,request,executor,http,invoker,request,executor
HttpInvokerClientInterceptor -> public void setHttpInvokerRequestExecutor(HttpInvokerRequestExecutor httpInvokerRequestExecutor);1368482696;Set the HttpInvokerRequestExecutor implementation to use for executing_remote invocations._<p>Default is {@link SimpleHttpInvokerRequestExecutor}. Alternatively,_consider using {@link CommonsHttpInvokerRequestExecutor} for more_sophisticated needs._@see SimpleHttpInvokerRequestExecutor_@see CommonsHttpInvokerRequestExecutor;public void setHttpInvokerRequestExecutor(HttpInvokerRequestExecutor httpInvokerRequestExecutor) {_		this.httpInvokerRequestExecutor = httpInvokerRequestExecutor__	};set,the,http,invoker,request,executor,implementation,to,use,for,executing,remote,invocations,p,default,is,link,simple,http,invoker,request,executor,alternatively,consider,using,link,commons,http,invoker,request,executor,for,more,sophisticated,needs,see,simple,http,invoker,request,executor,see,commons,http,invoker,request,executor;public,void,set,http,invoker,request,executor,http,invoker,request,executor,http,invoker,request,executor,this,http,invoker,request,executor,http,invoker,request,executor
HttpInvokerClientInterceptor -> public void setHttpInvokerRequestExecutor(HttpInvokerRequestExecutor httpInvokerRequestExecutor);1381528078;Set the HttpInvokerRequestExecutor implementation to use for executing_remote invocations._<p>Default is {@link SimpleHttpInvokerRequestExecutor}. Alternatively,_consider using {@link CommonsHttpInvokerRequestExecutor} for more_sophisticated needs._@see SimpleHttpInvokerRequestExecutor_@see CommonsHttpInvokerRequestExecutor;public void setHttpInvokerRequestExecutor(HttpInvokerRequestExecutor httpInvokerRequestExecutor) {_		this.httpInvokerRequestExecutor = httpInvokerRequestExecutor__	};set,the,http,invoker,request,executor,implementation,to,use,for,executing,remote,invocations,p,default,is,link,simple,http,invoker,request,executor,alternatively,consider,using,link,commons,http,invoker,request,executor,for,more,sophisticated,needs,see,simple,http,invoker,request,executor,see,commons,http,invoker,request,executor;public,void,set,http,invoker,request,executor,http,invoker,request,executor,http,invoker,request,executor,this,http,invoker,request,executor,http,invoker,request,executor
HttpInvokerClientInterceptor -> public void setHttpInvokerRequestExecutor(HttpInvokerRequestExecutor httpInvokerRequestExecutor);1385501137;Set the HttpInvokerRequestExecutor implementation to use for executing_remote invocations._<p>Default is {@link SimpleHttpInvokerRequestExecutor}. Alternatively,_consider using {@link HttpComponentsHttpInvokerRequestExecutor} for more_sophisticated needs._@see SimpleHttpInvokerRequestExecutor_@see HttpComponentsHttpInvokerRequestExecutor;public void setHttpInvokerRequestExecutor(HttpInvokerRequestExecutor httpInvokerRequestExecutor) {_		this.httpInvokerRequestExecutor = httpInvokerRequestExecutor__	};set,the,http,invoker,request,executor,implementation,to,use,for,executing,remote,invocations,p,default,is,link,simple,http,invoker,request,executor,alternatively,consider,using,link,http,components,http,invoker,request,executor,for,more,sophisticated,needs,see,simple,http,invoker,request,executor,see,http,components,http,invoker,request,executor;public,void,set,http,invoker,request,executor,http,invoker,request,executor,http,invoker,request,executor,this,http,invoker,request,executor,http,invoker,request,executor
HttpInvokerClientInterceptor -> public void setHttpInvokerRequestExecutor(HttpInvokerRequestExecutor httpInvokerRequestExecutor);1403799291;Set the HttpInvokerRequestExecutor implementation to use for executing_remote invocations._<p>Default is {@link SimpleHttpInvokerRequestExecutor}. Alternatively,_consider using {@link HttpComponentsHttpInvokerRequestExecutor} for more_sophisticated needs._@see SimpleHttpInvokerRequestExecutor_@see HttpComponentsHttpInvokerRequestExecutor;public void setHttpInvokerRequestExecutor(HttpInvokerRequestExecutor httpInvokerRequestExecutor) {_		this.httpInvokerRequestExecutor = httpInvokerRequestExecutor__	};set,the,http,invoker,request,executor,implementation,to,use,for,executing,remote,invocations,p,default,is,link,simple,http,invoker,request,executor,alternatively,consider,using,link,http,components,http,invoker,request,executor,for,more,sophisticated,needs,see,simple,http,invoker,request,executor,see,http,components,http,invoker,request,executor;public,void,set,http,invoker,request,executor,http,invoker,request,executor,http,invoker,request,executor,this,http,invoker,request,executor,http,invoker,request,executor
HttpInvokerClientInterceptor -> public void setHttpInvokerRequestExecutor(HttpInvokerRequestExecutor httpInvokerRequestExecutor);1468613531;Set the HttpInvokerRequestExecutor implementation to use for executing_remote invocations._<p>Default is {@link SimpleHttpInvokerRequestExecutor}. Alternatively,_consider using {@link HttpComponentsHttpInvokerRequestExecutor} for more_sophisticated needs._@see SimpleHttpInvokerRequestExecutor_@see HttpComponentsHttpInvokerRequestExecutor;public void setHttpInvokerRequestExecutor(HttpInvokerRequestExecutor httpInvokerRequestExecutor) {_		this.httpInvokerRequestExecutor = httpInvokerRequestExecutor__	};set,the,http,invoker,request,executor,implementation,to,use,for,executing,remote,invocations,p,default,is,link,simple,http,invoker,request,executor,alternatively,consider,using,link,http,components,http,invoker,request,executor,for,more,sophisticated,needs,see,simple,http,invoker,request,executor,see,http,components,http,invoker,request,executor;public,void,set,http,invoker,request,executor,http,invoker,request,executor,http,invoker,request,executor,this,http,invoker,request,executor,http,invoker,request,executor
HttpInvokerClientInterceptor -> public void setHttpInvokerRequestExecutor(HttpInvokerRequestExecutor httpInvokerRequestExecutor);1481218181;Set the HttpInvokerRequestExecutor implementation to use for executing_remote invocations._<p>Default is {@link SimpleHttpInvokerRequestExecutor}. Alternatively,_consider using {@link HttpComponentsHttpInvokerRequestExecutor} for more_sophisticated needs._@see SimpleHttpInvokerRequestExecutor_@see HttpComponentsHttpInvokerRequestExecutor;public void setHttpInvokerRequestExecutor(HttpInvokerRequestExecutor httpInvokerRequestExecutor) {_		this.httpInvokerRequestExecutor = httpInvokerRequestExecutor__	};set,the,http,invoker,request,executor,implementation,to,use,for,executing,remote,invocations,p,default,is,link,simple,http,invoker,request,executor,alternatively,consider,using,link,http,components,http,invoker,request,executor,for,more,sophisticated,needs,see,simple,http,invoker,request,executor,see,http,components,http,invoker,request,executor;public,void,set,http,invoker,request,executor,http,invoker,request,executor,http,invoker,request,executor,this,http,invoker,request,executor,http,invoker,request,executor
HttpInvokerClientInterceptor -> public void setHttpInvokerRequestExecutor(HttpInvokerRequestExecutor httpInvokerRequestExecutor);1490350197;Set the HttpInvokerRequestExecutor implementation to use for executing_remote invocations._<p>Default is {@link SimpleHttpInvokerRequestExecutor}. Alternatively,_consider using {@link HttpComponentsHttpInvokerRequestExecutor} for more_sophisticated needs._@see SimpleHttpInvokerRequestExecutor_@see HttpComponentsHttpInvokerRequestExecutor;public void setHttpInvokerRequestExecutor(HttpInvokerRequestExecutor httpInvokerRequestExecutor) {_		this.httpInvokerRequestExecutor = httpInvokerRequestExecutor__	};set,the,http,invoker,request,executor,implementation,to,use,for,executing,remote,invocations,p,default,is,link,simple,http,invoker,request,executor,alternatively,consider,using,link,http,components,http,invoker,request,executor,for,more,sophisticated,needs,see,simple,http,invoker,request,executor,see,http,components,http,invoker,request,executor;public,void,set,http,invoker,request,executor,http,invoker,request,executor,http,invoker,request,executor,this,http,invoker,request,executor,http,invoker,request,executor
HttpInvokerClientInterceptor -> public void setHttpInvokerRequestExecutor(HttpInvokerRequestExecutor httpInvokerRequestExecutor);1495868221;Set the HttpInvokerRequestExecutor implementation to use for executing_remote invocations._<p>Default is {@link SimpleHttpInvokerRequestExecutor}. Alternatively,_consider using {@link HttpComponentsHttpInvokerRequestExecutor} for more_sophisticated needs._@see SimpleHttpInvokerRequestExecutor_@see HttpComponentsHttpInvokerRequestExecutor;public void setHttpInvokerRequestExecutor(HttpInvokerRequestExecutor httpInvokerRequestExecutor) {_		this.httpInvokerRequestExecutor = httpInvokerRequestExecutor__	};set,the,http,invoker,request,executor,implementation,to,use,for,executing,remote,invocations,p,default,is,link,simple,http,invoker,request,executor,alternatively,consider,using,link,http,components,http,invoker,request,executor,for,more,sophisticated,needs,see,simple,http,invoker,request,executor,see,http,components,http,invoker,request,executor;public,void,set,http,invoker,request,executor,http,invoker,request,executor,http,invoker,request,executor,this,http,invoker,request,executor,http,invoker,request,executor
HttpInvokerClientInterceptor -> public void setHttpInvokerRequestExecutor(HttpInvokerRequestExecutor httpInvokerRequestExecutor);1498780456;Set the HttpInvokerRequestExecutor implementation to use for executing_remote invocations._<p>Default is {@link SimpleHttpInvokerRequestExecutor}. Alternatively,_consider using {@link HttpComponentsHttpInvokerRequestExecutor} for more_sophisticated needs._@see SimpleHttpInvokerRequestExecutor_@see HttpComponentsHttpInvokerRequestExecutor;public void setHttpInvokerRequestExecutor(HttpInvokerRequestExecutor httpInvokerRequestExecutor) {_		this.httpInvokerRequestExecutor = httpInvokerRequestExecutor__	};set,the,http,invoker,request,executor,implementation,to,use,for,executing,remote,invocations,p,default,is,link,simple,http,invoker,request,executor,alternatively,consider,using,link,http,components,http,invoker,request,executor,for,more,sophisticated,needs,see,simple,http,invoker,request,executor,see,http,components,http,invoker,request,executor;public,void,set,http,invoker,request,executor,http,invoker,request,executor,http,invoker,request,executor,this,http,invoker,request,executor,http,invoker,request,executor
HttpInvokerClientInterceptor -> public void setHttpInvokerRequestExecutor(HttpInvokerRequestExecutor httpInvokerRequestExecutor);1500448076;Set the HttpInvokerRequestExecutor implementation to use for executing_remote invocations._<p>Default is {@link SimpleHttpInvokerRequestExecutor}. Alternatively,_consider using {@link HttpComponentsHttpInvokerRequestExecutor} for more_sophisticated needs._@see SimpleHttpInvokerRequestExecutor_@see HttpComponentsHttpInvokerRequestExecutor;public void setHttpInvokerRequestExecutor(HttpInvokerRequestExecutor httpInvokerRequestExecutor) {_		this.httpInvokerRequestExecutor = httpInvokerRequestExecutor__	};set,the,http,invoker,request,executor,implementation,to,use,for,executing,remote,invocations,p,default,is,link,simple,http,invoker,request,executor,alternatively,consider,using,link,http,components,http,invoker,request,executor,for,more,sophisticated,needs,see,simple,http,invoker,request,executor,see,http,components,http,invoker,request,executor;public,void,set,http,invoker,request,executor,http,invoker,request,executor,http,invoker,request,executor,this,http,invoker,request,executor,http,invoker,request,executor
HttpInvokerClientInterceptor -> @Override 	public String getCodebaseUrl();1356735495;Return the codebase URL to download classes from if not found locally.;@Override_	public String getCodebaseUrl() {_		return this.codebaseUrl__	};return,the,codebase,url,to,download,classes,from,if,not,found,locally;override,public,string,get,codebase,url,return,this,codebase,url
HttpInvokerClientInterceptor -> @Override 	public String getCodebaseUrl();1368482696;Return the codebase URL to download classes from if not found locally.;@Override_	public String getCodebaseUrl() {_		return this.codebaseUrl__	};return,the,codebase,url,to,download,classes,from,if,not,found,locally;override,public,string,get,codebase,url,return,this,codebase,url
HttpInvokerClientInterceptor -> @Override 	public String getCodebaseUrl();1381528078;Return the codebase URL to download classes from if not found locally.;@Override_	public String getCodebaseUrl() {_		return this.codebaseUrl__	};return,the,codebase,url,to,download,classes,from,if,not,found,locally;override,public,string,get,codebase,url,return,this,codebase,url
HttpInvokerClientInterceptor -> @Override 	public String getCodebaseUrl();1385501137;Return the codebase URL to download classes from if not found locally.;@Override_	public String getCodebaseUrl() {_		return this.codebaseUrl__	};return,the,codebase,url,to,download,classes,from,if,not,found,locally;override,public,string,get,codebase,url,return,this,codebase,url
HttpInvokerClientInterceptor -> @Override 	public String getCodebaseUrl();1403799291;Return the codebase URL to download classes from if not found locally.;@Override_	public String getCodebaseUrl() {_		return this.codebaseUrl__	};return,the,codebase,url,to,download,classes,from,if,not,found,locally;override,public,string,get,codebase,url,return,this,codebase,url
HttpInvokerClientInterceptor -> @Override 	public String getCodebaseUrl();1468613531;Return the codebase URL to download classes from if not found locally.;@Override_	public String getCodebaseUrl() {_		return this.codebaseUrl__	};return,the,codebase,url,to,download,classes,from,if,not,found,locally;override,public,string,get,codebase,url,return,this,codebase,url
HttpInvokerClientInterceptor -> @Override 	public String getCodebaseUrl();1481218181;Return the codebase URL to download classes from if not found locally.;@Override_	public String getCodebaseUrl() {_		return this.codebaseUrl__	};return,the,codebase,url,to,download,classes,from,if,not,found,locally;override,public,string,get,codebase,url,return,this,codebase,url
HttpInvokerClientInterceptor -> @Override 	public String getCodebaseUrl();1490350197;Return the codebase URL to download classes from if not found locally.;@Override_	public String getCodebaseUrl() {_		return this.codebaseUrl__	};return,the,codebase,url,to,download,classes,from,if,not,found,locally;override,public,string,get,codebase,url,return,this,codebase,url
HttpInvokerClientInterceptor -> @Override 	public String getCodebaseUrl();1495868221;Return the codebase URL to download classes from if not found locally.;@Override_	public String getCodebaseUrl() {_		return this.codebaseUrl__	};return,the,codebase,url,to,download,classes,from,if,not,found,locally;override,public,string,get,codebase,url,return,this,codebase,url
HttpInvokerClientInterceptor -> protected RemoteAccessException convertHttpInvokerAccessException(Throwable ex);1328020251;Convert the given HTTP invoker access exception to an appropriate_Spring RemoteAccessException._@param ex the exception to convert_@return the RemoteAccessException to throw;protected RemoteAccessException convertHttpInvokerAccessException(Throwable ex) {_		if (ex instanceof ConnectException) {_			throw new RemoteConnectFailureException(_					"Could not connect to HTTP invoker remote service at [" + getServiceUrl() + "]", ex)__		}_		else if (ex instanceof ClassNotFoundException || ex instanceof NoClassDefFoundError ||_				ex instanceof InvalidClassException) {_			throw new RemoteAccessException(_					"Could not deserialize result from HTTP invoker remote service [" + getServiceUrl() + "]", ex)__		}_		else {_			throw new RemoteAccessException(_			    "Could not access HTTP invoker remote service at [" + getServiceUrl() + "]", ex)__		}_	};convert,the,given,http,invoker,access,exception,to,an,appropriate,spring,remote,access,exception,param,ex,the,exception,to,convert,return,the,remote,access,exception,to,throw;protected,remote,access,exception,convert,http,invoker,access,exception,throwable,ex,if,ex,instanceof,connect,exception,throw,new,remote,connect,failure,exception,could,not,connect,to,http,invoker,remote,service,at,get,service,url,ex,else,if,ex,instanceof,class,not,found,exception,ex,instanceof,no,class,def,found,error,ex,instanceof,invalid,class,exception,throw,new,remote,access,exception,could,not,deserialize,result,from,http,invoker,remote,service,get,service,url,ex,else,throw,new,remote,access,exception,could,not,access,http,invoker,remote,service,at,get,service,url,ex
HttpInvokerClientInterceptor -> protected RemoteAccessException convertHttpInvokerAccessException(Throwable ex);1356735495;Convert the given HTTP invoker access exception to an appropriate_Spring RemoteAccessException._@param ex the exception to convert_@return the RemoteAccessException to throw;protected RemoteAccessException convertHttpInvokerAccessException(Throwable ex) {_		if (ex instanceof ConnectException) {_			throw new RemoteConnectFailureException(_					"Could not connect to HTTP invoker remote service at [" + getServiceUrl() + "]", ex)__		}_		else if (ex instanceof ClassNotFoundException || ex instanceof NoClassDefFoundError ||_				ex instanceof InvalidClassException) {_			throw new RemoteAccessException(_					"Could not deserialize result from HTTP invoker remote service [" + getServiceUrl() + "]", ex)__		}_		else {_			throw new RemoteAccessException(_				"Could not access HTTP invoker remote service at [" + getServiceUrl() + "]", ex)__		}_	};convert,the,given,http,invoker,access,exception,to,an,appropriate,spring,remote,access,exception,param,ex,the,exception,to,convert,return,the,remote,access,exception,to,throw;protected,remote,access,exception,convert,http,invoker,access,exception,throwable,ex,if,ex,instanceof,connect,exception,throw,new,remote,connect,failure,exception,could,not,connect,to,http,invoker,remote,service,at,get,service,url,ex,else,if,ex,instanceof,class,not,found,exception,ex,instanceof,no,class,def,found,error,ex,instanceof,invalid,class,exception,throw,new,remote,access,exception,could,not,deserialize,result,from,http,invoker,remote,service,get,service,url,ex,else,throw,new,remote,access,exception,could,not,access,http,invoker,remote,service,at,get,service,url,ex
HttpInvokerClientInterceptor -> protected RemoteAccessException convertHttpInvokerAccessException(Throwable ex);1357119239;Convert the given HTTP invoker access exception to an appropriate_Spring RemoteAccessException._@param ex the exception to convert_@return the RemoteAccessException to throw;protected RemoteAccessException convertHttpInvokerAccessException(Throwable ex) {_		if (ex instanceof ConnectException) {_			throw new RemoteConnectFailureException(_					"Could not connect to HTTP invoker remote service at [" + getServiceUrl() + "]", ex)__		}_		else if (ex instanceof ClassNotFoundException || ex instanceof NoClassDefFoundError ||_				ex instanceof InvalidClassException) {_			throw new RemoteAccessException(_					"Could not deserialize result from HTTP invoker remote service [" + getServiceUrl() + "]", ex)__		}_		else {_			throw new RemoteAccessException(_				"Could not access HTTP invoker remote service at [" + getServiceUrl() + "]", ex)__		}_	};convert,the,given,http,invoker,access,exception,to,an,appropriate,spring,remote,access,exception,param,ex,the,exception,to,convert,return,the,remote,access,exception,to,throw;protected,remote,access,exception,convert,http,invoker,access,exception,throwable,ex,if,ex,instanceof,connect,exception,throw,new,remote,connect,failure,exception,could,not,connect,to,http,invoker,remote,service,at,get,service,url,ex,else,if,ex,instanceof,class,not,found,exception,ex,instanceof,no,class,def,found,error,ex,instanceof,invalid,class,exception,throw,new,remote,access,exception,could,not,deserialize,result,from,http,invoker,remote,service,get,service,url,ex,else,throw,new,remote,access,exception,could,not,access,http,invoker,remote,service,at,get,service,url,ex
HttpInvokerClientInterceptor -> protected RemoteAccessException convertHttpInvokerAccessException(Throwable ex);1368482696;Convert the given HTTP invoker access exception to an appropriate_Spring RemoteAccessException._@param ex the exception to convert_@return the RemoteAccessException to throw;protected RemoteAccessException convertHttpInvokerAccessException(Throwable ex) {_		if (ex instanceof ConnectException) {_			throw new RemoteConnectFailureException(_					"Could not connect to HTTP invoker remote service at [" + getServiceUrl() + "]", ex)__		}_		else if (ex instanceof ClassNotFoundException || ex instanceof NoClassDefFoundError ||_				ex instanceof InvalidClassException) {_			throw new RemoteAccessException(_					"Could not deserialize result from HTTP invoker remote service [" + getServiceUrl() + "]", ex)__		}_		else {_			throw new RemoteAccessException(_				"Could not access HTTP invoker remote service at [" + getServiceUrl() + "]", ex)__		}_	};convert,the,given,http,invoker,access,exception,to,an,appropriate,spring,remote,access,exception,param,ex,the,exception,to,convert,return,the,remote,access,exception,to,throw;protected,remote,access,exception,convert,http,invoker,access,exception,throwable,ex,if,ex,instanceof,connect,exception,throw,new,remote,connect,failure,exception,could,not,connect,to,http,invoker,remote,service,at,get,service,url,ex,else,if,ex,instanceof,class,not,found,exception,ex,instanceof,no,class,def,found,error,ex,instanceof,invalid,class,exception,throw,new,remote,access,exception,could,not,deserialize,result,from,http,invoker,remote,service,get,service,url,ex,else,throw,new,remote,access,exception,could,not,access,http,invoker,remote,service,at,get,service,url,ex
HttpInvokerClientInterceptor -> protected RemoteAccessException convertHttpInvokerAccessException(Throwable ex);1381528078;Convert the given HTTP invoker access exception to an appropriate_Spring RemoteAccessException._@param ex the exception to convert_@return the RemoteAccessException to throw;protected RemoteAccessException convertHttpInvokerAccessException(Throwable ex) {_		if (ex instanceof ConnectException) {_			return new RemoteConnectFailureException(_					"Could not connect to HTTP invoker remote service at [" + getServiceUrl() + "]", ex)__		}__		if (ex instanceof ClassNotFoundException || ex instanceof NoClassDefFoundError ||_				ex instanceof InvalidClassException) {_			return new RemoteAccessException(_					"Could not deserialize result from HTTP invoker remote service [" + getServiceUrl() + "]", ex)__		}__		return new RemoteAccessException(_					"Could not access HTTP invoker remote service at [" + getServiceUrl() + "]", ex)__	};convert,the,given,http,invoker,access,exception,to,an,appropriate,spring,remote,access,exception,param,ex,the,exception,to,convert,return,the,remote,access,exception,to,throw;protected,remote,access,exception,convert,http,invoker,access,exception,throwable,ex,if,ex,instanceof,connect,exception,return,new,remote,connect,failure,exception,could,not,connect,to,http,invoker,remote,service,at,get,service,url,ex,if,ex,instanceof,class,not,found,exception,ex,instanceof,no,class,def,found,error,ex,instanceof,invalid,class,exception,return,new,remote,access,exception,could,not,deserialize,result,from,http,invoker,remote,service,get,service,url,ex,return,new,remote,access,exception,could,not,access,http,invoker,remote,service,at,get,service,url,ex
HttpInvokerClientInterceptor -> protected RemoteAccessException convertHttpInvokerAccessException(Throwable ex);1385501137;Convert the given HTTP invoker access exception to an appropriate_Spring RemoteAccessException._@param ex the exception to convert_@return the RemoteAccessException to throw;protected RemoteAccessException convertHttpInvokerAccessException(Throwable ex) {_		if (ex instanceof ConnectException) {_			return new RemoteConnectFailureException(_					"Could not connect to HTTP invoker remote service at [" + getServiceUrl() + "]", ex)__		}__		if (ex instanceof ClassNotFoundException || ex instanceof NoClassDefFoundError ||_				ex instanceof InvalidClassException) {_			return new RemoteAccessException(_					"Could not deserialize result from HTTP invoker remote service [" + getServiceUrl() + "]", ex)__		}__		return new RemoteAccessException(_					"Could not access HTTP invoker remote service at [" + getServiceUrl() + "]", ex)__	};convert,the,given,http,invoker,access,exception,to,an,appropriate,spring,remote,access,exception,param,ex,the,exception,to,convert,return,the,remote,access,exception,to,throw;protected,remote,access,exception,convert,http,invoker,access,exception,throwable,ex,if,ex,instanceof,connect,exception,return,new,remote,connect,failure,exception,could,not,connect,to,http,invoker,remote,service,at,get,service,url,ex,if,ex,instanceof,class,not,found,exception,ex,instanceof,no,class,def,found,error,ex,instanceof,invalid,class,exception,return,new,remote,access,exception,could,not,deserialize,result,from,http,invoker,remote,service,get,service,url,ex,return,new,remote,access,exception,could,not,access,http,invoker,remote,service,at,get,service,url,ex
HttpInvokerClientInterceptor -> protected RemoteAccessException convertHttpInvokerAccessException(Throwable ex);1403799291;Convert the given HTTP invoker access exception to an appropriate_Spring RemoteAccessException._@param ex the exception to convert_@return the RemoteAccessException to throw;protected RemoteAccessException convertHttpInvokerAccessException(Throwable ex) {_		if (ex instanceof ConnectException) {_			return new RemoteConnectFailureException(_					"Could not connect to HTTP invoker remote service at [" + getServiceUrl() + "]", ex)__		}__		if (ex instanceof ClassNotFoundException || ex instanceof NoClassDefFoundError ||_				ex instanceof InvalidClassException) {_			return new RemoteAccessException(_					"Could not deserialize result from HTTP invoker remote service [" + getServiceUrl() + "]", ex)__		}__		return new RemoteAccessException(_					"Could not access HTTP invoker remote service at [" + getServiceUrl() + "]", ex)__	};convert,the,given,http,invoker,access,exception,to,an,appropriate,spring,remote,access,exception,param,ex,the,exception,to,convert,return,the,remote,access,exception,to,throw;protected,remote,access,exception,convert,http,invoker,access,exception,throwable,ex,if,ex,instanceof,connect,exception,return,new,remote,connect,failure,exception,could,not,connect,to,http,invoker,remote,service,at,get,service,url,ex,if,ex,instanceof,class,not,found,exception,ex,instanceof,no,class,def,found,error,ex,instanceof,invalid,class,exception,return,new,remote,access,exception,could,not,deserialize,result,from,http,invoker,remote,service,get,service,url,ex,return,new,remote,access,exception,could,not,access,http,invoker,remote,service,at,get,service,url,ex
HttpInvokerClientInterceptor -> protected RemoteAccessException convertHttpInvokerAccessException(Throwable ex);1468613531;Convert the given HTTP invoker access exception to an appropriate_Spring RemoteAccessException._@param ex the exception to convert_@return the RemoteAccessException to throw;protected RemoteAccessException convertHttpInvokerAccessException(Throwable ex) {_		if (ex instanceof ConnectException) {_			return new RemoteConnectFailureException(_					"Could not connect to HTTP invoker remote service at [" + getServiceUrl() + "]", ex)__		}__		if (ex instanceof ClassNotFoundException || ex instanceof NoClassDefFoundError ||_				ex instanceof InvalidClassException) {_			return new RemoteAccessException(_					"Could not deserialize result from HTTP invoker remote service [" + getServiceUrl() + "]", ex)__		}__		return new RemoteAccessException(_					"Could not access HTTP invoker remote service at [" + getServiceUrl() + "]", ex)__	};convert,the,given,http,invoker,access,exception,to,an,appropriate,spring,remote,access,exception,param,ex,the,exception,to,convert,return,the,remote,access,exception,to,throw;protected,remote,access,exception,convert,http,invoker,access,exception,throwable,ex,if,ex,instanceof,connect,exception,return,new,remote,connect,failure,exception,could,not,connect,to,http,invoker,remote,service,at,get,service,url,ex,if,ex,instanceof,class,not,found,exception,ex,instanceof,no,class,def,found,error,ex,instanceof,invalid,class,exception,return,new,remote,access,exception,could,not,deserialize,result,from,http,invoker,remote,service,get,service,url,ex,return,new,remote,access,exception,could,not,access,http,invoker,remote,service,at,get,service,url,ex
HttpInvokerClientInterceptor -> protected RemoteAccessException convertHttpInvokerAccessException(Throwable ex);1481218181;Convert the given HTTP invoker access exception to an appropriate_Spring {@link RemoteAccessException}._@param ex the exception to convert_@return the RemoteAccessException to throw, or {@code null} to have the_original exception propagated to the caller;protected RemoteAccessException convertHttpInvokerAccessException(Throwable ex) {_		if (ex instanceof ConnectException) {_			return new RemoteConnectFailureException(_					"Could not connect to HTTP invoker remote service at [" + getServiceUrl() + "]", ex)__		}__		if (ex instanceof ClassNotFoundException || ex instanceof NoClassDefFoundError ||_				ex instanceof InvalidClassException) {_			return new RemoteAccessException(_					"Could not deserialize result from HTTP invoker remote service [" + getServiceUrl() + "]", ex)__		}__		if (ex instanceof Exception) {_			return new RemoteAccessException(_					"Could not access HTTP invoker remote service at [" + getServiceUrl() + "]", ex)__		}__		_		return null__	};convert,the,given,http,invoker,access,exception,to,an,appropriate,spring,link,remote,access,exception,param,ex,the,exception,to,convert,return,the,remote,access,exception,to,throw,or,code,null,to,have,the,original,exception,propagated,to,the,caller;protected,remote,access,exception,convert,http,invoker,access,exception,throwable,ex,if,ex,instanceof,connect,exception,return,new,remote,connect,failure,exception,could,not,connect,to,http,invoker,remote,service,at,get,service,url,ex,if,ex,instanceof,class,not,found,exception,ex,instanceof,no,class,def,found,error,ex,instanceof,invalid,class,exception,return,new,remote,access,exception,could,not,deserialize,result,from,http,invoker,remote,service,get,service,url,ex,if,ex,instanceof,exception,return,new,remote,access,exception,could,not,access,http,invoker,remote,service,at,get,service,url,ex,return,null
HttpInvokerClientInterceptor -> protected RemoteAccessException convertHttpInvokerAccessException(Throwable ex);1490350197;Convert the given HTTP invoker access exception to an appropriate_Spring {@link RemoteAccessException}._@param ex the exception to convert_@return the RemoteAccessException to throw, or {@code null} to have the_original exception propagated to the caller;protected RemoteAccessException convertHttpInvokerAccessException(Throwable ex) {_		if (ex instanceof ConnectException) {_			return new RemoteConnectFailureException(_					"Could not connect to HTTP invoker remote service at [" + getServiceUrl() + "]", ex)__		}__		if (ex instanceof ClassNotFoundException || ex instanceof NoClassDefFoundError ||_				ex instanceof InvalidClassException) {_			return new RemoteAccessException(_					"Could not deserialize result from HTTP invoker remote service [" + getServiceUrl() + "]", ex)__		}__		if (ex instanceof Exception) {_			return new RemoteAccessException(_					"Could not access HTTP invoker remote service at [" + getServiceUrl() + "]", ex)__		}__		_		return null__	};convert,the,given,http,invoker,access,exception,to,an,appropriate,spring,link,remote,access,exception,param,ex,the,exception,to,convert,return,the,remote,access,exception,to,throw,or,code,null,to,have,the,original,exception,propagated,to,the,caller;protected,remote,access,exception,convert,http,invoker,access,exception,throwable,ex,if,ex,instanceof,connect,exception,return,new,remote,connect,failure,exception,could,not,connect,to,http,invoker,remote,service,at,get,service,url,ex,if,ex,instanceof,class,not,found,exception,ex,instanceof,no,class,def,found,error,ex,instanceof,invalid,class,exception,return,new,remote,access,exception,could,not,deserialize,result,from,http,invoker,remote,service,get,service,url,ex,if,ex,instanceof,exception,return,new,remote,access,exception,could,not,access,http,invoker,remote,service,at,get,service,url,ex,return,null
