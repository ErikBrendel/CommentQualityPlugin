# id;timestamp;commentText;codeText;commentWords;codeWords
HessianExporter -> public void invoke(InputStream inputStream, OutputStream outputStream) throws Throwable;1328020251;Perform an invocation on the exported object._@param inputStream the request stream_@param outputStream the response stream_@throws Throwable if invocation failed;public void invoke(InputStream inputStream, OutputStream outputStream) throws Throwable {_		Assert.notNull(this.skeleton, "Hessian exporter has not been initialized")__		doInvoke(this.skeleton, inputStream, outputStream)__	};perform,an,invocation,on,the,exported,object,param,input,stream,the,request,stream,param,output,stream,the,response,stream,throws,throwable,if,invocation,failed;public,void,invoke,input,stream,input,stream,output,stream,output,stream,throws,throwable,assert,not,null,this,skeleton,hessian,exporter,has,not,been,initialized,do,invoke,this,skeleton,input,stream,output,stream
HessianExporter -> public void invoke(InputStream inputStream, OutputStream outputStream) throws Throwable;1356735495;Perform an invocation on the exported object._@param inputStream the request stream_@param outputStream the response stream_@throws Throwable if invocation failed;public void invoke(InputStream inputStream, OutputStream outputStream) throws Throwable {_		Assert.notNull(this.skeleton, "Hessian exporter has not been initialized")__		doInvoke(this.skeleton, inputStream, outputStream)__	};perform,an,invocation,on,the,exported,object,param,input,stream,the,request,stream,param,output,stream,the,response,stream,throws,throwable,if,invocation,failed;public,void,invoke,input,stream,input,stream,output,stream,output,stream,throws,throwable,assert,not,null,this,skeleton,hessian,exporter,has,not,been,initialized,do,invoke,this,skeleton,input,stream,output,stream
HessianExporter -> public void invoke(InputStream inputStream, OutputStream outputStream) throws Throwable;1357119239;Perform an invocation on the exported object._@param inputStream the request stream_@param outputStream the response stream_@throws Throwable if invocation failed;public void invoke(InputStream inputStream, OutputStream outputStream) throws Throwable {_		Assert.notNull(this.skeleton, "Hessian exporter has not been initialized")__		doInvoke(this.skeleton, inputStream, outputStream)__	};perform,an,invocation,on,the,exported,object,param,input,stream,the,request,stream,param,output,stream,the,response,stream,throws,throwable,if,invocation,failed;public,void,invoke,input,stream,input,stream,output,stream,output,stream,throws,throwable,assert,not,null,this,skeleton,hessian,exporter,has,not,been,initialized,do,invoke,this,skeleton,input,stream,output,stream
HessianExporter -> public void invoke(InputStream inputStream, OutputStream outputStream) throws Throwable;1367327603;Perform an invocation on the exported object._@param inputStream the request stream_@param outputStream the response stream_@throws Throwable if invocation failed;public void invoke(InputStream inputStream, OutputStream outputStream) throws Throwable {_		Assert.notNull(this.skeleton, "Hessian exporter has not been initialized")__		doInvoke(this.skeleton, inputStream, outputStream)__	};perform,an,invocation,on,the,exported,object,param,input,stream,the,request,stream,param,output,stream,the,response,stream,throws,throwable,if,invocation,failed;public,void,invoke,input,stream,input,stream,output,stream,output,stream,throws,throwable,assert,not,null,this,skeleton,hessian,exporter,has,not,been,initialized,do,invoke,this,skeleton,input,stream,output,stream
HessianExporter -> public void invoke(InputStream inputStream, OutputStream outputStream) throws Throwable;1368482696;Perform an invocation on the exported object._@param inputStream the request stream_@param outputStream the response stream_@throws Throwable if invocation failed;public void invoke(InputStream inputStream, OutputStream outputStream) throws Throwable {_		Assert.notNull(this.skeleton, "Hessian exporter has not been initialized")__		doInvoke(this.skeleton, inputStream, outputStream)__	};perform,an,invocation,on,the,exported,object,param,input,stream,the,request,stream,param,output,stream,the,response,stream,throws,throwable,if,invocation,failed;public,void,invoke,input,stream,input,stream,output,stream,output,stream,throws,throwable,assert,not,null,this,skeleton,hessian,exporter,has,not,been,initialized,do,invoke,this,skeleton,input,stream,output,stream
HessianExporter -> public void invoke(InputStream inputStream, OutputStream outputStream) throws Throwable;1385412762;Perform an invocation on the exported object._@param inputStream the request stream_@param outputStream the response stream_@throws Throwable if invocation failed;public void invoke(InputStream inputStream, OutputStream outputStream) throws Throwable {_		Assert.notNull(this.skeleton, "Hessian exporter has not been initialized")__		doInvoke(this.skeleton, inputStream, outputStream)__	};perform,an,invocation,on,the,exported,object,param,input,stream,the,request,stream,param,output,stream,the,response,stream,throws,throwable,if,invocation,failed;public,void,invoke,input,stream,input,stream,output,stream,output,stream,throws,throwable,assert,not,null,this,skeleton,hessian,exporter,has,not,been,initialized,do,invoke,this,skeleton,input,stream,output,stream
HessianExporter -> public void invoke(InputStream inputStream, OutputStream outputStream) throws Throwable;1413848647;Perform an invocation on the exported object._@param inputStream the request stream_@param outputStream the response stream_@throws Throwable if invocation failed;public void invoke(InputStream inputStream, OutputStream outputStream) throws Throwable {_		Assert.notNull(this.skeleton, "Hessian exporter has not been initialized")__		doInvoke(this.skeleton, inputStream, outputStream)__	};perform,an,invocation,on,the,exported,object,param,input,stream,the,request,stream,param,output,stream,the,response,stream,throws,throwable,if,invocation,failed;public,void,invoke,input,stream,input,stream,output,stream,output,stream,throws,throwable,assert,not,null,this,skeleton,hessian,exporter,has,not,been,initialized,do,invoke,this,skeleton,input,stream,output,stream
HessianExporter -> public void invoke(InputStream inputStream, OutputStream outputStream) throws Throwable;1477045587;Perform an invocation on the exported object._@param inputStream the request stream_@param outputStream the response stream_@throws Throwable if invocation failed;public void invoke(InputStream inputStream, OutputStream outputStream) throws Throwable {_		Assert.notNull(this.skeleton, "Hessian exporter has not been initialized")__		doInvoke(this.skeleton, inputStream, outputStream)__	};perform,an,invocation,on,the,exported,object,param,input,stream,the,request,stream,param,output,stream,the,response,stream,throws,throwable,if,invocation,failed;public,void,invoke,input,stream,input,stream,output,stream,output,stream,throws,throwable,assert,not,null,this,skeleton,hessian,exporter,has,not,been,initialized,do,invoke,this,skeleton,input,stream,output,stream
HessianExporter -> public void invoke(InputStream inputStream, OutputStream outputStream) throws Throwable;1496837955;Perform an invocation on the exported object._@param inputStream the request stream_@param outputStream the response stream_@throws Throwable if invocation failed;public void invoke(InputStream inputStream, OutputStream outputStream) throws Throwable {_		Assert.notNull(this.skeleton, "Hessian exporter has not been initialized")__		doInvoke(this.skeleton, inputStream, outputStream)__	};perform,an,invocation,on,the,exported,object,param,input,stream,the,request,stream,param,output,stream,the,response,stream,throws,throwable,if,invocation,failed;public,void,invoke,input,stream,input,stream,output,stream,output,stream,throws,throwable,assert,not,null,this,skeleton,hessian,exporter,has,not,been,initialized,do,invoke,this,skeleton,input,stream,output,stream
HessianExporter -> public void invoke(InputStream inputStream, OutputStream outputStream) throws Throwable;1498780456;Perform an invocation on the exported object._@param inputStream the request stream_@param outputStream the response stream_@throws Throwable if invocation failed;public void invoke(InputStream inputStream, OutputStream outputStream) throws Throwable {_		Assert.notNull(this.skeleton, "Hessian exporter has not been initialized")__		doInvoke(this.skeleton, inputStream, outputStream)__	};perform,an,invocation,on,the,exported,object,param,input,stream,the,request,stream,param,output,stream,the,response,stream,throws,throwable,if,invocation,failed;public,void,invoke,input,stream,input,stream,output,stream,output,stream,throws,throwable,assert,not,null,this,skeleton,hessian,exporter,has,not,been,initialized,do,invoke,this,skeleton,input,stream,output,stream
HessianExporter -> public void invoke(InputStream inputStream, OutputStream outputStream) throws Throwable;1518167602;Perform an invocation on the exported object._@param inputStream the request stream_@param outputStream the response stream_@throws Throwable if invocation failed;public void invoke(InputStream inputStream, OutputStream outputStream) throws Throwable {_		Assert.notNull(this.skeleton, "Hessian exporter has not been initialized")__		doInvoke(this.skeleton, inputStream, outputStream)__	};perform,an,invocation,on,the,exported,object,param,input,stream,the,request,stream,param,output,stream,the,response,stream,throws,throwable,if,invocation,failed;public,void,invoke,input,stream,input,stream,output,stream,output,stream,throws,throwable,assert,not,null,this,skeleton,hessian,exporter,has,not,been,initialized,do,invoke,this,skeleton,input,stream,output,stream
HessianExporter -> public void invoke(InputStream inputStream, OutputStream outputStream) throws Throwable;1518167818;Perform an invocation on the exported object._@param inputStream the request stream_@param outputStream the response stream_@throws Throwable if invocation failed;public void invoke(InputStream inputStream, OutputStream outputStream) throws Throwable {_		Assert.notNull(this.skeleton, "Hessian exporter has not been initialized")__		doInvoke(this.skeleton, inputStream, outputStream)__	};perform,an,invocation,on,the,exported,object,param,input,stream,the,request,stream,param,output,stream,the,response,stream,throws,throwable,if,invocation,failed;public,void,invoke,input,stream,input,stream,output,stream,output,stream,throws,throwable,assert,not,null,this,skeleton,hessian,exporter,has,not,been,initialized,do,invoke,this,skeleton,input,stream,output,stream
HessianExporter -> public void invoke(InputStream inputStream, OutputStream outputStream) throws Throwable;1530174524;Perform an invocation on the exported object._@param inputStream the request stream_@param outputStream the response stream_@throws Throwable if invocation failed;public void invoke(InputStream inputStream, OutputStream outputStream) throws Throwable {_		Assert.notNull(this.skeleton, "Hessian exporter has not been initialized")__		doInvoke(this.skeleton, inputStream, outputStream)__	};perform,an,invocation,on,the,exported,object,param,input,stream,the,request,stream,param,output,stream,the,response,stream,throws,throwable,if,invocation,failed;public,void,invoke,input,stream,input,stream,output,stream,output,stream,throws,throwable,assert,not,null,this,skeleton,hessian,exporter,has,not,been,initialized,do,invoke,this,skeleton,input,stream,output,stream
HessianExporter -> public void invoke(InputStream inputStream, OutputStream outputStream) throws Throwable;1533666953;Perform an invocation on the exported object._@param inputStream the request stream_@param outputStream the response stream_@throws Throwable if invocation failed;public void invoke(InputStream inputStream, OutputStream outputStream) throws Throwable {_		Assert.notNull(this.skeleton, "Hessian exporter has not been initialized")__		doInvoke(this.skeleton, inputStream, outputStream)__	};perform,an,invocation,on,the,exported,object,param,input,stream,the,request,stream,param,output,stream,the,response,stream,throws,throwable,if,invocation,failed;public,void,invoke,input,stream,input,stream,output,stream,output,stream,throws,throwable,assert,not,null,this,skeleton,hessian,exporter,has,not,been,initialized,do,invoke,this,skeleton,input,stream,output,stream
HessianExporter -> public void setDebug(boolean debug);1328020251;Set whether Hessian's debug mode should be enabled, logging to_this exporter's Commons Logging log. Default is "false"._@see com.caucho.hessian.client.HessianProxyFactory#setDebug;public void setDebug(boolean debug) {_		this.debugLogger = (debug ? logger : null)__	};set,whether,hessian,s,debug,mode,should,be,enabled,logging,to,this,exporter,s,commons,logging,log,default,is,false,see,com,caucho,hessian,client,hessian,proxy,factory,set,debug;public,void,set,debug,boolean,debug,this,debug,logger,debug,logger,null
HessianExporter -> public void setDebug(boolean debug);1356735495;Set whether Hessian's debug mode should be enabled, logging to_this exporter's Commons Logging log. Default is "false"._@see com.caucho.hessian.client.HessianProxyFactory#setDebug;public void setDebug(boolean debug) {_		this.debugLogger = (debug ? logger : null)__	};set,whether,hessian,s,debug,mode,should,be,enabled,logging,to,this,exporter,s,commons,logging,log,default,is,false,see,com,caucho,hessian,client,hessian,proxy,factory,set,debug;public,void,set,debug,boolean,debug,this,debug,logger,debug,logger,null
HessianExporter -> public void setDebug(boolean debug);1357119239;Set whether Hessian's debug mode should be enabled, logging to_this exporter's Commons Logging log. Default is "false"._@see com.caucho.hessian.client.HessianProxyFactory#setDebug;public void setDebug(boolean debug) {_		this.debugLogger = (debug ? logger : null)__	};set,whether,hessian,s,debug,mode,should,be,enabled,logging,to,this,exporter,s,commons,logging,log,default,is,false,see,com,caucho,hessian,client,hessian,proxy,factory,set,debug;public,void,set,debug,boolean,debug,this,debug,logger,debug,logger,null
HessianExporter -> public void setDebug(boolean debug);1367327603;Set whether Hessian's debug mode should be enabled, logging to_this exporter's Commons Logging log. Default is "false"._@see com.caucho.hessian.client.HessianProxyFactory#setDebug;public void setDebug(boolean debug) {_		this.debugLogger = (debug ? logger : null)__	};set,whether,hessian,s,debug,mode,should,be,enabled,logging,to,this,exporter,s,commons,logging,log,default,is,false,see,com,caucho,hessian,client,hessian,proxy,factory,set,debug;public,void,set,debug,boolean,debug,this,debug,logger,debug,logger,null
HessianExporter -> public void setDebug(boolean debug);1368482696;Set whether Hessian's debug mode should be enabled, logging to_this exporter's Commons Logging log. Default is "false"._@see com.caucho.hessian.client.HessianProxyFactory#setDebug;public void setDebug(boolean debug) {_		this.debugLogger = (debug ? logger : null)__	};set,whether,hessian,s,debug,mode,should,be,enabled,logging,to,this,exporter,s,commons,logging,log,default,is,false,see,com,caucho,hessian,client,hessian,proxy,factory,set,debug;public,void,set,debug,boolean,debug,this,debug,logger,debug,logger,null
HessianExporter -> public void setDebug(boolean debug);1385412762;Set whether Hessian's debug mode should be enabled, logging to_this exporter's Commons Logging log. Default is "false"._@see com.caucho.hessian.client.HessianProxyFactory#setDebug;public void setDebug(boolean debug) {_		this.debugLogger = (debug ? logger : null)__	};set,whether,hessian,s,debug,mode,should,be,enabled,logging,to,this,exporter,s,commons,logging,log,default,is,false,see,com,caucho,hessian,client,hessian,proxy,factory,set,debug;public,void,set,debug,boolean,debug,this,debug,logger,debug,logger,null
HessianExporter -> public void setDebug(boolean debug);1413848647;Set whether Hessian's debug mode should be enabled, logging to_this exporter's Commons Logging log. Default is "false"._@see com.caucho.hessian.client.HessianProxyFactory#setDebug;public void setDebug(boolean debug) {_		this.debugLogger = (debug ? logger : null)__	};set,whether,hessian,s,debug,mode,should,be,enabled,logging,to,this,exporter,s,commons,logging,log,default,is,false,see,com,caucho,hessian,client,hessian,proxy,factory,set,debug;public,void,set,debug,boolean,debug,this,debug,logger,debug,logger,null
HessianExporter -> public void setDebug(boolean debug);1477045587;Set whether Hessian's debug mode should be enabled, logging to_this exporter's Commons Logging log. Default is "false"._@see com.caucho.hessian.client.HessianProxyFactory#setDebug;public void setDebug(boolean debug) {_		this.debugLogger = (debug ? logger : null)__	};set,whether,hessian,s,debug,mode,should,be,enabled,logging,to,this,exporter,s,commons,logging,log,default,is,false,see,com,caucho,hessian,client,hessian,proxy,factory,set,debug;public,void,set,debug,boolean,debug,this,debug,logger,debug,logger,null
HessianExporter -> public void setDebug(boolean debug);1496837955;Set whether Hessian's debug mode should be enabled, logging to_this exporter's Commons Logging log. Default is "false"._@see com.caucho.hessian.client.HessianProxyFactory#setDebug;public void setDebug(boolean debug) {_		this.debugLogger = (debug ? logger : null)__	};set,whether,hessian,s,debug,mode,should,be,enabled,logging,to,this,exporter,s,commons,logging,log,default,is,false,see,com,caucho,hessian,client,hessian,proxy,factory,set,debug;public,void,set,debug,boolean,debug,this,debug,logger,debug,logger,null
HessianExporter -> public void setDebug(boolean debug);1498780456;Set whether Hessian's debug mode should be enabled, logging to_this exporter's Commons Logging log. Default is "false"._@see com.caucho.hessian.client.HessianProxyFactory#setDebug;public void setDebug(boolean debug) {_		this.debugLogger = (debug ? logger : null)__	};set,whether,hessian,s,debug,mode,should,be,enabled,logging,to,this,exporter,s,commons,logging,log,default,is,false,see,com,caucho,hessian,client,hessian,proxy,factory,set,debug;public,void,set,debug,boolean,debug,this,debug,logger,debug,logger,null
HessianExporter -> public void setDebug(boolean debug);1518167602;Set whether Hessian's debug mode should be enabled, logging to_this exporter's Commons Logging log. Default is "false"._@see com.caucho.hessian.client.HessianProxyFactory#setDebug;public void setDebug(boolean debug) {_		this.debugLogger = (debug ? logger : null)__	};set,whether,hessian,s,debug,mode,should,be,enabled,logging,to,this,exporter,s,commons,logging,log,default,is,false,see,com,caucho,hessian,client,hessian,proxy,factory,set,debug;public,void,set,debug,boolean,debug,this,debug,logger,debug,logger,null
HessianExporter -> public void setDebug(boolean debug);1518167818;Set whether Hessian's debug mode should be enabled, logging to_this exporter's Commons Logging log. Default is "false"._@see com.caucho.hessian.client.HessianProxyFactory#setDebug;public void setDebug(boolean debug) {_		this.debugLogger = (debug ? logger : null)__	};set,whether,hessian,s,debug,mode,should,be,enabled,logging,to,this,exporter,s,commons,logging,log,default,is,false,see,com,caucho,hessian,client,hessian,proxy,factory,set,debug;public,void,set,debug,boolean,debug,this,debug,logger,debug,logger,null
HessianExporter -> public void setDebug(boolean debug);1530174524;Set whether Hessian's debug mode should be enabled, logging to_this exporter's Commons Logging log. Default is "false"._@see com.caucho.hessian.client.HessianProxyFactory#setDebug;public void setDebug(boolean debug) {_		this.debugLogger = (debug ? logger : null)__	};set,whether,hessian,s,debug,mode,should,be,enabled,logging,to,this,exporter,s,commons,logging,log,default,is,false,see,com,caucho,hessian,client,hessian,proxy,factory,set,debug;public,void,set,debug,boolean,debug,this,debug,logger,debug,logger,null
HessianExporter -> public void setDebug(boolean debug);1533666953;Set whether Hessian's debug mode should be enabled, logging to_this exporter's Commons Logging log. Default is "false"._@see com.caucho.hessian.client.HessianProxyFactory#setDebug;public void setDebug(boolean debug) {_		this.debugLogger = (debug ? logger : null)__	};set,whether,hessian,s,debug,mode,should,be,enabled,logging,to,this,exporter,s,commons,logging,log,default,is,false,see,com,caucho,hessian,client,hessian,proxy,factory,set,debug;public,void,set,debug,boolean,debug,this,debug,logger,debug,logger,null
HessianExporter -> public void setRemoteResolver(HessianRemoteResolver remoteResolver);1367327603;Specify a custom HessianRemoteResolver to use for resolving remote_object references.;public void setRemoteResolver(HessianRemoteResolver remoteResolver) {_		this.remoteResolver = remoteResolver__	};specify,a,custom,hessian,remote,resolver,to,use,for,resolving,remote,object,references;public,void,set,remote,resolver,hessian,remote,resolver,remote,resolver,this,remote,resolver,remote,resolver
HessianExporter -> public void setRemoteResolver(HessianRemoteResolver remoteResolver);1368482696;Specify a custom HessianRemoteResolver to use for resolving remote_object references.;public void setRemoteResolver(HessianRemoteResolver remoteResolver) {_		this.remoteResolver = remoteResolver__	};specify,a,custom,hessian,remote,resolver,to,use,for,resolving,remote,object,references;public,void,set,remote,resolver,hessian,remote,resolver,remote,resolver,this,remote,resolver,remote,resolver
HessianExporter -> public void setRemoteResolver(HessianRemoteResolver remoteResolver);1385412762;Specify a custom HessianRemoteResolver to use for resolving remote_object references.;public void setRemoteResolver(HessianRemoteResolver remoteResolver) {_		this.remoteResolver = remoteResolver__	};specify,a,custom,hessian,remote,resolver,to,use,for,resolving,remote,object,references;public,void,set,remote,resolver,hessian,remote,resolver,remote,resolver,this,remote,resolver,remote,resolver
HessianExporter -> public void setRemoteResolver(HessianRemoteResolver remoteResolver);1413848647;Specify a custom HessianRemoteResolver to use for resolving remote_object references.;public void setRemoteResolver(HessianRemoteResolver remoteResolver) {_		this.remoteResolver = remoteResolver__	};specify,a,custom,hessian,remote,resolver,to,use,for,resolving,remote,object,references;public,void,set,remote,resolver,hessian,remote,resolver,remote,resolver,this,remote,resolver,remote,resolver
HessianExporter -> public void setRemoteResolver(HessianRemoteResolver remoteResolver);1477045587;Specify a custom HessianRemoteResolver to use for resolving remote_object references.;public void setRemoteResolver(HessianRemoteResolver remoteResolver) {_		this.remoteResolver = remoteResolver__	};specify,a,custom,hessian,remote,resolver,to,use,for,resolving,remote,object,references;public,void,set,remote,resolver,hessian,remote,resolver,remote,resolver,this,remote,resolver,remote,resolver
HessianExporter -> public void setRemoteResolver(HessianRemoteResolver remoteResolver);1496837955;Specify a custom HessianRemoteResolver to use for resolving remote_object references.;public void setRemoteResolver(HessianRemoteResolver remoteResolver) {_		this.remoteResolver = remoteResolver__	};specify,a,custom,hessian,remote,resolver,to,use,for,resolving,remote,object,references;public,void,set,remote,resolver,hessian,remote,resolver,remote,resolver,this,remote,resolver,remote,resolver
HessianExporter -> public void setRemoteResolver(HessianRemoteResolver remoteResolver);1498780456;Specify a custom HessianRemoteResolver to use for resolving remote_object references.;public void setRemoteResolver(HessianRemoteResolver remoteResolver) {_		this.remoteResolver = remoteResolver__	};specify,a,custom,hessian,remote,resolver,to,use,for,resolving,remote,object,references;public,void,set,remote,resolver,hessian,remote,resolver,remote,resolver,this,remote,resolver,remote,resolver
HessianExporter -> public void setRemoteResolver(HessianRemoteResolver remoteResolver);1518167602;Specify a custom HessianRemoteResolver to use for resolving remote_object references.;public void setRemoteResolver(HessianRemoteResolver remoteResolver) {_		this.remoteResolver = remoteResolver__	};specify,a,custom,hessian,remote,resolver,to,use,for,resolving,remote,object,references;public,void,set,remote,resolver,hessian,remote,resolver,remote,resolver,this,remote,resolver,remote,resolver
HessianExporter -> public void setRemoteResolver(HessianRemoteResolver remoteResolver);1518167818;Specify a custom HessianRemoteResolver to use for resolving remote_object references.;public void setRemoteResolver(HessianRemoteResolver remoteResolver) {_		this.remoteResolver = remoteResolver__	};specify,a,custom,hessian,remote,resolver,to,use,for,resolving,remote,object,references;public,void,set,remote,resolver,hessian,remote,resolver,remote,resolver,this,remote,resolver,remote,resolver
HessianExporter -> public void setRemoteResolver(HessianRemoteResolver remoteResolver);1530174524;Specify a custom HessianRemoteResolver to use for resolving remote_object references.;public void setRemoteResolver(HessianRemoteResolver remoteResolver) {_		this.remoteResolver = remoteResolver__	};specify,a,custom,hessian,remote,resolver,to,use,for,resolving,remote,object,references;public,void,set,remote,resolver,hessian,remote,resolver,remote,resolver,this,remote,resolver,remote,resolver
HessianExporter -> public void setRemoteResolver(HessianRemoteResolver remoteResolver);1533666953;Specify a custom HessianRemoteResolver to use for resolving remote_object references.;public void setRemoteResolver(HessianRemoteResolver remoteResolver) {_		this.remoteResolver = remoteResolver__	};specify,a,custom,hessian,remote,resolver,to,use,for,resolving,remote,object,references;public,void,set,remote,resolver,hessian,remote,resolver,remote,resolver,this,remote,resolver,remote,resolver
HessianExporter -> protected void doInvoke(HessianSkeleton skeleton, InputStream inputStream, OutputStream outputStream) 			throws Throwable;1328020251;Actually invoke the skeleton with the given streams._@param skeleton the skeleton to invoke_@param inputStream the request stream_@param outputStream the response stream_@throws Throwable if invocation failed;protected void doInvoke(HessianSkeleton skeleton, InputStream inputStream, OutputStream outputStream)_			throws Throwable {__		ClassLoader originalClassLoader = overrideThreadContextClassLoader()__		try {_			InputStream isToUse = inputStream__			OutputStream osToUse = outputStream___			if (this.debugLogger != null && this.debugLogger.isDebugEnabled()) {_				PrintWriter debugWriter = new PrintWriter(new CommonsLogWriter(this.debugLogger))__				HessianDebugInputStream dis = new HessianDebugInputStream(inputStream, debugWriter)__				dis.startTop2()__				HessianDebugOutputStream dos = new HessianDebugOutputStream(outputStream, debugWriter)__				dos.startTop2()__				isToUse = dis__				osToUse = dos__			}__			if (!isToUse.markSupported()) {_				isToUse = new BufferedInputStream(isToUse)__				isToUse.mark(1)__			}__			int code = isToUse.read()__			int major__			int minor___			AbstractHessianInput in__			AbstractHessianOutput out___			if (code == 'H') {_				_				major = isToUse.read()__				minor = isToUse.read()__				if (major != 0x02) {_					throw new IOException("Version " + major + "." + minor + " is not understood")__				}_				in = new Hessian2Input(isToUse)__				out = new Hessian2Output(osToUse)__				in.readCall()__			}_			else if (code == 'C') {_				_				isToUse.reset()__				in = new Hessian2Input(isToUse)__				out = new Hessian2Output(osToUse)__				in.readCall()__			}_			else if (code == 'c') {_				_				major = isToUse.read()__				minor = isToUse.read()__				in = new HessianInput(isToUse)__				if (major >= 2) {_					out = new Hessian2Output(osToUse)__				}_				else {_					out = new HessianOutput(osToUse)__				}_			}_			else {_				throw new IOException("Expected 'H'/'C' (Hessian 2.0) or 'c' (Hessian 1.0) in hessian input at " + code)__			}__			if (this.serializerFactory != null) {_				in.setSerializerFactory(this.serializerFactory)__				out.setSerializerFactory(this.serializerFactory)__			}__			try {_				skeleton.invoke(in, out)__			}_			finally {_				try {_					in.close()__					isToUse.close()__				}_				catch (IOException ex) {_					_				}_				try {_					out.close()__					osToUse.close()__				}_				catch (IOException ex) {_					_				}_			}_		}_		finally {_			resetThreadContextClassLoader(originalClassLoader)__		}_	};actually,invoke,the,skeleton,with,the,given,streams,param,skeleton,the,skeleton,to,invoke,param,input,stream,the,request,stream,param,output,stream,the,response,stream,throws,throwable,if,invocation,failed;protected,void,do,invoke,hessian,skeleton,skeleton,input,stream,input,stream,output,stream,output,stream,throws,throwable,class,loader,original,class,loader,override,thread,context,class,loader,try,input,stream,is,to,use,input,stream,output,stream,os,to,use,output,stream,if,this,debug,logger,null,this,debug,logger,is,debug,enabled,print,writer,debug,writer,new,print,writer,new,commons,log,writer,this,debug,logger,hessian,debug,input,stream,dis,new,hessian,debug,input,stream,input,stream,debug,writer,dis,start,top2,hessian,debug,output,stream,dos,new,hessian,debug,output,stream,output,stream,debug,writer,dos,start,top2,is,to,use,dis,os,to,use,dos,if,is,to,use,mark,supported,is,to,use,new,buffered,input,stream,is,to,use,is,to,use,mark,1,int,code,is,to,use,read,int,major,int,minor,abstract,hessian,input,in,abstract,hessian,output,out,if,code,h,major,is,to,use,read,minor,is,to,use,read,if,major,0x02,throw,new,ioexception,version,major,minor,is,not,understood,in,new,hessian2input,is,to,use,out,new,hessian2output,os,to,use,in,read,call,else,if,code,c,is,to,use,reset,in,new,hessian2input,is,to,use,out,new,hessian2output,os,to,use,in,read,call,else,if,code,c,major,is,to,use,read,minor,is,to,use,read,in,new,hessian,input,is,to,use,if,major,2,out,new,hessian2output,os,to,use,else,out,new,hessian,output,os,to,use,else,throw,new,ioexception,expected,h,c,hessian,2,0,or,c,hessian,1,0,in,hessian,input,at,code,if,this,serializer,factory,null,in,set,serializer,factory,this,serializer,factory,out,set,serializer,factory,this,serializer,factory,try,skeleton,invoke,in,out,finally,try,in,close,is,to,use,close,catch,ioexception,ex,try,out,close,os,to,use,close,catch,ioexception,ex,finally,reset,thread,context,class,loader,original,class,loader
HessianExporter -> protected void doInvoke(HessianSkeleton skeleton, InputStream inputStream, OutputStream outputStream) 			throws Throwable;1356735495;Actually invoke the skeleton with the given streams._@param skeleton the skeleton to invoke_@param inputStream the request stream_@param outputStream the response stream_@throws Throwable if invocation failed;protected void doInvoke(HessianSkeleton skeleton, InputStream inputStream, OutputStream outputStream)_			throws Throwable {__		ClassLoader originalClassLoader = overrideThreadContextClassLoader()__		try {_			InputStream isToUse = inputStream__			OutputStream osToUse = outputStream___			if (this.debugLogger != null && this.debugLogger.isDebugEnabled()) {_				PrintWriter debugWriter = new PrintWriter(new CommonsLogWriter(this.debugLogger))__				HessianDebugInputStream dis = new HessianDebugInputStream(inputStream, debugWriter)__				dis.startTop2()__				HessianDebugOutputStream dos = new HessianDebugOutputStream(outputStream, debugWriter)__				dos.startTop2()__				isToUse = dis__				osToUse = dos__			}__			if (!isToUse.markSupported()) {_				isToUse = new BufferedInputStream(isToUse)__				isToUse.mark(1)__			}__			int code = isToUse.read()__			int major__			int minor___			AbstractHessianInput in__			AbstractHessianOutput out___			if (code == 'H') {_				_				major = isToUse.read()__				minor = isToUse.read()__				if (major != 0x02) {_					throw new IOException("Version " + major + "." + minor + " is not understood")__				}_				in = new Hessian2Input(isToUse)__				out = new Hessian2Output(osToUse)__				in.readCall()__			}_			else if (code == 'C') {_				_				isToUse.reset()__				in = new Hessian2Input(isToUse)__				out = new Hessian2Output(osToUse)__				in.readCall()__			}_			else if (code == 'c') {_				_				major = isToUse.read()__				minor = isToUse.read()__				in = new HessianInput(isToUse)__				if (major >= 2) {_					out = new Hessian2Output(osToUse)__				}_				else {_					out = new HessianOutput(osToUse)__				}_			}_			else {_				throw new IOException("Expected 'H'/'C' (Hessian 2.0) or 'c' (Hessian 1.0) in hessian input at " + code)__			}__			if (this.serializerFactory != null) {_				in.setSerializerFactory(this.serializerFactory)__				out.setSerializerFactory(this.serializerFactory)__			}__			try {_				skeleton.invoke(in, out)__			}_			finally {_				try {_					in.close()__					isToUse.close()__				}_				catch (IOException ex) {_					_				}_				try {_					out.close()__					osToUse.close()__				}_				catch (IOException ex) {_					_				}_			}_		}_		finally {_			resetThreadContextClassLoader(originalClassLoader)__		}_	};actually,invoke,the,skeleton,with,the,given,streams,param,skeleton,the,skeleton,to,invoke,param,input,stream,the,request,stream,param,output,stream,the,response,stream,throws,throwable,if,invocation,failed;protected,void,do,invoke,hessian,skeleton,skeleton,input,stream,input,stream,output,stream,output,stream,throws,throwable,class,loader,original,class,loader,override,thread,context,class,loader,try,input,stream,is,to,use,input,stream,output,stream,os,to,use,output,stream,if,this,debug,logger,null,this,debug,logger,is,debug,enabled,print,writer,debug,writer,new,print,writer,new,commons,log,writer,this,debug,logger,hessian,debug,input,stream,dis,new,hessian,debug,input,stream,input,stream,debug,writer,dis,start,top2,hessian,debug,output,stream,dos,new,hessian,debug,output,stream,output,stream,debug,writer,dos,start,top2,is,to,use,dis,os,to,use,dos,if,is,to,use,mark,supported,is,to,use,new,buffered,input,stream,is,to,use,is,to,use,mark,1,int,code,is,to,use,read,int,major,int,minor,abstract,hessian,input,in,abstract,hessian,output,out,if,code,h,major,is,to,use,read,minor,is,to,use,read,if,major,0x02,throw,new,ioexception,version,major,minor,is,not,understood,in,new,hessian2input,is,to,use,out,new,hessian2output,os,to,use,in,read,call,else,if,code,c,is,to,use,reset,in,new,hessian2input,is,to,use,out,new,hessian2output,os,to,use,in,read,call,else,if,code,c,major,is,to,use,read,minor,is,to,use,read,in,new,hessian,input,is,to,use,if,major,2,out,new,hessian2output,os,to,use,else,out,new,hessian,output,os,to,use,else,throw,new,ioexception,expected,h,c,hessian,2,0,or,c,hessian,1,0,in,hessian,input,at,code,if,this,serializer,factory,null,in,set,serializer,factory,this,serializer,factory,out,set,serializer,factory,this,serializer,factory,try,skeleton,invoke,in,out,finally,try,in,close,is,to,use,close,catch,ioexception,ex,try,out,close,os,to,use,close,catch,ioexception,ex,finally,reset,thread,context,class,loader,original,class,loader
HessianExporter -> protected void doInvoke(HessianSkeleton skeleton, InputStream inputStream, OutputStream outputStream) 			throws Throwable;1357119239;Actually invoke the skeleton with the given streams._@param skeleton the skeleton to invoke_@param inputStream the request stream_@param outputStream the response stream_@throws Throwable if invocation failed;protected void doInvoke(HessianSkeleton skeleton, InputStream inputStream, OutputStream outputStream)_			throws Throwable {__		ClassLoader originalClassLoader = overrideThreadContextClassLoader()__		try {_			InputStream isToUse = inputStream__			OutputStream osToUse = outputStream___			if (this.debugLogger != null && this.debugLogger.isDebugEnabled()) {_				PrintWriter debugWriter = new PrintWriter(new CommonsLogWriter(this.debugLogger))__				HessianDebugInputStream dis = new HessianDebugInputStream(inputStream, debugWriter)__				dis.startTop2()__				HessianDebugOutputStream dos = new HessianDebugOutputStream(outputStream, debugWriter)__				dos.startTop2()__				isToUse = dis__				osToUse = dos__			}__			if (!isToUse.markSupported()) {_				isToUse = new BufferedInputStream(isToUse)__				isToUse.mark(1)__			}__			int code = isToUse.read()__			int major__			int minor___			AbstractHessianInput in__			AbstractHessianOutput out___			if (code == 'H') {_				_				major = isToUse.read()__				minor = isToUse.read()__				if (major != 0x02) {_					throw new IOException("Version " + major + "." + minor + " is not understood")__				}_				in = new Hessian2Input(isToUse)__				out = new Hessian2Output(osToUse)__				in.readCall()__			}_			else if (code == 'C') {_				_				isToUse.reset()__				in = new Hessian2Input(isToUse)__				out = new Hessian2Output(osToUse)__				in.readCall()__			}_			else if (code == 'c') {_				_				major = isToUse.read()__				minor = isToUse.read()__				in = new HessianInput(isToUse)__				if (major >= 2) {_					out = new Hessian2Output(osToUse)__				}_				else {_					out = new HessianOutput(osToUse)__				}_			}_			else {_				throw new IOException("Expected 'H'/'C' (Hessian 2.0) or 'c' (Hessian 1.0) in hessian input at " + code)__			}__			if (this.serializerFactory != null) {_				in.setSerializerFactory(this.serializerFactory)__				out.setSerializerFactory(this.serializerFactory)__			}__			try {_				skeleton.invoke(in, out)__			}_			finally {_				try {_					in.close()__					isToUse.close()__				}_				catch (IOException ex) {_					_				}_				try {_					out.close()__					osToUse.close()__				}_				catch (IOException ex) {_					_				}_			}_		}_		finally {_			resetThreadContextClassLoader(originalClassLoader)__		}_	};actually,invoke,the,skeleton,with,the,given,streams,param,skeleton,the,skeleton,to,invoke,param,input,stream,the,request,stream,param,output,stream,the,response,stream,throws,throwable,if,invocation,failed;protected,void,do,invoke,hessian,skeleton,skeleton,input,stream,input,stream,output,stream,output,stream,throws,throwable,class,loader,original,class,loader,override,thread,context,class,loader,try,input,stream,is,to,use,input,stream,output,stream,os,to,use,output,stream,if,this,debug,logger,null,this,debug,logger,is,debug,enabled,print,writer,debug,writer,new,print,writer,new,commons,log,writer,this,debug,logger,hessian,debug,input,stream,dis,new,hessian,debug,input,stream,input,stream,debug,writer,dis,start,top2,hessian,debug,output,stream,dos,new,hessian,debug,output,stream,output,stream,debug,writer,dos,start,top2,is,to,use,dis,os,to,use,dos,if,is,to,use,mark,supported,is,to,use,new,buffered,input,stream,is,to,use,is,to,use,mark,1,int,code,is,to,use,read,int,major,int,minor,abstract,hessian,input,in,abstract,hessian,output,out,if,code,h,major,is,to,use,read,minor,is,to,use,read,if,major,0x02,throw,new,ioexception,version,major,minor,is,not,understood,in,new,hessian2input,is,to,use,out,new,hessian2output,os,to,use,in,read,call,else,if,code,c,is,to,use,reset,in,new,hessian2input,is,to,use,out,new,hessian2output,os,to,use,in,read,call,else,if,code,c,major,is,to,use,read,minor,is,to,use,read,in,new,hessian,input,is,to,use,if,major,2,out,new,hessian2output,os,to,use,else,out,new,hessian,output,os,to,use,else,throw,new,ioexception,expected,h,c,hessian,2,0,or,c,hessian,1,0,in,hessian,input,at,code,if,this,serializer,factory,null,in,set,serializer,factory,this,serializer,factory,out,set,serializer,factory,this,serializer,factory,try,skeleton,invoke,in,out,finally,try,in,close,is,to,use,close,catch,ioexception,ex,try,out,close,os,to,use,close,catch,ioexception,ex,finally,reset,thread,context,class,loader,original,class,loader
HessianExporter -> protected void doInvoke(HessianSkeleton skeleton, InputStream inputStream, OutputStream outputStream) 			throws Throwable;1367327603;Actually invoke the skeleton with the given streams._@param skeleton the skeleton to invoke_@param inputStream the request stream_@param outputStream the response stream_@throws Throwable if invocation failed;protected void doInvoke(HessianSkeleton skeleton, InputStream inputStream, OutputStream outputStream)_			throws Throwable {__		ClassLoader originalClassLoader = overrideThreadContextClassLoader()__		try {_			InputStream isToUse = inputStream__			OutputStream osToUse = outputStream___			if (this.debugLogger != null && this.debugLogger.isDebugEnabled()) {_				PrintWriter debugWriter = new PrintWriter(new CommonsLogWriter(this.debugLogger))__				HessianDebugInputStream dis = new HessianDebugInputStream(inputStream, debugWriter)__				dis.startTop2()__				HessianDebugOutputStream dos = new HessianDebugOutputStream(outputStream, debugWriter)__				dos.startTop2()__				isToUse = dis__				osToUse = dos__			}__			if (!isToUse.markSupported()) {_				isToUse = new BufferedInputStream(isToUse)__				isToUse.mark(1)__			}__			int code = isToUse.read()__			int major__			int minor___			AbstractHessianInput in__			AbstractHessianOutput out___			if (code == 'H') {_				_				major = isToUse.read()__				minor = isToUse.read()__				if (major != 0x02) {_					throw new IOException("Version " + major + "." + minor + " is not understood")__				}_				in = new Hessian2Input(isToUse)__				out = new Hessian2Output(osToUse)__				in.readCall()__			}_			else if (code == 'C') {_				_				isToUse.reset()__				in = new Hessian2Input(isToUse)__				out = new Hessian2Output(osToUse)__				in.readCall()__			}_			else if (code == 'c') {_				_				major = isToUse.read()__				minor = isToUse.read()__				in = new HessianInput(isToUse)__				if (major >= 2) {_					out = new Hessian2Output(osToUse)__				}_				else {_					out = new HessianOutput(osToUse)__				}_			}_			else {_				throw new IOException("Expected 'H'/'C' (Hessian 2.0) or 'c' (Hessian 1.0) in hessian input at " + code)__			}__			if (this.serializerFactory != null) {_				in.setSerializerFactory(this.serializerFactory)__				out.setSerializerFactory(this.serializerFactory)__			}_			if (this.remoteResolver != null) {_				in.setRemoteResolver(this.remoteResolver)__			}__			try {_				skeleton.invoke(in, out)__			}_			finally {_				try {_					in.close()__					isToUse.close()__				}_				catch (IOException ex) {_					_				}_				try {_					out.close()__					osToUse.close()__				}_				catch (IOException ex) {_					_				}_			}_		}_		finally {_			resetThreadContextClassLoader(originalClassLoader)__		}_	};actually,invoke,the,skeleton,with,the,given,streams,param,skeleton,the,skeleton,to,invoke,param,input,stream,the,request,stream,param,output,stream,the,response,stream,throws,throwable,if,invocation,failed;protected,void,do,invoke,hessian,skeleton,skeleton,input,stream,input,stream,output,stream,output,stream,throws,throwable,class,loader,original,class,loader,override,thread,context,class,loader,try,input,stream,is,to,use,input,stream,output,stream,os,to,use,output,stream,if,this,debug,logger,null,this,debug,logger,is,debug,enabled,print,writer,debug,writer,new,print,writer,new,commons,log,writer,this,debug,logger,hessian,debug,input,stream,dis,new,hessian,debug,input,stream,input,stream,debug,writer,dis,start,top2,hessian,debug,output,stream,dos,new,hessian,debug,output,stream,output,stream,debug,writer,dos,start,top2,is,to,use,dis,os,to,use,dos,if,is,to,use,mark,supported,is,to,use,new,buffered,input,stream,is,to,use,is,to,use,mark,1,int,code,is,to,use,read,int,major,int,minor,abstract,hessian,input,in,abstract,hessian,output,out,if,code,h,major,is,to,use,read,minor,is,to,use,read,if,major,0x02,throw,new,ioexception,version,major,minor,is,not,understood,in,new,hessian2input,is,to,use,out,new,hessian2output,os,to,use,in,read,call,else,if,code,c,is,to,use,reset,in,new,hessian2input,is,to,use,out,new,hessian2output,os,to,use,in,read,call,else,if,code,c,major,is,to,use,read,minor,is,to,use,read,in,new,hessian,input,is,to,use,if,major,2,out,new,hessian2output,os,to,use,else,out,new,hessian,output,os,to,use,else,throw,new,ioexception,expected,h,c,hessian,2,0,or,c,hessian,1,0,in,hessian,input,at,code,if,this,serializer,factory,null,in,set,serializer,factory,this,serializer,factory,out,set,serializer,factory,this,serializer,factory,if,this,remote,resolver,null,in,set,remote,resolver,this,remote,resolver,try,skeleton,invoke,in,out,finally,try,in,close,is,to,use,close,catch,ioexception,ex,try,out,close,os,to,use,close,catch,ioexception,ex,finally,reset,thread,context,class,loader,original,class,loader
HessianExporter -> protected void doInvoke(HessianSkeleton skeleton, InputStream inputStream, OutputStream outputStream) 			throws Throwable;1368482696;Actually invoke the skeleton with the given streams._@param skeleton the skeleton to invoke_@param inputStream the request stream_@param outputStream the response stream_@throws Throwable if invocation failed;protected void doInvoke(HessianSkeleton skeleton, InputStream inputStream, OutputStream outputStream)_			throws Throwable {__		ClassLoader originalClassLoader = overrideThreadContextClassLoader()__		try {_			InputStream isToUse = inputStream__			OutputStream osToUse = outputStream___			if (this.debugLogger != null && this.debugLogger.isDebugEnabled()) {_				PrintWriter debugWriter = new PrintWriter(new CommonsLogWriter(this.debugLogger))__				HessianDebugInputStream dis = new HessianDebugInputStream(inputStream, debugWriter)__				dis.startTop2()__				HessianDebugOutputStream dos = new HessianDebugOutputStream(outputStream, debugWriter)__				dos.startTop2()__				isToUse = dis__				osToUse = dos__			}__			if (!isToUse.markSupported()) {_				isToUse = new BufferedInputStream(isToUse)__				isToUse.mark(1)__			}__			int code = isToUse.read()__			int major__			int minor___			AbstractHessianInput in__			AbstractHessianOutput out___			if (code == 'H') {_				_				major = isToUse.read()__				minor = isToUse.read()__				if (major != 0x02) {_					throw new IOException("Version " + major + "." + minor + " is not understood")__				}_				in = new Hessian2Input(isToUse)__				out = new Hessian2Output(osToUse)__				in.readCall()__			}_			else if (code == 'C') {_				_				isToUse.reset()__				in = new Hessian2Input(isToUse)__				out = new Hessian2Output(osToUse)__				in.readCall()__			}_			else if (code == 'c') {_				_				major = isToUse.read()__				minor = isToUse.read()__				in = new HessianInput(isToUse)__				if (major >= 2) {_					out = new Hessian2Output(osToUse)__				}_				else {_					out = new HessianOutput(osToUse)__				}_			}_			else {_				throw new IOException("Expected 'H'/'C' (Hessian 2.0) or 'c' (Hessian 1.0) in hessian input at " + code)__			}__			if (this.serializerFactory != null) {_				in.setSerializerFactory(this.serializerFactory)__				out.setSerializerFactory(this.serializerFactory)__			}_			if (this.remoteResolver != null) {_				in.setRemoteResolver(this.remoteResolver)__			}__			try {_				skeleton.invoke(in, out)__			}_			finally {_				try {_					in.close()__					isToUse.close()__				}_				catch (IOException ex) {_					_				}_				try {_					out.close()__					osToUse.close()__				}_				catch (IOException ex) {_					_				}_			}_		}_		finally {_			resetThreadContextClassLoader(originalClassLoader)__		}_	};actually,invoke,the,skeleton,with,the,given,streams,param,skeleton,the,skeleton,to,invoke,param,input,stream,the,request,stream,param,output,stream,the,response,stream,throws,throwable,if,invocation,failed;protected,void,do,invoke,hessian,skeleton,skeleton,input,stream,input,stream,output,stream,output,stream,throws,throwable,class,loader,original,class,loader,override,thread,context,class,loader,try,input,stream,is,to,use,input,stream,output,stream,os,to,use,output,stream,if,this,debug,logger,null,this,debug,logger,is,debug,enabled,print,writer,debug,writer,new,print,writer,new,commons,log,writer,this,debug,logger,hessian,debug,input,stream,dis,new,hessian,debug,input,stream,input,stream,debug,writer,dis,start,top2,hessian,debug,output,stream,dos,new,hessian,debug,output,stream,output,stream,debug,writer,dos,start,top2,is,to,use,dis,os,to,use,dos,if,is,to,use,mark,supported,is,to,use,new,buffered,input,stream,is,to,use,is,to,use,mark,1,int,code,is,to,use,read,int,major,int,minor,abstract,hessian,input,in,abstract,hessian,output,out,if,code,h,major,is,to,use,read,minor,is,to,use,read,if,major,0x02,throw,new,ioexception,version,major,minor,is,not,understood,in,new,hessian2input,is,to,use,out,new,hessian2output,os,to,use,in,read,call,else,if,code,c,is,to,use,reset,in,new,hessian2input,is,to,use,out,new,hessian2output,os,to,use,in,read,call,else,if,code,c,major,is,to,use,read,minor,is,to,use,read,in,new,hessian,input,is,to,use,if,major,2,out,new,hessian2output,os,to,use,else,out,new,hessian,output,os,to,use,else,throw,new,ioexception,expected,h,c,hessian,2,0,or,c,hessian,1,0,in,hessian,input,at,code,if,this,serializer,factory,null,in,set,serializer,factory,this,serializer,factory,out,set,serializer,factory,this,serializer,factory,if,this,remote,resolver,null,in,set,remote,resolver,this,remote,resolver,try,skeleton,invoke,in,out,finally,try,in,close,is,to,use,close,catch,ioexception,ex,try,out,close,os,to,use,close,catch,ioexception,ex,finally,reset,thread,context,class,loader,original,class,loader
HessianExporter -> protected void doInvoke(HessianSkeleton skeleton, InputStream inputStream, OutputStream outputStream) 			throws Throwable;1385412762;Actually invoke the skeleton with the given streams._@param skeleton the skeleton to invoke_@param inputStream the request stream_@param outputStream the response stream_@throws Throwable if invocation failed;protected void doInvoke(HessianSkeleton skeleton, InputStream inputStream, OutputStream outputStream)_			throws Throwable {__		ClassLoader originalClassLoader = overrideThreadContextClassLoader()__		try {_			InputStream isToUse = inputStream__			OutputStream osToUse = outputStream___			if (this.debugLogger != null && this.debugLogger.isDebugEnabled()) {_				PrintWriter debugWriter = new PrintWriter(new CommonsLogWriter(this.debugLogger))__				@SuppressWarnings("resource")_				HessianDebugInputStream dis = new HessianDebugInputStream(inputStream, debugWriter)__				@SuppressWarnings("resource")_				HessianDebugOutputStream dos = new HessianDebugOutputStream(outputStream, debugWriter)__				dis.startTop2()__				dos.startTop2()__				isToUse = dis__				osToUse = dos__			}__			if (!isToUse.markSupported()) {_				isToUse = new BufferedInputStream(isToUse)__				isToUse.mark(1)__			}__			int code = isToUse.read()__			int major__			int minor___			AbstractHessianInput in__			AbstractHessianOutput out___			if (code == 'H') {_				_				major = isToUse.read()__				minor = isToUse.read()__				if (major != 0x02) {_					throw new IOException("Version " + major + "." + minor + " is not understood")__				}_				in = new Hessian2Input(isToUse)__				out = new Hessian2Output(osToUse)__				in.readCall()__			}_			else if (code == 'C') {_				_				isToUse.reset()__				in = new Hessian2Input(isToUse)__				out = new Hessian2Output(osToUse)__				in.readCall()__			}_			else if (code == 'c') {_				_				major = isToUse.read()__				minor = isToUse.read()__				in = new HessianInput(isToUse)__				if (major >= 2) {_					out = new Hessian2Output(osToUse)__				}_				else {_					out = new HessianOutput(osToUse)__				}_			}_			else {_				throw new IOException("Expected 'H'/'C' (Hessian 2.0) or 'c' (Hessian 1.0) in hessian input at " + code)__			}__			if (this.serializerFactory != null) {_				in.setSerializerFactory(this.serializerFactory)__				out.setSerializerFactory(this.serializerFactory)__			}_			if (this.remoteResolver != null) {_				in.setRemoteResolver(this.remoteResolver)__			}__			try {_				skeleton.invoke(in, out)__			}_			finally {_				try {_					in.close()__					isToUse.close()__				}_				catch (IOException ex) {_					_				}_				try {_					out.close()__					osToUse.close()__				}_				catch (IOException ex) {_					_				}_			}_		}_		finally {_			resetThreadContextClassLoader(originalClassLoader)__		}_	};actually,invoke,the,skeleton,with,the,given,streams,param,skeleton,the,skeleton,to,invoke,param,input,stream,the,request,stream,param,output,stream,the,response,stream,throws,throwable,if,invocation,failed;protected,void,do,invoke,hessian,skeleton,skeleton,input,stream,input,stream,output,stream,output,stream,throws,throwable,class,loader,original,class,loader,override,thread,context,class,loader,try,input,stream,is,to,use,input,stream,output,stream,os,to,use,output,stream,if,this,debug,logger,null,this,debug,logger,is,debug,enabled,print,writer,debug,writer,new,print,writer,new,commons,log,writer,this,debug,logger,suppress,warnings,resource,hessian,debug,input,stream,dis,new,hessian,debug,input,stream,input,stream,debug,writer,suppress,warnings,resource,hessian,debug,output,stream,dos,new,hessian,debug,output,stream,output,stream,debug,writer,dis,start,top2,dos,start,top2,is,to,use,dis,os,to,use,dos,if,is,to,use,mark,supported,is,to,use,new,buffered,input,stream,is,to,use,is,to,use,mark,1,int,code,is,to,use,read,int,major,int,minor,abstract,hessian,input,in,abstract,hessian,output,out,if,code,h,major,is,to,use,read,minor,is,to,use,read,if,major,0x02,throw,new,ioexception,version,major,minor,is,not,understood,in,new,hessian2input,is,to,use,out,new,hessian2output,os,to,use,in,read,call,else,if,code,c,is,to,use,reset,in,new,hessian2input,is,to,use,out,new,hessian2output,os,to,use,in,read,call,else,if,code,c,major,is,to,use,read,minor,is,to,use,read,in,new,hessian,input,is,to,use,if,major,2,out,new,hessian2output,os,to,use,else,out,new,hessian,output,os,to,use,else,throw,new,ioexception,expected,h,c,hessian,2,0,or,c,hessian,1,0,in,hessian,input,at,code,if,this,serializer,factory,null,in,set,serializer,factory,this,serializer,factory,out,set,serializer,factory,this,serializer,factory,if,this,remote,resolver,null,in,set,remote,resolver,this,remote,resolver,try,skeleton,invoke,in,out,finally,try,in,close,is,to,use,close,catch,ioexception,ex,try,out,close,os,to,use,close,catch,ioexception,ex,finally,reset,thread,context,class,loader,original,class,loader
HessianExporter -> protected void doInvoke(HessianSkeleton skeleton, InputStream inputStream, OutputStream outputStream) 			throws Throwable;1413848647;Actually invoke the skeleton with the given streams._@param skeleton the skeleton to invoke_@param inputStream the request stream_@param outputStream the response stream_@throws Throwable if invocation failed;protected void doInvoke(HessianSkeleton skeleton, InputStream inputStream, OutputStream outputStream)_			throws Throwable {__		ClassLoader originalClassLoader = overrideThreadContextClassLoader()__		try {_			InputStream isToUse = inputStream__			OutputStream osToUse = outputStream___			if (this.debugLogger != null && this.debugLogger.isDebugEnabled()) {_				PrintWriter debugWriter = new PrintWriter(new CommonsLogWriter(this.debugLogger))__				@SuppressWarnings("resource")_				HessianDebugInputStream dis = new HessianDebugInputStream(inputStream, debugWriter)__				@SuppressWarnings("resource")_				HessianDebugOutputStream dos = new HessianDebugOutputStream(outputStream, debugWriter)__				dis.startTop2()__				dos.startTop2()__				isToUse = dis__				osToUse = dos__			}__			if (!isToUse.markSupported()) {_				isToUse = new BufferedInputStream(isToUse)__				isToUse.mark(1)__			}__			int code = isToUse.read()__			int major__			int minor___			AbstractHessianInput in__			AbstractHessianOutput out___			if (code == 'H') {_				_				major = isToUse.read()__				minor = isToUse.read()__				if (major != 0x02) {_					throw new IOException("Version " + major + "." + minor + " is not understood")__				}_				in = new Hessian2Input(isToUse)__				out = new Hessian2Output(osToUse)__				in.readCall()__			}_			else if (code == 'C') {_				_				isToUse.reset()__				in = new Hessian2Input(isToUse)__				out = new Hessian2Output(osToUse)__				in.readCall()__			}_			else if (code == 'c') {_				_				major = isToUse.read()__				minor = isToUse.read()__				in = new HessianInput(isToUse)__				if (major >= 2) {_					out = new Hessian2Output(osToUse)__				}_				else {_					out = new HessianOutput(osToUse)__				}_			}_			else {_				throw new IOException("Expected 'H'/'C' (Hessian 2.0) or 'c' (Hessian 1.0) in hessian input at " + code)__			}__			if (this.serializerFactory != null) {_				in.setSerializerFactory(this.serializerFactory)__				out.setSerializerFactory(this.serializerFactory)__			}_			if (this.remoteResolver != null) {_				in.setRemoteResolver(this.remoteResolver)__			}__			try {_				skeleton.invoke(in, out)__			}_			finally {_				try {_					in.close()__					isToUse.close()__				}_				catch (IOException ex) {_					_				}_				try {_					out.close()__					osToUse.close()__				}_				catch (IOException ex) {_					_				}_			}_		}_		finally {_			resetThreadContextClassLoader(originalClassLoader)__		}_	};actually,invoke,the,skeleton,with,the,given,streams,param,skeleton,the,skeleton,to,invoke,param,input,stream,the,request,stream,param,output,stream,the,response,stream,throws,throwable,if,invocation,failed;protected,void,do,invoke,hessian,skeleton,skeleton,input,stream,input,stream,output,stream,output,stream,throws,throwable,class,loader,original,class,loader,override,thread,context,class,loader,try,input,stream,is,to,use,input,stream,output,stream,os,to,use,output,stream,if,this,debug,logger,null,this,debug,logger,is,debug,enabled,print,writer,debug,writer,new,print,writer,new,commons,log,writer,this,debug,logger,suppress,warnings,resource,hessian,debug,input,stream,dis,new,hessian,debug,input,stream,input,stream,debug,writer,suppress,warnings,resource,hessian,debug,output,stream,dos,new,hessian,debug,output,stream,output,stream,debug,writer,dis,start,top2,dos,start,top2,is,to,use,dis,os,to,use,dos,if,is,to,use,mark,supported,is,to,use,new,buffered,input,stream,is,to,use,is,to,use,mark,1,int,code,is,to,use,read,int,major,int,minor,abstract,hessian,input,in,abstract,hessian,output,out,if,code,h,major,is,to,use,read,minor,is,to,use,read,if,major,0x02,throw,new,ioexception,version,major,minor,is,not,understood,in,new,hessian2input,is,to,use,out,new,hessian2output,os,to,use,in,read,call,else,if,code,c,is,to,use,reset,in,new,hessian2input,is,to,use,out,new,hessian2output,os,to,use,in,read,call,else,if,code,c,major,is,to,use,read,minor,is,to,use,read,in,new,hessian,input,is,to,use,if,major,2,out,new,hessian2output,os,to,use,else,out,new,hessian,output,os,to,use,else,throw,new,ioexception,expected,h,c,hessian,2,0,or,c,hessian,1,0,in,hessian,input,at,code,if,this,serializer,factory,null,in,set,serializer,factory,this,serializer,factory,out,set,serializer,factory,this,serializer,factory,if,this,remote,resolver,null,in,set,remote,resolver,this,remote,resolver,try,skeleton,invoke,in,out,finally,try,in,close,is,to,use,close,catch,ioexception,ex,try,out,close,os,to,use,close,catch,ioexception,ex,finally,reset,thread,context,class,loader,original,class,loader
HessianExporter -> protected void doInvoke(HessianSkeleton skeleton, InputStream inputStream, OutputStream outputStream) 			throws Throwable;1477045587;Actually invoke the skeleton with the given streams._@param skeleton the skeleton to invoke_@param inputStream the request stream_@param outputStream the response stream_@throws Throwable if invocation failed;protected void doInvoke(HessianSkeleton skeleton, InputStream inputStream, OutputStream outputStream)_			throws Throwable {__		ClassLoader originalClassLoader = overrideThreadContextClassLoader()__		try {_			InputStream isToUse = inputStream__			OutputStream osToUse = outputStream___			if (this.debugLogger != null && this.debugLogger.isDebugEnabled()) {_				PrintWriter debugWriter = new PrintWriter(new CommonsLogWriter(this.debugLogger))__				@SuppressWarnings("resource")_				HessianDebugInputStream dis = new HessianDebugInputStream(inputStream, debugWriter)__				@SuppressWarnings("resource")_				HessianDebugOutputStream dos = new HessianDebugOutputStream(outputStream, debugWriter)__				dis.startTop2()__				dos.startTop2()__				isToUse = dis__				osToUse = dos__			}__			if (!isToUse.markSupported()) {_				isToUse = new BufferedInputStream(isToUse)__				isToUse.mark(1)__			}__			int code = isToUse.read()__			int major__			int minor___			AbstractHessianInput in__			AbstractHessianOutput out___			if (code == 'H') {_				_				major = isToUse.read()__				minor = isToUse.read()__				if (major != 0x02) {_					throw new IOException("Version " + major + '.' + minor + " is not understood")__				}_				in = new Hessian2Input(isToUse)__				out = new Hessian2Output(osToUse)__				in.readCall()__			}_			else if (code == 'C') {_				_				isToUse.reset()__				in = new Hessian2Input(isToUse)__				out = new Hessian2Output(osToUse)__				in.readCall()__			}_			else if (code == 'c') {_				_				major = isToUse.read()__				minor = isToUse.read()__				in = new HessianInput(isToUse)__				if (major >= 2) {_					out = new Hessian2Output(osToUse)__				}_				else {_					out = new HessianOutput(osToUse)__				}_			}_			else {_				throw new IOException("Expected 'H'/'C' (Hessian 2.0) or 'c' (Hessian 1.0) in hessian input at " + code)__			}__			if (this.serializerFactory != null) {_				in.setSerializerFactory(this.serializerFactory)__				out.setSerializerFactory(this.serializerFactory)__			}_			if (this.remoteResolver != null) {_				in.setRemoteResolver(this.remoteResolver)__			}__			try {_				skeleton.invoke(in, out)__			}_			finally {_				try {_					in.close()__					isToUse.close()__				}_				catch (IOException ex) {_					_				}_				try {_					out.close()__					osToUse.close()__				}_				catch (IOException ex) {_					_				}_			}_		}_		finally {_			resetThreadContextClassLoader(originalClassLoader)__		}_	};actually,invoke,the,skeleton,with,the,given,streams,param,skeleton,the,skeleton,to,invoke,param,input,stream,the,request,stream,param,output,stream,the,response,stream,throws,throwable,if,invocation,failed;protected,void,do,invoke,hessian,skeleton,skeleton,input,stream,input,stream,output,stream,output,stream,throws,throwable,class,loader,original,class,loader,override,thread,context,class,loader,try,input,stream,is,to,use,input,stream,output,stream,os,to,use,output,stream,if,this,debug,logger,null,this,debug,logger,is,debug,enabled,print,writer,debug,writer,new,print,writer,new,commons,log,writer,this,debug,logger,suppress,warnings,resource,hessian,debug,input,stream,dis,new,hessian,debug,input,stream,input,stream,debug,writer,suppress,warnings,resource,hessian,debug,output,stream,dos,new,hessian,debug,output,stream,output,stream,debug,writer,dis,start,top2,dos,start,top2,is,to,use,dis,os,to,use,dos,if,is,to,use,mark,supported,is,to,use,new,buffered,input,stream,is,to,use,is,to,use,mark,1,int,code,is,to,use,read,int,major,int,minor,abstract,hessian,input,in,abstract,hessian,output,out,if,code,h,major,is,to,use,read,minor,is,to,use,read,if,major,0x02,throw,new,ioexception,version,major,minor,is,not,understood,in,new,hessian2input,is,to,use,out,new,hessian2output,os,to,use,in,read,call,else,if,code,c,is,to,use,reset,in,new,hessian2input,is,to,use,out,new,hessian2output,os,to,use,in,read,call,else,if,code,c,major,is,to,use,read,minor,is,to,use,read,in,new,hessian,input,is,to,use,if,major,2,out,new,hessian2output,os,to,use,else,out,new,hessian,output,os,to,use,else,throw,new,ioexception,expected,h,c,hessian,2,0,or,c,hessian,1,0,in,hessian,input,at,code,if,this,serializer,factory,null,in,set,serializer,factory,this,serializer,factory,out,set,serializer,factory,this,serializer,factory,if,this,remote,resolver,null,in,set,remote,resolver,this,remote,resolver,try,skeleton,invoke,in,out,finally,try,in,close,is,to,use,close,catch,ioexception,ex,try,out,close,os,to,use,close,catch,ioexception,ex,finally,reset,thread,context,class,loader,original,class,loader
HessianExporter -> protected void doInvoke(HessianSkeleton skeleton, InputStream inputStream, OutputStream outputStream) 			throws Throwable;1496837955;Actually invoke the skeleton with the given streams._@param skeleton the skeleton to invoke_@param inputStream the request stream_@param outputStream the response stream_@throws Throwable if invocation failed;protected void doInvoke(HessianSkeleton skeleton, InputStream inputStream, OutputStream outputStream)_			throws Throwable {__		ClassLoader originalClassLoader = overrideThreadContextClassLoader()__		try {_			InputStream isToUse = inputStream__			OutputStream osToUse = outputStream___			if (this.debugLogger != null && this.debugLogger.isDebugEnabled()) {_				PrintWriter debugWriter = new PrintWriter(new CommonsLogWriter(this.debugLogger))__				@SuppressWarnings("resource")_				HessianDebugInputStream dis = new HessianDebugInputStream(inputStream, debugWriter)__				@SuppressWarnings("resource")_				HessianDebugOutputStream dos = new HessianDebugOutputStream(outputStream, debugWriter)__				dis.startTop2()__				dos.startTop2()__				isToUse = dis__				osToUse = dos__			}__			if (!isToUse.markSupported()) {_				isToUse = new BufferedInputStream(isToUse)__				isToUse.mark(1)__			}__			int code = isToUse.read()__			int major__			int minor___			AbstractHessianInput in__			AbstractHessianOutput out___			if (code == 'H') {_				_				major = isToUse.read()__				minor = isToUse.read()__				if (major != 0x02) {_					throw new IOException("Version " + major + '.' + minor + " is not understood")__				}_				in = new Hessian2Input(isToUse)__				out = new Hessian2Output(osToUse)__				in.readCall()__			}_			else if (code == 'C') {_				_				isToUse.reset()__				in = new Hessian2Input(isToUse)__				out = new Hessian2Output(osToUse)__				in.readCall()__			}_			else if (code == 'c') {_				_				major = isToUse.read()__				minor = isToUse.read()__				in = new HessianInput(isToUse)__				if (major >= 2) {_					out = new Hessian2Output(osToUse)__				}_				else {_					out = new HessianOutput(osToUse)__				}_			}_			else {_				throw new IOException("Expected 'H'/'C' (Hessian 2.0) or 'c' (Hessian 1.0) in hessian input at " + code)__			}__			if (this.serializerFactory != null) {_				in.setSerializerFactory(this.serializerFactory)__				out.setSerializerFactory(this.serializerFactory)__			}_			if (this.remoteResolver != null) {_				in.setRemoteResolver(this.remoteResolver)__			}__			try {_				skeleton.invoke(in, out)__			}_			finally {_				try {_					in.close()__					isToUse.close()__				}_				catch (IOException ex) {_					_				}_				try {_					out.close()__					osToUse.close()__				}_				catch (IOException ex) {_					_				}_			}_		}_		finally {_			resetThreadContextClassLoader(originalClassLoader)__		}_	};actually,invoke,the,skeleton,with,the,given,streams,param,skeleton,the,skeleton,to,invoke,param,input,stream,the,request,stream,param,output,stream,the,response,stream,throws,throwable,if,invocation,failed;protected,void,do,invoke,hessian,skeleton,skeleton,input,stream,input,stream,output,stream,output,stream,throws,throwable,class,loader,original,class,loader,override,thread,context,class,loader,try,input,stream,is,to,use,input,stream,output,stream,os,to,use,output,stream,if,this,debug,logger,null,this,debug,logger,is,debug,enabled,print,writer,debug,writer,new,print,writer,new,commons,log,writer,this,debug,logger,suppress,warnings,resource,hessian,debug,input,stream,dis,new,hessian,debug,input,stream,input,stream,debug,writer,suppress,warnings,resource,hessian,debug,output,stream,dos,new,hessian,debug,output,stream,output,stream,debug,writer,dis,start,top2,dos,start,top2,is,to,use,dis,os,to,use,dos,if,is,to,use,mark,supported,is,to,use,new,buffered,input,stream,is,to,use,is,to,use,mark,1,int,code,is,to,use,read,int,major,int,minor,abstract,hessian,input,in,abstract,hessian,output,out,if,code,h,major,is,to,use,read,minor,is,to,use,read,if,major,0x02,throw,new,ioexception,version,major,minor,is,not,understood,in,new,hessian2input,is,to,use,out,new,hessian2output,os,to,use,in,read,call,else,if,code,c,is,to,use,reset,in,new,hessian2input,is,to,use,out,new,hessian2output,os,to,use,in,read,call,else,if,code,c,major,is,to,use,read,minor,is,to,use,read,in,new,hessian,input,is,to,use,if,major,2,out,new,hessian2output,os,to,use,else,out,new,hessian,output,os,to,use,else,throw,new,ioexception,expected,h,c,hessian,2,0,or,c,hessian,1,0,in,hessian,input,at,code,if,this,serializer,factory,null,in,set,serializer,factory,this,serializer,factory,out,set,serializer,factory,this,serializer,factory,if,this,remote,resolver,null,in,set,remote,resolver,this,remote,resolver,try,skeleton,invoke,in,out,finally,try,in,close,is,to,use,close,catch,ioexception,ex,try,out,close,os,to,use,close,catch,ioexception,ex,finally,reset,thread,context,class,loader,original,class,loader
HessianExporter -> protected void doInvoke(HessianSkeleton skeleton, InputStream inputStream, OutputStream outputStream) 			throws Throwable;1498780456;Actually invoke the skeleton with the given streams._@param skeleton the skeleton to invoke_@param inputStream the request stream_@param outputStream the response stream_@throws Throwable if invocation failed;protected void doInvoke(HessianSkeleton skeleton, InputStream inputStream, OutputStream outputStream)_			throws Throwable {__		ClassLoader originalClassLoader = overrideThreadContextClassLoader()__		try {_			InputStream isToUse = inputStream__			OutputStream osToUse = outputStream___			if (this.debugLogger != null && this.debugLogger.isDebugEnabled()) {_				PrintWriter debugWriter = new PrintWriter(new CommonsLogWriter(this.debugLogger))__				@SuppressWarnings("resource")_				HessianDebugInputStream dis = new HessianDebugInputStream(inputStream, debugWriter)__				@SuppressWarnings("resource")_				HessianDebugOutputStream dos = new HessianDebugOutputStream(outputStream, debugWriter)__				dis.startTop2()__				dos.startTop2()__				isToUse = dis__				osToUse = dos__			}__			if (!isToUse.markSupported()) {_				isToUse = new BufferedInputStream(isToUse)__				isToUse.mark(1)__			}__			int code = isToUse.read()__			int major__			int minor___			AbstractHessianInput in__			AbstractHessianOutput out___			if (code == 'H') {_				_				major = isToUse.read()__				minor = isToUse.read()__				if (major != 0x02) {_					throw new IOException("Version " + major + '.' + minor + " is not understood")__				}_				in = new Hessian2Input(isToUse)__				out = new Hessian2Output(osToUse)__				in.readCall()__			}_			else if (code == 'C') {_				_				isToUse.reset()__				in = new Hessian2Input(isToUse)__				out = new Hessian2Output(osToUse)__				in.readCall()__			}_			else if (code == 'c') {_				_				major = isToUse.read()__				minor = isToUse.read()__				in = new HessianInput(isToUse)__				if (major >= 2) {_					out = new Hessian2Output(osToUse)__				}_				else {_					out = new HessianOutput(osToUse)__				}_			}_			else {_				throw new IOException("Expected 'H'/'C' (Hessian 2.0) or 'c' (Hessian 1.0) in hessian input at " + code)__			}__			in.setSerializerFactory(this.serializerFactory)__			out.setSerializerFactory(this.serializerFactory)__			if (this.remoteResolver != null) {_				in.setRemoteResolver(this.remoteResolver)__			}__			try {_				skeleton.invoke(in, out)__			}_			finally {_				try {_					in.close()__					isToUse.close()__				}_				catch (IOException ex) {_					_				}_				try {_					out.close()__					osToUse.close()__				}_				catch (IOException ex) {_					_				}_			}_		}_		finally {_			resetThreadContextClassLoader(originalClassLoader)__		}_	};actually,invoke,the,skeleton,with,the,given,streams,param,skeleton,the,skeleton,to,invoke,param,input,stream,the,request,stream,param,output,stream,the,response,stream,throws,throwable,if,invocation,failed;protected,void,do,invoke,hessian,skeleton,skeleton,input,stream,input,stream,output,stream,output,stream,throws,throwable,class,loader,original,class,loader,override,thread,context,class,loader,try,input,stream,is,to,use,input,stream,output,stream,os,to,use,output,stream,if,this,debug,logger,null,this,debug,logger,is,debug,enabled,print,writer,debug,writer,new,print,writer,new,commons,log,writer,this,debug,logger,suppress,warnings,resource,hessian,debug,input,stream,dis,new,hessian,debug,input,stream,input,stream,debug,writer,suppress,warnings,resource,hessian,debug,output,stream,dos,new,hessian,debug,output,stream,output,stream,debug,writer,dis,start,top2,dos,start,top2,is,to,use,dis,os,to,use,dos,if,is,to,use,mark,supported,is,to,use,new,buffered,input,stream,is,to,use,is,to,use,mark,1,int,code,is,to,use,read,int,major,int,minor,abstract,hessian,input,in,abstract,hessian,output,out,if,code,h,major,is,to,use,read,minor,is,to,use,read,if,major,0x02,throw,new,ioexception,version,major,minor,is,not,understood,in,new,hessian2input,is,to,use,out,new,hessian2output,os,to,use,in,read,call,else,if,code,c,is,to,use,reset,in,new,hessian2input,is,to,use,out,new,hessian2output,os,to,use,in,read,call,else,if,code,c,major,is,to,use,read,minor,is,to,use,read,in,new,hessian,input,is,to,use,if,major,2,out,new,hessian2output,os,to,use,else,out,new,hessian,output,os,to,use,else,throw,new,ioexception,expected,h,c,hessian,2,0,or,c,hessian,1,0,in,hessian,input,at,code,in,set,serializer,factory,this,serializer,factory,out,set,serializer,factory,this,serializer,factory,if,this,remote,resolver,null,in,set,remote,resolver,this,remote,resolver,try,skeleton,invoke,in,out,finally,try,in,close,is,to,use,close,catch,ioexception,ex,try,out,close,os,to,use,close,catch,ioexception,ex,finally,reset,thread,context,class,loader,original,class,loader
HessianExporter -> protected void doInvoke(HessianSkeleton skeleton, InputStream inputStream, OutputStream outputStream) 			throws Throwable;1518167602;Actually invoke the skeleton with the given streams._@param skeleton the skeleton to invoke_@param inputStream the request stream_@param outputStream the response stream_@throws Throwable if invocation failed;protected void doInvoke(HessianSkeleton skeleton, InputStream inputStream, OutputStream outputStream)_			throws Throwable {__		ClassLoader originalClassLoader = overrideThreadContextClassLoader()__		try {_			InputStream isToUse = inputStream__			OutputStream osToUse = outputStream___			if (this.debugLogger != null && this.debugLogger.isDebugEnabled()) {_				try (PrintWriter debugWriter = new PrintWriter(new CommonsLogWriter(this.debugLogger))){_					@SuppressWarnings("resource")_					HessianDebugInputStream dis = new HessianDebugInputStream(inputStream, debugWriter)__					@SuppressWarnings("resource")_					HessianDebugOutputStream dos = new HessianDebugOutputStream(outputStream, debugWriter)__					dis.startTop2()__					dos.startTop2()__					isToUse = dis__					osToUse = dos__				}_			}__			if (!isToUse.markSupported()) {_				isToUse = new BufferedInputStream(isToUse)__				isToUse.mark(1)__			}__			int code = isToUse.read()__			int major__			int minor___			AbstractHessianInput in__			AbstractHessianOutput out___			if (code == 'H') {_				_				major = isToUse.read()__				minor = isToUse.read()__				if (major != 0x02) {_					throw new IOException("Version " + major + '.' + minor + " is not understood")__				}_				in = new Hessian2Input(isToUse)__				out = new Hessian2Output(osToUse)__				in.readCall()__			}_			else if (code == 'C') {_				_				isToUse.reset()__				in = new Hessian2Input(isToUse)__				out = new Hessian2Output(osToUse)__				in.readCall()__			}_			else if (code == 'c') {_				_				major = isToUse.read()__				minor = isToUse.read()__				in = new HessianInput(isToUse)__				if (major >= 2) {_					out = new Hessian2Output(osToUse)__				}_				else {_					out = new HessianOutput(osToUse)__				}_			}_			else {_				throw new IOException("Expected 'H'/'C' (Hessian 2.0) or 'c' (Hessian 1.0) in hessian input at " + code)__			}__			in.setSerializerFactory(this.serializerFactory)__			out.setSerializerFactory(this.serializerFactory)__			if (this.remoteResolver != null) {_				in.setRemoteResolver(this.remoteResolver)__			}__			try {_				skeleton.invoke(in, out)__			}_			finally {_				try {_					in.close()__					isToUse.close()__				}_				catch (IOException ex) {_					_				}_				try {_					out.close()__					osToUse.close()__				}_				catch (IOException ex) {_					_				}_			}_		}_		finally {_			resetThreadContextClassLoader(originalClassLoader)__		}_	};actually,invoke,the,skeleton,with,the,given,streams,param,skeleton,the,skeleton,to,invoke,param,input,stream,the,request,stream,param,output,stream,the,response,stream,throws,throwable,if,invocation,failed;protected,void,do,invoke,hessian,skeleton,skeleton,input,stream,input,stream,output,stream,output,stream,throws,throwable,class,loader,original,class,loader,override,thread,context,class,loader,try,input,stream,is,to,use,input,stream,output,stream,os,to,use,output,stream,if,this,debug,logger,null,this,debug,logger,is,debug,enabled,try,print,writer,debug,writer,new,print,writer,new,commons,log,writer,this,debug,logger,suppress,warnings,resource,hessian,debug,input,stream,dis,new,hessian,debug,input,stream,input,stream,debug,writer,suppress,warnings,resource,hessian,debug,output,stream,dos,new,hessian,debug,output,stream,output,stream,debug,writer,dis,start,top2,dos,start,top2,is,to,use,dis,os,to,use,dos,if,is,to,use,mark,supported,is,to,use,new,buffered,input,stream,is,to,use,is,to,use,mark,1,int,code,is,to,use,read,int,major,int,minor,abstract,hessian,input,in,abstract,hessian,output,out,if,code,h,major,is,to,use,read,minor,is,to,use,read,if,major,0x02,throw,new,ioexception,version,major,minor,is,not,understood,in,new,hessian2input,is,to,use,out,new,hessian2output,os,to,use,in,read,call,else,if,code,c,is,to,use,reset,in,new,hessian2input,is,to,use,out,new,hessian2output,os,to,use,in,read,call,else,if,code,c,major,is,to,use,read,minor,is,to,use,read,in,new,hessian,input,is,to,use,if,major,2,out,new,hessian2output,os,to,use,else,out,new,hessian,output,os,to,use,else,throw,new,ioexception,expected,h,c,hessian,2,0,or,c,hessian,1,0,in,hessian,input,at,code,in,set,serializer,factory,this,serializer,factory,out,set,serializer,factory,this,serializer,factory,if,this,remote,resolver,null,in,set,remote,resolver,this,remote,resolver,try,skeleton,invoke,in,out,finally,try,in,close,is,to,use,close,catch,ioexception,ex,try,out,close,os,to,use,close,catch,ioexception,ex,finally,reset,thread,context,class,loader,original,class,loader
HessianExporter -> protected void doInvoke(HessianSkeleton skeleton, InputStream inputStream, OutputStream outputStream) 			throws Throwable;1518167818;Actually invoke the skeleton with the given streams._@param skeleton the skeleton to invoke_@param inputStream the request stream_@param outputStream the response stream_@throws Throwable if invocation failed;protected void doInvoke(HessianSkeleton skeleton, InputStream inputStream, OutputStream outputStream)_			throws Throwable {__		ClassLoader originalClassLoader = overrideThreadContextClassLoader()__		try {_			InputStream isToUse = inputStream__			OutputStream osToUse = outputStream___			if (this.debugLogger != null && this.debugLogger.isDebugEnabled()) {_				try (PrintWriter debugWriter = new PrintWriter(new CommonsLogWriter(this.debugLogger))){_					@SuppressWarnings("resource")_					HessianDebugInputStream dis = new HessianDebugInputStream(inputStream, debugWriter)__					@SuppressWarnings("resource")_					HessianDebugOutputStream dos = new HessianDebugOutputStream(outputStream, debugWriter)__					dis.startTop2()__					dos.startTop2()__					isToUse = dis__					osToUse = dos__				}_			}__			if (!isToUse.markSupported()) {_				isToUse = new BufferedInputStream(isToUse)__				isToUse.mark(1)__			}__			int code = isToUse.read()__			int major__			int minor___			AbstractHessianInput in__			AbstractHessianOutput out___			if (code == 'H') {_				_				major = isToUse.read()__				minor = isToUse.read()__				if (major != 0x02) {_					throw new IOException("Version " + major + '.' + minor + " is not understood")__				}_				in = new Hessian2Input(isToUse)__				out = new Hessian2Output(osToUse)__				in.readCall()__			}_			else if (code == 'C') {_				_				isToUse.reset()__				in = new Hessian2Input(isToUse)__				out = new Hessian2Output(osToUse)__				in.readCall()__			}_			else if (code == 'c') {_				_				major = isToUse.read()__				minor = isToUse.read()__				in = new HessianInput(isToUse)__				if (major >= 2) {_					out = new Hessian2Output(osToUse)__				}_				else {_					out = new HessianOutput(osToUse)__				}_			}_			else {_				throw new IOException("Expected 'H'/'C' (Hessian 2.0) or 'c' (Hessian 1.0) in hessian input at " + code)__			}__			in.setSerializerFactory(this.serializerFactory)__			out.setSerializerFactory(this.serializerFactory)__			if (this.remoteResolver != null) {_				in.setRemoteResolver(this.remoteResolver)__			}__			try {_				skeleton.invoke(in, out)__			}_			finally {_				try {_					in.close()__					isToUse.close()__				}_				catch (IOException ex) {_					_				}_				try {_					out.close()__					osToUse.close()__				}_				catch (IOException ex) {_					_				}_			}_		}_		finally {_			resetThreadContextClassLoader(originalClassLoader)__		}_	};actually,invoke,the,skeleton,with,the,given,streams,param,skeleton,the,skeleton,to,invoke,param,input,stream,the,request,stream,param,output,stream,the,response,stream,throws,throwable,if,invocation,failed;protected,void,do,invoke,hessian,skeleton,skeleton,input,stream,input,stream,output,stream,output,stream,throws,throwable,class,loader,original,class,loader,override,thread,context,class,loader,try,input,stream,is,to,use,input,stream,output,stream,os,to,use,output,stream,if,this,debug,logger,null,this,debug,logger,is,debug,enabled,try,print,writer,debug,writer,new,print,writer,new,commons,log,writer,this,debug,logger,suppress,warnings,resource,hessian,debug,input,stream,dis,new,hessian,debug,input,stream,input,stream,debug,writer,suppress,warnings,resource,hessian,debug,output,stream,dos,new,hessian,debug,output,stream,output,stream,debug,writer,dis,start,top2,dos,start,top2,is,to,use,dis,os,to,use,dos,if,is,to,use,mark,supported,is,to,use,new,buffered,input,stream,is,to,use,is,to,use,mark,1,int,code,is,to,use,read,int,major,int,minor,abstract,hessian,input,in,abstract,hessian,output,out,if,code,h,major,is,to,use,read,minor,is,to,use,read,if,major,0x02,throw,new,ioexception,version,major,minor,is,not,understood,in,new,hessian2input,is,to,use,out,new,hessian2output,os,to,use,in,read,call,else,if,code,c,is,to,use,reset,in,new,hessian2input,is,to,use,out,new,hessian2output,os,to,use,in,read,call,else,if,code,c,major,is,to,use,read,minor,is,to,use,read,in,new,hessian,input,is,to,use,if,major,2,out,new,hessian2output,os,to,use,else,out,new,hessian,output,os,to,use,else,throw,new,ioexception,expected,h,c,hessian,2,0,or,c,hessian,1,0,in,hessian,input,at,code,in,set,serializer,factory,this,serializer,factory,out,set,serializer,factory,this,serializer,factory,if,this,remote,resolver,null,in,set,remote,resolver,this,remote,resolver,try,skeleton,invoke,in,out,finally,try,in,close,is,to,use,close,catch,ioexception,ex,try,out,close,os,to,use,close,catch,ioexception,ex,finally,reset,thread,context,class,loader,original,class,loader
HessianExporter -> protected void doInvoke(HessianSkeleton skeleton, InputStream inputStream, OutputStream outputStream) 			throws Throwable;1530174524;Actually invoke the skeleton with the given streams._@param skeleton the skeleton to invoke_@param inputStream the request stream_@param outputStream the response stream_@throws Throwable if invocation failed;protected void doInvoke(HessianSkeleton skeleton, InputStream inputStream, OutputStream outputStream)_			throws Throwable {__		ClassLoader originalClassLoader = overrideThreadContextClassLoader()__		try {_			InputStream isToUse = inputStream__			OutputStream osToUse = outputStream___			if (this.debugLogger != null && this.debugLogger.isDebugEnabled()) {_				try (PrintWriter debugWriter = new PrintWriter(new CommonsLogWriter(this.debugLogger))){_					@SuppressWarnings("resource")_					HessianDebugInputStream dis = new HessianDebugInputStream(inputStream, debugWriter)__					@SuppressWarnings("resource")_					HessianDebugOutputStream dos = new HessianDebugOutputStream(outputStream, debugWriter)__					dis.startTop2()__					dos.startTop2()__					isToUse = dis__					osToUse = dos__				}_			}__			if (!isToUse.markSupported()) {_				isToUse = new BufferedInputStream(isToUse)__				isToUse.mark(1)__			}__			int code = isToUse.read()__			int major__			int minor___			AbstractHessianInput in__			AbstractHessianOutput out___			if (code == 'H') {_				_				major = isToUse.read()__				minor = isToUse.read()__				if (major != 0x02) {_					throw new IOException("Version " + major + '.' + minor + " is not understood")__				}_				in = new Hessian2Input(isToUse)__				out = new Hessian2Output(osToUse)__				in.readCall()__			}_			else if (code == 'C') {_				_				isToUse.reset()__				in = new Hessian2Input(isToUse)__				out = new Hessian2Output(osToUse)__				in.readCall()__			}_			else if (code == 'c') {_				_				major = isToUse.read()__				minor = isToUse.read()__				in = new HessianInput(isToUse)__				if (major >= 2) {_					out = new Hessian2Output(osToUse)__				}_				else {_					out = new HessianOutput(osToUse)__				}_			}_			else {_				throw new IOException("Expected 'H'/'C' (Hessian 2.0) or 'c' (Hessian 1.0) in hessian input at " + code)__			}__			in.setSerializerFactory(this.serializerFactory)__			out.setSerializerFactory(this.serializerFactory)__			if (this.remoteResolver != null) {_				in.setRemoteResolver(this.remoteResolver)__			}__			try {_				skeleton.invoke(in, out)__			}_			finally {_				try {_					in.close()__					isToUse.close()__				}_				catch (IOException ex) {_					_				}_				try {_					out.close()__					osToUse.close()__				}_				catch (IOException ex) {_					_				}_			}_		}_		finally {_			resetThreadContextClassLoader(originalClassLoader)__		}_	};actually,invoke,the,skeleton,with,the,given,streams,param,skeleton,the,skeleton,to,invoke,param,input,stream,the,request,stream,param,output,stream,the,response,stream,throws,throwable,if,invocation,failed;protected,void,do,invoke,hessian,skeleton,skeleton,input,stream,input,stream,output,stream,output,stream,throws,throwable,class,loader,original,class,loader,override,thread,context,class,loader,try,input,stream,is,to,use,input,stream,output,stream,os,to,use,output,stream,if,this,debug,logger,null,this,debug,logger,is,debug,enabled,try,print,writer,debug,writer,new,print,writer,new,commons,log,writer,this,debug,logger,suppress,warnings,resource,hessian,debug,input,stream,dis,new,hessian,debug,input,stream,input,stream,debug,writer,suppress,warnings,resource,hessian,debug,output,stream,dos,new,hessian,debug,output,stream,output,stream,debug,writer,dis,start,top2,dos,start,top2,is,to,use,dis,os,to,use,dos,if,is,to,use,mark,supported,is,to,use,new,buffered,input,stream,is,to,use,is,to,use,mark,1,int,code,is,to,use,read,int,major,int,minor,abstract,hessian,input,in,abstract,hessian,output,out,if,code,h,major,is,to,use,read,minor,is,to,use,read,if,major,0x02,throw,new,ioexception,version,major,minor,is,not,understood,in,new,hessian2input,is,to,use,out,new,hessian2output,os,to,use,in,read,call,else,if,code,c,is,to,use,reset,in,new,hessian2input,is,to,use,out,new,hessian2output,os,to,use,in,read,call,else,if,code,c,major,is,to,use,read,minor,is,to,use,read,in,new,hessian,input,is,to,use,if,major,2,out,new,hessian2output,os,to,use,else,out,new,hessian,output,os,to,use,else,throw,new,ioexception,expected,h,c,hessian,2,0,or,c,hessian,1,0,in,hessian,input,at,code,in,set,serializer,factory,this,serializer,factory,out,set,serializer,factory,this,serializer,factory,if,this,remote,resolver,null,in,set,remote,resolver,this,remote,resolver,try,skeleton,invoke,in,out,finally,try,in,close,is,to,use,close,catch,ioexception,ex,try,out,close,os,to,use,close,catch,ioexception,ex,finally,reset,thread,context,class,loader,original,class,loader
HessianExporter -> protected void doInvoke(HessianSkeleton skeleton, InputStream inputStream, OutputStream outputStream) 			throws Throwable;1533666953;Actually invoke the skeleton with the given streams._@param skeleton the skeleton to invoke_@param inputStream the request stream_@param outputStream the response stream_@throws Throwable if invocation failed;protected void doInvoke(HessianSkeleton skeleton, InputStream inputStream, OutputStream outputStream)_			throws Throwable {__		ClassLoader originalClassLoader = overrideThreadContextClassLoader()__		try {_			InputStream isToUse = inputStream__			OutputStream osToUse = outputStream___			if (this.debugLogger != null && this.debugLogger.isDebugEnabled()) {_				try (PrintWriter debugWriter = new PrintWriter(new CommonsLogWriter(this.debugLogger))){_					@SuppressWarnings("resource")_					HessianDebugInputStream dis = new HessianDebugInputStream(inputStream, debugWriter)__					@SuppressWarnings("resource")_					HessianDebugOutputStream dos = new HessianDebugOutputStream(outputStream, debugWriter)__					dis.startTop2()__					dos.startTop2()__					isToUse = dis__					osToUse = dos__				}_			}__			if (!isToUse.markSupported()) {_				isToUse = new BufferedInputStream(isToUse)__				isToUse.mark(1)__			}__			int code = isToUse.read()__			int major__			int minor___			AbstractHessianInput in__			AbstractHessianOutput out___			if (code == 'H') {_				_				major = isToUse.read()__				minor = isToUse.read()__				if (major != 0x02) {_					throw new IOException("Version " + major + '.' + minor + " is not understood")__				}_				in = new Hessian2Input(isToUse)__				out = new Hessian2Output(osToUse)__				in.readCall()__			}_			else if (code == 'C') {_				_				isToUse.reset()__				in = new Hessian2Input(isToUse)__				out = new Hessian2Output(osToUse)__				in.readCall()__			}_			else if (code == 'c') {_				_				major = isToUse.read()__				minor = isToUse.read()__				in = new HessianInput(isToUse)__				if (major >= 2) {_					out = new Hessian2Output(osToUse)__				}_				else {_					out = new HessianOutput(osToUse)__				}_			}_			else {_				throw new IOException("Expected 'H'/'C' (Hessian 2.0) or 'c' (Hessian 1.0) in hessian input at " + code)__			}__			in.setSerializerFactory(this.serializerFactory)__			out.setSerializerFactory(this.serializerFactory)__			if (this.remoteResolver != null) {_				in.setRemoteResolver(this.remoteResolver)__			}__			try {_				skeleton.invoke(in, out)__			}_			finally {_				try {_					in.close()__					isToUse.close()__				}_				catch (IOException ex) {_					_				}_				try {_					out.close()__					osToUse.close()__				}_				catch (IOException ex) {_					_				}_			}_		}_		finally {_			resetThreadContextClassLoader(originalClassLoader)__		}_	};actually,invoke,the,skeleton,with,the,given,streams,param,skeleton,the,skeleton,to,invoke,param,input,stream,the,request,stream,param,output,stream,the,response,stream,throws,throwable,if,invocation,failed;protected,void,do,invoke,hessian,skeleton,skeleton,input,stream,input,stream,output,stream,output,stream,throws,throwable,class,loader,original,class,loader,override,thread,context,class,loader,try,input,stream,is,to,use,input,stream,output,stream,os,to,use,output,stream,if,this,debug,logger,null,this,debug,logger,is,debug,enabled,try,print,writer,debug,writer,new,print,writer,new,commons,log,writer,this,debug,logger,suppress,warnings,resource,hessian,debug,input,stream,dis,new,hessian,debug,input,stream,input,stream,debug,writer,suppress,warnings,resource,hessian,debug,output,stream,dos,new,hessian,debug,output,stream,output,stream,debug,writer,dis,start,top2,dos,start,top2,is,to,use,dis,os,to,use,dos,if,is,to,use,mark,supported,is,to,use,new,buffered,input,stream,is,to,use,is,to,use,mark,1,int,code,is,to,use,read,int,major,int,minor,abstract,hessian,input,in,abstract,hessian,output,out,if,code,h,major,is,to,use,read,minor,is,to,use,read,if,major,0x02,throw,new,ioexception,version,major,minor,is,not,understood,in,new,hessian2input,is,to,use,out,new,hessian2output,os,to,use,in,read,call,else,if,code,c,is,to,use,reset,in,new,hessian2input,is,to,use,out,new,hessian2output,os,to,use,in,read,call,else,if,code,c,major,is,to,use,read,minor,is,to,use,read,in,new,hessian,input,is,to,use,if,major,2,out,new,hessian2output,os,to,use,else,out,new,hessian,output,os,to,use,else,throw,new,ioexception,expected,h,c,hessian,2,0,or,c,hessian,1,0,in,hessian,input,at,code,in,set,serializer,factory,this,serializer,factory,out,set,serializer,factory,this,serializer,factory,if,this,remote,resolver,null,in,set,remote,resolver,this,remote,resolver,try,skeleton,invoke,in,out,finally,try,in,close,is,to,use,close,catch,ioexception,ex,try,out,close,os,to,use,close,catch,ioexception,ex,finally,reset,thread,context,class,loader,original,class,loader
HessianExporter -> public void setSendCollectionType(boolean sendCollectionType);1328020251;Set whether to send the Java collection type for each serialized_collection. Default is "true".;public void setSendCollectionType(boolean sendCollectionType) {_		this.serializerFactory.setSendCollectionType(sendCollectionType)__	};set,whether,to,send,the,java,collection,type,for,each,serialized,collection,default,is,true;public,void,set,send,collection,type,boolean,send,collection,type,this,serializer,factory,set,send,collection,type,send,collection,type
HessianExporter -> public void setSendCollectionType(boolean sendCollectionType);1356735495;Set whether to send the Java collection type for each serialized_collection. Default is "true".;public void setSendCollectionType(boolean sendCollectionType) {_		this.serializerFactory.setSendCollectionType(sendCollectionType)__	};set,whether,to,send,the,java,collection,type,for,each,serialized,collection,default,is,true;public,void,set,send,collection,type,boolean,send,collection,type,this,serializer,factory,set,send,collection,type,send,collection,type
HessianExporter -> public void setSendCollectionType(boolean sendCollectionType);1357119239;Set whether to send the Java collection type for each serialized_collection. Default is "true".;public void setSendCollectionType(boolean sendCollectionType) {_		this.serializerFactory.setSendCollectionType(sendCollectionType)__	};set,whether,to,send,the,java,collection,type,for,each,serialized,collection,default,is,true;public,void,set,send,collection,type,boolean,send,collection,type,this,serializer,factory,set,send,collection,type,send,collection,type
HessianExporter -> public void setSendCollectionType(boolean sendCollectionType);1367327603;Set whether to send the Java collection type for each serialized_collection. Default is "true".;public void setSendCollectionType(boolean sendCollectionType) {_		this.serializerFactory.setSendCollectionType(sendCollectionType)__	};set,whether,to,send,the,java,collection,type,for,each,serialized,collection,default,is,true;public,void,set,send,collection,type,boolean,send,collection,type,this,serializer,factory,set,send,collection,type,send,collection,type
HessianExporter -> public void setSendCollectionType(boolean sendCollectionType);1368482696;Set whether to send the Java collection type for each serialized_collection. Default is "true".;public void setSendCollectionType(boolean sendCollectionType) {_		this.serializerFactory.setSendCollectionType(sendCollectionType)__	};set,whether,to,send,the,java,collection,type,for,each,serialized,collection,default,is,true;public,void,set,send,collection,type,boolean,send,collection,type,this,serializer,factory,set,send,collection,type,send,collection,type
HessianExporter -> public void setSendCollectionType(boolean sendCollectionType);1385412762;Set whether to send the Java collection type for each serialized_collection. Default is "true".;public void setSendCollectionType(boolean sendCollectionType) {_		this.serializerFactory.setSendCollectionType(sendCollectionType)__	};set,whether,to,send,the,java,collection,type,for,each,serialized,collection,default,is,true;public,void,set,send,collection,type,boolean,send,collection,type,this,serializer,factory,set,send,collection,type,send,collection,type
HessianExporter -> public void setSendCollectionType(boolean sendCollectionType);1413848647;Set whether to send the Java collection type for each serialized_collection. Default is "true".;public void setSendCollectionType(boolean sendCollectionType) {_		this.serializerFactory.setSendCollectionType(sendCollectionType)__	};set,whether,to,send,the,java,collection,type,for,each,serialized,collection,default,is,true;public,void,set,send,collection,type,boolean,send,collection,type,this,serializer,factory,set,send,collection,type,send,collection,type
HessianExporter -> public void setSendCollectionType(boolean sendCollectionType);1477045587;Set whether to send the Java collection type for each serialized_collection. Default is "true".;public void setSendCollectionType(boolean sendCollectionType) {_		this.serializerFactory.setSendCollectionType(sendCollectionType)__	};set,whether,to,send,the,java,collection,type,for,each,serialized,collection,default,is,true;public,void,set,send,collection,type,boolean,send,collection,type,this,serializer,factory,set,send,collection,type,send,collection,type
HessianExporter -> public void setSendCollectionType(boolean sendCollectionType);1496837955;Set whether to send the Java collection type for each serialized_collection. Default is "true".;public void setSendCollectionType(boolean sendCollectionType) {_		this.serializerFactory.setSendCollectionType(sendCollectionType)__	};set,whether,to,send,the,java,collection,type,for,each,serialized,collection,default,is,true;public,void,set,send,collection,type,boolean,send,collection,type,this,serializer,factory,set,send,collection,type,send,collection,type
HessianExporter -> public void setSendCollectionType(boolean sendCollectionType);1498780456;Set whether to send the Java collection type for each serialized_collection. Default is "true".;public void setSendCollectionType(boolean sendCollectionType) {_		this.serializerFactory.setSendCollectionType(sendCollectionType)__	};set,whether,to,send,the,java,collection,type,for,each,serialized,collection,default,is,true;public,void,set,send,collection,type,boolean,send,collection,type,this,serializer,factory,set,send,collection,type,send,collection,type
HessianExporter -> public void setSendCollectionType(boolean sendCollectionType);1518167602;Set whether to send the Java collection type for each serialized_collection. Default is "true".;public void setSendCollectionType(boolean sendCollectionType) {_		this.serializerFactory.setSendCollectionType(sendCollectionType)__	};set,whether,to,send,the,java,collection,type,for,each,serialized,collection,default,is,true;public,void,set,send,collection,type,boolean,send,collection,type,this,serializer,factory,set,send,collection,type,send,collection,type
HessianExporter -> public void setSendCollectionType(boolean sendCollectionType);1518167818;Set whether to send the Java collection type for each serialized_collection. Default is "true".;public void setSendCollectionType(boolean sendCollectionType) {_		this.serializerFactory.setSendCollectionType(sendCollectionType)__	};set,whether,to,send,the,java,collection,type,for,each,serialized,collection,default,is,true;public,void,set,send,collection,type,boolean,send,collection,type,this,serializer,factory,set,send,collection,type,send,collection,type
HessianExporter -> public void setSendCollectionType(boolean sendCollectionType);1530174524;Set whether to send the Java collection type for each serialized_collection. Default is "true".;public void setSendCollectionType(boolean sendCollectionType) {_		this.serializerFactory.setSendCollectionType(sendCollectionType)__	};set,whether,to,send,the,java,collection,type,for,each,serialized,collection,default,is,true;public,void,set,send,collection,type,boolean,send,collection,type,this,serializer,factory,set,send,collection,type,send,collection,type
HessianExporter -> public void setSendCollectionType(boolean sendCollectionType);1533666953;Set whether to send the Java collection type for each serialized_collection. Default is "true".;public void setSendCollectionType(boolean sendCollectionType) {_		this.serializerFactory.setSendCollectionType(sendCollectionType)__	};set,whether,to,send,the,java,collection,type,for,each,serialized,collection,default,is,true;public,void,set,send,collection,type,boolean,send,collection,type,this,serializer,factory,set,send,collection,type,send,collection,type
HessianExporter -> public void setSerializerFactory(@Nullable SerializerFactory serializerFactory);1496837955;Specify the Hessian SerializerFactory to use._<p>This will typically be passed in as an inner bean definition_of type {@code com.caucho.hessian.io.SerializerFactory},_with custom bean property values applied.;public void setSerializerFactory(@Nullable SerializerFactory serializerFactory) {_		this.serializerFactory = (serializerFactory != null ? serializerFactory : new SerializerFactory())__	};specify,the,hessian,serializer,factory,to,use,p,this,will,typically,be,passed,in,as,an,inner,bean,definition,of,type,code,com,caucho,hessian,io,serializer,factory,with,custom,bean,property,values,applied;public,void,set,serializer,factory,nullable,serializer,factory,serializer,factory,this,serializer,factory,serializer,factory,null,serializer,factory,new,serializer,factory
HessianExporter -> public void setSerializerFactory(@Nullable SerializerFactory serializerFactory);1498780456;Specify the Hessian SerializerFactory to use._<p>This will typically be passed in as an inner bean definition_of type {@code com.caucho.hessian.io.SerializerFactory},_with custom bean property values applied.;public void setSerializerFactory(@Nullable SerializerFactory serializerFactory) {_		this.serializerFactory = (serializerFactory != null ? serializerFactory : new SerializerFactory())__	};specify,the,hessian,serializer,factory,to,use,p,this,will,typically,be,passed,in,as,an,inner,bean,definition,of,type,code,com,caucho,hessian,io,serializer,factory,with,custom,bean,property,values,applied;public,void,set,serializer,factory,nullable,serializer,factory,serializer,factory,this,serializer,factory,serializer,factory,null,serializer,factory,new,serializer,factory
HessianExporter -> public void setSerializerFactory(@Nullable SerializerFactory serializerFactory);1518167602;Specify the Hessian SerializerFactory to use._<p>This will typically be passed in as an inner bean definition_of type {@code com.caucho.hessian.io.SerializerFactory},_with custom bean property values applied.;public void setSerializerFactory(@Nullable SerializerFactory serializerFactory) {_		this.serializerFactory = (serializerFactory != null ? serializerFactory : new SerializerFactory())__	};specify,the,hessian,serializer,factory,to,use,p,this,will,typically,be,passed,in,as,an,inner,bean,definition,of,type,code,com,caucho,hessian,io,serializer,factory,with,custom,bean,property,values,applied;public,void,set,serializer,factory,nullable,serializer,factory,serializer,factory,this,serializer,factory,serializer,factory,null,serializer,factory,new,serializer,factory
HessianExporter -> public void setSerializerFactory(@Nullable SerializerFactory serializerFactory);1518167818;Specify the Hessian SerializerFactory to use._<p>This will typically be passed in as an inner bean definition_of type {@code com.caucho.hessian.io.SerializerFactory},_with custom bean property values applied.;public void setSerializerFactory(@Nullable SerializerFactory serializerFactory) {_		this.serializerFactory = (serializerFactory != null ? serializerFactory : new SerializerFactory())__	};specify,the,hessian,serializer,factory,to,use,p,this,will,typically,be,passed,in,as,an,inner,bean,definition,of,type,code,com,caucho,hessian,io,serializer,factory,with,custom,bean,property,values,applied;public,void,set,serializer,factory,nullable,serializer,factory,serializer,factory,this,serializer,factory,serializer,factory,null,serializer,factory,new,serializer,factory
HessianExporter -> public void setSerializerFactory(@Nullable SerializerFactory serializerFactory);1530174524;Specify the Hessian SerializerFactory to use._<p>This will typically be passed in as an inner bean definition_of type {@code com.caucho.hessian.io.SerializerFactory},_with custom bean property values applied.;public void setSerializerFactory(@Nullable SerializerFactory serializerFactory) {_		this.serializerFactory = (serializerFactory != null ? serializerFactory : new SerializerFactory())__	};specify,the,hessian,serializer,factory,to,use,p,this,will,typically,be,passed,in,as,an,inner,bean,definition,of,type,code,com,caucho,hessian,io,serializer,factory,with,custom,bean,property,values,applied;public,void,set,serializer,factory,nullable,serializer,factory,serializer,factory,this,serializer,factory,serializer,factory,null,serializer,factory,new,serializer,factory
HessianExporter -> public void setSerializerFactory(@Nullable SerializerFactory serializerFactory);1533666953;Specify the Hessian SerializerFactory to use._<p>This will typically be passed in as an inner bean definition_of type {@code com.caucho.hessian.io.SerializerFactory},_with custom bean property values applied.;public void setSerializerFactory(@Nullable SerializerFactory serializerFactory) {_		this.serializerFactory = (serializerFactory != null ? serializerFactory : new SerializerFactory())__	};specify,the,hessian,serializer,factory,to,use,p,this,will,typically,be,passed,in,as,an,inner,bean,definition,of,type,code,com,caucho,hessian,io,serializer,factory,with,custom,bean,property,values,applied;public,void,set,serializer,factory,nullable,serializer,factory,serializer,factory,this,serializer,factory,serializer,factory,null,serializer,factory,new,serializer,factory
HessianExporter -> public void prepare();1328020251;Initialize this exporter.;public void prepare() {_		checkService()__		checkServiceInterface()__		this.skeleton = new HessianSkeleton(getProxyForService(), getServiceInterface())__	};initialize,this,exporter;public,void,prepare,check,service,check,service,interface,this,skeleton,new,hessian,skeleton,get,proxy,for,service,get,service,interface
HessianExporter -> public void prepare();1356735495;Initialize this exporter.;public void prepare() {_		checkService()__		checkServiceInterface()__		this.skeleton = new HessianSkeleton(getProxyForService(), getServiceInterface())__	};initialize,this,exporter;public,void,prepare,check,service,check,service,interface,this,skeleton,new,hessian,skeleton,get,proxy,for,service,get,service,interface
HessianExporter -> public void prepare();1357119239;Initialize this exporter.;public void prepare() {_		checkService()__		checkServiceInterface()__		this.skeleton = new HessianSkeleton(getProxyForService(), getServiceInterface())__	};initialize,this,exporter;public,void,prepare,check,service,check,service,interface,this,skeleton,new,hessian,skeleton,get,proxy,for,service,get,service,interface
HessianExporter -> public void prepare();1367327603;Initialize this exporter.;public void prepare() {_		checkService()__		checkServiceInterface()__		this.skeleton = new HessianSkeleton(getProxyForService(), getServiceInterface())__	};initialize,this,exporter;public,void,prepare,check,service,check,service,interface,this,skeleton,new,hessian,skeleton,get,proxy,for,service,get,service,interface
HessianExporter -> public void prepare();1368482696;Initialize this exporter.;public void prepare() {_		checkService()__		checkServiceInterface()__		this.skeleton = new HessianSkeleton(getProxyForService(), getServiceInterface())__	};initialize,this,exporter;public,void,prepare,check,service,check,service,interface,this,skeleton,new,hessian,skeleton,get,proxy,for,service,get,service,interface
HessianExporter -> public void prepare();1385412762;Initialize this exporter.;public void prepare() {_		checkService()__		checkServiceInterface()__		this.skeleton = new HessianSkeleton(getProxyForService(), getServiceInterface())__	};initialize,this,exporter;public,void,prepare,check,service,check,service,interface,this,skeleton,new,hessian,skeleton,get,proxy,for,service,get,service,interface
HessianExporter -> public void prepare();1413848647;Initialize this exporter.;public void prepare() {_		checkService()__		checkServiceInterface()__		this.skeleton = new HessianSkeleton(getProxyForService(), getServiceInterface())__	};initialize,this,exporter;public,void,prepare,check,service,check,service,interface,this,skeleton,new,hessian,skeleton,get,proxy,for,service,get,service,interface
HessianExporter -> public void prepare();1477045587;Initialize this exporter.;public void prepare() {_		checkService()__		checkServiceInterface()__		this.skeleton = new HessianSkeleton(getProxyForService(), getServiceInterface())__	};initialize,this,exporter;public,void,prepare,check,service,check,service,interface,this,skeleton,new,hessian,skeleton,get,proxy,for,service,get,service,interface
HessianExporter -> public void prepare();1496837955;Initialize this exporter.;public void prepare() {_		checkService()__		checkServiceInterface()__		this.skeleton = new HessianSkeleton(getProxyForService(), getServiceInterface())__	};initialize,this,exporter;public,void,prepare,check,service,check,service,interface,this,skeleton,new,hessian,skeleton,get,proxy,for,service,get,service,interface
HessianExporter -> public void prepare();1498780456;Initialize this exporter.;public void prepare() {_		checkService()__		checkServiceInterface()__		this.skeleton = new HessianSkeleton(getProxyForService(), getServiceInterface())__	};initialize,this,exporter;public,void,prepare,check,service,check,service,interface,this,skeleton,new,hessian,skeleton,get,proxy,for,service,get,service,interface
HessianExporter -> public void prepare();1518167602;Initialize this exporter.;public void prepare() {_		checkService()__		checkServiceInterface()__		this.skeleton = new HessianSkeleton(getProxyForService(), getServiceInterface())__	};initialize,this,exporter;public,void,prepare,check,service,check,service,interface,this,skeleton,new,hessian,skeleton,get,proxy,for,service,get,service,interface
HessianExporter -> public void prepare();1518167818;Initialize this exporter.;public void prepare() {_		checkService()__		checkServiceInterface()__		this.skeleton = new HessianSkeleton(getProxyForService(), getServiceInterface())__	};initialize,this,exporter;public,void,prepare,check,service,check,service,interface,this,skeleton,new,hessian,skeleton,get,proxy,for,service,get,service,interface
HessianExporter -> public void prepare();1530174524;Initialize this exporter.;public void prepare() {_		checkService()__		checkServiceInterface()__		this.skeleton = new HessianSkeleton(getProxyForService(), getServiceInterface())__	};initialize,this,exporter;public,void,prepare,check,service,check,service,interface,this,skeleton,new,hessian,skeleton,get,proxy,for,service,get,service,interface
HessianExporter -> public void prepare();1533666953;Initialize this exporter.;public void prepare() {_		checkService()__		checkServiceInterface()__		this.skeleton = new HessianSkeleton(getProxyForService(), getServiceInterface())__	};initialize,this,exporter;public,void,prepare,check,service,check,service,interface,this,skeleton,new,hessian,skeleton,get,proxy,for,service,get,service,interface
HessianExporter -> public void setSerializerFactory(SerializerFactory serializerFactory);1328020251;Specify the Hessian SerializerFactory to use._<p>This will typically be passed in as an inner bean definition_of type <code>com.caucho.hessian.io.SerializerFactory</code>,_with custom bean property values applied.;public void setSerializerFactory(SerializerFactory serializerFactory) {_		this.serializerFactory = (serializerFactory != null ? serializerFactory : new SerializerFactory())__	};specify,the,hessian,serializer,factory,to,use,p,this,will,typically,be,passed,in,as,an,inner,bean,definition,of,type,code,com,caucho,hessian,io,serializer,factory,code,with,custom,bean,property,values,applied;public,void,set,serializer,factory,serializer,factory,serializer,factory,this,serializer,factory,serializer,factory,null,serializer,factory,new,serializer,factory
HessianExporter -> public void setSerializerFactory(SerializerFactory serializerFactory);1356735495;Specify the Hessian SerializerFactory to use._<p>This will typically be passed in as an inner bean definition_of type {@code com.caucho.hessian.io.SerializerFactory},_with custom bean property values applied.;public void setSerializerFactory(SerializerFactory serializerFactory) {_		this.serializerFactory = (serializerFactory != null ? serializerFactory : new SerializerFactory())__	};specify,the,hessian,serializer,factory,to,use,p,this,will,typically,be,passed,in,as,an,inner,bean,definition,of,type,code,com,caucho,hessian,io,serializer,factory,with,custom,bean,property,values,applied;public,void,set,serializer,factory,serializer,factory,serializer,factory,this,serializer,factory,serializer,factory,null,serializer,factory,new,serializer,factory
HessianExporter -> public void setSerializerFactory(SerializerFactory serializerFactory);1357119239;Specify the Hessian SerializerFactory to use._<p>This will typically be passed in as an inner bean definition_of type {@code com.caucho.hessian.io.SerializerFactory},_with custom bean property values applied.;public void setSerializerFactory(SerializerFactory serializerFactory) {_		this.serializerFactory = (serializerFactory != null ? serializerFactory : new SerializerFactory())__	};specify,the,hessian,serializer,factory,to,use,p,this,will,typically,be,passed,in,as,an,inner,bean,definition,of,type,code,com,caucho,hessian,io,serializer,factory,with,custom,bean,property,values,applied;public,void,set,serializer,factory,serializer,factory,serializer,factory,this,serializer,factory,serializer,factory,null,serializer,factory,new,serializer,factory
HessianExporter -> public void setSerializerFactory(SerializerFactory serializerFactory);1367327603;Specify the Hessian SerializerFactory to use._<p>This will typically be passed in as an inner bean definition_of type {@code com.caucho.hessian.io.SerializerFactory},_with custom bean property values applied.;public void setSerializerFactory(SerializerFactory serializerFactory) {_		this.serializerFactory = (serializerFactory != null ? serializerFactory : new SerializerFactory())__	};specify,the,hessian,serializer,factory,to,use,p,this,will,typically,be,passed,in,as,an,inner,bean,definition,of,type,code,com,caucho,hessian,io,serializer,factory,with,custom,bean,property,values,applied;public,void,set,serializer,factory,serializer,factory,serializer,factory,this,serializer,factory,serializer,factory,null,serializer,factory,new,serializer,factory
HessianExporter -> public void setSerializerFactory(SerializerFactory serializerFactory);1368482696;Specify the Hessian SerializerFactory to use._<p>This will typically be passed in as an inner bean definition_of type {@code com.caucho.hessian.io.SerializerFactory},_with custom bean property values applied.;public void setSerializerFactory(SerializerFactory serializerFactory) {_		this.serializerFactory = (serializerFactory != null ? serializerFactory : new SerializerFactory())__	};specify,the,hessian,serializer,factory,to,use,p,this,will,typically,be,passed,in,as,an,inner,bean,definition,of,type,code,com,caucho,hessian,io,serializer,factory,with,custom,bean,property,values,applied;public,void,set,serializer,factory,serializer,factory,serializer,factory,this,serializer,factory,serializer,factory,null,serializer,factory,new,serializer,factory
HessianExporter -> public void setSerializerFactory(SerializerFactory serializerFactory);1385412762;Specify the Hessian SerializerFactory to use._<p>This will typically be passed in as an inner bean definition_of type {@code com.caucho.hessian.io.SerializerFactory},_with custom bean property values applied.;public void setSerializerFactory(SerializerFactory serializerFactory) {_		this.serializerFactory = (serializerFactory != null ? serializerFactory : new SerializerFactory())__	};specify,the,hessian,serializer,factory,to,use,p,this,will,typically,be,passed,in,as,an,inner,bean,definition,of,type,code,com,caucho,hessian,io,serializer,factory,with,custom,bean,property,values,applied;public,void,set,serializer,factory,serializer,factory,serializer,factory,this,serializer,factory,serializer,factory,null,serializer,factory,new,serializer,factory
HessianExporter -> public void setSerializerFactory(SerializerFactory serializerFactory);1413848647;Specify the Hessian SerializerFactory to use._<p>This will typically be passed in as an inner bean definition_of type {@code com.caucho.hessian.io.SerializerFactory},_with custom bean property values applied.;public void setSerializerFactory(SerializerFactory serializerFactory) {_		this.serializerFactory = (serializerFactory != null ? serializerFactory : new SerializerFactory())__	};specify,the,hessian,serializer,factory,to,use,p,this,will,typically,be,passed,in,as,an,inner,bean,definition,of,type,code,com,caucho,hessian,io,serializer,factory,with,custom,bean,property,values,applied;public,void,set,serializer,factory,serializer,factory,serializer,factory,this,serializer,factory,serializer,factory,null,serializer,factory,new,serializer,factory
HessianExporter -> public void setSerializerFactory(SerializerFactory serializerFactory);1477045587;Specify the Hessian SerializerFactory to use._<p>This will typically be passed in as an inner bean definition_of type {@code com.caucho.hessian.io.SerializerFactory},_with custom bean property values applied.;public void setSerializerFactory(SerializerFactory serializerFactory) {_		this.serializerFactory = (serializerFactory != null ? serializerFactory : new SerializerFactory())__	};specify,the,hessian,serializer,factory,to,use,p,this,will,typically,be,passed,in,as,an,inner,bean,definition,of,type,code,com,caucho,hessian,io,serializer,factory,with,custom,bean,property,values,applied;public,void,set,serializer,factory,serializer,factory,serializer,factory,this,serializer,factory,serializer,factory,null,serializer,factory,new,serializer,factory
HessianExporter -> public void setAllowNonSerializable(boolean allowNonSerializable);1367327603;Set whether to allow non-serializable types as Hessian arguments_and return values. Default is "true".;public void setAllowNonSerializable(boolean allowNonSerializable) {_		this.serializerFactory.setAllowNonSerializable(allowNonSerializable)__	};set,whether,to,allow,non,serializable,types,as,hessian,arguments,and,return,values,default,is,true;public,void,set,allow,non,serializable,boolean,allow,non,serializable,this,serializer,factory,set,allow,non,serializable,allow,non,serializable
HessianExporter -> public void setAllowNonSerializable(boolean allowNonSerializable);1368482696;Set whether to allow non-serializable types as Hessian arguments_and return values. Default is "true".;public void setAllowNonSerializable(boolean allowNonSerializable) {_		this.serializerFactory.setAllowNonSerializable(allowNonSerializable)__	};set,whether,to,allow,non,serializable,types,as,hessian,arguments,and,return,values,default,is,true;public,void,set,allow,non,serializable,boolean,allow,non,serializable,this,serializer,factory,set,allow,non,serializable,allow,non,serializable
HessianExporter -> public void setAllowNonSerializable(boolean allowNonSerializable);1385412762;Set whether to allow non-serializable types as Hessian arguments_and return values. Default is "true".;public void setAllowNonSerializable(boolean allowNonSerializable) {_		this.serializerFactory.setAllowNonSerializable(allowNonSerializable)__	};set,whether,to,allow,non,serializable,types,as,hessian,arguments,and,return,values,default,is,true;public,void,set,allow,non,serializable,boolean,allow,non,serializable,this,serializer,factory,set,allow,non,serializable,allow,non,serializable
HessianExporter -> public void setAllowNonSerializable(boolean allowNonSerializable);1413848647;Set whether to allow non-serializable types as Hessian arguments_and return values. Default is "true".;public void setAllowNonSerializable(boolean allowNonSerializable) {_		this.serializerFactory.setAllowNonSerializable(allowNonSerializable)__	};set,whether,to,allow,non,serializable,types,as,hessian,arguments,and,return,values,default,is,true;public,void,set,allow,non,serializable,boolean,allow,non,serializable,this,serializer,factory,set,allow,non,serializable,allow,non,serializable
HessianExporter -> public void setAllowNonSerializable(boolean allowNonSerializable);1477045587;Set whether to allow non-serializable types as Hessian arguments_and return values. Default is "true".;public void setAllowNonSerializable(boolean allowNonSerializable) {_		this.serializerFactory.setAllowNonSerializable(allowNonSerializable)__	};set,whether,to,allow,non,serializable,types,as,hessian,arguments,and,return,values,default,is,true;public,void,set,allow,non,serializable,boolean,allow,non,serializable,this,serializer,factory,set,allow,non,serializable,allow,non,serializable
HessianExporter -> public void setAllowNonSerializable(boolean allowNonSerializable);1496837955;Set whether to allow non-serializable types as Hessian arguments_and return values. Default is "true".;public void setAllowNonSerializable(boolean allowNonSerializable) {_		this.serializerFactory.setAllowNonSerializable(allowNonSerializable)__	};set,whether,to,allow,non,serializable,types,as,hessian,arguments,and,return,values,default,is,true;public,void,set,allow,non,serializable,boolean,allow,non,serializable,this,serializer,factory,set,allow,non,serializable,allow,non,serializable
HessianExporter -> public void setAllowNonSerializable(boolean allowNonSerializable);1498780456;Set whether to allow non-serializable types as Hessian arguments_and return values. Default is "true".;public void setAllowNonSerializable(boolean allowNonSerializable) {_		this.serializerFactory.setAllowNonSerializable(allowNonSerializable)__	};set,whether,to,allow,non,serializable,types,as,hessian,arguments,and,return,values,default,is,true;public,void,set,allow,non,serializable,boolean,allow,non,serializable,this,serializer,factory,set,allow,non,serializable,allow,non,serializable
HessianExporter -> public void setAllowNonSerializable(boolean allowNonSerializable);1518167602;Set whether to allow non-serializable types as Hessian arguments_and return values. Default is "true".;public void setAllowNonSerializable(boolean allowNonSerializable) {_		this.serializerFactory.setAllowNonSerializable(allowNonSerializable)__	};set,whether,to,allow,non,serializable,types,as,hessian,arguments,and,return,values,default,is,true;public,void,set,allow,non,serializable,boolean,allow,non,serializable,this,serializer,factory,set,allow,non,serializable,allow,non,serializable
HessianExporter -> public void setAllowNonSerializable(boolean allowNonSerializable);1518167818;Set whether to allow non-serializable types as Hessian arguments_and return values. Default is "true".;public void setAllowNonSerializable(boolean allowNonSerializable) {_		this.serializerFactory.setAllowNonSerializable(allowNonSerializable)__	};set,whether,to,allow,non,serializable,types,as,hessian,arguments,and,return,values,default,is,true;public,void,set,allow,non,serializable,boolean,allow,non,serializable,this,serializer,factory,set,allow,non,serializable,allow,non,serializable
HessianExporter -> public void setAllowNonSerializable(boolean allowNonSerializable);1530174524;Set whether to allow non-serializable types as Hessian arguments_and return values. Default is "true".;public void setAllowNonSerializable(boolean allowNonSerializable) {_		this.serializerFactory.setAllowNonSerializable(allowNonSerializable)__	};set,whether,to,allow,non,serializable,types,as,hessian,arguments,and,return,values,default,is,true;public,void,set,allow,non,serializable,boolean,allow,non,serializable,this,serializer,factory,set,allow,non,serializable,allow,non,serializable
HessianExporter -> public void setAllowNonSerializable(boolean allowNonSerializable);1533666953;Set whether to allow non-serializable types as Hessian arguments_and return values. Default is "true".;public void setAllowNonSerializable(boolean allowNonSerializable) {_		this.serializerFactory.setAllowNonSerializable(allowNonSerializable)__	};set,whether,to,allow,non,serializable,types,as,hessian,arguments,and,return,values,default,is,true;public,void,set,allow,non,serializable,boolean,allow,non,serializable,this,serializer,factory,set,allow,non,serializable,allow,non,serializable
