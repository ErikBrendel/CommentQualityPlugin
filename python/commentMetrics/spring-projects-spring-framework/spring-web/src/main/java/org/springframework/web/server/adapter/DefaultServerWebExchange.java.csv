# id;timestamp;commentText;codeText;commentWords;codeWords
DefaultServerWebExchange -> public DefaultServerWebExchange(ServerHttpRequest request, ServerHttpResponse response, 			WebSessionManager sessionManager, ServerCodecConfigurer codecConfigurer);1493390543;Alternate constructor with a WebSessionManager parameter.;public DefaultServerWebExchange(ServerHttpRequest request, ServerHttpResponse response,_			WebSessionManager sessionManager, ServerCodecConfigurer codecConfigurer) {__		Assert.notNull(request, "'request' is required")__		Assert.notNull(response, "'response' is required")__		Assert.notNull(sessionManager, "'sessionManager' is required")__		Assert.notNull(codecConfigurer, "'codecConfigurer' is required")___		this.request = request__		this.response = response__		this.sessionMono = sessionManager.getSession(this).cache()__		this.formDataMono = initFormData(request, codecConfigurer)__		this.requestParamsMono = initRequestParams(request, this.formDataMono)___	};alternate,constructor,with,a,web,session,manager,parameter;public,default,server,web,exchange,server,http,request,request,server,http,response,response,web,session,manager,session,manager,server,codec,configurer,codec,configurer,assert,not,null,request,request,is,required,assert,not,null,response,response,is,required,assert,not,null,session,manager,session,manager,is,required,assert,not,null,codec,configurer,codec,configurer,is,required,this,request,request,this,response,response,this,session,mono,session,manager,get,session,this,cache,this,form,data,mono,init,form,data,request,codec,configurer,this,request,params,mono,init,request,params,request,this,form,data,mono
DefaultServerWebExchange -> public DefaultServerWebExchange(ServerHttpRequest request, ServerHttpResponse response, 			WebSessionManager sessionManager, ServerCodecConfigurer codecConfigurer);1493390543;Alternate constructor with a WebSessionManager parameter.;public DefaultServerWebExchange(ServerHttpRequest request, ServerHttpResponse response,_			WebSessionManager sessionManager, ServerCodecConfigurer codecConfigurer) {__		Assert.notNull(request, "'request' is required")__		Assert.notNull(response, "'response' is required")__		Assert.notNull(sessionManager, "'sessionManager' is required")__		Assert.notNull(codecConfigurer, "'codecConfigurer' is required")___		this.request = request__		this.response = response__		this.sessionMono = sessionManager.getSession(this).cache()__		this.formDataMono = initFormData(request, codecConfigurer)__		this.multipartDataMono = initMultipartData(request, codecConfigurer)__		this.requestParamsMono = initRequestParams(request, this.formDataMono)___	};alternate,constructor,with,a,web,session,manager,parameter;public,default,server,web,exchange,server,http,request,request,server,http,response,response,web,session,manager,session,manager,server,codec,configurer,codec,configurer,assert,not,null,request,request,is,required,assert,not,null,response,response,is,required,assert,not,null,session,manager,session,manager,is,required,assert,not,null,codec,configurer,codec,configurer,is,required,this,request,request,this,response,response,this,session,mono,session,manager,get,session,this,cache,this,form,data,mono,init,form,data,request,codec,configurer,this,multipart,data,mono,init,multipart,data,request,codec,configurer,this,request,params,mono,init,request,params,request,this,form,data,mono
DefaultServerWebExchange -> public DefaultServerWebExchange(ServerHttpRequest request, ServerHttpResponse response, 			WebSessionManager sessionManager, ServerCodecConfigurer codecConfigurer);1493676008;Alternate constructor with a WebSessionManager parameter.;public DefaultServerWebExchange(ServerHttpRequest request, ServerHttpResponse response,_			WebSessionManager sessionManager, ServerCodecConfigurer codecConfigurer) {__		Assert.notNull(request, "'request' is required")__		Assert.notNull(response, "'response' is required")__		Assert.notNull(sessionManager, "'sessionManager' is required")__		Assert.notNull(codecConfigurer, "'codecConfigurer' is required")___		this.request = request__		this.response = response__		this.sessionMono = sessionManager.getSession(this).cache()__		this.formDataMono = initFormData(request, codecConfigurer)__		this.multipartDataMono = initMultipartData(request, codecConfigurer)__		this.requestParamsMono = initRequestParams(request, this.formDataMono)___	};alternate,constructor,with,a,web,session,manager,parameter;public,default,server,web,exchange,server,http,request,request,server,http,response,response,web,session,manager,session,manager,server,codec,configurer,codec,configurer,assert,not,null,request,request,is,required,assert,not,null,response,response,is,required,assert,not,null,session,manager,session,manager,is,required,assert,not,null,codec,configurer,codec,configurer,is,required,this,request,request,this,response,response,this,session,mono,session,manager,get,session,this,cache,this,form,data,mono,init,form,data,request,codec,configurer,this,multipart,data,mono,init,multipart,data,request,codec,configurer,this,request,params,mono,init,request,params,request,this,form,data,mono
DefaultServerWebExchange -> public DefaultServerWebExchange(ServerHttpRequest request, ServerHttpResponse response, 			WebSessionManager sessionManager, ServerCodecConfigurer codecConfigurer);1493755795;Alternate constructor with a WebSessionManager parameter.;public DefaultServerWebExchange(ServerHttpRequest request, ServerHttpResponse response,_			WebSessionManager sessionManager, ServerCodecConfigurer codecConfigurer) {__		Assert.notNull(request, "'request' is required")__		Assert.notNull(response, "'response' is required")__		Assert.notNull(sessionManager, "'sessionManager' is required")__		Assert.notNull(codecConfigurer, "'codecConfigurer' is required")___		this.request = request__		this.response = response__		this.sessionMono = sessionManager.getSession(this).cache()__		this.formDataMono = initFormData(request, codecConfigurer)__		this.multipartDataMono = initMultipartData(request, codecConfigurer)__	};alternate,constructor,with,a,web,session,manager,parameter;public,default,server,web,exchange,server,http,request,request,server,http,response,response,web,session,manager,session,manager,server,codec,configurer,codec,configurer,assert,not,null,request,request,is,required,assert,not,null,response,response,is,required,assert,not,null,session,manager,session,manager,is,required,assert,not,null,codec,configurer,codec,configurer,is,required,this,request,request,this,response,response,this,session,mono,session,manager,get,session,this,cache,this,form,data,mono,init,form,data,request,codec,configurer,this,multipart,data,mono,init,multipart,data,request,codec,configurer
DefaultServerWebExchange -> public DefaultServerWebExchange(ServerHttpRequest request, ServerHttpResponse response, 			WebSessionManager sessionManager, ServerCodecConfigurer codecConfigurer);1493867027;Alternate constructor with a WebSessionManager parameter.;public DefaultServerWebExchange(ServerHttpRequest request, ServerHttpResponse response,_			WebSessionManager sessionManager, ServerCodecConfigurer codecConfigurer) {__		Assert.notNull(request, "'request' is required")__		Assert.notNull(response, "'response' is required")__		Assert.notNull(sessionManager, "'sessionManager' is required")__		Assert.notNull(codecConfigurer, "'codecConfigurer' is required")___		this.request = request__		this.response = response__		this.sessionMono = sessionManager.getSession(this).cache()__		this.formDataMono = initFormData(request, codecConfigurer)__		this.multipartDataMono = initMultipartData(request, codecConfigurer)__	};alternate,constructor,with,a,web,session,manager,parameter;public,default,server,web,exchange,server,http,request,request,server,http,response,response,web,session,manager,session,manager,server,codec,configurer,codec,configurer,assert,not,null,request,request,is,required,assert,not,null,response,response,is,required,assert,not,null,session,manager,session,manager,is,required,assert,not,null,codec,configurer,codec,configurer,is,required,this,request,request,this,response,response,this,session,mono,session,manager,get,session,this,cache,this,form,data,mono,init,form,data,request,codec,configurer,this,multipart,data,mono,init,multipart,data,request,codec,configurer
DefaultServerWebExchange -> public DefaultServerWebExchange(ServerHttpRequest request, ServerHttpResponse response, 			WebSessionManager sessionManager, ServerCodecConfigurer codecConfigurer);1496259743;Alternate constructor with a WebSessionManager parameter.;public DefaultServerWebExchange(ServerHttpRequest request, ServerHttpResponse response,_			WebSessionManager sessionManager, ServerCodecConfigurer codecConfigurer) {__		Assert.notNull(request, "'request' is required")__		Assert.notNull(response, "'response' is required")__		Assert.notNull(sessionManager, "'sessionManager' is required")__		Assert.notNull(codecConfigurer, "'codecConfigurer' is required")___		this.request = request__		this.response = response__		this.sessionMono = sessionManager.getSession(this).cache()__		this.formDataMono = initFormData(request, codecConfigurer)__		this.multipartDataMono = initMultipartData(request, codecConfigurer)__	};alternate,constructor,with,a,web,session,manager,parameter;public,default,server,web,exchange,server,http,request,request,server,http,response,response,web,session,manager,session,manager,server,codec,configurer,codec,configurer,assert,not,null,request,request,is,required,assert,not,null,response,response,is,required,assert,not,null,session,manager,session,manager,is,required,assert,not,null,codec,configurer,codec,configurer,is,required,this,request,request,this,response,response,this,session,mono,session,manager,get,session,this,cache,this,form,data,mono,init,form,data,request,codec,configurer,this,multipart,data,mono,init,multipart,data,request,codec,configurer
DefaultServerWebExchange -> public DefaultServerWebExchange(ServerHttpRequest request, ServerHttpResponse response, 			WebSessionManager sessionManager, ServerCodecConfigurer codecConfigurer);1496837955;Alternate constructor with a WebSessionManager parameter.;public DefaultServerWebExchange(ServerHttpRequest request, ServerHttpResponse response,_			WebSessionManager sessionManager, ServerCodecConfigurer codecConfigurer) {__		Assert.notNull(request, "'request' is required")__		Assert.notNull(response, "'response' is required")__		Assert.notNull(sessionManager, "'sessionManager' is required")__		Assert.notNull(codecConfigurer, "'codecConfigurer' is required")___		this.request = request__		this.response = response__		this.sessionMono = sessionManager.getSession(this).cache()__		this.formDataMono = initFormData(request, codecConfigurer)__		this.multipartDataMono = initMultipartData(request, codecConfigurer)__	};alternate,constructor,with,a,web,session,manager,parameter;public,default,server,web,exchange,server,http,request,request,server,http,response,response,web,session,manager,session,manager,server,codec,configurer,codec,configurer,assert,not,null,request,request,is,required,assert,not,null,response,response,is,required,assert,not,null,session,manager,session,manager,is,required,assert,not,null,codec,configurer,codec,configurer,is,required,this,request,request,this,response,response,this,session,mono,session,manager,get,session,this,cache,this,form,data,mono,init,form,data,request,codec,configurer,this,multipart,data,mono,init,multipart,data,request,codec,configurer
DefaultServerWebExchange -> public DefaultServerWebExchange(ServerHttpRequest request, ServerHttpResponse response, 			WebSessionManager sessionManager);1484338986;Alternate constructor with a WebSessionManager parameter.;public DefaultServerWebExchange(ServerHttpRequest request, ServerHttpResponse response,_			WebSessionManager sessionManager) {__		Assert.notNull(request, "'request' is required")__		Assert.notNull(response, "'response' is required")__		Assert.notNull(response, "'sessionManager' is required")__		Assert.notNull(response, "'formReader' is required")___		this.request = request__		this.response = response__		this.sessionMono = sessionManager.getSession(this).cache()__		this.formDataMono = initFormData(request)__		this.requestParamsMono = initRequestParams(request, this.formDataMono)__	};alternate,constructor,with,a,web,session,manager,parameter;public,default,server,web,exchange,server,http,request,request,server,http,response,response,web,session,manager,session,manager,assert,not,null,request,request,is,required,assert,not,null,response,response,is,required,assert,not,null,response,session,manager,is,required,assert,not,null,response,form,reader,is,required,this,request,request,this,response,response,this,session,mono,session,manager,get,session,this,cache,this,form,data,mono,init,form,data,request,this,request,params,mono,init,request,params,request,this,form,data,mono
DefaultServerWebExchange -> public DefaultServerWebExchange(ServerHttpRequest request, ServerHttpResponse response, 			WebSessionManager sessionManager);1489679709;Alternate constructor with a WebSessionManager parameter.;public DefaultServerWebExchange(ServerHttpRequest request, ServerHttpResponse response,_			WebSessionManager sessionManager) {__		Assert.notNull(request, "'request' is required")__		Assert.notNull(response, "'response' is required")__		Assert.notNull(response, "'sessionManager' is required")__		Assert.notNull(response, "'formReader' is required")___		this.request = request__		this.response = response__		this.sessionMono = sessionManager.getSession(this).cache()__		this.formDataMono = initFormData(request)__		this.requestParamsMono = initRequestParams(request, this.formDataMono)__	};alternate,constructor,with,a,web,session,manager,parameter;public,default,server,web,exchange,server,http,request,request,server,http,response,response,web,session,manager,session,manager,assert,not,null,request,request,is,required,assert,not,null,response,response,is,required,assert,not,null,response,session,manager,is,required,assert,not,null,response,form,reader,is,required,this,request,request,this,response,response,this,session,mono,session,manager,get,session,this,cache,this,form,data,mono,init,form,data,request,this,request,params,mono,init,request,params,request,this,form,data,mono
DefaultServerWebExchange -> public DefaultServerWebExchange(ServerHttpRequest request, ServerHttpResponse response, 			WebSessionManager sessionManager);1489690883;Alternate constructor with a WebSessionManager parameter.;public DefaultServerWebExchange(ServerHttpRequest request, ServerHttpResponse response,_			WebSessionManager sessionManager) {__		Assert.notNull(request, "'request' is required")__		Assert.notNull(response, "'response' is required")__		Assert.notNull(response, "'sessionManager' is required")__		Assert.notNull(response, "'formReader' is required")___		this.request = request__		this.response = response__		this.sessionMono = sessionManager.getSession(this).cache()__		this.formDataMono = initFormData(request)__		this.requestParamsMono = initRequestParams(request, this.formDataMono)__	};alternate,constructor,with,a,web,session,manager,parameter;public,default,server,web,exchange,server,http,request,request,server,http,response,response,web,session,manager,session,manager,assert,not,null,request,request,is,required,assert,not,null,response,response,is,required,assert,not,null,response,session,manager,is,required,assert,not,null,response,form,reader,is,required,this,request,request,this,response,response,this,session,mono,session,manager,get,session,this,cache,this,form,data,mono,init,form,data,request,this,request,params,mono,init,request,params,request,this,form,data,mono
DefaultServerWebExchange -> public DefaultServerWebExchange(ServerHttpRequest request, ServerHttpResponse response, 			WebSessionManager sessionManager);1492090594;Alternate constructor with a WebSessionManager parameter.;public DefaultServerWebExchange(ServerHttpRequest request, ServerHttpResponse response,_			WebSessionManager sessionManager) {__		Assert.notNull(request, "'request' is required")__		Assert.notNull(response, "'response' is required")__		Assert.notNull(response, "'sessionManager' is required")__		Assert.notNull(response, "'formReader' is required")___		this.request = request__		this.response = response__		this.sessionMono = sessionManager.getSession(this).cache()__		this.formDataMono = initFormData(request)__		this.requestParamsMono = initRequestParams(request, this.formDataMono)__	};alternate,constructor,with,a,web,session,manager,parameter;public,default,server,web,exchange,server,http,request,request,server,http,response,response,web,session,manager,session,manager,assert,not,null,request,request,is,required,assert,not,null,response,response,is,required,assert,not,null,response,session,manager,is,required,assert,not,null,response,form,reader,is,required,this,request,request,this,response,response,this,session,mono,session,manager,get,session,this,cache,this,form,data,mono,init,form,data,request,this,request,params,mono,init,request,params,request,this,form,data,mono
