# id;timestamp;commentText;codeText;commentWords;codeWords
ForwardedHeaderTransformer -> @Override 	public ServerHttpRequest apply(ServerHttpRequest request);1533298569;Apply and remove, or remove Forwarded type headers._@param request the request;@Override_	public ServerHttpRequest apply(ServerHttpRequest request) {__		if (hasForwardedHeaders(request)) {_			ServerHttpRequest.Builder builder = request.mutate()__			if (!this.removeOnly) {_				URI uri = UriComponentsBuilder.fromHttpRequest(request).build().toUri()__				builder.uri(uri)__				String prefix = getForwardedPrefix(request)__				if (prefix != null) {_					builder.path(prefix + uri.getPath())__					builder.contextPath(prefix)__				}_			}_			removeForwardedHeaders(builder)__			request = builder.build()__		}__		return request__	};apply,and,remove,or,remove,forwarded,type,headers,param,request,the,request;override,public,server,http,request,apply,server,http,request,request,if,has,forwarded,headers,request,server,http,request,builder,builder,request,mutate,if,this,remove,only,uri,uri,uri,components,builder,from,http,request,request,build,to,uri,builder,uri,uri,string,prefix,get,forwarded,prefix,request,if,prefix,null,builder,path,prefix,uri,get,path,builder,context,path,prefix,remove,forwarded,headers,builder,request,builder,build,return,request
ForwardedHeaderTransformer -> @Override 	public ServerHttpRequest apply(ServerHttpRequest request);1533555138;Apply and remove, or remove Forwarded type headers._@param request the request;@Override_	public ServerHttpRequest apply(ServerHttpRequest request) {__		if (hasForwardedHeaders(request)) {_			ServerHttpRequest.Builder builder = request.mutate()__			if (!this.removeOnly) {_				URI uri = UriComponentsBuilder.fromHttpRequest(request).build().toUri()__				builder.uri(uri)__				String prefix = getForwardedPrefix(request)__				if (prefix != null) {_					builder.path(prefix + uri.getPath())__					builder.contextPath(prefix)__				}_			}_			removeForwardedHeaders(builder)__			request = builder.build()__		}__		return request__	};apply,and,remove,or,remove,forwarded,type,headers,param,request,the,request;override,public,server,http,request,apply,server,http,request,request,if,has,forwarded,headers,request,server,http,request,builder,builder,request,mutate,if,this,remove,only,uri,uri,uri,components,builder,from,http,request,request,build,to,uri,builder,uri,uri,string,prefix,get,forwarded,prefix,request,if,prefix,null,builder,path,prefix,uri,get,path,builder,context,path,prefix,remove,forwarded,headers,builder,request,builder,build,return,request
ForwardedHeaderTransformer -> @Override 	public ServerHttpRequest apply(ServerHttpRequest request);1533573240;Apply and remove, or remove Forwarded type headers._@param request the request;@Override_	public ServerHttpRequest apply(ServerHttpRequest request) {_		if (hasForwardedHeaders(request)) {_			ServerHttpRequest.Builder builder = request.mutate()__			if (!this.removeOnly) {_				URI uri = UriComponentsBuilder.fromHttpRequest(request).build().toUri()__				builder.uri(uri)__				String prefix = getForwardedPrefix(request)__				if (prefix != null) {_					builder.path(prefix + uri.getPath())__					builder.contextPath(prefix)__				}_			}_			removeForwardedHeaders(builder)__			request = builder.build()__		}_		return request__	};apply,and,remove,or,remove,forwarded,type,headers,param,request,the,request;override,public,server,http,request,apply,server,http,request,request,if,has,forwarded,headers,request,server,http,request,builder,builder,request,mutate,if,this,remove,only,uri,uri,uri,components,builder,from,http,request,request,build,to,uri,builder,uri,uri,string,prefix,get,forwarded,prefix,request,if,prefix,null,builder,path,prefix,uri,get,path,builder,context,path,prefix,remove,forwarded,headers,builder,request,builder,build,return,request
ForwardedHeaderTransformer -> @Override 	public ServerHttpRequest apply(ServerHttpRequest request);1542815679;Apply and remove, or remove Forwarded type headers._@param request the request;@Override_	public ServerHttpRequest apply(ServerHttpRequest request) {_		if (hasForwardedHeaders(request)) {_			ServerHttpRequest.Builder builder = request.mutate()__			if (!this.removeOnly) {_				URI uri = UriComponentsBuilder.fromHttpRequest(request).build(true).toUri()__				builder.uri(uri)__				String prefix = getForwardedPrefix(request)__				if (prefix != null) {_					builder.path(prefix + uri.getPath())__					builder.contextPath(prefix)__				}_			}_			removeForwardedHeaders(builder)__			request = builder.build()__		}_		return request__	};apply,and,remove,or,remove,forwarded,type,headers,param,request,the,request;override,public,server,http,request,apply,server,http,request,request,if,has,forwarded,headers,request,server,http,request,builder,builder,request,mutate,if,this,remove,only,uri,uri,uri,components,builder,from,http,request,request,build,true,to,uri,builder,uri,uri,string,prefix,get,forwarded,prefix,request,if,prefix,null,builder,path,prefix,uri,get,path,builder,context,path,prefix,remove,forwarded,headers,builder,request,builder,build,return,request
ForwardedHeaderTransformer -> protected boolean hasForwardedHeaders(ServerHttpRequest request);1533298569;Whether the request has any Forwarded headers._@param request the request;protected boolean hasForwardedHeaders(ServerHttpRequest request) {_		HttpHeaders headers = request.getHeaders()__		for (String headerName : FORWARDED_HEADER_NAMES) {_			if (headers.containsKey(headerName)) {_				return true__			}_		}_		return false__	};whether,the,request,has,any,forwarded,headers,param,request,the,request;protected,boolean,has,forwarded,headers,server,http,request,request,http,headers,headers,request,get,headers,for,string,header,name,if,headers,contains,key,header,name,return,true,return,false
ForwardedHeaderTransformer -> protected boolean hasForwardedHeaders(ServerHttpRequest request);1533555138;Whether the request has any Forwarded headers._@param request the request;protected boolean hasForwardedHeaders(ServerHttpRequest request) {_		HttpHeaders headers = request.getHeaders()__		for (String headerName : FORWARDED_HEADER_NAMES) {_			if (headers.containsKey(headerName)) {_				return true__			}_		}_		return false__	};whether,the,request,has,any,forwarded,headers,param,request,the,request;protected,boolean,has,forwarded,headers,server,http,request,request,http,headers,headers,request,get,headers,for,string,header,name,if,headers,contains,key,header,name,return,true,return,false
ForwardedHeaderTransformer -> protected boolean hasForwardedHeaders(ServerHttpRequest request);1533573240;Whether the request has any Forwarded headers._@param request the request;protected boolean hasForwardedHeaders(ServerHttpRequest request) {_		HttpHeaders headers = request.getHeaders()__		for (String headerName : FORWARDED_HEADER_NAMES) {_			if (headers.containsKey(headerName)) {_				return true__			}_		}_		return false__	};whether,the,request,has,any,forwarded,headers,param,request,the,request;protected,boolean,has,forwarded,headers,server,http,request,request,http,headers,headers,request,get,headers,for,string,header,name,if,headers,contains,key,header,name,return,true,return,false
ForwardedHeaderTransformer -> protected boolean hasForwardedHeaders(ServerHttpRequest request);1542815679;Whether the request has any Forwarded headers._@param request the request;protected boolean hasForwardedHeaders(ServerHttpRequest request) {_		HttpHeaders headers = request.getHeaders()__		for (String headerName : FORWARDED_HEADER_NAMES) {_			if (headers.containsKey(headerName)) {_				return true__			}_		}_		return false__	};whether,the,request,has,any,forwarded,headers,param,request,the,request;protected,boolean,has,forwarded,headers,server,http,request,request,http,headers,headers,request,get,headers,for,string,header,name,if,headers,contains,key,header,name,return,true,return,false
ForwardedHeaderTransformer -> public void setRemoveOnly(boolean removeOnly);1533298569;Enables mode in which any "Forwarded" or "X-Forwarded-*" headers are_removed only and the information in them ignored._@param removeOnly whether to discard and ignore forwarded headers;public void setRemoveOnly(boolean removeOnly) {_		this.removeOnly = removeOnly__	};enables,mode,in,which,any,forwarded,or,x,forwarded,headers,are,removed,only,and,the,information,in,them,ignored,param,remove,only,whether,to,discard,and,ignore,forwarded,headers;public,void,set,remove,only,boolean,remove,only,this,remove,only,remove,only
ForwardedHeaderTransformer -> public void setRemoveOnly(boolean removeOnly);1533555138;Enables mode in which any "Forwarded" or "X-Forwarded-*" headers are_removed only and the information in them ignored._@param removeOnly whether to discard and ignore forwarded headers;public void setRemoveOnly(boolean removeOnly) {_		this.removeOnly = removeOnly__	};enables,mode,in,which,any,forwarded,or,x,forwarded,headers,are,removed,only,and,the,information,in,them,ignored,param,remove,only,whether,to,discard,and,ignore,forwarded,headers;public,void,set,remove,only,boolean,remove,only,this,remove,only,remove,only
ForwardedHeaderTransformer -> public void setRemoveOnly(boolean removeOnly);1533573240;Enable mode in which any "Forwarded" or "X-Forwarded-*" headers are_removed only and the information in them ignored._@param removeOnly whether to discard and ignore forwarded headers;public void setRemoveOnly(boolean removeOnly) {_		this.removeOnly = removeOnly__	};enable,mode,in,which,any,forwarded,or,x,forwarded,headers,are,removed,only,and,the,information,in,them,ignored,param,remove,only,whether,to,discard,and,ignore,forwarded,headers;public,void,set,remove,only,boolean,remove,only,this,remove,only,remove,only
ForwardedHeaderTransformer -> public void setRemoveOnly(boolean removeOnly);1542815679;Enable mode in which any "Forwarded" or "X-Forwarded-*" headers are_removed only and the information in them ignored._@param removeOnly whether to discard and ignore forwarded headers;public void setRemoveOnly(boolean removeOnly) {_		this.removeOnly = removeOnly__	};enable,mode,in,which,any,forwarded,or,x,forwarded,headers,are,removed,only,and,the,information,in,them,ignored,param,remove,only,whether,to,discard,and,ignore,forwarded,headers;public,void,set,remove,only,boolean,remove,only,this,remove,only,remove,only
ForwardedHeaderTransformer -> public boolean isRemoveOnly();1533298569;Whether the "remove only" mode is on.;public boolean isRemoveOnly() {_		return this.removeOnly__	};whether,the,remove,only,mode,is,on;public,boolean,is,remove,only,return,this,remove,only
ForwardedHeaderTransformer -> public boolean isRemoveOnly();1533555138;Whether the "remove only" mode is on.;public boolean isRemoveOnly() {_		return this.removeOnly__	};whether,the,remove,only,mode,is,on;public,boolean,is,remove,only,return,this,remove,only
ForwardedHeaderTransformer -> public boolean isRemoveOnly();1533573240;Whether the "remove only" mode is on._@see #setRemoveOnly;public boolean isRemoveOnly() {_		return this.removeOnly__	};whether,the,remove,only,mode,is,on,see,set,remove,only;public,boolean,is,remove,only,return,this,remove,only
ForwardedHeaderTransformer -> public boolean isRemoveOnly();1542815679;Whether the "remove only" mode is on._@see #setRemoveOnly;public boolean isRemoveOnly() {_		return this.removeOnly__	};whether,the,remove,only,mode,is,on,see,set,remove,only;public,boolean,is,remove,only,return,this,remove,only
