# id;timestamp;commentText;codeText;commentWords;codeWords
SessionScope -> public SessionScope();1328020251;Create a new SessionScope, storing attributes in a locally_isolated session (or default session, if there is no distinction_between a global session and a component-specific session).;public SessionScope() {_		this.scope = RequestAttributes.SCOPE_SESSION__	};create,a,new,session,scope,storing,attributes,in,a,locally,isolated,session,or,default,session,if,there,is,no,distinction,between,a,global,session,and,a,component,specific,session;public,session,scope,this,scope,request,attributes
SessionScope -> public SessionScope();1356735495;Create a new SessionScope, storing attributes in a locally_isolated session (or default session, if there is no distinction_between a global session and a component-specific session).;public SessionScope() {_		this.scope = RequestAttributes.SCOPE_SESSION__	};create,a,new,session,scope,storing,attributes,in,a,locally,isolated,session,or,default,session,if,there,is,no,distinction,between,a,global,session,and,a,component,specific,session;public,session,scope,this,scope,request,attributes
SessionScope -> public SessionScope();1357119239;Create a new SessionScope, storing attributes in a locally_isolated session (or default session, if there is no distinction_between a global session and a component-specific session).;public SessionScope() {_		this.scope = RequestAttributes.SCOPE_SESSION__	};create,a,new,session,scope,storing,attributes,in,a,locally,isolated,session,or,default,session,if,there,is,no,distinction,between,a,global,session,and,a,component,specific,session;public,session,scope,this,scope,request,attributes
SessionScope -> public SessionScope();1368482696;Create a new SessionScope, storing attributes in a locally_isolated session (or default session, if there is no distinction_between a global session and a component-specific session).;public SessionScope() {_		this.scope = RequestAttributes.SCOPE_SESSION__	};create,a,new,session,scope,storing,attributes,in,a,locally,isolated,session,or,default,session,if,there,is,no,distinction,between,a,global,session,and,a,component,specific,session;public,session,scope,this,scope,request,attributes
SessionScope -> public SessionScope();1385412762;Create a new SessionScope, storing attributes in a locally_isolated session (or default session, if there is no distinction_between a global session and a component-specific session).;public SessionScope() {_		this.scope = RequestAttributes.SCOPE_SESSION__	};create,a,new,session,scope,storing,attributes,in,a,locally,isolated,session,or,default,session,if,there,is,no,distinction,between,a,global,session,and,a,component,specific,session;public,session,scope,this,scope,request,attributes
SessionScope -> public SessionScope(boolean globalSession);1328020251;Create a new SessionScope, specifying whether to store attributes_in the global session, provided that such a distinction is available._<p>This distinction is important for Portlet environments, where there_are two notions of a session: "portlet scope" and "application scope"._If this flag is on, objects will be put into the "application scope" session__else they will end up in the "portlet scope" session (the typical default)._<p>In a Servlet environment, this flag is effectively ignored._@param globalSession <code>true</code> in case of the global session as target__<code>false</code> in case of a component-specific session as target_@see org.springframework.web.portlet.context.PortletRequestAttributes_@see org.springframework.web.context.request.ServletRequestAttributes;public SessionScope(boolean globalSession) {_		this.scope = (globalSession ? RequestAttributes.SCOPE_GLOBAL_SESSION : RequestAttributes.SCOPE_SESSION)__	};create,a,new,session,scope,specifying,whether,to,store,attributes,in,the,global,session,provided,that,such,a,distinction,is,available,p,this,distinction,is,important,for,portlet,environments,where,there,are,two,notions,of,a,session,portlet,scope,and,application,scope,if,this,flag,is,on,objects,will,be,put,into,the,application,scope,session,else,they,will,end,up,in,the,portlet,scope,session,the,typical,default,p,in,a,servlet,environment,this,flag,is,effectively,ignored,param,global,session,code,true,code,in,case,of,the,global,session,as,target,code,false,code,in,case,of,a,component,specific,session,as,target,see,org,springframework,web,portlet,context,portlet,request,attributes,see,org,springframework,web,context,request,servlet,request,attributes;public,session,scope,boolean,global,session,this,scope,global,session,request,attributes,request,attributes
SessionScope -> public SessionScope(boolean globalSession);1356735495;Create a new SessionScope, specifying whether to store attributes_in the global session, provided that such a distinction is available._<p>This distinction is important for Portlet environments, where there_are two notions of a session: "portlet scope" and "application scope"._If this flag is on, objects will be put into the "application scope" session__else they will end up in the "portlet scope" session (the typical default)._<p>In a Servlet environment, this flag is effectively ignored._@param globalSession {@code true} in case of the global session as target__{@code false} in case of a component-specific session as target_@see org.springframework.web.portlet.context.PortletRequestAttributes_@see ServletRequestAttributes;public SessionScope(boolean globalSession) {_		this.scope = (globalSession ? RequestAttributes.SCOPE_GLOBAL_SESSION : RequestAttributes.SCOPE_SESSION)__	};create,a,new,session,scope,specifying,whether,to,store,attributes,in,the,global,session,provided,that,such,a,distinction,is,available,p,this,distinction,is,important,for,portlet,environments,where,there,are,two,notions,of,a,session,portlet,scope,and,application,scope,if,this,flag,is,on,objects,will,be,put,into,the,application,scope,session,else,they,will,end,up,in,the,portlet,scope,session,the,typical,default,p,in,a,servlet,environment,this,flag,is,effectively,ignored,param,global,session,code,true,in,case,of,the,global,session,as,target,code,false,in,case,of,a,component,specific,session,as,target,see,org,springframework,web,portlet,context,portlet,request,attributes,see,servlet,request,attributes;public,session,scope,boolean,global,session,this,scope,global,session,request,attributes,request,attributes
SessionScope -> public SessionScope(boolean globalSession);1357119239;Create a new SessionScope, specifying whether to store attributes_in the global session, provided that such a distinction is available._<p>This distinction is important for Portlet environments, where there_are two notions of a session: "portlet scope" and "application scope"._If this flag is on, objects will be put into the "application scope" session__else they will end up in the "portlet scope" session (the typical default)._<p>In a Servlet environment, this flag is effectively ignored._@param globalSession {@code true} in case of the global session as target__{@code false} in case of a component-specific session as target_@see org.springframework.web.portlet.context.PortletRequestAttributes_@see ServletRequestAttributes;public SessionScope(boolean globalSession) {_		this.scope = (globalSession ? RequestAttributes.SCOPE_GLOBAL_SESSION : RequestAttributes.SCOPE_SESSION)__	};create,a,new,session,scope,specifying,whether,to,store,attributes,in,the,global,session,provided,that,such,a,distinction,is,available,p,this,distinction,is,important,for,portlet,environments,where,there,are,two,notions,of,a,session,portlet,scope,and,application,scope,if,this,flag,is,on,objects,will,be,put,into,the,application,scope,session,else,they,will,end,up,in,the,portlet,scope,session,the,typical,default,p,in,a,servlet,environment,this,flag,is,effectively,ignored,param,global,session,code,true,in,case,of,the,global,session,as,target,code,false,in,case,of,a,component,specific,session,as,target,see,org,springframework,web,portlet,context,portlet,request,attributes,see,servlet,request,attributes;public,session,scope,boolean,global,session,this,scope,global,session,request,attributes,request,attributes
SessionScope -> public SessionScope(boolean globalSession);1368482696;Create a new SessionScope, specifying whether to store attributes_in the global session, provided that such a distinction is available._<p>This distinction is important for Portlet environments, where there_are two notions of a session: "portlet scope" and "application scope"._If this flag is on, objects will be put into the "application scope" session__else they will end up in the "portlet scope" session (the typical default)._<p>In a Servlet environment, this flag is effectively ignored._@param globalSession {@code true} in case of the global session as target__{@code false} in case of a component-specific session as target_@see org.springframework.web.portlet.context.PortletRequestAttributes_@see ServletRequestAttributes;public SessionScope(boolean globalSession) {_		this.scope = (globalSession ? RequestAttributes.SCOPE_GLOBAL_SESSION : RequestAttributes.SCOPE_SESSION)__	};create,a,new,session,scope,specifying,whether,to,store,attributes,in,the,global,session,provided,that,such,a,distinction,is,available,p,this,distinction,is,important,for,portlet,environments,where,there,are,two,notions,of,a,session,portlet,scope,and,application,scope,if,this,flag,is,on,objects,will,be,put,into,the,application,scope,session,else,they,will,end,up,in,the,portlet,scope,session,the,typical,default,p,in,a,servlet,environment,this,flag,is,effectively,ignored,param,global,session,code,true,in,case,of,the,global,session,as,target,code,false,in,case,of,a,component,specific,session,as,target,see,org,springframework,web,portlet,context,portlet,request,attributes,see,servlet,request,attributes;public,session,scope,boolean,global,session,this,scope,global,session,request,attributes,request,attributes
SessionScope -> public SessionScope(boolean globalSession);1385412762;Create a new SessionScope, specifying whether to store attributes_in the global session, provided that such a distinction is available._<p>This distinction is important for Portlet environments, where there_are two notions of a session: "portlet scope" and "application scope"._If this flag is on, objects will be put into the "application scope" session__else they will end up in the "portlet scope" session (the typical default)._<p>In a Servlet environment, this flag is effectively ignored._@param globalSession {@code true} in case of the global session as target__{@code false} in case of a component-specific session as target_@see org.springframework.web.portlet.context.PortletRequestAttributes_@see ServletRequestAttributes;public SessionScope(boolean globalSession) {_		this.scope = (globalSession ? RequestAttributes.SCOPE_GLOBAL_SESSION : RequestAttributes.SCOPE_SESSION)__	};create,a,new,session,scope,specifying,whether,to,store,attributes,in,the,global,session,provided,that,such,a,distinction,is,available,p,this,distinction,is,important,for,portlet,environments,where,there,are,two,notions,of,a,session,portlet,scope,and,application,scope,if,this,flag,is,on,objects,will,be,put,into,the,application,scope,session,else,they,will,end,up,in,the,portlet,scope,session,the,typical,default,p,in,a,servlet,environment,this,flag,is,effectively,ignored,param,global,session,code,true,in,case,of,the,global,session,as,target,code,false,in,case,of,a,component,specific,session,as,target,see,org,springframework,web,portlet,context,portlet,request,attributes,see,servlet,request,attributes;public,session,scope,boolean,global,session,this,scope,global,session,request,attributes,request,attributes
