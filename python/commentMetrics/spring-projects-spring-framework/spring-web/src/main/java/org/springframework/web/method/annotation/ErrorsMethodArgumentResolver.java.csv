commented;modifiers;parameterAmount;loc;comment;code
false;public;1;5;;@Override public boolean supportsParameter(MethodParameter parameter) {     Class<?> paramType = parameter.getParameterType().     return Errors.class.isAssignableFrom(paramType). }
false;public;4;20;;@Override @Nullable public Object resolveArgument(MethodParameter parameter, @Nullable ModelAndViewContainer mavContainer, NativeWebRequest webRequest, @Nullable WebDataBinderFactory binderFactory) throws Exception {     Assert.state(mavContainer != null, "Errors/BindingResult argument only supported on regular handler methods").     ModelMap model = mavContainer.getModel().     String lastKey = CollectionUtils.lastElement(model.keySet()).     if (lastKey != null && lastKey.startsWith(BindingResult.MODEL_KEY_PREFIX)) {         return model.get(lastKey).     }     throw new IllegalStateException("An Errors/BindingResult argument is expected to be declared immediately after " + "the model attribute, the @RequestBody or the @RequestPart arguments " + "to which they apply: " + parameter.getMethod()). }
