commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getMethodValue() {     return this.connection.getRequestMethod(). }
false;public;0;9;;@Override public URI getURI() {     try {         return this.connection.getURL().toURI().     } catch (URISyntaxException ex) {         throw new IllegalStateException("Could not get HttpURLConnection URI: " + ex.getMessage(), ex).     } }
false;public;0;20;;@Override public ClientHttpResponse call() throws Exception {     SimpleBufferingClientHttpRequest.addHeaders(connection, headers).     // JDK <1.8 doesn't support getOutputStream with HTTP DELETE     if (getMethod() == HttpMethod.DELETE && bufferedOutput.length == 0) {         connection.setDoOutput(false).     }     if (connection.getDoOutput() && outputStreaming) {         connection.setFixedLengthStreamingMode(bufferedOutput.length).     }     connection.connect().     if (connection.getDoOutput()) {         FileCopyUtils.copy(bufferedOutput, connection.getOutputStream()).     } else {         // Immediately trigger the request in a no-output scenario as well         connection.getResponseCode().     }     return new SimpleClientHttpResponse(connection). }
false;protected;2;27;;@Override protected ListenableFuture<ClientHttpResponse> executeInternal(final HttpHeaders headers, final byte[] bufferedOutput) throws IOException {     return this.taskExecutor.submitListenable(new Callable<ClientHttpResponse>() {          @Override         public ClientHttpResponse call() throws Exception {             SimpleBufferingClientHttpRequest.addHeaders(connection, headers).             // JDK <1.8 doesn't support getOutputStream with HTTP DELETE             if (getMethod() == HttpMethod.DELETE && bufferedOutput.length == 0) {                 connection.setDoOutput(false).             }             if (connection.getDoOutput() && outputStreaming) {                 connection.setFixedLengthStreamingMode(bufferedOutput.length).             }             connection.connect().             if (connection.getDoOutput()) {                 FileCopyUtils.copy(bufferedOutput, connection.getOutputStream()).             } else {                 // Immediately trigger the request in a no-output scenario as well                 connection.getResponseCode().             }             return new SimpleClientHttpResponse(connection).         }     }). }
