# id;timestamp;commentText;codeText;commentWords;codeWords
MappingJackson2SmileHttpMessageConverter -> public MappingJackson2SmileHttpMessageConverter(ObjectMapper objectMapper);1472548000;Construct a new {@code MappingJackson2SmileHttpMessageConverter} with a custom {@link ObjectMapper}_(must be configured with a {@code SmileFactory} instance)._You can use {@link Jackson2ObjectMapperBuilder} to build it easily._@see Jackson2ObjectMapperBuilder#smile();public MappingJackson2SmileHttpMessageConverter(ObjectMapper objectMapper) {_		super(objectMapper, new MediaType("application", "x-jackson-smile"))__		Assert.isAssignable(SmileFactory.class, objectMapper.getFactory().getClass())__	};construct,a,new,code,mapping,jackson2smile,http,message,converter,with,a,custom,link,object,mapper,must,be,configured,with,a,code,smile,factory,instance,you,can,use,link,jackson2object,mapper,builder,to,build,it,easily,see,jackson2object,mapper,builder,smile;public,mapping,jackson2smile,http,message,converter,object,mapper,object,mapper,super,object,mapper,new,media,type,application,x,jackson,smile,assert,is,assignable,smile,factory,class,object,mapper,get,factory,get,class
MappingJackson2SmileHttpMessageConverter -> public MappingJackson2SmileHttpMessageConverter(ObjectMapper objectMapper);1485810955;Construct a new {@code MappingJackson2SmileHttpMessageConverter} with a custom {@link ObjectMapper}_(must be configured with a {@code SmileFactory} instance)._You can use {@link Jackson2ObjectMapperBuilder} to build it easily._@see Jackson2ObjectMapperBuilder#smile();public MappingJackson2SmileHttpMessageConverter(ObjectMapper objectMapper) {_		super(objectMapper, new MediaType("application", "x-jackson-smile"))__		Assert.isInstanceOf(SmileFactory.class, objectMapper.getFactory(), "SmileFactory required")__	};construct,a,new,code,mapping,jackson2smile,http,message,converter,with,a,custom,link,object,mapper,must,be,configured,with,a,code,smile,factory,instance,you,can,use,link,jackson2object,mapper,builder,to,build,it,easily,see,jackson2object,mapper,builder,smile;public,mapping,jackson2smile,http,message,converter,object,mapper,object,mapper,super,object,mapper,new,media,type,application,x,jackson,smile,assert,is,instance,of,smile,factory,class,object,mapper,get,factory,smile,factory,required
MappingJackson2SmileHttpMessageConverter -> public MappingJackson2SmileHttpMessageConverter(ObjectMapper objectMapper);1495569556;Construct a new {@code MappingJackson2SmileHttpMessageConverter} with a custom {@link ObjectMapper}_(must be configured with a {@code SmileFactory} instance)._You can use {@link Jackson2ObjectMapperBuilder} to build it easily._@see Jackson2ObjectMapperBuilder#smile();public MappingJackson2SmileHttpMessageConverter(ObjectMapper objectMapper) {_		super(objectMapper, new MediaType("application", "x-jackson-smile"))__		Assert.isInstanceOf(SmileFactory.class, objectMapper.getFactory(), "SmileFactory required")__	};construct,a,new,code,mapping,jackson2smile,http,message,converter,with,a,custom,link,object,mapper,must,be,configured,with,a,code,smile,factory,instance,you,can,use,link,jackson2object,mapper,builder,to,build,it,easily,see,jackson2object,mapper,builder,smile;public,mapping,jackson2smile,http,message,converter,object,mapper,object,mapper,super,object,mapper,new,media,type,application,x,jackson,smile,assert,is,instance,of,smile,factory,class,object,mapper,get,factory,smile,factory,required
MappingJackson2SmileHttpMessageConverter -> public MappingJackson2SmileHttpMessageConverter();1472548000;Construct a new {@code MappingJackson2SmileHttpMessageConverter} using default configuration_provided by {@code Jackson2ObjectMapperBuilder}.;public MappingJackson2SmileHttpMessageConverter() {_		this(Jackson2ObjectMapperBuilder.smile().build())__	};construct,a,new,code,mapping,jackson2smile,http,message,converter,using,default,configuration,provided,by,code,jackson2object,mapper,builder;public,mapping,jackson2smile,http,message,converter,this,jackson2object,mapper,builder,smile,build
MappingJackson2SmileHttpMessageConverter -> public MappingJackson2SmileHttpMessageConverter();1485810955;Construct a new {@code MappingJackson2SmileHttpMessageConverter} using default configuration_provided by {@code Jackson2ObjectMapperBuilder}.;public MappingJackson2SmileHttpMessageConverter() {_		this(Jackson2ObjectMapperBuilder.smile().build())__	};construct,a,new,code,mapping,jackson2smile,http,message,converter,using,default,configuration,provided,by,code,jackson2object,mapper,builder;public,mapping,jackson2smile,http,message,converter,this,jackson2object,mapper,builder,smile,build
MappingJackson2SmileHttpMessageConverter -> public MappingJackson2SmileHttpMessageConverter();1495569556;Construct a new {@code MappingJackson2SmileHttpMessageConverter} using default configuration_provided by {@code Jackson2ObjectMapperBuilder}.;public MappingJackson2SmileHttpMessageConverter() {_		this(Jackson2ObjectMapperBuilder.smile().build())__	};construct,a,new,code,mapping,jackson2smile,http,message,converter,using,default,configuration,provided,by,code,jackson2object,mapper,builder;public,mapping,jackson2smile,http,message,converter,this,jackson2object,mapper,builder,smile,build
MappingJackson2SmileHttpMessageConverter -> @Override 	public void setObjectMapper(ObjectMapper objectMapper);1472548000;{@inheritDoc}_The {@code objectMapper} parameter must be configured with a {@code SmileFactory} instance.;@Override_	public void setObjectMapper(ObjectMapper objectMapper) {_		Assert.isAssignable(SmileFactory.class, objectMapper.getFactory().getClass())__		super.setObjectMapper(objectMapper)__	};inherit,doc,the,code,object,mapper,parameter,must,be,configured,with,a,code,smile,factory,instance;override,public,void,set,object,mapper,object,mapper,object,mapper,assert,is,assignable,smile,factory,class,object,mapper,get,factory,get,class,super,set,object,mapper,object,mapper
MappingJackson2SmileHttpMessageConverter -> @Override 	public void setObjectMapper(ObjectMapper objectMapper);1485810955;{@inheritDoc}_The {@code ObjectMapper} must be configured with a {@code SmileFactory} instance.;@Override_	public void setObjectMapper(ObjectMapper objectMapper) {_		Assert.isInstanceOf(SmileFactory.class, objectMapper.getFactory(), "SmileFactory required")__		super.setObjectMapper(objectMapper)__	};inherit,doc,the,code,object,mapper,must,be,configured,with,a,code,smile,factory,instance;override,public,void,set,object,mapper,object,mapper,object,mapper,assert,is,instance,of,smile,factory,class,object,mapper,get,factory,smile,factory,required,super,set,object,mapper,object,mapper
MappingJackson2SmileHttpMessageConverter -> @Override 	public void setObjectMapper(ObjectMapper objectMapper);1495569556;{@inheritDoc}_The {@code ObjectMapper} must be configured with a {@code SmileFactory} instance.;@Override_	public void setObjectMapper(ObjectMapper objectMapper) {_		Assert.isInstanceOf(SmileFactory.class, objectMapper.getFactory(), "SmileFactory required")__		super.setObjectMapper(objectMapper)__	};inherit,doc,the,code,object,mapper,must,be,configured,with,a,code,smile,factory,instance;override,public,void,set,object,mapper,object,mapper,object,mapper,assert,is,instance,of,smile,factory,class,object,mapper,get,factory,smile,factory,required,super,set,object,mapper,object,mapper
