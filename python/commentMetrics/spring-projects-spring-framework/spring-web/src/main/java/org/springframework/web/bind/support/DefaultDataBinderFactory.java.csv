commented;modifiers;parameterAmount;loc;comment;code
true;public,final;3;12;/**  * Create a new {@link WebDataBinder} for the given target object and  * initialize it through a {@link WebBindingInitializer}.  * @throws Exception in case of invalid state or arguments  */ ;/**  * Create a new {@link WebDataBinder} for the given target object and  * initialize it through a {@link WebBindingInitializer}.  * @throws Exception in case of invalid state or arguments  */ @Override @SuppressWarnings("deprecation") public final WebDataBinder createBinder(NativeWebRequest webRequest, @Nullable Object target, String objectName) throws Exception {     WebDataBinder dataBinder = createBinderInstance(target, objectName, webRequest).     if (this.initializer != null) {         this.initializer.initBinder(dataBinder, webRequest).     }     initBinder(dataBinder, webRequest).     return dataBinder. }
true;protected;3;5;/**  * Extension point to create the WebDataBinder instance.  * By default this is {@code WebRequestDataBinder}.  * @param target the binding target or {@code null} for type conversion only  * @param objectName the binding target object name  * @param webRequest the current request  * @throws Exception in case of invalid state or arguments  */ ;/**  * Extension point to create the WebDataBinder instance.  * By default this is {@code WebRequestDataBinder}.  * @param target the binding target or {@code null} for type conversion only  * @param objectName the binding target object name  * @param webRequest the current request  * @throws Exception in case of invalid state or arguments  */ protected WebDataBinder createBinderInstance(@Nullable Object target, String objectName, NativeWebRequest webRequest) throws Exception {     return new WebRequestDataBinder(target, objectName). }
true;protected;2;4;/**  * Extension point to further initialize the created data binder instance  * (e.g. with {@code @InitBinder} methods) after "global" initialization  * via {@link WebBindingInitializer}.  * @param dataBinder the data binder instance to customize  * @param webRequest the current request  * @throws Exception if initialization fails  */ ;/**  * Extension point to further initialize the created data binder instance  * (e.g. with {@code @InitBinder} methods) after "global" initialization  * via {@link WebBindingInitializer}.  * @param dataBinder the data binder instance to customize  * @param webRequest the current request  * @throws Exception if initialization fails  */ protected void initBinder(WebDataBinder dataBinder, NativeWebRequest webRequest) throws Exception { }
