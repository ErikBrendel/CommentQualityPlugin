commented;modifiers;parameterAmount;loc;comment;code
true;public,static;1;16;/**  * Process {@code @Autowired} injection for the given target object,  * based on the current web application context.  * <p>Intended for use as a delegate.  * @param target the target object to process  * @see org.springframework.web.context.ContextLoader#getCurrentWebApplicationContext()  */ ;/**  * Process {@code @Autowired} injection for the given target object,  * based on the current web application context.  * <p>Intended for use as a delegate.  * @param target the target object to process  * @see org.springframework.web.context.ContextLoader#getCurrentWebApplicationContext()  */ public static void processInjectionBasedOnCurrentContext(Object target) {     Assert.notNull(target, "Target object must not be null").     WebApplicationContext cc = ContextLoader.getCurrentWebApplicationContext().     if (cc != null) {         AutowiredAnnotationBeanPostProcessor bpp = new AutowiredAnnotationBeanPostProcessor().         bpp.setBeanFactory(cc.getAutowireCapableBeanFactory()).         bpp.processInjection(target).     } else {         if (logger.isDebugEnabled()) {             logger.debug("Current WebApplicationContext is not available for processing of " + ClassUtils.getShortName(target.getClass()) + ": " + "Make sure this class gets constructed in a Spring web application. Proceeding without injection.").         }     } }
true;public,static;2;7;/**  * Process {@code @Autowired} injection for the given target object,  * based on the current root web application context as stored in the ServletContext.  * <p>Intended for use as a delegate.  * @param target the target object to process  * @param servletContext the ServletContext to find the Spring web application context in  * @see WebApplicationContextUtils#getWebApplicationContext(javax.servlet.ServletContext)  */ ;/**  * Process {@code @Autowired} injection for the given target object,  * based on the current root web application context as stored in the ServletContext.  * <p>Intended for use as a delegate.  * @param target the target object to process  * @param servletContext the ServletContext to find the Spring web application context in  * @see WebApplicationContextUtils#getWebApplicationContext(javax.servlet.ServletContext)  */ public static void processInjectionBasedOnServletContext(Object target, ServletContext servletContext) {     Assert.notNull(target, "Target object must not be null").     WebApplicationContext cc = WebApplicationContextUtils.getRequiredWebApplicationContext(servletContext).     AutowiredAnnotationBeanPostProcessor bpp = new AutowiredAnnotationBeanPostProcessor().     bpp.setBeanFactory(cc.getAutowireCapableBeanFactory()).     bpp.processInjection(target). }
