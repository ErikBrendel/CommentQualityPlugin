# id;timestamp;commentText;codeText;commentWords;codeWords
HttpComponentsClientHttpRequestFactory -> @Override 	public void destroy() throws Exception;1377627757;Shutdown hook that closes the underlying_{@link org.apache.http.conn.ClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;@Override_	public void destroy() throws Exception {_		getHttpClient().getConnectionManager().shutdown()__	};shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,client,connection,manager,client,connection,manager,s,connection,pool,if,any;override,public,void,destroy,throws,exception,get,http,client,get,connection,manager,shutdown
HttpComponentsClientHttpRequestFactory -> @Override 	public void destroy() throws Exception;1377782656;Shutdown hook that closes the underlying_{@link org.apache.http.conn.HttpClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;@Override_	public void destroy() throws Exception {_        httpClient.close()__    };shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,http,client,connection,manager,client,connection,manager,s,connection,pool,if,any;override,public,void,destroy,throws,exception,http,client,close
HttpComponentsClientHttpRequestFactory -> @Override 	public void destroy() throws Exception;1383229571;Shutdown hook that closes the underlying_{@link org.apache.http.conn.HttpClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;@Override_	public void destroy() throws Exception {_        this.httpClient.close()__    };shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,http,client,connection,manager,client,connection,manager,s,connection,pool,if,any;override,public,void,destroy,throws,exception,this,http,client,close
HttpComponentsClientHttpRequestFactory -> @Override 	public void destroy() throws Exception;1383232235;Shutdown hook that closes the underlying_{@link org.apache.http.conn.HttpClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;@Override_	public void destroy() throws Exception {_        this.httpClient.close()__    };shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,http,client,connection,manager,client,connection,manager,s,connection,pool,if,any;override,public,void,destroy,throws,exception,this,http,client,close
HttpComponentsClientHttpRequestFactory -> @Override 	public void destroy() throws Exception;1391439900;Shutdown hook that closes the underlying_{@link org.apache.http.conn.HttpClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;@Override_	public void destroy() throws Exception {_        this.httpClient.close()__    };shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,http,client,connection,manager,client,connection,manager,s,connection,pool,if,any;override,public,void,destroy,throws,exception,this,http,client,close
HttpComponentsClientHttpRequestFactory -> @Override 	public void destroy() throws Exception;1394111906;Shutdown hook that closes the underlying_{@link org.apache.http.conn.HttpClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;@Override_	public void destroy() throws Exception {_        this.httpClient.close()__    };shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,http,client,connection,manager,client,connection,manager,s,connection,pool,if,any;override,public,void,destroy,throws,exception,this,http,client,close
HttpComponentsClientHttpRequestFactory -> @Override 	public void destroy() throws Exception;1394469729;Shutdown hook that closes the underlying_{@link org.apache.http.conn.HttpClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;@Override_	public void destroy() throws Exception {_        this.httpClient.close()__    };shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,http,client,connection,manager,client,connection,manager,s,connection,pool,if,any;override,public,void,destroy,throws,exception,this,http,client,close
HttpComponentsClientHttpRequestFactory -> @Override 	public void destroy() throws Exception;1394472663;Shutdown hook that closes the underlying_{@link org.apache.http.conn.HttpClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;@Override_	public void destroy() throws Exception {_        this.httpClient.close()__    };shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,http,client,connection,manager,client,connection,manager,s,connection,pool,if,any;override,public,void,destroy,throws,exception,this,http,client,close
HttpComponentsClientHttpRequestFactory -> @Override 	public void destroy() throws Exception;1412780546;Shutdown hook that closes the underlying_{@link org.apache.http.conn.HttpClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;@Override_	public void destroy() throws Exception {_		this.httpClient.close()__	};shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,http,client,connection,manager,client,connection,manager,s,connection,pool,if,any;override,public,void,destroy,throws,exception,this,http,client,close
HttpComponentsClientHttpRequestFactory -> @Override 	public void destroy() throws Exception;1414442939;Shutdown hook that closes the underlying_{@link org.apache.http.conn.HttpClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;@Override_	public void destroy() throws Exception {_		this.httpClient.close()__	};shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,http,client,connection,manager,client,connection,manager,s,connection,pool,if,any;override,public,void,destroy,throws,exception,this,http,client,close
HttpComponentsClientHttpRequestFactory -> @Override 	public void destroy() throws Exception;1419262267;Shutdown hook that closes the underlying_{@link org.apache.http.conn.HttpClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;@Override_	public void destroy() throws Exception {_		this.httpClient.close()__	};shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,http,client,connection,manager,client,connection,manager,s,connection,pool,if,any;override,public,void,destroy,throws,exception,this,http,client,close
HttpComponentsClientHttpRequestFactory -> @Override 	public void destroy() throws Exception;1419842214;Shutdown hook that closes the underlying_{@link org.apache.http.conn.HttpClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;@Override_	public void destroy() throws Exception {_		this.httpClient.close()__	};shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,http,client,connection,manager,client,connection,manager,s,connection,pool,if,any;override,public,void,destroy,throws,exception,this,http,client,close
HttpComponentsClientHttpRequestFactory -> @Override 	public void destroy() throws Exception;1420464527;Shutdown hook that closes the underlying_{@link org.apache.http.conn.HttpClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;@Override_	public void destroy() throws Exception {_		this.httpClient.close()__	};shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,http,client,connection,manager,client,connection,manager,s,connection,pool,if,any;override,public,void,destroy,throws,exception,this,http,client,close
HttpComponentsClientHttpRequestFactory -> @Override 	public void destroy() throws Exception;1426623891;Shutdown hook that closes the underlying_{@link org.apache.http.conn.HttpClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;@Override_	public void destroy() throws Exception {_		if (this.httpClient instanceof Closeable) {_			((Closeable) this.httpClient).close()__		}_	};shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,http,client,connection,manager,client,connection,manager,s,connection,pool,if,any;override,public,void,destroy,throws,exception,if,this,http,client,instanceof,closeable,closeable,this,http,client,close
HttpComponentsClientHttpRequestFactory -> @Override 	public void destroy() throws Exception;1434384787;Shutdown hook that closes the underlying_{@link org.apache.http.conn.HttpClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;@Override_	public void destroy() throws Exception {_		if (this.httpClient instanceof Closeable) {_			((Closeable) this.httpClient).close()__		}_	};shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,http,client,connection,manager,client,connection,manager,s,connection,pool,if,any;override,public,void,destroy,throws,exception,if,this,http,client,instanceof,closeable,closeable,this,http,client,close
HttpComponentsClientHttpRequestFactory -> @Override 	public void destroy() throws Exception;1436200220;Shutdown hook that closes the underlying_{@link org.apache.http.conn.HttpClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;@Override_	public void destroy() throws Exception {_		if (this.httpClient instanceof Closeable) {_			((Closeable) this.httpClient).close()__		}_	};shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,http,client,connection,manager,client,connection,manager,s,connection,pool,if,any;override,public,void,destroy,throws,exception,if,this,http,client,instanceof,closeable,closeable,this,http,client,close
HttpComponentsClientHttpRequestFactory -> @Override 	public void destroy() throws Exception;1438251337;Shutdown hook that closes the underlying_{@link org.apache.http.conn.HttpClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;@Override_	public void destroy() throws Exception {_		if (this.httpClient instanceof Closeable) {_			((Closeable) this.httpClient).close()__		}_	};shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,http,client,connection,manager,client,connection,manager,s,connection,pool,if,any;override,public,void,destroy,throws,exception,if,this,http,client,instanceof,closeable,closeable,this,http,client,close
HttpComponentsClientHttpRequestFactory -> @Override 	public void destroy() throws Exception;1449660489;Shutdown hook that closes the underlying_{@link org.apache.http.conn.HttpClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;@Override_	public void destroy() throws Exception {_		if (this.httpClient instanceof Closeable) {_			((Closeable) this.httpClient).close()__		}_	};shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,http,client,connection,manager,client,connection,manager,s,connection,pool,if,any;override,public,void,destroy,throws,exception,if,this,http,client,instanceof,closeable,closeable,this,http,client,close
HttpComponentsClientHttpRequestFactory -> @Override 	public void destroy() throws Exception;1467375086;Shutdown hook that closes the underlying_{@link org.apache.http.conn.HttpClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;@Override_	public void destroy() throws Exception {_		if (this.httpClient instanceof Closeable) {_			((Closeable) this.httpClient).close()__		}_	};shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,http,client,connection,manager,client,connection,manager,s,connection,pool,if,any;override,public,void,destroy,throws,exception,if,this,http,client,instanceof,closeable,closeable,this,http,client,close
HttpComponentsClientHttpRequestFactory -> @Override 	public void destroy() throws Exception;1467667302;Shutdown hook that closes the underlying_{@link org.apache.http.conn.HttpClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;@Override_	public void destroy() throws Exception {_		if (this.httpClient instanceof Closeable) {_			((Closeable) this.httpClient).close()__		}_	};shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,http,client,connection,manager,client,connection,manager,s,connection,pool,if,any;override,public,void,destroy,throws,exception,if,this,http,client,instanceof,closeable,closeable,this,http,client,close
HttpComponentsClientHttpRequestFactory -> @Override 	public void destroy() throws Exception;1468600707;Shutdown hook that closes the underlying_{@link org.apache.http.conn.HttpClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;@Override_	public void destroy() throws Exception {_		if (this.httpClient instanceof Closeable) {_			((Closeable) this.httpClient).close()__		}_	};shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,http,client,connection,manager,client,connection,manager,s,connection,pool,if,any;override,public,void,destroy,throws,exception,if,this,http,client,instanceof,closeable,closeable,this,http,client,close
HttpComponentsClientHttpRequestFactory -> @Override 	public void destroy() throws Exception;1495868221;Shutdown hook that closes the underlying_{@link org.apache.http.conn.HttpClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;@Override_	public void destroy() throws Exception {_		if (this.httpClient instanceof Closeable) {_			((Closeable) this.httpClient).close()__		}_	};shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,http,client,connection,manager,client,connection,manager,s,connection,pool,if,any;override,public,void,destroy,throws,exception,if,this,http,client,instanceof,closeable,closeable,this,http,client,close
HttpComponentsClientHttpRequestFactory -> @Override 	public void destroy() throws Exception;1496837955;Shutdown hook that closes the underlying_{@link org.apache.http.conn.HttpClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;@Override_	public void destroy() throws Exception {_		if (this.httpClient instanceof Closeable) {_			((Closeable) this.httpClient).close()__		}_	};shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,http,client,connection,manager,client,connection,manager,s,connection,pool,if,any;override,public,void,destroy,throws,exception,if,this,http,client,instanceof,closeable,closeable,this,http,client,close
HttpComponentsClientHttpRequestFactory -> @Override 	public void destroy() throws Exception;1497453044;Shutdown hook that closes the underlying_{@link org.apache.http.conn.HttpClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;@Override_	public void destroy() throws Exception {_		HttpClient httpClient = getHttpClient()__		if (httpClient instanceof Closeable) {_			((Closeable) httpClient).close()__		}_	};shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,http,client,connection,manager,client,connection,manager,s,connection,pool,if,any;override,public,void,destroy,throws,exception,http,client,http,client,get,http,client,if,http,client,instanceof,closeable,closeable,http,client,close
HttpComponentsClientHttpRequestFactory -> @Override 	public void destroy() throws Exception;1498780456;Shutdown hook that closes the underlying_{@link org.apache.http.conn.HttpClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;@Override_	public void destroy() throws Exception {_		HttpClient httpClient = getHttpClient()__		if (httpClient instanceof Closeable) {_			((Closeable) httpClient).close()__		}_	};shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,http,client,connection,manager,client,connection,manager,s,connection,pool,if,any;override,public,void,destroy,throws,exception,http,client,http,client,get,http,client,if,http,client,instanceof,closeable,closeable,http,client,close
HttpComponentsClientHttpRequestFactory -> @Override 	public void destroy() throws Exception;1500416137;Shutdown hook that closes the underlying_{@link org.apache.http.conn.HttpClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;@Override_	public void destroy() throws Exception {_		HttpClient httpClient = getHttpClient()__		if (httpClient instanceof Closeable) {_			((Closeable) httpClient).close()__		}_	};shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,http,client,connection,manager,client,connection,manager,s,connection,pool,if,any;override,public,void,destroy,throws,exception,http,client,http,client,get,http,client,if,http,client,instanceof,closeable,closeable,http,client,close
HttpComponentsClientHttpRequestFactory -> @Override 	public void destroy() throws Exception;1520890308;Shutdown hook that closes the underlying_{@link org.apache.http.conn.HttpClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;@Override_	public void destroy() throws Exception {_		HttpClient httpClient = getHttpClient()__		if (httpClient instanceof Closeable) {_			((Closeable) httpClient).close()__		}_	};shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,http,client,connection,manager,client,connection,manager,s,connection,pool,if,any;override,public,void,destroy,throws,exception,http,client,http,client,get,http,client,if,http,client,instanceof,closeable,closeable,http,client,close
HttpComponentsClientHttpRequestFactory -> @Override 	public void destroy() throws Exception;1523025317;Shutdown hook that closes the underlying_{@link org.apache.http.conn.HttpClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;@Override_	public void destroy() throws Exception {_		HttpClient httpClient = getHttpClient()__		if (httpClient instanceof Closeable) {_			((Closeable) httpClient).close()__		}_	};shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,http,client,connection,manager,client,connection,manager,s,connection,pool,if,any;override,public,void,destroy,throws,exception,http,client,http,client,get,http,client,if,http,client,instanceof,closeable,closeable,http,client,close
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1328020251;Set the socket read timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		getHttpClient().getParams().setIntParameter(CoreConnectionPNames.SO_TIMEOUT, timeout)__	};set,the,socket,read,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,get,http,client,get,params,set,int,parameter,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1340398642;Set the socket read timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		getHttpClient().getParams().setIntParameter(CoreConnectionPNames.SO_TIMEOUT, timeout)__	};set,the,socket,read,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,get,http,client,get,params,set,int,parameter,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1340648015;Set the socket read timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		getHttpClient().getParams().setIntParameter(CoreConnectionPNames.SO_TIMEOUT, timeout)__	};set,the,socket,read,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,get,http,client,get,params,set,int,parameter,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1349872133;Set the socket read timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		getHttpClient().getParams().setIntParameter(CoreConnectionPNames.SO_TIMEOUT, timeout)__	};set,the,socket,read,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,get,http,client,get,params,set,int,parameter,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1356735495;Set the socket read timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		getHttpClient().getParams().setIntParameter(CoreConnectionPNames.SO_TIMEOUT, timeout)__	};set,the,socket,read,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,get,http,client,get,params,set,int,parameter,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1357119239;Set the socket read timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		getHttpClient().getParams().setIntParameter(CoreConnectionPNames.SO_TIMEOUT, timeout)__	};set,the,socket,read,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,get,http,client,get,params,set,int,parameter,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1368482696;Set the socket read timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		getHttpClient().getParams().setIntParameter(CoreConnectionPNames.SO_TIMEOUT, timeout)__	};set,the,socket,read,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,get,http,client,get,params,set,int,parameter,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1374115410;Set the socket read timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		getHttpClient().getParams().setIntParameter(CoreConnectionPNames.SO_TIMEOUT, timeout)__	};set,the,socket,read,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,get,http,client,get,params,set,int,parameter,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1377782656;Set the socket read timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__        this.socketTimeout= timeout__	};set,the,socket,read,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,socket,timeout,timeout
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1383229571;Set the socket read timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__        this.socketTimeout= timeout__	};set,the,socket,read,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,socket,timeout,timeout
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1383232235;Set the socket read timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__        this.socketTimeout= timeout__	};set,the,socket,read,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,socket,timeout,timeout
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1391439900;Set the socket read timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__        this.socketTimeout= timeout__	};set,the,socket,read,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,socket,timeout,timeout
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1394111906;Set the socket read timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__        this.socketTimeout= timeout__	};set,the,socket,read,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,socket,timeout,timeout
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1394469729;Set the socket read timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__        this.socketTimeout= timeout__		setLegacyReadTimeout(getHttpClient(), socketTimeout)__	};set,the,socket,read,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,socket,timeout,timeout,set,legacy,read,timeout,get,http,client,socket,timeout
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1394472663;Set the socket read timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__        this.socketTimeout = timeout__		setLegacySocketTimeout(getHttpClient(), timeout)__	};set,the,socket,read,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,socket,timeout,timeout,set,legacy,socket,timeout,get,http,client,timeout
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1412780546;Set the socket read timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.socketTimeout = timeout__		setLegacySocketTimeout(getHttpClient(), timeout)__	};set,the,socket,read,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,socket,timeout,timeout,set,legacy,socket,timeout,get,http,client,timeout
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1414442939;Set the socket read timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.socketTimeout = timeout__		setLegacySocketTimeout(getHttpClient(), timeout)__	};set,the,socket,read,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,socket,timeout,timeout,set,legacy,socket,timeout,get,http,client,timeout
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1419262267;Set the socket read timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.socketTimeout = timeout__		setLegacySocketTimeout(getHttpClient(), timeout)__	};set,the,socket,read,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,socket,timeout,timeout,set,legacy,socket,timeout,get,http,client,timeout
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1419842214;Set the socket read timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param timeout the timeout value in milliseconds_@see RequestConfig#getSocketTimeout();public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.requestConfig = cloneRequestConfig()_				.setSocketTimeout(timeout).build()__		setLegacySocketTimeout(getHttpClient(), timeout)__	};set,the,socket,read,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,timeout,the,timeout,value,in,milliseconds,see,request,config,get,socket,timeout;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,request,config,clone,request,config,set,socket,timeout,timeout,build,set,legacy,socket,timeout,get,http,client,timeout
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1420464527;Set the socket read timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param timeout the timeout value in milliseconds_@see RequestConfig#getSocketTimeout();public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.requestConfig = cloneRequestConfig()_				.setSocketTimeout(timeout).build()__		setLegacySocketTimeout(getHttpClient(), timeout)__	};set,the,socket,read,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,timeout,the,timeout,value,in,milliseconds,see,request,config,get,socket,timeout;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,request,config,clone,request,config,set,socket,timeout,timeout,build,set,legacy,socket,timeout,get,http,client,timeout
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1426623891;Set the socket read timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param timeout the timeout value in milliseconds_@see RequestConfig#getSocketTimeout();public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.requestConfig = cloneRequestConfig()_				.setSocketTimeout(timeout).build()__		setLegacySocketTimeout(getHttpClient(), timeout)__	};set,the,socket,read,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,timeout,the,timeout,value,in,milliseconds,see,request,config,get,socket,timeout;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,request,config,clone,request,config,set,socket,timeout,timeout,build,set,legacy,socket,timeout,get,http,client,timeout
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1434384787;Set the socket read timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param timeout the timeout value in milliseconds_@see RequestConfig#getSocketTimeout();public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.requestConfig = cloneRequestConfig()_				.setSocketTimeout(timeout).build()__		setLegacySocketTimeout(getHttpClient(), timeout)__	};set,the,socket,read,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,timeout,the,timeout,value,in,milliseconds,see,request,config,get,socket,timeout;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,request,config,clone,request,config,set,socket,timeout,timeout,build,set,legacy,socket,timeout,get,http,client,timeout
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1436200220;Set the socket read timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param timeout the timeout value in milliseconds_@see RequestConfig#getSocketTimeout();public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.requestConfig = cloneRequestConfig()_				.setSocketTimeout(timeout).build()__		setLegacySocketTimeout(getHttpClient(), timeout)__	};set,the,socket,read,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,timeout,the,timeout,value,in,milliseconds,see,request,config,get,socket,timeout;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,request,config,clone,request,config,set,socket,timeout,timeout,build,set,legacy,socket,timeout,get,http,client,timeout
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1438251337;Set the socket read timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param timeout the timeout value in milliseconds_@see RequestConfig#getSocketTimeout();public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.requestConfig = requestConfigBuilder().setSocketTimeout(timeout).build()__		setLegacySocketTimeout(getHttpClient(), timeout)__	};set,the,socket,read,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,timeout,the,timeout,value,in,milliseconds,see,request,config,get,socket,timeout;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,request,config,request,config,builder,set,socket,timeout,timeout,build,set,legacy,socket,timeout,get,http,client,timeout
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1449660489;Set the socket read timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param timeout the timeout value in milliseconds_@see RequestConfig#getSocketTimeout();public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.requestConfig = requestConfigBuilder().setSocketTimeout(timeout).build()__		setLegacySocketTimeout(getHttpClient(), timeout)__	};set,the,socket,read,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,timeout,the,timeout,value,in,milliseconds,see,request,config,get,socket,timeout;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,request,config,request,config,builder,set,socket,timeout,timeout,build,set,legacy,socket,timeout,get,http,client,timeout
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1467375086;Set the socket read timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param timeout the timeout value in milliseconds_@see RequestConfig#getSocketTimeout();public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.requestConfig = requestConfigBuilder().setSocketTimeout(timeout).build()__		setLegacySocketTimeout(getHttpClient(), timeout)__	};set,the,socket,read,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,timeout,the,timeout,value,in,milliseconds,see,request,config,get,socket,timeout;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,request,config,request,config,builder,set,socket,timeout,timeout,build,set,legacy,socket,timeout,get,http,client,timeout
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1467667302;Set the socket read timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param timeout the timeout value in milliseconds_@see RequestConfig#getSocketTimeout();public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.requestConfig = requestConfigBuilder().setSocketTimeout(timeout).build()__	};set,the,socket,read,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,timeout,the,timeout,value,in,milliseconds,see,request,config,get,socket,timeout;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,request,config,request,config,builder,set,socket,timeout,timeout,build
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1468600707;Set the socket read timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param timeout the timeout value in milliseconds_@see RequestConfig#getSocketTimeout();public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.requestConfig = requestConfigBuilder().setSocketTimeout(timeout).build()__	};set,the,socket,read,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,timeout,the,timeout,value,in,milliseconds,see,request,config,get,socket,timeout;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,request,config,request,config,builder,set,socket,timeout,timeout,build
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1495868221;Set the socket read timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param timeout the timeout value in milliseconds_@see RequestConfig#getSocketTimeout();public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.requestConfig = requestConfigBuilder().setSocketTimeout(timeout).build()__	};set,the,socket,read,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,timeout,the,timeout,value,in,milliseconds,see,request,config,get,socket,timeout;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,request,config,request,config,builder,set,socket,timeout,timeout,build
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1496837955;Set the socket read timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param timeout the timeout value in milliseconds_@see RequestConfig#getSocketTimeout();public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.requestConfig = requestConfigBuilder().setSocketTimeout(timeout).build()__	};set,the,socket,read,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,timeout,the,timeout,value,in,milliseconds,see,request,config,get,socket,timeout;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,request,config,request,config,builder,set,socket,timeout,timeout,build
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1497453044;Set the socket read timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param timeout the timeout value in milliseconds_@see RequestConfig#getSocketTimeout();public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.requestConfig = requestConfigBuilder().setSocketTimeout(timeout).build()__	};set,the,socket,read,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,timeout,the,timeout,value,in,milliseconds,see,request,config,get,socket,timeout;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,request,config,request,config,builder,set,socket,timeout,timeout,build
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1498780456;Set the socket read timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param timeout the timeout value in milliseconds_@see RequestConfig#getSocketTimeout();public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.requestConfig = requestConfigBuilder().setSocketTimeout(timeout).build()__	};set,the,socket,read,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,timeout,the,timeout,value,in,milliseconds,see,request,config,get,socket,timeout;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,request,config,request,config,builder,set,socket,timeout,timeout,build
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1500416137;Set the socket read timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param timeout the timeout value in milliseconds_@see RequestConfig#getSocketTimeout();public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.requestConfig = requestConfigBuilder().setSocketTimeout(timeout).build()__	};set,the,socket,read,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,timeout,the,timeout,value,in,milliseconds,see,request,config,get,socket,timeout;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,request,config,request,config,builder,set,socket,timeout,timeout,build
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1520890308;Set the socket read timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param timeout the timeout value in milliseconds_@see RequestConfig#getSocketTimeout();public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.requestConfig = requestConfigBuilder().setSocketTimeout(timeout).build()__	};set,the,socket,read,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,timeout,the,timeout,value,in,milliseconds,see,request,config,get,socket,timeout;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,request,config,request,config,builder,set,socket,timeout,timeout,build
HttpComponentsClientHttpRequestFactory -> public void setReadTimeout(int timeout);1523025317;Set the socket read timeout for the underlying {@link RequestConfig}._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param timeout the timeout value in milliseconds_@see RequestConfig#getSocketTimeout();public void setReadTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.requestConfig = requestConfigBuilder().setSocketTimeout(timeout).build()__	};set,the,socket,read,timeout,for,the,underlying,link,request,config,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,timeout,the,timeout,value,in,milliseconds,see,request,config,get,socket,timeout;public,void,set,read,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,request,config,request,config,builder,set,socket,timeout,timeout,build
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1328020251;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1340398642;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1340648015;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1349872133;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1356735495;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1357119239;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1368482696;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1374115410;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1377627757;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1377782656;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1383229571;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1383232235;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1391439900;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1394111906;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1394469729;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1394472663;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1412780546;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1414442939;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1419262267;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1419842214;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1420464527;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1426623891;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1434384787;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1436200220;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1438251337;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1449660489;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1467375086;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1467667302;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1468600707;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1495868221;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1496837955;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1497453044;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1498780456;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1500416137;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1520890308;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> protected void postProcessHttpRequest(HttpUriRequest request);1523025317;Template method that allows for manipulating the {@link HttpUriRequest} before it is_returned as part of a {@link HttpComponentsClientHttpRequest}._<p>The default implementation is empty._@param request the request to process;protected void postProcessHttpRequest(HttpUriRequest request) {_	};template,method,that,allows,for,manipulating,the,link,http,uri,request,before,it,is,returned,as,part,of,a,link,http,components,client,http,request,p,the,default,implementation,is,empty,param,request,the,request,to,process;protected,void,post,process,http,request,http,uri,request,request
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1328020251;Set the connection timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		getHttpClient().getParams().setIntParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, timeout)__	};set,the,connection,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,get,http,client,get,params,set,int,parameter,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1340398642;Set the connection timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		getHttpClient().getParams().setIntParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, timeout)__	};set,the,connection,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,get,http,client,get,params,set,int,parameter,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1340648015;Set the connection timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		getHttpClient().getParams().setIntParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, timeout)__	};set,the,connection,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,get,http,client,get,params,set,int,parameter,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1349872133;Set the connection timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		getHttpClient().getParams().setIntParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, timeout)__	};set,the,connection,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,get,http,client,get,params,set,int,parameter,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1356735495;Set the connection timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		getHttpClient().getParams().setIntParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, timeout)__	};set,the,connection,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,get,http,client,get,params,set,int,parameter,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1357119239;Set the connection timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		getHttpClient().getParams().setIntParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, timeout)__	};set,the,connection,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,get,http,client,get,params,set,int,parameter,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1368482696;Set the connection timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		getHttpClient().getParams().setIntParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, timeout)__	};set,the,connection,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,get,http,client,get,params,set,int,parameter,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1374115410;Set the connection timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		getHttpClient().getParams().setIntParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, timeout)__	};set,the,connection,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,get,http,client,get,params,set,int,parameter,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1377782656;Set the connection timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__        this.connectTimeout = timeout__	};set,the,connection,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,connect,timeout,timeout
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1383229571;Set the connection timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__        this.connectTimeout = timeout__	};set,the,connection,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,connect,timeout,timeout
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1383232235;Set the connection timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__        this.connectTimeout = timeout__	};set,the,connection,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,connect,timeout,timeout
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1391439900;Set the connection timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__        this.connectTimeout = timeout__	};set,the,connection,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,connect,timeout,timeout
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1394111906;Set the connection timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__        this.connectTimeout = timeout__	};set,the,connection,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,connect,timeout,timeout
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1394469729;Set the connection timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__        this.connectTimeout = timeout__		setLegacyConnectionTimeout(getHttpClient(), connectTimeout)__	};set,the,connection,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,connect,timeout,timeout,set,legacy,connection,timeout,get,http,client,connect,timeout
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1394472663;Set the connection timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__        this.connectTimeout = timeout__		setLegacyConnectionTimeout(getHttpClient(), timeout)__	};set,the,connection,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,connect,timeout,timeout,set,legacy,connection,timeout,get,http,client,timeout
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1412780546;Set the connection timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.connectTimeout = timeout__		setLegacyConnectionTimeout(getHttpClient(), timeout)__	};set,the,connection,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,connect,timeout,timeout,set,legacy,connection,timeout,get,http,client,timeout
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1414442939;Set the connection timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.connectTimeout = timeout__		setLegacyConnectionTimeout(getHttpClient(), timeout)__	};set,the,connection,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,connect,timeout,timeout,set,legacy,connection,timeout,get,http,client,timeout
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1419262267;Set the connection timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param timeout the timeout value in milliseconds;public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.connectTimeout = timeout__		setLegacyConnectionTimeout(getHttpClient(), timeout)__	};set,the,connection,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,timeout,the,timeout,value,in,milliseconds;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,connect,timeout,timeout,set,legacy,connection,timeout,get,http,client,timeout
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1419842214;Set the connection timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param timeout the timeout value in milliseconds_@see RequestConfig#getConnectTimeout();public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.requestConfig = cloneRequestConfig()_				.setConnectTimeout(timeout).build()__		setLegacyConnectionTimeout(getHttpClient(), timeout)__	};set,the,connection,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,timeout,the,timeout,value,in,milliseconds,see,request,config,get,connect,timeout;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,request,config,clone,request,config,set,connect,timeout,timeout,build,set,legacy,connection,timeout,get,http,client,timeout
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1420464527;Set the connection timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param timeout the timeout value in milliseconds_@see RequestConfig#getConnectTimeout();public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.requestConfig = cloneRequestConfig()_				.setConnectTimeout(timeout).build()__		setLegacyConnectionTimeout(getHttpClient(), timeout)__	};set,the,connection,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,timeout,the,timeout,value,in,milliseconds,see,request,config,get,connect,timeout;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,request,config,clone,request,config,set,connect,timeout,timeout,build,set,legacy,connection,timeout,get,http,client,timeout
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1426623891;Set the connection timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param timeout the timeout value in milliseconds_@see RequestConfig#getConnectTimeout();public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.requestConfig = cloneRequestConfig()_				.setConnectTimeout(timeout).build()__		setLegacyConnectionTimeout(getHttpClient(), timeout)__	};set,the,connection,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,timeout,the,timeout,value,in,milliseconds,see,request,config,get,connect,timeout;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,request,config,clone,request,config,set,connect,timeout,timeout,build,set,legacy,connection,timeout,get,http,client,timeout
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1434384787;Set the connection timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param timeout the timeout value in milliseconds_@see RequestConfig#getConnectTimeout();public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.requestConfig = cloneRequestConfig()_				.setConnectTimeout(timeout).build()__		setLegacyConnectionTimeout(getHttpClient(), timeout)__	};set,the,connection,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,timeout,the,timeout,value,in,milliseconds,see,request,config,get,connect,timeout;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,request,config,clone,request,config,set,connect,timeout,timeout,build,set,legacy,connection,timeout,get,http,client,timeout
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1436200220;Set the connection timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param timeout the timeout value in milliseconds_@see RequestConfig#getConnectTimeout();public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.requestConfig = cloneRequestConfig()_				.setConnectTimeout(timeout).build()__		setLegacyConnectionTimeout(getHttpClient(), timeout)__	};set,the,connection,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,timeout,the,timeout,value,in,milliseconds,see,request,config,get,connect,timeout;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,request,config,clone,request,config,set,connect,timeout,timeout,build,set,legacy,connection,timeout,get,http,client,timeout
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1438251337;Set the connection timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param timeout the timeout value in milliseconds_@see RequestConfig#getConnectTimeout();public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.requestConfig = requestConfigBuilder().setConnectTimeout(timeout).build()__		setLegacyConnectionTimeout(getHttpClient(), timeout)__	};set,the,connection,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,timeout,the,timeout,value,in,milliseconds,see,request,config,get,connect,timeout;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,request,config,request,config,builder,set,connect,timeout,timeout,build,set,legacy,connection,timeout,get,http,client,timeout
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1449660489;Set the connection timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param timeout the timeout value in milliseconds_@see RequestConfig#getConnectTimeout();public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.requestConfig = requestConfigBuilder().setConnectTimeout(timeout).build()__		setLegacyConnectionTimeout(getHttpClient(), timeout)__	};set,the,connection,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,timeout,the,timeout,value,in,milliseconds,see,request,config,get,connect,timeout;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,request,config,request,config,builder,set,connect,timeout,timeout,build,set,legacy,connection,timeout,get,http,client,timeout
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1467375086;Set the connection timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param timeout the timeout value in milliseconds_@see RequestConfig#getConnectTimeout();public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.requestConfig = requestConfigBuilder().setConnectTimeout(timeout).build()__		setLegacyConnectionTimeout(getHttpClient(), timeout)__	};set,the,connection,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,timeout,the,timeout,value,in,milliseconds,see,request,config,get,connect,timeout;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,request,config,request,config,builder,set,connect,timeout,timeout,build,set,legacy,connection,timeout,get,http,client,timeout
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1467667302;Set the connection timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param timeout the timeout value in milliseconds_@see RequestConfig#getConnectTimeout();public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.requestConfig = requestConfigBuilder().setConnectTimeout(timeout).build()__	};set,the,connection,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,timeout,the,timeout,value,in,milliseconds,see,request,config,get,connect,timeout;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,request,config,request,config,builder,set,connect,timeout,timeout,build
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1468600707;Set the connection timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param timeout the timeout value in milliseconds_@see RequestConfig#getConnectTimeout();public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.requestConfig = requestConfigBuilder().setConnectTimeout(timeout).build()__	};set,the,connection,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,timeout,the,timeout,value,in,milliseconds,see,request,config,get,connect,timeout;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,request,config,request,config,builder,set,connect,timeout,timeout,build
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1495868221;Set the connection timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param timeout the timeout value in milliseconds_@see RequestConfig#getConnectTimeout();public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.requestConfig = requestConfigBuilder().setConnectTimeout(timeout).build()__	};set,the,connection,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,timeout,the,timeout,value,in,milliseconds,see,request,config,get,connect,timeout;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,request,config,request,config,builder,set,connect,timeout,timeout,build
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1496837955;Set the connection timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param timeout the timeout value in milliseconds_@see RequestConfig#getConnectTimeout();public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.requestConfig = requestConfigBuilder().setConnectTimeout(timeout).build()__	};set,the,connection,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,timeout,the,timeout,value,in,milliseconds,see,request,config,get,connect,timeout;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,request,config,request,config,builder,set,connect,timeout,timeout,build
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1497453044;Set the connection timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param timeout the timeout value in milliseconds_@see RequestConfig#getConnectTimeout();public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.requestConfig = requestConfigBuilder().setConnectTimeout(timeout).build()__	};set,the,connection,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,timeout,the,timeout,value,in,milliseconds,see,request,config,get,connect,timeout;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,request,config,request,config,builder,set,connect,timeout,timeout,build
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1498780456;Set the connection timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param timeout the timeout value in milliseconds_@see RequestConfig#getConnectTimeout();public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.requestConfig = requestConfigBuilder().setConnectTimeout(timeout).build()__	};set,the,connection,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,timeout,the,timeout,value,in,milliseconds,see,request,config,get,connect,timeout;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,request,config,request,config,builder,set,connect,timeout,timeout,build
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1500416137;Set the connection timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param timeout the timeout value in milliseconds_@see RequestConfig#getConnectTimeout();public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.requestConfig = requestConfigBuilder().setConnectTimeout(timeout).build()__	};set,the,connection,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,timeout,the,timeout,value,in,milliseconds,see,request,config,get,connect,timeout;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,request,config,request,config,builder,set,connect,timeout,timeout,build
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1520890308;Set the connection timeout for the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param timeout the timeout value in milliseconds_@see RequestConfig#getConnectTimeout();public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.requestConfig = requestConfigBuilder().setConnectTimeout(timeout).build()__	};set,the,connection,timeout,for,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,timeout,the,timeout,value,in,milliseconds,see,request,config,get,connect,timeout;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,request,config,request,config,builder,set,connect,timeout,timeout,build
HttpComponentsClientHttpRequestFactory -> public void setConnectTimeout(int timeout);1523025317;Set the connection timeout for the underlying {@link RequestConfig}._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._<p>This options does not affect connection timeouts for SSL_handshakes or CONNECT requests_ for that, it is required to_use the {@link org.apache.http.config.SocketConfig} on the_{@link HttpClient} itself._@param timeout the timeout value in milliseconds_@see RequestConfig#getConnectTimeout()_@see org.apache.http.config.SocketConfig#getSoTimeout;public void setConnectTimeout(int timeout) {_		Assert.isTrue(timeout >= 0, "Timeout must be a non-negative value")__		this.requestConfig = requestConfigBuilder().setConnectTimeout(timeout).build()__	};set,the,connection,timeout,for,the,underlying,link,request,config,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,p,this,options,does,not,affect,connection,timeouts,for,ssl,handshakes,or,connect,requests,for,that,it,is,required,to,use,the,link,org,apache,http,config,socket,config,on,the,link,http,client,itself,param,timeout,the,timeout,value,in,milliseconds,see,request,config,get,connect,timeout,see,org,apache,http,config,socket,config,get,so,timeout;public,void,set,connect,timeout,int,timeout,assert,is,true,timeout,0,timeout,must,be,a,non,negative,value,this,request,config,request,config,builder,set,connect,timeout,timeout,build
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(CloseableHttpClient httpClient);1377782656;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with the given {@link HttpClient} instance._@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(CloseableHttpClient httpClient) {_		Assert.notNull(httpClient, "'httpClient' must not be null")__        this.httpClient = httpClient__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,the,given,link,http,client,instance,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,closeable,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(CloseableHttpClient httpClient);1383229571;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with the given {@link HttpClient} instance._@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(CloseableHttpClient httpClient) {_		Assert.notNull(httpClient, "'httpClient' must not be null")__        this.httpClient = httpClient__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,the,given,link,http,client,instance,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,closeable,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> protected RequestConfig createRequestConfig(HttpClient client);1426623891;Create a default {@link RequestConfig} to use with the given client._Can return {@code null} to indicate that no custom request config should_be set and the defaults of the {@link HttpClient} should be used._<p>The default implementation tries to merge the defaults of the client_with the local customizations of this instance, if any._@param client the client_@return the RequestConfig to use_@since 4.2;protected RequestConfig createRequestConfig(HttpClient client) {_		if (client instanceof Configurable) {_			RequestConfig clientRequestConfig = ((Configurable) client).getConfig()__			return mergeRequestConfig(clientRequestConfig)__		}_		return this.requestConfig__	};create,a,default,link,request,config,to,use,with,the,given,client,can,return,code,null,to,indicate,that,no,custom,request,config,should,be,set,and,the,defaults,of,the,link,http,client,should,be,used,p,the,default,implementation,tries,to,merge,the,defaults,of,the,client,with,the,local,customizations,of,this,instance,if,any,param,client,the,client,return,the,request,config,to,use,since,4,2;protected,request,config,create,request,config,http,client,client,if,client,instanceof,configurable,request,config,client,request,config,configurable,client,get,config,return,merge,request,config,client,request,config,return,this,request,config
HttpComponentsClientHttpRequestFactory -> protected RequestConfig createRequestConfig(HttpClient client);1434384787;Create a default {@link RequestConfig} to use with the given client._Can return {@code null} to indicate that no custom request config should_be set and the defaults of the {@link HttpClient} should be used._<p>The default implementation tries to merge the defaults of the client_with the local customizations of this instance, if any._@param client the client_@return the RequestConfig to use_@since 4.2;protected RequestConfig createRequestConfig(HttpClient client) {_		if (client instanceof Configurable) {_			RequestConfig clientRequestConfig = ((Configurable) client).getConfig()__			return mergeRequestConfig(clientRequestConfig)__		}_		return this.requestConfig__	};create,a,default,link,request,config,to,use,with,the,given,client,can,return,code,null,to,indicate,that,no,custom,request,config,should,be,set,and,the,defaults,of,the,link,http,client,should,be,used,p,the,default,implementation,tries,to,merge,the,defaults,of,the,client,with,the,local,customizations,of,this,instance,if,any,param,client,the,client,return,the,request,config,to,use,since,4,2;protected,request,config,create,request,config,http,client,client,if,client,instanceof,configurable,request,config,client,request,config,configurable,client,get,config,return,merge,request,config,client,request,config,return,this,request,config
HttpComponentsClientHttpRequestFactory -> protected RequestConfig createRequestConfig(HttpClient client);1436200220;Create a default {@link RequestConfig} to use with the given client._Can return {@code null} to indicate that no custom request config should_be set and the defaults of the {@link HttpClient} should be used._<p>The default implementation tries to merge the defaults of the client_with the local customizations of this instance, if any._@param client the client_@return the RequestConfig to use_@since 4.2;protected RequestConfig createRequestConfig(HttpClient client) {_		if (client instanceof Configurable) {_			RequestConfig clientRequestConfig = ((Configurable) client).getConfig()__			return mergeRequestConfig(clientRequestConfig)__		}_		return this.requestConfig__	};create,a,default,link,request,config,to,use,with,the,given,client,can,return,code,null,to,indicate,that,no,custom,request,config,should,be,set,and,the,defaults,of,the,link,http,client,should,be,used,p,the,default,implementation,tries,to,merge,the,defaults,of,the,client,with,the,local,customizations,of,this,instance,if,any,param,client,the,client,return,the,request,config,to,use,since,4,2;protected,request,config,create,request,config,http,client,client,if,client,instanceof,configurable,request,config,client,request,config,configurable,client,get,config,return,merge,request,config,client,request,config,return,this,request,config
HttpComponentsClientHttpRequestFactory -> public CloseableHttpClient getHttpClient();1377782656;Return the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public CloseableHttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,closeable,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> public CloseableHttpClient getHttpClient();1383229571;Return the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public CloseableHttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,closeable,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(CloseableHttpClient httpClient);1377782656;Set the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public void setHttpClient(CloseableHttpClient httpClient) {_        this.httpClient = httpClient__    };set,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,void,set,http,client,closeable,http,client,http,client,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(CloseableHttpClient httpClient);1383229571;Set the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public void setHttpClient(CloseableHttpClient httpClient) {_        this.httpClient = httpClient__    };set,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,void,set,http,client,closeable,http,client,http,client,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1328020251;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_        return null__    };template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1340398642;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_        return null__    };template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1340648015;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_        return null__    };template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1349872133;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_        return null__    };template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1356735495;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_		return null__	};template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1357119239;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_		return null__	};template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1368482696;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_		return null__	};template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1374115410;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_		return null__	};template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1377627757;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_		return null__	};template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1377782656;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_		return null__	};template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1383229571;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_		return null__	};template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1383232235;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_		return null__	};template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1391439900;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_		return null__	};template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1394111906;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_		return null__	};template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1394469729;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_		return null__	};template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1394472663;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_		return null__	};template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1412780546;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_		return null__	};template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1414442939;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_		return null__	};template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1419262267;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_		return null__	};template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1419842214;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_		return null__	};template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1420464527;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_		return null__	};template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1426623891;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_		return null__	};template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1434384787;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_		return null__	};template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1436200220;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_		return null__	};template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1438251337;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_		return null__	};template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1449660489;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_		return null__	};template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1467375086;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_		return null__	};template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1467667302;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_		return null__	};template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1468600707;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_		return null__	};template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> @SuppressWarnings("deprecation") 	private void setLegacyConnectionTimeout(HttpClient client, int timeout);1394472663;Apply the specified connection timeout to deprecated {@link HttpClient}_implementations._<p>As of HttpClient 4.3, default parameters have to be exposed through a_{@link RequestConfig} instance instead of setting the parameters on the_client. Unfortunately, this behavior is not backward-compatible and older_{@link HttpClient} implementations will ignore the {@link RequestConfig}_object set in the context._<p>If the specified client is an older implementation, we set the custom_connection timeout through the deprecated API. Otherwise, we just return_as it is set through {@link RequestConfig} with newer clients._@param client the client to configure_@param timeout the custom connection timeout;@SuppressWarnings("deprecation")_	private void setLegacyConnectionTimeout(HttpClient client, int timeout) {_		if (org.apache.http.impl.client.AbstractHttpClient.class.isInstance(client)) {_			client.getParams().setIntParameter(_					org.apache.http.params.CoreConnectionPNames.CONNECTION_TIMEOUT, timeout)__		}_	};apply,the,specified,connection,timeout,to,deprecated,link,http,client,implementations,p,as,of,http,client,4,3,default,parameters,have,to,be,exposed,through,a,link,request,config,instance,instead,of,setting,the,parameters,on,the,client,unfortunately,this,behavior,is,not,backward,compatible,and,older,link,http,client,implementations,will,ignore,the,link,request,config,object,set,in,the,context,p,if,the,specified,client,is,an,older,implementation,we,set,the,custom,connection,timeout,through,the,deprecated,api,otherwise,we,just,return,as,it,is,set,through,link,request,config,with,newer,clients,param,client,the,client,to,configure,param,timeout,the,custom,connection,timeout;suppress,warnings,deprecation,private,void,set,legacy,connection,timeout,http,client,client,int,timeout,if,org,apache,http,impl,client,abstract,http,client,class,is,instance,client,client,get,params,set,int,parameter,org,apache,http,params,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> @SuppressWarnings("deprecation") 	private void setLegacyConnectionTimeout(HttpClient client, int timeout);1412780546;Apply the specified connection timeout to deprecated {@link HttpClient}_implementations._<p>As of HttpClient 4.3, default parameters have to be exposed through a_{@link RequestConfig} instance instead of setting the parameters on the_client. Unfortunately, this behavior is not backward-compatible and older_{@link HttpClient} implementations will ignore the {@link RequestConfig}_object set in the context._<p>If the specified client is an older implementation, we set the custom_connection timeout through the deprecated API. Otherwise, we just return_as it is set through {@link RequestConfig} with newer clients._@param client the client to configure_@param timeout the custom connection timeout;@SuppressWarnings("deprecation")_	private void setLegacyConnectionTimeout(HttpClient client, int timeout) {_		if (org.apache.http.impl.client.AbstractHttpClient.class.isInstance(client)) {_			client.getParams().setIntParameter(_					org.apache.http.params.CoreConnectionPNames.CONNECTION_TIMEOUT, timeout)__		}_	};apply,the,specified,connection,timeout,to,deprecated,link,http,client,implementations,p,as,of,http,client,4,3,default,parameters,have,to,be,exposed,through,a,link,request,config,instance,instead,of,setting,the,parameters,on,the,client,unfortunately,this,behavior,is,not,backward,compatible,and,older,link,http,client,implementations,will,ignore,the,link,request,config,object,set,in,the,context,p,if,the,specified,client,is,an,older,implementation,we,set,the,custom,connection,timeout,through,the,deprecated,api,otherwise,we,just,return,as,it,is,set,through,link,request,config,with,newer,clients,param,client,the,client,to,configure,param,timeout,the,custom,connection,timeout;suppress,warnings,deprecation,private,void,set,legacy,connection,timeout,http,client,client,int,timeout,if,org,apache,http,impl,client,abstract,http,client,class,is,instance,client,client,get,params,set,int,parameter,org,apache,http,params,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> @SuppressWarnings("deprecation") 	private void setLegacyConnectionTimeout(HttpClient client, int timeout);1414442939;Apply the specified connection timeout to deprecated {@link HttpClient}_implementations._<p>As of HttpClient 4.3, default parameters have to be exposed through a_{@link RequestConfig} instance instead of setting the parameters on the_client. Unfortunately, this behavior is not backward-compatible and older_{@link HttpClient} implementations will ignore the {@link RequestConfig}_object set in the context._<p>If the specified client is an older implementation, we set the custom_connection timeout through the deprecated API. Otherwise, we just return_as it is set through {@link RequestConfig} with newer clients._@param client the client to configure_@param timeout the custom connection timeout;@SuppressWarnings("deprecation")_	private void setLegacyConnectionTimeout(HttpClient client, int timeout) {_		if (org.apache.http.impl.client.AbstractHttpClient.class.isInstance(client)) {_			client.getParams().setIntParameter(_					org.apache.http.params.CoreConnectionPNames.CONNECTION_TIMEOUT, timeout)__		}_	};apply,the,specified,connection,timeout,to,deprecated,link,http,client,implementations,p,as,of,http,client,4,3,default,parameters,have,to,be,exposed,through,a,link,request,config,instance,instead,of,setting,the,parameters,on,the,client,unfortunately,this,behavior,is,not,backward,compatible,and,older,link,http,client,implementations,will,ignore,the,link,request,config,object,set,in,the,context,p,if,the,specified,client,is,an,older,implementation,we,set,the,custom,connection,timeout,through,the,deprecated,api,otherwise,we,just,return,as,it,is,set,through,link,request,config,with,newer,clients,param,client,the,client,to,configure,param,timeout,the,custom,connection,timeout;suppress,warnings,deprecation,private,void,set,legacy,connection,timeout,http,client,client,int,timeout,if,org,apache,http,impl,client,abstract,http,client,class,is,instance,client,client,get,params,set,int,parameter,org,apache,http,params,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> @SuppressWarnings("deprecation") 	private void setLegacyConnectionTimeout(HttpClient client, int timeout);1419262267;Apply the specified connection timeout to deprecated {@link HttpClient}_implementations._<p>As of HttpClient 4.3, default parameters have to be exposed through a_{@link RequestConfig} instance instead of setting the parameters on the_client. Unfortunately, this behavior is not backward-compatible and older_{@link HttpClient} implementations will ignore the {@link RequestConfig}_object set in the context._<p>If the specified client is an older implementation, we set the custom_connection timeout through the deprecated API. Otherwise, we just return_as it is set through {@link RequestConfig} with newer clients._@param client the client to configure_@param timeout the custom connection timeout;@SuppressWarnings("deprecation")_	private void setLegacyConnectionTimeout(HttpClient client, int timeout) {_		if (org.apache.http.impl.client.AbstractHttpClient.class.isInstance(client)) {_			client.getParams().setIntParameter(_					org.apache.http.params.CoreConnectionPNames.CONNECTION_TIMEOUT, timeout)__		}_	};apply,the,specified,connection,timeout,to,deprecated,link,http,client,implementations,p,as,of,http,client,4,3,default,parameters,have,to,be,exposed,through,a,link,request,config,instance,instead,of,setting,the,parameters,on,the,client,unfortunately,this,behavior,is,not,backward,compatible,and,older,link,http,client,implementations,will,ignore,the,link,request,config,object,set,in,the,context,p,if,the,specified,client,is,an,older,implementation,we,set,the,custom,connection,timeout,through,the,deprecated,api,otherwise,we,just,return,as,it,is,set,through,link,request,config,with,newer,clients,param,client,the,client,to,configure,param,timeout,the,custom,connection,timeout;suppress,warnings,deprecation,private,void,set,legacy,connection,timeout,http,client,client,int,timeout,if,org,apache,http,impl,client,abstract,http,client,class,is,instance,client,client,get,params,set,int,parameter,org,apache,http,params,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> @SuppressWarnings("deprecation") 	private void setLegacyConnectionTimeout(HttpClient client, int timeout);1419842214;Apply the specified connection timeout to deprecated {@link HttpClient}_implementations._<p>As of HttpClient 4.3, default parameters have to be exposed through a_{@link RequestConfig} instance instead of setting the parameters on the_client. Unfortunately, this behavior is not backward-compatible and older_{@link HttpClient} implementations will ignore the {@link RequestConfig}_object set in the context._<p>If the specified client is an older implementation, we set the custom_connection timeout through the deprecated API. Otherwise, we just return_as it is set through {@link RequestConfig} with newer clients._@param client the client to configure_@param timeout the custom connection timeout;@SuppressWarnings("deprecation")_	private void setLegacyConnectionTimeout(HttpClient client, int timeout) {_		if (org.apache.http.impl.client.AbstractHttpClient.class.isInstance(client)) {_			client.getParams().setIntParameter(_					org.apache.http.params.CoreConnectionPNames.CONNECTION_TIMEOUT, timeout)__		}_	};apply,the,specified,connection,timeout,to,deprecated,link,http,client,implementations,p,as,of,http,client,4,3,default,parameters,have,to,be,exposed,through,a,link,request,config,instance,instead,of,setting,the,parameters,on,the,client,unfortunately,this,behavior,is,not,backward,compatible,and,older,link,http,client,implementations,will,ignore,the,link,request,config,object,set,in,the,context,p,if,the,specified,client,is,an,older,implementation,we,set,the,custom,connection,timeout,through,the,deprecated,api,otherwise,we,just,return,as,it,is,set,through,link,request,config,with,newer,clients,param,client,the,client,to,configure,param,timeout,the,custom,connection,timeout;suppress,warnings,deprecation,private,void,set,legacy,connection,timeout,http,client,client,int,timeout,if,org,apache,http,impl,client,abstract,http,client,class,is,instance,client,client,get,params,set,int,parameter,org,apache,http,params,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> @SuppressWarnings("deprecation") 	private void setLegacyConnectionTimeout(HttpClient client, int timeout);1420464527;Apply the specified connection timeout to deprecated {@link HttpClient}_implementations._<p>As of HttpClient 4.3, default parameters have to be exposed through a_{@link RequestConfig} instance instead of setting the parameters on the_client. Unfortunately, this behavior is not backward-compatible and older_{@link HttpClient} implementations will ignore the {@link RequestConfig}_object set in the context._<p>If the specified client is an older implementation, we set the custom_connection timeout through the deprecated API. Otherwise, we just return_as it is set through {@link RequestConfig} with newer clients._@param client the client to configure_@param timeout the custom connection timeout;@SuppressWarnings("deprecation")_	private void setLegacyConnectionTimeout(HttpClient client, int timeout) {_		if (org.apache.http.impl.client.AbstractHttpClient.class.isInstance(client)) {_			client.getParams().setIntParameter(_					org.apache.http.params.CoreConnectionPNames.CONNECTION_TIMEOUT, timeout)__		}_	};apply,the,specified,connection,timeout,to,deprecated,link,http,client,implementations,p,as,of,http,client,4,3,default,parameters,have,to,be,exposed,through,a,link,request,config,instance,instead,of,setting,the,parameters,on,the,client,unfortunately,this,behavior,is,not,backward,compatible,and,older,link,http,client,implementations,will,ignore,the,link,request,config,object,set,in,the,context,p,if,the,specified,client,is,an,older,implementation,we,set,the,custom,connection,timeout,through,the,deprecated,api,otherwise,we,just,return,as,it,is,set,through,link,request,config,with,newer,clients,param,client,the,client,to,configure,param,timeout,the,custom,connection,timeout;suppress,warnings,deprecation,private,void,set,legacy,connection,timeout,http,client,client,int,timeout,if,org,apache,http,impl,client,abstract,http,client,class,is,instance,client,client,get,params,set,int,parameter,org,apache,http,params,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> @SuppressWarnings("deprecation") 	private void setLegacyConnectionTimeout(HttpClient client, int timeout);1426623891;Apply the specified connection timeout to deprecated {@link HttpClient}_implementations._<p>As of HttpClient 4.3, default parameters have to be exposed through a_{@link RequestConfig} instance instead of setting the parameters on the_client. Unfortunately, this behavior is not backward-compatible and older_{@link HttpClient} implementations will ignore the {@link RequestConfig}_object set in the context._<p>If the specified client is an older implementation, we set the custom_connection timeout through the deprecated API. Otherwise, we just return_as it is set through {@link RequestConfig} with newer clients._@param client the client to configure_@param timeout the custom connection timeout;@SuppressWarnings("deprecation")_	private void setLegacyConnectionTimeout(HttpClient client, int timeout) {_		if (org.apache.http.impl.client.AbstractHttpClient.class.isInstance(client)) {_			client.getParams().setIntParameter(_					org.apache.http.params.CoreConnectionPNames.CONNECTION_TIMEOUT, timeout)__		}_	};apply,the,specified,connection,timeout,to,deprecated,link,http,client,implementations,p,as,of,http,client,4,3,default,parameters,have,to,be,exposed,through,a,link,request,config,instance,instead,of,setting,the,parameters,on,the,client,unfortunately,this,behavior,is,not,backward,compatible,and,older,link,http,client,implementations,will,ignore,the,link,request,config,object,set,in,the,context,p,if,the,specified,client,is,an,older,implementation,we,set,the,custom,connection,timeout,through,the,deprecated,api,otherwise,we,just,return,as,it,is,set,through,link,request,config,with,newer,clients,param,client,the,client,to,configure,param,timeout,the,custom,connection,timeout;suppress,warnings,deprecation,private,void,set,legacy,connection,timeout,http,client,client,int,timeout,if,org,apache,http,impl,client,abstract,http,client,class,is,instance,client,client,get,params,set,int,parameter,org,apache,http,params,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> @SuppressWarnings("deprecation") 	private void setLegacyConnectionTimeout(HttpClient client, int timeout);1434384787;Apply the specified connection timeout to deprecated {@link HttpClient}_implementations._<p>As of HttpClient 4.3, default parameters have to be exposed through a_{@link RequestConfig} instance instead of setting the parameters on the_client. Unfortunately, this behavior is not backward-compatible and older_{@link HttpClient} implementations will ignore the {@link RequestConfig}_object set in the context._<p>If the specified client is an older implementation, we set the custom_connection timeout through the deprecated API. Otherwise, we just return_as it is set through {@link RequestConfig} with newer clients._@param client the client to configure_@param timeout the custom connection timeout;@SuppressWarnings("deprecation")_	private void setLegacyConnectionTimeout(HttpClient client, int timeout) {_		if (org.apache.http.impl.client.AbstractHttpClient.class.isInstance(client)) {_			client.getParams().setIntParameter(_					org.apache.http.params.CoreConnectionPNames.CONNECTION_TIMEOUT, timeout)__		}_	};apply,the,specified,connection,timeout,to,deprecated,link,http,client,implementations,p,as,of,http,client,4,3,default,parameters,have,to,be,exposed,through,a,link,request,config,instance,instead,of,setting,the,parameters,on,the,client,unfortunately,this,behavior,is,not,backward,compatible,and,older,link,http,client,implementations,will,ignore,the,link,request,config,object,set,in,the,context,p,if,the,specified,client,is,an,older,implementation,we,set,the,custom,connection,timeout,through,the,deprecated,api,otherwise,we,just,return,as,it,is,set,through,link,request,config,with,newer,clients,param,client,the,client,to,configure,param,timeout,the,custom,connection,timeout;suppress,warnings,deprecation,private,void,set,legacy,connection,timeout,http,client,client,int,timeout,if,org,apache,http,impl,client,abstract,http,client,class,is,instance,client,client,get,params,set,int,parameter,org,apache,http,params,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> @SuppressWarnings("deprecation") 	private void setLegacyConnectionTimeout(HttpClient client, int timeout);1436200220;Apply the specified connection timeout to deprecated {@link HttpClient}_implementations._<p>As of HttpClient 4.3, default parameters have to be exposed through a_{@link RequestConfig} instance instead of setting the parameters on the_client. Unfortunately, this behavior is not backward-compatible and older_{@link HttpClient} implementations will ignore the {@link RequestConfig}_object set in the context._<p>If the specified client is an older implementation, we set the custom_connection timeout through the deprecated API. Otherwise, we just return_as it is set through {@link RequestConfig} with newer clients._@param client the client to configure_@param timeout the custom connection timeout;@SuppressWarnings("deprecation")_	private void setLegacyConnectionTimeout(HttpClient client, int timeout) {_		if (org.apache.http.impl.client.AbstractHttpClient.class.isInstance(client)) {_			client.getParams().setIntParameter(_					org.apache.http.params.CoreConnectionPNames.CONNECTION_TIMEOUT, timeout)__		}_	};apply,the,specified,connection,timeout,to,deprecated,link,http,client,implementations,p,as,of,http,client,4,3,default,parameters,have,to,be,exposed,through,a,link,request,config,instance,instead,of,setting,the,parameters,on,the,client,unfortunately,this,behavior,is,not,backward,compatible,and,older,link,http,client,implementations,will,ignore,the,link,request,config,object,set,in,the,context,p,if,the,specified,client,is,an,older,implementation,we,set,the,custom,connection,timeout,through,the,deprecated,api,otherwise,we,just,return,as,it,is,set,through,link,request,config,with,newer,clients,param,client,the,client,to,configure,param,timeout,the,custom,connection,timeout;suppress,warnings,deprecation,private,void,set,legacy,connection,timeout,http,client,client,int,timeout,if,org,apache,http,impl,client,abstract,http,client,class,is,instance,client,client,get,params,set,int,parameter,org,apache,http,params,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> @SuppressWarnings("deprecation") 	private void setLegacyConnectionTimeout(HttpClient client, int timeout);1438251337;Apply the specified connection timeout to deprecated {@link HttpClient}_implementations._<p>As of HttpClient 4.3, default parameters have to be exposed through a_{@link RequestConfig} instance instead of setting the parameters on the_client. Unfortunately, this behavior is not backward-compatible and older_{@link HttpClient} implementations will ignore the {@link RequestConfig}_object set in the context._<p>If the specified client is an older implementation, we set the custom_connection timeout through the deprecated API. Otherwise, we just return_as it is set through {@link RequestConfig} with newer clients._@param client the client to configure_@param timeout the custom connection timeout;@SuppressWarnings("deprecation")_	private void setLegacyConnectionTimeout(HttpClient client, int timeout) {_		if (org.apache.http.impl.client.AbstractHttpClient.class.isInstance(client)) {_			client.getParams().setIntParameter(org.apache.http.params.CoreConnectionPNames.CONNECTION_TIMEOUT, timeout)__		}_	};apply,the,specified,connection,timeout,to,deprecated,link,http,client,implementations,p,as,of,http,client,4,3,default,parameters,have,to,be,exposed,through,a,link,request,config,instance,instead,of,setting,the,parameters,on,the,client,unfortunately,this,behavior,is,not,backward,compatible,and,older,link,http,client,implementations,will,ignore,the,link,request,config,object,set,in,the,context,p,if,the,specified,client,is,an,older,implementation,we,set,the,custom,connection,timeout,through,the,deprecated,api,otherwise,we,just,return,as,it,is,set,through,link,request,config,with,newer,clients,param,client,the,client,to,configure,param,timeout,the,custom,connection,timeout;suppress,warnings,deprecation,private,void,set,legacy,connection,timeout,http,client,client,int,timeout,if,org,apache,http,impl,client,abstract,http,client,class,is,instance,client,client,get,params,set,int,parameter,org,apache,http,params,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> @SuppressWarnings("deprecation") 	private void setLegacyConnectionTimeout(HttpClient client, int timeout);1449660489;Apply the specified connection timeout to deprecated {@link HttpClient}_implementations._<p>As of HttpClient 4.3, default parameters have to be exposed through a_{@link RequestConfig} instance instead of setting the parameters on the_client. Unfortunately, this behavior is not backward-compatible and older_{@link HttpClient} implementations will ignore the {@link RequestConfig}_object set in the context._<p>If the specified client is an older implementation, we set the custom_connection timeout through the deprecated API. Otherwise, we just return_as it is set through {@link RequestConfig} with newer clients._@param client the client to configure_@param timeout the custom connection timeout;@SuppressWarnings("deprecation")_	private void setLegacyConnectionTimeout(HttpClient client, int timeout) {_		if (org.apache.http.impl.client.AbstractHttpClient.class.isInstance(client)) {_			client.getParams().setIntParameter(org.apache.http.params.CoreConnectionPNames.CONNECTION_TIMEOUT, timeout)__		}_	};apply,the,specified,connection,timeout,to,deprecated,link,http,client,implementations,p,as,of,http,client,4,3,default,parameters,have,to,be,exposed,through,a,link,request,config,instance,instead,of,setting,the,parameters,on,the,client,unfortunately,this,behavior,is,not,backward,compatible,and,older,link,http,client,implementations,will,ignore,the,link,request,config,object,set,in,the,context,p,if,the,specified,client,is,an,older,implementation,we,set,the,custom,connection,timeout,through,the,deprecated,api,otherwise,we,just,return,as,it,is,set,through,link,request,config,with,newer,clients,param,client,the,client,to,configure,param,timeout,the,custom,connection,timeout;suppress,warnings,deprecation,private,void,set,legacy,connection,timeout,http,client,client,int,timeout,if,org,apache,http,impl,client,abstract,http,client,class,is,instance,client,client,get,params,set,int,parameter,org,apache,http,params,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> @SuppressWarnings("deprecation") 	private void setLegacyConnectionTimeout(HttpClient client, int timeout);1467375086;Apply the specified connection timeout to deprecated {@link HttpClient}_implementations._<p>As of HttpClient 4.3, default parameters have to be exposed through a_{@link RequestConfig} instance instead of setting the parameters on the_client. Unfortunately, this behavior is not backward-compatible and older_{@link HttpClient} implementations will ignore the {@link RequestConfig}_object set in the context._<p>If the specified client is an older implementation, we set the custom_connection timeout through the deprecated API. Otherwise, we just return_as it is set through {@link RequestConfig} with newer clients._@param client the client to configure_@param timeout the custom connection timeout;@SuppressWarnings("deprecation")_	private void setLegacyConnectionTimeout(HttpClient client, int timeout) {_		if (abstractHttpClientClass != null && abstractHttpClientClass.isInstance(client)) {_			client.getParams().setIntParameter(org.apache.http.params.CoreConnectionPNames.CONNECTION_TIMEOUT, timeout)__		}_	};apply,the,specified,connection,timeout,to,deprecated,link,http,client,implementations,p,as,of,http,client,4,3,default,parameters,have,to,be,exposed,through,a,link,request,config,instance,instead,of,setting,the,parameters,on,the,client,unfortunately,this,behavior,is,not,backward,compatible,and,older,link,http,client,implementations,will,ignore,the,link,request,config,object,set,in,the,context,p,if,the,specified,client,is,an,older,implementation,we,set,the,custom,connection,timeout,through,the,deprecated,api,otherwise,we,just,return,as,it,is,set,through,link,request,config,with,newer,clients,param,client,the,client,to,configure,param,timeout,the,custom,connection,timeout;suppress,warnings,deprecation,private,void,set,legacy,connection,timeout,http,client,client,int,timeout,if,abstract,http,client,class,null,abstract,http,client,class,is,instance,client,client,get,params,set,int,parameter,org,apache,http,params,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> public void setConnectionRequestTimeout(int connectionRequestTimeout);1419262267;Set the timeout in milliseconds used when requesting a connection from the connection_manager using the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._@param connectionRequestTimeout the timeout value to request a connection in milliseconds;public void setConnectionRequestTimeout(int connectionRequestTimeout) {_		this.connectionRequestTimeout = connectionRequestTimeout__	};set,the,timeout,in,milliseconds,used,when,requesting,a,connection,from,the,connection,manager,using,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,param,connection,request,timeout,the,timeout,value,to,request,a,connection,in,milliseconds;public,void,set,connection,request,timeout,int,connection,request,timeout,this,connection,request,timeout,connection,request,timeout
HttpComponentsClientHttpRequestFactory -> public void setConnectionRequestTimeout(int connectionRequestTimeout);1419842214;Set the timeout in milliseconds used when requesting a connection from the connection_manager using the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param connectionRequestTimeout the timeout value to request a connection in milliseconds_@see RequestConfig#getConnectionRequestTimeout();public void setConnectionRequestTimeout(int connectionRequestTimeout) {_		this.requestConfig = cloneRequestConfig()_				.setConnectionRequestTimeout(connectionRequestTimeout).build()__	};set,the,timeout,in,milliseconds,used,when,requesting,a,connection,from,the,connection,manager,using,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,connection,request,timeout,the,timeout,value,to,request,a,connection,in,milliseconds,see,request,config,get,connection,request,timeout;public,void,set,connection,request,timeout,int,connection,request,timeout,this,request,config,clone,request,config,set,connection,request,timeout,connection,request,timeout,build
HttpComponentsClientHttpRequestFactory -> public void setConnectionRequestTimeout(int connectionRequestTimeout);1420464527;Set the timeout in milliseconds used when requesting a connection from the connection_manager using the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param connectionRequestTimeout the timeout value to request a connection in milliseconds_@see RequestConfig#getConnectionRequestTimeout();public void setConnectionRequestTimeout(int connectionRequestTimeout) {_		this.requestConfig = cloneRequestConfig()_				.setConnectionRequestTimeout(connectionRequestTimeout).build()__	};set,the,timeout,in,milliseconds,used,when,requesting,a,connection,from,the,connection,manager,using,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,connection,request,timeout,the,timeout,value,to,request,a,connection,in,milliseconds,see,request,config,get,connection,request,timeout;public,void,set,connection,request,timeout,int,connection,request,timeout,this,request,config,clone,request,config,set,connection,request,timeout,connection,request,timeout,build
HttpComponentsClientHttpRequestFactory -> public void setConnectionRequestTimeout(int connectionRequestTimeout);1426623891;Set the timeout in milliseconds used when requesting a connection from the connection_manager using the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param connectionRequestTimeout the timeout value to request a connection in milliseconds_@see RequestConfig#getConnectionRequestTimeout();public void setConnectionRequestTimeout(int connectionRequestTimeout) {_		this.requestConfig = cloneRequestConfig()_				.setConnectionRequestTimeout(connectionRequestTimeout).build()__	};set,the,timeout,in,milliseconds,used,when,requesting,a,connection,from,the,connection,manager,using,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,connection,request,timeout,the,timeout,value,to,request,a,connection,in,milliseconds,see,request,config,get,connection,request,timeout;public,void,set,connection,request,timeout,int,connection,request,timeout,this,request,config,clone,request,config,set,connection,request,timeout,connection,request,timeout,build
HttpComponentsClientHttpRequestFactory -> public void setConnectionRequestTimeout(int connectionRequestTimeout);1434384787;Set the timeout in milliseconds used when requesting a connection from the connection_manager using the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param connectionRequestTimeout the timeout value to request a connection in milliseconds_@see RequestConfig#getConnectionRequestTimeout();public void setConnectionRequestTimeout(int connectionRequestTimeout) {_		this.requestConfig = cloneRequestConfig()_				.setConnectionRequestTimeout(connectionRequestTimeout).build()__	};set,the,timeout,in,milliseconds,used,when,requesting,a,connection,from,the,connection,manager,using,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,connection,request,timeout,the,timeout,value,to,request,a,connection,in,milliseconds,see,request,config,get,connection,request,timeout;public,void,set,connection,request,timeout,int,connection,request,timeout,this,request,config,clone,request,config,set,connection,request,timeout,connection,request,timeout,build
HttpComponentsClientHttpRequestFactory -> public void setConnectionRequestTimeout(int connectionRequestTimeout);1436200220;Set the timeout in milliseconds used when requesting a connection from the connection_manager using the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param connectionRequestTimeout the timeout value to request a connection in milliseconds_@see RequestConfig#getConnectionRequestTimeout();public void setConnectionRequestTimeout(int connectionRequestTimeout) {_		this.requestConfig = cloneRequestConfig()_				.setConnectionRequestTimeout(connectionRequestTimeout).build()__	};set,the,timeout,in,milliseconds,used,when,requesting,a,connection,from,the,connection,manager,using,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,connection,request,timeout,the,timeout,value,to,request,a,connection,in,milliseconds,see,request,config,get,connection,request,timeout;public,void,set,connection,request,timeout,int,connection,request,timeout,this,request,config,clone,request,config,set,connection,request,timeout,connection,request,timeout,build
HttpComponentsClientHttpRequestFactory -> public void setConnectionRequestTimeout(int connectionRequestTimeout);1438251337;Set the timeout in milliseconds used when requesting a connection from the connection_manager using the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param connectionRequestTimeout the timeout value to request a connection in milliseconds_@see RequestConfig#getConnectionRequestTimeout();public void setConnectionRequestTimeout(int connectionRequestTimeout) {_		this.requestConfig = requestConfigBuilder().setConnectionRequestTimeout(connectionRequestTimeout).build()__	};set,the,timeout,in,milliseconds,used,when,requesting,a,connection,from,the,connection,manager,using,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,connection,request,timeout,the,timeout,value,to,request,a,connection,in,milliseconds,see,request,config,get,connection,request,timeout;public,void,set,connection,request,timeout,int,connection,request,timeout,this,request,config,request,config,builder,set,connection,request,timeout,connection,request,timeout,build
HttpComponentsClientHttpRequestFactory -> public void setConnectionRequestTimeout(int connectionRequestTimeout);1449660489;Set the timeout in milliseconds used when requesting a connection from the connection_manager using the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param connectionRequestTimeout the timeout value to request a connection in milliseconds_@see RequestConfig#getConnectionRequestTimeout();public void setConnectionRequestTimeout(int connectionRequestTimeout) {_		this.requestConfig = requestConfigBuilder().setConnectionRequestTimeout(connectionRequestTimeout).build()__	};set,the,timeout,in,milliseconds,used,when,requesting,a,connection,from,the,connection,manager,using,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,connection,request,timeout,the,timeout,value,to,request,a,connection,in,milliseconds,see,request,config,get,connection,request,timeout;public,void,set,connection,request,timeout,int,connection,request,timeout,this,request,config,request,config,builder,set,connection,request,timeout,connection,request,timeout,build
HttpComponentsClientHttpRequestFactory -> public void setConnectionRequestTimeout(int connectionRequestTimeout);1467375086;Set the timeout in milliseconds used when requesting a connection from the connection_manager using the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param connectionRequestTimeout the timeout value to request a connection in milliseconds_@see RequestConfig#getConnectionRequestTimeout();public void setConnectionRequestTimeout(int connectionRequestTimeout) {_		this.requestConfig = requestConfigBuilder().setConnectionRequestTimeout(connectionRequestTimeout).build()__	};set,the,timeout,in,milliseconds,used,when,requesting,a,connection,from,the,connection,manager,using,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,connection,request,timeout,the,timeout,value,to,request,a,connection,in,milliseconds,see,request,config,get,connection,request,timeout;public,void,set,connection,request,timeout,int,connection,request,timeout,this,request,config,request,config,builder,set,connection,request,timeout,connection,request,timeout,build
HttpComponentsClientHttpRequestFactory -> public void setConnectionRequestTimeout(int connectionRequestTimeout);1467667302;Set the timeout in milliseconds used when requesting a connection from the connection_manager using the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param connectionRequestTimeout the timeout value to request a connection in milliseconds_@see RequestConfig#getConnectionRequestTimeout();public void setConnectionRequestTimeout(int connectionRequestTimeout) {_		this.requestConfig = requestConfigBuilder().setConnectionRequestTimeout(connectionRequestTimeout).build()__	};set,the,timeout,in,milliseconds,used,when,requesting,a,connection,from,the,connection,manager,using,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,connection,request,timeout,the,timeout,value,to,request,a,connection,in,milliseconds,see,request,config,get,connection,request,timeout;public,void,set,connection,request,timeout,int,connection,request,timeout,this,request,config,request,config,builder,set,connection,request,timeout,connection,request,timeout,build
HttpComponentsClientHttpRequestFactory -> public void setConnectionRequestTimeout(int connectionRequestTimeout);1468600707;Set the timeout in milliseconds used when requesting a connection from the connection_manager using the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param connectionRequestTimeout the timeout value to request a connection in milliseconds_@see RequestConfig#getConnectionRequestTimeout();public void setConnectionRequestTimeout(int connectionRequestTimeout) {_		this.requestConfig = requestConfigBuilder().setConnectionRequestTimeout(connectionRequestTimeout).build()__	};set,the,timeout,in,milliseconds,used,when,requesting,a,connection,from,the,connection,manager,using,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,connection,request,timeout,the,timeout,value,to,request,a,connection,in,milliseconds,see,request,config,get,connection,request,timeout;public,void,set,connection,request,timeout,int,connection,request,timeout,this,request,config,request,config,builder,set,connection,request,timeout,connection,request,timeout,build
HttpComponentsClientHttpRequestFactory -> public void setConnectionRequestTimeout(int connectionRequestTimeout);1495868221;Set the timeout in milliseconds used when requesting a connection from the connection_manager using the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param connectionRequestTimeout the timeout value to request a connection in milliseconds_@see RequestConfig#getConnectionRequestTimeout();public void setConnectionRequestTimeout(int connectionRequestTimeout) {_		this.requestConfig = requestConfigBuilder().setConnectionRequestTimeout(connectionRequestTimeout).build()__	};set,the,timeout,in,milliseconds,used,when,requesting,a,connection,from,the,connection,manager,using,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,connection,request,timeout,the,timeout,value,to,request,a,connection,in,milliseconds,see,request,config,get,connection,request,timeout;public,void,set,connection,request,timeout,int,connection,request,timeout,this,request,config,request,config,builder,set,connection,request,timeout,connection,request,timeout,build
HttpComponentsClientHttpRequestFactory -> public void setConnectionRequestTimeout(int connectionRequestTimeout);1496837955;Set the timeout in milliseconds used when requesting a connection from the connection_manager using the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param connectionRequestTimeout the timeout value to request a connection in milliseconds_@see RequestConfig#getConnectionRequestTimeout();public void setConnectionRequestTimeout(int connectionRequestTimeout) {_		this.requestConfig = requestConfigBuilder().setConnectionRequestTimeout(connectionRequestTimeout).build()__	};set,the,timeout,in,milliseconds,used,when,requesting,a,connection,from,the,connection,manager,using,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,connection,request,timeout,the,timeout,value,to,request,a,connection,in,milliseconds,see,request,config,get,connection,request,timeout;public,void,set,connection,request,timeout,int,connection,request,timeout,this,request,config,request,config,builder,set,connection,request,timeout,connection,request,timeout,build
HttpComponentsClientHttpRequestFactory -> public void setConnectionRequestTimeout(int connectionRequestTimeout);1497453044;Set the timeout in milliseconds used when requesting a connection from the connection_manager using the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param connectionRequestTimeout the timeout value to request a connection in milliseconds_@see RequestConfig#getConnectionRequestTimeout();public void setConnectionRequestTimeout(int connectionRequestTimeout) {_		this.requestConfig = requestConfigBuilder().setConnectionRequestTimeout(connectionRequestTimeout).build()__	};set,the,timeout,in,milliseconds,used,when,requesting,a,connection,from,the,connection,manager,using,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,connection,request,timeout,the,timeout,value,to,request,a,connection,in,milliseconds,see,request,config,get,connection,request,timeout;public,void,set,connection,request,timeout,int,connection,request,timeout,this,request,config,request,config,builder,set,connection,request,timeout,connection,request,timeout,build
HttpComponentsClientHttpRequestFactory -> public void setConnectionRequestTimeout(int connectionRequestTimeout);1498780456;Set the timeout in milliseconds used when requesting a connection from the connection_manager using the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param connectionRequestTimeout the timeout value to request a connection in milliseconds_@see RequestConfig#getConnectionRequestTimeout();public void setConnectionRequestTimeout(int connectionRequestTimeout) {_		this.requestConfig = requestConfigBuilder().setConnectionRequestTimeout(connectionRequestTimeout).build()__	};set,the,timeout,in,milliseconds,used,when,requesting,a,connection,from,the,connection,manager,using,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,connection,request,timeout,the,timeout,value,to,request,a,connection,in,milliseconds,see,request,config,get,connection,request,timeout;public,void,set,connection,request,timeout,int,connection,request,timeout,this,request,config,request,config,builder,set,connection,request,timeout,connection,request,timeout,build
HttpComponentsClientHttpRequestFactory -> public void setConnectionRequestTimeout(int connectionRequestTimeout);1500416137;Set the timeout in milliseconds used when requesting a connection from the connection_manager using the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param connectionRequestTimeout the timeout value to request a connection in milliseconds_@see RequestConfig#getConnectionRequestTimeout();public void setConnectionRequestTimeout(int connectionRequestTimeout) {_		this.requestConfig = requestConfigBuilder().setConnectionRequestTimeout(connectionRequestTimeout).build()__	};set,the,timeout,in,milliseconds,used,when,requesting,a,connection,from,the,connection,manager,using,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,connection,request,timeout,the,timeout,value,to,request,a,connection,in,milliseconds,see,request,config,get,connection,request,timeout;public,void,set,connection,request,timeout,int,connection,request,timeout,this,request,config,request,config,builder,set,connection,request,timeout,connection,request,timeout,build
HttpComponentsClientHttpRequestFactory -> public void setConnectionRequestTimeout(int connectionRequestTimeout);1520890308;Set the timeout in milliseconds used when requesting a connection from the connection_manager using the underlying HttpClient._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param connectionRequestTimeout the timeout value to request a connection in milliseconds_@see RequestConfig#getConnectionRequestTimeout();public void setConnectionRequestTimeout(int connectionRequestTimeout) {_		this.requestConfig = requestConfigBuilder().setConnectionRequestTimeout(connectionRequestTimeout).build()__	};set,the,timeout,in,milliseconds,used,when,requesting,a,connection,from,the,connection,manager,using,the,underlying,http,client,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,connection,request,timeout,the,timeout,value,to,request,a,connection,in,milliseconds,see,request,config,get,connection,request,timeout;public,void,set,connection,request,timeout,int,connection,request,timeout,this,request,config,request,config,builder,set,connection,request,timeout,connection,request,timeout,build
HttpComponentsClientHttpRequestFactory -> public void setConnectionRequestTimeout(int connectionRequestTimeout);1523025317;Set the timeout in milliseconds used when requesting a connection_from the connection manager using the underlying {@link RequestConfig}._A timeout value of 0 specifies an infinite timeout._<p>Additional properties can be configured by specifying a_{@link RequestConfig} instance on a custom {@link HttpClient}._@param connectionRequestTimeout the timeout value to request a connection in milliseconds_@see RequestConfig#getConnectionRequestTimeout();public void setConnectionRequestTimeout(int connectionRequestTimeout) {_		this.requestConfig = requestConfigBuilder()_				.setConnectionRequestTimeout(connectionRequestTimeout).build()__	};set,the,timeout,in,milliseconds,used,when,requesting,a,connection,from,the,connection,manager,using,the,underlying,link,request,config,a,timeout,value,of,0,specifies,an,infinite,timeout,p,additional,properties,can,be,configured,by,specifying,a,link,request,config,instance,on,a,custom,link,http,client,param,connection,request,timeout,the,timeout,value,to,request,a,connection,in,milliseconds,see,request,config,get,connection,request,timeout;public,void,set,connection,request,timeout,int,connection,request,timeout,this,request,config,request,config,builder,set,connection,request,timeout,connection,request,timeout,build
HttpComponentsClientHttpRequestFactory -> public void setBufferRequestBody(boolean bufferRequestBody);1374115410;Indicates whether this request factory should buffer the request body internally.__<p>Default is {@code true}. When sending large amounts of data via POST or PUT, it is_recommended to change this property to {@code false}, so as not to run out of memory.;public void setBufferRequestBody(boolean bufferRequestBody) {_		this.bufferRequestBody = bufferRequestBody__	};indicates,whether,this,request,factory,should,buffer,the,request,body,internally,p,default,is,code,true,when,sending,large,amounts,of,data,via,post,or,put,it,is,recommended,to,change,this,property,to,code,false,so,as,not,to,run,out,of,memory;public,void,set,buffer,request,body,boolean,buffer,request,body,this,buffer,request,body,buffer,request,body
HttpComponentsClientHttpRequestFactory -> public void setBufferRequestBody(boolean bufferRequestBody);1377627757;Indicates whether this request factory should buffer the request body internally.__<p>Default is {@code true}. When sending large amounts of data via POST or PUT, it is_recommended to change this property to {@code false}, so as not to run out of memory.;public void setBufferRequestBody(boolean bufferRequestBody) {_		this.bufferRequestBody = bufferRequestBody__	};indicates,whether,this,request,factory,should,buffer,the,request,body,internally,p,default,is,code,true,when,sending,large,amounts,of,data,via,post,or,put,it,is,recommended,to,change,this,property,to,code,false,so,as,not,to,run,out,of,memory;public,void,set,buffer,request,body,boolean,buffer,request,body,this,buffer,request,body,buffer,request,body
HttpComponentsClientHttpRequestFactory -> public void setBufferRequestBody(boolean bufferRequestBody);1377782656;Indicates whether this request factory should buffer the request body internally.__<p>Default is {@code true}. When sending large amounts of data via POST or PUT, it is_recommended to change this property to {@code false}, so as not to run out of memory.;public void setBufferRequestBody(boolean bufferRequestBody) {_		this.bufferRequestBody = bufferRequestBody__	};indicates,whether,this,request,factory,should,buffer,the,request,body,internally,p,default,is,code,true,when,sending,large,amounts,of,data,via,post,or,put,it,is,recommended,to,change,this,property,to,code,false,so,as,not,to,run,out,of,memory;public,void,set,buffer,request,body,boolean,buffer,request,body,this,buffer,request,body,buffer,request,body
HttpComponentsClientHttpRequestFactory -> public void setBufferRequestBody(boolean bufferRequestBody);1383229571;Indicates whether this request factory should buffer the request body internally._<p>Default is {@code true}. When sending large amounts of data via POST or PUT, it is_recommended to change this property to {@code false}, so as not to run out of memory.;public void setBufferRequestBody(boolean bufferRequestBody) {_		this.bufferRequestBody = bufferRequestBody__	};indicates,whether,this,request,factory,should,buffer,the,request,body,internally,p,default,is,code,true,when,sending,large,amounts,of,data,via,post,or,put,it,is,recommended,to,change,this,property,to,code,false,so,as,not,to,run,out,of,memory;public,void,set,buffer,request,body,boolean,buffer,request,body,this,buffer,request,body,buffer,request,body
HttpComponentsClientHttpRequestFactory -> public void setBufferRequestBody(boolean bufferRequestBody);1383232235;Indicates whether this request factory should buffer the request body internally._<p>Default is {@code true}. When sending large amounts of data via POST or PUT, it is_recommended to change this property to {@code false}, so as not to run out of memory.;public void setBufferRequestBody(boolean bufferRequestBody) {_		this.bufferRequestBody = bufferRequestBody__	};indicates,whether,this,request,factory,should,buffer,the,request,body,internally,p,default,is,code,true,when,sending,large,amounts,of,data,via,post,or,put,it,is,recommended,to,change,this,property,to,code,false,so,as,not,to,run,out,of,memory;public,void,set,buffer,request,body,boolean,buffer,request,body,this,buffer,request,body,buffer,request,body
HttpComponentsClientHttpRequestFactory -> public void setBufferRequestBody(boolean bufferRequestBody);1391439900;Indicates whether this request factory should buffer the request body internally._<p>Default is {@code true}. When sending large amounts of data via POST or PUT, it is_recommended to change this property to {@code false}, so as not to run out of memory.;public void setBufferRequestBody(boolean bufferRequestBody) {_		this.bufferRequestBody = bufferRequestBody__	};indicates,whether,this,request,factory,should,buffer,the,request,body,internally,p,default,is,code,true,when,sending,large,amounts,of,data,via,post,or,put,it,is,recommended,to,change,this,property,to,code,false,so,as,not,to,run,out,of,memory;public,void,set,buffer,request,body,boolean,buffer,request,body,this,buffer,request,body,buffer,request,body
HttpComponentsClientHttpRequestFactory -> public void setBufferRequestBody(boolean bufferRequestBody);1394111906;Indicates whether this request factory should buffer the request body internally._<p>Default is {@code true}. When sending large amounts of data via POST or PUT, it is_recommended to change this property to {@code false}, so as not to run out of memory.;public void setBufferRequestBody(boolean bufferRequestBody) {_		this.bufferRequestBody = bufferRequestBody__	};indicates,whether,this,request,factory,should,buffer,the,request,body,internally,p,default,is,code,true,when,sending,large,amounts,of,data,via,post,or,put,it,is,recommended,to,change,this,property,to,code,false,so,as,not,to,run,out,of,memory;public,void,set,buffer,request,body,boolean,buffer,request,body,this,buffer,request,body,buffer,request,body
HttpComponentsClientHttpRequestFactory -> public void setBufferRequestBody(boolean bufferRequestBody);1394469729;Indicates whether this request factory should buffer the request body internally._<p>Default is {@code true}. When sending large amounts of data via POST or PUT, it is_recommended to change this property to {@code false}, so as not to run out of memory.;public void setBufferRequestBody(boolean bufferRequestBody) {_		this.bufferRequestBody = bufferRequestBody__	};indicates,whether,this,request,factory,should,buffer,the,request,body,internally,p,default,is,code,true,when,sending,large,amounts,of,data,via,post,or,put,it,is,recommended,to,change,this,property,to,code,false,so,as,not,to,run,out,of,memory;public,void,set,buffer,request,body,boolean,buffer,request,body,this,buffer,request,body,buffer,request,body
HttpComponentsClientHttpRequestFactory -> public void setBufferRequestBody(boolean bufferRequestBody);1394472663;Indicates whether this request factory should buffer the request body internally._<p>Default is {@code true}. When sending large amounts of data via POST or PUT, it is_recommended to change this property to {@code false}, so as not to run out of memory.;public void setBufferRequestBody(boolean bufferRequestBody) {_		this.bufferRequestBody = bufferRequestBody__	};indicates,whether,this,request,factory,should,buffer,the,request,body,internally,p,default,is,code,true,when,sending,large,amounts,of,data,via,post,or,put,it,is,recommended,to,change,this,property,to,code,false,so,as,not,to,run,out,of,memory;public,void,set,buffer,request,body,boolean,buffer,request,body,this,buffer,request,body,buffer,request,body
HttpComponentsClientHttpRequestFactory -> public void setBufferRequestBody(boolean bufferRequestBody);1412780546;Indicates whether this request factory should buffer the request body internally._<p>Default is {@code true}. When sending large amounts of data via POST or PUT, it is_recommended to change this property to {@code false}, so as not to run out of memory.;public void setBufferRequestBody(boolean bufferRequestBody) {_		this.bufferRequestBody = bufferRequestBody__	};indicates,whether,this,request,factory,should,buffer,the,request,body,internally,p,default,is,code,true,when,sending,large,amounts,of,data,via,post,or,put,it,is,recommended,to,change,this,property,to,code,false,so,as,not,to,run,out,of,memory;public,void,set,buffer,request,body,boolean,buffer,request,body,this,buffer,request,body,buffer,request,body
HttpComponentsClientHttpRequestFactory -> public void setBufferRequestBody(boolean bufferRequestBody);1414442939;Indicates whether this request factory should buffer the request body internally._<p>Default is {@code true}. When sending large amounts of data via POST or PUT, it is_recommended to change this property to {@code false}, so as not to run out of memory.;public void setBufferRequestBody(boolean bufferRequestBody) {_		this.bufferRequestBody = bufferRequestBody__	};indicates,whether,this,request,factory,should,buffer,the,request,body,internally,p,default,is,code,true,when,sending,large,amounts,of,data,via,post,or,put,it,is,recommended,to,change,this,property,to,code,false,so,as,not,to,run,out,of,memory;public,void,set,buffer,request,body,boolean,buffer,request,body,this,buffer,request,body,buffer,request,body
HttpComponentsClientHttpRequestFactory -> public void setBufferRequestBody(boolean bufferRequestBody);1419262267;Indicates whether this request factory should buffer the request body internally._<p>Default is {@code true}. When sending large amounts of data via POST or PUT, it is_recommended to change this property to {@code false}, so as not to run out of memory.;public void setBufferRequestBody(boolean bufferRequestBody) {_		this.bufferRequestBody = bufferRequestBody__	};indicates,whether,this,request,factory,should,buffer,the,request,body,internally,p,default,is,code,true,when,sending,large,amounts,of,data,via,post,or,put,it,is,recommended,to,change,this,property,to,code,false,so,as,not,to,run,out,of,memory;public,void,set,buffer,request,body,boolean,buffer,request,body,this,buffer,request,body,buffer,request,body
HttpComponentsClientHttpRequestFactory -> public void setBufferRequestBody(boolean bufferRequestBody);1419842214;Indicates whether this request factory should buffer the request body internally._<p>Default is {@code true}. When sending large amounts of data via POST or PUT, it is_recommended to change this property to {@code false}, so as not to run out of memory.;public void setBufferRequestBody(boolean bufferRequestBody) {_		this.bufferRequestBody = bufferRequestBody__	};indicates,whether,this,request,factory,should,buffer,the,request,body,internally,p,default,is,code,true,when,sending,large,amounts,of,data,via,post,or,put,it,is,recommended,to,change,this,property,to,code,false,so,as,not,to,run,out,of,memory;public,void,set,buffer,request,body,boolean,buffer,request,body,this,buffer,request,body,buffer,request,body
HttpComponentsClientHttpRequestFactory -> public void setBufferRequestBody(boolean bufferRequestBody);1420464527;Indicates whether this request factory should buffer the request body internally._<p>Default is {@code true}. When sending large amounts of data via POST or PUT, it is_recommended to change this property to {@code false}, so as not to run out of memory.;public void setBufferRequestBody(boolean bufferRequestBody) {_		this.bufferRequestBody = bufferRequestBody__	};indicates,whether,this,request,factory,should,buffer,the,request,body,internally,p,default,is,code,true,when,sending,large,amounts,of,data,via,post,or,put,it,is,recommended,to,change,this,property,to,code,false,so,as,not,to,run,out,of,memory;public,void,set,buffer,request,body,boolean,buffer,request,body,this,buffer,request,body,buffer,request,body
HttpComponentsClientHttpRequestFactory -> public void setBufferRequestBody(boolean bufferRequestBody);1426623891;Indicates whether this request factory should buffer the request body internally._<p>Default is {@code true}. When sending large amounts of data via POST or PUT, it is_recommended to change this property to {@code false}, so as not to run out of memory.;public void setBufferRequestBody(boolean bufferRequestBody) {_		this.bufferRequestBody = bufferRequestBody__	};indicates,whether,this,request,factory,should,buffer,the,request,body,internally,p,default,is,code,true,when,sending,large,amounts,of,data,via,post,or,put,it,is,recommended,to,change,this,property,to,code,false,so,as,not,to,run,out,of,memory;public,void,set,buffer,request,body,boolean,buffer,request,body,this,buffer,request,body,buffer,request,body
HttpComponentsClientHttpRequestFactory -> public void setBufferRequestBody(boolean bufferRequestBody);1434384787;Indicates whether this request factory should buffer the request body internally._<p>Default is {@code true}. When sending large amounts of data via POST or PUT, it is_recommended to change this property to {@code false}, so as not to run out of memory.;public void setBufferRequestBody(boolean bufferRequestBody) {_		this.bufferRequestBody = bufferRequestBody__	};indicates,whether,this,request,factory,should,buffer,the,request,body,internally,p,default,is,code,true,when,sending,large,amounts,of,data,via,post,or,put,it,is,recommended,to,change,this,property,to,code,false,so,as,not,to,run,out,of,memory;public,void,set,buffer,request,body,boolean,buffer,request,body,this,buffer,request,body,buffer,request,body
HttpComponentsClientHttpRequestFactory -> public void setBufferRequestBody(boolean bufferRequestBody);1436200220;Indicates whether this request factory should buffer the request body internally._<p>Default is {@code true}. When sending large amounts of data via POST or PUT, it is_recommended to change this property to {@code false}, so as not to run out of memory.;public void setBufferRequestBody(boolean bufferRequestBody) {_		this.bufferRequestBody = bufferRequestBody__	};indicates,whether,this,request,factory,should,buffer,the,request,body,internally,p,default,is,code,true,when,sending,large,amounts,of,data,via,post,or,put,it,is,recommended,to,change,this,property,to,code,false,so,as,not,to,run,out,of,memory;public,void,set,buffer,request,body,boolean,buffer,request,body,this,buffer,request,body,buffer,request,body
HttpComponentsClientHttpRequestFactory -> public void setBufferRequestBody(boolean bufferRequestBody);1438251337;Indicates whether this request factory should buffer the request body internally._<p>Default is {@code true}. When sending large amounts of data via POST or PUT, it is_recommended to change this property to {@code false}, so as not to run out of memory.;public void setBufferRequestBody(boolean bufferRequestBody) {_		this.bufferRequestBody = bufferRequestBody__	};indicates,whether,this,request,factory,should,buffer,the,request,body,internally,p,default,is,code,true,when,sending,large,amounts,of,data,via,post,or,put,it,is,recommended,to,change,this,property,to,code,false,so,as,not,to,run,out,of,memory;public,void,set,buffer,request,body,boolean,buffer,request,body,this,buffer,request,body,buffer,request,body
HttpComponentsClientHttpRequestFactory -> public void setBufferRequestBody(boolean bufferRequestBody);1449660489;Indicates whether this request factory should buffer the request body internally._<p>Default is {@code true}. When sending large amounts of data via POST or PUT, it is_recommended to change this property to {@code false}, so as not to run out of memory.;public void setBufferRequestBody(boolean bufferRequestBody) {_		this.bufferRequestBody = bufferRequestBody__	};indicates,whether,this,request,factory,should,buffer,the,request,body,internally,p,default,is,code,true,when,sending,large,amounts,of,data,via,post,or,put,it,is,recommended,to,change,this,property,to,code,false,so,as,not,to,run,out,of,memory;public,void,set,buffer,request,body,boolean,buffer,request,body,this,buffer,request,body,buffer,request,body
HttpComponentsClientHttpRequestFactory -> public void setBufferRequestBody(boolean bufferRequestBody);1467375086;Indicates whether this request factory should buffer the request body internally._<p>Default is {@code true}. When sending large amounts of data via POST or PUT, it is_recommended to change this property to {@code false}, so as not to run out of memory.;public void setBufferRequestBody(boolean bufferRequestBody) {_		this.bufferRequestBody = bufferRequestBody__	};indicates,whether,this,request,factory,should,buffer,the,request,body,internally,p,default,is,code,true,when,sending,large,amounts,of,data,via,post,or,put,it,is,recommended,to,change,this,property,to,code,false,so,as,not,to,run,out,of,memory;public,void,set,buffer,request,body,boolean,buffer,request,body,this,buffer,request,body,buffer,request,body
HttpComponentsClientHttpRequestFactory -> public void setBufferRequestBody(boolean bufferRequestBody);1467667302;Indicates whether this request factory should buffer the request body internally._<p>Default is {@code true}. When sending large amounts of data via POST or PUT, it is_recommended to change this property to {@code false}, so as not to run out of memory.;public void setBufferRequestBody(boolean bufferRequestBody) {_		this.bufferRequestBody = bufferRequestBody__	};indicates,whether,this,request,factory,should,buffer,the,request,body,internally,p,default,is,code,true,when,sending,large,amounts,of,data,via,post,or,put,it,is,recommended,to,change,this,property,to,code,false,so,as,not,to,run,out,of,memory;public,void,set,buffer,request,body,boolean,buffer,request,body,this,buffer,request,body,buffer,request,body
HttpComponentsClientHttpRequestFactory -> public void setBufferRequestBody(boolean bufferRequestBody);1468600707;Indicates whether this request factory should buffer the request body internally._<p>Default is {@code true}. When sending large amounts of data via POST or PUT, it is_recommended to change this property to {@code false}, so as not to run out of memory.;public void setBufferRequestBody(boolean bufferRequestBody) {_		this.bufferRequestBody = bufferRequestBody__	};indicates,whether,this,request,factory,should,buffer,the,request,body,internally,p,default,is,code,true,when,sending,large,amounts,of,data,via,post,or,put,it,is,recommended,to,change,this,property,to,code,false,so,as,not,to,run,out,of,memory;public,void,set,buffer,request,body,boolean,buffer,request,body,this,buffer,request,body,buffer,request,body
HttpComponentsClientHttpRequestFactory -> public void setBufferRequestBody(boolean bufferRequestBody);1495868221;Indicates whether this request factory should buffer the request body internally._<p>Default is {@code true}. When sending large amounts of data via POST or PUT, it is_recommended to change this property to {@code false}, so as not to run out of memory.;public void setBufferRequestBody(boolean bufferRequestBody) {_		this.bufferRequestBody = bufferRequestBody__	};indicates,whether,this,request,factory,should,buffer,the,request,body,internally,p,default,is,code,true,when,sending,large,amounts,of,data,via,post,or,put,it,is,recommended,to,change,this,property,to,code,false,so,as,not,to,run,out,of,memory;public,void,set,buffer,request,body,boolean,buffer,request,body,this,buffer,request,body,buffer,request,body
HttpComponentsClientHttpRequestFactory -> public void setBufferRequestBody(boolean bufferRequestBody);1496837955;Indicates whether this request factory should buffer the request body internally._<p>Default is {@code true}. When sending large amounts of data via POST or PUT, it is_recommended to change this property to {@code false}, so as not to run out of memory.;public void setBufferRequestBody(boolean bufferRequestBody) {_		this.bufferRequestBody = bufferRequestBody__	};indicates,whether,this,request,factory,should,buffer,the,request,body,internally,p,default,is,code,true,when,sending,large,amounts,of,data,via,post,or,put,it,is,recommended,to,change,this,property,to,code,false,so,as,not,to,run,out,of,memory;public,void,set,buffer,request,body,boolean,buffer,request,body,this,buffer,request,body,buffer,request,body
HttpComponentsClientHttpRequestFactory -> public void setBufferRequestBody(boolean bufferRequestBody);1497453044;Indicates whether this request factory should buffer the request body internally._<p>Default is {@code true}. When sending large amounts of data via POST or PUT, it is_recommended to change this property to {@code false}, so as not to run out of memory.;public void setBufferRequestBody(boolean bufferRequestBody) {_		this.bufferRequestBody = bufferRequestBody__	};indicates,whether,this,request,factory,should,buffer,the,request,body,internally,p,default,is,code,true,when,sending,large,amounts,of,data,via,post,or,put,it,is,recommended,to,change,this,property,to,code,false,so,as,not,to,run,out,of,memory;public,void,set,buffer,request,body,boolean,buffer,request,body,this,buffer,request,body,buffer,request,body
HttpComponentsClientHttpRequestFactory -> public void setBufferRequestBody(boolean bufferRequestBody);1498780456;Indicates whether this request factory should buffer the request body internally._<p>Default is {@code true}. When sending large amounts of data via POST or PUT, it is_recommended to change this property to {@code false}, so as not to run out of memory.;public void setBufferRequestBody(boolean bufferRequestBody) {_		this.bufferRequestBody = bufferRequestBody__	};indicates,whether,this,request,factory,should,buffer,the,request,body,internally,p,default,is,code,true,when,sending,large,amounts,of,data,via,post,or,put,it,is,recommended,to,change,this,property,to,code,false,so,as,not,to,run,out,of,memory;public,void,set,buffer,request,body,boolean,buffer,request,body,this,buffer,request,body,buffer,request,body
HttpComponentsClientHttpRequestFactory -> public void setBufferRequestBody(boolean bufferRequestBody);1500416137;Indicates whether this request factory should buffer the request body internally._<p>Default is {@code true}. When sending large amounts of data via POST or PUT, it is_recommended to change this property to {@code false}, so as not to run out of memory.;public void setBufferRequestBody(boolean bufferRequestBody) {_		this.bufferRequestBody = bufferRequestBody__	};indicates,whether,this,request,factory,should,buffer,the,request,body,internally,p,default,is,code,true,when,sending,large,amounts,of,data,via,post,or,put,it,is,recommended,to,change,this,property,to,code,false,so,as,not,to,run,out,of,memory;public,void,set,buffer,request,body,boolean,buffer,request,body,this,buffer,request,body,buffer,request,body
HttpComponentsClientHttpRequestFactory -> public void setBufferRequestBody(boolean bufferRequestBody);1520890308;Indicates whether this request factory should buffer the request body internally._<p>Default is {@code true}. When sending large amounts of data via POST or PUT, it is_recommended to change this property to {@code false}, so as not to run out of memory._@since 4.0;public void setBufferRequestBody(boolean bufferRequestBody) {_		this.bufferRequestBody = bufferRequestBody__	};indicates,whether,this,request,factory,should,buffer,the,request,body,internally,p,default,is,code,true,when,sending,large,amounts,of,data,via,post,or,put,it,is,recommended,to,change,this,property,to,code,false,so,as,not,to,run,out,of,memory,since,4,0;public,void,set,buffer,request,body,boolean,buffer,request,body,this,buffer,request,body,buffer,request,body
HttpComponentsClientHttpRequestFactory -> public void setBufferRequestBody(boolean bufferRequestBody);1523025317;Indicates whether this request factory should buffer the request body internally._<p>Default is {@code true}. When sending large amounts of data via POST or PUT, it is_recommended to change this property to {@code false}, so as not to run out of memory._@since 4.0;public void setBufferRequestBody(boolean bufferRequestBody) {_		this.bufferRequestBody = bufferRequestBody__	};indicates,whether,this,request,factory,should,buffer,the,request,body,internally,p,default,is,code,true,when,sending,large,amounts,of,data,via,post,or,put,it,is,recommended,to,change,this,property,to,code,false,so,as,not,to,run,out,of,memory,since,4,0;public,void,set,buffer,request,body,boolean,buffer,request,body,this,buffer,request,body,buffer,request,body
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(HttpClient httpClient);1328020251;Set the {@code HttpClient} used by this factory.;public void setHttpClient(HttpClient httpClient) {_		this.httpClient = httpClient__	};set,the,code,http,client,used,by,this,factory;public,void,set,http,client,http,client,http,client,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(HttpClient httpClient);1340398642;Set the {@code HttpClient} used by this factory.;public void setHttpClient(HttpClient httpClient) {_		this.httpClient = httpClient__	};set,the,code,http,client,used,by,this,factory;public,void,set,http,client,http,client,http,client,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(HttpClient httpClient);1340648015;Set the {@code HttpClient} used by this factory.;public void setHttpClient(HttpClient httpClient) {_		this.httpClient = httpClient__	};set,the,code,http,client,used,by,this,factory;public,void,set,http,client,http,client,http,client,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(HttpClient httpClient);1349872133;Set the {@code HttpClient} used by this factory.;public void setHttpClient(HttpClient httpClient) {_		this.httpClient = httpClient__	};set,the,code,http,client,used,by,this,factory;public,void,set,http,client,http,client,http,client,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(HttpClient httpClient);1356735495;Set the {@code HttpClient} used by this factory.;public void setHttpClient(HttpClient httpClient) {_		this.httpClient = httpClient__	};set,the,code,http,client,used,by,this,factory;public,void,set,http,client,http,client,http,client,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(HttpClient httpClient);1357119239;Set the {@code HttpClient} used by this factory.;public void setHttpClient(HttpClient httpClient) {_		this.httpClient = httpClient__	};set,the,code,http,client,used,by,this,factory;public,void,set,http,client,http,client,http,client,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(HttpClient httpClient);1368482696;Set the {@code HttpClient} used by this factory.;public void setHttpClient(HttpClient httpClient) {_		this.httpClient = httpClient__	};set,the,code,http,client,used,by,this,factory;public,void,set,http,client,http,client,http,client,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(HttpClient httpClient);1374115410;Set the {@code HttpClient} used by this factory.;public void setHttpClient(HttpClient httpClient) {_		this.httpClient = httpClient__	};set,the,code,http,client,used,by,this,factory;public,void,set,http,client,http,client,http,client,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(HttpClient httpClient);1377627757;Set the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public void setHttpClient(HttpClient httpClient) {_		this.httpClient = httpClient__	};set,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,void,set,http,client,http,client,http,client,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(HttpClient httpClient);1383232235;Set the {@code HttpClient} used for_<p>_As of Spring Framework 4 the given client is expected to be of type_CloseableHttpClient (requiring HttpClient 4.3+).__{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public void setHttpClient(HttpClient httpClient) {_		Assert.isInstanceOf(CloseableHttpClient.class, httpClient, "'httpClient' is not of type CloseableHttpClient")__        this.httpClient = (CloseableHttpClient) httpClient__    };set,the,code,http,client,used,for,p,as,of,spring,framework,4,the,given,client,is,expected,to,be,of,type,closeable,http,client,requiring,http,client,4,3,linkplain,create,request,uri,http,method,synchronous,execution;public,void,set,http,client,http,client,http,client,assert,is,instance,of,closeable,http,client,class,http,client,http,client,is,not,of,type,closeable,http,client,this,http,client,closeable,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(HttpClient httpClient);1391439900;Set the {@code HttpClient} used for_<p>_As of Spring Framework 4 the given client is expected to be of type_CloseableHttpClient (requiring HttpClient 4.3+).__{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public void setHttpClient(HttpClient httpClient) {_		Assert.isInstanceOf(CloseableHttpClient.class, httpClient, "'httpClient' is not of type CloseableHttpClient")__        this.httpClient = (CloseableHttpClient) httpClient__    };set,the,code,http,client,used,for,p,as,of,spring,framework,4,the,given,client,is,expected,to,be,of,type,closeable,http,client,requiring,http,client,4,3,linkplain,create,request,uri,http,method,synchronous,execution;public,void,set,http,client,http,client,http,client,assert,is,instance,of,closeable,http,client,class,http,client,http,client,is,not,of,type,closeable,http,client,this,http,client,closeable,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(HttpClient httpClient);1394111906;Set the {@code HttpClient} used for_<p>As of Spring Framework 4.0, the given client is expected to be of type_CloseableHttpClient (requiring HttpClient 4.3+).;public void setHttpClient(HttpClient httpClient) {_		Assert.isInstanceOf(CloseableHttpClient.class, httpClient, "'httpClient' is not of type CloseableHttpClient")__        this.httpClient = (CloseableHttpClient) httpClient__    };set,the,code,http,client,used,for,p,as,of,spring,framework,4,0,the,given,client,is,expected,to,be,of,type,closeable,http,client,requiring,http,client,4,3;public,void,set,http,client,http,client,http,client,assert,is,instance,of,closeable,http,client,class,http,client,http,client,is,not,of,type,closeable,http,client,this,http,client,closeable,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(HttpClient httpClient);1394469729;Set the {@code HttpClient} used for_<p>As of Spring Framework 4.0, the given client is expected to be of type_CloseableHttpClient (requiring HttpClient 4.3+).;public void setHttpClient(HttpClient httpClient) {_		Assert.isInstanceOf(CloseableHttpClient.class, httpClient, "'httpClient' is not of type CloseableHttpClient")__        this.httpClient = (CloseableHttpClient) httpClient__    };set,the,code,http,client,used,for,p,as,of,spring,framework,4,0,the,given,client,is,expected,to,be,of,type,closeable,http,client,requiring,http,client,4,3;public,void,set,http,client,http,client,http,client,assert,is,instance,of,closeable,http,client,class,http,client,http,client,is,not,of,type,closeable,http,client,this,http,client,closeable,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(HttpClient httpClient);1394472663;Set the {@code HttpClient} used for_<p>As of Spring Framework 4.0, the given client is expected to be of type_{@link CloseableHttpClient} (requiring HttpClient 4.3+).;public void setHttpClient(HttpClient httpClient) {_		Assert.isInstanceOf(CloseableHttpClient.class, httpClient, "'httpClient' is not of type CloseableHttpClient")__        this.httpClient = (CloseableHttpClient) httpClient__    };set,the,code,http,client,used,for,p,as,of,spring,framework,4,0,the,given,client,is,expected,to,be,of,type,link,closeable,http,client,requiring,http,client,4,3;public,void,set,http,client,http,client,http,client,assert,is,instance,of,closeable,http,client,class,http,client,http,client,is,not,of,type,closeable,http,client,this,http,client,closeable,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(HttpClient httpClient);1412780546;Set the {@code HttpClient} used for_<p>As of Spring Framework 4.0, the given client is expected to be of type_{@link CloseableHttpClient} (requiring HttpClient 4.3+).;public void setHttpClient(HttpClient httpClient) {_		Assert.isInstanceOf(CloseableHttpClient.class, httpClient, "'httpClient' is not of type CloseableHttpClient")__		this.httpClient = (CloseableHttpClient) httpClient__	};set,the,code,http,client,used,for,p,as,of,spring,framework,4,0,the,given,client,is,expected,to,be,of,type,link,closeable,http,client,requiring,http,client,4,3;public,void,set,http,client,http,client,http,client,assert,is,instance,of,closeable,http,client,class,http,client,http,client,is,not,of,type,closeable,http,client,this,http,client,closeable,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(HttpClient httpClient);1414442939;Set the {@code HttpClient} used for_<p>As of Spring Framework 4.0, the given client is expected to be of type_{@link CloseableHttpClient} (requiring HttpClient 4.3+).;public void setHttpClient(HttpClient httpClient) {_		Assert.isInstanceOf(CloseableHttpClient.class, httpClient, "'httpClient' is not of type CloseableHttpClient")__		this.httpClient = (CloseableHttpClient) httpClient__	};set,the,code,http,client,used,for,p,as,of,spring,framework,4,0,the,given,client,is,expected,to,be,of,type,link,closeable,http,client,requiring,http,client,4,3;public,void,set,http,client,http,client,http,client,assert,is,instance,of,closeable,http,client,class,http,client,http,client,is,not,of,type,closeable,http,client,this,http,client,closeable,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(HttpClient httpClient);1419262267;Set the {@code HttpClient} used for_<p>As of Spring Framework 4.0, the given client is expected to be of type_{@link CloseableHttpClient} (requiring HttpClient 4.3+).;public void setHttpClient(HttpClient httpClient) {_		Assert.isInstanceOf(CloseableHttpClient.class, httpClient, "'httpClient' is not of type CloseableHttpClient")__		this.httpClient = (CloseableHttpClient) httpClient__	};set,the,code,http,client,used,for,p,as,of,spring,framework,4,0,the,given,client,is,expected,to,be,of,type,link,closeable,http,client,requiring,http,client,4,3;public,void,set,http,client,http,client,http,client,assert,is,instance,of,closeable,http,client,class,http,client,http,client,is,not,of,type,closeable,http,client,this,http,client,closeable,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(HttpClient httpClient);1419842214;Set the {@code HttpClient} used for_<p>As of Spring Framework 4.0, the given client is expected to be of type_{@link CloseableHttpClient} (requiring HttpClient 4.3+).;public void setHttpClient(HttpClient httpClient) {_		Assert.isInstanceOf(CloseableHttpClient.class, httpClient, "'httpClient' is not of type CloseableHttpClient")__		this.httpClient = (CloseableHttpClient) httpClient__	};set,the,code,http,client,used,for,p,as,of,spring,framework,4,0,the,given,client,is,expected,to,be,of,type,link,closeable,http,client,requiring,http,client,4,3;public,void,set,http,client,http,client,http,client,assert,is,instance,of,closeable,http,client,class,http,client,http,client,is,not,of,type,closeable,http,client,this,http,client,closeable,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(HttpClient httpClient);1420464527;Set the {@code HttpClient} used for_<p>As of Spring Framework 4.0, the given client is expected to be of type_{@link CloseableHttpClient} (requiring HttpClient 4.3+).;public void setHttpClient(HttpClient httpClient) {_		Assert.isInstanceOf(CloseableHttpClient.class, httpClient, "'httpClient' is not of type CloseableHttpClient")__		this.httpClient = (CloseableHttpClient) httpClient__	};set,the,code,http,client,used,for,p,as,of,spring,framework,4,0,the,given,client,is,expected,to,be,of,type,link,closeable,http,client,requiring,http,client,4,3;public,void,set,http,client,http,client,http,client,assert,is,instance,of,closeable,http,client,class,http,client,http,client,is,not,of,type,closeable,http,client,this,http,client,closeable,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(HttpClient httpClient);1426623891;Set the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public void setHttpClient(HttpClient httpClient) {_		this.httpClient = httpClient__	};set,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,void,set,http,client,http,client,http,client,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(HttpClient httpClient);1434384787;Set the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public void setHttpClient(HttpClient httpClient) {_		this.httpClient = httpClient__	};set,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,void,set,http,client,http,client,http,client,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(HttpClient httpClient);1436200220;Set the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public void setHttpClient(HttpClient httpClient) {_		this.httpClient = httpClient__	};set,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,void,set,http,client,http,client,http,client,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(HttpClient httpClient);1438251337;Set the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public void setHttpClient(HttpClient httpClient) {_		this.httpClient = httpClient__	};set,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,void,set,http,client,http,client,http,client,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(HttpClient httpClient);1449660489;Set the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public void setHttpClient(HttpClient httpClient) {_		this.httpClient = httpClient__	};set,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,void,set,http,client,http,client,http,client,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(HttpClient httpClient);1467375086;Set the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public void setHttpClient(HttpClient httpClient) {_		this.httpClient = httpClient__	};set,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,void,set,http,client,http,client,http,client,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(HttpClient httpClient);1467667302;Set the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public void setHttpClient(HttpClient httpClient) {_		this.httpClient = httpClient__	};set,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,void,set,http,client,http,client,http,client,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(HttpClient httpClient);1468600707;Set the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public void setHttpClient(HttpClient httpClient) {_		this.httpClient = httpClient__	};set,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,void,set,http,client,http,client,http,client,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(HttpClient httpClient);1495868221;Set the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public void setHttpClient(HttpClient httpClient) {_		this.httpClient = httpClient__	};set,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,void,set,http,client,http,client,http,client,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(HttpClient httpClient);1496837955;Set the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public void setHttpClient(HttpClient httpClient) {_		this.httpClient = httpClient__	};set,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,void,set,http,client,http,client,http,client,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(HttpClient httpClient);1497453044;Set the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public void setHttpClient(HttpClient httpClient) {_		Assert.notNull(httpClient, "HttpClient must not be null")__		this.httpClient = httpClient__	};set,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,void,set,http,client,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(HttpClient httpClient);1498780456;Set the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public void setHttpClient(HttpClient httpClient) {_		Assert.notNull(httpClient, "HttpClient must not be null")__		this.httpClient = httpClient__	};set,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,void,set,http,client,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(HttpClient httpClient);1500416137;Set the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public void setHttpClient(HttpClient httpClient) {_		Assert.notNull(httpClient, "HttpClient must not be null")__		this.httpClient = httpClient__	};set,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,void,set,http,client,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(HttpClient httpClient);1520890308;Set the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public void setHttpClient(HttpClient httpClient) {_		Assert.notNull(httpClient, "HttpClient must not be null")__		this.httpClient = httpClient__	};set,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,void,set,http,client,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public void setHttpClient(HttpClient httpClient);1523025317;Set the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public void setHttpClient(HttpClient httpClient) {_		Assert.notNull(httpClient, "HttpClient must not be null")__		this.httpClient = httpClient__	};set,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,void,set,http,client,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpClient getHttpClient();1328020251;Return the {@code HttpClient} used by this factory.;public HttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,by,this,factory;public,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> public HttpClient getHttpClient();1340398642;Return the {@code HttpClient} used by this factory.;public HttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,by,this,factory;public,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> public HttpClient getHttpClient();1340648015;Return the {@code HttpClient} used by this factory.;public HttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,by,this,factory;public,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> public HttpClient getHttpClient();1349872133;Return the {@code HttpClient} used by this factory.;public HttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,by,this,factory;public,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> public HttpClient getHttpClient();1356735495;Return the {@code HttpClient} used by this factory.;public HttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,by,this,factory;public,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> public HttpClient getHttpClient();1357119239;Return the {@code HttpClient} used by this factory.;public HttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,by,this,factory;public,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> public HttpClient getHttpClient();1368482696;Return the {@code HttpClient} used by this factory.;public HttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,by,this,factory;public,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> public HttpClient getHttpClient();1374115410;Return the {@code HttpClient} used by this factory.;public HttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,by,this,factory;public,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> public HttpClient getHttpClient();1377627757;Return the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public HttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> public HttpClient getHttpClient();1383232235;Return the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public HttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> public HttpClient getHttpClient();1391439900;Return the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public HttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> public HttpClient getHttpClient();1394111906;Return the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public HttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> public HttpClient getHttpClient();1394469729;Return the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public HttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> public HttpClient getHttpClient();1394472663;Return the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public HttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> public HttpClient getHttpClient();1412780546;Return the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public HttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> public HttpClient getHttpClient();1414442939;Return the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public HttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> public HttpClient getHttpClient();1419262267;Return the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public HttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> public HttpClient getHttpClient();1419842214;Return the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public HttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> public HttpClient getHttpClient();1420464527;Return the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public HttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> public HttpClient getHttpClient();1426623891;Return the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public HttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> public HttpClient getHttpClient();1434384787;Return the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public HttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> public HttpClient getHttpClient();1436200220;Return the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public HttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> public HttpClient getHttpClient();1438251337;Return the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public HttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> public HttpClient getHttpClient();1449660489;Return the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public HttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> public HttpClient getHttpClient();1467375086;Return the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public HttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> public HttpClient getHttpClient();1467667302;Return the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public HttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> public HttpClient getHttpClient();1468600707;Return the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public HttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> public HttpClient getHttpClient();1495868221;Return the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public HttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> public HttpClient getHttpClient();1497453044;Return the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public HttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> public HttpClient getHttpClient();1500416137;Return the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public HttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> public HttpClient getHttpClient();1520890308;Return the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public HttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> public HttpClient getHttpClient();1523025317;Return the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;public HttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;public,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1328020251;Create a new instance of the HttpComponentsClientHttpRequestFactory with a default_{@link HttpClient} that uses a default {@link org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager}.;public HttpComponentsClientHttpRequestFactory() {_		SchemeRegistry schemeRegistry = new SchemeRegistry()__		schemeRegistry.register(new Scheme("http", 80, PlainSocketFactory.getSocketFactory()))__		schemeRegistry.register(new Scheme("https", 443, SSLSocketFactory.getSocketFactory()))___		ThreadSafeClientConnManager connectionManager = new ThreadSafeClientConnManager(schemeRegistry)__		connectionManager.setMaxTotal(DEFAULT_MAX_TOTAL_CONNECTIONS)__		connectionManager.setDefaultMaxPerRoute(DEFAULT_MAX_CONNECTIONS_PER_ROUTE)___		this.httpClient = new DefaultHttpClient(connectionManager)__		setReadTimeout(DEFAULT_READ_TIMEOUT_MILLISECONDS)__	};create,a,new,instance,of,the,http,components,client,http,request,factory,with,a,default,link,http,client,that,uses,a,default,link,org,apache,http,impl,conn,tsccm,thread,safe,client,conn,manager;public,http,components,client,http,request,factory,scheme,registry,scheme,registry,new,scheme,registry,scheme,registry,register,new,scheme,http,80,plain,socket,factory,get,socket,factory,scheme,registry,register,new,scheme,https,443,sslsocket,factory,get,socket,factory,thread,safe,client,conn,manager,connection,manager,new,thread,safe,client,conn,manager,scheme,registry,connection,manager,set,max,total,connection,manager,set,default,max,per,route,this,http,client,new,default,http,client,connection,manager,set,read,timeout
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1340398642;Create a new instance of the HttpComponentsClientHttpRequestFactory with a default_{@link HttpClient} that uses a default {@link org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager}.;public HttpComponentsClientHttpRequestFactory() {_		SchemeRegistry schemeRegistry = new SchemeRegistry()__		schemeRegistry.register(new Scheme("http", 80, PlainSocketFactory.getSocketFactory()))__		schemeRegistry.register(new Scheme("https", 443, SSLSocketFactory.getSocketFactory()))___		ThreadSafeClientConnManager connectionManager = new ThreadSafeClientConnManager(schemeRegistry)__		connectionManager.setMaxTotal(DEFAULT_MAX_TOTAL_CONNECTIONS)__		connectionManager.setDefaultMaxPerRoute(DEFAULT_MAX_CONNECTIONS_PER_ROUTE)___		this.httpClient = new DefaultHttpClient(connectionManager)__		setReadTimeout(DEFAULT_READ_TIMEOUT_MILLISECONDS)__	};create,a,new,instance,of,the,http,components,client,http,request,factory,with,a,default,link,http,client,that,uses,a,default,link,org,apache,http,impl,conn,tsccm,thread,safe,client,conn,manager;public,http,components,client,http,request,factory,scheme,registry,scheme,registry,new,scheme,registry,scheme,registry,register,new,scheme,http,80,plain,socket,factory,get,socket,factory,scheme,registry,register,new,scheme,https,443,sslsocket,factory,get,socket,factory,thread,safe,client,conn,manager,connection,manager,new,thread,safe,client,conn,manager,scheme,registry,connection,manager,set,max,total,connection,manager,set,default,max,per,route,this,http,client,new,default,http,client,connection,manager,set,read,timeout
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1340648015;Create a new instance of the HttpComponentsClientHttpRequestFactory with a default_{@link HttpClient} that uses a default {@link org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager}.;public HttpComponentsClientHttpRequestFactory() {_		SchemeRegistry schemeRegistry = new SchemeRegistry()__		schemeRegistry.register(new Scheme("http", 80, PlainSocketFactory.getSocketFactory()))__		schemeRegistry.register(new Scheme("https", 443, SSLSocketFactory.getSocketFactory()))___		ThreadSafeClientConnManager connectionManager = new ThreadSafeClientConnManager(schemeRegistry)__		connectionManager.setMaxTotal(DEFAULT_MAX_TOTAL_CONNECTIONS)__		connectionManager.setDefaultMaxPerRoute(DEFAULT_MAX_CONNECTIONS_PER_ROUTE)___		this.httpClient = new DefaultHttpClient(connectionManager)__		setReadTimeout(DEFAULT_READ_TIMEOUT_MILLISECONDS)__	};create,a,new,instance,of,the,http,components,client,http,request,factory,with,a,default,link,http,client,that,uses,a,default,link,org,apache,http,impl,conn,tsccm,thread,safe,client,conn,manager;public,http,components,client,http,request,factory,scheme,registry,scheme,registry,new,scheme,registry,scheme,registry,register,new,scheme,http,80,plain,socket,factory,get,socket,factory,scheme,registry,register,new,scheme,https,443,sslsocket,factory,get,socket,factory,thread,safe,client,conn,manager,connection,manager,new,thread,safe,client,conn,manager,scheme,registry,connection,manager,set,max,total,connection,manager,set,default,max,per,route,this,http,client,new,default,http,client,connection,manager,set,read,timeout
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1349872133;Create a new instance of the HttpComponentsClientHttpRequestFactory with a default_{@link HttpClient} that uses a default {@link org.apache.http.impl.conn.PoolingClientConnectionManager}.;public HttpComponentsClientHttpRequestFactory() {_		SchemeRegistry schemeRegistry = new SchemeRegistry()__		schemeRegistry.register(new Scheme("http", 80, PlainSocketFactory.getSocketFactory()))__		schemeRegistry.register(new Scheme("https", 443, SSLSocketFactory.getSocketFactory()))___		PoolingClientConnectionManager connectionManager = new PoolingClientConnectionManager(schemeRegistry)__		connectionManager.setMaxTotal(DEFAULT_MAX_TOTAL_CONNECTIONS)__		connectionManager.setDefaultMaxPerRoute(DEFAULT_MAX_CONNECTIONS_PER_ROUTE)___		this.httpClient = new DefaultHttpClient(connectionManager)__		setReadTimeout(DEFAULT_READ_TIMEOUT_MILLISECONDS)__	};create,a,new,instance,of,the,http,components,client,http,request,factory,with,a,default,link,http,client,that,uses,a,default,link,org,apache,http,impl,conn,pooling,client,connection,manager;public,http,components,client,http,request,factory,scheme,registry,scheme,registry,new,scheme,registry,scheme,registry,register,new,scheme,http,80,plain,socket,factory,get,socket,factory,scheme,registry,register,new,scheme,https,443,sslsocket,factory,get,socket,factory,pooling,client,connection,manager,connection,manager,new,pooling,client,connection,manager,scheme,registry,connection,manager,set,max,total,connection,manager,set,default,max,per,route,this,http,client,new,default,http,client,connection,manager,set,read,timeout
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1356735495;Create a new instance of the HttpComponentsClientHttpRequestFactory with a default_{@link HttpClient} that uses a default {@link org.apache.http.impl.conn.PoolingClientConnectionManager}.;public HttpComponentsClientHttpRequestFactory() {_		SchemeRegistry schemeRegistry = new SchemeRegistry()__		schemeRegistry.register(new Scheme("http", 80, PlainSocketFactory.getSocketFactory()))__		schemeRegistry.register(new Scheme("https", 443, SSLSocketFactory.getSocketFactory()))___		PoolingClientConnectionManager connectionManager = new PoolingClientConnectionManager(schemeRegistry)__		connectionManager.setMaxTotal(DEFAULT_MAX_TOTAL_CONNECTIONS)__		connectionManager.setDefaultMaxPerRoute(DEFAULT_MAX_CONNECTIONS_PER_ROUTE)___		this.httpClient = new DefaultHttpClient(connectionManager)__		setReadTimeout(DEFAULT_READ_TIMEOUT_MILLISECONDS)__	};create,a,new,instance,of,the,http,components,client,http,request,factory,with,a,default,link,http,client,that,uses,a,default,link,org,apache,http,impl,conn,pooling,client,connection,manager;public,http,components,client,http,request,factory,scheme,registry,scheme,registry,new,scheme,registry,scheme,registry,register,new,scheme,http,80,plain,socket,factory,get,socket,factory,scheme,registry,register,new,scheme,https,443,sslsocket,factory,get,socket,factory,pooling,client,connection,manager,connection,manager,new,pooling,client,connection,manager,scheme,registry,connection,manager,set,max,total,connection,manager,set,default,max,per,route,this,http,client,new,default,http,client,connection,manager,set,read,timeout
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1357119239;Create a new instance of the HttpComponentsClientHttpRequestFactory with a default_{@link HttpClient} that uses a default {@link org.apache.http.impl.conn.PoolingClientConnectionManager}.;public HttpComponentsClientHttpRequestFactory() {_		SchemeRegistry schemeRegistry = new SchemeRegistry()__		schemeRegistry.register(new Scheme("http", 80, PlainSocketFactory.getSocketFactory()))__		schemeRegistry.register(new Scheme("https", 443, SSLSocketFactory.getSocketFactory()))___		PoolingClientConnectionManager connectionManager = new PoolingClientConnectionManager(schemeRegistry)__		connectionManager.setMaxTotal(DEFAULT_MAX_TOTAL_CONNECTIONS)__		connectionManager.setDefaultMaxPerRoute(DEFAULT_MAX_CONNECTIONS_PER_ROUTE)___		this.httpClient = new DefaultHttpClient(connectionManager)__		setReadTimeout(DEFAULT_READ_TIMEOUT_MILLISECONDS)__	};create,a,new,instance,of,the,http,components,client,http,request,factory,with,a,default,link,http,client,that,uses,a,default,link,org,apache,http,impl,conn,pooling,client,connection,manager;public,http,components,client,http,request,factory,scheme,registry,scheme,registry,new,scheme,registry,scheme,registry,register,new,scheme,http,80,plain,socket,factory,get,socket,factory,scheme,registry,register,new,scheme,https,443,sslsocket,factory,get,socket,factory,pooling,client,connection,manager,connection,manager,new,pooling,client,connection,manager,scheme,registry,connection,manager,set,max,total,connection,manager,set,default,max,per,route,this,http,client,new,default,http,client,connection,manager,set,read,timeout
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1368482696;Create a new instance of the HttpComponentsClientHttpRequestFactory with a default_{@link HttpClient} that uses a default {@link org.apache.http.impl.conn.PoolingClientConnectionManager}.;public HttpComponentsClientHttpRequestFactory() {_		SchemeRegistry schemeRegistry = new SchemeRegistry()__		schemeRegistry.register(new Scheme("http", 80, PlainSocketFactory.getSocketFactory()))__		schemeRegistry.register(new Scheme("https", 443, SSLSocketFactory.getSocketFactory()))___		PoolingClientConnectionManager connectionManager = new PoolingClientConnectionManager(schemeRegistry)__		connectionManager.setMaxTotal(DEFAULT_MAX_TOTAL_CONNECTIONS)__		connectionManager.setDefaultMaxPerRoute(DEFAULT_MAX_CONNECTIONS_PER_ROUTE)___		this.httpClient = new DefaultHttpClient(connectionManager)__		setReadTimeout(DEFAULT_READ_TIMEOUT_MILLISECONDS)__	};create,a,new,instance,of,the,http,components,client,http,request,factory,with,a,default,link,http,client,that,uses,a,default,link,org,apache,http,impl,conn,pooling,client,connection,manager;public,http,components,client,http,request,factory,scheme,registry,scheme,registry,new,scheme,registry,scheme,registry,register,new,scheme,http,80,plain,socket,factory,get,socket,factory,scheme,registry,register,new,scheme,https,443,sslsocket,factory,get,socket,factory,pooling,client,connection,manager,connection,manager,new,pooling,client,connection,manager,scheme,registry,connection,manager,set,max,total,connection,manager,set,default,max,per,route,this,http,client,new,default,http,client,connection,manager,set,read,timeout
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1374115410;Create a new instance of the HttpComponentsClientHttpRequestFactory with a default_{@link HttpClient} that uses a default {@link org.apache.http.impl.conn.PoolingClientConnectionManager}.;public HttpComponentsClientHttpRequestFactory() {_		SchemeRegistry schemeRegistry = new SchemeRegistry()__		schemeRegistry.register(new Scheme("http", 80, PlainSocketFactory.getSocketFactory()))__		schemeRegistry.register(new Scheme("https", 443, SSLSocketFactory.getSocketFactory()))___		PoolingClientConnectionManager connectionManager = new PoolingClientConnectionManager(schemeRegistry)__		connectionManager.setMaxTotal(DEFAULT_MAX_TOTAL_CONNECTIONS)__		connectionManager.setDefaultMaxPerRoute(DEFAULT_MAX_CONNECTIONS_PER_ROUTE)___		this.httpClient = new DefaultHttpClient(connectionManager)__		setReadTimeout(DEFAULT_READ_TIMEOUT_MILLISECONDS)__	};create,a,new,instance,of,the,http,components,client,http,request,factory,with,a,default,link,http,client,that,uses,a,default,link,org,apache,http,impl,conn,pooling,client,connection,manager;public,http,components,client,http,request,factory,scheme,registry,scheme,registry,new,scheme,registry,scheme,registry,register,new,scheme,http,80,plain,socket,factory,get,socket,factory,scheme,registry,register,new,scheme,https,443,sslsocket,factory,get,socket,factory,pooling,client,connection,manager,connection,manager,new,pooling,client,connection,manager,scheme,registry,connection,manager,set,max,total,connection,manager,set,default,max,per,route,this,http,client,new,default,http,client,connection,manager,set,read,timeout
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1377627757;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory} with_a default {@link HttpClient}.;public HttpComponentsClientHttpRequestFactory() {_		this(HttpClients.createDefault())__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,a,default,link,http,client;public,http,components,client,http,request,factory,this,http,clients,create,default
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1377782656;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory} with_a default {@link HttpClient}.;public HttpComponentsClientHttpRequestFactory() {_		this(HttpClients.createSystem())__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,a,default,link,http,client;public,http,components,client,http,request,factory,this,http,clients,create,system
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1383229571;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory} with_a default {@link HttpClient}.;public HttpComponentsClientHttpRequestFactory() {_		this(HttpClients.createSystem())__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,a,default,link,http,client;public,http,components,client,http,request,factory,this,http,clients,create,system
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1383232235;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory} with_a default {@link HttpClient}.;public HttpComponentsClientHttpRequestFactory() {_		this(HttpClients.createSystem())__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,a,default,link,http,client;public,http,components,client,http,request,factory,this,http,clients,create,system
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1391439900;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory} with_a default {@link HttpClient}.;public HttpComponentsClientHttpRequestFactory() {_		this(HttpClients.createSystem())__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,a,default,link,http,client;public,http,components,client,http,request,factory,this,http,clients,create,system
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1394111906;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with a default {@link HttpClient}.;public HttpComponentsClientHttpRequestFactory() {_		this(HttpClients.createSystem())__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,a,default,link,http,client;public,http,components,client,http,request,factory,this,http,clients,create,system
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1394469729;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with a default {@link HttpClient}.;public HttpComponentsClientHttpRequestFactory() {_		this(HttpClients.createSystem())__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,a,default,link,http,client;public,http,components,client,http,request,factory,this,http,clients,create,system
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1394472663;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with a default {@link HttpClient}.;public HttpComponentsClientHttpRequestFactory() {_		this(HttpClients.createSystem())__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,a,default,link,http,client;public,http,components,client,http,request,factory,this,http,clients,create,system
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1412780546;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with a default {@link HttpClient}.;public HttpComponentsClientHttpRequestFactory() {_		this(HttpClients.createSystem())__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,a,default,link,http,client;public,http,components,client,http,request,factory,this,http,clients,create,system
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1414442939;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with a default {@link HttpClient}.;public HttpComponentsClientHttpRequestFactory() {_		this(HttpClients.createSystem())__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,a,default,link,http,client;public,http,components,client,http,request,factory,this,http,clients,create,system
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1419262267;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with a default {@link HttpClient}.;public HttpComponentsClientHttpRequestFactory() {_		this(HttpClients.createSystem())__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,a,default,link,http,client;public,http,components,client,http,request,factory,this,http,clients,create,system
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1419842214;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with a default {@link HttpClient}.;public HttpComponentsClientHttpRequestFactory() {_		this(HttpClients.createSystem())__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,a,default,link,http,client;public,http,components,client,http,request,factory,this,http,clients,create,system
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1420464527;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with a default {@link HttpClient}.;public HttpComponentsClientHttpRequestFactory() {_		this(HttpClients.createSystem())__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,a,default,link,http,client;public,http,components,client,http,request,factory,this,http,clients,create,system
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1426623891;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with a default {@link HttpClient}.;public HttpComponentsClientHttpRequestFactory() {_		this(HttpClients.createSystem())__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,a,default,link,http,client;public,http,components,client,http,request,factory,this,http,clients,create,system
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1434384787;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with a default {@link HttpClient}.;public HttpComponentsClientHttpRequestFactory() {_		this(HttpClients.createSystem())__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,a,default,link,http,client;public,http,components,client,http,request,factory,this,http,clients,create,system
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1436200220;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with a default {@link HttpClient}.;public HttpComponentsClientHttpRequestFactory() {_		this(HttpClients.createSystem())__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,a,default,link,http,client;public,http,components,client,http,request,factory,this,http,clients,create,system
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1438251337;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with a default {@link HttpClient}.;public HttpComponentsClientHttpRequestFactory() {_		this(HttpClients.createSystem())__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,a,default,link,http,client;public,http,components,client,http,request,factory,this,http,clients,create,system
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1449660489;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with a default {@link HttpClient}.;public HttpComponentsClientHttpRequestFactory() {_		this(HttpClients.createSystem())__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,a,default,link,http,client;public,http,components,client,http,request,factory,this,http,clients,create,system
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1467375086;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with a default {@link HttpClient}.;public HttpComponentsClientHttpRequestFactory() {_		this(HttpClients.createSystem())__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,a,default,link,http,client;public,http,components,client,http,request,factory,this,http,clients,create,system
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1467667302;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with a default {@link HttpClient}.;public HttpComponentsClientHttpRequestFactory() {_		this(HttpClients.createSystem())__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,a,default,link,http,client;public,http,components,client,http,request,factory,this,http,clients,create,system
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1468600707;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with a default {@link HttpClient}.;public HttpComponentsClientHttpRequestFactory() {_		this(HttpClients.createSystem())__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,a,default,link,http,client;public,http,components,client,http,request,factory,this,http,clients,create,system
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1495868221;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with a default {@link HttpClient}.;public HttpComponentsClientHttpRequestFactory() {_		this(HttpClients.createSystem())__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,a,default,link,http,client;public,http,components,client,http,request,factory,this,http,clients,create,system
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1496837955;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with a default {@link HttpClient}.;public HttpComponentsClientHttpRequestFactory() {_		this(HttpClients.createSystem())__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,a,default,link,http,client;public,http,components,client,http,request,factory,this,http,clients,create,system
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1497453044;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with a default {@link HttpClient}.;public HttpComponentsClientHttpRequestFactory() {_		this.httpClient = HttpClients.createSystem()__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,a,default,link,http,client;public,http,components,client,http,request,factory,this,http,client,http,clients,create,system
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1498780456;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with a default {@link HttpClient}.;public HttpComponentsClientHttpRequestFactory() {_		this.httpClient = HttpClients.createSystem()__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,a,default,link,http,client;public,http,components,client,http,request,factory,this,http,client,http,clients,create,system
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1500416137;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with a default {@link HttpClient}.;public HttpComponentsClientHttpRequestFactory() {_		this.httpClient = HttpClients.createSystem()__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,a,default,link,http,client;public,http,components,client,http,request,factory,this,http,client,http,clients,create,system
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1520890308;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with a default {@link HttpClient}.;public HttpComponentsClientHttpRequestFactory() {_		this.httpClient = HttpClients.createSystem()__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,a,default,link,http,client;public,http,components,client,http,request,factory,this,http,client,http,clients,create,system
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory();1523025317;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with a default {@link HttpClient} based on system properties.;public HttpComponentsClientHttpRequestFactory() {_		this.httpClient = HttpClients.createSystem()__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,a,default,link,http,client,based,on,system,properties;public,http,components,client,http,request,factory,this,http,client,http,clients,create,system
HttpComponentsClientHttpRequestFactory -> public boolean isBufferRequestBody();1377627757;Indicates whether this request factory should buffer the request body internally.;public boolean isBufferRequestBody() {_		return bufferRequestBody__	};indicates,whether,this,request,factory,should,buffer,the,request,body,internally;public,boolean,is,buffer,request,body,return,buffer,request,body
HttpComponentsClientHttpRequestFactory -> public boolean isBufferRequestBody();1377782656;Indicates whether this request factory should buffer the request body internally.;public boolean isBufferRequestBody() {_		return bufferRequestBody__	};indicates,whether,this,request,factory,should,buffer,the,request,body,internally;public,boolean,is,buffer,request,body,return,buffer,request,body
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(HttpClient httpClient);1328020251;Create a new instance of the HttpComponentsClientHttpRequestFactory_with the given {@link HttpClient} instance._@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(HttpClient httpClient) {_		Assert.notNull(httpClient, "HttpClient must not be null")__		this.httpClient = httpClient__	};create,a,new,instance,of,the,http,components,client,http,request,factory,with,the,given,link,http,client,instance,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(HttpClient httpClient);1340398642;Create a new instance of the HttpComponentsClientHttpRequestFactory_with the given {@link HttpClient} instance._@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(HttpClient httpClient) {_		Assert.notNull(httpClient, "HttpClient must not be null")__		this.httpClient = httpClient__	};create,a,new,instance,of,the,http,components,client,http,request,factory,with,the,given,link,http,client,instance,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(HttpClient httpClient);1340648015;Create a new instance of the HttpComponentsClientHttpRequestFactory_with the given {@link HttpClient} instance._@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(HttpClient httpClient) {_		Assert.notNull(httpClient, "HttpClient must not be null")__		this.httpClient = httpClient__	};create,a,new,instance,of,the,http,components,client,http,request,factory,with,the,given,link,http,client,instance,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(HttpClient httpClient);1349872133;Create a new instance of the HttpComponentsClientHttpRequestFactory_with the given {@link HttpClient} instance._@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(HttpClient httpClient) {_		Assert.notNull(httpClient, "HttpClient must not be null")__		this.httpClient = httpClient__	};create,a,new,instance,of,the,http,components,client,http,request,factory,with,the,given,link,http,client,instance,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(HttpClient httpClient);1356735495;Create a new instance of the HttpComponentsClientHttpRequestFactory_with the given {@link HttpClient} instance._@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(HttpClient httpClient) {_		Assert.notNull(httpClient, "HttpClient must not be null")__		this.httpClient = httpClient__	};create,a,new,instance,of,the,http,components,client,http,request,factory,with,the,given,link,http,client,instance,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(HttpClient httpClient);1357119239;Create a new instance of the HttpComponentsClientHttpRequestFactory_with the given {@link HttpClient} instance._@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(HttpClient httpClient) {_		Assert.notNull(httpClient, "HttpClient must not be null")__		this.httpClient = httpClient__	};create,a,new,instance,of,the,http,components,client,http,request,factory,with,the,given,link,http,client,instance,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(HttpClient httpClient);1368482696;Create a new instance of the HttpComponentsClientHttpRequestFactory_with the given {@link HttpClient} instance._@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(HttpClient httpClient) {_		Assert.notNull(httpClient, "HttpClient must not be null")__		this.httpClient = httpClient__	};create,a,new,instance,of,the,http,components,client,http,request,factory,with,the,given,link,http,client,instance,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(HttpClient httpClient);1374115410;Create a new instance of the HttpComponentsClientHttpRequestFactory_with the given {@link HttpClient} instance._@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(HttpClient httpClient) {_		Assert.notNull(httpClient, "HttpClient must not be null")__		this.httpClient = httpClient__	};create,a,new,instance,of,the,http,components,client,http,request,factory,with,the,given,link,http,client,instance,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(HttpClient httpClient);1377627757;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with the given {@link HttpClient} instance._@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(HttpClient httpClient) {_		Assert.notNull(httpClient, "'httpClient' must not be null")__		this.httpClient = httpClient__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,the,given,link,http,client,instance,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(HttpClient httpClient);1383232235;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with the given {@link HttpClient} instance._<p>_As of Spring Framework 4 the given client is expected to be of type_CloseableHttpClient (requiring HttpClient 4.3+).__@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(HttpClient httpClient) {_		Assert.notNull(httpClient, "'httpClient' must not be null")__		Assert.isInstanceOf(CloseableHttpClient.class, httpClient, "'httpClient' is not of type CloseableHttpClient")__        this.httpClient = (CloseableHttpClient) httpClient__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,the,given,link,http,client,instance,p,as,of,spring,framework,4,the,given,client,is,expected,to,be,of,type,closeable,http,client,requiring,http,client,4,3,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,assert,is,instance,of,closeable,http,client,class,http,client,http,client,is,not,of,type,closeable,http,client,this,http,client,closeable,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(HttpClient httpClient);1391439900;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with the given {@link HttpClient} instance._<p>_As of Spring Framework 4 the given client is expected to be of type_CloseableHttpClient (requiring HttpClient 4.3+).__@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(HttpClient httpClient) {_		Assert.notNull(httpClient, "'httpClient' must not be null")__		Assert.isInstanceOf(CloseableHttpClient.class, httpClient, "'httpClient' is not of type CloseableHttpClient")__        this.httpClient = (CloseableHttpClient) httpClient__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,the,given,link,http,client,instance,p,as,of,spring,framework,4,the,given,client,is,expected,to,be,of,type,closeable,http,client,requiring,http,client,4,3,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,assert,is,instance,of,closeable,http,client,class,http,client,http,client,is,not,of,type,closeable,http,client,this,http,client,closeable,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(HttpClient httpClient);1394111906;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with the given {@link HttpClient} instance._<p>As of Spring Framework 4.0, the given client is expected to be of type_CloseableHttpClient (requiring HttpClient 4.3+)._@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(HttpClient httpClient) {_		Assert.notNull(httpClient, "'httpClient' must not be null")__		Assert.isInstanceOf(CloseableHttpClient.class, httpClient, "'httpClient' is not of type CloseableHttpClient")__        this.httpClient = (CloseableHttpClient) httpClient__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,the,given,link,http,client,instance,p,as,of,spring,framework,4,0,the,given,client,is,expected,to,be,of,type,closeable,http,client,requiring,http,client,4,3,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,assert,is,instance,of,closeable,http,client,class,http,client,http,client,is,not,of,type,closeable,http,client,this,http,client,closeable,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(HttpClient httpClient);1394469729;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with the given {@link HttpClient} instance._<p>As of Spring Framework 4.0, the given client is expected to be of type_CloseableHttpClient (requiring HttpClient 4.3+)._@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(HttpClient httpClient) {_		Assert.notNull(httpClient, "'httpClient' must not be null")__		Assert.isInstanceOf(CloseableHttpClient.class, httpClient, "'httpClient' is not of type CloseableHttpClient")__        this.httpClient = (CloseableHttpClient) httpClient__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,the,given,link,http,client,instance,p,as,of,spring,framework,4,0,the,given,client,is,expected,to,be,of,type,closeable,http,client,requiring,http,client,4,3,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,assert,is,instance,of,closeable,http,client,class,http,client,http,client,is,not,of,type,closeable,http,client,this,http,client,closeable,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(HttpClient httpClient);1394472663;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with the given {@link HttpClient} instance._<p>As of Spring Framework 4.0, the given client is expected to be of type_{@link CloseableHttpClient} (requiring HttpClient 4.3+)._@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(HttpClient httpClient) {_		Assert.notNull(httpClient, "'httpClient' must not be null")__		Assert.isInstanceOf(CloseableHttpClient.class, httpClient, "'httpClient' is not of type CloseableHttpClient")__        this.httpClient = (CloseableHttpClient) httpClient__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,the,given,link,http,client,instance,p,as,of,spring,framework,4,0,the,given,client,is,expected,to,be,of,type,link,closeable,http,client,requiring,http,client,4,3,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,assert,is,instance,of,closeable,http,client,class,http,client,http,client,is,not,of,type,closeable,http,client,this,http,client,closeable,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(HttpClient httpClient);1412780546;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with the given {@link HttpClient} instance._<p>As of Spring Framework 4.0, the given client is expected to be of type_{@link CloseableHttpClient} (requiring HttpClient 4.3+)._@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(HttpClient httpClient) {_		Assert.notNull(httpClient, "'httpClient' must not be null")__		Assert.isInstanceOf(CloseableHttpClient.class, httpClient, "'httpClient' is not of type CloseableHttpClient")__		this.httpClient = (CloseableHttpClient) httpClient__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,the,given,link,http,client,instance,p,as,of,spring,framework,4,0,the,given,client,is,expected,to,be,of,type,link,closeable,http,client,requiring,http,client,4,3,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,assert,is,instance,of,closeable,http,client,class,http,client,http,client,is,not,of,type,closeable,http,client,this,http,client,closeable,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(HttpClient httpClient);1414442939;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with the given {@link HttpClient} instance._<p>As of Spring Framework 4.0, the given client is expected to be of type_{@link CloseableHttpClient} (requiring HttpClient 4.3+)._@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(HttpClient httpClient) {_		Assert.notNull(httpClient, "'httpClient' must not be null")__		Assert.isInstanceOf(CloseableHttpClient.class, httpClient, "'httpClient' is not of type CloseableHttpClient")__		this.httpClient = (CloseableHttpClient) httpClient__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,the,given,link,http,client,instance,p,as,of,spring,framework,4,0,the,given,client,is,expected,to,be,of,type,link,closeable,http,client,requiring,http,client,4,3,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,assert,is,instance,of,closeable,http,client,class,http,client,http,client,is,not,of,type,closeable,http,client,this,http,client,closeable,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(HttpClient httpClient);1419262267;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with the given {@link HttpClient} instance._<p>As of Spring Framework 4.0, the given client is expected to be of type_{@link CloseableHttpClient} (requiring HttpClient 4.3+)._@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(HttpClient httpClient) {_		Assert.notNull(httpClient, "'httpClient' must not be null")__		Assert.isInstanceOf(CloseableHttpClient.class, httpClient, "'httpClient' is not of type CloseableHttpClient")__		this.httpClient = (CloseableHttpClient) httpClient__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,the,given,link,http,client,instance,p,as,of,spring,framework,4,0,the,given,client,is,expected,to,be,of,type,link,closeable,http,client,requiring,http,client,4,3,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,assert,is,instance,of,closeable,http,client,class,http,client,http,client,is,not,of,type,closeable,http,client,this,http,client,closeable,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(HttpClient httpClient);1419842214;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with the given {@link HttpClient} instance._<p>As of Spring Framework 4.0, the given client is expected to be of type_{@link CloseableHttpClient} (requiring HttpClient 4.3+)._@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(HttpClient httpClient) {_		Assert.notNull(httpClient, "'httpClient' must not be null")__		Assert.isInstanceOf(CloseableHttpClient.class, httpClient, "'httpClient' is not of type CloseableHttpClient")__		this.httpClient = (CloseableHttpClient) httpClient__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,the,given,link,http,client,instance,p,as,of,spring,framework,4,0,the,given,client,is,expected,to,be,of,type,link,closeable,http,client,requiring,http,client,4,3,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,assert,is,instance,of,closeable,http,client,class,http,client,http,client,is,not,of,type,closeable,http,client,this,http,client,closeable,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(HttpClient httpClient);1420464527;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with the given {@link HttpClient} instance._<p>As of Spring Framework 4.0, the given client is expected to be of type_{@link CloseableHttpClient} (requiring HttpClient 4.3+)._@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(HttpClient httpClient) {_		Assert.notNull(httpClient, "'httpClient' must not be null")__		Assert.isInstanceOf(CloseableHttpClient.class, httpClient, "'httpClient' is not of type CloseableHttpClient")__		this.httpClient = (CloseableHttpClient) httpClient__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,the,given,link,http,client,instance,p,as,of,spring,framework,4,0,the,given,client,is,expected,to,be,of,type,link,closeable,http,client,requiring,http,client,4,3,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,assert,is,instance,of,closeable,http,client,class,http,client,http,client,is,not,of,type,closeable,http,client,this,http,client,closeable,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(HttpClient httpClient);1426623891;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with the given {@link HttpClient} instance._@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(HttpClient httpClient) {_		Assert.notNull(httpClient, "HttpClient must not be null")__		this.httpClient = httpClient__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,the,given,link,http,client,instance,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(HttpClient httpClient);1434384787;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with the given {@link HttpClient} instance._@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(HttpClient httpClient) {_		Assert.notNull(httpClient, "HttpClient must not be null")__		this.httpClient = httpClient__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,the,given,link,http,client,instance,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(HttpClient httpClient);1436200220;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with the given {@link HttpClient} instance._@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(HttpClient httpClient) {_		Assert.notNull(httpClient, "HttpClient must not be null")__		this.httpClient = httpClient__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,the,given,link,http,client,instance,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(HttpClient httpClient);1438251337;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with the given {@link HttpClient} instance._@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(HttpClient httpClient) {_		Assert.notNull(httpClient, "HttpClient must not be null")__		this.httpClient = httpClient__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,the,given,link,http,client,instance,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(HttpClient httpClient);1449660489;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with the given {@link HttpClient} instance._@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(HttpClient httpClient) {_		Assert.notNull(httpClient, "HttpClient must not be null")__		this.httpClient = httpClient__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,the,given,link,http,client,instance,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(HttpClient httpClient);1467375086;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with the given {@link HttpClient} instance._@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(HttpClient httpClient) {_		Assert.notNull(httpClient, "HttpClient must not be null")__		this.httpClient = httpClient__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,the,given,link,http,client,instance,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(HttpClient httpClient);1467667302;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with the given {@link HttpClient} instance._@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(HttpClient httpClient) {_		Assert.notNull(httpClient, "HttpClient must not be null")__		this.httpClient = httpClient__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,the,given,link,http,client,instance,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(HttpClient httpClient);1468600707;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with the given {@link HttpClient} instance._@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(HttpClient httpClient) {_		Assert.notNull(httpClient, "HttpClient must not be null")__		this.httpClient = httpClient__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,the,given,link,http,client,instance,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(HttpClient httpClient);1495868221;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with the given {@link HttpClient} instance._@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(HttpClient httpClient) {_		Assert.notNull(httpClient, "HttpClient must not be null")__		this.httpClient = httpClient__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,the,given,link,http,client,instance,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(HttpClient httpClient);1496837955;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with the given {@link HttpClient} instance._@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(HttpClient httpClient) {_		Assert.notNull(httpClient, "HttpClient must not be null")__		this.httpClient = httpClient__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,the,given,link,http,client,instance,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,http,client,http,client,assert,not,null,http,client,http,client,must,not,be,null,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(HttpClient httpClient);1497453044;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with the given {@link HttpClient} instance._@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(HttpClient httpClient) {_		setHttpClient(httpClient)__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,the,given,link,http,client,instance,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,http,client,http,client,set,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(HttpClient httpClient);1498780456;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with the given {@link HttpClient} instance._@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(HttpClient httpClient) {_		setHttpClient(httpClient)__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,the,given,link,http,client,instance,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,http,client,http,client,set,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(HttpClient httpClient);1500416137;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with the given {@link HttpClient} instance._@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(HttpClient httpClient) {_		this.httpClient = httpClient__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,the,given,link,http,client,instance,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,http,client,http,client,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(HttpClient httpClient);1520890308;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with the given {@link HttpClient} instance._@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(HttpClient httpClient) {_		this.httpClient = httpClient__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,the,given,link,http,client,instance,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,http,client,http,client,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> public HttpComponentsClientHttpRequestFactory(HttpClient httpClient);1523025317;Create a new instance of the {@code HttpComponentsClientHttpRequestFactory}_with the given {@link HttpClient} instance._@param httpClient the HttpClient instance to use for this request factory;public HttpComponentsClientHttpRequestFactory(HttpClient httpClient) {_		this.httpClient = httpClient__	};create,a,new,instance,of,the,code,http,components,client,http,request,factory,with,the,given,link,http,client,instance,param,http,client,the,http,client,instance,to,use,for,this,request,factory;public,http,components,client,http,request,factory,http,client,http,client,this,http,client,http,client
HttpComponentsClientHttpRequestFactory -> @Nullable 	public HttpClient getHttpClient();1496837955;Return the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;@Nullable_	public HttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;nullable,public,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> @Nullable 	public HttpClient getHttpClient();1498780456;Return the {@code HttpClient} used for_{@linkplain #createRequest(URI, HttpMethod) synchronous execution}.;@Nullable_	public HttpClient getHttpClient() {_		return this.httpClient__	};return,the,code,http,client,used,for,linkplain,create,request,uri,http,method,synchronous,execution;nullable,public,http,client,get,http,client,return,this,http,client
HttpComponentsClientHttpRequestFactory -> @Nullable 	protected RequestConfig createRequestConfig(Object client);1495868221;Create a default {@link RequestConfig} to use with the given client._Can return {@code null} to indicate that no custom request config should_be set and the defaults of the {@link HttpClient} should be used._<p>The default implementation tries to merge the defaults of the client_with the local customizations of this factory instance, if any._@param client the {@link HttpClient} (or {@code HttpAsyncClient}) to check_@return the actual RequestConfig to use (may be {@code null})_@since 4.2_@see #mergeRequestConfig(RequestConfig);@Nullable_	protected RequestConfig createRequestConfig(Object client) {_		if (client instanceof Configurable) {_			RequestConfig clientRequestConfig = ((Configurable) client).getConfig()__			return mergeRequestConfig(clientRequestConfig)__		}_		return this.requestConfig__	};create,a,default,link,request,config,to,use,with,the,given,client,can,return,code,null,to,indicate,that,no,custom,request,config,should,be,set,and,the,defaults,of,the,link,http,client,should,be,used,p,the,default,implementation,tries,to,merge,the,defaults,of,the,client,with,the,local,customizations,of,this,factory,instance,if,any,param,client,the,link,http,client,or,code,http,async,client,to,check,return,the,actual,request,config,to,use,may,be,code,null,since,4,2,see,merge,request,config,request,config;nullable,protected,request,config,create,request,config,object,client,if,client,instanceof,configurable,request,config,client,request,config,configurable,client,get,config,return,merge,request,config,client,request,config,return,this,request,config
HttpComponentsClientHttpRequestFactory -> @Nullable 	protected RequestConfig createRequestConfig(Object client);1496837955;Create a default {@link RequestConfig} to use with the given client._Can return {@code null} to indicate that no custom request config should_be set and the defaults of the {@link HttpClient} should be used._<p>The default implementation tries to merge the defaults of the client_with the local customizations of this factory instance, if any._@param client the {@link HttpClient} (or {@code HttpAsyncClient}) to check_@return the actual RequestConfig to use (may be {@code null})_@since 4.2_@see #mergeRequestConfig(RequestConfig);@Nullable_	protected RequestConfig createRequestConfig(Object client) {_		if (client instanceof Configurable) {_			RequestConfig clientRequestConfig = ((Configurable) client).getConfig()__			return mergeRequestConfig(clientRequestConfig)__		}_		return this.requestConfig__	};create,a,default,link,request,config,to,use,with,the,given,client,can,return,code,null,to,indicate,that,no,custom,request,config,should,be,set,and,the,defaults,of,the,link,http,client,should,be,used,p,the,default,implementation,tries,to,merge,the,defaults,of,the,client,with,the,local,customizations,of,this,factory,instance,if,any,param,client,the,link,http,client,or,code,http,async,client,to,check,return,the,actual,request,config,to,use,may,be,code,null,since,4,2,see,merge,request,config,request,config;nullable,protected,request,config,create,request,config,object,client,if,client,instanceof,configurable,request,config,client,request,config,configurable,client,get,config,return,merge,request,config,client,request,config,return,this,request,config
HttpComponentsClientHttpRequestFactory -> @Nullable 	protected RequestConfig createRequestConfig(Object client);1497453044;Create a default {@link RequestConfig} to use with the given client._Can return {@code null} to indicate that no custom request config should_be set and the defaults of the {@link HttpClient} should be used._<p>The default implementation tries to merge the defaults of the client_with the local customizations of this factory instance, if any._@param client the {@link HttpClient} (or {@code HttpAsyncClient}) to check_@return the actual RequestConfig to use (may be {@code null})_@since 4.2_@see #mergeRequestConfig(RequestConfig);@Nullable_	protected RequestConfig createRequestConfig(Object client) {_		if (client instanceof Configurable) {_			RequestConfig clientRequestConfig = ((Configurable) client).getConfig()__			return mergeRequestConfig(clientRequestConfig)__		}_		return this.requestConfig__	};create,a,default,link,request,config,to,use,with,the,given,client,can,return,code,null,to,indicate,that,no,custom,request,config,should,be,set,and,the,defaults,of,the,link,http,client,should,be,used,p,the,default,implementation,tries,to,merge,the,defaults,of,the,client,with,the,local,customizations,of,this,factory,instance,if,any,param,client,the,link,http,client,or,code,http,async,client,to,check,return,the,actual,request,config,to,use,may,be,code,null,since,4,2,see,merge,request,config,request,config;nullable,protected,request,config,create,request,config,object,client,if,client,instanceof,configurable,request,config,client,request,config,configurable,client,get,config,return,merge,request,config,client,request,config,return,this,request,config
HttpComponentsClientHttpRequestFactory -> @Nullable 	protected RequestConfig createRequestConfig(Object client);1498780456;Create a default {@link RequestConfig} to use with the given client._Can return {@code null} to indicate that no custom request config should_be set and the defaults of the {@link HttpClient} should be used._<p>The default implementation tries to merge the defaults of the client_with the local customizations of this factory instance, if any._@param client the {@link HttpClient} (or {@code HttpAsyncClient}) to check_@return the actual RequestConfig to use (may be {@code null})_@since 4.2_@see #mergeRequestConfig(RequestConfig);@Nullable_	protected RequestConfig createRequestConfig(Object client) {_		if (client instanceof Configurable) {_			RequestConfig clientRequestConfig = ((Configurable) client).getConfig()__			return mergeRequestConfig(clientRequestConfig)__		}_		return this.requestConfig__	};create,a,default,link,request,config,to,use,with,the,given,client,can,return,code,null,to,indicate,that,no,custom,request,config,should,be,set,and,the,defaults,of,the,link,http,client,should,be,used,p,the,default,implementation,tries,to,merge,the,defaults,of,the,client,with,the,local,customizations,of,this,factory,instance,if,any,param,client,the,link,http,client,or,code,http,async,client,to,check,return,the,actual,request,config,to,use,may,be,code,null,since,4,2,see,merge,request,config,request,config;nullable,protected,request,config,create,request,config,object,client,if,client,instanceof,configurable,request,config,client,request,config,configurable,client,get,config,return,merge,request,config,client,request,config,return,this,request,config
HttpComponentsClientHttpRequestFactory -> @Nullable 	protected RequestConfig createRequestConfig(Object client);1500416137;Create a default {@link RequestConfig} to use with the given client._Can return {@code null} to indicate that no custom request config should_be set and the defaults of the {@link HttpClient} should be used._<p>The default implementation tries to merge the defaults of the client_with the local customizations of this factory instance, if any._@param client the {@link HttpClient} (or {@code HttpAsyncClient}) to check_@return the actual RequestConfig to use (may be {@code null})_@since 4.2_@see #mergeRequestConfig(RequestConfig);@Nullable_	protected RequestConfig createRequestConfig(Object client) {_		if (client instanceof Configurable) {_			RequestConfig clientRequestConfig = ((Configurable) client).getConfig()__			return mergeRequestConfig(clientRequestConfig)__		}_		return this.requestConfig__	};create,a,default,link,request,config,to,use,with,the,given,client,can,return,code,null,to,indicate,that,no,custom,request,config,should,be,set,and,the,defaults,of,the,link,http,client,should,be,used,p,the,default,implementation,tries,to,merge,the,defaults,of,the,client,with,the,local,customizations,of,this,factory,instance,if,any,param,client,the,link,http,client,or,code,http,async,client,to,check,return,the,actual,request,config,to,use,may,be,code,null,since,4,2,see,merge,request,config,request,config;nullable,protected,request,config,create,request,config,object,client,if,client,instanceof,configurable,request,config,client,request,config,configurable,client,get,config,return,merge,request,config,client,request,config,return,this,request,config
HttpComponentsClientHttpRequestFactory -> @Nullable 	protected RequestConfig createRequestConfig(Object client);1520890308;Create a default {@link RequestConfig} to use with the given client._Can return {@code null} to indicate that no custom request config should_be set and the defaults of the {@link HttpClient} should be used._<p>The default implementation tries to merge the defaults of the client_with the local customizations of this factory instance, if any._@param client the {@link HttpClient} (or {@code HttpAsyncClient}) to check_@return the actual RequestConfig to use (may be {@code null})_@since 4.2_@see #mergeRequestConfig(RequestConfig);@Nullable_	protected RequestConfig createRequestConfig(Object client) {_		if (client instanceof Configurable) {_			RequestConfig clientRequestConfig = ((Configurable) client).getConfig()__			return mergeRequestConfig(clientRequestConfig)__		}_		return this.requestConfig__	};create,a,default,link,request,config,to,use,with,the,given,client,can,return,code,null,to,indicate,that,no,custom,request,config,should,be,set,and,the,defaults,of,the,link,http,client,should,be,used,p,the,default,implementation,tries,to,merge,the,defaults,of,the,client,with,the,local,customizations,of,this,factory,instance,if,any,param,client,the,link,http,client,or,code,http,async,client,to,check,return,the,actual,request,config,to,use,may,be,code,null,since,4,2,see,merge,request,config,request,config;nullable,protected,request,config,create,request,config,object,client,if,client,instanceof,configurable,request,config,client,request,config,configurable,client,get,config,return,merge,request,config,client,request,config,return,this,request,config
HttpComponentsClientHttpRequestFactory -> @Nullable 	protected RequestConfig createRequestConfig(Object client);1523025317;Create a default {@link RequestConfig} to use with the given client._Can return {@code null} to indicate that no custom request config should_be set and the defaults of the {@link HttpClient} should be used._<p>The default implementation tries to merge the defaults of the client_with the local customizations of this factory instance, if any._@param client the {@link HttpClient} (or {@code HttpAsyncClient}) to check_@return the actual RequestConfig to use (may be {@code null})_@since 4.2_@see #mergeRequestConfig(RequestConfig);@Nullable_	protected RequestConfig createRequestConfig(Object client) {_		if (client instanceof Configurable) {_			RequestConfig clientRequestConfig = ((Configurable) client).getConfig()__			return mergeRequestConfig(clientRequestConfig)__		}_		return this.requestConfig__	};create,a,default,link,request,config,to,use,with,the,given,client,can,return,code,null,to,indicate,that,no,custom,request,config,should,be,set,and,the,defaults,of,the,link,http,client,should,be,used,p,the,default,implementation,tries,to,merge,the,defaults,of,the,client,with,the,local,customizations,of,this,factory,instance,if,any,param,client,the,link,http,client,or,code,http,async,client,to,check,return,the,actual,request,config,to,use,may,be,code,null,since,4,2,see,merge,request,config,request,config;nullable,protected,request,config,create,request,config,object,client,if,client,instanceof,configurable,request,config,client,request,config,configurable,client,get,config,return,merge,request,config,client,request,config,return,this,request,config
HttpComponentsClientHttpRequestFactory -> protected RequestConfig createRequestConfig(Object client);1438251337;Create a default {@link RequestConfig} to use with the given client._Can return {@code null} to indicate that no custom request config should_be set and the defaults of the {@link HttpClient} should be used._<p>The default implementation tries to merge the defaults of the client_with the local customizations of this factory instance, if any._@param client the {@link HttpClient} (or {@code HttpAsyncClient}) to check_@return the actual RequestConfig to use (may be {@code null})_@since 4.2_@see #mergeRequestConfig(RequestConfig);protected RequestConfig createRequestConfig(Object client) {_		if (client instanceof Configurable) {_			RequestConfig clientRequestConfig = ((Configurable) client).getConfig()__			return mergeRequestConfig(clientRequestConfig)__		}_		return this.requestConfig__	};create,a,default,link,request,config,to,use,with,the,given,client,can,return,code,null,to,indicate,that,no,custom,request,config,should,be,set,and,the,defaults,of,the,link,http,client,should,be,used,p,the,default,implementation,tries,to,merge,the,defaults,of,the,client,with,the,local,customizations,of,this,factory,instance,if,any,param,client,the,link,http,client,or,code,http,async,client,to,check,return,the,actual,request,config,to,use,may,be,code,null,since,4,2,see,merge,request,config,request,config;protected,request,config,create,request,config,object,client,if,client,instanceof,configurable,request,config,client,request,config,configurable,client,get,config,return,merge,request,config,client,request,config,return,this,request,config
HttpComponentsClientHttpRequestFactory -> protected RequestConfig createRequestConfig(Object client);1449660489;Create a default {@link RequestConfig} to use with the given client._Can return {@code null} to indicate that no custom request config should_be set and the defaults of the {@link HttpClient} should be used._<p>The default implementation tries to merge the defaults of the client_with the local customizations of this factory instance, if any._@param client the {@link HttpClient} (or {@code HttpAsyncClient}) to check_@return the actual RequestConfig to use (may be {@code null})_@since 4.2_@see #mergeRequestConfig(RequestConfig);protected RequestConfig createRequestConfig(Object client) {_		if (client instanceof Configurable) {_			RequestConfig clientRequestConfig = ((Configurable) client).getConfig()__			return mergeRequestConfig(clientRequestConfig)__		}_		return this.requestConfig__	};create,a,default,link,request,config,to,use,with,the,given,client,can,return,code,null,to,indicate,that,no,custom,request,config,should,be,set,and,the,defaults,of,the,link,http,client,should,be,used,p,the,default,implementation,tries,to,merge,the,defaults,of,the,client,with,the,local,customizations,of,this,factory,instance,if,any,param,client,the,link,http,client,or,code,http,async,client,to,check,return,the,actual,request,config,to,use,may,be,code,null,since,4,2,see,merge,request,config,request,config;protected,request,config,create,request,config,object,client,if,client,instanceof,configurable,request,config,client,request,config,configurable,client,get,config,return,merge,request,config,client,request,config,return,this,request,config
HttpComponentsClientHttpRequestFactory -> protected RequestConfig createRequestConfig(Object client);1467375086;Create a default {@link RequestConfig} to use with the given client._Can return {@code null} to indicate that no custom request config should_be set and the defaults of the {@link HttpClient} should be used._<p>The default implementation tries to merge the defaults of the client_with the local customizations of this factory instance, if any._@param client the {@link HttpClient} (or {@code HttpAsyncClient}) to check_@return the actual RequestConfig to use (may be {@code null})_@since 4.2_@see #mergeRequestConfig(RequestConfig);protected RequestConfig createRequestConfig(Object client) {_		if (client instanceof Configurable) {_			RequestConfig clientRequestConfig = ((Configurable) client).getConfig()__			return mergeRequestConfig(clientRequestConfig)__		}_		return this.requestConfig__	};create,a,default,link,request,config,to,use,with,the,given,client,can,return,code,null,to,indicate,that,no,custom,request,config,should,be,set,and,the,defaults,of,the,link,http,client,should,be,used,p,the,default,implementation,tries,to,merge,the,defaults,of,the,client,with,the,local,customizations,of,this,factory,instance,if,any,param,client,the,link,http,client,or,code,http,async,client,to,check,return,the,actual,request,config,to,use,may,be,code,null,since,4,2,see,merge,request,config,request,config;protected,request,config,create,request,config,object,client,if,client,instanceof,configurable,request,config,client,request,config,configurable,client,get,config,return,merge,request,config,client,request,config,return,this,request,config
HttpComponentsClientHttpRequestFactory -> protected RequestConfig createRequestConfig(Object client);1467667302;Create a default {@link RequestConfig} to use with the given client._Can return {@code null} to indicate that no custom request config should_be set and the defaults of the {@link HttpClient} should be used._<p>The default implementation tries to merge the defaults of the client_with the local customizations of this factory instance, if any._@param client the {@link HttpClient} (or {@code HttpAsyncClient}) to check_@return the actual RequestConfig to use (may be {@code null})_@since 4.2_@see #mergeRequestConfig(RequestConfig);protected RequestConfig createRequestConfig(Object client) {_		if (client instanceof Configurable) {_			RequestConfig clientRequestConfig = ((Configurable) client).getConfig()__			return mergeRequestConfig(clientRequestConfig)__		}_		return this.requestConfig__	};create,a,default,link,request,config,to,use,with,the,given,client,can,return,code,null,to,indicate,that,no,custom,request,config,should,be,set,and,the,defaults,of,the,link,http,client,should,be,used,p,the,default,implementation,tries,to,merge,the,defaults,of,the,client,with,the,local,customizations,of,this,factory,instance,if,any,param,client,the,link,http,client,or,code,http,async,client,to,check,return,the,actual,request,config,to,use,may,be,code,null,since,4,2,see,merge,request,config,request,config;protected,request,config,create,request,config,object,client,if,client,instanceof,configurable,request,config,client,request,config,configurable,client,get,config,return,merge,request,config,client,request,config,return,this,request,config
HttpComponentsClientHttpRequestFactory -> protected RequestConfig createRequestConfig(Object client);1468600707;Create a default {@link RequestConfig} to use with the given client._Can return {@code null} to indicate that no custom request config should_be set and the defaults of the {@link HttpClient} should be used._<p>The default implementation tries to merge the defaults of the client_with the local customizations of this factory instance, if any._@param client the {@link HttpClient} (or {@code HttpAsyncClient}) to check_@return the actual RequestConfig to use (may be {@code null})_@since 4.2_@see #mergeRequestConfig(RequestConfig);protected RequestConfig createRequestConfig(Object client) {_		if (client instanceof Configurable) {_			RequestConfig clientRequestConfig = ((Configurable) client).getConfig()__			return mergeRequestConfig(clientRequestConfig)__		}_		return this.requestConfig__	};create,a,default,link,request,config,to,use,with,the,given,client,can,return,code,null,to,indicate,that,no,custom,request,config,should,be,set,and,the,defaults,of,the,link,http,client,should,be,used,p,the,default,implementation,tries,to,merge,the,defaults,of,the,client,with,the,local,customizations,of,this,factory,instance,if,any,param,client,the,link,http,client,or,code,http,async,client,to,check,return,the,actual,request,config,to,use,may,be,code,null,since,4,2,see,merge,request,config,request,config;protected,request,config,create,request,config,object,client,if,client,instanceof,configurable,request,config,client,request,config,configurable,client,get,config,return,merge,request,config,client,request,config,return,this,request,config
HttpComponentsClientHttpRequestFactory -> private RequestConfig.Builder requestConfigBuilder();1438251337;Return a builder for modifying the factory-level {@link RequestConfig}._@since 4.2;private RequestConfig.Builder requestConfigBuilder() {_		return (this.requestConfig != null ? RequestConfig.copy(this.requestConfig) : RequestConfig.custom())__	};return,a,builder,for,modifying,the,factory,level,link,request,config,since,4,2;private,request,config,builder,request,config,builder,return,this,request,config,null,request,config,copy,this,request,config,request,config,custom
HttpComponentsClientHttpRequestFactory -> private RequestConfig.Builder requestConfigBuilder();1449660489;Return a builder for modifying the factory-level {@link RequestConfig}._@since 4.2;private RequestConfig.Builder requestConfigBuilder() {_		return (this.requestConfig != null ? RequestConfig.copy(this.requestConfig) : RequestConfig.custom())__	};return,a,builder,for,modifying,the,factory,level,link,request,config,since,4,2;private,request,config,builder,request,config,builder,return,this,request,config,null,request,config,copy,this,request,config,request,config,custom
HttpComponentsClientHttpRequestFactory -> private RequestConfig.Builder requestConfigBuilder();1467375086;Return a builder for modifying the factory-level {@link RequestConfig}._@since 4.2;private RequestConfig.Builder requestConfigBuilder() {_		return (this.requestConfig != null ? RequestConfig.copy(this.requestConfig) : RequestConfig.custom())__	};return,a,builder,for,modifying,the,factory,level,link,request,config,since,4,2;private,request,config,builder,request,config,builder,return,this,request,config,null,request,config,copy,this,request,config,request,config,custom
HttpComponentsClientHttpRequestFactory -> private RequestConfig.Builder requestConfigBuilder();1467667302;Return a builder for modifying the factory-level {@link RequestConfig}._@since 4.2;private RequestConfig.Builder requestConfigBuilder() {_		return (this.requestConfig != null ? RequestConfig.copy(this.requestConfig) : RequestConfig.custom())__	};return,a,builder,for,modifying,the,factory,level,link,request,config,since,4,2;private,request,config,builder,request,config,builder,return,this,request,config,null,request,config,copy,this,request,config,request,config,custom
HttpComponentsClientHttpRequestFactory -> private RequestConfig.Builder requestConfigBuilder();1468600707;Return a builder for modifying the factory-level {@link RequestConfig}._@since 4.2;private RequestConfig.Builder requestConfigBuilder() {_		return (this.requestConfig != null ? RequestConfig.copy(this.requestConfig) : RequestConfig.custom())__	};return,a,builder,for,modifying,the,factory,level,link,request,config,since,4,2;private,request,config,builder,request,config,builder,return,this,request,config,null,request,config,copy,this,request,config,request,config,custom
HttpComponentsClientHttpRequestFactory -> private RequestConfig.Builder requestConfigBuilder();1495868221;Return a builder for modifying the factory-level {@link RequestConfig}._@since 4.2;private RequestConfig.Builder requestConfigBuilder() {_		return (this.requestConfig != null ? RequestConfig.copy(this.requestConfig) : RequestConfig.custom())__	};return,a,builder,for,modifying,the,factory,level,link,request,config,since,4,2;private,request,config,builder,request,config,builder,return,this,request,config,null,request,config,copy,this,request,config,request,config,custom
HttpComponentsClientHttpRequestFactory -> private RequestConfig.Builder requestConfigBuilder();1496837955;Return a builder for modifying the factory-level {@link RequestConfig}._@since 4.2;private RequestConfig.Builder requestConfigBuilder() {_		return (this.requestConfig != null ? RequestConfig.copy(this.requestConfig) : RequestConfig.custom())__	};return,a,builder,for,modifying,the,factory,level,link,request,config,since,4,2;private,request,config,builder,request,config,builder,return,this,request,config,null,request,config,copy,this,request,config,request,config,custom
HttpComponentsClientHttpRequestFactory -> private RequestConfig.Builder requestConfigBuilder();1497453044;Return a builder for modifying the factory-level {@link RequestConfig}._@since 4.2;private RequestConfig.Builder requestConfigBuilder() {_		return (this.requestConfig != null ? RequestConfig.copy(this.requestConfig) : RequestConfig.custom())__	};return,a,builder,for,modifying,the,factory,level,link,request,config,since,4,2;private,request,config,builder,request,config,builder,return,this,request,config,null,request,config,copy,this,request,config,request,config,custom
HttpComponentsClientHttpRequestFactory -> private RequestConfig.Builder requestConfigBuilder();1498780456;Return a builder for modifying the factory-level {@link RequestConfig}._@since 4.2;private RequestConfig.Builder requestConfigBuilder() {_		return (this.requestConfig != null ? RequestConfig.copy(this.requestConfig) : RequestConfig.custom())__	};return,a,builder,for,modifying,the,factory,level,link,request,config,since,4,2;private,request,config,builder,request,config,builder,return,this,request,config,null,request,config,copy,this,request,config,request,config,custom
HttpComponentsClientHttpRequestFactory -> private RequestConfig.Builder requestConfigBuilder();1500416137;Return a builder for modifying the factory-level {@link RequestConfig}._@since 4.2;private RequestConfig.Builder requestConfigBuilder() {_		return (this.requestConfig != null ? RequestConfig.copy(this.requestConfig) : RequestConfig.custom())__	};return,a,builder,for,modifying,the,factory,level,link,request,config,since,4,2;private,request,config,builder,request,config,builder,return,this,request,config,null,request,config,copy,this,request,config,request,config,custom
HttpComponentsClientHttpRequestFactory -> private RequestConfig.Builder requestConfigBuilder();1520890308;Return a builder for modifying the factory-level {@link RequestConfig}._@since 4.2;private RequestConfig.Builder requestConfigBuilder() {_		return (this.requestConfig != null ? RequestConfig.copy(this.requestConfig) : RequestConfig.custom())__	};return,a,builder,for,modifying,the,factory,level,link,request,config,since,4,2;private,request,config,builder,request,config,builder,return,this,request,config,null,request,config,copy,this,request,config,request,config,custom
HttpComponentsClientHttpRequestFactory -> private RequestConfig.Builder requestConfigBuilder();1523025317;Return a builder for modifying the factory-level {@link RequestConfig}._@since 4.2;private RequestConfig.Builder requestConfigBuilder() {_		return (this.requestConfig != null ? RequestConfig.copy(this.requestConfig) : RequestConfig.custom())__	};return,a,builder,for,modifying,the,factory,level,link,request,config,since,4,2;private,request,config,builder,request,config,builder,return,this,request,config,null,request,config,copy,this,request,config,request,config,custom
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1328020251;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case DELETE:_				return new HttpDelete(uri)__			case HEAD:_				return new HttpHead(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case TRACE:_				return new HttpTrace(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,delete,return,new,http,delete,uri,case,head,return,new,http,head,uri,case,options,return,new,http,options,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,trace,return,new,http,trace,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1340398642;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case DELETE:_				return new HttpDelete(uri)__			case HEAD:_				return new HttpHead(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case TRACE:_				return new HttpTrace(uri)__			case PATCH:_				return createHttpPatch(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,delete,return,new,http,delete,uri,case,head,return,new,http,head,uri,case,options,return,new,http,options,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,trace,return,new,http,trace,uri,case,patch,return,create,http,patch,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1340648015;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case DELETE:_				return new HttpDelete(uri)__			case HEAD:_				return new HttpHead(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case TRACE:_				return new HttpTrace(uri)__			case PATCH:_				return createHttpPatch(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,delete,return,new,http,delete,uri,case,head,return,new,http,head,uri,case,options,return,new,http,options,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,trace,return,new,http,trace,uri,case,patch,return,create,http,patch,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1349872133;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case DELETE:_				return new HttpDelete(uri)__			case HEAD:_				return new HttpHead(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case TRACE:_				return new HttpTrace(uri)__			case PATCH:_				return new HttpPatch(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,delete,return,new,http,delete,uri,case,head,return,new,http,head,uri,case,options,return,new,http,options,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,trace,return,new,http,trace,uri,case,patch,return,new,http,patch,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1356735495;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case DELETE:_				return new HttpDelete(uri)__			case HEAD:_				return new HttpHead(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case TRACE:_				return new HttpTrace(uri)__			case PATCH:_				return new HttpPatch(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,delete,return,new,http,delete,uri,case,head,return,new,http,head,uri,case,options,return,new,http,options,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,trace,return,new,http,trace,uri,case,patch,return,new,http,patch,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1357119239;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case DELETE:_				return new HttpDelete(uri)__			case HEAD:_				return new HttpHead(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case TRACE:_				return new HttpTrace(uri)__			case PATCH:_				return new HttpPatch(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,delete,return,new,http,delete,uri,case,head,return,new,http,head,uri,case,options,return,new,http,options,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,trace,return,new,http,trace,uri,case,patch,return,new,http,patch,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1368482696;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case DELETE:_				return new HttpDelete(uri)__			case HEAD:_				return new HttpHead(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case TRACE:_				return new HttpTrace(uri)__			case PATCH:_				return new HttpPatch(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,delete,return,new,http,delete,uri,case,head,return,new,http,head,uri,case,options,return,new,http,options,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,trace,return,new,http,trace,uri,case,patch,return,new,http,patch,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1374115410;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case DELETE:_				return new HttpDelete(uri)__			case HEAD:_				return new HttpHead(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case TRACE:_				return new HttpTrace(uri)__			case PATCH:_				return new HttpPatch(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,delete,return,new,http,delete,uri,case,head,return,new,http,head,uri,case,options,return,new,http,options,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,trace,return,new,http,trace,uri,case,patch,return,new,http,patch,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1377627757;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case DELETE:_				return new HttpDelete(uri)__			case HEAD:_				return new HttpHead(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case TRACE:_				return new HttpTrace(uri)__			case PATCH:_				return new HttpPatch(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,delete,return,new,http,delete,uri,case,head,return,new,http,head,uri,case,options,return,new,http,options,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,trace,return,new,http,trace,uri,case,patch,return,new,http,patch,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1377782656;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case DELETE:_				return new HttpDelete(uri)__			case HEAD:_				return new HttpHead(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case TRACE:_				return new HttpTrace(uri)__			case PATCH:_				return new HttpPatch(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,delete,return,new,http,delete,uri,case,head,return,new,http,head,uri,case,options,return,new,http,options,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,trace,return,new,http,trace,uri,case,patch,return,new,http,patch,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1383229571;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case DELETE:_				return new HttpDelete(uri)__			case HEAD:_				return new HttpHead(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case TRACE:_				return new HttpTrace(uri)__			case PATCH:_				return new HttpPatch(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,delete,return,new,http,delete,uri,case,head,return,new,http,head,uri,case,options,return,new,http,options,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,trace,return,new,http,trace,uri,case,patch,return,new,http,patch,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1383232235;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case DELETE:_				return new HttpDelete(uri)__			case HEAD:_				return new HttpHead(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case TRACE:_				return new HttpTrace(uri)__			case PATCH:_				return new HttpPatch(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,delete,return,new,http,delete,uri,case,head,return,new,http,head,uri,case,options,return,new,http,options,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,trace,return,new,http,trace,uri,case,patch,return,new,http,patch,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1391439900;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case DELETE:_				return new HttpDelete(uri)__			case HEAD:_				return new HttpHead(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case TRACE:_				return new HttpTrace(uri)__			case PATCH:_				return new HttpPatch(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,delete,return,new,http,delete,uri,case,head,return,new,http,head,uri,case,options,return,new,http,options,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,trace,return,new,http,trace,uri,case,patch,return,new,http,patch,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1394111906;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case DELETE:_				return new HttpDelete(uri)__			case HEAD:_				return new HttpHead(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case TRACE:_				return new HttpTrace(uri)__			case PATCH:_				return new HttpPatch(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,delete,return,new,http,delete,uri,case,head,return,new,http,head,uri,case,options,return,new,http,options,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,trace,return,new,http,trace,uri,case,patch,return,new,http,patch,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1394469729;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case DELETE:_				return new HttpDelete(uri)__			case HEAD:_				return new HttpHead(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case TRACE:_				return new HttpTrace(uri)__			case PATCH:_				return new HttpPatch(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,delete,return,new,http,delete,uri,case,head,return,new,http,head,uri,case,options,return,new,http,options,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,trace,return,new,http,trace,uri,case,patch,return,new,http,patch,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1394472663;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case DELETE:_				return new HttpDelete(uri)__			case HEAD:_				return new HttpHead(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case TRACE:_				return new HttpTrace(uri)__			case PATCH:_				return new HttpPatch(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,delete,return,new,http,delete,uri,case,head,return,new,http,head,uri,case,options,return,new,http,options,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,trace,return,new,http,trace,uri,case,patch,return,new,http,patch,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1412780546;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case DELETE:_				return new HttpDelete(uri)__			case HEAD:_				return new HttpHead(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case TRACE:_				return new HttpTrace(uri)__			case PATCH:_				return new HttpPatch(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,delete,return,new,http,delete,uri,case,head,return,new,http,head,uri,case,options,return,new,http,options,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,trace,return,new,http,trace,uri,case,patch,return,new,http,patch,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1414442939;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case DELETE:_				return new HttpDelete(uri)__			case HEAD:_				return new HttpHead(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case TRACE:_				return new HttpTrace(uri)__			case PATCH:_				return new HttpPatch(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,delete,return,new,http,delete,uri,case,head,return,new,http,head,uri,case,options,return,new,http,options,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,trace,return,new,http,trace,uri,case,patch,return,new,http,patch,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1419262267;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case DELETE:_				return new HttpDelete(uri)__			case HEAD:_				return new HttpHead(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case TRACE:_				return new HttpTrace(uri)__			case PATCH:_				return new HttpPatch(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,delete,return,new,http,delete,uri,case,head,return,new,http,head,uri,case,options,return,new,http,options,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,trace,return,new,http,trace,uri,case,patch,return,new,http,patch,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1419842214;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case DELETE:_				return new HttpDelete(uri)__			case HEAD:_				return new HttpHead(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case TRACE:_				return new HttpTrace(uri)__			case PATCH:_				return new HttpPatch(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,delete,return,new,http,delete,uri,case,head,return,new,http,head,uri,case,options,return,new,http,options,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,trace,return,new,http,trace,uri,case,patch,return,new,http,patch,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1420464527;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case DELETE:_				return new HttpDelete(uri)__			case HEAD:_				return new HttpHead(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case TRACE:_				return new HttpTrace(uri)__			case PATCH:_				return new HttpPatch(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,delete,return,new,http,delete,uri,case,head,return,new,http,head,uri,case,options,return,new,http,options,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,trace,return,new,http,trace,uri,case,patch,return,new,http,patch,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1426623891;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case DELETE:_				return new HttpDelete(uri)__			case HEAD:_				return new HttpHead(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case TRACE:_				return new HttpTrace(uri)__			case PATCH:_				return new HttpPatch(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,delete,return,new,http,delete,uri,case,head,return,new,http,head,uri,case,options,return,new,http,options,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,trace,return,new,http,trace,uri,case,patch,return,new,http,patch,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1434384787;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case DELETE:_				return new HttpDelete(uri)__			case HEAD:_				return new HttpHead(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case TRACE:_				return new HttpTrace(uri)__			case PATCH:_				return new HttpPatch(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,delete,return,new,http,delete,uri,case,head,return,new,http,head,uri,case,options,return,new,http,options,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,trace,return,new,http,trace,uri,case,patch,return,new,http,patch,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1436200220;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case DELETE:_				return new HttpDelete(uri)__			case HEAD:_				return new HttpHead(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case TRACE:_				return new HttpTrace(uri)__			case PATCH:_				return new HttpPatch(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,delete,return,new,http,delete,uri,case,head,return,new,http,head,uri,case,options,return,new,http,options,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,trace,return,new,http,trace,uri,case,patch,return,new,http,patch,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1438251337;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case DELETE:_				return new HttpDelete(uri)__			case HEAD:_				return new HttpHead(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case TRACE:_				return new HttpTrace(uri)__			case PATCH:_				return new HttpPatch(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,delete,return,new,http,delete,uri,case,head,return,new,http,head,uri,case,options,return,new,http,options,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,trace,return,new,http,trace,uri,case,patch,return,new,http,patch,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1449660489;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case HEAD:_				return new HttpHead(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case PATCH:_				return new HttpPatch(uri)__			case DELETE:_				return new HttpDelete(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case TRACE:_				return new HttpTrace(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,head,return,new,http,head,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,patch,return,new,http,patch,uri,case,delete,return,new,http,delete,uri,case,options,return,new,http,options,uri,case,trace,return,new,http,trace,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1467375086;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case HEAD:_				return new HttpHead(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case PATCH:_				return new HttpPatch(uri)__			case DELETE:_				return new HttpDelete(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case TRACE:_				return new HttpTrace(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,head,return,new,http,head,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,patch,return,new,http,patch,uri,case,delete,return,new,http,delete,uri,case,options,return,new,http,options,uri,case,trace,return,new,http,trace,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1467667302;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case HEAD:_				return new HttpHead(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case PATCH:_				return new HttpPatch(uri)__			case DELETE:_				return new HttpDelete(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case TRACE:_				return new HttpTrace(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,head,return,new,http,head,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,patch,return,new,http,patch,uri,case,delete,return,new,http,delete,uri,case,options,return,new,http,options,uri,case,trace,return,new,http,trace,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1468600707;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case HEAD:_				return new HttpHead(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case PATCH:_				return new HttpPatch(uri)__			case DELETE:_				return new HttpDelete(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case TRACE:_				return new HttpTrace(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,head,return,new,http,head,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,patch,return,new,http,patch,uri,case,delete,return,new,http,delete,uri,case,options,return,new,http,options,uri,case,trace,return,new,http,trace,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1495868221;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case HEAD:_				return new HttpHead(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case PATCH:_				return new HttpPatch(uri)__			case DELETE:_				return new HttpDelete(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case TRACE:_				return new HttpTrace(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,head,return,new,http,head,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,patch,return,new,http,patch,uri,case,delete,return,new,http,delete,uri,case,options,return,new,http,options,uri,case,trace,return,new,http,trace,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1496837955;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case HEAD:_				return new HttpHead(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case PATCH:_				return new HttpPatch(uri)__			case DELETE:_				return new HttpDelete(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case TRACE:_				return new HttpTrace(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,head,return,new,http,head,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,patch,return,new,http,patch,uri,case,delete,return,new,http,delete,uri,case,options,return,new,http,options,uri,case,trace,return,new,http,trace,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1497453044;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case HEAD:_				return new HttpHead(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case PATCH:_				return new HttpPatch(uri)__			case DELETE:_				return new HttpDelete(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case TRACE:_				return new HttpTrace(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,head,return,new,http,head,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,patch,return,new,http,patch,uri,case,delete,return,new,http,delete,uri,case,options,return,new,http,options,uri,case,trace,return,new,http,trace,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1498780456;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case HEAD:_				return new HttpHead(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case PATCH:_				return new HttpPatch(uri)__			case DELETE:_				return new HttpDelete(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case TRACE:_				return new HttpTrace(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,head,return,new,http,head,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,patch,return,new,http,patch,uri,case,delete,return,new,http,delete,uri,case,options,return,new,http,options,uri,case,trace,return,new,http,trace,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1500416137;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case HEAD:_				return new HttpHead(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case PATCH:_				return new HttpPatch(uri)__			case DELETE:_				return new HttpDelete(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case TRACE:_				return new HttpTrace(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,head,return,new,http,head,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,patch,return,new,http,patch,uri,case,delete,return,new,http,delete,uri,case,options,return,new,http,options,uri,case,trace,return,new,http,trace,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1520890308;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case HEAD:_				return new HttpHead(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case PATCH:_				return new HttpPatch(uri)__			case DELETE:_				return new HttpDelete(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case TRACE:_				return new HttpTrace(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,head,return,new,http,head,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,patch,return,new,http,patch,uri,case,delete,return,new,http,delete,uri,case,options,return,new,http,options,uri,case,trace,return,new,http,trace,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri);1523025317;Create a Commons HttpMethodBase object for the given HTTP method and URI specification._@param httpMethod the HTTP method_@param uri the URI_@return the Commons HttpMethodBase object;protected HttpUriRequest createHttpUriRequest(HttpMethod httpMethod, URI uri) {_		switch (httpMethod) {_			case GET:_				return new HttpGet(uri)__			case HEAD:_				return new HttpHead(uri)__			case POST:_				return new HttpPost(uri)__			case PUT:_				return new HttpPut(uri)__			case PATCH:_				return new HttpPatch(uri)__			case DELETE:_				return new HttpDelete(uri)__			case OPTIONS:_				return new HttpOptions(uri)__			case TRACE:_				return new HttpTrace(uri)__			default:_				throw new IllegalArgumentException("Invalid HTTP method: " + httpMethod)__		}_	};create,a,commons,http,method,base,object,for,the,given,http,method,and,uri,specification,param,http,method,the,http,method,param,uri,the,uri,return,the,commons,http,method,base,object;protected,http,uri,request,create,http,uri,request,http,method,http,method,uri,uri,switch,http,method,case,get,return,new,http,get,uri,case,head,return,new,http,head,uri,case,post,return,new,http,post,uri,case,put,return,new,http,put,uri,case,patch,return,new,http,patch,uri,case,delete,return,new,http,delete,uri,case,options,return,new,http,options,uri,case,trace,return,new,http,trace,uri,default,throw,new,illegal,argument,exception,invalid,http,method,http,method
HttpComponentsClientHttpRequestFactory -> @SuppressWarnings("deprecation") 	private void setLegacySocketTimeout(HttpClient client, int timeout);1394472663;Apply the specified socket timeout to deprecated {@link HttpClient}_implementations. See {@link #setLegacyConnectionTimeout}._@param client the client to configure_@param timeout the custom socket timeout_@see #setLegacyConnectionTimeout;@SuppressWarnings("deprecation")_	private void setLegacySocketTimeout(HttpClient client, int timeout) {_		if (org.apache.http.impl.client.AbstractHttpClient.class.isInstance(client)) {_			client.getParams().setIntParameter(_					org.apache.http.params.CoreConnectionPNames.SO_TIMEOUT, timeout)__		}_	};apply,the,specified,socket,timeout,to,deprecated,link,http,client,implementations,see,link,set,legacy,connection,timeout,param,client,the,client,to,configure,param,timeout,the,custom,socket,timeout,see,set,legacy,connection,timeout;suppress,warnings,deprecation,private,void,set,legacy,socket,timeout,http,client,client,int,timeout,if,org,apache,http,impl,client,abstract,http,client,class,is,instance,client,client,get,params,set,int,parameter,org,apache,http,params,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> @SuppressWarnings("deprecation") 	private void setLegacySocketTimeout(HttpClient client, int timeout);1412780546;Apply the specified socket timeout to deprecated {@link HttpClient}_implementations. See {@link #setLegacyConnectionTimeout}._@param client the client to configure_@param timeout the custom socket timeout_@see #setLegacyConnectionTimeout;@SuppressWarnings("deprecation")_	private void setLegacySocketTimeout(HttpClient client, int timeout) {_		if (org.apache.http.impl.client.AbstractHttpClient.class.isInstance(client)) {_			client.getParams().setIntParameter(_					org.apache.http.params.CoreConnectionPNames.SO_TIMEOUT, timeout)__		}_	};apply,the,specified,socket,timeout,to,deprecated,link,http,client,implementations,see,link,set,legacy,connection,timeout,param,client,the,client,to,configure,param,timeout,the,custom,socket,timeout,see,set,legacy,connection,timeout;suppress,warnings,deprecation,private,void,set,legacy,socket,timeout,http,client,client,int,timeout,if,org,apache,http,impl,client,abstract,http,client,class,is,instance,client,client,get,params,set,int,parameter,org,apache,http,params,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> @SuppressWarnings("deprecation") 	private void setLegacySocketTimeout(HttpClient client, int timeout);1414442939;Apply the specified socket timeout to deprecated {@link HttpClient}_implementations. See {@link #setLegacyConnectionTimeout}._@param client the client to configure_@param timeout the custom socket timeout_@see #setLegacyConnectionTimeout;@SuppressWarnings("deprecation")_	private void setLegacySocketTimeout(HttpClient client, int timeout) {_		if (org.apache.http.impl.client.AbstractHttpClient.class.isInstance(client)) {_			client.getParams().setIntParameter(_					org.apache.http.params.CoreConnectionPNames.SO_TIMEOUT, timeout)__		}_	};apply,the,specified,socket,timeout,to,deprecated,link,http,client,implementations,see,link,set,legacy,connection,timeout,param,client,the,client,to,configure,param,timeout,the,custom,socket,timeout,see,set,legacy,connection,timeout;suppress,warnings,deprecation,private,void,set,legacy,socket,timeout,http,client,client,int,timeout,if,org,apache,http,impl,client,abstract,http,client,class,is,instance,client,client,get,params,set,int,parameter,org,apache,http,params,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> @SuppressWarnings("deprecation") 	private void setLegacySocketTimeout(HttpClient client, int timeout);1419262267;Apply the specified socket timeout to deprecated {@link HttpClient}_implementations. See {@link #setLegacyConnectionTimeout}._@param client the client to configure_@param timeout the custom socket timeout_@see #setLegacyConnectionTimeout;@SuppressWarnings("deprecation")_	private void setLegacySocketTimeout(HttpClient client, int timeout) {_		if (org.apache.http.impl.client.AbstractHttpClient.class.isInstance(client)) {_			client.getParams().setIntParameter(_					org.apache.http.params.CoreConnectionPNames.SO_TIMEOUT, timeout)__		}_	};apply,the,specified,socket,timeout,to,deprecated,link,http,client,implementations,see,link,set,legacy,connection,timeout,param,client,the,client,to,configure,param,timeout,the,custom,socket,timeout,see,set,legacy,connection,timeout;suppress,warnings,deprecation,private,void,set,legacy,socket,timeout,http,client,client,int,timeout,if,org,apache,http,impl,client,abstract,http,client,class,is,instance,client,client,get,params,set,int,parameter,org,apache,http,params,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> @SuppressWarnings("deprecation") 	private void setLegacySocketTimeout(HttpClient client, int timeout);1419842214;Apply the specified socket timeout to deprecated {@link HttpClient}_implementations. See {@link #setLegacyConnectionTimeout}._@param client the client to configure_@param timeout the custom socket timeout_@see #setLegacyConnectionTimeout;@SuppressWarnings("deprecation")_	private void setLegacySocketTimeout(HttpClient client, int timeout) {_		if (org.apache.http.impl.client.AbstractHttpClient.class.isInstance(client)) {_			client.getParams().setIntParameter(_					org.apache.http.params.CoreConnectionPNames.SO_TIMEOUT, timeout)__		}_	};apply,the,specified,socket,timeout,to,deprecated,link,http,client,implementations,see,link,set,legacy,connection,timeout,param,client,the,client,to,configure,param,timeout,the,custom,socket,timeout,see,set,legacy,connection,timeout;suppress,warnings,deprecation,private,void,set,legacy,socket,timeout,http,client,client,int,timeout,if,org,apache,http,impl,client,abstract,http,client,class,is,instance,client,client,get,params,set,int,parameter,org,apache,http,params,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> @SuppressWarnings("deprecation") 	private void setLegacySocketTimeout(HttpClient client, int timeout);1420464527;Apply the specified socket timeout to deprecated {@link HttpClient}_implementations. See {@link #setLegacyConnectionTimeout}._@param client the client to configure_@param timeout the custom socket timeout_@see #setLegacyConnectionTimeout;@SuppressWarnings("deprecation")_	private void setLegacySocketTimeout(HttpClient client, int timeout) {_		if (org.apache.http.impl.client.AbstractHttpClient.class.isInstance(client)) {_			client.getParams().setIntParameter(_					org.apache.http.params.CoreConnectionPNames.SO_TIMEOUT, timeout)__		}_	};apply,the,specified,socket,timeout,to,deprecated,link,http,client,implementations,see,link,set,legacy,connection,timeout,param,client,the,client,to,configure,param,timeout,the,custom,socket,timeout,see,set,legacy,connection,timeout;suppress,warnings,deprecation,private,void,set,legacy,socket,timeout,http,client,client,int,timeout,if,org,apache,http,impl,client,abstract,http,client,class,is,instance,client,client,get,params,set,int,parameter,org,apache,http,params,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> @SuppressWarnings("deprecation") 	private void setLegacySocketTimeout(HttpClient client, int timeout);1426623891;Apply the specified socket timeout to deprecated {@link HttpClient}_implementations. See {@link #setLegacyConnectionTimeout}._@param client the client to configure_@param timeout the custom socket timeout_@see #setLegacyConnectionTimeout;@SuppressWarnings("deprecation")_	private void setLegacySocketTimeout(HttpClient client, int timeout) {_		if (org.apache.http.impl.client.AbstractHttpClient.class.isInstance(client)) {_			client.getParams().setIntParameter(_					org.apache.http.params.CoreConnectionPNames.SO_TIMEOUT, timeout)__		}_	};apply,the,specified,socket,timeout,to,deprecated,link,http,client,implementations,see,link,set,legacy,connection,timeout,param,client,the,client,to,configure,param,timeout,the,custom,socket,timeout,see,set,legacy,connection,timeout;suppress,warnings,deprecation,private,void,set,legacy,socket,timeout,http,client,client,int,timeout,if,org,apache,http,impl,client,abstract,http,client,class,is,instance,client,client,get,params,set,int,parameter,org,apache,http,params,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> @SuppressWarnings("deprecation") 	private void setLegacySocketTimeout(HttpClient client, int timeout);1434384787;Apply the specified socket timeout to deprecated {@link HttpClient}_implementations. See {@link #setLegacyConnectionTimeout}._@param client the client to configure_@param timeout the custom socket timeout_@see #setLegacyConnectionTimeout;@SuppressWarnings("deprecation")_	private void setLegacySocketTimeout(HttpClient client, int timeout) {_		if (org.apache.http.impl.client.AbstractHttpClient.class.isInstance(client)) {_			client.getParams().setIntParameter(_					org.apache.http.params.CoreConnectionPNames.SO_TIMEOUT, timeout)__		}_	};apply,the,specified,socket,timeout,to,deprecated,link,http,client,implementations,see,link,set,legacy,connection,timeout,param,client,the,client,to,configure,param,timeout,the,custom,socket,timeout,see,set,legacy,connection,timeout;suppress,warnings,deprecation,private,void,set,legacy,socket,timeout,http,client,client,int,timeout,if,org,apache,http,impl,client,abstract,http,client,class,is,instance,client,client,get,params,set,int,parameter,org,apache,http,params,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> @SuppressWarnings("deprecation") 	private void setLegacySocketTimeout(HttpClient client, int timeout);1436200220;Apply the specified socket timeout to deprecated {@link HttpClient}_implementations. See {@link #setLegacyConnectionTimeout}._@param client the client to configure_@param timeout the custom socket timeout_@see #setLegacyConnectionTimeout;@SuppressWarnings("deprecation")_	private void setLegacySocketTimeout(HttpClient client, int timeout) {_		if (org.apache.http.impl.client.AbstractHttpClient.class.isInstance(client)) {_			client.getParams().setIntParameter(_					org.apache.http.params.CoreConnectionPNames.SO_TIMEOUT, timeout)__		}_	};apply,the,specified,socket,timeout,to,deprecated,link,http,client,implementations,see,link,set,legacy,connection,timeout,param,client,the,client,to,configure,param,timeout,the,custom,socket,timeout,see,set,legacy,connection,timeout;suppress,warnings,deprecation,private,void,set,legacy,socket,timeout,http,client,client,int,timeout,if,org,apache,http,impl,client,abstract,http,client,class,is,instance,client,client,get,params,set,int,parameter,org,apache,http,params,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> @SuppressWarnings("deprecation") 	private void setLegacySocketTimeout(HttpClient client, int timeout);1438251337;Apply the specified socket timeout to deprecated {@link HttpClient}_implementations. See {@link #setLegacyConnectionTimeout}._@param client the client to configure_@param timeout the custom socket timeout_@see #setLegacyConnectionTimeout;@SuppressWarnings("deprecation")_	private void setLegacySocketTimeout(HttpClient client, int timeout) {_		if (org.apache.http.impl.client.AbstractHttpClient.class.isInstance(client)) {_			client.getParams().setIntParameter(org.apache.http.params.CoreConnectionPNames.SO_TIMEOUT, timeout)__		}_	};apply,the,specified,socket,timeout,to,deprecated,link,http,client,implementations,see,link,set,legacy,connection,timeout,param,client,the,client,to,configure,param,timeout,the,custom,socket,timeout,see,set,legacy,connection,timeout;suppress,warnings,deprecation,private,void,set,legacy,socket,timeout,http,client,client,int,timeout,if,org,apache,http,impl,client,abstract,http,client,class,is,instance,client,client,get,params,set,int,parameter,org,apache,http,params,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> @SuppressWarnings("deprecation") 	private void setLegacySocketTimeout(HttpClient client, int timeout);1449660489;Apply the specified socket timeout to deprecated {@link HttpClient}_implementations. See {@link #setLegacyConnectionTimeout}._@param client the client to configure_@param timeout the custom socket timeout_@see #setLegacyConnectionTimeout;@SuppressWarnings("deprecation")_	private void setLegacySocketTimeout(HttpClient client, int timeout) {_		if (org.apache.http.impl.client.AbstractHttpClient.class.isInstance(client)) {_			client.getParams().setIntParameter(org.apache.http.params.CoreConnectionPNames.SO_TIMEOUT, timeout)__		}_	};apply,the,specified,socket,timeout,to,deprecated,link,http,client,implementations,see,link,set,legacy,connection,timeout,param,client,the,client,to,configure,param,timeout,the,custom,socket,timeout,see,set,legacy,connection,timeout;suppress,warnings,deprecation,private,void,set,legacy,socket,timeout,http,client,client,int,timeout,if,org,apache,http,impl,client,abstract,http,client,class,is,instance,client,client,get,params,set,int,parameter,org,apache,http,params,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> @SuppressWarnings("deprecation") 	private void setLegacySocketTimeout(HttpClient client, int timeout);1467375086;Apply the specified socket timeout to deprecated {@link HttpClient}_implementations. See {@link #setLegacyConnectionTimeout}._@param client the client to configure_@param timeout the custom socket timeout_@see #setLegacyConnectionTimeout;@SuppressWarnings("deprecation")_	private void setLegacySocketTimeout(HttpClient client, int timeout) {_		if (abstractHttpClientClass != null && abstractHttpClientClass.isInstance(client)) {_			client.getParams().setIntParameter(org.apache.http.params.CoreConnectionPNames.SO_TIMEOUT, timeout)__		}_	};apply,the,specified,socket,timeout,to,deprecated,link,http,client,implementations,see,link,set,legacy,connection,timeout,param,client,the,client,to,configure,param,timeout,the,custom,socket,timeout,see,set,legacy,connection,timeout;suppress,warnings,deprecation,private,void,set,legacy,socket,timeout,http,client,client,int,timeout,if,abstract,http,client,class,null,abstract,http,client,class,is,instance,client,client,get,params,set,int,parameter,org,apache,http,params,core,connection,pnames,timeout
HttpComponentsClientHttpRequestFactory -> @Nullable 	protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1495868221;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;@Nullable_	protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_		return null__	};template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;nullable,protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> @Nullable 	protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1496837955;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;@Nullable_	protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_		return null__	};template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;nullable,protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> @Nullable 	protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1497453044;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;@Nullable_	protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_		return null__	};template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;nullable,protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> @Nullable 	protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1498780456;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;@Nullable_	protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_		return null__	};template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;nullable,protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> @Nullable 	protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1500416137;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;@Nullable_	protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_		return null__	};template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;nullable,protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> @Nullable 	protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1520890308;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;@Nullable_	protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_		return null__	};template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;nullable,protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> @Nullable 	protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri);1523025317;Template methods that creates a {@link HttpContext} for the given HTTP method and URI._<p>The default implementation returns {@code null}._@param httpMethod the HTTP method_@param uri the URI_@return the http context;@Nullable_	protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {_		return null__	};template,methods,that,creates,a,link,http,context,for,the,given,http,method,and,uri,p,the,default,implementation,returns,code,null,param,http,method,the,http,method,param,uri,the,uri,return,the,http,context;nullable,protected,http,context,create,http,context,http,method,http,method,uri,uri,return,null
HttpComponentsClientHttpRequestFactory -> public void destroy();1328020251;Shutdown hook that closes the underlying_{@link org.apache.http.conn.ClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;public void destroy() {_		getHttpClient().getConnectionManager().shutdown()__	};shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,client,connection,manager,client,connection,manager,s,connection,pool,if,any;public,void,destroy,get,http,client,get,connection,manager,shutdown
HttpComponentsClientHttpRequestFactory -> public void destroy();1340398642;Shutdown hook that closes the underlying_{@link org.apache.http.conn.ClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;public void destroy() {_		getHttpClient().getConnectionManager().shutdown()__	};shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,client,connection,manager,client,connection,manager,s,connection,pool,if,any;public,void,destroy,get,http,client,get,connection,manager,shutdown
HttpComponentsClientHttpRequestFactory -> public void destroy();1340648015;Shutdown hook that closes the underlying_{@link org.apache.http.conn.ClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;public void destroy() {_		getHttpClient().getConnectionManager().shutdown()__	};shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,client,connection,manager,client,connection,manager,s,connection,pool,if,any;public,void,destroy,get,http,client,get,connection,manager,shutdown
HttpComponentsClientHttpRequestFactory -> public void destroy();1349872133;Shutdown hook that closes the underlying_{@link org.apache.http.conn.ClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;public void destroy() {_		getHttpClient().getConnectionManager().shutdown()__	};shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,client,connection,manager,client,connection,manager,s,connection,pool,if,any;public,void,destroy,get,http,client,get,connection,manager,shutdown
HttpComponentsClientHttpRequestFactory -> public void destroy();1357119239;Shutdown hook that closes the underlying_{@link org.apache.http.conn.ClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;public void destroy() {_		getHttpClient().getConnectionManager().shutdown()__	};shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,client,connection,manager,client,connection,manager,s,connection,pool,if,any;public,void,destroy,get,http,client,get,connection,manager,shutdown
HttpComponentsClientHttpRequestFactory -> @Override 	public void destroy();1356735495;Shutdown hook that closes the underlying_{@link org.apache.http.conn.ClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;@Override_	public void destroy() {_		getHttpClient().getConnectionManager().shutdown()__	};shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,client,connection,manager,client,connection,manager,s,connection,pool,if,any;override,public,void,destroy,get,http,client,get,connection,manager,shutdown
HttpComponentsClientHttpRequestFactory -> @Override 	public void destroy();1368482696;Shutdown hook that closes the underlying_{@link org.apache.http.conn.ClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;@Override_	public void destroy() {_		getHttpClient().getConnectionManager().shutdown()__	};shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,client,connection,manager,client,connection,manager,s,connection,pool,if,any;override,public,void,destroy,get,http,client,get,connection,manager,shutdown
HttpComponentsClientHttpRequestFactory -> @Override 	public void destroy();1374115410;Shutdown hook that closes the underlying_{@link org.apache.http.conn.ClientConnectionManager ClientConnectionManager}'s_connection pool, if any.;@Override_	public void destroy() {_		getHttpClient().getConnectionManager().shutdown()__	};shutdown,hook,that,closes,the,underlying,link,org,apache,http,conn,client,connection,manager,client,connection,manager,s,connection,pool,if,any;override,public,void,destroy,get,http,client,get,connection,manager,shutdown
HttpComponentsClientHttpRequestFactory -> protected RequestConfig mergeRequestConfig(RequestConfig clientConfig);1438251337;Merge the given {@link HttpClient}-level {@link RequestConfig} with_the factory-level {@link RequestConfig}, if necessary._@param clientConfig the config held by the current_@return the merged request config_(may be {@code null} if the given client config is {@code null})_@since 4.2;protected RequestConfig mergeRequestConfig(RequestConfig clientConfig) {_		if (this.requestConfig == null) {  _			return clientConfig__		}__		RequestConfig.Builder builder = RequestConfig.copy(clientConfig)__		int connectTimeout = this.requestConfig.getConnectTimeout()__		if (connectTimeout >= 0) {_			builder.setConnectTimeout(connectTimeout)__		}_		int connectionRequestTimeout = this.requestConfig.getConnectionRequestTimeout()__		if (connectionRequestTimeout >= 0) {_			builder.setConnectionRequestTimeout(connectionRequestTimeout)__		}_		int socketTimeout = this.requestConfig.getSocketTimeout()__		if (socketTimeout >= 0) {_			builder.setSocketTimeout(socketTimeout)__		}_		return builder.build()__	};merge,the,given,link,http,client,level,link,request,config,with,the,factory,level,link,request,config,if,necessary,param,client,config,the,config,held,by,the,current,return,the,merged,request,config,may,be,code,null,if,the,given,client,config,is,code,null,since,4,2;protected,request,config,merge,request,config,request,config,client,config,if,this,request,config,null,return,client,config,request,config,builder,builder,request,config,copy,client,config,int,connect,timeout,this,request,config,get,connect,timeout,if,connect,timeout,0,builder,set,connect,timeout,connect,timeout,int,connection,request,timeout,this,request,config,get,connection,request,timeout,if,connection,request,timeout,0,builder,set,connection,request,timeout,connection,request,timeout,int,socket,timeout,this,request,config,get,socket,timeout,if,socket,timeout,0,builder,set,socket,timeout,socket,timeout,return,builder,build
HttpComponentsClientHttpRequestFactory -> protected RequestConfig mergeRequestConfig(RequestConfig clientConfig);1449660489;Merge the given {@link HttpClient}-level {@link RequestConfig} with_the factory-level {@link RequestConfig}, if necessary._@param clientConfig the config held by the current_@return the merged request config_(may be {@code null} if the given client config is {@code null})_@since 4.2;protected RequestConfig mergeRequestConfig(RequestConfig clientConfig) {_		if (this.requestConfig == null) {  _			return clientConfig__		}__		RequestConfig.Builder builder = RequestConfig.copy(clientConfig)__		int connectTimeout = this.requestConfig.getConnectTimeout()__		if (connectTimeout >= 0) {_			builder.setConnectTimeout(connectTimeout)__		}_		int connectionRequestTimeout = this.requestConfig.getConnectionRequestTimeout()__		if (connectionRequestTimeout >= 0) {_			builder.setConnectionRequestTimeout(connectionRequestTimeout)__		}_		int socketTimeout = this.requestConfig.getSocketTimeout()__		if (socketTimeout >= 0) {_			builder.setSocketTimeout(socketTimeout)__		}_		return builder.build()__	};merge,the,given,link,http,client,level,link,request,config,with,the,factory,level,link,request,config,if,necessary,param,client,config,the,config,held,by,the,current,return,the,merged,request,config,may,be,code,null,if,the,given,client,config,is,code,null,since,4,2;protected,request,config,merge,request,config,request,config,client,config,if,this,request,config,null,return,client,config,request,config,builder,builder,request,config,copy,client,config,int,connect,timeout,this,request,config,get,connect,timeout,if,connect,timeout,0,builder,set,connect,timeout,connect,timeout,int,connection,request,timeout,this,request,config,get,connection,request,timeout,if,connection,request,timeout,0,builder,set,connection,request,timeout,connection,request,timeout,int,socket,timeout,this,request,config,get,socket,timeout,if,socket,timeout,0,builder,set,socket,timeout,socket,timeout,return,builder,build
HttpComponentsClientHttpRequestFactory -> protected RequestConfig mergeRequestConfig(RequestConfig clientConfig);1467375086;Merge the given {@link HttpClient}-level {@link RequestConfig} with_the factory-level {@link RequestConfig}, if necessary._@param clientConfig the config held by the current_@return the merged request config_(may be {@code null} if the given client config is {@code null})_@since 4.2;protected RequestConfig mergeRequestConfig(RequestConfig clientConfig) {_		if (this.requestConfig == null) {  _			return clientConfig__		}__		RequestConfig.Builder builder = RequestConfig.copy(clientConfig)__		int connectTimeout = this.requestConfig.getConnectTimeout()__		if (connectTimeout >= 0) {_			builder.setConnectTimeout(connectTimeout)__		}_		int connectionRequestTimeout = this.requestConfig.getConnectionRequestTimeout()__		if (connectionRequestTimeout >= 0) {_			builder.setConnectionRequestTimeout(connectionRequestTimeout)__		}_		int socketTimeout = this.requestConfig.getSocketTimeout()__		if (socketTimeout >= 0) {_			builder.setSocketTimeout(socketTimeout)__		}_		return builder.build()__	};merge,the,given,link,http,client,level,link,request,config,with,the,factory,level,link,request,config,if,necessary,param,client,config,the,config,held,by,the,current,return,the,merged,request,config,may,be,code,null,if,the,given,client,config,is,code,null,since,4,2;protected,request,config,merge,request,config,request,config,client,config,if,this,request,config,null,return,client,config,request,config,builder,builder,request,config,copy,client,config,int,connect,timeout,this,request,config,get,connect,timeout,if,connect,timeout,0,builder,set,connect,timeout,connect,timeout,int,connection,request,timeout,this,request,config,get,connection,request,timeout,if,connection,request,timeout,0,builder,set,connection,request,timeout,connection,request,timeout,int,socket,timeout,this,request,config,get,socket,timeout,if,socket,timeout,0,builder,set,socket,timeout,socket,timeout,return,builder,build
HttpComponentsClientHttpRequestFactory -> protected RequestConfig mergeRequestConfig(RequestConfig clientConfig);1467667302;Merge the given {@link HttpClient}-level {@link RequestConfig} with_the factory-level {@link RequestConfig}, if necessary._@param clientConfig the config held by the current_@return the merged request config_(may be {@code null} if the given client config is {@code null})_@since 4.2;protected RequestConfig mergeRequestConfig(RequestConfig clientConfig) {_		if (this.requestConfig == null) {  _			return clientConfig__		}__		RequestConfig.Builder builder = RequestConfig.copy(clientConfig)__		int connectTimeout = this.requestConfig.getConnectTimeout()__		if (connectTimeout >= 0) {_			builder.setConnectTimeout(connectTimeout)__		}_		int connectionRequestTimeout = this.requestConfig.getConnectionRequestTimeout()__		if (connectionRequestTimeout >= 0) {_			builder.setConnectionRequestTimeout(connectionRequestTimeout)__		}_		int socketTimeout = this.requestConfig.getSocketTimeout()__		if (socketTimeout >= 0) {_			builder.setSocketTimeout(socketTimeout)__		}_		return builder.build()__	};merge,the,given,link,http,client,level,link,request,config,with,the,factory,level,link,request,config,if,necessary,param,client,config,the,config,held,by,the,current,return,the,merged,request,config,may,be,code,null,if,the,given,client,config,is,code,null,since,4,2;protected,request,config,merge,request,config,request,config,client,config,if,this,request,config,null,return,client,config,request,config,builder,builder,request,config,copy,client,config,int,connect,timeout,this,request,config,get,connect,timeout,if,connect,timeout,0,builder,set,connect,timeout,connect,timeout,int,connection,request,timeout,this,request,config,get,connection,request,timeout,if,connection,request,timeout,0,builder,set,connection,request,timeout,connection,request,timeout,int,socket,timeout,this,request,config,get,socket,timeout,if,socket,timeout,0,builder,set,socket,timeout,socket,timeout,return,builder,build
HttpComponentsClientHttpRequestFactory -> protected RequestConfig mergeRequestConfig(RequestConfig clientConfig);1468600707;Merge the given {@link HttpClient}-level {@link RequestConfig} with_the factory-level {@link RequestConfig}, if necessary._@param clientConfig the config held by the current_@return the merged request config_(may be {@code null} if the given client config is {@code null})_@since 4.2;protected RequestConfig mergeRequestConfig(RequestConfig clientConfig) {_		if (this.requestConfig == null) {  _			return clientConfig__		}__		RequestConfig.Builder builder = RequestConfig.copy(clientConfig)__		int connectTimeout = this.requestConfig.getConnectTimeout()__		if (connectTimeout >= 0) {_			builder.setConnectTimeout(connectTimeout)__		}_		int connectionRequestTimeout = this.requestConfig.getConnectionRequestTimeout()__		if (connectionRequestTimeout >= 0) {_			builder.setConnectionRequestTimeout(connectionRequestTimeout)__		}_		int socketTimeout = this.requestConfig.getSocketTimeout()__		if (socketTimeout >= 0) {_			builder.setSocketTimeout(socketTimeout)__		}_		return builder.build()__	};merge,the,given,link,http,client,level,link,request,config,with,the,factory,level,link,request,config,if,necessary,param,client,config,the,config,held,by,the,current,return,the,merged,request,config,may,be,code,null,if,the,given,client,config,is,code,null,since,4,2;protected,request,config,merge,request,config,request,config,client,config,if,this,request,config,null,return,client,config,request,config,builder,builder,request,config,copy,client,config,int,connect,timeout,this,request,config,get,connect,timeout,if,connect,timeout,0,builder,set,connect,timeout,connect,timeout,int,connection,request,timeout,this,request,config,get,connection,request,timeout,if,connection,request,timeout,0,builder,set,connection,request,timeout,connection,request,timeout,int,socket,timeout,this,request,config,get,socket,timeout,if,socket,timeout,0,builder,set,socket,timeout,socket,timeout,return,builder,build
HttpComponentsClientHttpRequestFactory -> protected RequestConfig mergeRequestConfig(RequestConfig clientConfig);1496837955;Merge the given {@link HttpClient}-level {@link RequestConfig} with_the factory-level {@link RequestConfig}, if necessary._@param clientConfig the config held by the current_@return the merged request config_@since 4.2;protected RequestConfig mergeRequestConfig(RequestConfig clientConfig) {_		if (this.requestConfig == null) {  _			return clientConfig__		}__		RequestConfig.Builder builder = RequestConfig.copy(clientConfig)__		int connectTimeout = this.requestConfig.getConnectTimeout()__		if (connectTimeout >= 0) {_			builder.setConnectTimeout(connectTimeout)__		}_		int connectionRequestTimeout = this.requestConfig.getConnectionRequestTimeout()__		if (connectionRequestTimeout >= 0) {_			builder.setConnectionRequestTimeout(connectionRequestTimeout)__		}_		int socketTimeout = this.requestConfig.getSocketTimeout()__		if (socketTimeout >= 0) {_			builder.setSocketTimeout(socketTimeout)__		}_		return builder.build()__	};merge,the,given,link,http,client,level,link,request,config,with,the,factory,level,link,request,config,if,necessary,param,client,config,the,config,held,by,the,current,return,the,merged,request,config,since,4,2;protected,request,config,merge,request,config,request,config,client,config,if,this,request,config,null,return,client,config,request,config,builder,builder,request,config,copy,client,config,int,connect,timeout,this,request,config,get,connect,timeout,if,connect,timeout,0,builder,set,connect,timeout,connect,timeout,int,connection,request,timeout,this,request,config,get,connection,request,timeout,if,connection,request,timeout,0,builder,set,connection,request,timeout,connection,request,timeout,int,socket,timeout,this,request,config,get,socket,timeout,if,socket,timeout,0,builder,set,socket,timeout,socket,timeout,return,builder,build
HttpComponentsClientHttpRequestFactory -> protected RequestConfig mergeRequestConfig(RequestConfig clientConfig);1497453044;Merge the given {@link HttpClient}-level {@link RequestConfig} with_the factory-level {@link RequestConfig}, if necessary._@param clientConfig the config held by the current_@return the merged request config_@since 4.2;protected RequestConfig mergeRequestConfig(RequestConfig clientConfig) {_		if (this.requestConfig == null) {  _			return clientConfig__		}__		RequestConfig.Builder builder = RequestConfig.copy(clientConfig)__		int connectTimeout = this.requestConfig.getConnectTimeout()__		if (connectTimeout >= 0) {_			builder.setConnectTimeout(connectTimeout)__		}_		int connectionRequestTimeout = this.requestConfig.getConnectionRequestTimeout()__		if (connectionRequestTimeout >= 0) {_			builder.setConnectionRequestTimeout(connectionRequestTimeout)__		}_		int socketTimeout = this.requestConfig.getSocketTimeout()__		if (socketTimeout >= 0) {_			builder.setSocketTimeout(socketTimeout)__		}_		return builder.build()__	};merge,the,given,link,http,client,level,link,request,config,with,the,factory,level,link,request,config,if,necessary,param,client,config,the,config,held,by,the,current,return,the,merged,request,config,since,4,2;protected,request,config,merge,request,config,request,config,client,config,if,this,request,config,null,return,client,config,request,config,builder,builder,request,config,copy,client,config,int,connect,timeout,this,request,config,get,connect,timeout,if,connect,timeout,0,builder,set,connect,timeout,connect,timeout,int,connection,request,timeout,this,request,config,get,connection,request,timeout,if,connection,request,timeout,0,builder,set,connection,request,timeout,connection,request,timeout,int,socket,timeout,this,request,config,get,socket,timeout,if,socket,timeout,0,builder,set,socket,timeout,socket,timeout,return,builder,build
HttpComponentsClientHttpRequestFactory -> protected RequestConfig mergeRequestConfig(RequestConfig clientConfig);1498780456;Merge the given {@link HttpClient}-level {@link RequestConfig} with_the factory-level {@link RequestConfig}, if necessary._@param clientConfig the config held by the current_@return the merged request config_@since 4.2;protected RequestConfig mergeRequestConfig(RequestConfig clientConfig) {_		if (this.requestConfig == null) {  _			return clientConfig__		}__		RequestConfig.Builder builder = RequestConfig.copy(clientConfig)__		int connectTimeout = this.requestConfig.getConnectTimeout()__		if (connectTimeout >= 0) {_			builder.setConnectTimeout(connectTimeout)__		}_		int connectionRequestTimeout = this.requestConfig.getConnectionRequestTimeout()__		if (connectionRequestTimeout >= 0) {_			builder.setConnectionRequestTimeout(connectionRequestTimeout)__		}_		int socketTimeout = this.requestConfig.getSocketTimeout()__		if (socketTimeout >= 0) {_			builder.setSocketTimeout(socketTimeout)__		}_		return builder.build()__	};merge,the,given,link,http,client,level,link,request,config,with,the,factory,level,link,request,config,if,necessary,param,client,config,the,config,held,by,the,current,return,the,merged,request,config,since,4,2;protected,request,config,merge,request,config,request,config,client,config,if,this,request,config,null,return,client,config,request,config,builder,builder,request,config,copy,client,config,int,connect,timeout,this,request,config,get,connect,timeout,if,connect,timeout,0,builder,set,connect,timeout,connect,timeout,int,connection,request,timeout,this,request,config,get,connection,request,timeout,if,connection,request,timeout,0,builder,set,connection,request,timeout,connection,request,timeout,int,socket,timeout,this,request,config,get,socket,timeout,if,socket,timeout,0,builder,set,socket,timeout,socket,timeout,return,builder,build
HttpComponentsClientHttpRequestFactory -> protected RequestConfig mergeRequestConfig(RequestConfig clientConfig);1500416137;Merge the given {@link HttpClient}-level {@link RequestConfig} with_the factory-level {@link RequestConfig}, if necessary._@param clientConfig the config held by the current_@return the merged request config_@since 4.2;protected RequestConfig mergeRequestConfig(RequestConfig clientConfig) {_		if (this.requestConfig == null) {  _			return clientConfig__		}__		RequestConfig.Builder builder = RequestConfig.copy(clientConfig)__		int connectTimeout = this.requestConfig.getConnectTimeout()__		if (connectTimeout >= 0) {_			builder.setConnectTimeout(connectTimeout)__		}_		int connectionRequestTimeout = this.requestConfig.getConnectionRequestTimeout()__		if (connectionRequestTimeout >= 0) {_			builder.setConnectionRequestTimeout(connectionRequestTimeout)__		}_		int socketTimeout = this.requestConfig.getSocketTimeout()__		if (socketTimeout >= 0) {_			builder.setSocketTimeout(socketTimeout)__		}_		return builder.build()__	};merge,the,given,link,http,client,level,link,request,config,with,the,factory,level,link,request,config,if,necessary,param,client,config,the,config,held,by,the,current,return,the,merged,request,config,since,4,2;protected,request,config,merge,request,config,request,config,client,config,if,this,request,config,null,return,client,config,request,config,builder,builder,request,config,copy,client,config,int,connect,timeout,this,request,config,get,connect,timeout,if,connect,timeout,0,builder,set,connect,timeout,connect,timeout,int,connection,request,timeout,this,request,config,get,connection,request,timeout,if,connection,request,timeout,0,builder,set,connection,request,timeout,connection,request,timeout,int,socket,timeout,this,request,config,get,socket,timeout,if,socket,timeout,0,builder,set,socket,timeout,socket,timeout,return,builder,build
HttpComponentsClientHttpRequestFactory -> protected RequestConfig mergeRequestConfig(RequestConfig clientConfig);1520890308;Merge the given {@link HttpClient}-level {@link RequestConfig} with_the factory-level {@link RequestConfig}, if necessary._@param clientConfig the config held by the current_@return the merged request config_@since 4.2;protected RequestConfig mergeRequestConfig(RequestConfig clientConfig) {_		if (this.requestConfig == null) {  _			return clientConfig__		}__		RequestConfig.Builder builder = RequestConfig.copy(clientConfig)__		int connectTimeout = this.requestConfig.getConnectTimeout()__		if (connectTimeout >= 0) {_			builder.setConnectTimeout(connectTimeout)__		}_		int connectionRequestTimeout = this.requestConfig.getConnectionRequestTimeout()__		if (connectionRequestTimeout >= 0) {_			builder.setConnectionRequestTimeout(connectionRequestTimeout)__		}_		int socketTimeout = this.requestConfig.getSocketTimeout()__		if (socketTimeout >= 0) {_			builder.setSocketTimeout(socketTimeout)__		}_		return builder.build()__	};merge,the,given,link,http,client,level,link,request,config,with,the,factory,level,link,request,config,if,necessary,param,client,config,the,config,held,by,the,current,return,the,merged,request,config,since,4,2;protected,request,config,merge,request,config,request,config,client,config,if,this,request,config,null,return,client,config,request,config,builder,builder,request,config,copy,client,config,int,connect,timeout,this,request,config,get,connect,timeout,if,connect,timeout,0,builder,set,connect,timeout,connect,timeout,int,connection,request,timeout,this,request,config,get,connection,request,timeout,if,connection,request,timeout,0,builder,set,connection,request,timeout,connection,request,timeout,int,socket,timeout,this,request,config,get,socket,timeout,if,socket,timeout,0,builder,set,socket,timeout,socket,timeout,return,builder,build
HttpComponentsClientHttpRequestFactory -> protected RequestConfig mergeRequestConfig(RequestConfig clientConfig);1523025317;Merge the given {@link HttpClient}-level {@link RequestConfig} with_the factory-level {@link RequestConfig}, if necessary._@param clientConfig the config held by the current_@return the merged request config_@since 4.2;protected RequestConfig mergeRequestConfig(RequestConfig clientConfig) {_		if (this.requestConfig == null) {  _			return clientConfig__		}__		RequestConfig.Builder builder = RequestConfig.copy(clientConfig)__		int connectTimeout = this.requestConfig.getConnectTimeout()__		if (connectTimeout >= 0) {_			builder.setConnectTimeout(connectTimeout)__		}_		int connectionRequestTimeout = this.requestConfig.getConnectionRequestTimeout()__		if (connectionRequestTimeout >= 0) {_			builder.setConnectionRequestTimeout(connectionRequestTimeout)__		}_		int socketTimeout = this.requestConfig.getSocketTimeout()__		if (socketTimeout >= 0) {_			builder.setSocketTimeout(socketTimeout)__		}_		return builder.build()__	};merge,the,given,link,http,client,level,link,request,config,with,the,factory,level,link,request,config,if,necessary,param,client,config,the,config,held,by,the,current,return,the,merged,request,config,since,4,2;protected,request,config,merge,request,config,request,config,client,config,if,this,request,config,null,return,client,config,request,config,builder,builder,request,config,copy,client,config,int,connect,timeout,this,request,config,get,connect,timeout,if,connect,timeout,0,builder,set,connect,timeout,connect,timeout,int,connection,request,timeout,this,request,config,get,connection,request,timeout,if,connection,request,timeout,0,builder,set,connection,request,timeout,connection,request,timeout,int,socket,timeout,this,request,config,get,socket,timeout,if,socket,timeout,0,builder,set,socket,timeout,socket,timeout,return,builder,build
