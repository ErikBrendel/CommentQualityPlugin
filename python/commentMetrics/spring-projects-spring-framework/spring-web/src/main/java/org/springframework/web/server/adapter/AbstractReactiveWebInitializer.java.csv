# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractReactiveWebInitializer -> protected abstract Class<?>[] getConfigClasses()_;1509649026;Specify {@link org.springframework.context.annotation.Configuration @Configuration} and/or_{@link org.springframework.stereotype.Component @Component} classes that_make up the application configuration. The config classes are given to_{@linkplain #createApplicationContext()}.;protected abstract Class<?>[] getConfigClasses()_;specify,link,org,springframework,context,annotation,configuration,configuration,and,or,link,org,springframework,stereotype,component,component,classes,that,make,up,the,application,configuration,the,config,classes,are,given,to,linkplain,create,application,context;protected,abstract,class,get,config,classes
AbstractReactiveWebInitializer -> protected abstract Class<?>[] getConfigClasses()_;1509670989;Specify {@link org.springframework.context.annotation.Configuration @Configuration} and/or_{@link org.springframework.stereotype.Component @Component} classes that_make up the application configuration. The config classes are given to_{@linkplain #createApplicationContext()}.;protected abstract Class<?>[] getConfigClasses()_;specify,link,org,springframework,context,annotation,configuration,configuration,and,or,link,org,springframework,stereotype,component,component,classes,that,make,up,the,application,configuration,the,config,classes,are,given,to,linkplain,create,application,context;protected,abstract,class,get,config,classes
AbstractReactiveWebInitializer -> protected abstract Class<?>[] getConfigClasses()_;1515537160;Specify {@link org.springframework.context.annotation.Configuration @Configuration}_and/or {@link org.springframework.stereotype.Component @Component}_classes that make up the application configuration. The config classes_are given to {@linkplain #createApplicationContext()}.;protected abstract Class<?>[] getConfigClasses()_;specify,link,org,springframework,context,annotation,configuration,configuration,and,or,link,org,springframework,stereotype,component,component,classes,that,make,up,the,application,configuration,the,config,classes,are,given,to,linkplain,create,application,context;protected,abstract,class,get,config,classes
AbstractReactiveWebInitializer -> protected abstract Class<?>[] getConfigClasses()_;1516914749;Specify {@link org.springframework.context.annotation.Configuration @Configuration}_and/or {@link org.springframework.stereotype.Component @Component}_classes that make up the application configuration. The config classes_are given to {@linkplain #createApplicationContext()}.;protected abstract Class<?>[] getConfigClasses()_;specify,link,org,springframework,context,annotation,configuration,configuration,and,or,link,org,springframework,stereotype,component,component,classes,that,make,up,the,application,configuration,the,config,classes,are,given,to,linkplain,create,application,context;protected,abstract,class,get,config,classes
AbstractReactiveWebInitializer -> protected abstract Class<?>[] getConfigClasses()_;1521050150;Specify {@link org.springframework.context.annotation.Configuration @Configuration}_and/or {@link org.springframework.stereotype.Component @Component}_classes that make up the application configuration. The config classes_are given to {@linkplain #createApplicationContext()}.;protected abstract Class<?>[] getConfigClasses()_;specify,link,org,springframework,context,annotation,configuration,configuration,and,or,link,org,springframework,stereotype,component,component,classes,that,make,up,the,application,configuration,the,config,classes,are,given,to,linkplain,create,application,context;protected,abstract,class,get,config,classes
AbstractReactiveWebInitializer -> protected String getServletMapping();1509670989;Return the Servlet mapping to use. Only the default Servlet mapping '/'_and path-based Servlet mappings such as '/api/*' are supported._<p>By default this is set to '/'.;protected String getServletMapping() {_		return "/"__	};return,the,servlet,mapping,to,use,only,the,default,servlet,mapping,and,path,based,servlet,mappings,such,as,api,are,supported,p,by,default,this,is,set,to;protected,string,get,servlet,mapping,return
AbstractReactiveWebInitializer -> protected String getServletMapping();1515537160;Return the Servlet mapping to use. Only the default Servlet mapping '/'_and path-based Servlet mappings such as '/api/*' are supported._<p>By default this is set to '/'.;protected String getServletMapping() {_		return "/"__	};return,the,servlet,mapping,to,use,only,the,default,servlet,mapping,and,path,based,servlet,mappings,such,as,api,are,supported,p,by,default,this,is,set,to;protected,string,get,servlet,mapping,return
AbstractReactiveWebInitializer -> protected String getServletMapping();1516914749;Return the Servlet mapping to use. Only the default Servlet mapping '/'_and path-based Servlet mappings such as '/api/*' are supported._<p>By default this is set to '/'.;protected String getServletMapping() {_		return "/"__	};return,the,servlet,mapping,to,use,only,the,default,servlet,mapping,and,path,based,servlet,mappings,such,as,api,are,supported,p,by,default,this,is,set,to;protected,string,get,servlet,mapping,return
AbstractReactiveWebInitializer -> protected String getServletMapping();1521050150;Return the Servlet mapping to use. Only the default Servlet mapping '/'_and path-based Servlet mappings such as '/api/*' are supported._<p>By default this is set to '/'.;protected String getServletMapping() {_		return "/"__	};return,the,servlet,mapping,to,use,only,the,default,servlet,mapping,and,path,based,servlet,mappings,such,as,api,are,supported,p,by,default,this,is,set,to;protected,string,get,servlet,mapping,return
AbstractReactiveWebInitializer -> protected void registerCloseListener(ServletContext servletContext, ApplicationContext applicationContext);1515537160;Register a {@link ServletContextListener} that closes the given_application context when the servlet context is destroyed._@param servletContext the servlet context to listen to_@param applicationContext the application context that is to be_closed when {@code servletContext} is destroyed;protected void registerCloseListener(ServletContext servletContext, ApplicationContext applicationContext) {_		if (applicationContext instanceof ConfigurableApplicationContext) {_			ConfigurableApplicationContext cac = (ConfigurableApplicationContext) applicationContext__			ServletContextDestroyedListener listener = new ServletContextDestroyedListener(cac)__			servletContext.addListener(listener)__		}_	};register,a,link,servlet,context,listener,that,closes,the,given,application,context,when,the,servlet,context,is,destroyed,param,servlet,context,the,servlet,context,to,listen,to,param,application,context,the,application,context,that,is,to,be,closed,when,code,servlet,context,is,destroyed;protected,void,register,close,listener,servlet,context,servlet,context,application,context,application,context,if,application,context,instanceof,configurable,application,context,configurable,application,context,cac,configurable,application,context,application,context,servlet,context,destroyed,listener,listener,new,servlet,context,destroyed,listener,cac,servlet,context,add,listener,listener
AbstractReactiveWebInitializer -> protected void registerCloseListener(ServletContext servletContext, ApplicationContext applicationContext);1516914749;Register a {@link ServletContextListener} that closes the given_application context when the servlet context is destroyed._@param servletContext the servlet context to listen to_@param applicationContext the application context that is to be_closed when {@code servletContext} is destroyed;protected void registerCloseListener(ServletContext servletContext, ApplicationContext applicationContext) {_		if (applicationContext instanceof ConfigurableApplicationContext) {_			ConfigurableApplicationContext cac = (ConfigurableApplicationContext) applicationContext__			ServletContextDestroyedListener listener = new ServletContextDestroyedListener(cac)__			servletContext.addListener(listener)__		}_	};register,a,link,servlet,context,listener,that,closes,the,given,application,context,when,the,servlet,context,is,destroyed,param,servlet,context,the,servlet,context,to,listen,to,param,application,context,the,application,context,that,is,to,be,closed,when,code,servlet,context,is,destroyed;protected,void,register,close,listener,servlet,context,servlet,context,application,context,application,context,if,application,context,instanceof,configurable,application,context,configurable,application,context,cac,configurable,application,context,application,context,servlet,context,destroyed,listener,listener,new,servlet,context,destroyed,listener,cac,servlet,context,add,listener,listener
AbstractReactiveWebInitializer -> protected void registerCloseListener(ServletContext servletContext, ApplicationContext applicationContext);1521050150;Register a {@link ServletContextListener} that closes the given_application context when the servlet context is destroyed._@param servletContext the servlet context to listen to_@param applicationContext the application context that is to be_closed when {@code servletContext} is destroyed;protected void registerCloseListener(ServletContext servletContext, ApplicationContext applicationContext) {_		if (applicationContext instanceof ConfigurableApplicationContext) {_			ConfigurableApplicationContext cac = (ConfigurableApplicationContext) applicationContext__			ServletContextDestroyedListener listener = new ServletContextDestroyedListener(cac)__			servletContext.addListener(listener)__		}_	};register,a,link,servlet,context,listener,that,closes,the,given,application,context,when,the,servlet,context,is,destroyed,param,servlet,context,the,servlet,context,to,listen,to,param,application,context,the,application,context,that,is,to,be,closed,when,code,servlet,context,is,destroyed;protected,void,register,close,listener,servlet,context,servlet,context,application,context,application,context,if,application,context,instanceof,configurable,application,context,configurable,application,context,cac,configurable,application,context,application,context,servlet,context,destroyed,listener,listener,new,servlet,context,destroyed,listener,cac,servlet,context,add,listener,listener
AbstractReactiveWebInitializer -> protected String getServletName();1509649026;Return the name to use to register the {@link ServletHttpHandlerAdapter}._<p>By default this is {@link #DEFAULT_SERVLET_NAME}.;protected String getServletName() {_		return DEFAULT_SERVLET_NAME__	};return,the,name,to,use,to,register,the,link,servlet,http,handler,adapter,p,by,default,this,is,link;protected,string,get,servlet,name,return
AbstractReactiveWebInitializer -> protected String getServletName();1509670989;Return the name to use to register the {@link ServletHttpHandlerAdapter}._<p>By default this is {@link #DEFAULT_SERVLET_NAME}.;protected String getServletName() {_		return DEFAULT_SERVLET_NAME__	};return,the,name,to,use,to,register,the,link,servlet,http,handler,adapter,p,by,default,this,is,link;protected,string,get,servlet,name,return
AbstractReactiveWebInitializer -> protected String getServletName();1515537160;Return the name to use to register the {@link ServletHttpHandlerAdapter}._<p>By default this is {@link #DEFAULT_SERVLET_NAME}.;protected String getServletName() {_		return DEFAULT_SERVLET_NAME__	};return,the,name,to,use,to,register,the,link,servlet,http,handler,adapter,p,by,default,this,is,link;protected,string,get,servlet,name,return
AbstractReactiveWebInitializer -> protected String getServletName();1516914749;Return the name to use to register the {@link ServletHttpHandlerAdapter}._<p>By default this is {@link #DEFAULT_SERVLET_NAME}.;protected String getServletName() {_		return DEFAULT_SERVLET_NAME__	};return,the,name,to,use,to,register,the,link,servlet,http,handler,adapter,p,by,default,this,is,link;protected,string,get,servlet,name,return
AbstractReactiveWebInitializer -> protected String getServletName();1521050150;Return the name to use to register the {@link ServletHttpHandlerAdapter}._<p>By default this is {@link #DEFAULT_SERVLET_NAME}.;protected String getServletName() {_		return DEFAULT_SERVLET_NAME__	};return,the,name,to,use,to,register,the,link,servlet,http,handler,adapter,p,by,default,this,is,link;protected,string,get,servlet,name,return
AbstractReactiveWebInitializer -> protected void refreshApplicationContext(ApplicationContext context);1515537160;Refresh the given application context, if necessary.;protected void refreshApplicationContext(ApplicationContext context) {_		if (context instanceof ConfigurableApplicationContext) {_			ConfigurableApplicationContext cac = (ConfigurableApplicationContext) context__			if (!cac.isActive()) {_				cac.refresh()__			}_		}_	};refresh,the,given,application,context,if,necessary;protected,void,refresh,application,context,application,context,context,if,context,instanceof,configurable,application,context,configurable,application,context,cac,configurable,application,context,context,if,cac,is,active,cac,refresh
AbstractReactiveWebInitializer -> protected void refreshApplicationContext(ApplicationContext context);1516914749;Refresh the given application context, if necessary.;protected void refreshApplicationContext(ApplicationContext context) {_		if (context instanceof ConfigurableApplicationContext) {_			ConfigurableApplicationContext cac = (ConfigurableApplicationContext) context__			if (!cac.isActive()) {_				cac.refresh()__			}_		}_	};refresh,the,given,application,context,if,necessary;protected,void,refresh,application,context,application,context,context,if,context,instanceof,configurable,application,context,configurable,application,context,cac,configurable,application,context,context,if,cac,is,active,cac,refresh
AbstractReactiveWebInitializer -> protected void refreshApplicationContext(ApplicationContext context);1521050150;Refresh the given application context, if necessary.;protected void refreshApplicationContext(ApplicationContext context) {_		if (context instanceof ConfigurableApplicationContext) {_			ConfigurableApplicationContext cac = (ConfigurableApplicationContext) context__			if (!cac.isActive()) {_				cac.refresh()__			}_		}_	};refresh,the,given,application,context,if,necessary;protected,void,refresh,application,context,application,context,context,if,context,instanceof,configurable,application,context,configurable,application,context,cac,configurable,application,context,context,if,cac,is,active,cac,refresh
AbstractReactiveWebInitializer -> protected ApplicationContext createApplicationContext();1509649026;Return the Spring configuration that contains application beans including_the ones detected by {@link WebHttpHandlerBuilder#applicationContext}.;protected ApplicationContext createApplicationContext() {_		AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext()__		Class<?>[] configClasses = getConfigClasses()__		Assert.notEmpty(configClasses, "No Spring configuration provided.")__		return context__	};return,the,spring,configuration,that,contains,application,beans,including,the,ones,detected,by,link,web,http,handler,builder,application,context;protected,application,context,create,application,context,annotation,config,application,context,context,new,annotation,config,application,context,class,config,classes,get,config,classes,assert,not,empty,config,classes,no,spring,configuration,provided,return,context
AbstractReactiveWebInitializer -> protected ApplicationContext createApplicationContext();1509670989;Return the Spring configuration that contains application beans including_the ones detected by {@link WebHttpHandlerBuilder#applicationContext}.;protected ApplicationContext createApplicationContext() {_		AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext()__		Class<?>[] configClasses = getConfigClasses()__		Assert.notEmpty(configClasses, "No Spring configuration provided.")__		return context__	};return,the,spring,configuration,that,contains,application,beans,including,the,ones,detected,by,link,web,http,handler,builder,application,context;protected,application,context,create,application,context,annotation,config,application,context,context,new,annotation,config,application,context,class,config,classes,get,config,classes,assert,not,empty,config,classes,no,spring,configuration,provided,return,context
AbstractReactiveWebInitializer -> protected ApplicationContext createApplicationContext();1515537160;Return the Spring configuration that contains application beans including_the ones detected by {@link WebHttpHandlerBuilder#applicationContext}.;protected ApplicationContext createApplicationContext() {_		AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext()__		Class<?>[] configClasses = getConfigClasses()__		Assert.notEmpty(configClasses, "No Spring configuration provided.")__		context.register(configClasses)__		return context__	};return,the,spring,configuration,that,contains,application,beans,including,the,ones,detected,by,link,web,http,handler,builder,application,context;protected,application,context,create,application,context,annotation,config,application,context,context,new,annotation,config,application,context,class,config,classes,get,config,classes,assert,not,empty,config,classes,no,spring,configuration,provided,context,register,config,classes,return,context
AbstractReactiveWebInitializer -> protected ApplicationContext createApplicationContext();1516914749;Return the Spring configuration that contains application beans including_the ones detected by {@link WebHttpHandlerBuilder#applicationContext}.;protected ApplicationContext createApplicationContext() {_		AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext()__		Class<?>[] configClasses = getConfigClasses()__		Assert.notEmpty(configClasses, "No Spring configuration provided.")__		context.register(configClasses)__		return context__	};return,the,spring,configuration,that,contains,application,beans,including,the,ones,detected,by,link,web,http,handler,builder,application,context;protected,application,context,create,application,context,annotation,config,application,context,context,new,annotation,config,application,context,class,config,classes,get,config,classes,assert,not,empty,config,classes,no,spring,configuration,provided,context,register,config,classes,return,context
AbstractReactiveWebInitializer -> protected ApplicationContext createApplicationContext();1521050150;Return the Spring configuration that contains application beans including_the ones detected by {@link WebHttpHandlerBuilder#applicationContext}.;protected ApplicationContext createApplicationContext() {_		AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext()__		Class<?>[] configClasses = getConfigClasses()__		Assert.notEmpty(configClasses, "No Spring configuration provided through getConfigClasses()")__		context.register(configClasses)__		return context__	};return,the,spring,configuration,that,contains,application,beans,including,the,ones,detected,by,link,web,http,handler,builder,application,context;protected,application,context,create,application,context,annotation,config,application,context,context,new,annotation,config,application,context,class,config,classes,get,config,classes,assert,not,empty,config,classes,no,spring,configuration,provided,through,get,config,classes,context,register,config,classes,return,context
