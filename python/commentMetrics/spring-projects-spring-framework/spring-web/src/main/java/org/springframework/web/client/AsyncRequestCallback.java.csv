# id;timestamp;commentText;codeText;commentWords;codeWords
AsyncRequestCallback -> void doWithRequest(AsyncClientHttpRequest request) throws IOException_;1377627757;Gets called by {@link AsyncRestTemplate#execute} with an opened {@code ClientHttpRequest}._Does not need to care about closing the request or about handling errors:_this will all be handled by the {@code RestTemplate}._@param request the active HTTP request_@throws java.io.IOException in case of I/O errors;void doWithRequest(AsyncClientHttpRequest request) throws IOException_;gets,called,by,link,async,rest,template,execute,with,an,opened,code,client,http,request,does,not,need,to,care,about,closing,the,request,or,about,handling,errors,this,will,all,be,handled,by,the,code,rest,template,param,request,the,active,http,request,throws,java,io,ioexception,in,case,of,i,o,errors;void,do,with,request,async,client,http,request,request,throws,ioexception
AsyncRequestCallback -> void doWithRequest(AsyncClientHttpRequest request) throws IOException_;1467808333;Gets called by {@link AsyncRestTemplate#execute} with an opened {@code ClientHttpRequest}._Does not need to care about closing the request or about handling errors:_this will all be handled by the {@code RestTemplate}._@param request the active HTTP request_@throws java.io.IOException in case of I/O errors;void doWithRequest(AsyncClientHttpRequest request) throws IOException_;gets,called,by,link,async,rest,template,execute,with,an,opened,code,client,http,request,does,not,need,to,care,about,closing,the,request,or,about,handling,errors,this,will,all,be,handled,by,the,code,rest,template,param,request,the,active,http,request,throws,java,io,ioexception,in,case,of,i,o,errors;void,do,with,request,async,client,http,request,request,throws,ioexception
AsyncRequestCallback -> void doWithRequest(org.springframework.http.client.AsyncClientHttpRequest request) throws IOException_;1490795646;Gets called by {@link AsyncRestTemplate#execute} with an opened {@code ClientHttpRequest}._Does not need to care about closing the request or about handling errors:_this will all be handled by the {@code RestTemplate}._@param request the active HTTP request_@throws java.io.IOException in case of I/O errors;void doWithRequest(org.springframework.http.client.AsyncClientHttpRequest request) throws IOException_;gets,called,by,link,async,rest,template,execute,with,an,opened,code,client,http,request,does,not,need,to,care,about,closing,the,request,or,about,handling,errors,this,will,all,be,handled,by,the,code,rest,template,param,request,the,active,http,request,throws,java,io,ioexception,in,case,of,i,o,errors;void,do,with,request,org,springframework,http,client,async,client,http,request,request,throws,ioexception
AsyncRequestCallback -> void doWithRequest(org.springframework.http.client.AsyncClientHttpRequest request) throws IOException_;1508532146;Gets called by {@link AsyncRestTemplate#execute} with an opened {@code ClientHttpRequest}._Does not need to care about closing the request or about handling errors:_this will all be handled by the {@code RestTemplate}._@param request the active HTTP request_@throws java.io.IOException in case of I/O errors;void doWithRequest(org.springframework.http.client.AsyncClientHttpRequest request) throws IOException_;gets,called,by,link,async,rest,template,execute,with,an,opened,code,client,http,request,does,not,need,to,care,about,closing,the,request,or,about,handling,errors,this,will,all,be,handled,by,the,code,rest,template,param,request,the,active,http,request,throws,java,io,ioexception,in,case,of,i,o,errors;void,do,with,request,org,springframework,http,client,async,client,http,request,request,throws,ioexception
