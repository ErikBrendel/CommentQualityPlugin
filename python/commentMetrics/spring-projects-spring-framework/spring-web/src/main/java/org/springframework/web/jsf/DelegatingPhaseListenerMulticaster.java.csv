# id;timestamp;commentText;codeText;commentWords;codeWords
DelegatingPhaseListenerMulticaster -> protected Collection<PhaseListener> getDelegates(FacesContext facesContext);1328020251;Obtain the delegate PhaseListener beans from the Spring root WebApplicationContext._@param facesContext the current JSF context_@return a Collection of PhaseListener objects_@see #getBeanFactory_@see org.springframework.beans.factory.ListableBeanFactory#getBeansOfType(Class);protected Collection<PhaseListener> getDelegates(FacesContext facesContext) {_		ListableBeanFactory bf = getBeanFactory(facesContext)__		return BeanFactoryUtils.beansOfTypeIncludingAncestors(bf, PhaseListener.class, true, false).values()__	};obtain,the,delegate,phase,listener,beans,from,the,spring,root,web,application,context,param,faces,context,the,current,jsf,context,return,a,collection,of,phase,listener,objects,see,get,bean,factory,see,org,springframework,beans,factory,listable,bean,factory,get,beans,of,type,class;protected,collection,phase,listener,get,delegates,faces,context,faces,context,listable,bean,factory,bf,get,bean,factory,faces,context,return,bean,factory,utils,beans,of,type,including,ancestors,bf,phase,listener,class,true,false,values
DelegatingPhaseListenerMulticaster -> protected Collection<PhaseListener> getDelegates(FacesContext facesContext);1356735495;Obtain the delegate PhaseListener beans from the Spring root WebApplicationContext._@param facesContext the current JSF context_@return a Collection of PhaseListener objects_@see #getBeanFactory_@see org.springframework.beans.factory.ListableBeanFactory#getBeansOfType(Class);protected Collection<PhaseListener> getDelegates(FacesContext facesContext) {_		ListableBeanFactory bf = getBeanFactory(facesContext)__		return BeanFactoryUtils.beansOfTypeIncludingAncestors(bf, PhaseListener.class, true, false).values()__	};obtain,the,delegate,phase,listener,beans,from,the,spring,root,web,application,context,param,faces,context,the,current,jsf,context,return,a,collection,of,phase,listener,objects,see,get,bean,factory,see,org,springframework,beans,factory,listable,bean,factory,get,beans,of,type,class;protected,collection,phase,listener,get,delegates,faces,context,faces,context,listable,bean,factory,bf,get,bean,factory,faces,context,return,bean,factory,utils,beans,of,type,including,ancestors,bf,phase,listener,class,true,false,values
DelegatingPhaseListenerMulticaster -> protected Collection<PhaseListener> getDelegates(FacesContext facesContext);1357119239;Obtain the delegate PhaseListener beans from the Spring root WebApplicationContext._@param facesContext the current JSF context_@return a Collection of PhaseListener objects_@see #getBeanFactory_@see org.springframework.beans.factory.ListableBeanFactory#getBeansOfType(Class);protected Collection<PhaseListener> getDelegates(FacesContext facesContext) {_		ListableBeanFactory bf = getBeanFactory(facesContext)__		return BeanFactoryUtils.beansOfTypeIncludingAncestors(bf, PhaseListener.class, true, false).values()__	};obtain,the,delegate,phase,listener,beans,from,the,spring,root,web,application,context,param,faces,context,the,current,jsf,context,return,a,collection,of,phase,listener,objects,see,get,bean,factory,see,org,springframework,beans,factory,listable,bean,factory,get,beans,of,type,class;protected,collection,phase,listener,get,delegates,faces,context,faces,context,listable,bean,factory,bf,get,bean,factory,faces,context,return,bean,factory,utils,beans,of,type,including,ancestors,bf,phase,listener,class,true,false,values
DelegatingPhaseListenerMulticaster -> protected Collection<PhaseListener> getDelegates(FacesContext facesContext);1368482696;Obtain the delegate PhaseListener beans from the Spring root WebApplicationContext._@param facesContext the current JSF context_@return a Collection of PhaseListener objects_@see #getBeanFactory_@see org.springframework.beans.factory.ListableBeanFactory#getBeansOfType(Class);protected Collection<PhaseListener> getDelegates(FacesContext facesContext) {_		ListableBeanFactory bf = getBeanFactory(facesContext)__		return BeanFactoryUtils.beansOfTypeIncludingAncestors(bf, PhaseListener.class, true, false).values()__	};obtain,the,delegate,phase,listener,beans,from,the,spring,root,web,application,context,param,faces,context,the,current,jsf,context,return,a,collection,of,phase,listener,objects,see,get,bean,factory,see,org,springframework,beans,factory,listable,bean,factory,get,beans,of,type,class;protected,collection,phase,listener,get,delegates,faces,context,faces,context,listable,bean,factory,bf,get,bean,factory,faces,context,return,bean,factory,utils,beans,of,type,including,ancestors,bf,phase,listener,class,true,false,values
DelegatingPhaseListenerMulticaster -> protected WebApplicationContext getWebApplicationContext(FacesContext facesContext);1328020251;Retrieve the web application context to delegate bean name resolution to._<p>The default implementation delegates to FacesContextUtils._@param facesContext the current JSF context_@return the Spring web application context (never <code>null</code>)_@see FacesContextUtils#getRequiredWebApplicationContext;protected WebApplicationContext getWebApplicationContext(FacesContext facesContext) {_		return FacesContextUtils.getRequiredWebApplicationContext(facesContext)__	};retrieve,the,web,application,context,to,delegate,bean,name,resolution,to,p,the,default,implementation,delegates,to,faces,context,utils,param,faces,context,the,current,jsf,context,return,the,spring,web,application,context,never,code,null,code,see,faces,context,utils,get,required,web,application,context;protected,web,application,context,get,web,application,context,faces,context,faces,context,return,faces,context,utils,get,required,web,application,context,faces,context
DelegatingPhaseListenerMulticaster -> protected WebApplicationContext getWebApplicationContext(FacesContext facesContext);1356735495;Retrieve the web application context to delegate bean name resolution to._<p>The default implementation delegates to FacesContextUtils._@param facesContext the current JSF context_@return the Spring web application context (never {@code null})_@see FacesContextUtils#getRequiredWebApplicationContext;protected WebApplicationContext getWebApplicationContext(FacesContext facesContext) {_		return FacesContextUtils.getRequiredWebApplicationContext(facesContext)__	};retrieve,the,web,application,context,to,delegate,bean,name,resolution,to,p,the,default,implementation,delegates,to,faces,context,utils,param,faces,context,the,current,jsf,context,return,the,spring,web,application,context,never,code,null,see,faces,context,utils,get,required,web,application,context;protected,web,application,context,get,web,application,context,faces,context,faces,context,return,faces,context,utils,get,required,web,application,context,faces,context
DelegatingPhaseListenerMulticaster -> protected WebApplicationContext getWebApplicationContext(FacesContext facesContext);1357119239;Retrieve the web application context to delegate bean name resolution to._<p>The default implementation delegates to FacesContextUtils._@param facesContext the current JSF context_@return the Spring web application context (never {@code null})_@see FacesContextUtils#getRequiredWebApplicationContext;protected WebApplicationContext getWebApplicationContext(FacesContext facesContext) {_		return FacesContextUtils.getRequiredWebApplicationContext(facesContext)__	};retrieve,the,web,application,context,to,delegate,bean,name,resolution,to,p,the,default,implementation,delegates,to,faces,context,utils,param,faces,context,the,current,jsf,context,return,the,spring,web,application,context,never,code,null,see,faces,context,utils,get,required,web,application,context;protected,web,application,context,get,web,application,context,faces,context,faces,context,return,faces,context,utils,get,required,web,application,context,faces,context
DelegatingPhaseListenerMulticaster -> protected WebApplicationContext getWebApplicationContext(FacesContext facesContext);1368482696;Retrieve the web application context to delegate bean name resolution to._<p>The default implementation delegates to FacesContextUtils._@param facesContext the current JSF context_@return the Spring web application context (never {@code null})_@see FacesContextUtils#getRequiredWebApplicationContext;protected WebApplicationContext getWebApplicationContext(FacesContext facesContext) {_		return FacesContextUtils.getRequiredWebApplicationContext(facesContext)__	};retrieve,the,web,application,context,to,delegate,bean,name,resolution,to,p,the,default,implementation,delegates,to,faces,context,utils,param,faces,context,the,current,jsf,context,return,the,spring,web,application,context,never,code,null,see,faces,context,utils,get,required,web,application,context;protected,web,application,context,get,web,application,context,faces,context,faces,context,return,faces,context,utils,get,required,web,application,context,faces,context
DelegatingPhaseListenerMulticaster -> protected ListableBeanFactory getBeanFactory(FacesContext facesContext);1328020251;Retrieve the Spring BeanFactory to delegate bean name resolution to._<p>The default implementation delegates to <code>getWebApplicationContext</code>._Can be overridden to provide an arbitrary ListableBeanFactory reference to_resolve against_ usually, this will be a full Spring ApplicationContext._@param facesContext the current JSF context_@return the Spring ListableBeanFactory (never <code>null</code>)_@see #getWebApplicationContext;protected ListableBeanFactory getBeanFactory(FacesContext facesContext) {_		return getWebApplicationContext(facesContext)__	};retrieve,the,spring,bean,factory,to,delegate,bean,name,resolution,to,p,the,default,implementation,delegates,to,code,get,web,application,context,code,can,be,overridden,to,provide,an,arbitrary,listable,bean,factory,reference,to,resolve,against,usually,this,will,be,a,full,spring,application,context,param,faces,context,the,current,jsf,context,return,the,spring,listable,bean,factory,never,code,null,code,see,get,web,application,context;protected,listable,bean,factory,get,bean,factory,faces,context,faces,context,return,get,web,application,context,faces,context
DelegatingPhaseListenerMulticaster -> protected ListableBeanFactory getBeanFactory(FacesContext facesContext);1356735495;Retrieve the Spring BeanFactory to delegate bean name resolution to._<p>The default implementation delegates to {@code getWebApplicationContext}._Can be overridden to provide an arbitrary ListableBeanFactory reference to_resolve against_ usually, this will be a full Spring ApplicationContext._@param facesContext the current JSF context_@return the Spring ListableBeanFactory (never {@code null})_@see #getWebApplicationContext;protected ListableBeanFactory getBeanFactory(FacesContext facesContext) {_		return getWebApplicationContext(facesContext)__	};retrieve,the,spring,bean,factory,to,delegate,bean,name,resolution,to,p,the,default,implementation,delegates,to,code,get,web,application,context,can,be,overridden,to,provide,an,arbitrary,listable,bean,factory,reference,to,resolve,against,usually,this,will,be,a,full,spring,application,context,param,faces,context,the,current,jsf,context,return,the,spring,listable,bean,factory,never,code,null,see,get,web,application,context;protected,listable,bean,factory,get,bean,factory,faces,context,faces,context,return,get,web,application,context,faces,context
DelegatingPhaseListenerMulticaster -> protected ListableBeanFactory getBeanFactory(FacesContext facesContext);1357119239;Retrieve the Spring BeanFactory to delegate bean name resolution to._<p>The default implementation delegates to {@code getWebApplicationContext}._Can be overridden to provide an arbitrary ListableBeanFactory reference to_resolve against_ usually, this will be a full Spring ApplicationContext._@param facesContext the current JSF context_@return the Spring ListableBeanFactory (never {@code null})_@see #getWebApplicationContext;protected ListableBeanFactory getBeanFactory(FacesContext facesContext) {_		return getWebApplicationContext(facesContext)__	};retrieve,the,spring,bean,factory,to,delegate,bean,name,resolution,to,p,the,default,implementation,delegates,to,code,get,web,application,context,can,be,overridden,to,provide,an,arbitrary,listable,bean,factory,reference,to,resolve,against,usually,this,will,be,a,full,spring,application,context,param,faces,context,the,current,jsf,context,return,the,spring,listable,bean,factory,never,code,null,see,get,web,application,context;protected,listable,bean,factory,get,bean,factory,faces,context,faces,context,return,get,web,application,context,faces,context
DelegatingPhaseListenerMulticaster -> protected ListableBeanFactory getBeanFactory(FacesContext facesContext);1368482696;Retrieve the Spring BeanFactory to delegate bean name resolution to._<p>The default implementation delegates to {@code getWebApplicationContext}._Can be overridden to provide an arbitrary ListableBeanFactory reference to_resolve against_ usually, this will be a full Spring ApplicationContext._@param facesContext the current JSF context_@return the Spring ListableBeanFactory (never {@code null})_@see #getWebApplicationContext;protected ListableBeanFactory getBeanFactory(FacesContext facesContext) {_		return getWebApplicationContext(facesContext)__	};retrieve,the,spring,bean,factory,to,delegate,bean,name,resolution,to,p,the,default,implementation,delegates,to,code,get,web,application,context,can,be,overridden,to,provide,an,arbitrary,listable,bean,factory,reference,to,resolve,against,usually,this,will,be,a,full,spring,application,context,param,faces,context,the,current,jsf,context,return,the,spring,listable,bean,factory,never,code,null,see,get,web,application,context;protected,listable,bean,factory,get,bean,factory,faces,context,faces,context,return,get,web,application,context,faces,context
