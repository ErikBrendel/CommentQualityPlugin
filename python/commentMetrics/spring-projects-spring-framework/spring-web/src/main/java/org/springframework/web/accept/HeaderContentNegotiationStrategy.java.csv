# id;timestamp;commentText;codeText;commentWords;codeWords
HeaderContentNegotiationStrategy -> public List<MediaType> resolveMediaTypes(NativeWebRequest webRequest) throws HttpMediaTypeNotAcceptableException;1340380546;{@inheritDoc}_@throws HttpMediaTypeNotAcceptableException if the 'Accept' header cannot be parsed.;public List<MediaType> resolveMediaTypes(NativeWebRequest webRequest) throws HttpMediaTypeNotAcceptableException {_		String acceptHeader = webRequest.getHeader(ACCEPT_HEADER)__		try {_			if (StringUtils.hasText(acceptHeader)) {_				List<MediaType> mediaTypes = MediaType.parseMediaTypes(acceptHeader)__				MediaType.sortBySpecificityAndQuality(mediaTypes)__				return mediaTypes__			}_		}_		catch (IllegalArgumentException ex) {_			throw new HttpMediaTypeNotAcceptableException(_					"Could not parse accept header [" + acceptHeader + "]: " + ex.getMessage())__		}_		return Collections.emptyList()__	};inherit,doc,throws,http,media,type,not,acceptable,exception,if,the,accept,header,cannot,be,parsed;public,list,media,type,resolve,media,types,native,web,request,web,request,throws,http,media,type,not,acceptable,exception,string,accept,header,web,request,get,header,try,if,string,utils,has,text,accept,header,list,media,type,media,types,media,type,parse,media,types,accept,header,media,type,sort,by,specificity,and,quality,media,types,return,media,types,catch,illegal,argument,exception,ex,throw,new,http,media,type,not,acceptable,exception,could,not,parse,accept,header,accept,header,ex,get,message,return,collections,empty,list
HeaderContentNegotiationStrategy -> public List<MediaType> resolveMediaTypes(NativeWebRequest webRequest) throws HttpMediaTypeNotAcceptableException;1357119239;{@inheritDoc}_@throws HttpMediaTypeNotAcceptableException if the 'Accept' header cannot be parsed.;public List<MediaType> resolveMediaTypes(NativeWebRequest webRequest) throws HttpMediaTypeNotAcceptableException {_		String acceptHeader = webRequest.getHeader(ACCEPT_HEADER)__		try {_			if (StringUtils.hasText(acceptHeader)) {_				List<MediaType> mediaTypes = MediaType.parseMediaTypes(acceptHeader)__				MediaType.sortBySpecificityAndQuality(mediaTypes)__				return mediaTypes__			}_		}_		catch (IllegalArgumentException ex) {_			throw new HttpMediaTypeNotAcceptableException(_					"Could not parse accept header [" + acceptHeader + "]: " + ex.getMessage())__		}_		return Collections.emptyList()__	};inherit,doc,throws,http,media,type,not,acceptable,exception,if,the,accept,header,cannot,be,parsed;public,list,media,type,resolve,media,types,native,web,request,web,request,throws,http,media,type,not,acceptable,exception,string,accept,header,web,request,get,header,try,if,string,utils,has,text,accept,header,list,media,type,media,types,media,type,parse,media,types,accept,header,media,type,sort,by,specificity,and,quality,media,types,return,media,types,catch,illegal,argument,exception,ex,throw,new,http,media,type,not,acceptable,exception,could,not,parse,accept,header,accept,header,ex,get,message,return,collections,empty,list
HeaderContentNegotiationStrategy -> @Override 	public List<MediaType> resolveMediaTypes(NativeWebRequest webRequest) throws HttpMediaTypeNotAcceptableException;1356735495;{@inheritDoc}_@throws HttpMediaTypeNotAcceptableException if the 'Accept' header cannot be parsed.;@Override_	public List<MediaType> resolveMediaTypes(NativeWebRequest webRequest) throws HttpMediaTypeNotAcceptableException {_		String acceptHeader = webRequest.getHeader(ACCEPT_HEADER)__		try {_			if (StringUtils.hasText(acceptHeader)) {_				List<MediaType> mediaTypes = MediaType.parseMediaTypes(acceptHeader)__				MediaType.sortBySpecificityAndQuality(mediaTypes)__				return mediaTypes__			}_		}_		catch (IllegalArgumentException ex) {_			throw new HttpMediaTypeNotAcceptableException(_					"Could not parse accept header [" + acceptHeader + "]: " + ex.getMessage())__		}_		return Collections.emptyList()__	};inherit,doc,throws,http,media,type,not,acceptable,exception,if,the,accept,header,cannot,be,parsed;override,public,list,media,type,resolve,media,types,native,web,request,web,request,throws,http,media,type,not,acceptable,exception,string,accept,header,web,request,get,header,try,if,string,utils,has,text,accept,header,list,media,type,media,types,media,type,parse,media,types,accept,header,media,type,sort,by,specificity,and,quality,media,types,return,media,types,catch,illegal,argument,exception,ex,throw,new,http,media,type,not,acceptable,exception,could,not,parse,accept,header,accept,header,ex,get,message,return,collections,empty,list
HeaderContentNegotiationStrategy -> @Override 	public List<MediaType> resolveMediaTypes(NativeWebRequest webRequest) throws HttpMediaTypeNotAcceptableException;1368482696;{@inheritDoc}_@throws HttpMediaTypeNotAcceptableException if the 'Accept' header cannot be parsed.;@Override_	public List<MediaType> resolveMediaTypes(NativeWebRequest webRequest) throws HttpMediaTypeNotAcceptableException {_		String acceptHeader = webRequest.getHeader(ACCEPT_HEADER)__		try {_			if (StringUtils.hasText(acceptHeader)) {_				List<MediaType> mediaTypes = MediaType.parseMediaTypes(acceptHeader)__				MediaType.sortBySpecificityAndQuality(mediaTypes)__				return mediaTypes__			}_		}_		catch (IllegalArgumentException ex) {_			throw new HttpMediaTypeNotAcceptableException(_					"Could not parse accept header [" + acceptHeader + "]: " + ex.getMessage())__		}_		return Collections.emptyList()__	};inherit,doc,throws,http,media,type,not,acceptable,exception,if,the,accept,header,cannot,be,parsed;override,public,list,media,type,resolve,media,types,native,web,request,web,request,throws,http,media,type,not,acceptable,exception,string,accept,header,web,request,get,header,try,if,string,utils,has,text,accept,header,list,media,type,media,types,media,type,parse,media,types,accept,header,media,type,sort,by,specificity,and,quality,media,types,return,media,types,catch,illegal,argument,exception,ex,throw,new,http,media,type,not,acceptable,exception,could,not,parse,accept,header,accept,header,ex,get,message,return,collections,empty,list
HeaderContentNegotiationStrategy -> @Override 	public List<MediaType> resolveMediaTypes(NativeWebRequest webRequest) throws HttpMediaTypeNotAcceptableException;1375896097;{@inheritDoc}_@throws HttpMediaTypeNotAcceptableException if the 'Accept' header cannot be parsed.;@Override_	public List<MediaType> resolveMediaTypes(NativeWebRequest webRequest) throws HttpMediaTypeNotAcceptableException {_		String acceptHeader = webRequest.getHeader(ACCEPT_HEADER)__		try {_			if (StringUtils.hasText(acceptHeader)) {_				List<MediaType> mediaTypes = MediaType.parseMediaTypes(acceptHeader)__				MediaType.sortBySpecificityAndQuality(mediaTypes)__				return mediaTypes__			}_		}_		catch (InvalidMediaTypeException ex) {_			throw new HttpMediaTypeNotAcceptableException(_					"Could not parse accept header [" + acceptHeader + "]: " + ex.getMessage())__		}_		return Collections.emptyList()__	};inherit,doc,throws,http,media,type,not,acceptable,exception,if,the,accept,header,cannot,be,parsed;override,public,list,media,type,resolve,media,types,native,web,request,web,request,throws,http,media,type,not,acceptable,exception,string,accept,header,web,request,get,header,try,if,string,utils,has,text,accept,header,list,media,type,media,types,media,type,parse,media,types,accept,header,media,type,sort,by,specificity,and,quality,media,types,return,media,types,catch,invalid,media,type,exception,ex,throw,new,http,media,type,not,acceptable,exception,could,not,parse,accept,header,accept,header,ex,get,message,return,collections,empty,list
HeaderContentNegotiationStrategy -> @Override 	public List<MediaType> resolveMediaTypes(NativeWebRequest request) 			throws HttpMediaTypeNotAcceptableException;1443560917;{@inheritDoc}_@throws HttpMediaTypeNotAcceptableException if the 'Accept' header_cannot be parsed.;@Override_	public List<MediaType> resolveMediaTypes(NativeWebRequest request)_			throws HttpMediaTypeNotAcceptableException {__		String header = request.getHeader(HttpHeaders.ACCEPT)__		if (!StringUtils.hasText(header)) {_			return Collections.emptyList()__		}_		try {_			List<MediaType> mediaTypes = MediaType.parseMediaTypes(header)__			MediaType.sortBySpecificityAndQuality(mediaTypes)__			return mediaTypes__		}_		catch (InvalidMediaTypeException ex) {_			throw new HttpMediaTypeNotAcceptableException(_					"Could not parse 'Accept' header [" + header + "]: " + ex.getMessage())__		}_	};inherit,doc,throws,http,media,type,not,acceptable,exception,if,the,accept,header,cannot,be,parsed;override,public,list,media,type,resolve,media,types,native,web,request,request,throws,http,media,type,not,acceptable,exception,string,header,request,get,header,http,headers,accept,if,string,utils,has,text,header,return,collections,empty,list,try,list,media,type,media,types,media,type,parse,media,types,header,media,type,sort,by,specificity,and,quality,media,types,return,media,types,catch,invalid,media,type,exception,ex,throw,new,http,media,type,not,acceptable,exception,could,not,parse,accept,header,header,ex,get,message
HeaderContentNegotiationStrategy -> @Override 	public List<MediaType> resolveMediaTypes(NativeWebRequest request) 			throws HttpMediaTypeNotAcceptableException;1464879764;{@inheritDoc}_@throws HttpMediaTypeNotAcceptableException if the 'Accept' header cannot be parsed;@Override_	public List<MediaType> resolveMediaTypes(NativeWebRequest request)_			throws HttpMediaTypeNotAcceptableException {__		String header = request.getHeader(HttpHeaders.ACCEPT)__		if (!StringUtils.hasText(header)) {_			return Collections.emptyList()__		}_		try {_			List<MediaType> mediaTypes = MediaType.parseMediaTypes(header)__			MediaType.sortBySpecificityAndQuality(mediaTypes)__			return mediaTypes__		}_		catch (InvalidMediaTypeException ex) {_			throw new HttpMediaTypeNotAcceptableException(_					"Could not parse 'Accept' header [" + header + "]: " + ex.getMessage())__		}_	};inherit,doc,throws,http,media,type,not,acceptable,exception,if,the,accept,header,cannot,be,parsed;override,public,list,media,type,resolve,media,types,native,web,request,request,throws,http,media,type,not,acceptable,exception,string,header,request,get,header,http,headers,accept,if,string,utils,has,text,header,return,collections,empty,list,try,list,media,type,media,types,media,type,parse,media,types,header,media,type,sort,by,specificity,and,quality,media,types,return,media,types,catch,invalid,media,type,exception,ex,throw,new,http,media,type,not,acceptable,exception,could,not,parse,accept,header,header,ex,get,message
HeaderContentNegotiationStrategy -> @Override 	public List<MediaType> resolveMediaTypes(NativeWebRequest request) 			throws HttpMediaTypeNotAcceptableException;1469219278;{@inheritDoc}_@throws HttpMediaTypeNotAcceptableException if the 'Accept' header cannot be parsed;@Override_	public List<MediaType> resolveMediaTypes(NativeWebRequest request)_			throws HttpMediaTypeNotAcceptableException {__		String[] headerValueArray = request.getHeaderValues(HttpHeaders.ACCEPT)__		if (headerValueArray == null) {_			return Collections.<MediaType>emptyList()__		}__		List<String> headerValues = Arrays.asList(headerValueArray)__		try {_			List<MediaType> mediaTypes = MediaType.parseMediaTypes(headerValues)__			MediaType.sortBySpecificityAndQuality(mediaTypes)__			return mediaTypes__		}_		catch (InvalidMediaTypeException ex) {_			throw new HttpMediaTypeNotAcceptableException(_					"Could not parse 'Accept' header " + headerValues + ": " + ex.getMessage())__		}_	};inherit,doc,throws,http,media,type,not,acceptable,exception,if,the,accept,header,cannot,be,parsed;override,public,list,media,type,resolve,media,types,native,web,request,request,throws,http,media,type,not,acceptable,exception,string,header,value,array,request,get,header,values,http,headers,accept,if,header,value,array,null,return,collections,media,type,empty,list,list,string,header,values,arrays,as,list,header,value,array,try,list,media,type,media,types,media,type,parse,media,types,header,values,media,type,sort,by,specificity,and,quality,media,types,return,media,types,catch,invalid,media,type,exception,ex,throw,new,http,media,type,not,acceptable,exception,could,not,parse,accept,header,header,values,ex,get,message
HeaderContentNegotiationStrategy -> @Override 	public List<MediaType> resolveMediaTypes(NativeWebRequest request) 			throws HttpMediaTypeNotAcceptableException;1474905889;{@inheritDoc}_@throws HttpMediaTypeNotAcceptableException if the 'Accept' header cannot be parsed;@Override_	public List<MediaType> resolveMediaTypes(NativeWebRequest request)_			throws HttpMediaTypeNotAcceptableException {__		String[] headerValueArray = request.getHeaderValues(HttpHeaders.ACCEPT)__		if (headerValueArray == null) {_			return Collections.emptyList()__		}__		List<String> headerValues = Arrays.asList(headerValueArray)__		try {_			List<MediaType> mediaTypes = MediaType.parseMediaTypes(headerValues)__			MediaType.sortBySpecificityAndQuality(mediaTypes)__			return mediaTypes__		}_		catch (InvalidMediaTypeException ex) {_			throw new HttpMediaTypeNotAcceptableException(_					"Could not parse 'Accept' header " + headerValues + ": " + ex.getMessage())__		}_	};inherit,doc,throws,http,media,type,not,acceptable,exception,if,the,accept,header,cannot,be,parsed;override,public,list,media,type,resolve,media,types,native,web,request,request,throws,http,media,type,not,acceptable,exception,string,header,value,array,request,get,header,values,http,headers,accept,if,header,value,array,null,return,collections,empty,list,list,string,header,values,arrays,as,list,header,value,array,try,list,media,type,media,types,media,type,parse,media,types,header,values,media,type,sort,by,specificity,and,quality,media,types,return,media,types,catch,invalid,media,type,exception,ex,throw,new,http,media,type,not,acceptable,exception,could,not,parse,accept,header,header,values,ex,get,message
HeaderContentNegotiationStrategy -> @Override 	public List<MediaType> resolveMediaTypes(NativeWebRequest request) 			throws HttpMediaTypeNotAcceptableException;1522184059;{@inheritDoc}_@throws HttpMediaTypeNotAcceptableException if the 'Accept' header cannot be parsed;@Override_	public List<MediaType> resolveMediaTypes(NativeWebRequest request)_			throws HttpMediaTypeNotAcceptableException {__		String[] headerValueArray = request.getHeaderValues(HttpHeaders.ACCEPT)__		if (headerValueArray == null) {_			return MEDIA_TYPE_ALL_LIST__		}__		List<String> headerValues = Arrays.asList(headerValueArray)__		try {_			List<MediaType> mediaTypes = MediaType.parseMediaTypes(headerValues)__			MediaType.sortBySpecificityAndQuality(mediaTypes)__			return !CollectionUtils.isEmpty(mediaTypes) ? mediaTypes : MEDIA_TYPE_ALL_LIST__		}_		catch (InvalidMediaTypeException ex) {_			throw new HttpMediaTypeNotAcceptableException(_					"Could not parse 'Accept' header " + headerValues + ": " + ex.getMessage())__		}_	};inherit,doc,throws,http,media,type,not,acceptable,exception,if,the,accept,header,cannot,be,parsed;override,public,list,media,type,resolve,media,types,native,web,request,request,throws,http,media,type,not,acceptable,exception,string,header,value,array,request,get,header,values,http,headers,accept,if,header,value,array,null,return,list,string,header,values,arrays,as,list,header,value,array,try,list,media,type,media,types,media,type,parse,media,types,header,values,media,type,sort,by,specificity,and,quality,media,types,return,collection,utils,is,empty,media,types,media,types,catch,invalid,media,type,exception,ex,throw,new,http,media,type,not,acceptable,exception,could,not,parse,accept,header,header,values,ex,get,message
