commented;modifiers;parameterAmount;loc;comment;code
true;public;1;20;/**  * {@inheritDoc}  * @throws HttpMediaTypeNotAcceptableException if the 'Accept' header cannot be parsed  */ ;/**  * {@inheritDoc}  * @throws HttpMediaTypeNotAcceptableException if the 'Accept' header cannot be parsed  */ @Override public List<MediaType> resolveMediaTypes(NativeWebRequest request) throws HttpMediaTypeNotAcceptableException {     String[] headerValueArray = request.getHeaderValues(HttpHeaders.ACCEPT).     if (headerValueArray == null) {         return MEDIA_TYPE_ALL_LIST.     }     List<String> headerValues = Arrays.asList(headerValueArray).     try {         List<MediaType> mediaTypes = MediaType.parseMediaTypes(headerValues).         MediaType.sortBySpecificityAndQuality(mediaTypes).         return !CollectionUtils.isEmpty(mediaTypes) ? mediaTypes : MEDIA_TYPE_ALL_LIST.     } catch (InvalidMediaTypeException ex) {         throw new HttpMediaTypeNotAcceptableException("Could not parse 'Accept' header " + headerValues + ": " + ex.getMessage()).     } }
