# id;timestamp;commentText;codeText;commentWords;codeWords
WebSession -> <T> Optional<T> getAttribute(String name)_;1468513835;Return the attribute value if present._@param name the attribute name_@param <T> the attribute type_@return the attribute value;<T> Optional<T> getAttribute(String name)_;return,the,attribute,value,if,present,param,name,the,attribute,name,param,t,the,attribute,type,return,the,attribute,value;t,optional,t,get,attribute,string,name
WebSession -> <T> Optional<T> getAttribute(String name)_;1468532417;Return the attribute value if present._@param name the attribute name_@param <T> the attribute type_@return the attribute value;<T> Optional<T> getAttribute(String name)_;return,the,attribute,value,if,present,param,name,the,attribute,name,param,t,the,attribute,type,return,the,attribute,value;t,optional,t,get,attribute,string,name
WebSession -> <T> Optional<T> getAttribute(String name)_;1472594294;Return the attribute value if present._@param name the attribute name_@param <T> the attribute type_@return the attribute value;<T> Optional<T> getAttribute(String name)_;return,the,attribute,value,if,present,param,name,the,attribute,name,param,t,the,attribute,type,return,the,attribute,value;t,optional,t,get,attribute,string,name
WebSession -> Mono<Void> save()_;1468513835;Save the session persisting attributes (e.g. if stored remotely) and also_sending the session id to the client if the session is new._<p>Note that a session must be started explicitly via {@link #start()} or_implicitly by adding attributes or otherwise this method has no effect._@return {@code Mono} to indicate completion with success or error_<p>Typically this method should be automatically invoked just before the_response is committed so applications don't have to by default.;Mono<Void> save()_;save,the,session,persisting,attributes,e,g,if,stored,remotely,and,also,sending,the,session,id,to,the,client,if,the,session,is,new,p,note,that,a,session,must,be,started,explicitly,via,link,start,or,implicitly,by,adding,attributes,or,otherwise,this,method,has,no,effect,return,code,mono,to,indicate,completion,with,success,or,error,p,typically,this,method,should,be,automatically,invoked,just,before,the,response,is,committed,so,applications,don,t,have,to,by,default;mono,void,save
WebSession -> Mono<Void> save()_;1468532417;Save the session persisting attributes (e.g. if stored remotely) and also_sending the session id to the client if the session is new._<p>Note that a session must be started explicitly via {@link #start()} or_implicitly by adding attributes or otherwise this method has no effect._@return {@code Mono} to indicate completion with success or error_<p>Typically this method should be automatically invoked just before the_response is committed so applications don't have to by default.;Mono<Void> save()_;save,the,session,persisting,attributes,e,g,if,stored,remotely,and,also,sending,the,session,id,to,the,client,if,the,session,is,new,p,note,that,a,session,must,be,started,explicitly,via,link,start,or,implicitly,by,adding,attributes,or,otherwise,this,method,has,no,effect,return,code,mono,to,indicate,completion,with,success,or,error,p,typically,this,method,should,be,automatically,invoked,just,before,the,response,is,committed,so,applications,don,t,have,to,by,default;mono,void,save
WebSession -> Mono<Void> save()_;1472594294;Save the session persisting attributes (e.g. if stored remotely) and also_sending the session id to the client if the session is new._<p>Note that a session must be started explicitly via {@link #start()} or_implicitly by adding attributes or otherwise this method has no effect._@return {@code Mono} to indicate completion with success or error_<p>Typically this method should be automatically invoked just before the_response is committed so applications don't have to by default.;Mono<Void> save()_;save,the,session,persisting,attributes,e,g,if,stored,remotely,and,also,sending,the,session,id,to,the,client,if,the,session,is,new,p,note,that,a,session,must,be,started,explicitly,via,link,start,or,implicitly,by,adding,attributes,or,otherwise,this,method,has,no,effect,return,code,mono,to,indicate,completion,with,success,or,error,p,typically,this,method,should,be,automatically,invoked,just,before,the,response,is,committed,so,applications,don,t,have,to,by,default;mono,void,save
WebSession -> Mono<Void> save()_;1498764216;Save the session persisting attributes (e.g. if stored remotely) and also_sending the session id to the client if the session is new._<p>Note that a session must be started explicitly via {@link #start()} or_implicitly by adding attributes or otherwise this method has no effect._@return {@code Mono} to indicate completion with success or error_<p>Typically this method should be automatically invoked just before the_response is committed so applications don't have to by default.;Mono<Void> save()_;save,the,session,persisting,attributes,e,g,if,stored,remotely,and,also,sending,the,session,id,to,the,client,if,the,session,is,new,p,note,that,a,session,must,be,started,explicitly,via,link,start,or,implicitly,by,adding,attributes,or,otherwise,this,method,has,no,effect,return,code,mono,to,indicate,completion,with,success,or,error,p,typically,this,method,should,be,automatically,invoked,just,before,the,response,is,committed,so,applications,don,t,have,to,by,default;mono,void,save
WebSession -> Mono<Void> save()_;1500282578;Save the session persisting attributes (e.g. if stored remotely) and also_sending the session id to the client if the session is new._<p>Note that a session must be started explicitly via {@link #start()} or_implicitly by adding attributes or otherwise this method has no effect._@return {@code Mono} to indicate completion with success or error_<p>Typically this method should be automatically invoked just before the_response is committed so applications don't have to by default.;Mono<Void> save()_;save,the,session,persisting,attributes,e,g,if,stored,remotely,and,also,sending,the,session,id,to,the,client,if,the,session,is,new,p,note,that,a,session,must,be,started,explicitly,via,link,start,or,implicitly,by,adding,attributes,or,otherwise,this,method,has,no,effect,return,code,mono,to,indicate,completion,with,success,or,error,p,typically,this,method,should,be,automatically,invoked,just,before,the,response,is,committed,so,applications,don,t,have,to,by,default;mono,void,save
WebSession -> Mono<Void> save()_;1506485438;Save the session persisting attributes (e.g. if stored remotely) and also_sending the session id to the client if the session is new._<p>Note that a session must be started explicitly via {@link #start()} or_implicitly by adding attributes or otherwise this method has no effect._@return {@code Mono} to indicate completion with success or error_<p>Typically this method should be automatically invoked just before the_response is committed so applications don't have to by default.;Mono<Void> save()_;save,the,session,persisting,attributes,e,g,if,stored,remotely,and,also,sending,the,session,id,to,the,client,if,the,session,is,new,p,note,that,a,session,must,be,started,explicitly,via,link,start,or,implicitly,by,adding,attributes,or,otherwise,this,method,has,no,effect,return,code,mono,to,indicate,completion,with,success,or,error,p,typically,this,method,should,be,automatically,invoked,just,before,the,response,is,committed,so,applications,don,t,have,to,by,default;mono,void,save
WebSession -> Mono<Void> save()_;1531966442;Save the session through the {@code WebSessionStore} as follows:_<ul>_<li>If the session is new (i.e. created but never persisted), it must have_been started explicitly via {@link #start()} or implicitly by adding_attributes, or otherwise this method should have no effect._<li>If the session was retrieved through the {@code WebSessionStore},_the implementation for this method must check whether the session was_{@link #invalidate() invalidated} and if so return an error._</ul>_<p>Note that this method is not intended for direct use by applications._Instead it is automatically invoked just before the response is_committed is committed._@return {@code Mono} to indicate completion with success or error;Mono<Void> save()_;save,the,session,through,the,code,web,session,store,as,follows,ul,li,if,the,session,is,new,i,e,created,but,never,persisted,it,must,have,been,started,explicitly,via,link,start,or,implicitly,by,adding,attributes,or,otherwise,this,method,should,have,no,effect,li,if,the,session,was,retrieved,through,the,code,web,session,store,the,implementation,for,this,method,must,check,whether,the,session,was,link,invalidate,invalidated,and,if,so,return,an,error,ul,p,note,that,this,method,is,not,intended,for,direct,use,by,applications,instead,it,is,automatically,invoked,just,before,the,response,is,committed,is,committed,return,code,mono,to,indicate,completion,with,success,or,error;mono,void,save
WebSession -> Mono<Void> save()_;1531992433;Save the session through the {@code WebSessionStore} as follows:_<ul>_<li>If the session is new (i.e. created but never persisted), it must have_been started explicitly via {@link #start()} or implicitly by adding_attributes, or otherwise this method should have no effect._<li>If the session was retrieved through the {@code WebSessionStore},_the implementation for this method must check whether the session was_{@link #invalidate() invalidated} and if so return an error._</ul>_<p>Note that this method is not intended for direct use by applications._Instead it is automatically invoked just before the response is_committed._@return {@code Mono} to indicate completion with success or error;Mono<Void> save()_;save,the,session,through,the,code,web,session,store,as,follows,ul,li,if,the,session,is,new,i,e,created,but,never,persisted,it,must,have,been,started,explicitly,via,link,start,or,implicitly,by,adding,attributes,or,otherwise,this,method,should,have,no,effect,li,if,the,session,was,retrieved,through,the,code,web,session,store,the,implementation,for,this,method,must,check,whether,the,session,was,link,invalidate,invalidated,and,if,so,return,an,error,ul,p,note,that,this,method,is,not,intended,for,direct,use,by,applications,instead,it,is,automatically,invoked,just,before,the,response,is,committed,return,code,mono,to,indicate,completion,with,success,or,error;mono,void,save
WebSession -> Mono<Void> save()_;1533034998;Save the session through the {@code WebSessionStore} as follows:_<ul>_<li>If the session is new (i.e. created but never persisted), it must have_been started explicitly via {@link #start()} or implicitly by adding_attributes, or otherwise this method should have no effect._<li>If the session was retrieved through the {@code WebSessionStore},_the implementation for this method must check whether the session was_{@link #invalidate() invalidated} and if so return an error._</ul>_<p>Note that this method is not intended for direct use by applications._Instead it is automatically invoked just before the response is_committed._@return {@code Mono} to indicate completion with success or error;Mono<Void> save()_;save,the,session,through,the,code,web,session,store,as,follows,ul,li,if,the,session,is,new,i,e,created,but,never,persisted,it,must,have,been,started,explicitly,via,link,start,or,implicitly,by,adding,attributes,or,otherwise,this,method,should,have,no,effect,li,if,the,session,was,retrieved,through,the,code,web,session,store,the,implementation,for,this,method,must,check,whether,the,session,was,link,invalidate,invalidated,and,if,so,return,an,error,ul,p,note,that,this,method,is,not,intended,for,direct,use,by,applications,instead,it,is,automatically,invoked,just,before,the,response,is,committed,return,code,mono,to,indicate,completion,with,success,or,error;mono,void,save
WebSession -> @SuppressWarnings("unchecked") 	default <T> T getAttributeOrDefault(String name, T defaultValue);1498764216;Return the session attribute value, or a default, fallback value._@param name the attribute name_@param defaultValue a default value to return instead_@param <T> the attribute type_@return the attribute value;@SuppressWarnings("unchecked")_	default <T> T getAttributeOrDefault(String name, T defaultValue) {_		return (T) getAttributes().getOrDefault(name, defaultValue)__	};return,the,session,attribute,value,or,a,default,fallback,value,param,name,the,attribute,name,param,default,value,a,default,value,to,return,instead,param,t,the,attribute,type,return,the,attribute,value;suppress,warnings,unchecked,default,t,t,get,attribute,or,default,string,name,t,default,value,return,t,get,attributes,get,or,default,name,default,value
WebSession -> @SuppressWarnings("unchecked") 	default <T> T getAttributeOrDefault(String name, T defaultValue);1500282578;Return the session attribute value, or a default, fallback value._@param name the attribute name_@param defaultValue a default value to return instead_@param <T> the attribute type_@return the attribute value;@SuppressWarnings("unchecked")_	default <T> T getAttributeOrDefault(String name, T defaultValue) {_		return (T) getAttributes().getOrDefault(name, defaultValue)__	};return,the,session,attribute,value,or,a,default,fallback,value,param,name,the,attribute,name,param,default,value,a,default,value,to,return,instead,param,t,the,attribute,type,return,the,attribute,value;suppress,warnings,unchecked,default,t,t,get,attribute,or,default,string,name,t,default,value,return,t,get,attributes,get,or,default,name,default,value
WebSession -> @SuppressWarnings("unchecked") 	default <T> T getAttributeOrDefault(String name, T defaultValue);1506485438;Return the session attribute value, or a default, fallback value._@param name the attribute name_@param defaultValue a default value to return instead_@param <T> the attribute type_@return the attribute value;@SuppressWarnings("unchecked")_	default <T> T getAttributeOrDefault(String name, T defaultValue) {_		return (T) getAttributes().getOrDefault(name, defaultValue)__	};return,the,session,attribute,value,or,a,default,fallback,value,param,name,the,attribute,name,param,default,value,a,default,value,to,return,instead,param,t,the,attribute,type,return,the,attribute,value;suppress,warnings,unchecked,default,t,t,get,attribute,or,default,string,name,t,default,value,return,t,get,attributes,get,or,default,name,default,value
WebSession -> @SuppressWarnings("unchecked") 	default <T> T getAttributeOrDefault(String name, T defaultValue);1531966442;Return the session attribute value, or a default, fallback value._@param name the attribute name_@param defaultValue a default value to return instead_@param <T> the attribute type_@return the attribute value;@SuppressWarnings("unchecked")_	default <T> T getAttributeOrDefault(String name, T defaultValue) {_		return (T) getAttributes().getOrDefault(name, defaultValue)__	};return,the,session,attribute,value,or,a,default,fallback,value,param,name,the,attribute,name,param,default,value,a,default,value,to,return,instead,param,t,the,attribute,type,return,the,attribute,value;suppress,warnings,unchecked,default,t,t,get,attribute,or,default,string,name,t,default,value,return,t,get,attributes,get,or,default,name,default,value
WebSession -> @SuppressWarnings("unchecked") 	default <T> T getAttributeOrDefault(String name, T defaultValue);1531992433;Return the session attribute value, or a default, fallback value._@param name the attribute name_@param defaultValue a default value to return instead_@param <T> the attribute type_@return the attribute value;@SuppressWarnings("unchecked")_	default <T> T getAttributeOrDefault(String name, T defaultValue) {_		return (T) getAttributes().getOrDefault(name, defaultValue)__	};return,the,session,attribute,value,or,a,default,fallback,value,param,name,the,attribute,name,param,default,value,a,default,value,to,return,instead,param,t,the,attribute,type,return,the,attribute,value;suppress,warnings,unchecked,default,t,t,get,attribute,or,default,string,name,t,default,value,return,t,get,attributes,get,or,default,name,default,value
WebSession -> @SuppressWarnings("unchecked") 	default <T> T getAttributeOrDefault(String name, T defaultValue);1533034998;Return the session attribute value, or a default, fallback value._@param name the attribute name_@param defaultValue a default value to return instead_@param <T> the attribute type_@return the attribute value;@SuppressWarnings("unchecked")_	default <T> T getAttributeOrDefault(String name, T defaultValue) {_		return (T) getAttributes().getOrDefault(name, defaultValue)__	};return,the,session,attribute,value,or,a,default,fallback,value,param,name,the,attribute,name,param,default,value,a,default,value,to,return,instead,param,t,the,attribute,type,return,the,attribute,value;suppress,warnings,unchecked,default,t,t,get,attribute,or,default,string,name,t,default,value,return,t,get,attributes,get,or,default,name,default,value
WebSession -> @SuppressWarnings("unchecked") 	default <T> T getRequiredAttribute(String name);1498764216;Return the session attribute value or if not present raise an_{@link IllegalArgumentException}._@param name the attribute name_@param <T> the attribute type_@return the attribute value;@SuppressWarnings("unchecked")_	default <T> T getRequiredAttribute(String name) {_		T value = getAttribute(name)__		Assert.notNull(value, "Required attribute '" + name + "' is missing.")__		return value__	};return,the,session,attribute,value,or,if,not,present,raise,an,link,illegal,argument,exception,param,name,the,attribute,name,param,t,the,attribute,type,return,the,attribute,value;suppress,warnings,unchecked,default,t,t,get,required,attribute,string,name,t,value,get,attribute,name,assert,not,null,value,required,attribute,name,is,missing,return,value
WebSession -> @SuppressWarnings("unchecked") 	default <T> T getRequiredAttribute(String name);1500282578;Return the session attribute value or if not present raise an_{@link IllegalArgumentException}._@param name the attribute name_@param <T> the attribute type_@return the attribute value;@SuppressWarnings("unchecked")_	default <T> T getRequiredAttribute(String name) {_		T value = getAttribute(name)__		Assert.notNull(value, "Required attribute '" + name + "' is missing.")__		return value__	};return,the,session,attribute,value,or,if,not,present,raise,an,link,illegal,argument,exception,param,name,the,attribute,name,param,t,the,attribute,type,return,the,attribute,value;suppress,warnings,unchecked,default,t,t,get,required,attribute,string,name,t,value,get,attribute,name,assert,not,null,value,required,attribute,name,is,missing,return,value
WebSession -> @SuppressWarnings("unchecked") 	default <T> T getRequiredAttribute(String name);1506485438;Return the session attribute value or if not present raise an_{@link IllegalArgumentException}._@param name the attribute name_@param <T> the attribute type_@return the attribute value;@SuppressWarnings("unchecked")_	default <T> T getRequiredAttribute(String name) {_		T value = getAttribute(name)__		Assert.notNull(value, "Required attribute '" + name + "' is missing.")__		return value__	};return,the,session,attribute,value,or,if,not,present,raise,an,link,illegal,argument,exception,param,name,the,attribute,name,param,t,the,attribute,type,return,the,attribute,value;suppress,warnings,unchecked,default,t,t,get,required,attribute,string,name,t,value,get,attribute,name,assert,not,null,value,required,attribute,name,is,missing,return,value
WebSession -> @SuppressWarnings("unchecked") 	default <T> T getRequiredAttribute(String name);1531966442;Return the session attribute value or if not present raise an_{@link IllegalArgumentException}._@param name the attribute name_@param <T> the attribute type_@return the attribute value;@SuppressWarnings("unchecked")_	default <T> T getRequiredAttribute(String name) {_		T value = getAttribute(name)__		Assert.notNull(value, "Required attribute '" + name + "' is missing.")__		return value__	};return,the,session,attribute,value,or,if,not,present,raise,an,link,illegal,argument,exception,param,name,the,attribute,name,param,t,the,attribute,type,return,the,attribute,value;suppress,warnings,unchecked,default,t,t,get,required,attribute,string,name,t,value,get,attribute,name,assert,not,null,value,required,attribute,name,is,missing,return,value
WebSession -> @SuppressWarnings("unchecked") 	default <T> T getRequiredAttribute(String name);1531992433;Return the session attribute value or if not present raise an_{@link IllegalArgumentException}._@param name the attribute name_@param <T> the attribute type_@return the attribute value;@SuppressWarnings("unchecked")_	default <T> T getRequiredAttribute(String name) {_		T value = getAttribute(name)__		Assert.notNull(value, "Required attribute '" + name + "' is missing.")__		return value__	};return,the,session,attribute,value,or,if,not,present,raise,an,link,illegal,argument,exception,param,name,the,attribute,name,param,t,the,attribute,type,return,the,attribute,value;suppress,warnings,unchecked,default,t,t,get,required,attribute,string,name,t,value,get,attribute,name,assert,not,null,value,required,attribute,name,is,missing,return,value
WebSession -> @SuppressWarnings("unchecked") 	default <T> T getRequiredAttribute(String name);1533034998;Return the session attribute value or if not present raise an_{@link IllegalArgumentException}._@param name the attribute name_@param <T> the attribute type_@return the attribute value;@SuppressWarnings("unchecked")_	default <T> T getRequiredAttribute(String name) {_		T value = getAttribute(name)__		Assert.notNull(value, () -> "Required attribute '" + name + "' is missing.")__		return value__	};return,the,session,attribute,value,or,if,not,present,raise,an,link,illegal,argument,exception,param,name,the,attribute,name,param,t,the,attribute,type,return,the,attribute,value;suppress,warnings,unchecked,default,t,t,get,required,attribute,string,name,t,value,get,attribute,name,assert,not,null,value,required,attribute,name,is,missing,return,value
WebSession -> String getId()_;1468513835;Return a unique session identifier.;String getId()_;return,a,unique,session,identifier;string,get,id
WebSession -> String getId()_;1468532417;Return a unique session identifier.;String getId()_;return,a,unique,session,identifier;string,get,id
WebSession -> String getId()_;1472594294;Return a unique session identifier.;String getId()_;return,a,unique,session,identifier;string,get,id
WebSession -> String getId()_;1498764216;Return a unique session identifier.;String getId()_;return,a,unique,session,identifier;string,get,id
WebSession -> String getId()_;1500282578;Return a unique session identifier.;String getId()_;return,a,unique,session,identifier;string,get,id
WebSession -> String getId()_;1506485438;Return a unique session identifier.;String getId()_;return,a,unique,session,identifier;string,get,id
WebSession -> String getId()_;1531966442;Return a unique session identifier.;String getId()_;return,a,unique,session,identifier;string,get,id
WebSession -> String getId()_;1531992433;Return a unique session identifier.;String getId()_;return,a,unique,session,identifier;string,get,id
WebSession -> String getId()_;1533034998;Return a unique session identifier.;String getId()_;return,a,unique,session,identifier;string,get,id
WebSession -> boolean isExpired()_;1468513835;Return {@code true} if the session expired after {@link #getMaxIdleTime()_maxIdleTime} elapsed._<p>Typically expiration checks should be automatically made when a session_is accessed, a new {@code WebSession} instance created if necessary, at_the start of request processing so that applications don't have to worry_about expired session by default.;boolean isExpired()_;return,code,true,if,the,session,expired,after,link,get,max,idle,time,max,idle,time,elapsed,p,typically,expiration,checks,should,be,automatically,made,when,a,session,is,accessed,a,new,code,web,session,instance,created,if,necessary,at,the,start,of,request,processing,so,that,applications,don,t,have,to,worry,about,expired,session,by,default;boolean,is,expired
WebSession -> boolean isExpired()_;1468532417;Return {@code true} if the session expired after {@link #getMaxIdleTime()_maxIdleTime} elapsed._<p>Typically expiration checks should be automatically made when a session_is accessed, a new {@code WebSession} instance created if necessary, at_the start of request processing so that applications don't have to worry_about expired session by default.;boolean isExpired()_;return,code,true,if,the,session,expired,after,link,get,max,idle,time,max,idle,time,elapsed,p,typically,expiration,checks,should,be,automatically,made,when,a,session,is,accessed,a,new,code,web,session,instance,created,if,necessary,at,the,start,of,request,processing,so,that,applications,don,t,have,to,worry,about,expired,session,by,default;boolean,is,expired
WebSession -> boolean isExpired()_;1472594294;Return {@code true} if the session expired after {@link #getMaxIdleTime()_maxIdleTime} elapsed._<p>Typically expiration checks should be automatically made when a session_is accessed, a new {@code WebSession} instance created if necessary, at_the start of request processing so that applications don't have to worry_about expired session by default.;boolean isExpired()_;return,code,true,if,the,session,expired,after,link,get,max,idle,time,max,idle,time,elapsed,p,typically,expiration,checks,should,be,automatically,made,when,a,session,is,accessed,a,new,code,web,session,instance,created,if,necessary,at,the,start,of,request,processing,so,that,applications,don,t,have,to,worry,about,expired,session,by,default;boolean,is,expired
WebSession -> boolean isExpired()_;1498764216;Return {@code true} if the session expired after {@link #getMaxIdleTime()_maxIdleTime} elapsed._<p>Typically expiration checks should be automatically made when a session_is accessed, a new {@code WebSession} instance created if necessary, at_the start of request processing so that applications don't have to worry_about expired session by default.;boolean isExpired()_;return,code,true,if,the,session,expired,after,link,get,max,idle,time,max,idle,time,elapsed,p,typically,expiration,checks,should,be,automatically,made,when,a,session,is,accessed,a,new,code,web,session,instance,created,if,necessary,at,the,start,of,request,processing,so,that,applications,don,t,have,to,worry,about,expired,session,by,default;boolean,is,expired
WebSession -> boolean isExpired()_;1500282578;Return {@code true} if the session expired after {@link #getMaxIdleTime()_maxIdleTime} elapsed._<p>Typically expiration checks should be automatically made when a session_is accessed, a new {@code WebSession} instance created if necessary, at_the start of request processing so that applications don't have to worry_about expired session by default.;boolean isExpired()_;return,code,true,if,the,session,expired,after,link,get,max,idle,time,max,idle,time,elapsed,p,typically,expiration,checks,should,be,automatically,made,when,a,session,is,accessed,a,new,code,web,session,instance,created,if,necessary,at,the,start,of,request,processing,so,that,applications,don,t,have,to,worry,about,expired,session,by,default;boolean,is,expired
WebSession -> boolean isExpired()_;1506485438;Return {@code true} if the session expired after {@link #getMaxIdleTime()_maxIdleTime} elapsed._<p>Typically expiration checks should be automatically made when a session_is accessed, a new {@code WebSession} instance created if necessary, at_the start of request processing so that applications don't have to worry_about expired session by default.;boolean isExpired()_;return,code,true,if,the,session,expired,after,link,get,max,idle,time,max,idle,time,elapsed,p,typically,expiration,checks,should,be,automatically,made,when,a,session,is,accessed,a,new,code,web,session,instance,created,if,necessary,at,the,start,of,request,processing,so,that,applications,don,t,have,to,worry,about,expired,session,by,default;boolean,is,expired
WebSession -> boolean isExpired()_;1531966442;Return {@code true} if the session expired after {@link #getMaxIdleTime()_maxIdleTime} elapsed._<p>Typically expiration checks should be automatically made when a session_is accessed, a new {@code WebSession} instance created if necessary, at_the start of request processing so that applications don't have to worry_about expired session by default.;boolean isExpired()_;return,code,true,if,the,session,expired,after,link,get,max,idle,time,max,idle,time,elapsed,p,typically,expiration,checks,should,be,automatically,made,when,a,session,is,accessed,a,new,code,web,session,instance,created,if,necessary,at,the,start,of,request,processing,so,that,applications,don,t,have,to,worry,about,expired,session,by,default;boolean,is,expired
WebSession -> boolean isExpired()_;1531992433;Return {@code true} if the session expired after {@link #getMaxIdleTime()_maxIdleTime} elapsed._<p>Typically expiration checks should be automatically made when a session_is accessed, a new {@code WebSession} instance created if necessary, at_the start of request processing so that applications don't have to worry_about expired session by default.;boolean isExpired()_;return,code,true,if,the,session,expired,after,link,get,max,idle,time,max,idle,time,elapsed,p,typically,expiration,checks,should,be,automatically,made,when,a,session,is,accessed,a,new,code,web,session,instance,created,if,necessary,at,the,start,of,request,processing,so,that,applications,don,t,have,to,worry,about,expired,session,by,default;boolean,is,expired
WebSession -> boolean isExpired()_;1533034998;Return {@code true} if the session expired after {@link #getMaxIdleTime()_maxIdleTime} elapsed._<p>Typically expiration checks should be automatically made when a session_is accessed, a new {@code WebSession} instance created if necessary, at_the start of request processing so that applications don't have to worry_about expired session by default.;boolean isExpired()_;return,code,true,if,the,session,expired,after,link,get,max,idle,time,max,idle,time,elapsed,p,typically,expiration,checks,should,be,automatically,made,when,a,session,is,accessed,a,new,code,web,session,instance,created,if,necessary,at,the,start,of,request,processing,so,that,applications,don,t,have,to,worry,about,expired,session,by,default;boolean,is,expired
WebSession -> @SuppressWarnings("unchecked") 	@Nullable 	default <T> T getAttribute(String name);1498764216;Return the session attribute value if present._@param name the attribute name_@param <T> the attribute type_@return the attribute value;@SuppressWarnings("unchecked")_	@Nullable_	default <T> T getAttribute(String name) {_		return (T) getAttributes().get(name)__	};return,the,session,attribute,value,if,present,param,name,the,attribute,name,param,t,the,attribute,type,return,the,attribute,value;suppress,warnings,unchecked,nullable,default,t,t,get,attribute,string,name,return,t,get,attributes,get,name
WebSession -> @SuppressWarnings("unchecked") 	@Nullable 	default <T> T getAttribute(String name);1500282578;Return the session attribute value if present._@param name the attribute name_@param <T> the attribute type_@return the attribute value;@SuppressWarnings("unchecked")_	@Nullable_	default <T> T getAttribute(String name) {_		return (T) getAttributes().get(name)__	};return,the,session,attribute,value,if,present,param,name,the,attribute,name,param,t,the,attribute,type,return,the,attribute,value;suppress,warnings,unchecked,nullable,default,t,t,get,attribute,string,name,return,t,get,attributes,get,name
WebSession -> @SuppressWarnings("unchecked") 	@Nullable 	default <T> T getAttribute(String name);1506485438;Return the session attribute value if present._@param name the attribute name_@param <T> the attribute type_@return the attribute value;@SuppressWarnings("unchecked")_	@Nullable_	default <T> T getAttribute(String name) {_		return (T) getAttributes().get(name)__	};return,the,session,attribute,value,if,present,param,name,the,attribute,name,param,t,the,attribute,type,return,the,attribute,value;suppress,warnings,unchecked,nullable,default,t,t,get,attribute,string,name,return,t,get,attributes,get,name
WebSession -> @SuppressWarnings("unchecked") 	@Nullable 	default <T> T getAttribute(String name);1531966442;Return the session attribute value if present._@param name the attribute name_@param <T> the attribute type_@return the attribute value;@SuppressWarnings("unchecked")_	@Nullable_	default <T> T getAttribute(String name) {_		return (T) getAttributes().get(name)__	};return,the,session,attribute,value,if,present,param,name,the,attribute,name,param,t,the,attribute,type,return,the,attribute,value;suppress,warnings,unchecked,nullable,default,t,t,get,attribute,string,name,return,t,get,attributes,get,name
WebSession -> @SuppressWarnings("unchecked") 	@Nullable 	default <T> T getAttribute(String name);1531992433;Return the session attribute value if present._@param name the attribute name_@param <T> the attribute type_@return the attribute value;@SuppressWarnings("unchecked")_	@Nullable_	default <T> T getAttribute(String name) {_		return (T) getAttributes().get(name)__	};return,the,session,attribute,value,if,present,param,name,the,attribute,name,param,t,the,attribute,type,return,the,attribute,value;suppress,warnings,unchecked,nullable,default,t,t,get,attribute,string,name,return,t,get,attributes,get,name
WebSession -> @SuppressWarnings("unchecked") 	@Nullable 	default <T> T getAttribute(String name);1533034998;Return the session attribute value if present._@param name the attribute name_@param <T> the attribute type_@return the attribute value;@SuppressWarnings("unchecked")_	@Nullable_	default <T> T getAttribute(String name) {_		return (T) getAttributes().get(name)__	};return,the,session,attribute,value,if,present,param,name,the,attribute,name,param,t,the,attribute,type,return,the,attribute,value;suppress,warnings,unchecked,nullable,default,t,t,get,attribute,string,name,return,t,get,attributes,get,name
WebSession -> Mono<Void> changeSessionId()_;1500282578;Generate a new id for the session and update the underlying session_storage to reflect the new id. After a successful call {@link #getId()}_reflects the new session id._@return completion notification (success or error);Mono<Void> changeSessionId()_;generate,a,new,id,for,the,session,and,update,the,underlying,session,storage,to,reflect,the,new,id,after,a,successful,call,link,get,id,reflects,the,new,session,id,return,completion,notification,success,or,error;mono,void,change,session,id
WebSession -> Mono<Void> changeSessionId()_;1506485438;Generate a new id for the session and update the underlying session_storage to reflect the new id. After a successful call {@link #getId()}_reflects the new session id._@return completion notification (success or error);Mono<Void> changeSessionId()_;generate,a,new,id,for,the,session,and,update,the,underlying,session,storage,to,reflect,the,new,id,after,a,successful,call,link,get,id,reflects,the,new,session,id,return,completion,notification,success,or,error;mono,void,change,session,id
WebSession -> Mono<Void> changeSessionId()_;1531966442;Generate a new id for the session and update the underlying session_storage to reflect the new id. After a successful call {@link #getId()}_reflects the new session id._@return completion notification (success or error);Mono<Void> changeSessionId()_;generate,a,new,id,for,the,session,and,update,the,underlying,session,storage,to,reflect,the,new,id,after,a,successful,call,link,get,id,reflects,the,new,session,id,return,completion,notification,success,or,error;mono,void,change,session,id
WebSession -> Mono<Void> changeSessionId()_;1531992433;Generate a new id for the session and update the underlying session_storage to reflect the new id. After a successful call {@link #getId()}_reflects the new session id._@return completion notification (success or error);Mono<Void> changeSessionId()_;generate,a,new,id,for,the,session,and,update,the,underlying,session,storage,to,reflect,the,new,id,after,a,successful,call,link,get,id,reflects,the,new,session,id,return,completion,notification,success,or,error;mono,void,change,session,id
WebSession -> Mono<Void> changeSessionId()_;1533034998;Generate a new id for the session and update the underlying session_storage to reflect the new id. After a successful call {@link #getId()}_reflects the new session id._@return completion notification (success or error);Mono<Void> changeSessionId()_;generate,a,new,id,for,the,session,and,update,the,underlying,session,storage,to,reflect,the,new,id,after,a,successful,call,link,get,id,reflects,the,new,session,id,return,completion,notification,success,or,error;mono,void,change,session,id
WebSession -> Map<String, Object> getAttributes()_;1468513835;Return a map that holds session attributes.;Map<String, Object> getAttributes()_;return,a,map,that,holds,session,attributes;map,string,object,get,attributes
WebSession -> Map<String, Object> getAttributes()_;1468532417;Return a map that holds session attributes.;Map<String, Object> getAttributes()_;return,a,map,that,holds,session,attributes;map,string,object,get,attributes
WebSession -> Map<String, Object> getAttributes()_;1472594294;Return a map that holds session attributes.;Map<String, Object> getAttributes()_;return,a,map,that,holds,session,attributes;map,string,object,get,attributes
WebSession -> Map<String, Object> getAttributes()_;1498764216;Return a map that holds session attributes.;Map<String, Object> getAttributes()_;return,a,map,that,holds,session,attributes;map,string,object,get,attributes
WebSession -> Map<String, Object> getAttributes()_;1500282578;Return a map that holds session attributes.;Map<String, Object> getAttributes()_;return,a,map,that,holds,session,attributes;map,string,object,get,attributes
WebSession -> Map<String, Object> getAttributes()_;1506485438;Return a map that holds session attributes.;Map<String, Object> getAttributes()_;return,a,map,that,holds,session,attributes;map,string,object,get,attributes
WebSession -> Map<String, Object> getAttributes()_;1531966442;Return a map that holds session attributes.;Map<String, Object> getAttributes()_;return,a,map,that,holds,session,attributes;map,string,object,get,attributes
WebSession -> Map<String, Object> getAttributes()_;1531992433;Return a map that holds session attributes.;Map<String, Object> getAttributes()_;return,a,map,that,holds,session,attributes;map,string,object,get,attributes
WebSession -> Map<String, Object> getAttributes()_;1533034998;Return a map that holds session attributes.;Map<String, Object> getAttributes()_;return,a,map,that,holds,session,attributes;map,string,object,get,attributes
WebSession -> boolean isStarted()_;1468513835;Whether a session with the client has been started explicitly via_{@link #start()} or implicitly by adding session attributes._If "false" then the session id is not sent to the client and the_{@link #save()} method is essentially a no-op.;boolean isStarted()_;whether,a,session,with,the,client,has,been,started,explicitly,via,link,start,or,implicitly,by,adding,session,attributes,if,false,then,the,session,id,is,not,sent,to,the,client,and,the,link,save,method,is,essentially,a,no,op;boolean,is,started
WebSession -> boolean isStarted()_;1468532417;Whether a session with the client has been started explicitly via_{@link #start()} or implicitly by adding session attributes._If "false" then the session id is not sent to the client and the_{@link #save()} method is essentially a no-op.;boolean isStarted()_;whether,a,session,with,the,client,has,been,started,explicitly,via,link,start,or,implicitly,by,adding,session,attributes,if,false,then,the,session,id,is,not,sent,to,the,client,and,the,link,save,method,is,essentially,a,no,op;boolean,is,started
WebSession -> boolean isStarted()_;1472594294;Whether a session with the client has been started explicitly via_{@link #start()} or implicitly by adding session attributes._If "false" then the session id is not sent to the client and the_{@link #save()} method is essentially a no-op.;boolean isStarted()_;whether,a,session,with,the,client,has,been,started,explicitly,via,link,start,or,implicitly,by,adding,session,attributes,if,false,then,the,session,id,is,not,sent,to,the,client,and,the,link,save,method,is,essentially,a,no,op;boolean,is,started
WebSession -> boolean isStarted()_;1498764216;Whether a session with the client has been started explicitly via_{@link #start()} or implicitly by adding session attributes._If "false" then the session id is not sent to the client and the_{@link #save()} method is essentially a no-op.;boolean isStarted()_;whether,a,session,with,the,client,has,been,started,explicitly,via,link,start,or,implicitly,by,adding,session,attributes,if,false,then,the,session,id,is,not,sent,to,the,client,and,the,link,save,method,is,essentially,a,no,op;boolean,is,started
WebSession -> boolean isStarted()_;1500282578;Whether a session with the client has been started explicitly via_{@link #start()} or implicitly by adding session attributes._If "false" then the session id is not sent to the client and the_{@link #save()} method is essentially a no-op.;boolean isStarted()_;whether,a,session,with,the,client,has,been,started,explicitly,via,link,start,or,implicitly,by,adding,session,attributes,if,false,then,the,session,id,is,not,sent,to,the,client,and,the,link,save,method,is,essentially,a,no,op;boolean,is,started
WebSession -> boolean isStarted()_;1506485438;Whether a session with the client has been started explicitly via_{@link #start()} or implicitly by adding session attributes._If "false" then the session id is not sent to the client and the_{@link #save()} method is essentially a no-op.;boolean isStarted()_;whether,a,session,with,the,client,has,been,started,explicitly,via,link,start,or,implicitly,by,adding,session,attributes,if,false,then,the,session,id,is,not,sent,to,the,client,and,the,link,save,method,is,essentially,a,no,op;boolean,is,started
WebSession -> boolean isStarted()_;1531966442;Whether a session with the client has been started explicitly via_{@link #start()} or implicitly by adding session attributes._If "false" then the session id is not sent to the client and the_{@link #save()} method is essentially a no-op.;boolean isStarted()_;whether,a,session,with,the,client,has,been,started,explicitly,via,link,start,or,implicitly,by,adding,session,attributes,if,false,then,the,session,id,is,not,sent,to,the,client,and,the,link,save,method,is,essentially,a,no,op;boolean,is,started
WebSession -> boolean isStarted()_;1531992433;Whether a session with the client has been started explicitly via_{@link #start()} or implicitly by adding session attributes._If "false" then the session id is not sent to the client and the_{@link #save()} method is essentially a no-op.;boolean isStarted()_;whether,a,session,with,the,client,has,been,started,explicitly,via,link,start,or,implicitly,by,adding,session,attributes,if,false,then,the,session,id,is,not,sent,to,the,client,and,the,link,save,method,is,essentially,a,no,op;boolean,is,started
WebSession -> boolean isStarted()_;1533034998;Whether a session with the client has been started explicitly via_{@link #start()} or implicitly by adding session attributes._If "false" then the session id is not sent to the client and the_{@link #save()} method is essentially a no-op.;boolean isStarted()_;whether,a,session,with,the,client,has,been,started,explicitly,via,link,start,or,implicitly,by,adding,session,attributes,if,false,then,the,session,id,is,not,sent,to,the,client,and,the,link,save,method,is,essentially,a,no,op;boolean,is,started
WebSession -> void start()_;1468513835;Force the creation of a session causing the session id to be sent when_{@link #save()} is called.;void start()_;force,the,creation,of,a,session,causing,the,session,id,to,be,sent,when,link,save,is,called;void,start
WebSession -> void start()_;1468532417;Force the creation of a session causing the session id to be sent when_{@link #save()} is called.;void start()_;force,the,creation,of,a,session,causing,the,session,id,to,be,sent,when,link,save,is,called;void,start
WebSession -> void start()_;1472594294;Force the creation of a session causing the session id to be sent when_{@link #save()} is called.;void start()_;force,the,creation,of,a,session,causing,the,session,id,to,be,sent,when,link,save,is,called;void,start
WebSession -> void start()_;1498764216;Force the creation of a session causing the session id to be sent when_{@link #save()} is called.;void start()_;force,the,creation,of,a,session,causing,the,session,id,to,be,sent,when,link,save,is,called;void,start
WebSession -> void start()_;1500282578;Force the creation of a session causing the session id to be sent when_{@link #save()} is called.;void start()_;force,the,creation,of,a,session,causing,the,session,id,to,be,sent,when,link,save,is,called;void,start
WebSession -> void start()_;1506485438;Force the creation of a session causing the session id to be sent when_{@link #save()} is called.;void start()_;force,the,creation,of,a,session,causing,the,session,id,to,be,sent,when,link,save,is,called;void,start
WebSession -> void start()_;1531966442;Force the creation of a session causing the session id to be sent when_{@link #save()} is called.;void start()_;force,the,creation,of,a,session,causing,the,session,id,to,be,sent,when,link,save,is,called;void,start
WebSession -> void start()_;1531992433;Force the creation of a session causing the session id to be sent when_{@link #save()} is called.;void start()_;force,the,creation,of,a,session,causing,the,session,id,to,be,sent,when,link,save,is,called;void,start
WebSession -> void start()_;1533034998;Force the creation of a session causing the session id to be sent when_{@link #save()} is called.;void start()_;force,the,creation,of,a,session,causing,the,session,id,to,be,sent,when,link,save,is,called;void,start
WebSession -> Instant getCreationTime()_;1468513835;Return the time when the session was created.;Instant getCreationTime()_;return,the,time,when,the,session,was,created;instant,get,creation,time
WebSession -> Instant getCreationTime()_;1468532417;Return the time when the session was created.;Instant getCreationTime()_;return,the,time,when,the,session,was,created;instant,get,creation,time
WebSession -> Instant getCreationTime()_;1472594294;Return the time when the session was created.;Instant getCreationTime()_;return,the,time,when,the,session,was,created;instant,get,creation,time
WebSession -> Instant getCreationTime()_;1498764216;Return the time when the session was created.;Instant getCreationTime()_;return,the,time,when,the,session,was,created;instant,get,creation,time
WebSession -> Instant getCreationTime()_;1500282578;Return the time when the session was created.;Instant getCreationTime()_;return,the,time,when,the,session,was,created;instant,get,creation,time
WebSession -> Instant getCreationTime()_;1506485438;Return the time when the session was created.;Instant getCreationTime()_;return,the,time,when,the,session,was,created;instant,get,creation,time
WebSession -> Instant getCreationTime()_;1531966442;Return the time when the session was created.;Instant getCreationTime()_;return,the,time,when,the,session,was,created;instant,get,creation,time
WebSession -> Instant getCreationTime()_;1531992433;Return the time when the session was created.;Instant getCreationTime()_;return,the,time,when,the,session,was,created;instant,get,creation,time
WebSession -> Instant getCreationTime()_;1533034998;Return the time when the session was created.;Instant getCreationTime()_;return,the,time,when,the,session,was,created;instant,get,creation,time
WebSession -> Instant getLastAccessTime()_;1468513835;Return the last time of session access as a result of user activity such_as an HTTP request. Together with {@link #getMaxIdleTime()_maxIdleTimeInSeconds} this helps to determine when a session is_{@link #isExpired() expired}.;Instant getLastAccessTime()_;return,the,last,time,of,session,access,as,a,result,of,user,activity,such,as,an,http,request,together,with,link,get,max,idle,time,max,idle,time,in,seconds,this,helps,to,determine,when,a,session,is,link,is,expired,expired;instant,get,last,access,time
WebSession -> Instant getLastAccessTime()_;1468532417;Return the last time of session access as a result of user activity such_as an HTTP request. Together with {@link #getMaxIdleTime()_maxIdleTimeInSeconds} this helps to determine when a session is_{@link #isExpired() expired}.;Instant getLastAccessTime()_;return,the,last,time,of,session,access,as,a,result,of,user,activity,such,as,an,http,request,together,with,link,get,max,idle,time,max,idle,time,in,seconds,this,helps,to,determine,when,a,session,is,link,is,expired,expired;instant,get,last,access,time
WebSession -> Instant getLastAccessTime()_;1472594294;Return the last time of session access as a result of user activity such_as an HTTP request. Together with {@link #getMaxIdleTime()_maxIdleTimeInSeconds} this helps to determine when a session is_{@link #isExpired() expired}.;Instant getLastAccessTime()_;return,the,last,time,of,session,access,as,a,result,of,user,activity,such,as,an,http,request,together,with,link,get,max,idle,time,max,idle,time,in,seconds,this,helps,to,determine,when,a,session,is,link,is,expired,expired;instant,get,last,access,time
WebSession -> Instant getLastAccessTime()_;1498764216;Return the last time of session access as a result of user activity such_as an HTTP request. Together with {@link #getMaxIdleTime()_maxIdleTimeInSeconds} this helps to determine when a session is_{@link #isExpired() expired}.;Instant getLastAccessTime()_;return,the,last,time,of,session,access,as,a,result,of,user,activity,such,as,an,http,request,together,with,link,get,max,idle,time,max,idle,time,in,seconds,this,helps,to,determine,when,a,session,is,link,is,expired,expired;instant,get,last,access,time
WebSession -> Instant getLastAccessTime()_;1500282578;Return the last time of session access as a result of user activity such_as an HTTP request. Together with {@link #getMaxIdleTime()_maxIdleTimeInSeconds} this helps to determine when a session is_{@link #isExpired() expired}.;Instant getLastAccessTime()_;return,the,last,time,of,session,access,as,a,result,of,user,activity,such,as,an,http,request,together,with,link,get,max,idle,time,max,idle,time,in,seconds,this,helps,to,determine,when,a,session,is,link,is,expired,expired;instant,get,last,access,time
WebSession -> Instant getLastAccessTime()_;1506485438;Return the last time of session access as a result of user activity such_as an HTTP request. Together with {@link #getMaxIdleTime()_maxIdleTimeInSeconds} this helps to determine when a session is_{@link #isExpired() expired}.;Instant getLastAccessTime()_;return,the,last,time,of,session,access,as,a,result,of,user,activity,such,as,an,http,request,together,with,link,get,max,idle,time,max,idle,time,in,seconds,this,helps,to,determine,when,a,session,is,link,is,expired,expired;instant,get,last,access,time
WebSession -> Instant getLastAccessTime()_;1531966442;Return the last time of session access as a result of user activity such_as an HTTP request. Together with {@link #getMaxIdleTime()_maxIdleTimeInSeconds} this helps to determine when a session is_{@link #isExpired() expired}.;Instant getLastAccessTime()_;return,the,last,time,of,session,access,as,a,result,of,user,activity,such,as,an,http,request,together,with,link,get,max,idle,time,max,idle,time,in,seconds,this,helps,to,determine,when,a,session,is,link,is,expired,expired;instant,get,last,access,time
WebSession -> Instant getLastAccessTime()_;1531992433;Return the last time of session access as a result of user activity such_as an HTTP request. Together with {@link #getMaxIdleTime()_maxIdleTimeInSeconds} this helps to determine when a session is_{@link #isExpired() expired}.;Instant getLastAccessTime()_;return,the,last,time,of,session,access,as,a,result,of,user,activity,such,as,an,http,request,together,with,link,get,max,idle,time,max,idle,time,in,seconds,this,helps,to,determine,when,a,session,is,link,is,expired,expired;instant,get,last,access,time
WebSession -> Instant getLastAccessTime()_;1533034998;Return the last time of session access as a result of user activity such_as an HTTP request. Together with {@link #getMaxIdleTime()_maxIdleTimeInSeconds} this helps to determine when a session is_{@link #isExpired() expired}.;Instant getLastAccessTime()_;return,the,last,time,of,session,access,as,a,result,of,user,activity,such,as,an,http,request,together,with,link,get,max,idle,time,max,idle,time,in,seconds,this,helps,to,determine,when,a,session,is,link,is,expired,expired;instant,get,last,access,time
WebSession -> void setMaxIdleTime(Duration maxIdleTime)_;1468513835;Configure the max amount of time that may elapse after the_{@link #getLastAccessTime() lastAccessTime} before a session is considered_expired. A negative value indicates the session should not expire.;void setMaxIdleTime(Duration maxIdleTime)_;configure,the,max,amount,of,time,that,may,elapse,after,the,link,get,last,access,time,last,access,time,before,a,session,is,considered,expired,a,negative,value,indicates,the,session,should,not,expire;void,set,max,idle,time,duration,max,idle,time
WebSession -> void setMaxIdleTime(Duration maxIdleTime)_;1468532417;Configure the max amount of time that may elapse after the_{@link #getLastAccessTime() lastAccessTime} before a session is considered_expired. A negative value indicates the session should not expire.;void setMaxIdleTime(Duration maxIdleTime)_;configure,the,max,amount,of,time,that,may,elapse,after,the,link,get,last,access,time,last,access,time,before,a,session,is,considered,expired,a,negative,value,indicates,the,session,should,not,expire;void,set,max,idle,time,duration,max,idle,time
WebSession -> void setMaxIdleTime(Duration maxIdleTime)_;1472594294;Configure the max amount of time that may elapse after the_{@link #getLastAccessTime() lastAccessTime} before a session is considered_expired. A negative value indicates the session should not expire.;void setMaxIdleTime(Duration maxIdleTime)_;configure,the,max,amount,of,time,that,may,elapse,after,the,link,get,last,access,time,last,access,time,before,a,session,is,considered,expired,a,negative,value,indicates,the,session,should,not,expire;void,set,max,idle,time,duration,max,idle,time
WebSession -> void setMaxIdleTime(Duration maxIdleTime)_;1498764216;Configure the max amount of time that may elapse after the_{@link #getLastAccessTime() lastAccessTime} before a session is considered_expired. A negative value indicates the session should not expire.;void setMaxIdleTime(Duration maxIdleTime)_;configure,the,max,amount,of,time,that,may,elapse,after,the,link,get,last,access,time,last,access,time,before,a,session,is,considered,expired,a,negative,value,indicates,the,session,should,not,expire;void,set,max,idle,time,duration,max,idle,time
WebSession -> void setMaxIdleTime(Duration maxIdleTime)_;1500282578;Configure the max amount of time that may elapse after the_{@link #getLastAccessTime() lastAccessTime} before a session is considered_expired. A negative value indicates the session should not expire.;void setMaxIdleTime(Duration maxIdleTime)_;configure,the,max,amount,of,time,that,may,elapse,after,the,link,get,last,access,time,last,access,time,before,a,session,is,considered,expired,a,negative,value,indicates,the,session,should,not,expire;void,set,max,idle,time,duration,max,idle,time
WebSession -> void setMaxIdleTime(Duration maxIdleTime)_;1506485438;Configure the max amount of time that may elapse after the_{@link #getLastAccessTime() lastAccessTime} before a session is considered_expired. A negative value indicates the session should not expire.;void setMaxIdleTime(Duration maxIdleTime)_;configure,the,max,amount,of,time,that,may,elapse,after,the,link,get,last,access,time,last,access,time,before,a,session,is,considered,expired,a,negative,value,indicates,the,session,should,not,expire;void,set,max,idle,time,duration,max,idle,time
WebSession -> void setMaxIdleTime(Duration maxIdleTime)_;1531966442;Configure the max amount of time that may elapse after the_{@link #getLastAccessTime() lastAccessTime} before a session is considered_expired. A negative value indicates the session should not expire.;void setMaxIdleTime(Duration maxIdleTime)_;configure,the,max,amount,of,time,that,may,elapse,after,the,link,get,last,access,time,last,access,time,before,a,session,is,considered,expired,a,negative,value,indicates,the,session,should,not,expire;void,set,max,idle,time,duration,max,idle,time
WebSession -> void setMaxIdleTime(Duration maxIdleTime)_;1531992433;Configure the max amount of time that may elapse after the_{@link #getLastAccessTime() lastAccessTime} before a session is considered_expired. A negative value indicates the session should not expire.;void setMaxIdleTime(Duration maxIdleTime)_;configure,the,max,amount,of,time,that,may,elapse,after,the,link,get,last,access,time,last,access,time,before,a,session,is,considered,expired,a,negative,value,indicates,the,session,should,not,expire;void,set,max,idle,time,duration,max,idle,time
WebSession -> void setMaxIdleTime(Duration maxIdleTime)_;1533034998;Configure the max amount of time that may elapse after the_{@link #getLastAccessTime() lastAccessTime} before a session is considered_expired. A negative value indicates the session should not expire.;void setMaxIdleTime(Duration maxIdleTime)_;configure,the,max,amount,of,time,that,may,elapse,after,the,link,get,last,access,time,last,access,time,before,a,session,is,considered,expired,a,negative,value,indicates,the,session,should,not,expire;void,set,max,idle,time,duration,max,idle,time
WebSession -> Duration getMaxIdleTime()_;1468513835;Return the maximum time after the {@link #getLastAccessTime()_lastAccessTime} before a session expires. A negative time indicates the_session doesn't expire.;Duration getMaxIdleTime()_;return,the,maximum,time,after,the,link,get,last,access,time,last,access,time,before,a,session,expires,a,negative,time,indicates,the,session,doesn,t,expire;duration,get,max,idle,time
WebSession -> Duration getMaxIdleTime()_;1468532417;Return the maximum time after the {@link #getLastAccessTime()_lastAccessTime} before a session expires. A negative time indicates the_session doesn't expire.;Duration getMaxIdleTime()_;return,the,maximum,time,after,the,link,get,last,access,time,last,access,time,before,a,session,expires,a,negative,time,indicates,the,session,doesn,t,expire;duration,get,max,idle,time
WebSession -> Duration getMaxIdleTime()_;1472594294;Return the maximum time after the {@link #getLastAccessTime()_lastAccessTime} before a session expires. A negative time indicates the_session doesn't expire.;Duration getMaxIdleTime()_;return,the,maximum,time,after,the,link,get,last,access,time,last,access,time,before,a,session,expires,a,negative,time,indicates,the,session,doesn,t,expire;duration,get,max,idle,time
WebSession -> Duration getMaxIdleTime()_;1498764216;Return the maximum time after the {@link #getLastAccessTime()_lastAccessTime} before a session expires. A negative time indicates the_session doesn't expire.;Duration getMaxIdleTime()_;return,the,maximum,time,after,the,link,get,last,access,time,last,access,time,before,a,session,expires,a,negative,time,indicates,the,session,doesn,t,expire;duration,get,max,idle,time
WebSession -> Duration getMaxIdleTime()_;1500282578;Return the maximum time after the {@link #getLastAccessTime()_lastAccessTime} before a session expires. A negative time indicates the_session doesn't expire.;Duration getMaxIdleTime()_;return,the,maximum,time,after,the,link,get,last,access,time,last,access,time,before,a,session,expires,a,negative,time,indicates,the,session,doesn,t,expire;duration,get,max,idle,time
WebSession -> Duration getMaxIdleTime()_;1506485438;Return the maximum time after the {@link #getLastAccessTime()_lastAccessTime} before a session expires. A negative time indicates the_session doesn't expire.;Duration getMaxIdleTime()_;return,the,maximum,time,after,the,link,get,last,access,time,last,access,time,before,a,session,expires,a,negative,time,indicates,the,session,doesn,t,expire;duration,get,max,idle,time
WebSession -> Duration getMaxIdleTime()_;1531966442;Return the maximum time after the {@link #getLastAccessTime()_lastAccessTime} before a session expires. A negative time indicates the_session doesn't expire.;Duration getMaxIdleTime()_;return,the,maximum,time,after,the,link,get,last,access,time,last,access,time,before,a,session,expires,a,negative,time,indicates,the,session,doesn,t,expire;duration,get,max,idle,time
WebSession -> Duration getMaxIdleTime()_;1531992433;Return the maximum time after the {@link #getLastAccessTime()_lastAccessTime} before a session expires. A negative time indicates the_session doesn't expire.;Duration getMaxIdleTime()_;return,the,maximum,time,after,the,link,get,last,access,time,last,access,time,before,a,session,expires,a,negative,time,indicates,the,session,doesn,t,expire;duration,get,max,idle,time
WebSession -> Duration getMaxIdleTime()_;1533034998;Return the maximum time after the {@link #getLastAccessTime()_lastAccessTime} before a session expires. A negative time indicates the_session doesn't expire.;Duration getMaxIdleTime()_;return,the,maximum,time,after,the,link,get,last,access,time,last,access,time,before,a,session,expires,a,negative,time,indicates,the,session,doesn,t,expire;duration,get,max,idle,time
WebSession -> Mono<Void> invalidate()_;1506485438;Invalidate the current session and clear session storage._@return completion notification (success or error);Mono<Void> invalidate()_;invalidate,the,current,session,and,clear,session,storage,return,completion,notification,success,or,error;mono,void,invalidate
WebSession -> Mono<Void> invalidate()_;1531966442;Invalidate the current session and clear session storage._@return completion notification (success or error);Mono<Void> invalidate()_;invalidate,the,current,session,and,clear,session,storage,return,completion,notification,success,or,error;mono,void,invalidate
WebSession -> Mono<Void> invalidate()_;1531992433;Invalidate the current session and clear session storage._@return completion notification (success or error);Mono<Void> invalidate()_;invalidate,the,current,session,and,clear,session,storage,return,completion,notification,success,or,error;mono,void,invalidate
WebSession -> Mono<Void> invalidate()_;1533034998;Invalidate the current session and clear session storage._@return completion notification (success or error);Mono<Void> invalidate()_;invalidate,the,current,session,and,clear,session,storage,return,completion,notification,success,or,error;mono,void,invalidate
